
Actuator_Test3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00029d14  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000027c4  08029ed8  08029ed8  00039ed8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000187e  0802c69c  0802c69c  0003c69c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000000f4  0802df1c  0802df1c  0003df1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0002ef90  0802e010  0802e010  0003e010  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000078  0805cfa0  0805cfa0  0006cfa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0805d018  0805d018  00070398  2**0
                  CONTENTS
  8 .ARM          00000008  0805d018  0805d018  0006d018  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0805d020  0805d020  00070398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0805d020  0805d020  0006d020  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   0000000c  0805d038  0805d038  0006d038  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000398  20000000  0805d044  00070000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00026230  20000398  0805d3dc  00070398  2**3
                  ALLOC
 14 ._user_heap_stack 00000600  200265c8  0805d3dc  000765c8  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00070398  2**0
                  CONTENTS, READONLY
 16 .comment      000000c2  00000000  00000000  000703c8  2**0
                  CONTENTS, READONLY
 17 .debug_info   00077a06  00000000  00000000  0007048a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0000e6fb  00000000  00000000  000e7e90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003048  00000000  00000000  000f6590  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00002421  00000000  00000000  000f95d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00034b35  00000000  00000000  000fb9f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00039635  00000000  00000000  0013052e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0012b2e2  00000000  00000000  00169b63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_frame  0000db0c  00000000  00000000  00294e48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_line_str 0000005d  00000000  00000000  002a2954  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000398 	.word	0x20000398
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08029ebc 	.word	0x08029ebc

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	2000039c 	.word	0x2000039c
 80001fc:	08029ebc 	.word	0x08029ebc

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_d2uiz>:
 8000bc8:	004a      	lsls	r2, r1, #1
 8000bca:	d211      	bcs.n	8000bf0 <__aeabi_d2uiz+0x28>
 8000bcc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bd0:	d211      	bcs.n	8000bf6 <__aeabi_d2uiz+0x2e>
 8000bd2:	d50d      	bpl.n	8000bf0 <__aeabi_d2uiz+0x28>
 8000bd4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bd8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bdc:	d40e      	bmi.n	8000bfc <__aeabi_d2uiz+0x34>
 8000bde:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000be2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000be6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bea:	fa23 f002 	lsr.w	r0, r3, r2
 8000bee:	4770      	bx	lr
 8000bf0:	f04f 0000 	mov.w	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bfa:	d102      	bne.n	8000c02 <__aeabi_d2uiz+0x3a>
 8000bfc:	f04f 30ff 	mov.w	r0, #4294967295
 8000c00:	4770      	bx	lr
 8000c02:	f04f 0000 	mov.w	r0, #0
 8000c06:	4770      	bx	lr

08000c08 <__aeabi_d2f>:
 8000c08:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c0c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c10:	bf24      	itt	cs
 8000c12:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c16:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c1a:	d90d      	bls.n	8000c38 <__aeabi_d2f+0x30>
 8000c1c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c20:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c24:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c28:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c2c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c30:	bf08      	it	eq
 8000c32:	f020 0001 	biceq.w	r0, r0, #1
 8000c36:	4770      	bx	lr
 8000c38:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c3c:	d121      	bne.n	8000c82 <__aeabi_d2f+0x7a>
 8000c3e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c42:	bfbc      	itt	lt
 8000c44:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c48:	4770      	bxlt	lr
 8000c4a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c4e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c52:	f1c2 0218 	rsb	r2, r2, #24
 8000c56:	f1c2 0c20 	rsb	ip, r2, #32
 8000c5a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c5e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c62:	bf18      	it	ne
 8000c64:	f040 0001 	orrne.w	r0, r0, #1
 8000c68:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c6c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c70:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c74:	ea40 000c 	orr.w	r0, r0, ip
 8000c78:	fa23 f302 	lsr.w	r3, r3, r2
 8000c7c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c80:	e7cc      	b.n	8000c1c <__aeabi_d2f+0x14>
 8000c82:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c86:	d107      	bne.n	8000c98 <__aeabi_d2f+0x90>
 8000c88:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c8c:	bf1e      	ittt	ne
 8000c8e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c92:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c96:	4770      	bxne	lr
 8000c98:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c9c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ca0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ca4:	4770      	bx	lr
 8000ca6:	bf00      	nop

08000ca8 <__aeabi_uldivmod>:
 8000ca8:	b953      	cbnz	r3, 8000cc0 <__aeabi_uldivmod+0x18>
 8000caa:	b94a      	cbnz	r2, 8000cc0 <__aeabi_uldivmod+0x18>
 8000cac:	2900      	cmp	r1, #0
 8000cae:	bf08      	it	eq
 8000cb0:	2800      	cmpeq	r0, #0
 8000cb2:	bf1c      	itt	ne
 8000cb4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cb8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cbc:	f000 b970 	b.w	8000fa0 <__aeabi_idiv0>
 8000cc0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cc4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cc8:	f000 f806 	bl	8000cd8 <__udivmoddi4>
 8000ccc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cd0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cd4:	b004      	add	sp, #16
 8000cd6:	4770      	bx	lr

08000cd8 <__udivmoddi4>:
 8000cd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cdc:	9e08      	ldr	r6, [sp, #32]
 8000cde:	460d      	mov	r5, r1
 8000ce0:	4604      	mov	r4, r0
 8000ce2:	460f      	mov	r7, r1
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	d14a      	bne.n	8000d7e <__udivmoddi4+0xa6>
 8000ce8:	428a      	cmp	r2, r1
 8000cea:	4694      	mov	ip, r2
 8000cec:	d965      	bls.n	8000dba <__udivmoddi4+0xe2>
 8000cee:	fab2 f382 	clz	r3, r2
 8000cf2:	b143      	cbz	r3, 8000d06 <__udivmoddi4+0x2e>
 8000cf4:	fa02 fc03 	lsl.w	ip, r2, r3
 8000cf8:	f1c3 0220 	rsb	r2, r3, #32
 8000cfc:	409f      	lsls	r7, r3
 8000cfe:	fa20 f202 	lsr.w	r2, r0, r2
 8000d02:	4317      	orrs	r7, r2
 8000d04:	409c      	lsls	r4, r3
 8000d06:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000d0a:	fa1f f58c 	uxth.w	r5, ip
 8000d0e:	fbb7 f1fe 	udiv	r1, r7, lr
 8000d12:	0c22      	lsrs	r2, r4, #16
 8000d14:	fb0e 7711 	mls	r7, lr, r1, r7
 8000d18:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000d1c:	fb01 f005 	mul.w	r0, r1, r5
 8000d20:	4290      	cmp	r0, r2
 8000d22:	d90a      	bls.n	8000d3a <__udivmoddi4+0x62>
 8000d24:	eb1c 0202 	adds.w	r2, ip, r2
 8000d28:	f101 37ff 	add.w	r7, r1, #4294967295
 8000d2c:	f080 811c 	bcs.w	8000f68 <__udivmoddi4+0x290>
 8000d30:	4290      	cmp	r0, r2
 8000d32:	f240 8119 	bls.w	8000f68 <__udivmoddi4+0x290>
 8000d36:	3902      	subs	r1, #2
 8000d38:	4462      	add	r2, ip
 8000d3a:	1a12      	subs	r2, r2, r0
 8000d3c:	b2a4      	uxth	r4, r4
 8000d3e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d42:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d46:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000d4a:	fb00 f505 	mul.w	r5, r0, r5
 8000d4e:	42a5      	cmp	r5, r4
 8000d50:	d90a      	bls.n	8000d68 <__udivmoddi4+0x90>
 8000d52:	eb1c 0404 	adds.w	r4, ip, r4
 8000d56:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d5a:	f080 8107 	bcs.w	8000f6c <__udivmoddi4+0x294>
 8000d5e:	42a5      	cmp	r5, r4
 8000d60:	f240 8104 	bls.w	8000f6c <__udivmoddi4+0x294>
 8000d64:	4464      	add	r4, ip
 8000d66:	3802      	subs	r0, #2
 8000d68:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d6c:	1b64      	subs	r4, r4, r5
 8000d6e:	2100      	movs	r1, #0
 8000d70:	b11e      	cbz	r6, 8000d7a <__udivmoddi4+0xa2>
 8000d72:	40dc      	lsrs	r4, r3
 8000d74:	2300      	movs	r3, #0
 8000d76:	e9c6 4300 	strd	r4, r3, [r6]
 8000d7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7e:	428b      	cmp	r3, r1
 8000d80:	d908      	bls.n	8000d94 <__udivmoddi4+0xbc>
 8000d82:	2e00      	cmp	r6, #0
 8000d84:	f000 80ed 	beq.w	8000f62 <__udivmoddi4+0x28a>
 8000d88:	2100      	movs	r1, #0
 8000d8a:	e9c6 0500 	strd	r0, r5, [r6]
 8000d8e:	4608      	mov	r0, r1
 8000d90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d94:	fab3 f183 	clz	r1, r3
 8000d98:	2900      	cmp	r1, #0
 8000d9a:	d149      	bne.n	8000e30 <__udivmoddi4+0x158>
 8000d9c:	42ab      	cmp	r3, r5
 8000d9e:	d302      	bcc.n	8000da6 <__udivmoddi4+0xce>
 8000da0:	4282      	cmp	r2, r0
 8000da2:	f200 80f8 	bhi.w	8000f96 <__udivmoddi4+0x2be>
 8000da6:	1a84      	subs	r4, r0, r2
 8000da8:	eb65 0203 	sbc.w	r2, r5, r3
 8000dac:	2001      	movs	r0, #1
 8000dae:	4617      	mov	r7, r2
 8000db0:	2e00      	cmp	r6, #0
 8000db2:	d0e2      	beq.n	8000d7a <__udivmoddi4+0xa2>
 8000db4:	e9c6 4700 	strd	r4, r7, [r6]
 8000db8:	e7df      	b.n	8000d7a <__udivmoddi4+0xa2>
 8000dba:	b902      	cbnz	r2, 8000dbe <__udivmoddi4+0xe6>
 8000dbc:	deff      	udf	#255	; 0xff
 8000dbe:	fab2 f382 	clz	r3, r2
 8000dc2:	2b00      	cmp	r3, #0
 8000dc4:	f040 8090 	bne.w	8000ee8 <__udivmoddi4+0x210>
 8000dc8:	1a8a      	subs	r2, r1, r2
 8000dca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000dce:	fa1f fe8c 	uxth.w	lr, ip
 8000dd2:	2101      	movs	r1, #1
 8000dd4:	fbb2 f5f7 	udiv	r5, r2, r7
 8000dd8:	fb07 2015 	mls	r0, r7, r5, r2
 8000ddc:	0c22      	lsrs	r2, r4, #16
 8000dde:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000de2:	fb0e f005 	mul.w	r0, lr, r5
 8000de6:	4290      	cmp	r0, r2
 8000de8:	d908      	bls.n	8000dfc <__udivmoddi4+0x124>
 8000dea:	eb1c 0202 	adds.w	r2, ip, r2
 8000dee:	f105 38ff 	add.w	r8, r5, #4294967295
 8000df2:	d202      	bcs.n	8000dfa <__udivmoddi4+0x122>
 8000df4:	4290      	cmp	r0, r2
 8000df6:	f200 80cb 	bhi.w	8000f90 <__udivmoddi4+0x2b8>
 8000dfa:	4645      	mov	r5, r8
 8000dfc:	1a12      	subs	r2, r2, r0
 8000dfe:	b2a4      	uxth	r4, r4
 8000e00:	fbb2 f0f7 	udiv	r0, r2, r7
 8000e04:	fb07 2210 	mls	r2, r7, r0, r2
 8000e08:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000e0c:	fb0e fe00 	mul.w	lr, lr, r0
 8000e10:	45a6      	cmp	lr, r4
 8000e12:	d908      	bls.n	8000e26 <__udivmoddi4+0x14e>
 8000e14:	eb1c 0404 	adds.w	r4, ip, r4
 8000e18:	f100 32ff 	add.w	r2, r0, #4294967295
 8000e1c:	d202      	bcs.n	8000e24 <__udivmoddi4+0x14c>
 8000e1e:	45a6      	cmp	lr, r4
 8000e20:	f200 80bb 	bhi.w	8000f9a <__udivmoddi4+0x2c2>
 8000e24:	4610      	mov	r0, r2
 8000e26:	eba4 040e 	sub.w	r4, r4, lr
 8000e2a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000e2e:	e79f      	b.n	8000d70 <__udivmoddi4+0x98>
 8000e30:	f1c1 0720 	rsb	r7, r1, #32
 8000e34:	408b      	lsls	r3, r1
 8000e36:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e3a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e3e:	fa05 f401 	lsl.w	r4, r5, r1
 8000e42:	fa20 f307 	lsr.w	r3, r0, r7
 8000e46:	40fd      	lsrs	r5, r7
 8000e48:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e4c:	4323      	orrs	r3, r4
 8000e4e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000e52:	fa1f fe8c 	uxth.w	lr, ip
 8000e56:	fb09 5518 	mls	r5, r9, r8, r5
 8000e5a:	0c1c      	lsrs	r4, r3, #16
 8000e5c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000e60:	fb08 f50e 	mul.w	r5, r8, lr
 8000e64:	42a5      	cmp	r5, r4
 8000e66:	fa02 f201 	lsl.w	r2, r2, r1
 8000e6a:	fa00 f001 	lsl.w	r0, r0, r1
 8000e6e:	d90b      	bls.n	8000e88 <__udivmoddi4+0x1b0>
 8000e70:	eb1c 0404 	adds.w	r4, ip, r4
 8000e74:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e78:	f080 8088 	bcs.w	8000f8c <__udivmoddi4+0x2b4>
 8000e7c:	42a5      	cmp	r5, r4
 8000e7e:	f240 8085 	bls.w	8000f8c <__udivmoddi4+0x2b4>
 8000e82:	f1a8 0802 	sub.w	r8, r8, #2
 8000e86:	4464      	add	r4, ip
 8000e88:	1b64      	subs	r4, r4, r5
 8000e8a:	b29d      	uxth	r5, r3
 8000e8c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e90:	fb09 4413 	mls	r4, r9, r3, r4
 8000e94:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000e98:	fb03 fe0e 	mul.w	lr, r3, lr
 8000e9c:	45a6      	cmp	lr, r4
 8000e9e:	d908      	bls.n	8000eb2 <__udivmoddi4+0x1da>
 8000ea0:	eb1c 0404 	adds.w	r4, ip, r4
 8000ea4:	f103 35ff 	add.w	r5, r3, #4294967295
 8000ea8:	d26c      	bcs.n	8000f84 <__udivmoddi4+0x2ac>
 8000eaa:	45a6      	cmp	lr, r4
 8000eac:	d96a      	bls.n	8000f84 <__udivmoddi4+0x2ac>
 8000eae:	3b02      	subs	r3, #2
 8000eb0:	4464      	add	r4, ip
 8000eb2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000eb6:	fba3 9502 	umull	r9, r5, r3, r2
 8000eba:	eba4 040e 	sub.w	r4, r4, lr
 8000ebe:	42ac      	cmp	r4, r5
 8000ec0:	46c8      	mov	r8, r9
 8000ec2:	46ae      	mov	lr, r5
 8000ec4:	d356      	bcc.n	8000f74 <__udivmoddi4+0x29c>
 8000ec6:	d053      	beq.n	8000f70 <__udivmoddi4+0x298>
 8000ec8:	b156      	cbz	r6, 8000ee0 <__udivmoddi4+0x208>
 8000eca:	ebb0 0208 	subs.w	r2, r0, r8
 8000ece:	eb64 040e 	sbc.w	r4, r4, lr
 8000ed2:	fa04 f707 	lsl.w	r7, r4, r7
 8000ed6:	40ca      	lsrs	r2, r1
 8000ed8:	40cc      	lsrs	r4, r1
 8000eda:	4317      	orrs	r7, r2
 8000edc:	e9c6 7400 	strd	r7, r4, [r6]
 8000ee0:	4618      	mov	r0, r3
 8000ee2:	2100      	movs	r1, #0
 8000ee4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ee8:	f1c3 0120 	rsb	r1, r3, #32
 8000eec:	fa02 fc03 	lsl.w	ip, r2, r3
 8000ef0:	fa20 f201 	lsr.w	r2, r0, r1
 8000ef4:	fa25 f101 	lsr.w	r1, r5, r1
 8000ef8:	409d      	lsls	r5, r3
 8000efa:	432a      	orrs	r2, r5
 8000efc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f00:	fa1f fe8c 	uxth.w	lr, ip
 8000f04:	fbb1 f0f7 	udiv	r0, r1, r7
 8000f08:	fb07 1510 	mls	r5, r7, r0, r1
 8000f0c:	0c11      	lsrs	r1, r2, #16
 8000f0e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000f12:	fb00 f50e 	mul.w	r5, r0, lr
 8000f16:	428d      	cmp	r5, r1
 8000f18:	fa04 f403 	lsl.w	r4, r4, r3
 8000f1c:	d908      	bls.n	8000f30 <__udivmoddi4+0x258>
 8000f1e:	eb1c 0101 	adds.w	r1, ip, r1
 8000f22:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f26:	d22f      	bcs.n	8000f88 <__udivmoddi4+0x2b0>
 8000f28:	428d      	cmp	r5, r1
 8000f2a:	d92d      	bls.n	8000f88 <__udivmoddi4+0x2b0>
 8000f2c:	3802      	subs	r0, #2
 8000f2e:	4461      	add	r1, ip
 8000f30:	1b49      	subs	r1, r1, r5
 8000f32:	b292      	uxth	r2, r2
 8000f34:	fbb1 f5f7 	udiv	r5, r1, r7
 8000f38:	fb07 1115 	mls	r1, r7, r5, r1
 8000f3c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f40:	fb05 f10e 	mul.w	r1, r5, lr
 8000f44:	4291      	cmp	r1, r2
 8000f46:	d908      	bls.n	8000f5a <__udivmoddi4+0x282>
 8000f48:	eb1c 0202 	adds.w	r2, ip, r2
 8000f4c:	f105 38ff 	add.w	r8, r5, #4294967295
 8000f50:	d216      	bcs.n	8000f80 <__udivmoddi4+0x2a8>
 8000f52:	4291      	cmp	r1, r2
 8000f54:	d914      	bls.n	8000f80 <__udivmoddi4+0x2a8>
 8000f56:	3d02      	subs	r5, #2
 8000f58:	4462      	add	r2, ip
 8000f5a:	1a52      	subs	r2, r2, r1
 8000f5c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000f60:	e738      	b.n	8000dd4 <__udivmoddi4+0xfc>
 8000f62:	4631      	mov	r1, r6
 8000f64:	4630      	mov	r0, r6
 8000f66:	e708      	b.n	8000d7a <__udivmoddi4+0xa2>
 8000f68:	4639      	mov	r1, r7
 8000f6a:	e6e6      	b.n	8000d3a <__udivmoddi4+0x62>
 8000f6c:	4610      	mov	r0, r2
 8000f6e:	e6fb      	b.n	8000d68 <__udivmoddi4+0x90>
 8000f70:	4548      	cmp	r0, r9
 8000f72:	d2a9      	bcs.n	8000ec8 <__udivmoddi4+0x1f0>
 8000f74:	ebb9 0802 	subs.w	r8, r9, r2
 8000f78:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000f7c:	3b01      	subs	r3, #1
 8000f7e:	e7a3      	b.n	8000ec8 <__udivmoddi4+0x1f0>
 8000f80:	4645      	mov	r5, r8
 8000f82:	e7ea      	b.n	8000f5a <__udivmoddi4+0x282>
 8000f84:	462b      	mov	r3, r5
 8000f86:	e794      	b.n	8000eb2 <__udivmoddi4+0x1da>
 8000f88:	4640      	mov	r0, r8
 8000f8a:	e7d1      	b.n	8000f30 <__udivmoddi4+0x258>
 8000f8c:	46d0      	mov	r8, sl
 8000f8e:	e77b      	b.n	8000e88 <__udivmoddi4+0x1b0>
 8000f90:	3d02      	subs	r5, #2
 8000f92:	4462      	add	r2, ip
 8000f94:	e732      	b.n	8000dfc <__udivmoddi4+0x124>
 8000f96:	4608      	mov	r0, r1
 8000f98:	e70a      	b.n	8000db0 <__udivmoddi4+0xd8>
 8000f9a:	4464      	add	r4, ip
 8000f9c:	3802      	subs	r0, #2
 8000f9e:	e742      	b.n	8000e26 <__udivmoddi4+0x14e>

08000fa0 <__aeabi_idiv0>:
 8000fa0:	4770      	bx	lr
 8000fa2:	bf00      	nop
 8000fa4:	0000      	movs	r0, r0
	...

08000fa8 <fill_LUT>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void fill_LUT(void)
{
 8000fa8:	b590      	push	{r4, r7, lr}
 8000faa:	b085      	sub	sp, #20
 8000fac:	af00      	add	r7, sp, #0
	//creates a sine wave look up table centered at VREF/2
	double HALF_AMP = (AMP_PCENT/ 100.0) * 2047.0;//calculates a half amplitude given the desired volume
 8000fae:	f04f 0000 	mov.w	r0, #0
 8000fb2:	4939      	ldr	r1, [pc, #228]	; (8001098 <fill_LUT+0xf0>)
 8000fb4:	f04f 0200 	mov.w	r2, #0
 8000fb8:	4b38      	ldr	r3, [pc, #224]	; (800109c <fill_LUT+0xf4>)
 8000fba:	f7ff fc57 	bl	800086c <__aeabi_ddiv>
 8000fbe:	4602      	mov	r2, r0
 8000fc0:	460b      	mov	r3, r1
 8000fc2:	4610      	mov	r0, r2
 8000fc4:	4619      	mov	r1, r3
 8000fc6:	a330      	add	r3, pc, #192	; (adr r3, 8001088 <fill_LUT+0xe0>)
 8000fc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fcc:	f7ff fb24 	bl	8000618 <__aeabi_dmul>
 8000fd0:	4602      	mov	r2, r0
 8000fd2:	460b      	mov	r3, r1
 8000fd4:	e9c7 2300 	strd	r2, r3, [r7]
	uint16_t i = 0;
 8000fd8:	2300      	movs	r3, #0
 8000fda:	81fb      	strh	r3, [r7, #14]
	for(; i < LUT_SIZE; ++i)
 8000fdc:	e04b      	b.n	8001076 <fill_LUT+0xce>
	{
		SIN_LUT[i] = (uint16_t) ( (sin( ( (double) i) * 360.0 / ((double) LUT_SIZE)  * 3.14159265/180.0) * HALF_AMP) + 2048.0);
 8000fde:	89fb      	ldrh	r3, [r7, #14]
 8000fe0:	4618      	mov	r0, r3
 8000fe2:	f7ff fa9f 	bl	8000524 <__aeabi_ui2d>
 8000fe6:	f04f 0200 	mov.w	r2, #0
 8000fea:	4b2d      	ldr	r3, [pc, #180]	; (80010a0 <fill_LUT+0xf8>)
 8000fec:	f7ff fb14 	bl	8000618 <__aeabi_dmul>
 8000ff0:	4602      	mov	r2, r0
 8000ff2:	460b      	mov	r3, r1
 8000ff4:	4610      	mov	r0, r2
 8000ff6:	4619      	mov	r1, r3
 8000ff8:	f04f 0200 	mov.w	r2, #0
 8000ffc:	4b27      	ldr	r3, [pc, #156]	; (800109c <fill_LUT+0xf4>)
 8000ffe:	f7ff fc35 	bl	800086c <__aeabi_ddiv>
 8001002:	4602      	mov	r2, r0
 8001004:	460b      	mov	r3, r1
 8001006:	4610      	mov	r0, r2
 8001008:	4619      	mov	r1, r3
 800100a:	a321      	add	r3, pc, #132	; (adr r3, 8001090 <fill_LUT+0xe8>)
 800100c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001010:	f7ff fb02 	bl	8000618 <__aeabi_dmul>
 8001014:	4602      	mov	r2, r0
 8001016:	460b      	mov	r3, r1
 8001018:	4610      	mov	r0, r2
 800101a:	4619      	mov	r1, r3
 800101c:	f04f 0200 	mov.w	r2, #0
 8001020:	4b20      	ldr	r3, [pc, #128]	; (80010a4 <fill_LUT+0xfc>)
 8001022:	f7ff fc23 	bl	800086c <__aeabi_ddiv>
 8001026:	4602      	mov	r2, r0
 8001028:	460b      	mov	r3, r1
 800102a:	ec43 2b17 	vmov	d7, r2, r3
 800102e:	eeb0 0a47 	vmov.f32	s0, s14
 8001032:	eef0 0a67 	vmov.f32	s1, s15
 8001036:	f026 f88f 	bl	8027158 <sin>
 800103a:	ec51 0b10 	vmov	r0, r1, d0
 800103e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001042:	f7ff fae9 	bl	8000618 <__aeabi_dmul>
 8001046:	4602      	mov	r2, r0
 8001048:	460b      	mov	r3, r1
 800104a:	4610      	mov	r0, r2
 800104c:	4619      	mov	r1, r3
 800104e:	f04f 0200 	mov.w	r2, #0
 8001052:	4b15      	ldr	r3, [pc, #84]	; (80010a8 <fill_LUT+0x100>)
 8001054:	f7ff f92a 	bl	80002ac <__adddf3>
 8001058:	4602      	mov	r2, r0
 800105a:	460b      	mov	r3, r1
 800105c:	89fc      	ldrh	r4, [r7, #14]
 800105e:	4610      	mov	r0, r2
 8001060:	4619      	mov	r1, r3
 8001062:	f7ff fdb1 	bl	8000bc8 <__aeabi_d2uiz>
 8001066:	4603      	mov	r3, r0
 8001068:	b29a      	uxth	r2, r3
 800106a:	4b10      	ldr	r3, [pc, #64]	; (80010ac <fill_LUT+0x104>)
 800106c:	f823 2014 	strh.w	r2, [r3, r4, lsl #1]
	for(; i < LUT_SIZE; ++i)
 8001070:	89fb      	ldrh	r3, [r7, #14]
 8001072:	3301      	adds	r3, #1
 8001074:	81fb      	strh	r3, [r7, #14]
 8001076:	89fb      	ldrh	r3, [r7, #14]
 8001078:	2b63      	cmp	r3, #99	; 0x63
 800107a:	d9b0      	bls.n	8000fde <fill_LUT+0x36>
	}
}
 800107c:	bf00      	nop
 800107e:	bf00      	nop
 8001080:	3714      	adds	r7, #20
 8001082:	46bd      	mov	sp, r7
 8001084:	bd90      	pop	{r4, r7, pc}
 8001086:	bf00      	nop
 8001088:	00000000 	.word	0x00000000
 800108c:	409ffc00 	.word	0x409ffc00
 8001090:	53c8d4f1 	.word	0x53c8d4f1
 8001094:	400921fb 	.word	0x400921fb
 8001098:	40568000 	.word	0x40568000
 800109c:	40590000 	.word	0x40590000
 80010a0:	40768000 	.word	0x40768000
 80010a4:	40668000 	.word	0x40668000
 80010a8:	40a00000 	.word	0x40a00000
 80010ac:	200003b4 	.word	0x200003b4

080010b0 <setComp>:

//sets compare value (period) for tim2
void setComp(uint32_t newComp)
{
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b082      	sub	sp, #8
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Stop(&htim7);
 80010b8:	4811      	ldr	r0, [pc, #68]	; (8001100 <setComp+0x50>)
 80010ba:	f009 fb2d 	bl	800a718 <HAL_TIM_Base_Stop>
	htim7.Instance = TIM7;
 80010be:	4b10      	ldr	r3, [pc, #64]	; (8001100 <setComp+0x50>)
 80010c0:	4a10      	ldr	r2, [pc, #64]	; (8001104 <setComp+0x54>)
 80010c2:	601a      	str	r2, [r3, #0]
	htim7.Init.Prescaler = TIM7_PRSC;
 80010c4:	4b0e      	ldr	r3, [pc, #56]	; (8001100 <setComp+0x50>)
 80010c6:	220c      	movs	r2, #12
 80010c8:	605a      	str	r2, [r3, #4]
	htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80010ca:	4b0d      	ldr	r3, [pc, #52]	; (8001100 <setComp+0x50>)
 80010cc:	2200      	movs	r2, #0
 80010ce:	609a      	str	r2, [r3, #8]
	htim7.Init.Period = newComp;
 80010d0:	4a0b      	ldr	r2, [pc, #44]	; (8001100 <setComp+0x50>)
 80010d2:	687b      	ldr	r3, [r7, #4]
 80010d4:	60d3      	str	r3, [r2, #12]
	htim7.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80010d6:	4b0a      	ldr	r3, [pc, #40]	; (8001100 <setComp+0x50>)
 80010d8:	2200      	movs	r2, #0
 80010da:	611a      	str	r2, [r3, #16]
	htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80010dc:	4b08      	ldr	r3, [pc, #32]	; (8001100 <setComp+0x50>)
 80010de:	2200      	movs	r2, #0
 80010e0:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80010e2:	4807      	ldr	r0, [pc, #28]	; (8001100 <setComp+0x50>)
 80010e4:	f009 fa58 	bl	800a598 <HAL_TIM_Base_Init>
 80010e8:	4603      	mov	r3, r0
 80010ea:	2b00      	cmp	r3, #0
 80010ec:	d001      	beq.n	80010f2 <setComp+0x42>
	{
		Error_Handler();
 80010ee:	f003 fa09 	bl	8004504 <Error_Handler>
	}

	HAL_TIM_Base_Start(&htim7);
 80010f2:	4803      	ldr	r0, [pc, #12]	; (8001100 <setComp+0x50>)
 80010f4:	f009 faa8 	bl	800a648 <HAL_TIM_Base_Start>
}
 80010f8:	bf00      	nop
 80010fa:	3708      	adds	r7, #8
 80010fc:	46bd      	mov	sp, r7
 80010fe:	bd80      	pop	{r7, pc}
 8001100:	200008bc 	.word	0x200008bc
 8001104:	40001400 	.word	0x40001400

08001108 <changeNote>:

//frequency = tim2_clk/tim2_prsclr/LUT_SIZE/tim2_prd
//desired tim2_prd = tm2_clk/tim2_prsclr/LUT_SIZE/frequency
//tim2_clk = 120 MHz, tim2_prsclr = 85, LUT_SIZE = 100
void changeNote(float frequency)
{
 8001108:	b580      	push	{r7, lr}
 800110a:	b082      	sub	sp, #8
 800110c:	af00      	add	r7, sp, #0
 800110e:	ed87 0a01 	vstr	s0, [r7, #4]
	setComp((uint32_t) (120000000.0f/TIM7_PRSC/((float)LUT_SIZE)/frequency) );
 8001112:	eddf 6a08 	vldr	s13, [pc, #32]	; 8001134 <changeNote+0x2c>
 8001116:	ed97 7a01 	vldr	s14, [r7, #4]
 800111a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800111e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001122:	ee17 0a90 	vmov	r0, s15
 8001126:	f7ff ffc3 	bl	80010b0 <setComp>
}
 800112a:	bf00      	nop
 800112c:	3708      	adds	r7, #8
 800112e:	46bd      	mov	sp, r7
 8001130:	bd80      	pop	{r7, pc}
 8001132:	bf00      	nop
 8001134:	47c35000 	.word	0x47c35000

08001138 <speakNote>:

void speakNote(int noteNum)
{
 8001138:	b580      	push	{r7, lr}
 800113a:	b084      	sub	sp, #16
 800113c:	af00      	add	r7, sp, #0
 800113e:	6078      	str	r0, [r7, #4]
	HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 8001140:	2100      	movs	r1, #0
 8001142:	481d      	ldr	r0, [pc, #116]	; (80011b8 <speakNote+0x80>)
 8001144:	f005 f86c 	bl	8006220 <HAL_DAC_Start>
	float arg = (float)((noteNum + 3 + 11 - 69)/12.0);
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	3b37      	subs	r3, #55	; 0x37
 800114c:	4618      	mov	r0, r3
 800114e:	f7ff f9f9 	bl	8000544 <__aeabi_i2d>
 8001152:	f04f 0200 	mov.w	r2, #0
 8001156:	4b19      	ldr	r3, [pc, #100]	; (80011bc <speakNote+0x84>)
 8001158:	f7ff fb88 	bl	800086c <__aeabi_ddiv>
 800115c:	4602      	mov	r2, r0
 800115e:	460b      	mov	r3, r1
 8001160:	4610      	mov	r0, r2
 8001162:	4619      	mov	r1, r3
 8001164:	f7ff fd50 	bl	8000c08 <__aeabi_d2f>
 8001168:	4603      	mov	r3, r0
 800116a:	60fb      	str	r3, [r7, #12]
	float frequency = pow(2,arg)*440;
 800116c:	68f8      	ldr	r0, [r7, #12]
 800116e:	f7ff f9fb 	bl	8000568 <__aeabi_f2d>
 8001172:	4602      	mov	r2, r0
 8001174:	460b      	mov	r3, r1
 8001176:	ec43 2b11 	vmov	d1, r2, r3
 800117a:	ed9f 0b0d 	vldr	d0, [pc, #52]	; 80011b0 <speakNote+0x78>
 800117e:	f025 ff79 	bl	8027074 <pow>
 8001182:	ec51 0b10 	vmov	r0, r1, d0
 8001186:	f04f 0200 	mov.w	r2, #0
 800118a:	4b0d      	ldr	r3, [pc, #52]	; (80011c0 <speakNote+0x88>)
 800118c:	f7ff fa44 	bl	8000618 <__aeabi_dmul>
 8001190:	4602      	mov	r2, r0
 8001192:	460b      	mov	r3, r1
 8001194:	4610      	mov	r0, r2
 8001196:	4619      	mov	r1, r3
 8001198:	f7ff fd36 	bl	8000c08 <__aeabi_d2f>
 800119c:	4603      	mov	r3, r0
 800119e:	60bb      	str	r3, [r7, #8]
	//printf("frecuencia:  %f \n\r", (float)frequency);
	changeNote(frequency);
 80011a0:	ed97 0a02 	vldr	s0, [r7, #8]
 80011a4:	f7ff ffb0 	bl	8001108 <changeNote>
}
 80011a8:	bf00      	nop
 80011aa:	3710      	adds	r7, #16
 80011ac:	46bd      	mov	sp, r7
 80011ae:	bd80      	pop	{r7, pc}
 80011b0:	00000000 	.word	0x00000000
 80011b4:	40000000 	.word	0x40000000
 80011b8:	200004a0 	.word	0x200004a0
 80011bc:	40280000 	.word	0x40280000
 80011c0:	407b8000 	.word	0x407b8000

080011c4 <stopSpeaker>:

void stopSpeaker()
{
 80011c4:	b580      	push	{r7, lr}
 80011c6:	af00      	add	r7, sp, #0
	HAL_DAC_Stop(&hdac1, DAC_CHANNEL_1);
 80011c8:	2100      	movs	r1, #0
 80011ca:	4802      	ldr	r0, [pc, #8]	; (80011d4 <stopSpeaker+0x10>)
 80011cc:	f005 f87a 	bl	80062c4 <HAL_DAC_Stop>
}
 80011d0:	bf00      	nop
 80011d2:	bd80      	pop	{r7, pc}
 80011d4:	200004a0 	.word	0x200004a0

080011d8 <TIM7_ISR>:

//used to iterate through the LUT
void TIM7_ISR()
{
 80011d8:	b580      	push	{r7, lr}
 80011da:	af00      	add	r7, sp, #0
	static uint32_t index = 0;
	HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, SIN_LUT[index]);
 80011dc:	4b0b      	ldr	r3, [pc, #44]	; (800120c <TIM7_ISR+0x34>)
 80011de:	681b      	ldr	r3, [r3, #0]
 80011e0:	4a0b      	ldr	r2, [pc, #44]	; (8001210 <TIM7_ISR+0x38>)
 80011e2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80011e6:	2200      	movs	r2, #0
 80011e8:	2100      	movs	r1, #0
 80011ea:	480a      	ldr	r0, [pc, #40]	; (8001214 <TIM7_ISR+0x3c>)
 80011ec:	f005 f887 	bl	80062fe <HAL_DAC_SetValue>
	++index;
 80011f0:	4b06      	ldr	r3, [pc, #24]	; (800120c <TIM7_ISR+0x34>)
 80011f2:	681b      	ldr	r3, [r3, #0]
 80011f4:	3301      	adds	r3, #1
 80011f6:	4a05      	ldr	r2, [pc, #20]	; (800120c <TIM7_ISR+0x34>)
 80011f8:	6013      	str	r3, [r2, #0]
	if(index > LUT_SIZE) index = 0;
 80011fa:	4b04      	ldr	r3, [pc, #16]	; (800120c <TIM7_ISR+0x34>)
 80011fc:	681b      	ldr	r3, [r3, #0]
 80011fe:	2b64      	cmp	r3, #100	; 0x64
 8001200:	d902      	bls.n	8001208 <TIM7_ISR+0x30>
 8001202:	4b02      	ldr	r3, [pc, #8]	; (800120c <TIM7_ISR+0x34>)
 8001204:	2200      	movs	r2, #0
 8001206:	601a      	str	r2, [r3, #0]
}
 8001208:	bf00      	nop
 800120a:	bd80      	pop	{r7, pc}
 800120c:	20023d08 	.word	0x20023d08
 8001210:	200003b4 	.word	0x200003b4
 8001214:	200004a0 	.word	0x200004a0

08001218 <formGroups>:
void GPIO_Deactivation_Left(int note);
int setDCStart(int current_time);
int setDCStop(int current_time);
void setNextAction(int current_time);

int formGroups(int noteArr[][noteColNum], int len){
 8001218:	b580      	push	{r7, lr}
 800121a:	b084      	sub	sp, #16
 800121c:	af00      	add	r7, sp, #0
 800121e:	6078      	str	r0, [r7, #4]
 8001220:	6039      	str	r1, [r7, #0]
	movementOps(noteArr, len);
 8001222:	6839      	ldr	r1, [r7, #0]
 8001224:	6878      	ldr	r0, [r7, #4]
 8001226:	f000 f97f 	bl	8001528 <movementOps>
	int num_groups = noteArr[len - 1][3];
 800122a:	683a      	ldr	r2, [r7, #0]
 800122c:	4613      	mov	r3, r2
 800122e:	009b      	lsls	r3, r3, #2
 8001230:	4413      	add	r3, r2
 8001232:	009b      	lsls	r3, r3, #2
 8001234:	3b14      	subs	r3, #20
 8001236:	687a      	ldr	r2, [r7, #4]
 8001238:	4413      	add	r3, r2
 800123a:	68db      	ldr	r3, [r3, #12]
 800123c:	60fb      	str	r3, [r7, #12]
	for(int i = 0; i < num_groups; i++){
 800123e:	2300      	movs	r3, #0
 8001240:	60bb      	str	r3, [r7, #8]
 8001242:	e01d      	b.n	8001280 <formGroups+0x68>
		if(groupRange(noteArr, len, i, i + 1) <= 11){
 8001244:	68bb      	ldr	r3, [r7, #8]
 8001246:	3301      	adds	r3, #1
 8001248:	68ba      	ldr	r2, [r7, #8]
 800124a:	6839      	ldr	r1, [r7, #0]
 800124c:	6878      	ldr	r0, [r7, #4]
 800124e:	f000 f820 	bl	8001292 <groupRange>
 8001252:	4603      	mov	r3, r0
 8001254:	2b0b      	cmp	r3, #11
 8001256:	dc10      	bgt.n	800127a <formGroups+0x62>
			groupMerge(noteArr, len, i, i + 1);
 8001258:	68bb      	ldr	r3, [r7, #8]
 800125a:	3301      	adds	r3, #1
 800125c:	68ba      	ldr	r2, [r7, #8]
 800125e:	6839      	ldr	r1, [r7, #0]
 8001260:	6878      	ldr	r0, [r7, #4]
 8001262:	f000 f8cb 	bl	80013fc <groupMerge>
			num_groups--;
 8001266:	68fb      	ldr	r3, [r7, #12]
 8001268:	3b01      	subs	r3, #1
 800126a:	60fb      	str	r3, [r7, #12]
			groupContinuity(noteArr, len);
 800126c:	6839      	ldr	r1, [r7, #0]
 800126e:	6878      	ldr	r0, [r7, #4]
 8001270:	f000 f8f2 	bl	8001458 <groupContinuity>
			i--;
 8001274:	68bb      	ldr	r3, [r7, #8]
 8001276:	3b01      	subs	r3, #1
 8001278:	60bb      	str	r3, [r7, #8]
	for(int i = 0; i < num_groups; i++){
 800127a:	68bb      	ldr	r3, [r7, #8]
 800127c:	3301      	adds	r3, #1
 800127e:	60bb      	str	r3, [r7, #8]
 8001280:	68ba      	ldr	r2, [r7, #8]
 8001282:	68fb      	ldr	r3, [r7, #12]
 8001284:	429a      	cmp	r2, r3
 8001286:	dbdd      	blt.n	8001244 <formGroups+0x2c>
		}
	}
	return 0;
 8001288:	2300      	movs	r3, #0
}
 800128a:	4618      	mov	r0, r3
 800128c:	3710      	adds	r7, #16
 800128e:	46bd      	mov	sp, r7
 8001290:	bd80      	pop	{r7, pc}

08001292 <groupRange>:

// Given two group numbers, return the collective range
int groupRange(int noteArr[][noteColNum], int len, int group1, int group2){
 8001292:	b580      	push	{r7, lr}
 8001294:	b08a      	sub	sp, #40	; 0x28
 8001296:	af00      	add	r7, sp, #0
 8001298:	60f8      	str	r0, [r7, #12]
 800129a:	60b9      	str	r1, [r7, #8]
 800129c:	607a      	str	r2, [r7, #4]
 800129e:	603b      	str	r3, [r7, #0]
	int minNote = 100;
 80012a0:	2364      	movs	r3, #100	; 0x64
 80012a2:	627b      	str	r3, [r7, #36]	; 0x24
	int maxNote = 0;
 80012a4:	2300      	movs	r3, #0
 80012a6:	623b      	str	r3, [r7, #32]
	for(int i = 0; i < len; i++){
 80012a8:	2300      	movs	r3, #0
 80012aa:	61fb      	str	r3, [r7, #28]
 80012ac:	e04b      	b.n	8001346 <groupRange+0xb4>
		if(noteArr[i][3] == group1 || noteArr[i][3] == group2){
 80012ae:	69fa      	ldr	r2, [r7, #28]
 80012b0:	4613      	mov	r3, r2
 80012b2:	009b      	lsls	r3, r3, #2
 80012b4:	4413      	add	r3, r2
 80012b6:	009b      	lsls	r3, r3, #2
 80012b8:	461a      	mov	r2, r3
 80012ba:	68fb      	ldr	r3, [r7, #12]
 80012bc:	4413      	add	r3, r2
 80012be:	68db      	ldr	r3, [r3, #12]
 80012c0:	687a      	ldr	r2, [r7, #4]
 80012c2:	429a      	cmp	r2, r3
 80012c4:	d00b      	beq.n	80012de <groupRange+0x4c>
 80012c6:	69fa      	ldr	r2, [r7, #28]
 80012c8:	4613      	mov	r3, r2
 80012ca:	009b      	lsls	r3, r3, #2
 80012cc:	4413      	add	r3, r2
 80012ce:	009b      	lsls	r3, r3, #2
 80012d0:	461a      	mov	r2, r3
 80012d2:	68fb      	ldr	r3, [r7, #12]
 80012d4:	4413      	add	r3, r2
 80012d6:	68db      	ldr	r3, [r3, #12]
 80012d8:	683a      	ldr	r2, [r7, #0]
 80012da:	429a      	cmp	r2, r3
 80012dc:	d130      	bne.n	8001340 <groupRange+0xae>
			if(noteArr[i][4] == 0){
 80012de:	69fa      	ldr	r2, [r7, #28]
 80012e0:	4613      	mov	r3, r2
 80012e2:	009b      	lsls	r3, r3, #2
 80012e4:	4413      	add	r3, r2
 80012e6:	009b      	lsls	r3, r3, #2
 80012e8:	461a      	mov	r2, r3
 80012ea:	68fb      	ldr	r3, [r7, #12]
 80012ec:	4413      	add	r3, r2
 80012ee:	691b      	ldr	r3, [r3, #16]
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	d125      	bne.n	8001340 <groupRange+0xae>
				int min = nearestMinWhite(noteArr[i][0]);
 80012f4:	69fa      	ldr	r2, [r7, #28]
 80012f6:	4613      	mov	r3, r2
 80012f8:	009b      	lsls	r3, r3, #2
 80012fa:	4413      	add	r3, r2
 80012fc:	009b      	lsls	r3, r3, #2
 80012fe:	461a      	mov	r2, r3
 8001300:	68fb      	ldr	r3, [r7, #12]
 8001302:	4413      	add	r3, r2
 8001304:	681b      	ldr	r3, [r3, #0]
 8001306:	4618      	mov	r0, r3
 8001308:	f000 f828 	bl	800135c <nearestMinWhite>
 800130c:	61b8      	str	r0, [r7, #24]
				int max = nearestMaxWhite(noteArr[i][0]);
 800130e:	69fa      	ldr	r2, [r7, #28]
 8001310:	4613      	mov	r3, r2
 8001312:	009b      	lsls	r3, r3, #2
 8001314:	4413      	add	r3, r2
 8001316:	009b      	lsls	r3, r3, #2
 8001318:	461a      	mov	r2, r3
 800131a:	68fb      	ldr	r3, [r7, #12]
 800131c:	4413      	add	r3, r2
 800131e:	681b      	ldr	r3, [r3, #0]
 8001320:	4618      	mov	r0, r3
 8001322:	f000 f82d 	bl	8001380 <nearestMaxWhite>
 8001326:	6178      	str	r0, [r7, #20]
				if(min < minNote){
 8001328:	69ba      	ldr	r2, [r7, #24]
 800132a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800132c:	429a      	cmp	r2, r3
 800132e:	da01      	bge.n	8001334 <groupRange+0xa2>
					minNote = min;
 8001330:	69bb      	ldr	r3, [r7, #24]
 8001332:	627b      	str	r3, [r7, #36]	; 0x24
				}
				if(max > maxNote){
 8001334:	697a      	ldr	r2, [r7, #20]
 8001336:	6a3b      	ldr	r3, [r7, #32]
 8001338:	429a      	cmp	r2, r3
 800133a:	dd01      	ble.n	8001340 <groupRange+0xae>
					maxNote = max;
 800133c:	697b      	ldr	r3, [r7, #20]
 800133e:	623b      	str	r3, [r7, #32]
	for(int i = 0; i < len; i++){
 8001340:	69fb      	ldr	r3, [r7, #28]
 8001342:	3301      	adds	r3, #1
 8001344:	61fb      	str	r3, [r7, #28]
 8001346:	69fa      	ldr	r2, [r7, #28]
 8001348:	68bb      	ldr	r3, [r7, #8]
 800134a:	429a      	cmp	r2, r3
 800134c:	dbaf      	blt.n	80012ae <groupRange+0x1c>
				}
			}
		}
	}
	return maxNote - minNote;
 800134e:	6a3a      	ldr	r2, [r7, #32]
 8001350:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001352:	1ad3      	subs	r3, r2, r3
}
 8001354:	4618      	mov	r0, r3
 8001356:	3728      	adds	r7, #40	; 0x28
 8001358:	46bd      	mov	sp, r7
 800135a:	bd80      	pop	{r7, pc}

0800135c <nearestMinWhite>:

// Identify the nearest white note under the argument note number
int nearestMinWhite(int noteNum){
 800135c:	b580      	push	{r7, lr}
 800135e:	b082      	sub	sp, #8
 8001360:	af00      	add	r7, sp, #0
 8001362:	6078      	str	r0, [r7, #4]
	if(isBlackKey(noteNum)){
 8001364:	6878      	ldr	r0, [r7, #4]
 8001366:	f000 f81d 	bl	80013a4 <isBlackKey>
 800136a:	4603      	mov	r3, r0
 800136c:	2b00      	cmp	r3, #0
 800136e:	d002      	beq.n	8001376 <nearestMinWhite+0x1a>
		return noteNum - 1;
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	3b01      	subs	r3, #1
 8001374:	e000      	b.n	8001378 <nearestMinWhite+0x1c>
	}
	return noteNum;
 8001376:	687b      	ldr	r3, [r7, #4]
}
 8001378:	4618      	mov	r0, r3
 800137a:	3708      	adds	r7, #8
 800137c:	46bd      	mov	sp, r7
 800137e:	bd80      	pop	{r7, pc}

08001380 <nearestMaxWhite>:

// Identify the nearest white note above the argument note number
int nearestMaxWhite(int noteNum){
 8001380:	b580      	push	{r7, lr}
 8001382:	b082      	sub	sp, #8
 8001384:	af00      	add	r7, sp, #0
 8001386:	6078      	str	r0, [r7, #4]
	if(isBlackKey(noteNum)){
 8001388:	6878      	ldr	r0, [r7, #4]
 800138a:	f000 f80b 	bl	80013a4 <isBlackKey>
 800138e:	4603      	mov	r3, r0
 8001390:	2b00      	cmp	r3, #0
 8001392:	d002      	beq.n	800139a <nearestMaxWhite+0x1a>
			return noteNum + 1;
 8001394:	687b      	ldr	r3, [r7, #4]
 8001396:	3301      	adds	r3, #1
 8001398:	e000      	b.n	800139c <nearestMaxWhite+0x1c>
		}
		return noteNum;
 800139a:	687b      	ldr	r3, [r7, #4]
}
 800139c:	4618      	mov	r0, r3
 800139e:	3708      	adds	r7, #8
 80013a0:	46bd      	mov	sp, r7
 80013a2:	bd80      	pop	{r7, pc}

080013a4 <isBlackKey>:


// Identify if a note is a black key
int isBlackKey(int noteNum){
 80013a4:	b480      	push	{r7}
 80013a6:	b085      	sub	sp, #20
 80013a8:	af00      	add	r7, sp, #0
 80013aa:	6078      	str	r0, [r7, #4]
	int isBlack = noteNum % 12;
 80013ac:	687a      	ldr	r2, [r7, #4]
 80013ae:	4b12      	ldr	r3, [pc, #72]	; (80013f8 <isBlackKey+0x54>)
 80013b0:	fb83 1302 	smull	r1, r3, r3, r2
 80013b4:	1059      	asrs	r1, r3, #1
 80013b6:	17d3      	asrs	r3, r2, #31
 80013b8:	1ac9      	subs	r1, r1, r3
 80013ba:	460b      	mov	r3, r1
 80013bc:	005b      	lsls	r3, r3, #1
 80013be:	440b      	add	r3, r1
 80013c0:	009b      	lsls	r3, r3, #2
 80013c2:	1ad3      	subs	r3, r2, r3
 80013c4:	60fb      	str	r3, [r7, #12]
	if(isBlack == 1 || isBlack == 3 || isBlack == 6 || isBlack == 8 || isBlack == 10){
 80013c6:	68fb      	ldr	r3, [r7, #12]
 80013c8:	2b01      	cmp	r3, #1
 80013ca:	d00b      	beq.n	80013e4 <isBlackKey+0x40>
 80013cc:	68fb      	ldr	r3, [r7, #12]
 80013ce:	2b03      	cmp	r3, #3
 80013d0:	d008      	beq.n	80013e4 <isBlackKey+0x40>
 80013d2:	68fb      	ldr	r3, [r7, #12]
 80013d4:	2b06      	cmp	r3, #6
 80013d6:	d005      	beq.n	80013e4 <isBlackKey+0x40>
 80013d8:	68fb      	ldr	r3, [r7, #12]
 80013da:	2b08      	cmp	r3, #8
 80013dc:	d002      	beq.n	80013e4 <isBlackKey+0x40>
 80013de:	68fb      	ldr	r3, [r7, #12]
 80013e0:	2b0a      	cmp	r3, #10
 80013e2:	d101      	bne.n	80013e8 <isBlackKey+0x44>
		return 1;
 80013e4:	2301      	movs	r3, #1
 80013e6:	e000      	b.n	80013ea <isBlackKey+0x46>
	}
	return 0;
 80013e8:	2300      	movs	r3, #0
}
 80013ea:	4618      	mov	r0, r3
 80013ec:	3714      	adds	r7, #20
 80013ee:	46bd      	mov	sp, r7
 80013f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013f4:	4770      	bx	lr
 80013f6:	bf00      	nop
 80013f8:	2aaaaaab 	.word	0x2aaaaaab

080013fc <groupMerge>:
// Given two consecutive groups, combine them into one group using the lower group number; assumes group1 < group2
void groupMerge(int noteArr[][noteColNum], int len, int group1, int group2){
 80013fc:	b480      	push	{r7}
 80013fe:	b087      	sub	sp, #28
 8001400:	af00      	add	r7, sp, #0
 8001402:	60f8      	str	r0, [r7, #12]
 8001404:	60b9      	str	r1, [r7, #8]
 8001406:	607a      	str	r2, [r7, #4]
 8001408:	603b      	str	r3, [r7, #0]
	for(int i = 0; i < len; i++){
 800140a:	2300      	movs	r3, #0
 800140c:	617b      	str	r3, [r7, #20]
 800140e:	e018      	b.n	8001442 <groupMerge+0x46>
		if(noteArr[i][3] == group2){
 8001410:	697a      	ldr	r2, [r7, #20]
 8001412:	4613      	mov	r3, r2
 8001414:	009b      	lsls	r3, r3, #2
 8001416:	4413      	add	r3, r2
 8001418:	009b      	lsls	r3, r3, #2
 800141a:	461a      	mov	r2, r3
 800141c:	68fb      	ldr	r3, [r7, #12]
 800141e:	4413      	add	r3, r2
 8001420:	68db      	ldr	r3, [r3, #12]
 8001422:	683a      	ldr	r2, [r7, #0]
 8001424:	429a      	cmp	r2, r3
 8001426:	d109      	bne.n	800143c <groupMerge+0x40>
			noteArr[i][3] = group1;
 8001428:	697a      	ldr	r2, [r7, #20]
 800142a:	4613      	mov	r3, r2
 800142c:	009b      	lsls	r3, r3, #2
 800142e:	4413      	add	r3, r2
 8001430:	009b      	lsls	r3, r3, #2
 8001432:	461a      	mov	r2, r3
 8001434:	68fb      	ldr	r3, [r7, #12]
 8001436:	4413      	add	r3, r2
 8001438:	687a      	ldr	r2, [r7, #4]
 800143a:	60da      	str	r2, [r3, #12]
	for(int i = 0; i < len; i++){
 800143c:	697b      	ldr	r3, [r7, #20]
 800143e:	3301      	adds	r3, #1
 8001440:	617b      	str	r3, [r7, #20]
 8001442:	697a      	ldr	r2, [r7, #20]
 8001444:	68bb      	ldr	r3, [r7, #8]
 8001446:	429a      	cmp	r2, r3
 8001448:	dbe2      	blt.n	8001410 <groupMerge+0x14>
		}
	}
}
 800144a:	bf00      	nop
 800144c:	bf00      	nop
 800144e:	371c      	adds	r7, #28
 8001450:	46bd      	mov	sp, r7
 8001452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001456:	4770      	bx	lr

08001458 <groupContinuity>:

// Reassign group numbers so they are sequential in value
void groupContinuity(int noteArr[][noteColNum], int len){
 8001458:	b480      	push	{r7}
 800145a:	b089      	sub	sp, #36	; 0x24
 800145c:	af00      	add	r7, sp, #0
 800145e:	6078      	str	r0, [r7, #4]
 8001460:	6039      	str	r1, [r7, #0]
	int prevGroupNum = 0;
 8001462:	2300      	movs	r3, #0
 8001464:	61fb      	str	r3, [r7, #28]
	int replaceGroup = 0;
 8001466:	2300      	movs	r3, #0
 8001468:	617b      	str	r3, [r7, #20]
	int newGroupNum = 0;
 800146a:	2300      	movs	r3, #0
 800146c:	613b      	str	r3, [r7, #16]
	int diff = 0;
 800146e:	2300      	movs	r3, #0
 8001470:	60fb      	str	r3, [r7, #12]
	for(int i = 0; i < len; i++){
 8001472:	2300      	movs	r3, #0
 8001474:	61bb      	str	r3, [r7, #24]
 8001476:	e04c      	b.n	8001512 <groupContinuity+0xba>
		diff = noteArr[i][3] - prevGroupNum;
 8001478:	69ba      	ldr	r2, [r7, #24]
 800147a:	4613      	mov	r3, r2
 800147c:	009b      	lsls	r3, r3, #2
 800147e:	4413      	add	r3, r2
 8001480:	009b      	lsls	r3, r3, #2
 8001482:	461a      	mov	r2, r3
 8001484:	687b      	ldr	r3, [r7, #4]
 8001486:	4413      	add	r3, r2
 8001488:	68da      	ldr	r2, [r3, #12]
 800148a:	69fb      	ldr	r3, [r7, #28]
 800148c:	1ad3      	subs	r3, r2, r3
 800148e:	60fb      	str	r3, [r7, #12]
		if(diff > 1 || diff < 0){
 8001490:	68fb      	ldr	r3, [r7, #12]
 8001492:	2b01      	cmp	r3, #1
 8001494:	dc02      	bgt.n	800149c <groupContinuity+0x44>
 8001496:	68fb      	ldr	r3, [r7, #12]
 8001498:	2b00      	cmp	r3, #0
 800149a:	da2d      	bge.n	80014f8 <groupContinuity+0xa0>
			replaceGroup = noteArr[i][3];
 800149c:	69ba      	ldr	r2, [r7, #24]
 800149e:	4613      	mov	r3, r2
 80014a0:	009b      	lsls	r3, r3, #2
 80014a2:	4413      	add	r3, r2
 80014a4:	009b      	lsls	r3, r3, #2
 80014a6:	461a      	mov	r2, r3
 80014a8:	687b      	ldr	r3, [r7, #4]
 80014aa:	4413      	add	r3, r2
 80014ac:	68db      	ldr	r3, [r3, #12]
 80014ae:	617b      	str	r3, [r7, #20]
			newGroupNum = prevGroupNum + 1;
 80014b0:	69fb      	ldr	r3, [r7, #28]
 80014b2:	3301      	adds	r3, #1
 80014b4:	613b      	str	r3, [r7, #16]
			while(noteArr[i][3] == replaceGroup && (i < len)){
 80014b6:	e00c      	b.n	80014d2 <groupContinuity+0x7a>
				noteArr[i][3] = newGroupNum;
 80014b8:	69ba      	ldr	r2, [r7, #24]
 80014ba:	4613      	mov	r3, r2
 80014bc:	009b      	lsls	r3, r3, #2
 80014be:	4413      	add	r3, r2
 80014c0:	009b      	lsls	r3, r3, #2
 80014c2:	461a      	mov	r2, r3
 80014c4:	687b      	ldr	r3, [r7, #4]
 80014c6:	4413      	add	r3, r2
 80014c8:	693a      	ldr	r2, [r7, #16]
 80014ca:	60da      	str	r2, [r3, #12]
				i++;
 80014cc:	69bb      	ldr	r3, [r7, #24]
 80014ce:	3301      	adds	r3, #1
 80014d0:	61bb      	str	r3, [r7, #24]
			while(noteArr[i][3] == replaceGroup && (i < len)){
 80014d2:	69ba      	ldr	r2, [r7, #24]
 80014d4:	4613      	mov	r3, r2
 80014d6:	009b      	lsls	r3, r3, #2
 80014d8:	4413      	add	r3, r2
 80014da:	009b      	lsls	r3, r3, #2
 80014dc:	461a      	mov	r2, r3
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	4413      	add	r3, r2
 80014e2:	68db      	ldr	r3, [r3, #12]
 80014e4:	697a      	ldr	r2, [r7, #20]
 80014e6:	429a      	cmp	r2, r3
 80014e8:	d103      	bne.n	80014f2 <groupContinuity+0x9a>
 80014ea:	69ba      	ldr	r2, [r7, #24]
 80014ec:	683b      	ldr	r3, [r7, #0]
 80014ee:	429a      	cmp	r2, r3
 80014f0:	dbe2      	blt.n	80014b8 <groupContinuity+0x60>
			}
			i--;
 80014f2:	69bb      	ldr	r3, [r7, #24]
 80014f4:	3b01      	subs	r3, #1
 80014f6:	61bb      	str	r3, [r7, #24]
		}
		prevGroupNum = noteArr[i][3];
 80014f8:	69ba      	ldr	r2, [r7, #24]
 80014fa:	4613      	mov	r3, r2
 80014fc:	009b      	lsls	r3, r3, #2
 80014fe:	4413      	add	r3, r2
 8001500:	009b      	lsls	r3, r3, #2
 8001502:	461a      	mov	r2, r3
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	4413      	add	r3, r2
 8001508:	68db      	ldr	r3, [r3, #12]
 800150a:	61fb      	str	r3, [r7, #28]
	for(int i = 0; i < len; i++){
 800150c:	69bb      	ldr	r3, [r7, #24]
 800150e:	3301      	adds	r3, #1
 8001510:	61bb      	str	r3, [r7, #24]
 8001512:	69ba      	ldr	r2, [r7, #24]
 8001514:	683b      	ldr	r3, [r7, #0]
 8001516:	429a      	cmp	r2, r3
 8001518:	dbae      	blt.n	8001478 <groupContinuity+0x20>
	}
}
 800151a:	bf00      	nop
 800151c:	bf00      	nop
 800151e:	3724      	adds	r7, #36	; 0x24
 8001520:	46bd      	mov	sp, r7
 8001522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001526:	4770      	bx	lr

08001528 <movementOps>:

// Search for all movement opportunities and use them as divisions between groups
void movementOps(int noteArr[][noteColNum], int len){
 8001528:	b480      	push	{r7}
 800152a:	b087      	sub	sp, #28
 800152c:	af00      	add	r7, sp, #0
 800152e:	6078      	str	r0, [r7, #4]
 8001530:	6039      	str	r1, [r7, #0]
	int current_group = 0;
 8001532:	2300      	movs	r3, #0
 8001534:	617b      	str	r3, [r7, #20]
	int time_max = noteArr[0][2];
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	689b      	ldr	r3, [r3, #8]
 800153a:	613b      	str	r3, [r7, #16]
	noteArr[0][3] = 0;
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	2200      	movs	r2, #0
 8001540:	60da      	str	r2, [r3, #12]
	for(int i = 1; i < len; i++){
 8001542:	2301      	movs	r3, #1
 8001544:	60fb      	str	r3, [r7, #12]
 8001546:	e051      	b.n	80015ec <movementOps+0xc4>
		if(noteArr[i][1] > time_max){
 8001548:	68fa      	ldr	r2, [r7, #12]
 800154a:	4613      	mov	r3, r2
 800154c:	009b      	lsls	r3, r3, #2
 800154e:	4413      	add	r3, r2
 8001550:	009b      	lsls	r3, r3, #2
 8001552:	461a      	mov	r2, r3
 8001554:	687b      	ldr	r3, [r7, #4]
 8001556:	4413      	add	r3, r2
 8001558:	685b      	ldr	r3, [r3, #4]
 800155a:	693a      	ldr	r2, [r7, #16]
 800155c:	429a      	cmp	r2, r3
 800155e:	da17      	bge.n	8001590 <movementOps+0x68>
			current_group++;
 8001560:	697b      	ldr	r3, [r7, #20]
 8001562:	3301      	adds	r3, #1
 8001564:	617b      	str	r3, [r7, #20]
			noteArr[i][3] = current_group;
 8001566:	68fa      	ldr	r2, [r7, #12]
 8001568:	4613      	mov	r3, r2
 800156a:	009b      	lsls	r3, r3, #2
 800156c:	4413      	add	r3, r2
 800156e:	009b      	lsls	r3, r3, #2
 8001570:	461a      	mov	r2, r3
 8001572:	687b      	ldr	r3, [r7, #4]
 8001574:	4413      	add	r3, r2
 8001576:	697a      	ldr	r2, [r7, #20]
 8001578:	60da      	str	r2, [r3, #12]
			time_max = noteArr[i][2];
 800157a:	68fa      	ldr	r2, [r7, #12]
 800157c:	4613      	mov	r3, r2
 800157e:	009b      	lsls	r3, r3, #2
 8001580:	4413      	add	r3, r2
 8001582:	009b      	lsls	r3, r3, #2
 8001584:	461a      	mov	r2, r3
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	4413      	add	r3, r2
 800158a:	689b      	ldr	r3, [r3, #8]
 800158c:	613b      	str	r3, [r7, #16]
 800158e:	e02a      	b.n	80015e6 <movementOps+0xbe>
		}
		else if(noteArr[i][2] > time_max){
 8001590:	68fa      	ldr	r2, [r7, #12]
 8001592:	4613      	mov	r3, r2
 8001594:	009b      	lsls	r3, r3, #2
 8001596:	4413      	add	r3, r2
 8001598:	009b      	lsls	r3, r3, #2
 800159a:	461a      	mov	r2, r3
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	4413      	add	r3, r2
 80015a0:	689b      	ldr	r3, [r3, #8]
 80015a2:	693a      	ldr	r2, [r7, #16]
 80015a4:	429a      	cmp	r2, r3
 80015a6:	da14      	bge.n	80015d2 <movementOps+0xaa>
			time_max = noteArr[i][2];
 80015a8:	68fa      	ldr	r2, [r7, #12]
 80015aa:	4613      	mov	r3, r2
 80015ac:	009b      	lsls	r3, r3, #2
 80015ae:	4413      	add	r3, r2
 80015b0:	009b      	lsls	r3, r3, #2
 80015b2:	461a      	mov	r2, r3
 80015b4:	687b      	ldr	r3, [r7, #4]
 80015b6:	4413      	add	r3, r2
 80015b8:	689b      	ldr	r3, [r3, #8]
 80015ba:	613b      	str	r3, [r7, #16]
			noteArr[i][3] = current_group;
 80015bc:	68fa      	ldr	r2, [r7, #12]
 80015be:	4613      	mov	r3, r2
 80015c0:	009b      	lsls	r3, r3, #2
 80015c2:	4413      	add	r3, r2
 80015c4:	009b      	lsls	r3, r3, #2
 80015c6:	461a      	mov	r2, r3
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	4413      	add	r3, r2
 80015cc:	697a      	ldr	r2, [r7, #20]
 80015ce:	60da      	str	r2, [r3, #12]
 80015d0:	e009      	b.n	80015e6 <movementOps+0xbe>
		}
		else{
			noteArr[i][3] = current_group;
 80015d2:	68fa      	ldr	r2, [r7, #12]
 80015d4:	4613      	mov	r3, r2
 80015d6:	009b      	lsls	r3, r3, #2
 80015d8:	4413      	add	r3, r2
 80015da:	009b      	lsls	r3, r3, #2
 80015dc:	461a      	mov	r2, r3
 80015de:	687b      	ldr	r3, [r7, #4]
 80015e0:	4413      	add	r3, r2
 80015e2:	697a      	ldr	r2, [r7, #20]
 80015e4:	60da      	str	r2, [r3, #12]
	for(int i = 1; i < len; i++){
 80015e6:	68fb      	ldr	r3, [r7, #12]
 80015e8:	3301      	adds	r3, #1
 80015ea:	60fb      	str	r3, [r7, #12]
 80015ec:	68fa      	ldr	r2, [r7, #12]
 80015ee:	683b      	ldr	r3, [r7, #0]
 80015f0:	429a      	cmp	r2, r3
 80015f2:	dba9      	blt.n	8001548 <movementOps+0x20>
		}
	}
}
 80015f4:	bf00      	nop
 80015f6:	bf00      	nop
 80015f8:	371c      	adds	r7, #28
 80015fa:	46bd      	mov	sp, r7
 80015fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001600:	4770      	bx	lr

08001602 <assignActuatorPos>:

// Assign actuator positions using a note data array
int assignActuatorPos(int actuatorPos[][2], int noteArr[][noteColNum], int note_len, int hand){
 8001602:	b580      	push	{r7, lr}
 8001604:	b088      	sub	sp, #32
 8001606:	af00      	add	r7, sp, #0
 8001608:	60f8      	str	r0, [r7, #12]
 800160a:	60b9      	str	r1, [r7, #8]
 800160c:	607a      	str	r2, [r7, #4]
 800160e:	603b      	str	r3, [r7, #0]
	if(note_len < 1){
 8001610:	687b      	ldr	r3, [r7, #4]
 8001612:	2b00      	cmp	r3, #0
 8001614:	dc01      	bgt.n	800161a <assignActuatorPos+0x18>
		return 0;
 8001616:	2300      	movs	r3, #0
 8001618:	e0d5      	b.n	80017c6 <assignActuatorPos+0x1c4>
	}
	int current_group = 0;
 800161a:	2300      	movs	r3, #0
 800161c:	61fb      	str	r3, [r7, #28]
	int group_min_note = nearestMinWhite(noteArr[0][0]);
 800161e:	68bb      	ldr	r3, [r7, #8]
 8001620:	681b      	ldr	r3, [r3, #0]
 8001622:	4618      	mov	r0, r3
 8001624:	f7ff fe9a 	bl	800135c <nearestMinWhite>
 8001628:	61b8      	str	r0, [r7, #24]
	int group_min_time = noteArr[0][1];
 800162a:	68bb      	ldr	r3, [r7, #8]
 800162c:	685b      	ldr	r3, [r3, #4]
 800162e:	617b      	str	r3, [r7, #20]
	for(int i = 0; i < note_len; i++){
 8001630:	2300      	movs	r3, #0
 8001632:	613b      	str	r3, [r7, #16]
 8001634:	e091      	b.n	800175a <assignActuatorPos+0x158>
		if(noteArr[i][3] != current_group){
 8001636:	693a      	ldr	r2, [r7, #16]
 8001638:	4613      	mov	r3, r2
 800163a:	009b      	lsls	r3, r3, #2
 800163c:	4413      	add	r3, r2
 800163e:	009b      	lsls	r3, r3, #2
 8001640:	461a      	mov	r2, r3
 8001642:	68bb      	ldr	r3, [r7, #8]
 8001644:	4413      	add	r3, r2
 8001646:	68db      	ldr	r3, [r3, #12]
 8001648:	69fa      	ldr	r2, [r7, #28]
 800164a:	429a      	cmp	r2, r3
 800164c:	d05e      	beq.n	800170c <assignActuatorPos+0x10a>
			if(group_min_note > highestNote || group_min_note < lowestNote || (hand && group_min_note > defaultLeft) || (!hand && group_min_note < defaultRight)){
 800164e:	69bb      	ldr	r3, [r7, #24]
 8001650:	2b60      	cmp	r3, #96	; 0x60
 8001652:	dc0e      	bgt.n	8001672 <assignActuatorPos+0x70>
 8001654:	69bb      	ldr	r3, [r7, #24]
 8001656:	2b23      	cmp	r3, #35	; 0x23
 8001658:	dd0b      	ble.n	8001672 <assignActuatorPos+0x70>
 800165a:	683b      	ldr	r3, [r7, #0]
 800165c:	2b00      	cmp	r3, #0
 800165e:	d002      	beq.n	8001666 <assignActuatorPos+0x64>
 8001660:	69bb      	ldr	r3, [r7, #24]
 8001662:	2b2b      	cmp	r3, #43	; 0x2b
 8001664:	dc05      	bgt.n	8001672 <assignActuatorPos+0x70>
 8001666:	683b      	ldr	r3, [r7, #0]
 8001668:	2b00      	cmp	r3, #0
 800166a:	d113      	bne.n	8001694 <assignActuatorPos+0x92>
 800166c:	69bb      	ldr	r3, [r7, #24]
 800166e:	2b3b      	cmp	r3, #59	; 0x3b
 8001670:	dc10      	bgt.n	8001694 <assignActuatorPos+0x92>
				if(hand){
 8001672:	683b      	ldr	r3, [r7, #0]
 8001674:	2b00      	cmp	r3, #0
 8001676:	d006      	beq.n	8001686 <assignActuatorPos+0x84>
					actuatorPos[current_group][0] = defaultLeft;
 8001678:	69fb      	ldr	r3, [r7, #28]
 800167a:	00db      	lsls	r3, r3, #3
 800167c:	68fa      	ldr	r2, [r7, #12]
 800167e:	4413      	add	r3, r2
 8001680:	222b      	movs	r2, #43	; 0x2b
 8001682:	601a      	str	r2, [r3, #0]
				if(hand){
 8001684:	e00c      	b.n	80016a0 <assignActuatorPos+0x9e>
				}
				else{
					actuatorPos[current_group][0] = defaultRight;
 8001686:	69fb      	ldr	r3, [r7, #28]
 8001688:	00db      	lsls	r3, r3, #3
 800168a:	68fa      	ldr	r2, [r7, #12]
 800168c:	4413      	add	r3, r2
 800168e:	223c      	movs	r2, #60	; 0x3c
 8001690:	601a      	str	r2, [r3, #0]
				if(hand){
 8001692:	e005      	b.n	80016a0 <assignActuatorPos+0x9e>
				}
			}
			else{
				actuatorPos[current_group][0] = group_min_note;
 8001694:	69fb      	ldr	r3, [r7, #28]
 8001696:	00db      	lsls	r3, r3, #3
 8001698:	68fa      	ldr	r2, [r7, #12]
 800169a:	4413      	add	r3, r2
 800169c:	69ba      	ldr	r2, [r7, #24]
 800169e:	601a      	str	r2, [r3, #0]
			}
			actuatorPos[current_group][1] = group_min_time;
 80016a0:	69fb      	ldr	r3, [r7, #28]
 80016a2:	00db      	lsls	r3, r3, #3
 80016a4:	68fa      	ldr	r2, [r7, #12]
 80016a6:	4413      	add	r3, r2
 80016a8:	697a      	ldr	r2, [r7, #20]
 80016aa:	605a      	str	r2, [r3, #4]
			if(!noteArr[i][4]){
 80016ac:	693a      	ldr	r2, [r7, #16]
 80016ae:	4613      	mov	r3, r2
 80016b0:	009b      	lsls	r3, r3, #2
 80016b2:	4413      	add	r3, r2
 80016b4:	009b      	lsls	r3, r3, #2
 80016b6:	461a      	mov	r2, r3
 80016b8:	68bb      	ldr	r3, [r7, #8]
 80016ba:	4413      	add	r3, r2
 80016bc:	691b      	ldr	r3, [r3, #16]
 80016be:	2b00      	cmp	r3, #0
 80016c0:	d10d      	bne.n	80016de <assignActuatorPos+0xdc>
				group_min_note = nearestMinWhite(noteArr[i][0]);
 80016c2:	693a      	ldr	r2, [r7, #16]
 80016c4:	4613      	mov	r3, r2
 80016c6:	009b      	lsls	r3, r3, #2
 80016c8:	4413      	add	r3, r2
 80016ca:	009b      	lsls	r3, r3, #2
 80016cc:	461a      	mov	r2, r3
 80016ce:	68bb      	ldr	r3, [r7, #8]
 80016d0:	4413      	add	r3, r2
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	4618      	mov	r0, r3
 80016d6:	f7ff fe41 	bl	800135c <nearestMinWhite>
 80016da:	61b8      	str	r0, [r7, #24]
 80016dc:	e001      	b.n	80016e2 <assignActuatorPos+0xe0>
			}
			else{
				group_min_note = 100;
 80016de:	2364      	movs	r3, #100	; 0x64
 80016e0:	61bb      	str	r3, [r7, #24]
			}
			group_min_time = noteArr[i][1];
 80016e2:	693a      	ldr	r2, [r7, #16]
 80016e4:	4613      	mov	r3, r2
 80016e6:	009b      	lsls	r3, r3, #2
 80016e8:	4413      	add	r3, r2
 80016ea:	009b      	lsls	r3, r3, #2
 80016ec:	461a      	mov	r2, r3
 80016ee:	68bb      	ldr	r3, [r7, #8]
 80016f0:	4413      	add	r3, r2
 80016f2:	685b      	ldr	r3, [r3, #4]
 80016f4:	617b      	str	r3, [r7, #20]
			current_group = noteArr[i][3];
 80016f6:	693a      	ldr	r2, [r7, #16]
 80016f8:	4613      	mov	r3, r2
 80016fa:	009b      	lsls	r3, r3, #2
 80016fc:	4413      	add	r3, r2
 80016fe:	009b      	lsls	r3, r3, #2
 8001700:	461a      	mov	r2, r3
 8001702:	68bb      	ldr	r3, [r7, #8]
 8001704:	4413      	add	r3, r2
 8001706:	68db      	ldr	r3, [r3, #12]
 8001708:	61fb      	str	r3, [r7, #28]
 800170a:	e023      	b.n	8001754 <assignActuatorPos+0x152>
		}
		else if(noteArr[i][0] < group_min_note && !noteArr[i][4]){
 800170c:	693a      	ldr	r2, [r7, #16]
 800170e:	4613      	mov	r3, r2
 8001710:	009b      	lsls	r3, r3, #2
 8001712:	4413      	add	r3, r2
 8001714:	009b      	lsls	r3, r3, #2
 8001716:	461a      	mov	r2, r3
 8001718:	68bb      	ldr	r3, [r7, #8]
 800171a:	4413      	add	r3, r2
 800171c:	681b      	ldr	r3, [r3, #0]
 800171e:	69ba      	ldr	r2, [r7, #24]
 8001720:	429a      	cmp	r2, r3
 8001722:	dd17      	ble.n	8001754 <assignActuatorPos+0x152>
 8001724:	693a      	ldr	r2, [r7, #16]
 8001726:	4613      	mov	r3, r2
 8001728:	009b      	lsls	r3, r3, #2
 800172a:	4413      	add	r3, r2
 800172c:	009b      	lsls	r3, r3, #2
 800172e:	461a      	mov	r2, r3
 8001730:	68bb      	ldr	r3, [r7, #8]
 8001732:	4413      	add	r3, r2
 8001734:	691b      	ldr	r3, [r3, #16]
 8001736:	2b00      	cmp	r3, #0
 8001738:	d10c      	bne.n	8001754 <assignActuatorPos+0x152>
				group_min_note = nearestMinWhite(noteArr[i][0]);
 800173a:	693a      	ldr	r2, [r7, #16]
 800173c:	4613      	mov	r3, r2
 800173e:	009b      	lsls	r3, r3, #2
 8001740:	4413      	add	r3, r2
 8001742:	009b      	lsls	r3, r3, #2
 8001744:	461a      	mov	r2, r3
 8001746:	68bb      	ldr	r3, [r7, #8]
 8001748:	4413      	add	r3, r2
 800174a:	681b      	ldr	r3, [r3, #0]
 800174c:	4618      	mov	r0, r3
 800174e:	f7ff fe05 	bl	800135c <nearestMinWhite>
 8001752:	61b8      	str	r0, [r7, #24]
	for(int i = 0; i < note_len; i++){
 8001754:	693b      	ldr	r3, [r7, #16]
 8001756:	3301      	adds	r3, #1
 8001758:	613b      	str	r3, [r7, #16]
 800175a:	693a      	ldr	r2, [r7, #16]
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	429a      	cmp	r2, r3
 8001760:	f6ff af69 	blt.w	8001636 <assignActuatorPos+0x34>
		}
	}
	if(group_min_note > highestNote || group_min_note < lowestNote || (hand && group_min_note > defaultLeft) || (!hand && group_min_note < defaultRight)){
 8001764:	69bb      	ldr	r3, [r7, #24]
 8001766:	2b60      	cmp	r3, #96	; 0x60
 8001768:	dc0e      	bgt.n	8001788 <assignActuatorPos+0x186>
 800176a:	69bb      	ldr	r3, [r7, #24]
 800176c:	2b23      	cmp	r3, #35	; 0x23
 800176e:	dd0b      	ble.n	8001788 <assignActuatorPos+0x186>
 8001770:	683b      	ldr	r3, [r7, #0]
 8001772:	2b00      	cmp	r3, #0
 8001774:	d002      	beq.n	800177c <assignActuatorPos+0x17a>
 8001776:	69bb      	ldr	r3, [r7, #24]
 8001778:	2b2b      	cmp	r3, #43	; 0x2b
 800177a:	dc05      	bgt.n	8001788 <assignActuatorPos+0x186>
 800177c:	683b      	ldr	r3, [r7, #0]
 800177e:	2b00      	cmp	r3, #0
 8001780:	d113      	bne.n	80017aa <assignActuatorPos+0x1a8>
 8001782:	69bb      	ldr	r3, [r7, #24]
 8001784:	2b3b      	cmp	r3, #59	; 0x3b
 8001786:	dc10      	bgt.n	80017aa <assignActuatorPos+0x1a8>
		if(hand){
 8001788:	683b      	ldr	r3, [r7, #0]
 800178a:	2b00      	cmp	r3, #0
 800178c:	d006      	beq.n	800179c <assignActuatorPos+0x19a>
			actuatorPos[current_group][0] = defaultLeft;
 800178e:	69fb      	ldr	r3, [r7, #28]
 8001790:	00db      	lsls	r3, r3, #3
 8001792:	68fa      	ldr	r2, [r7, #12]
 8001794:	4413      	add	r3, r2
 8001796:	222b      	movs	r2, #43	; 0x2b
 8001798:	601a      	str	r2, [r3, #0]
		if(hand){
 800179a:	e00c      	b.n	80017b6 <assignActuatorPos+0x1b4>
		}
		else{
			actuatorPos[current_group][0] = defaultRight;
 800179c:	69fb      	ldr	r3, [r7, #28]
 800179e:	00db      	lsls	r3, r3, #3
 80017a0:	68fa      	ldr	r2, [r7, #12]
 80017a2:	4413      	add	r3, r2
 80017a4:	223c      	movs	r2, #60	; 0x3c
 80017a6:	601a      	str	r2, [r3, #0]
		if(hand){
 80017a8:	e005      	b.n	80017b6 <assignActuatorPos+0x1b4>
		}
	}
	else{
		actuatorPos[current_group][0] = group_min_note;
 80017aa:	69fb      	ldr	r3, [r7, #28]
 80017ac:	00db      	lsls	r3, r3, #3
 80017ae:	68fa      	ldr	r2, [r7, #12]
 80017b0:	4413      	add	r3, r2
 80017b2:	69ba      	ldr	r2, [r7, #24]
 80017b4:	601a      	str	r2, [r3, #0]
	}
	actuatorPos[current_group][1] = group_min_time;
 80017b6:	69fb      	ldr	r3, [r7, #28]
 80017b8:	00db      	lsls	r3, r3, #3
 80017ba:	68fa      	ldr	r2, [r7, #12]
 80017bc:	4413      	add	r3, r2
 80017be:	697a      	ldr	r2, [r7, #20]
 80017c0:	605a      	str	r2, [r3, #4]

	return current_group + 1;
 80017c2:	69fb      	ldr	r3, [r7, #28]
 80017c4:	3301      	adds	r3, #1
}
 80017c6:	4618      	mov	r0, r3
 80017c8:	3720      	adds	r7, #32
 80017ca:	46bd      	mov	sp, r7
 80017cc:	bd80      	pop	{r7, pc}

080017ce <splitStartStop>:

// Split start and stop times for notes
void splitStartStop(int noteArr[][noteColNum], int note_len, int noteArrStop[][2]){
 80017ce:	b480      	push	{r7}
 80017d0:	b087      	sub	sp, #28
 80017d2:	af00      	add	r7, sp, #0
 80017d4:	60f8      	str	r0, [r7, #12]
 80017d6:	60b9      	str	r1, [r7, #8]
 80017d8:	607a      	str	r2, [r7, #4]
	for(int i = 0; i < note_len; i++){
 80017da:	2300      	movs	r3, #0
 80017dc:	617b      	str	r3, [r7, #20]
 80017de:	e01e      	b.n	800181e <splitStartStop+0x50>
		noteArrStop[i][0] = noteArr[i][0];
 80017e0:	697a      	ldr	r2, [r7, #20]
 80017e2:	4613      	mov	r3, r2
 80017e4:	009b      	lsls	r3, r3, #2
 80017e6:	4413      	add	r3, r2
 80017e8:	009b      	lsls	r3, r3, #2
 80017ea:	461a      	mov	r2, r3
 80017ec:	68fb      	ldr	r3, [r7, #12]
 80017ee:	441a      	add	r2, r3
 80017f0:	697b      	ldr	r3, [r7, #20]
 80017f2:	00db      	lsls	r3, r3, #3
 80017f4:	6879      	ldr	r1, [r7, #4]
 80017f6:	440b      	add	r3, r1
 80017f8:	6812      	ldr	r2, [r2, #0]
 80017fa:	601a      	str	r2, [r3, #0]
		noteArrStop[i][1] = noteArr[i][2];
 80017fc:	697a      	ldr	r2, [r7, #20]
 80017fe:	4613      	mov	r3, r2
 8001800:	009b      	lsls	r3, r3, #2
 8001802:	4413      	add	r3, r2
 8001804:	009b      	lsls	r3, r3, #2
 8001806:	461a      	mov	r2, r3
 8001808:	68fb      	ldr	r3, [r7, #12]
 800180a:	441a      	add	r2, r3
 800180c:	697b      	ldr	r3, [r7, #20]
 800180e:	00db      	lsls	r3, r3, #3
 8001810:	6879      	ldr	r1, [r7, #4]
 8001812:	440b      	add	r3, r1
 8001814:	6892      	ldr	r2, [r2, #8]
 8001816:	605a      	str	r2, [r3, #4]
	for(int i = 0; i < note_len; i++){
 8001818:	697b      	ldr	r3, [r7, #20]
 800181a:	3301      	adds	r3, #1
 800181c:	617b      	str	r3, [r7, #20]
 800181e:	697a      	ldr	r2, [r7, #20]
 8001820:	68bb      	ldr	r3, [r7, #8]
 8001822:	429a      	cmp	r2, r3
 8001824:	dbdc      	blt.n	80017e0 <splitStartStop+0x12>
	}
}
 8001826:	bf00      	nop
 8001828:	bf00      	nop
 800182a:	371c      	adds	r7, #28
 800182c:	46bd      	mov	sp, r7
 800182e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001832:	4770      	bx	lr

08001834 <sortStop>:

// Sort stop array
void sortStop(int noteArr[][2], int note_len){
 8001834:	b480      	push	{r7}
 8001836:	b087      	sub	sp, #28
 8001838:	af00      	add	r7, sp, #0
 800183a:	6078      	str	r0, [r7, #4]
 800183c:	6039      	str	r1, [r7, #0]
	int key_note, key_time, j;
	for(int i = 1; i < note_len; i++){
 800183e:	2301      	movs	r3, #1
 8001840:	613b      	str	r3, [r7, #16]
 8001842:	e044      	b.n	80018ce <sortStop+0x9a>
		key_note = noteArr[i][0];
 8001844:	693b      	ldr	r3, [r7, #16]
 8001846:	00db      	lsls	r3, r3, #3
 8001848:	687a      	ldr	r2, [r7, #4]
 800184a:	4413      	add	r3, r2
 800184c:	681b      	ldr	r3, [r3, #0]
 800184e:	60fb      	str	r3, [r7, #12]
		key_time = noteArr[i][1];
 8001850:	693b      	ldr	r3, [r7, #16]
 8001852:	00db      	lsls	r3, r3, #3
 8001854:	687a      	ldr	r2, [r7, #4]
 8001856:	4413      	add	r3, r2
 8001858:	685b      	ldr	r3, [r3, #4]
 800185a:	60bb      	str	r3, [r7, #8]
		j = i - 1;
 800185c:	693b      	ldr	r3, [r7, #16]
 800185e:	3b01      	subs	r3, #1
 8001860:	617b      	str	r3, [r7, #20]

		while(j >= 0 && noteArr[j][1] > key_time){
 8001862:	e018      	b.n	8001896 <sortStop+0x62>
			noteArr[j + 1][0] = noteArr[j][0];
 8001864:	697b      	ldr	r3, [r7, #20]
 8001866:	00db      	lsls	r3, r3, #3
 8001868:	687a      	ldr	r2, [r7, #4]
 800186a:	441a      	add	r2, r3
 800186c:	697b      	ldr	r3, [r7, #20]
 800186e:	3301      	adds	r3, #1
 8001870:	00db      	lsls	r3, r3, #3
 8001872:	6879      	ldr	r1, [r7, #4]
 8001874:	440b      	add	r3, r1
 8001876:	6812      	ldr	r2, [r2, #0]
 8001878:	601a      	str	r2, [r3, #0]
			noteArr[j + 1][1] = noteArr[j][1];
 800187a:	697b      	ldr	r3, [r7, #20]
 800187c:	00db      	lsls	r3, r3, #3
 800187e:	687a      	ldr	r2, [r7, #4]
 8001880:	441a      	add	r2, r3
 8001882:	697b      	ldr	r3, [r7, #20]
 8001884:	3301      	adds	r3, #1
 8001886:	00db      	lsls	r3, r3, #3
 8001888:	6879      	ldr	r1, [r7, #4]
 800188a:	440b      	add	r3, r1
 800188c:	6852      	ldr	r2, [r2, #4]
 800188e:	605a      	str	r2, [r3, #4]
			j--;
 8001890:	697b      	ldr	r3, [r7, #20]
 8001892:	3b01      	subs	r3, #1
 8001894:	617b      	str	r3, [r7, #20]
		while(j >= 0 && noteArr[j][1] > key_time){
 8001896:	697b      	ldr	r3, [r7, #20]
 8001898:	2b00      	cmp	r3, #0
 800189a:	db07      	blt.n	80018ac <sortStop+0x78>
 800189c:	697b      	ldr	r3, [r7, #20]
 800189e:	00db      	lsls	r3, r3, #3
 80018a0:	687a      	ldr	r2, [r7, #4]
 80018a2:	4413      	add	r3, r2
 80018a4:	685b      	ldr	r3, [r3, #4]
 80018a6:	68ba      	ldr	r2, [r7, #8]
 80018a8:	429a      	cmp	r2, r3
 80018aa:	dbdb      	blt.n	8001864 <sortStop+0x30>
		}
		noteArr[j + 1][0] = key_note;
 80018ac:	697b      	ldr	r3, [r7, #20]
 80018ae:	3301      	adds	r3, #1
 80018b0:	00db      	lsls	r3, r3, #3
 80018b2:	687a      	ldr	r2, [r7, #4]
 80018b4:	4413      	add	r3, r2
 80018b6:	68fa      	ldr	r2, [r7, #12]
 80018b8:	601a      	str	r2, [r3, #0]
		noteArr[j + 1][1] = key_time;
 80018ba:	697b      	ldr	r3, [r7, #20]
 80018bc:	3301      	adds	r3, #1
 80018be:	00db      	lsls	r3, r3, #3
 80018c0:	687a      	ldr	r2, [r7, #4]
 80018c2:	4413      	add	r3, r2
 80018c4:	68ba      	ldr	r2, [r7, #8]
 80018c6:	605a      	str	r2, [r3, #4]
	for(int i = 1; i < note_len; i++){
 80018c8:	693b      	ldr	r3, [r7, #16]
 80018ca:	3301      	adds	r3, #1
 80018cc:	613b      	str	r3, [r7, #16]
 80018ce:	693a      	ldr	r2, [r7, #16]
 80018d0:	683b      	ldr	r3, [r7, #0]
 80018d2:	429a      	cmp	r2, r3
 80018d4:	dbb6      	blt.n	8001844 <sortStop+0x10>
	}
}
 80018d6:	bf00      	nop
 80018d8:	bf00      	nop
 80018da:	371c      	adds	r7, #28
 80018dc:	46bd      	mov	sp, r7
 80018de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018e2:	4770      	bx	lr

080018e4 <assignDCAct>:
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{2, 3, 4, 12, 5, 7, 8, 9, 10, 11, 12, 0},
};

// Assign DC actuator activations
void assignDCAct(int actuatorPos[][2], int actuator_len, int noteArr[][noteColNum], int note_len){
 80018e4:	b480      	push	{r7}
 80018e6:	b087      	sub	sp, #28
 80018e8:	af00      	add	r7, sp, #0
 80018ea:	60f8      	str	r0, [r7, #12]
 80018ec:	60b9      	str	r1, [r7, #8]
 80018ee:	607a      	str	r2, [r7, #4]
 80018f0:	603b      	str	r3, [r7, #0]
	int DCNum = 0;
 80018f2:	2300      	movs	r3, #0
 80018f4:	613b      	str	r3, [r7, #16]
	for(int i = 0; i < note_len; i++){
 80018f6:	2300      	movs	r3, #0
 80018f8:	617b      	str	r3, [r7, #20]
 80018fa:	e04f      	b.n	800199c <assignDCAct+0xb8>
		if(!noteArr[i][4]){
 80018fc:	697a      	ldr	r2, [r7, #20]
 80018fe:	4613      	mov	r3, r2
 8001900:	009b      	lsls	r3, r3, #2
 8001902:	4413      	add	r3, r2
 8001904:	009b      	lsls	r3, r3, #2
 8001906:	461a      	mov	r2, r3
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	4413      	add	r3, r2
 800190c:	691b      	ldr	r3, [r3, #16]
 800190e:	2b00      	cmp	r3, #0
 8001910:	d141      	bne.n	8001996 <assignDCAct+0xb2>
			DCNum = DCLookup[actuatorPos[(noteArr[i][3])][0] % 12][noteArr[i][0] % 12];
 8001912:	697a      	ldr	r2, [r7, #20]
 8001914:	4613      	mov	r3, r2
 8001916:	009b      	lsls	r3, r3, #2
 8001918:	4413      	add	r3, r2
 800191a:	009b      	lsls	r3, r3, #2
 800191c:	461a      	mov	r2, r3
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	4413      	add	r3, r2
 8001922:	68db      	ldr	r3, [r3, #12]
 8001924:	00db      	lsls	r3, r3, #3
 8001926:	68fa      	ldr	r2, [r7, #12]
 8001928:	4413      	add	r3, r2
 800192a:	6819      	ldr	r1, [r3, #0]
 800192c:	4b21      	ldr	r3, [pc, #132]	; (80019b4 <assignDCAct+0xd0>)
 800192e:	fb83 2301 	smull	r2, r3, r3, r1
 8001932:	105a      	asrs	r2, r3, #1
 8001934:	17cb      	asrs	r3, r1, #31
 8001936:	1ad2      	subs	r2, r2, r3
 8001938:	4613      	mov	r3, r2
 800193a:	005b      	lsls	r3, r3, #1
 800193c:	4413      	add	r3, r2
 800193e:	009b      	lsls	r3, r3, #2
 8001940:	1aca      	subs	r2, r1, r3
 8001942:	6979      	ldr	r1, [r7, #20]
 8001944:	460b      	mov	r3, r1
 8001946:	009b      	lsls	r3, r3, #2
 8001948:	440b      	add	r3, r1
 800194a:	009b      	lsls	r3, r3, #2
 800194c:	4619      	mov	r1, r3
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	440b      	add	r3, r1
 8001952:	6818      	ldr	r0, [r3, #0]
 8001954:	4b17      	ldr	r3, [pc, #92]	; (80019b4 <assignDCAct+0xd0>)
 8001956:	fb83 1300 	smull	r1, r3, r3, r0
 800195a:	1059      	asrs	r1, r3, #1
 800195c:	17c3      	asrs	r3, r0, #31
 800195e:	1ac9      	subs	r1, r1, r3
 8001960:	460b      	mov	r3, r1
 8001962:	005b      	lsls	r3, r3, #1
 8001964:	440b      	add	r3, r1
 8001966:	009b      	lsls	r3, r3, #2
 8001968:	1ac1      	subs	r1, r0, r3
 800196a:	4813      	ldr	r0, [pc, #76]	; (80019b8 <assignDCAct+0xd4>)
 800196c:	4613      	mov	r3, r2
 800196e:	005b      	lsls	r3, r3, #1
 8001970:	4413      	add	r3, r2
 8001972:	009b      	lsls	r3, r3, #2
 8001974:	440b      	add	r3, r1
 8001976:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800197a:	613b      	str	r3, [r7, #16]
			if(DCNum < 12){
 800197c:	693b      	ldr	r3, [r7, #16]
 800197e:	2b0b      	cmp	r3, #11
 8001980:	dc09      	bgt.n	8001996 <assignDCAct+0xb2>
				noteArr[i][0] = DCNum;
 8001982:	697a      	ldr	r2, [r7, #20]
 8001984:	4613      	mov	r3, r2
 8001986:	009b      	lsls	r3, r3, #2
 8001988:	4413      	add	r3, r2
 800198a:	009b      	lsls	r3, r3, #2
 800198c:	461a      	mov	r2, r3
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	4413      	add	r3, r2
 8001992:	693a      	ldr	r2, [r7, #16]
 8001994:	601a      	str	r2, [r3, #0]
	for(int i = 0; i < note_len; i++){
 8001996:	697b      	ldr	r3, [r7, #20]
 8001998:	3301      	adds	r3, #1
 800199a:	617b      	str	r3, [r7, #20]
 800199c:	697a      	ldr	r2, [r7, #20]
 800199e:	683b      	ldr	r3, [r7, #0]
 80019a0:	429a      	cmp	r2, r3
 80019a2:	dbab      	blt.n	80018fc <assignDCAct+0x18>
			}
		}

	}
}
 80019a4:	bf00      	nop
 80019a6:	bf00      	nop
 80019a8:	371c      	adds	r7, #28
 80019aa:	46bd      	mov	sp, r7
 80019ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b0:	4770      	bx	lr
 80019b2:	bf00      	nop
 80019b4:	2aaaaaab 	.word	0x2aaaaaab
 80019b8:	20000048 	.word	0x20000048

080019bc <setNextLinActuatorTime>:

int nextMove = 0;

// Sets TIM2 ARR so that it triggers for the next linear actuator movement
// Returns 0 if there is no next linear actuator movement
int setNextLinActuatorTime(int current_time){
 80019bc:	b480      	push	{r7}
 80019be:	b083      	sub	sp, #12
 80019c0:	af00      	add	r7, sp, #0
 80019c2:	6078      	str	r0, [r7, #4]
	if(actuatorL >= actuatorPosL_len){
 80019c4:	4b29      	ldr	r3, [pc, #164]	; (8001a6c <setNextLinActuatorTime+0xb0>)
 80019c6:	681a      	ldr	r2, [r3, #0]
 80019c8:	4b29      	ldr	r3, [pc, #164]	; (8001a70 <setNextLinActuatorTime+0xb4>)
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	429a      	cmp	r2, r3
 80019ce:	db11      	blt.n	80019f4 <setNextLinActuatorTime+0x38>
		if(actuatorR >= actuatorPosR_len){
 80019d0:	4b28      	ldr	r3, [pc, #160]	; (8001a74 <setNextLinActuatorTime+0xb8>)
 80019d2:	681a      	ldr	r2, [r3, #0]
 80019d4:	4b28      	ldr	r3, [pc, #160]	; (8001a78 <setNextLinActuatorTime+0xbc>)
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	429a      	cmp	r2, r3
 80019da:	db02      	blt.n	80019e2 <setNextLinActuatorTime+0x26>
			//HAL_TIM_Base_Stop_IT(&htim2);
			//return 0;
			return INT_MAX;
 80019dc:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80019e0:	e03e      	b.n	8001a60 <setNextLinActuatorTime+0xa4>
		}
		else{
			//TIM2->ARR = actuatorPosR[actuatorR][1] - current_time - 1;
			return actuatorPosR[actuatorR][1] - current_time;
 80019e2:	4b24      	ldr	r3, [pc, #144]	; (8001a74 <setNextLinActuatorTime+0xb8>)
 80019e4:	681b      	ldr	r3, [r3, #0]
 80019e6:	4a25      	ldr	r2, [pc, #148]	; (8001a7c <setNextLinActuatorTime+0xc0>)
 80019e8:	00db      	lsls	r3, r3, #3
 80019ea:	4413      	add	r3, r2
 80019ec:	685a      	ldr	r2, [r3, #4]
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	1ad3      	subs	r3, r2, r3
 80019f2:	e035      	b.n	8001a60 <setNextLinActuatorTime+0xa4>
		}
	}
	else if(actuatorR >= actuatorPosR_len){
 80019f4:	4b1f      	ldr	r3, [pc, #124]	; (8001a74 <setNextLinActuatorTime+0xb8>)
 80019f6:	681a      	ldr	r2, [r3, #0]
 80019f8:	4b1f      	ldr	r3, [pc, #124]	; (8001a78 <setNextLinActuatorTime+0xbc>)
 80019fa:	681b      	ldr	r3, [r3, #0]
 80019fc:	429a      	cmp	r2, r3
 80019fe:	db0e      	blt.n	8001a1e <setNextLinActuatorTime+0x62>
		if(actuatorL >= actuatorPosL_len){
 8001a00:	4b1a      	ldr	r3, [pc, #104]	; (8001a6c <setNextLinActuatorTime+0xb0>)
 8001a02:	681a      	ldr	r2, [r3, #0]
 8001a04:	4b1a      	ldr	r3, [pc, #104]	; (8001a70 <setNextLinActuatorTime+0xb4>)
 8001a06:	681b      	ldr	r3, [r3, #0]
 8001a08:	429a      	cmp	r2, r3
 8001a0a:	da28      	bge.n	8001a5e <setNextLinActuatorTime+0xa2>
			//HAL_TIM_Base_Stop_IT(&htim2);
			//return 0;
		}
		else{
			//TIM2->ARR = actuatorPosL[actuatorL][1] - current_time - 1;
			return actuatorPosL[actuatorL][1] - current_time;
 8001a0c:	4b17      	ldr	r3, [pc, #92]	; (8001a6c <setNextLinActuatorTime+0xb0>)
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	4a1b      	ldr	r2, [pc, #108]	; (8001a80 <setNextLinActuatorTime+0xc4>)
 8001a12:	00db      	lsls	r3, r3, #3
 8001a14:	4413      	add	r3, r2
 8001a16:	685a      	ldr	r2, [r3, #4]
 8001a18:	687b      	ldr	r3, [r7, #4]
 8001a1a:	1ad3      	subs	r3, r2, r3
 8001a1c:	e020      	b.n	8001a60 <setNextLinActuatorTime+0xa4>
		}
	}
	else if(actuatorPosL[actuatorL][1] < actuatorPosR[actuatorR][1]){
 8001a1e:	4b13      	ldr	r3, [pc, #76]	; (8001a6c <setNextLinActuatorTime+0xb0>)
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	4a17      	ldr	r2, [pc, #92]	; (8001a80 <setNextLinActuatorTime+0xc4>)
 8001a24:	00db      	lsls	r3, r3, #3
 8001a26:	4413      	add	r3, r2
 8001a28:	685a      	ldr	r2, [r3, #4]
 8001a2a:	4b12      	ldr	r3, [pc, #72]	; (8001a74 <setNextLinActuatorTime+0xb8>)
 8001a2c:	681b      	ldr	r3, [r3, #0]
 8001a2e:	4913      	ldr	r1, [pc, #76]	; (8001a7c <setNextLinActuatorTime+0xc0>)
 8001a30:	00db      	lsls	r3, r3, #3
 8001a32:	440b      	add	r3, r1
 8001a34:	685b      	ldr	r3, [r3, #4]
 8001a36:	429a      	cmp	r2, r3
 8001a38:	da08      	bge.n	8001a4c <setNextLinActuatorTime+0x90>
		//TIM2->ARR = actuatorPosL[actuatorL][1] - current_time - 1;
		return actuatorPosL[actuatorL][1] - current_time;
 8001a3a:	4b0c      	ldr	r3, [pc, #48]	; (8001a6c <setNextLinActuatorTime+0xb0>)
 8001a3c:	681b      	ldr	r3, [r3, #0]
 8001a3e:	4a10      	ldr	r2, [pc, #64]	; (8001a80 <setNextLinActuatorTime+0xc4>)
 8001a40:	00db      	lsls	r3, r3, #3
 8001a42:	4413      	add	r3, r2
 8001a44:	685a      	ldr	r2, [r3, #4]
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	1ad3      	subs	r3, r2, r3
 8001a4a:	e009      	b.n	8001a60 <setNextLinActuatorTime+0xa4>
	}
	else{
		//TIM2->ARR = actuatorPosR[actuatorR][1] - current_time - 1;
		return actuatorPosR[actuatorR][1] - current_time;
 8001a4c:	4b09      	ldr	r3, [pc, #36]	; (8001a74 <setNextLinActuatorTime+0xb8>)
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	4a0a      	ldr	r2, [pc, #40]	; (8001a7c <setNextLinActuatorTime+0xc0>)
 8001a52:	00db      	lsls	r3, r3, #3
 8001a54:	4413      	add	r3, r2
 8001a56:	685a      	ldr	r2, [r3, #4]
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	1ad3      	subs	r3, r2, r3
 8001a5c:	e000      	b.n	8001a60 <setNextLinActuatorTime+0xa4>
	}

	return 1;
 8001a5e:	2301      	movs	r3, #1
}
 8001a60:	4618      	mov	r0, r3
 8001a62:	370c      	adds	r7, #12
 8001a64:	46bd      	mov	sp, r7
 8001a66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a6a:	4770      	bx	lr
 8001a6c:	20008750 	.word	0x20008750
 8001a70:	200048b8 	.word	0x200048b8
 8001a74:	20008754 	.word	0x20008754
 8001a78:	2000873c 	.word	0x2000873c
 8001a7c:	200048bc 	.word	0x200048bc
 8001a80:	20000a38 	.word	0x20000a38

08001a84 <setDCStart>:


// Sets TIM3 ARR so that it triggers for the next DC actuator push
// Returns 0 if there is no next DC actuator push
int setDCStart(int current_time){
 8001a84:	b580      	push	{r7, lr}
 8001a86:	b082      	sub	sp, #8
 8001a88:	af00      	add	r7, sp, #0
 8001a8a:	6078      	str	r0, [r7, #4]
	if(DCLeftStart >= note_dataL_len){
 8001a8c:	4b38      	ldr	r3, [pc, #224]	; (8001b70 <setDCStart+0xec>)
 8001a8e:	681a      	ldr	r2, [r3, #0]
 8001a90:	4b38      	ldr	r3, [pc, #224]	; (8001b74 <setDCStart+0xf0>)
 8001a92:	681b      	ldr	r3, [r3, #0]
 8001a94:	429a      	cmp	r2, r3
 8001a96:	db18      	blt.n	8001aca <setDCStart+0x46>
		if(DCRightStart >= note_dataR_len){
 8001a98:	4b37      	ldr	r3, [pc, #220]	; (8001b78 <setDCStart+0xf4>)
 8001a9a:	681a      	ldr	r2, [r3, #0]
 8001a9c:	4b37      	ldr	r3, [pc, #220]	; (8001b7c <setDCStart+0xf8>)
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	429a      	cmp	r2, r3
 8001aa2:	db05      	blt.n	8001ab0 <setDCStart+0x2c>
			HAL_TIM_Base_Stop_IT(&htim3);
 8001aa4:	4836      	ldr	r0, [pc, #216]	; (8001b80 <setDCStart+0xfc>)
 8001aa6:	f008 fecf 	bl	800a848 <HAL_TIM_Base_Stop_IT>
			//return 0;
			return INT_MAX;
 8001aaa:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8001aae:	e05a      	b.n	8001b66 <setDCStart+0xe2>
		}
		else{
			//TIM3->ARR = note_dataR[DCRightStart][1] - current_time - 1;
			return note_dataR[DCRightStart][1] - current_time;
 8001ab0:	4b31      	ldr	r3, [pc, #196]	; (8001b78 <setDCStart+0xf4>)
 8001ab2:	681a      	ldr	r2, [r3, #0]
 8001ab4:	4933      	ldr	r1, [pc, #204]	; (8001b84 <setDCStart+0x100>)
 8001ab6:	4613      	mov	r3, r2
 8001ab8:	009b      	lsls	r3, r3, #2
 8001aba:	4413      	add	r3, r2
 8001abc:	009b      	lsls	r3, r3, #2
 8001abe:	440b      	add	r3, r1
 8001ac0:	3304      	adds	r3, #4
 8001ac2:	681a      	ldr	r2, [r3, #0]
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	1ad3      	subs	r3, r2, r3
 8001ac8:	e04d      	b.n	8001b66 <setDCStart+0xe2>
		}
	}
	else if(DCRightStart >= note_dataR_len){
 8001aca:	4b2b      	ldr	r3, [pc, #172]	; (8001b78 <setDCStart+0xf4>)
 8001acc:	681a      	ldr	r2, [r3, #0]
 8001ace:	4b2b      	ldr	r3, [pc, #172]	; (8001b7c <setDCStart+0xf8>)
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	429a      	cmp	r2, r3
 8001ad4:	db18      	blt.n	8001b08 <setDCStart+0x84>
		if(DCLeftStart >= note_dataL_len){
 8001ad6:	4b26      	ldr	r3, [pc, #152]	; (8001b70 <setDCStart+0xec>)
 8001ad8:	681a      	ldr	r2, [r3, #0]
 8001ada:	4b26      	ldr	r3, [pc, #152]	; (8001b74 <setDCStart+0xf0>)
 8001adc:	681b      	ldr	r3, [r3, #0]
 8001ade:	429a      	cmp	r2, r3
 8001ae0:	db05      	blt.n	8001aee <setDCStart+0x6a>
			HAL_TIM_Base_Stop_IT(&htim3);
 8001ae2:	4827      	ldr	r0, [pc, #156]	; (8001b80 <setDCStart+0xfc>)
 8001ae4:	f008 feb0 	bl	800a848 <HAL_TIM_Base_Stop_IT>
			//return 0;
			return INT_MAX;
 8001ae8:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8001aec:	e03b      	b.n	8001b66 <setDCStart+0xe2>
		}
		else{
			//TIM3->ARR = note_dataL[DCLeftStart][1] - current_time - 1;
			return note_dataL[DCLeftStart][1] - current_time;
 8001aee:	4b20      	ldr	r3, [pc, #128]	; (8001b70 <setDCStart+0xec>)
 8001af0:	681a      	ldr	r2, [r3, #0]
 8001af2:	4925      	ldr	r1, [pc, #148]	; (8001b88 <setDCStart+0x104>)
 8001af4:	4613      	mov	r3, r2
 8001af6:	009b      	lsls	r3, r3, #2
 8001af8:	4413      	add	r3, r2
 8001afa:	009b      	lsls	r3, r3, #2
 8001afc:	440b      	add	r3, r1
 8001afe:	3304      	adds	r3, #4
 8001b00:	681a      	ldr	r2, [r3, #0]
 8001b02:	687b      	ldr	r3, [r7, #4]
 8001b04:	1ad3      	subs	r3, r2, r3
 8001b06:	e02e      	b.n	8001b66 <setDCStart+0xe2>
		}
	}
	else if(note_dataL[DCLeftStart][1] < note_dataR[DCRightStart][1]){
 8001b08:	4b19      	ldr	r3, [pc, #100]	; (8001b70 <setDCStart+0xec>)
 8001b0a:	681a      	ldr	r2, [r3, #0]
 8001b0c:	491e      	ldr	r1, [pc, #120]	; (8001b88 <setDCStart+0x104>)
 8001b0e:	4613      	mov	r3, r2
 8001b10:	009b      	lsls	r3, r3, #2
 8001b12:	4413      	add	r3, r2
 8001b14:	009b      	lsls	r3, r3, #2
 8001b16:	440b      	add	r3, r1
 8001b18:	3304      	adds	r3, #4
 8001b1a:	6819      	ldr	r1, [r3, #0]
 8001b1c:	4b16      	ldr	r3, [pc, #88]	; (8001b78 <setDCStart+0xf4>)
 8001b1e:	681a      	ldr	r2, [r3, #0]
 8001b20:	4818      	ldr	r0, [pc, #96]	; (8001b84 <setDCStart+0x100>)
 8001b22:	4613      	mov	r3, r2
 8001b24:	009b      	lsls	r3, r3, #2
 8001b26:	4413      	add	r3, r2
 8001b28:	009b      	lsls	r3, r3, #2
 8001b2a:	4403      	add	r3, r0
 8001b2c:	3304      	adds	r3, #4
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	4299      	cmp	r1, r3
 8001b32:	da0c      	bge.n	8001b4e <setDCStart+0xca>
		//TIM3->ARR = note_dataL[DCLeftStart][1] - current_time - 1;
		return note_dataL[DCLeftStart][1] - current_time;
 8001b34:	4b0e      	ldr	r3, [pc, #56]	; (8001b70 <setDCStart+0xec>)
 8001b36:	681a      	ldr	r2, [r3, #0]
 8001b38:	4913      	ldr	r1, [pc, #76]	; (8001b88 <setDCStart+0x104>)
 8001b3a:	4613      	mov	r3, r2
 8001b3c:	009b      	lsls	r3, r3, #2
 8001b3e:	4413      	add	r3, r2
 8001b40:	009b      	lsls	r3, r3, #2
 8001b42:	440b      	add	r3, r1
 8001b44:	3304      	adds	r3, #4
 8001b46:	681a      	ldr	r2, [r3, #0]
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	1ad3      	subs	r3, r2, r3
 8001b4c:	e00b      	b.n	8001b66 <setDCStart+0xe2>
	}
	else{
		//TIM3->ARR = note_dataR[DCRightStart][1] - current_time - 1;
		return note_dataR[DCRightStart][1] - current_time;
 8001b4e:	4b0a      	ldr	r3, [pc, #40]	; (8001b78 <setDCStart+0xf4>)
 8001b50:	681a      	ldr	r2, [r3, #0]
 8001b52:	490c      	ldr	r1, [pc, #48]	; (8001b84 <setDCStart+0x100>)
 8001b54:	4613      	mov	r3, r2
 8001b56:	009b      	lsls	r3, r3, #2
 8001b58:	4413      	add	r3, r2
 8001b5a:	009b      	lsls	r3, r3, #2
 8001b5c:	440b      	add	r3, r1
 8001b5e:	3304      	adds	r3, #4
 8001b60:	681a      	ldr	r2, [r3, #0]
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	1ad3      	subs	r3, r2, r3
	}
	return 1;
}
 8001b66:	4618      	mov	r0, r3
 8001b68:	3708      	adds	r7, #8
 8001b6a:	46bd      	mov	sp, r7
 8001b6c:	bd80      	pop	{r7, pc}
 8001b6e:	bf00      	nop
 8001b70:	20008758 	.word	0x20008758
 8001b74:	200123a8 	.word	0x200123a8
 8001b78:	20008760 	.word	0x20008760
 8001b7c:	2001bfec 	.word	0x2001bfec
 8001b80:	200007d8 	.word	0x200007d8
 8001b84:	200123ac 	.word	0x200123ac
 8001b88:	20008768 	.word	0x20008768

08001b8c <setDCStop>:

// Sets TIM4 ARR so that it triggers for the next DC actuator pull
// Returns 0 if there is no next DC actuator pull
int setDCStop(int current_time){
 8001b8c:	b580      	push	{r7, lr}
 8001b8e:	b082      	sub	sp, #8
 8001b90:	af00      	add	r7, sp, #0
 8001b92:	6078      	str	r0, [r7, #4]
	if(DCLeftStop >= note_dataL_len){
 8001b94:	4b2c      	ldr	r3, [pc, #176]	; (8001c48 <setDCStop+0xbc>)
 8001b96:	681a      	ldr	r2, [r3, #0]
 8001b98:	4b2c      	ldr	r3, [pc, #176]	; (8001c4c <setDCStop+0xc0>)
 8001b9a:	681b      	ldr	r3, [r3, #0]
 8001b9c:	429a      	cmp	r2, r3
 8001b9e:	db14      	blt.n	8001bca <setDCStop+0x3e>
		if(DCRightStop >= note_dataR_len){
 8001ba0:	4b2b      	ldr	r3, [pc, #172]	; (8001c50 <setDCStop+0xc4>)
 8001ba2:	681a      	ldr	r2, [r3, #0]
 8001ba4:	4b2b      	ldr	r3, [pc, #172]	; (8001c54 <setDCStop+0xc8>)
 8001ba6:	681b      	ldr	r3, [r3, #0]
 8001ba8:	429a      	cmp	r2, r3
 8001baa:	db05      	blt.n	8001bb8 <setDCStop+0x2c>
			HAL_TIM_Base_Stop_IT(&htim4);
 8001bac:	482a      	ldr	r0, [pc, #168]	; (8001c58 <setDCStop+0xcc>)
 8001bae:	f008 fe4b 	bl	800a848 <HAL_TIM_Base_Stop_IT>
			// return 0;
			return INT_MAX;
 8001bb2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8001bb6:	e042      	b.n	8001c3e <setDCStop+0xb2>
		}
		else{
			//TIM4->ARR = note_dataR_stop[DCRightStop][1] - current_time - 1;
			return note_dataR_stop[DCRightStop][1] - current_time ;
 8001bb8:	4b25      	ldr	r3, [pc, #148]	; (8001c50 <setDCStop+0xc4>)
 8001bba:	681b      	ldr	r3, [r3, #0]
 8001bbc:	4a27      	ldr	r2, [pc, #156]	; (8001c5c <setDCStop+0xd0>)
 8001bbe:	00db      	lsls	r3, r3, #3
 8001bc0:	4413      	add	r3, r2
 8001bc2:	685a      	ldr	r2, [r3, #4]
 8001bc4:	687b      	ldr	r3, [r7, #4]
 8001bc6:	1ad3      	subs	r3, r2, r3
 8001bc8:	e039      	b.n	8001c3e <setDCStop+0xb2>
		}
	}
	else if(DCRightStop >= note_dataR_len){
 8001bca:	4b21      	ldr	r3, [pc, #132]	; (8001c50 <setDCStop+0xc4>)
 8001bcc:	681a      	ldr	r2, [r3, #0]
 8001bce:	4b21      	ldr	r3, [pc, #132]	; (8001c54 <setDCStop+0xc8>)
 8001bd0:	681b      	ldr	r3, [r3, #0]
 8001bd2:	429a      	cmp	r2, r3
 8001bd4:	db14      	blt.n	8001c00 <setDCStop+0x74>
		if(DCLeftStop >= note_dataL_len){
 8001bd6:	4b1c      	ldr	r3, [pc, #112]	; (8001c48 <setDCStop+0xbc>)
 8001bd8:	681a      	ldr	r2, [r3, #0]
 8001bda:	4b1c      	ldr	r3, [pc, #112]	; (8001c4c <setDCStop+0xc0>)
 8001bdc:	681b      	ldr	r3, [r3, #0]
 8001bde:	429a      	cmp	r2, r3
 8001be0:	db05      	blt.n	8001bee <setDCStop+0x62>
			HAL_TIM_Base_Stop_IT(&htim4);
 8001be2:	481d      	ldr	r0, [pc, #116]	; (8001c58 <setDCStop+0xcc>)
 8001be4:	f008 fe30 	bl	800a848 <HAL_TIM_Base_Stop_IT>
			//return 0;
			return INT_MAX;
 8001be8:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8001bec:	e027      	b.n	8001c3e <setDCStop+0xb2>
		}
		else{
			//TIM4->ARR = note_dataL_stop[DCLeftStop][1] - current_time - 1;
			return note_dataL_stop[DCLeftStop][1] - current_time;
 8001bee:	4b16      	ldr	r3, [pc, #88]	; (8001c48 <setDCStop+0xbc>)
 8001bf0:	681b      	ldr	r3, [r3, #0]
 8001bf2:	4a1b      	ldr	r2, [pc, #108]	; (8001c60 <setDCStop+0xd4>)
 8001bf4:	00db      	lsls	r3, r3, #3
 8001bf6:	4413      	add	r3, r2
 8001bf8:	685a      	ldr	r2, [r3, #4]
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	1ad3      	subs	r3, r2, r3
 8001bfe:	e01e      	b.n	8001c3e <setDCStop+0xb2>
		}
	}
	else if(note_dataL_stop[DCLeftStop][1] < note_dataR_stop[DCRightStop][1]){
 8001c00:	4b11      	ldr	r3, [pc, #68]	; (8001c48 <setDCStop+0xbc>)
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	4a16      	ldr	r2, [pc, #88]	; (8001c60 <setDCStop+0xd4>)
 8001c06:	00db      	lsls	r3, r3, #3
 8001c08:	4413      	add	r3, r2
 8001c0a:	685a      	ldr	r2, [r3, #4]
 8001c0c:	4b10      	ldr	r3, [pc, #64]	; (8001c50 <setDCStop+0xc4>)
 8001c0e:	681b      	ldr	r3, [r3, #0]
 8001c10:	4912      	ldr	r1, [pc, #72]	; (8001c5c <setDCStop+0xd0>)
 8001c12:	00db      	lsls	r3, r3, #3
 8001c14:	440b      	add	r3, r1
 8001c16:	685b      	ldr	r3, [r3, #4]
 8001c18:	429a      	cmp	r2, r3
 8001c1a:	da08      	bge.n	8001c2e <setDCStop+0xa2>
		//TIM4->ARR = note_dataL_stop[DCLeftStop][1] - current_time - 1;
		return note_dataL_stop[DCLeftStop][1] - current_time;
 8001c1c:	4b0a      	ldr	r3, [pc, #40]	; (8001c48 <setDCStop+0xbc>)
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	4a0f      	ldr	r2, [pc, #60]	; (8001c60 <setDCStop+0xd4>)
 8001c22:	00db      	lsls	r3, r3, #3
 8001c24:	4413      	add	r3, r2
 8001c26:	685a      	ldr	r2, [r3, #4]
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	1ad3      	subs	r3, r2, r3
 8001c2c:	e007      	b.n	8001c3e <setDCStop+0xb2>
	}
	else{
		//TIM4->ARR = note_dataR_stop[DCRightStop][1] - current_time - 1;
		return note_dataR_stop[DCRightStop][1] - current_time;
 8001c2e:	4b08      	ldr	r3, [pc, #32]	; (8001c50 <setDCStop+0xc4>)
 8001c30:	681b      	ldr	r3, [r3, #0]
 8001c32:	4a0a      	ldr	r2, [pc, #40]	; (8001c5c <setDCStop+0xd0>)
 8001c34:	00db      	lsls	r3, r3, #3
 8001c36:	4413      	add	r3, r2
 8001c38:	685a      	ldr	r2, [r3, #4]
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	1ad3      	subs	r3, r2, r3
	}
	return 1;
}
 8001c3e:	4618      	mov	r0, r3
 8001c40:	3708      	adds	r7, #8
 8001c42:	46bd      	mov	sp, r7
 8001c44:	bd80      	pop	{r7, pc}
 8001c46:	bf00      	nop
 8001c48:	2000875c 	.word	0x2000875c
 8001c4c:	200123a8 	.word	0x200123a8
 8001c50:	20008764 	.word	0x20008764
 8001c54:	2001bfec 	.word	0x2001bfec
 8001c58:	20000824 	.word	0x20000824
 8001c5c:	2001bff0 	.word	0x2001bff0
 8001c60:	2001fe70 	.word	0x2001fe70

08001c64 <setNextAction>:

void setNextAction(int current_time){
 8001c64:	b580      	push	{r7, lr}
 8001c66:	b086      	sub	sp, #24
 8001c68:	af00      	add	r7, sp, #0
 8001c6a:	6078      	str	r0, [r7, #4]
	int nextLinAct = setNextLinActuatorTime(current_time);
 8001c6c:	6878      	ldr	r0, [r7, #4]
 8001c6e:	f7ff fea5 	bl	80019bc <setNextLinActuatorTime>
 8001c72:	6178      	str	r0, [r7, #20]
	int nextDCPush = setDCStart(current_time);
 8001c74:	6878      	ldr	r0, [r7, #4]
 8001c76:	f7ff ff05 	bl	8001a84 <setDCStart>
 8001c7a:	6138      	str	r0, [r7, #16]
	int nextDCPull = setDCStop(current_time);
 8001c7c:	6878      	ldr	r0, [r7, #4]
 8001c7e:	f7ff ff85 	bl	8001b8c <setDCStop>
 8001c82:	60f8      	str	r0, [r7, #12]
	if(nextDCPull == INT_MAX){
 8001c84:	68fb      	ldr	r3, [r7, #12]
 8001c86:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8001c8a:	4293      	cmp	r3, r2
 8001c8c:	d102      	bne.n	8001c94 <setNextAction+0x30>
		HAL_TIM_Base_Stop_IT(&htim2);
 8001c8e:	483a      	ldr	r0, [pc, #232]	; (8001d78 <setNextAction+0x114>)
 8001c90:	f008 fdda 	bl	800a848 <HAL_TIM_Base_Stop_IT>
	}
	if(nextDCPull == nextLinAct && nextDCPull <= nextDCPush){
 8001c94:	68fa      	ldr	r2, [r7, #12]
 8001c96:	697b      	ldr	r3, [r7, #20]
 8001c98:	429a      	cmp	r2, r3
 8001c9a:	d111      	bne.n	8001cc0 <setNextAction+0x5c>
 8001c9c:	68fa      	ldr	r2, [r7, #12]
 8001c9e:	693b      	ldr	r3, [r7, #16]
 8001ca0:	429a      	cmp	r2, r3
 8001ca2:	dc0d      	bgt.n	8001cc0 <setNextAction+0x5c>
		nextMove = 2;
 8001ca4:	4b35      	ldr	r3, [pc, #212]	; (8001d7c <setNextAction+0x118>)
 8001ca6:	2202      	movs	r2, #2
 8001ca8:	601a      	str	r2, [r3, #0]
		if(nextDCPull == 0){
 8001caa:	68fb      	ldr	r3, [r7, #12]
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d102      	bne.n	8001cb6 <setNextAction+0x52>
			nextDCPull++;
 8001cb0:	68fb      	ldr	r3, [r7, #12]
 8001cb2:	3301      	adds	r3, #1
 8001cb4:	60fb      	str	r3, [r7, #12]
		}
		TIM2->ARR = nextDCPull;
 8001cb6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001cba:	68fb      	ldr	r3, [r7, #12]
 8001cbc:	62d3      	str	r3, [r2, #44]	; 0x2c
 8001cbe:	e057      	b.n	8001d70 <setNextAction+0x10c>
	}
	else if(nextLinAct <= nextDCPush && nextDCPull > nextLinAct){
 8001cc0:	697a      	ldr	r2, [r7, #20]
 8001cc2:	693b      	ldr	r3, [r7, #16]
 8001cc4:	429a      	cmp	r2, r3
 8001cc6:	dc11      	bgt.n	8001cec <setNextAction+0x88>
 8001cc8:	68fa      	ldr	r2, [r7, #12]
 8001cca:	697b      	ldr	r3, [r7, #20]
 8001ccc:	429a      	cmp	r2, r3
 8001cce:	dd0d      	ble.n	8001cec <setNextAction+0x88>
		nextMove = 0;
 8001cd0:	4b2a      	ldr	r3, [pc, #168]	; (8001d7c <setNextAction+0x118>)
 8001cd2:	2200      	movs	r2, #0
 8001cd4:	601a      	str	r2, [r3, #0]
		if(nextLinAct == 0){
 8001cd6:	697b      	ldr	r3, [r7, #20]
 8001cd8:	2b00      	cmp	r3, #0
 8001cda:	d102      	bne.n	8001ce2 <setNextAction+0x7e>
			nextLinAct++;
 8001cdc:	697b      	ldr	r3, [r7, #20]
 8001cde:	3301      	adds	r3, #1
 8001ce0:	617b      	str	r3, [r7, #20]
		}
		TIM2->ARR = nextLinAct;
 8001ce2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001ce6:	697b      	ldr	r3, [r7, #20]
 8001ce8:	62d3      	str	r3, [r2, #44]	; 0x2c
 8001cea:	e041      	b.n	8001d70 <setNextAction+0x10c>
	}
	else{
		if(nextDCPull < nextDCPush && nextDCPull < nextLinAct){
 8001cec:	68fa      	ldr	r2, [r7, #12]
 8001cee:	693b      	ldr	r3, [r7, #16]
 8001cf0:	429a      	cmp	r2, r3
 8001cf2:	da11      	bge.n	8001d18 <setNextAction+0xb4>
 8001cf4:	68fa      	ldr	r2, [r7, #12]
 8001cf6:	697b      	ldr	r3, [r7, #20]
 8001cf8:	429a      	cmp	r2, r3
 8001cfa:	da0d      	bge.n	8001d18 <setNextAction+0xb4>
			nextMove = 2;
 8001cfc:	4b1f      	ldr	r3, [pc, #124]	; (8001d7c <setNextAction+0x118>)
 8001cfe:	2202      	movs	r2, #2
 8001d00:	601a      	str	r2, [r3, #0]
			if(nextDCPull == 0){
 8001d02:	68fb      	ldr	r3, [r7, #12]
 8001d04:	2b00      	cmp	r3, #0
 8001d06:	d102      	bne.n	8001d0e <setNextAction+0xaa>
				nextDCPull++;
 8001d08:	68fb      	ldr	r3, [r7, #12]
 8001d0a:	3301      	adds	r3, #1
 8001d0c:	60fb      	str	r3, [r7, #12]
			}
			TIM2->ARR = nextDCPull;
 8001d0e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001d12:	68fb      	ldr	r3, [r7, #12]
 8001d14:	62d3      	str	r3, [r2, #44]	; 0x2c
 8001d16:	e02b      	b.n	8001d70 <setNextAction+0x10c>
		}
		else if(nextLinAct < nextDCPush && nextLinAct < nextDCPull){
 8001d18:	697a      	ldr	r2, [r7, #20]
 8001d1a:	693b      	ldr	r3, [r7, #16]
 8001d1c:	429a      	cmp	r2, r3
 8001d1e:	da11      	bge.n	8001d44 <setNextAction+0xe0>
 8001d20:	697a      	ldr	r2, [r7, #20]
 8001d22:	68fb      	ldr	r3, [r7, #12]
 8001d24:	429a      	cmp	r2, r3
 8001d26:	da0d      	bge.n	8001d44 <setNextAction+0xe0>
			nextMove = 0;
 8001d28:	4b14      	ldr	r3, [pc, #80]	; (8001d7c <setNextAction+0x118>)
 8001d2a:	2200      	movs	r2, #0
 8001d2c:	601a      	str	r2, [r3, #0]
			if(nextLinAct == 0){
 8001d2e:	697b      	ldr	r3, [r7, #20]
 8001d30:	2b00      	cmp	r3, #0
 8001d32:	d102      	bne.n	8001d3a <setNextAction+0xd6>
				nextLinAct++;
 8001d34:	697b      	ldr	r3, [r7, #20]
 8001d36:	3301      	adds	r3, #1
 8001d38:	617b      	str	r3, [r7, #20]
			}
			TIM2->ARR = nextLinAct;
 8001d3a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001d3e:	697b      	ldr	r3, [r7, #20]
 8001d40:	62d3      	str	r3, [r2, #44]	; 0x2c
 8001d42:	e015      	b.n	8001d70 <setNextAction+0x10c>
		}
		else if(nextDCPush < nextLinAct && nextDCPush < nextDCPull){
 8001d44:	693a      	ldr	r2, [r7, #16]
 8001d46:	697b      	ldr	r3, [r7, #20]
 8001d48:	429a      	cmp	r2, r3
 8001d4a:	da11      	bge.n	8001d70 <setNextAction+0x10c>
 8001d4c:	693a      	ldr	r2, [r7, #16]
 8001d4e:	68fb      	ldr	r3, [r7, #12]
 8001d50:	429a      	cmp	r2, r3
 8001d52:	da0d      	bge.n	8001d70 <setNextAction+0x10c>
			nextMove = 1;
 8001d54:	4b09      	ldr	r3, [pc, #36]	; (8001d7c <setNextAction+0x118>)
 8001d56:	2201      	movs	r2, #1
 8001d58:	601a      	str	r2, [r3, #0]
			if(nextDCPush == 0){
 8001d5a:	693b      	ldr	r3, [r7, #16]
 8001d5c:	2b00      	cmp	r3, #0
 8001d5e:	d102      	bne.n	8001d66 <setNextAction+0x102>
				nextDCPush++;
 8001d60:	693b      	ldr	r3, [r7, #16]
 8001d62:	3301      	adds	r3, #1
 8001d64:	613b      	str	r3, [r7, #16]
			}
			TIM2->ARR = nextDCPush;
 8001d66:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001d6a:	693b      	ldr	r3, [r7, #16]
 8001d6c:	62d3      	str	r3, [r2, #44]	; 0x2c
		}
	}
}
 8001d6e:	e7ff      	b.n	8001d70 <setNextAction+0x10c>
 8001d70:	bf00      	nop
 8001d72:	3718      	adds	r7, #24
 8001d74:	46bd      	mov	sp, r7
 8001d76:	bd80      	pop	{r7, pc}
 8001d78:	2000078c 	.word	0x2000078c
 8001d7c:	20023d04 	.word	0x20023d04

08001d80 <HAL_TIM_PeriodElapsedCallback>:

int movements = 0;
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
{
 8001d80:	b580      	push	{r7, lr}
 8001d82:	b084      	sub	sp, #16
 8001d84:	af00      	add	r7, sp, #0
 8001d86:	6078      	str	r0, [r7, #4]

	if (htim==&TGFX_T){
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	4a96      	ldr	r2, [pc, #600]	; (8001fe4 <HAL_TIM_PeriodElapsedCallback+0x264>)
 8001d8c:	4293      	cmp	r3, r2
 8001d8e:	d102      	bne.n	8001d96 <HAL_TIM_PeriodElapsedCallback+0x16>
	touchgfxSignalVSync();
 8001d90:	f010 fcf4 	bl	801277c <touchgfxSignalVSync>
	HAL_TIM_Base_Start_IT(&htim4);*/
	TIM2->CR1 |= TIM_CR1_CEN;
	//TIM3->CR1 |= TIM_CR1_CEN;
	//TIM4->CR1 |= TIM_CR1_CEN;
	}
}
 8001d94:	e350      	b.n	8002438 <HAL_TIM_PeriodElapsedCallback+0x6b8>
	else if(htim == &htim2){
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	4a93      	ldr	r2, [pc, #588]	; (8001fe8 <HAL_TIM_PeriodElapsedCallback+0x268>)
 8001d9a:	4293      	cmp	r3, r2
 8001d9c:	f040 834c 	bne.w	8002438 <HAL_TIM_PeriodElapsedCallback+0x6b8>
	TIM2->CR1 &= ~TIM_CR1_CEN;
 8001da0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001daa:	f023 0301 	bic.w	r3, r3, #1
 8001dae:	6013      	str	r3, [r2, #0]
	int current_time = 0;
 8001db0:	2300      	movs	r3, #0
 8001db2:	60fb      	str	r3, [r7, #12]
	if(nextMove == 0){
 8001db4:	4b8d      	ldr	r3, [pc, #564]	; (8001fec <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	2b00      	cmp	r3, #0
 8001dba:	f040 809e 	bne.w	8001efa <HAL_TIM_PeriodElapsedCallback+0x17a>
			if(actuatorL >= actuatorPosL_len){
 8001dbe:	4b8c      	ldr	r3, [pc, #560]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001dc0:	681a      	ldr	r2, [r3, #0]
 8001dc2:	4b8c      	ldr	r3, [pc, #560]	; (8001ff4 <HAL_TIM_PeriodElapsedCallback+0x274>)
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	429a      	cmp	r2, r3
 8001dc8:	db14      	blt.n	8001df4 <HAL_TIM_PeriodElapsedCallback+0x74>
				moveActuatorRight(actuatorPosR[actuatorR][0]);
 8001dca:	4b8b      	ldr	r3, [pc, #556]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	4a8b      	ldr	r2, [pc, #556]	; (8001ffc <HAL_TIM_PeriodElapsedCallback+0x27c>)
 8001dd0:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8001dd4:	4618      	mov	r0, r3
 8001dd6:	f000 fb83 	bl	80024e0 <moveActuatorRight>
				current_time = actuatorPosR[actuatorR][1];
 8001dda:	4b87      	ldr	r3, [pc, #540]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	4a87      	ldr	r2, [pc, #540]	; (8001ffc <HAL_TIM_PeriodElapsedCallback+0x27c>)
 8001de0:	00db      	lsls	r3, r3, #3
 8001de2:	4413      	add	r3, r2
 8001de4:	685b      	ldr	r3, [r3, #4]
 8001de6:	60fb      	str	r3, [r7, #12]
				actuatorR++;
 8001de8:	4b83      	ldr	r3, [pc, #524]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	3301      	adds	r3, #1
 8001dee:	4a82      	ldr	r2, [pc, #520]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001df0:	6013      	str	r3, [r2, #0]
 8001df2:	e316      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
			else if(actuatorR >= actuatorPosR_len){
 8001df4:	4b80      	ldr	r3, [pc, #512]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001df6:	681a      	ldr	r2, [r3, #0]
 8001df8:	4b81      	ldr	r3, [pc, #516]	; (8002000 <HAL_TIM_PeriodElapsedCallback+0x280>)
 8001dfa:	681b      	ldr	r3, [r3, #0]
 8001dfc:	429a      	cmp	r2, r3
 8001dfe:	db14      	blt.n	8001e2a <HAL_TIM_PeriodElapsedCallback+0xaa>
				moveActuatorLeft(actuatorPosL[actuatorL][0]);
 8001e00:	4b7b      	ldr	r3, [pc, #492]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	4a7f      	ldr	r2, [pc, #508]	; (8002004 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8001e06:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8001e0a:	4618      	mov	r0, r3
 8001e0c:	f000 fb24 	bl	8002458 <moveActuatorLeft>
				current_time = actuatorPosL[actuatorL][1];
 8001e10:	4b77      	ldr	r3, [pc, #476]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	4a7b      	ldr	r2, [pc, #492]	; (8002004 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8001e16:	00db      	lsls	r3, r3, #3
 8001e18:	4413      	add	r3, r2
 8001e1a:	685b      	ldr	r3, [r3, #4]
 8001e1c:	60fb      	str	r3, [r7, #12]
				actuatorL++;
 8001e1e:	4b74      	ldr	r3, [pc, #464]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	3301      	adds	r3, #1
 8001e24:	4a72      	ldr	r2, [pc, #456]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001e26:	6013      	str	r3, [r2, #0]
 8001e28:	e2fb      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
			else if(actuatorPosL[actuatorL][1] == actuatorPosR[actuatorR][1]){
 8001e2a:	4b71      	ldr	r3, [pc, #452]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	4a75      	ldr	r2, [pc, #468]	; (8002004 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8001e30:	00db      	lsls	r3, r3, #3
 8001e32:	4413      	add	r3, r2
 8001e34:	685a      	ldr	r2, [r3, #4]
 8001e36:	4b70      	ldr	r3, [pc, #448]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001e38:	681b      	ldr	r3, [r3, #0]
 8001e3a:	4970      	ldr	r1, [pc, #448]	; (8001ffc <HAL_TIM_PeriodElapsedCallback+0x27c>)
 8001e3c:	00db      	lsls	r3, r3, #3
 8001e3e:	440b      	add	r3, r1
 8001e40:	685b      	ldr	r3, [r3, #4]
 8001e42:	429a      	cmp	r2, r3
 8001e44:	d121      	bne.n	8001e8a <HAL_TIM_PeriodElapsedCallback+0x10a>
				moveActuatorRight(actuatorPosR[actuatorR][0]);
 8001e46:	4b6c      	ldr	r3, [pc, #432]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	4a6c      	ldr	r2, [pc, #432]	; (8001ffc <HAL_TIM_PeriodElapsedCallback+0x27c>)
 8001e4c:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8001e50:	4618      	mov	r0, r3
 8001e52:	f000 fb45 	bl	80024e0 <moveActuatorRight>
				moveActuatorLeft(actuatorPosL[actuatorL][0]);
 8001e56:	4b66      	ldr	r3, [pc, #408]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001e58:	681b      	ldr	r3, [r3, #0]
 8001e5a:	4a6a      	ldr	r2, [pc, #424]	; (8002004 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8001e5c:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8001e60:	4618      	mov	r0, r3
 8001e62:	f000 faf9 	bl	8002458 <moveActuatorLeft>
				current_time = actuatorPosR[actuatorR][1];
 8001e66:	4b64      	ldr	r3, [pc, #400]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	4a64      	ldr	r2, [pc, #400]	; (8001ffc <HAL_TIM_PeriodElapsedCallback+0x27c>)
 8001e6c:	00db      	lsls	r3, r3, #3
 8001e6e:	4413      	add	r3, r2
 8001e70:	685b      	ldr	r3, [r3, #4]
 8001e72:	60fb      	str	r3, [r7, #12]
				actuatorR++;
 8001e74:	4b60      	ldr	r3, [pc, #384]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	3301      	adds	r3, #1
 8001e7a:	4a5f      	ldr	r2, [pc, #380]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001e7c:	6013      	str	r3, [r2, #0]
				actuatorL++;
 8001e7e:	4b5c      	ldr	r3, [pc, #368]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001e80:	681b      	ldr	r3, [r3, #0]
 8001e82:	3301      	adds	r3, #1
 8001e84:	4a5a      	ldr	r2, [pc, #360]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001e86:	6013      	str	r3, [r2, #0]
 8001e88:	e2cb      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
			else if(actuatorPosL[actuatorL][1] < actuatorPosR[actuatorR][1]){
 8001e8a:	4b59      	ldr	r3, [pc, #356]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001e8c:	681b      	ldr	r3, [r3, #0]
 8001e8e:	4a5d      	ldr	r2, [pc, #372]	; (8002004 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8001e90:	00db      	lsls	r3, r3, #3
 8001e92:	4413      	add	r3, r2
 8001e94:	685a      	ldr	r2, [r3, #4]
 8001e96:	4b58      	ldr	r3, [pc, #352]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	4958      	ldr	r1, [pc, #352]	; (8001ffc <HAL_TIM_PeriodElapsedCallback+0x27c>)
 8001e9c:	00db      	lsls	r3, r3, #3
 8001e9e:	440b      	add	r3, r1
 8001ea0:	685b      	ldr	r3, [r3, #4]
 8001ea2:	429a      	cmp	r2, r3
 8001ea4:	da14      	bge.n	8001ed0 <HAL_TIM_PeriodElapsedCallback+0x150>
				moveActuatorLeft(actuatorPosL[actuatorL][0]);
 8001ea6:	4b52      	ldr	r3, [pc, #328]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001ea8:	681b      	ldr	r3, [r3, #0]
 8001eaa:	4a56      	ldr	r2, [pc, #344]	; (8002004 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8001eac:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8001eb0:	4618      	mov	r0, r3
 8001eb2:	f000 fad1 	bl	8002458 <moveActuatorLeft>
				current_time = actuatorPosL[actuatorL][1];
 8001eb6:	4b4e      	ldr	r3, [pc, #312]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	4a52      	ldr	r2, [pc, #328]	; (8002004 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8001ebc:	00db      	lsls	r3, r3, #3
 8001ebe:	4413      	add	r3, r2
 8001ec0:	685b      	ldr	r3, [r3, #4]
 8001ec2:	60fb      	str	r3, [r7, #12]
				actuatorL++;
 8001ec4:	4b4a      	ldr	r3, [pc, #296]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001ec6:	681b      	ldr	r3, [r3, #0]
 8001ec8:	3301      	adds	r3, #1
 8001eca:	4a49      	ldr	r2, [pc, #292]	; (8001ff0 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8001ecc:	6013      	str	r3, [r2, #0]
 8001ece:	e2a8      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
				moveActuatorRight(actuatorPosR[actuatorR][0]);
 8001ed0:	4b49      	ldr	r3, [pc, #292]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	4a49      	ldr	r2, [pc, #292]	; (8001ffc <HAL_TIM_PeriodElapsedCallback+0x27c>)
 8001ed6:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8001eda:	4618      	mov	r0, r3
 8001edc:	f000 fb00 	bl	80024e0 <moveActuatorRight>
				current_time = actuatorPosR[actuatorR][1];
 8001ee0:	4b45      	ldr	r3, [pc, #276]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	4a45      	ldr	r2, [pc, #276]	; (8001ffc <HAL_TIM_PeriodElapsedCallback+0x27c>)
 8001ee6:	00db      	lsls	r3, r3, #3
 8001ee8:	4413      	add	r3, r2
 8001eea:	685b      	ldr	r3, [r3, #4]
 8001eec:	60fb      	str	r3, [r7, #12]
				actuatorR++;
 8001eee:	4b42      	ldr	r3, [pc, #264]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	3301      	adds	r3, #1
 8001ef4:	4a40      	ldr	r2, [pc, #256]	; (8001ff8 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8001ef6:	6013      	str	r3, [r2, #0]
 8001ef8:	e293      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
	else if(nextMove == 1){
 8001efa:	4b3c      	ldr	r3, [pc, #240]	; (8001fec <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	2b01      	cmp	r3, #1
 8001f00:	f040 8175 	bne.w	80021ee <HAL_TIM_PeriodElapsedCallback+0x46e>
		if(DCRightStart >= note_dataR_len){
 8001f04:	4b40      	ldr	r3, [pc, #256]	; (8002008 <HAL_TIM_PeriodElapsedCallback+0x288>)
 8001f06:	681a      	ldr	r2, [r3, #0]
 8001f08:	4b40      	ldr	r3, [pc, #256]	; (800200c <HAL_TIM_PeriodElapsedCallback+0x28c>)
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	429a      	cmp	r2, r3
 8001f0e:	db31      	blt.n	8001f74 <HAL_TIM_PeriodElapsedCallback+0x1f4>
			current_time = note_dataL[DCLeftStart][1];
 8001f10:	4b3f      	ldr	r3, [pc, #252]	; (8002010 <HAL_TIM_PeriodElapsedCallback+0x290>)
 8001f12:	681a      	ldr	r2, [r3, #0]
 8001f14:	493f      	ldr	r1, [pc, #252]	; (8002014 <HAL_TIM_PeriodElapsedCallback+0x294>)
 8001f16:	4613      	mov	r3, r2
 8001f18:	009b      	lsls	r3, r3, #2
 8001f1a:	4413      	add	r3, r2
 8001f1c:	009b      	lsls	r3, r3, #2
 8001f1e:	440b      	add	r3, r1
 8001f20:	3304      	adds	r3, #4
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	60fb      	str	r3, [r7, #12]
			while(note_dataL[DCLeftStart][1] == current_time && DCLeftStart < note_dataL_len){
 8001f26:	e010      	b.n	8001f4a <HAL_TIM_PeriodElapsedCallback+0x1ca>
				GPIO_Activation_Left(note_dataL[DCLeftStart][0]);
 8001f28:	4b39      	ldr	r3, [pc, #228]	; (8002010 <HAL_TIM_PeriodElapsedCallback+0x290>)
 8001f2a:	681a      	ldr	r2, [r3, #0]
 8001f2c:	4939      	ldr	r1, [pc, #228]	; (8002014 <HAL_TIM_PeriodElapsedCallback+0x294>)
 8001f2e:	4613      	mov	r3, r2
 8001f30:	009b      	lsls	r3, r3, #2
 8001f32:	4413      	add	r3, r2
 8001f34:	009b      	lsls	r3, r3, #2
 8001f36:	440b      	add	r3, r1
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	4618      	mov	r0, r3
 8001f3c:	f000 fd5a 	bl	80029f4 <GPIO_Activation_Left>
				DCLeftStart++;
 8001f40:	4b33      	ldr	r3, [pc, #204]	; (8002010 <HAL_TIM_PeriodElapsedCallback+0x290>)
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	3301      	adds	r3, #1
 8001f46:	4a32      	ldr	r2, [pc, #200]	; (8002010 <HAL_TIM_PeriodElapsedCallback+0x290>)
 8001f48:	6013      	str	r3, [r2, #0]
			while(note_dataL[DCLeftStart][1] == current_time && DCLeftStart < note_dataL_len){
 8001f4a:	4b31      	ldr	r3, [pc, #196]	; (8002010 <HAL_TIM_PeriodElapsedCallback+0x290>)
 8001f4c:	681a      	ldr	r2, [r3, #0]
 8001f4e:	4931      	ldr	r1, [pc, #196]	; (8002014 <HAL_TIM_PeriodElapsedCallback+0x294>)
 8001f50:	4613      	mov	r3, r2
 8001f52:	009b      	lsls	r3, r3, #2
 8001f54:	4413      	add	r3, r2
 8001f56:	009b      	lsls	r3, r3, #2
 8001f58:	440b      	add	r3, r1
 8001f5a:	3304      	adds	r3, #4
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	68fa      	ldr	r2, [r7, #12]
 8001f60:	429a      	cmp	r2, r3
 8001f62:	f040 825e 	bne.w	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 8001f66:	4b2a      	ldr	r3, [pc, #168]	; (8002010 <HAL_TIM_PeriodElapsedCallback+0x290>)
 8001f68:	681a      	ldr	r2, [r3, #0]
 8001f6a:	4b2b      	ldr	r3, [pc, #172]	; (8002018 <HAL_TIM_PeriodElapsedCallback+0x298>)
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	429a      	cmp	r2, r3
 8001f70:	dbda      	blt.n	8001f28 <HAL_TIM_PeriodElapsedCallback+0x1a8>
 8001f72:	e256      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
		else if(DCLeftStart >= note_dataL_len){
 8001f74:	4b26      	ldr	r3, [pc, #152]	; (8002010 <HAL_TIM_PeriodElapsedCallback+0x290>)
 8001f76:	681a      	ldr	r2, [r3, #0]
 8001f78:	4b27      	ldr	r3, [pc, #156]	; (8002018 <HAL_TIM_PeriodElapsedCallback+0x298>)
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	429a      	cmp	r2, r3
 8001f7e:	db4f      	blt.n	8002020 <HAL_TIM_PeriodElapsedCallback+0x2a0>
			current_time = note_dataR[DCRightStart][1];
 8001f80:	4b21      	ldr	r3, [pc, #132]	; (8002008 <HAL_TIM_PeriodElapsedCallback+0x288>)
 8001f82:	681a      	ldr	r2, [r3, #0]
 8001f84:	4925      	ldr	r1, [pc, #148]	; (800201c <HAL_TIM_PeriodElapsedCallback+0x29c>)
 8001f86:	4613      	mov	r3, r2
 8001f88:	009b      	lsls	r3, r3, #2
 8001f8a:	4413      	add	r3, r2
 8001f8c:	009b      	lsls	r3, r3, #2
 8001f8e:	440b      	add	r3, r1
 8001f90:	3304      	adds	r3, #4
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	60fb      	str	r3, [r7, #12]
			while(note_dataR[DCRightStart][1] == current_time && DCRightStart < note_dataR_len){
 8001f96:	e010      	b.n	8001fba <HAL_TIM_PeriodElapsedCallback+0x23a>
				GPIO_Activation_Right(note_dataR[DCRightStart][0]);
 8001f98:	4b1b      	ldr	r3, [pc, #108]	; (8002008 <HAL_TIM_PeriodElapsedCallback+0x288>)
 8001f9a:	681a      	ldr	r2, [r3, #0]
 8001f9c:	491f      	ldr	r1, [pc, #124]	; (800201c <HAL_TIM_PeriodElapsedCallback+0x29c>)
 8001f9e:	4613      	mov	r3, r2
 8001fa0:	009b      	lsls	r3, r3, #2
 8001fa2:	4413      	add	r3, r2
 8001fa4:	009b      	lsls	r3, r3, #2
 8001fa6:	440b      	add	r3, r1
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	4618      	mov	r0, r3
 8001fac:	f000 fbb8 	bl	8002720 <GPIO_Activation_Right>
				DCRightStart++;
 8001fb0:	4b15      	ldr	r3, [pc, #84]	; (8002008 <HAL_TIM_PeriodElapsedCallback+0x288>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	3301      	adds	r3, #1
 8001fb6:	4a14      	ldr	r2, [pc, #80]	; (8002008 <HAL_TIM_PeriodElapsedCallback+0x288>)
 8001fb8:	6013      	str	r3, [r2, #0]
			while(note_dataR[DCRightStart][1] == current_time && DCRightStart < note_dataR_len){
 8001fba:	4b13      	ldr	r3, [pc, #76]	; (8002008 <HAL_TIM_PeriodElapsedCallback+0x288>)
 8001fbc:	681a      	ldr	r2, [r3, #0]
 8001fbe:	4917      	ldr	r1, [pc, #92]	; (800201c <HAL_TIM_PeriodElapsedCallback+0x29c>)
 8001fc0:	4613      	mov	r3, r2
 8001fc2:	009b      	lsls	r3, r3, #2
 8001fc4:	4413      	add	r3, r2
 8001fc6:	009b      	lsls	r3, r3, #2
 8001fc8:	440b      	add	r3, r1
 8001fca:	3304      	adds	r3, #4
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	68fa      	ldr	r2, [r7, #12]
 8001fd0:	429a      	cmp	r2, r3
 8001fd2:	f040 8226 	bne.w	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 8001fd6:	4b0c      	ldr	r3, [pc, #48]	; (8002008 <HAL_TIM_PeriodElapsedCallback+0x288>)
 8001fd8:	681a      	ldr	r2, [r3, #0]
 8001fda:	4b0c      	ldr	r3, [pc, #48]	; (800200c <HAL_TIM_PeriodElapsedCallback+0x28c>)
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	429a      	cmp	r2, r3
 8001fe0:	dbda      	blt.n	8001f98 <HAL_TIM_PeriodElapsedCallback+0x218>
 8001fe2:	e21e      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 8001fe4:	20000824 	.word	0x20000824
 8001fe8:	2000078c 	.word	0x2000078c
 8001fec:	20023d04 	.word	0x20023d04
 8001ff0:	20008750 	.word	0x20008750
 8001ff4:	200048b8 	.word	0x200048b8
 8001ff8:	20008754 	.word	0x20008754
 8001ffc:	200048bc 	.word	0x200048bc
 8002000:	2000873c 	.word	0x2000873c
 8002004:	20000a38 	.word	0x20000a38
 8002008:	20008760 	.word	0x20008760
 800200c:	2001bfec 	.word	0x2001bfec
 8002010:	20008758 	.word	0x20008758
 8002014:	20008768 	.word	0x20008768
 8002018:	200123a8 	.word	0x200123a8
 800201c:	200123ac 	.word	0x200123ac
		else if(note_dataR[DCRightStart][1] == note_dataL[DCLeftStart][1]){
 8002020:	4b92      	ldr	r3, [pc, #584]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 8002022:	681a      	ldr	r2, [r3, #0]
 8002024:	4992      	ldr	r1, [pc, #584]	; (8002270 <HAL_TIM_PeriodElapsedCallback+0x4f0>)
 8002026:	4613      	mov	r3, r2
 8002028:	009b      	lsls	r3, r3, #2
 800202a:	4413      	add	r3, r2
 800202c:	009b      	lsls	r3, r3, #2
 800202e:	440b      	add	r3, r1
 8002030:	3304      	adds	r3, #4
 8002032:	6819      	ldr	r1, [r3, #0]
 8002034:	4b8f      	ldr	r3, [pc, #572]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 8002036:	681a      	ldr	r2, [r3, #0]
 8002038:	488f      	ldr	r0, [pc, #572]	; (8002278 <HAL_TIM_PeriodElapsedCallback+0x4f8>)
 800203a:	4613      	mov	r3, r2
 800203c:	009b      	lsls	r3, r3, #2
 800203e:	4413      	add	r3, r2
 8002040:	009b      	lsls	r3, r3, #2
 8002042:	4403      	add	r3, r0
 8002044:	3304      	adds	r3, #4
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	4299      	cmp	r1, r3
 800204a:	d156      	bne.n	80020fa <HAL_TIM_PeriodElapsedCallback+0x37a>
			current_time = note_dataR[DCRightStart][1];
 800204c:	4b87      	ldr	r3, [pc, #540]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 800204e:	681a      	ldr	r2, [r3, #0]
 8002050:	4987      	ldr	r1, [pc, #540]	; (8002270 <HAL_TIM_PeriodElapsedCallback+0x4f0>)
 8002052:	4613      	mov	r3, r2
 8002054:	009b      	lsls	r3, r3, #2
 8002056:	4413      	add	r3, r2
 8002058:	009b      	lsls	r3, r3, #2
 800205a:	440b      	add	r3, r1
 800205c:	3304      	adds	r3, #4
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	60fb      	str	r3, [r7, #12]
			while(note_dataR[DCRightStart][1] == current_time && DCRightStart < note_dataR_len){
 8002062:	e010      	b.n	8002086 <HAL_TIM_PeriodElapsedCallback+0x306>
				GPIO_Activation_Right(note_dataR[DCRightStart][0]);
 8002064:	4b81      	ldr	r3, [pc, #516]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 8002066:	681a      	ldr	r2, [r3, #0]
 8002068:	4981      	ldr	r1, [pc, #516]	; (8002270 <HAL_TIM_PeriodElapsedCallback+0x4f0>)
 800206a:	4613      	mov	r3, r2
 800206c:	009b      	lsls	r3, r3, #2
 800206e:	4413      	add	r3, r2
 8002070:	009b      	lsls	r3, r3, #2
 8002072:	440b      	add	r3, r1
 8002074:	681b      	ldr	r3, [r3, #0]
 8002076:	4618      	mov	r0, r3
 8002078:	f000 fb52 	bl	8002720 <GPIO_Activation_Right>
				DCRightStart++;
 800207c:	4b7b      	ldr	r3, [pc, #492]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	3301      	adds	r3, #1
 8002082:	4a7a      	ldr	r2, [pc, #488]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 8002084:	6013      	str	r3, [r2, #0]
			while(note_dataR[DCRightStart][1] == current_time && DCRightStart < note_dataR_len){
 8002086:	4b79      	ldr	r3, [pc, #484]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 8002088:	681a      	ldr	r2, [r3, #0]
 800208a:	4979      	ldr	r1, [pc, #484]	; (8002270 <HAL_TIM_PeriodElapsedCallback+0x4f0>)
 800208c:	4613      	mov	r3, r2
 800208e:	009b      	lsls	r3, r3, #2
 8002090:	4413      	add	r3, r2
 8002092:	009b      	lsls	r3, r3, #2
 8002094:	440b      	add	r3, r1
 8002096:	3304      	adds	r3, #4
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	68fa      	ldr	r2, [r7, #12]
 800209c:	429a      	cmp	r2, r3
 800209e:	d117      	bne.n	80020d0 <HAL_TIM_PeriodElapsedCallback+0x350>
 80020a0:	4b72      	ldr	r3, [pc, #456]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 80020a2:	681a      	ldr	r2, [r3, #0]
 80020a4:	4b75      	ldr	r3, [pc, #468]	; (800227c <HAL_TIM_PeriodElapsedCallback+0x4fc>)
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	429a      	cmp	r2, r3
 80020aa:	dbdb      	blt.n	8002064 <HAL_TIM_PeriodElapsedCallback+0x2e4>
			while(note_dataL[DCLeftStart][1] == current_time && DCLeftStart < note_dataL_len){
 80020ac:	e010      	b.n	80020d0 <HAL_TIM_PeriodElapsedCallback+0x350>
				GPIO_Activation_Left(note_dataL[DCLeftStart][0]);
 80020ae:	4b71      	ldr	r3, [pc, #452]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 80020b0:	681a      	ldr	r2, [r3, #0]
 80020b2:	4971      	ldr	r1, [pc, #452]	; (8002278 <HAL_TIM_PeriodElapsedCallback+0x4f8>)
 80020b4:	4613      	mov	r3, r2
 80020b6:	009b      	lsls	r3, r3, #2
 80020b8:	4413      	add	r3, r2
 80020ba:	009b      	lsls	r3, r3, #2
 80020bc:	440b      	add	r3, r1
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	4618      	mov	r0, r3
 80020c2:	f000 fc97 	bl	80029f4 <GPIO_Activation_Left>
				DCLeftStart++;
 80020c6:	4b6b      	ldr	r3, [pc, #428]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	3301      	adds	r3, #1
 80020cc:	4a69      	ldr	r2, [pc, #420]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 80020ce:	6013      	str	r3, [r2, #0]
			while(note_dataL[DCLeftStart][1] == current_time && DCLeftStart < note_dataL_len){
 80020d0:	4b68      	ldr	r3, [pc, #416]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 80020d2:	681a      	ldr	r2, [r3, #0]
 80020d4:	4968      	ldr	r1, [pc, #416]	; (8002278 <HAL_TIM_PeriodElapsedCallback+0x4f8>)
 80020d6:	4613      	mov	r3, r2
 80020d8:	009b      	lsls	r3, r3, #2
 80020da:	4413      	add	r3, r2
 80020dc:	009b      	lsls	r3, r3, #2
 80020de:	440b      	add	r3, r1
 80020e0:	3304      	adds	r3, #4
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	68fa      	ldr	r2, [r7, #12]
 80020e6:	429a      	cmp	r2, r3
 80020e8:	f040 819b 	bne.w	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 80020ec:	4b61      	ldr	r3, [pc, #388]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 80020ee:	681a      	ldr	r2, [r3, #0]
 80020f0:	4b63      	ldr	r3, [pc, #396]	; (8002280 <HAL_TIM_PeriodElapsedCallback+0x500>)
 80020f2:	681b      	ldr	r3, [r3, #0]
 80020f4:	429a      	cmp	r2, r3
 80020f6:	dbda      	blt.n	80020ae <HAL_TIM_PeriodElapsedCallback+0x32e>
 80020f8:	e193      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
		else if(note_dataR[DCRightStart][1] > note_dataL[DCLeftStart][1]){
 80020fa:	4b5c      	ldr	r3, [pc, #368]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 80020fc:	681a      	ldr	r2, [r3, #0]
 80020fe:	495c      	ldr	r1, [pc, #368]	; (8002270 <HAL_TIM_PeriodElapsedCallback+0x4f0>)
 8002100:	4613      	mov	r3, r2
 8002102:	009b      	lsls	r3, r3, #2
 8002104:	4413      	add	r3, r2
 8002106:	009b      	lsls	r3, r3, #2
 8002108:	440b      	add	r3, r1
 800210a:	3304      	adds	r3, #4
 800210c:	6819      	ldr	r1, [r3, #0]
 800210e:	4b59      	ldr	r3, [pc, #356]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 8002110:	681a      	ldr	r2, [r3, #0]
 8002112:	4859      	ldr	r0, [pc, #356]	; (8002278 <HAL_TIM_PeriodElapsedCallback+0x4f8>)
 8002114:	4613      	mov	r3, r2
 8002116:	009b      	lsls	r3, r3, #2
 8002118:	4413      	add	r3, r2
 800211a:	009b      	lsls	r3, r3, #2
 800211c:	4403      	add	r3, r0
 800211e:	3304      	adds	r3, #4
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	4299      	cmp	r1, r3
 8002124:	dd31      	ble.n	800218a <HAL_TIM_PeriodElapsedCallback+0x40a>
			current_time = note_dataL[DCLeftStart][1];
 8002126:	4b53      	ldr	r3, [pc, #332]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 8002128:	681a      	ldr	r2, [r3, #0]
 800212a:	4953      	ldr	r1, [pc, #332]	; (8002278 <HAL_TIM_PeriodElapsedCallback+0x4f8>)
 800212c:	4613      	mov	r3, r2
 800212e:	009b      	lsls	r3, r3, #2
 8002130:	4413      	add	r3, r2
 8002132:	009b      	lsls	r3, r3, #2
 8002134:	440b      	add	r3, r1
 8002136:	3304      	adds	r3, #4
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	60fb      	str	r3, [r7, #12]
			while(note_dataL[DCLeftStart][1] == current_time && DCLeftStart < note_dataL_len){
 800213c:	e010      	b.n	8002160 <HAL_TIM_PeriodElapsedCallback+0x3e0>
				GPIO_Activation_Left(note_dataL[DCLeftStart][0]);
 800213e:	4b4d      	ldr	r3, [pc, #308]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 8002140:	681a      	ldr	r2, [r3, #0]
 8002142:	494d      	ldr	r1, [pc, #308]	; (8002278 <HAL_TIM_PeriodElapsedCallback+0x4f8>)
 8002144:	4613      	mov	r3, r2
 8002146:	009b      	lsls	r3, r3, #2
 8002148:	4413      	add	r3, r2
 800214a:	009b      	lsls	r3, r3, #2
 800214c:	440b      	add	r3, r1
 800214e:	681b      	ldr	r3, [r3, #0]
 8002150:	4618      	mov	r0, r3
 8002152:	f000 fc4f 	bl	80029f4 <GPIO_Activation_Left>
				DCLeftStart++;
 8002156:	4b47      	ldr	r3, [pc, #284]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	3301      	adds	r3, #1
 800215c:	4a45      	ldr	r2, [pc, #276]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 800215e:	6013      	str	r3, [r2, #0]
			while(note_dataL[DCLeftStart][1] == current_time && DCLeftStart < note_dataL_len){
 8002160:	4b44      	ldr	r3, [pc, #272]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 8002162:	681a      	ldr	r2, [r3, #0]
 8002164:	4944      	ldr	r1, [pc, #272]	; (8002278 <HAL_TIM_PeriodElapsedCallback+0x4f8>)
 8002166:	4613      	mov	r3, r2
 8002168:	009b      	lsls	r3, r3, #2
 800216a:	4413      	add	r3, r2
 800216c:	009b      	lsls	r3, r3, #2
 800216e:	440b      	add	r3, r1
 8002170:	3304      	adds	r3, #4
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	68fa      	ldr	r2, [r7, #12]
 8002176:	429a      	cmp	r2, r3
 8002178:	f040 8153 	bne.w	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 800217c:	4b3d      	ldr	r3, [pc, #244]	; (8002274 <HAL_TIM_PeriodElapsedCallback+0x4f4>)
 800217e:	681a      	ldr	r2, [r3, #0]
 8002180:	4b3f      	ldr	r3, [pc, #252]	; (8002280 <HAL_TIM_PeriodElapsedCallback+0x500>)
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	429a      	cmp	r2, r3
 8002186:	dbda      	blt.n	800213e <HAL_TIM_PeriodElapsedCallback+0x3be>
 8002188:	e14b      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
			current_time = note_dataR[DCRightStart][1];
 800218a:	4b38      	ldr	r3, [pc, #224]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 800218c:	681a      	ldr	r2, [r3, #0]
 800218e:	4938      	ldr	r1, [pc, #224]	; (8002270 <HAL_TIM_PeriodElapsedCallback+0x4f0>)
 8002190:	4613      	mov	r3, r2
 8002192:	009b      	lsls	r3, r3, #2
 8002194:	4413      	add	r3, r2
 8002196:	009b      	lsls	r3, r3, #2
 8002198:	440b      	add	r3, r1
 800219a:	3304      	adds	r3, #4
 800219c:	681b      	ldr	r3, [r3, #0]
 800219e:	60fb      	str	r3, [r7, #12]
			while(note_dataR[DCRightStart][1] == current_time && DCRightStart < note_dataR_len){
 80021a0:	e010      	b.n	80021c4 <HAL_TIM_PeriodElapsedCallback+0x444>
				GPIO_Activation_Right(note_dataR[DCRightStart][0]);
 80021a2:	4b32      	ldr	r3, [pc, #200]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 80021a4:	681a      	ldr	r2, [r3, #0]
 80021a6:	4932      	ldr	r1, [pc, #200]	; (8002270 <HAL_TIM_PeriodElapsedCallback+0x4f0>)
 80021a8:	4613      	mov	r3, r2
 80021aa:	009b      	lsls	r3, r3, #2
 80021ac:	4413      	add	r3, r2
 80021ae:	009b      	lsls	r3, r3, #2
 80021b0:	440b      	add	r3, r1
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	4618      	mov	r0, r3
 80021b6:	f000 fab3 	bl	8002720 <GPIO_Activation_Right>
				DCRightStart++;
 80021ba:	4b2c      	ldr	r3, [pc, #176]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	3301      	adds	r3, #1
 80021c0:	4a2a      	ldr	r2, [pc, #168]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 80021c2:	6013      	str	r3, [r2, #0]
			while(note_dataR[DCRightStart][1] == current_time && DCRightStart < note_dataR_len){
 80021c4:	4b29      	ldr	r3, [pc, #164]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 80021c6:	681a      	ldr	r2, [r3, #0]
 80021c8:	4929      	ldr	r1, [pc, #164]	; (8002270 <HAL_TIM_PeriodElapsedCallback+0x4f0>)
 80021ca:	4613      	mov	r3, r2
 80021cc:	009b      	lsls	r3, r3, #2
 80021ce:	4413      	add	r3, r2
 80021d0:	009b      	lsls	r3, r3, #2
 80021d2:	440b      	add	r3, r1
 80021d4:	3304      	adds	r3, #4
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	68fa      	ldr	r2, [r7, #12]
 80021da:	429a      	cmp	r2, r3
 80021dc:	f040 8121 	bne.w	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 80021e0:	4b22      	ldr	r3, [pc, #136]	; (800226c <HAL_TIM_PeriodElapsedCallback+0x4ec>)
 80021e2:	681a      	ldr	r2, [r3, #0]
 80021e4:	4b25      	ldr	r3, [pc, #148]	; (800227c <HAL_TIM_PeriodElapsedCallback+0x4fc>)
 80021e6:	681b      	ldr	r3, [r3, #0]
 80021e8:	429a      	cmp	r2, r3
 80021ea:	dbda      	blt.n	80021a2 <HAL_TIM_PeriodElapsedCallback+0x422>
 80021ec:	e119      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
	else if(nextMove == 2){
 80021ee:	4b25      	ldr	r3, [pc, #148]	; (8002284 <HAL_TIM_PeriodElapsedCallback+0x504>)
 80021f0:	681b      	ldr	r3, [r3, #0]
 80021f2:	2b02      	cmp	r3, #2
 80021f4:	f040 8115 	bne.w	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
		if(DCRightStop >= note_dataR_len){
 80021f8:	4b23      	ldr	r3, [pc, #140]	; (8002288 <HAL_TIM_PeriodElapsedCallback+0x508>)
 80021fa:	681a      	ldr	r2, [r3, #0]
 80021fc:	4b1f      	ldr	r3, [pc, #124]	; (800227c <HAL_TIM_PeriodElapsedCallback+0x4fc>)
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	429a      	cmp	r2, r3
 8002202:	db25      	blt.n	8002250 <HAL_TIM_PeriodElapsedCallback+0x4d0>
			current_time = note_dataL_stop[DCLeftStop][1];
 8002204:	4b21      	ldr	r3, [pc, #132]	; (800228c <HAL_TIM_PeriodElapsedCallback+0x50c>)
 8002206:	681b      	ldr	r3, [r3, #0]
 8002208:	4a21      	ldr	r2, [pc, #132]	; (8002290 <HAL_TIM_PeriodElapsedCallback+0x510>)
 800220a:	00db      	lsls	r3, r3, #3
 800220c:	4413      	add	r3, r2
 800220e:	685b      	ldr	r3, [r3, #4]
 8002210:	60fb      	str	r3, [r7, #12]
			while(note_dataL_stop[DCLeftStop][1] == current_time && DCLeftStop < note_dataL_len){
 8002212:	e00c      	b.n	800222e <HAL_TIM_PeriodElapsedCallback+0x4ae>
				GPIO_Deactivation_Left(note_dataL_stop[DCLeftStop][0]);
 8002214:	4b1d      	ldr	r3, [pc, #116]	; (800228c <HAL_TIM_PeriodElapsedCallback+0x50c>)
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	4a1d      	ldr	r2, [pc, #116]	; (8002290 <HAL_TIM_PeriodElapsedCallback+0x510>)
 800221a:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800221e:	4618      	mov	r0, r3
 8002220:	f000 feb8 	bl	8002f94 <GPIO_Deactivation_Left>
				DCLeftStop++;
 8002224:	4b19      	ldr	r3, [pc, #100]	; (800228c <HAL_TIM_PeriodElapsedCallback+0x50c>)
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	3301      	adds	r3, #1
 800222a:	4a18      	ldr	r2, [pc, #96]	; (800228c <HAL_TIM_PeriodElapsedCallback+0x50c>)
 800222c:	6013      	str	r3, [r2, #0]
			while(note_dataL_stop[DCLeftStop][1] == current_time && DCLeftStop < note_dataL_len){
 800222e:	4b17      	ldr	r3, [pc, #92]	; (800228c <HAL_TIM_PeriodElapsedCallback+0x50c>)
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	4a17      	ldr	r2, [pc, #92]	; (8002290 <HAL_TIM_PeriodElapsedCallback+0x510>)
 8002234:	00db      	lsls	r3, r3, #3
 8002236:	4413      	add	r3, r2
 8002238:	685b      	ldr	r3, [r3, #4]
 800223a:	68fa      	ldr	r2, [r7, #12]
 800223c:	429a      	cmp	r2, r3
 800223e:	f040 80f0 	bne.w	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 8002242:	4b12      	ldr	r3, [pc, #72]	; (800228c <HAL_TIM_PeriodElapsedCallback+0x50c>)
 8002244:	681a      	ldr	r2, [r3, #0]
 8002246:	4b0e      	ldr	r3, [pc, #56]	; (8002280 <HAL_TIM_PeriodElapsedCallback+0x500>)
 8002248:	681b      	ldr	r3, [r3, #0]
 800224a:	429a      	cmp	r2, r3
 800224c:	dbe2      	blt.n	8002214 <HAL_TIM_PeriodElapsedCallback+0x494>
 800224e:	e0e8      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
		else if(DCLeftStop >= note_dataL_len){
 8002250:	4b0e      	ldr	r3, [pc, #56]	; (800228c <HAL_TIM_PeriodElapsedCallback+0x50c>)
 8002252:	681a      	ldr	r2, [r3, #0]
 8002254:	4b0a      	ldr	r3, [pc, #40]	; (8002280 <HAL_TIM_PeriodElapsedCallback+0x500>)
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	429a      	cmp	r2, r3
 800225a:	db3b      	blt.n	80022d4 <HAL_TIM_PeriodElapsedCallback+0x554>
			current_time = note_dataR_stop[DCRightStop][1];
 800225c:	4b0a      	ldr	r3, [pc, #40]	; (8002288 <HAL_TIM_PeriodElapsedCallback+0x508>)
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	4a0c      	ldr	r2, [pc, #48]	; (8002294 <HAL_TIM_PeriodElapsedCallback+0x514>)
 8002262:	00db      	lsls	r3, r3, #3
 8002264:	4413      	add	r3, r2
 8002266:	685b      	ldr	r3, [r3, #4]
 8002268:	60fb      	str	r3, [r7, #12]
			while(note_dataR_stop[DCRightStop][1] == current_time && DCRightStop < note_dataR_len){
 800226a:	e022      	b.n	80022b2 <HAL_TIM_PeriodElapsedCallback+0x532>
 800226c:	20008760 	.word	0x20008760
 8002270:	200123ac 	.word	0x200123ac
 8002274:	20008758 	.word	0x20008758
 8002278:	20008768 	.word	0x20008768
 800227c:	2001bfec 	.word	0x2001bfec
 8002280:	200123a8 	.word	0x200123a8
 8002284:	20023d04 	.word	0x20023d04
 8002288:	20008764 	.word	0x20008764
 800228c:	2000875c 	.word	0x2000875c
 8002290:	2001fe70 	.word	0x2001fe70
 8002294:	2001bff0 	.word	0x2001bff0
				GPIO_Deactivation_Right(note_dataR_stop[DCRightStop][0]);
 8002298:	4b69      	ldr	r3, [pc, #420]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	4a69      	ldr	r2, [pc, #420]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 800229e:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80022a2:	4618      	mov	r0, r3
 80022a4:	f000 fd0c 	bl	8002cc0 <GPIO_Deactivation_Right>
				DCRightStop++;
 80022a8:	4b65      	ldr	r3, [pc, #404]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	3301      	adds	r3, #1
 80022ae:	4a64      	ldr	r2, [pc, #400]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 80022b0:	6013      	str	r3, [r2, #0]
			while(note_dataR_stop[DCRightStop][1] == current_time && DCRightStop < note_dataR_len){
 80022b2:	4b63      	ldr	r3, [pc, #396]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	4a63      	ldr	r2, [pc, #396]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 80022b8:	00db      	lsls	r3, r3, #3
 80022ba:	4413      	add	r3, r2
 80022bc:	685b      	ldr	r3, [r3, #4]
 80022be:	68fa      	ldr	r2, [r7, #12]
 80022c0:	429a      	cmp	r2, r3
 80022c2:	f040 80ae 	bne.w	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 80022c6:	4b5e      	ldr	r3, [pc, #376]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 80022c8:	681a      	ldr	r2, [r3, #0]
 80022ca:	4b5f      	ldr	r3, [pc, #380]	; (8002448 <HAL_TIM_PeriodElapsedCallback+0x6c8>)
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	429a      	cmp	r2, r3
 80022d0:	dbe2      	blt.n	8002298 <HAL_TIM_PeriodElapsedCallback+0x518>
 80022d2:	e0a6      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
		else if(note_dataR_stop[DCRightStop][1] == note_dataL_stop[DCLeftStop][1]){
 80022d4:	4b5a      	ldr	r3, [pc, #360]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 80022d6:	681b      	ldr	r3, [r3, #0]
 80022d8:	4a5a      	ldr	r2, [pc, #360]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 80022da:	00db      	lsls	r3, r3, #3
 80022dc:	4413      	add	r3, r2
 80022de:	685a      	ldr	r2, [r3, #4]
 80022e0:	4b5a      	ldr	r3, [pc, #360]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	495a      	ldr	r1, [pc, #360]	; (8002450 <HAL_TIM_PeriodElapsedCallback+0x6d0>)
 80022e6:	00db      	lsls	r3, r3, #3
 80022e8:	440b      	add	r3, r1
 80022ea:	685b      	ldr	r3, [r3, #4]
 80022ec:	429a      	cmp	r2, r3
 80022ee:	d141      	bne.n	8002374 <HAL_TIM_PeriodElapsedCallback+0x5f4>
			current_time = note_dataR_stop[DCRightStop][1];
 80022f0:	4b53      	ldr	r3, [pc, #332]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	4a53      	ldr	r2, [pc, #332]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 80022f6:	00db      	lsls	r3, r3, #3
 80022f8:	4413      	add	r3, r2
 80022fa:	685b      	ldr	r3, [r3, #4]
 80022fc:	60fb      	str	r3, [r7, #12]
			while(note_dataR_stop[DCRightStop][1] == current_time && DCRightStop < note_dataR_len){
 80022fe:	e00c      	b.n	800231a <HAL_TIM_PeriodElapsedCallback+0x59a>
				GPIO_Deactivation_Right(note_dataR_stop[DCRightStop][0]);
 8002300:	4b4f      	ldr	r3, [pc, #316]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	4a4f      	ldr	r2, [pc, #316]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 8002306:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800230a:	4618      	mov	r0, r3
 800230c:	f000 fcd8 	bl	8002cc0 <GPIO_Deactivation_Right>
				DCRightStop++;
 8002310:	4b4b      	ldr	r3, [pc, #300]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 8002312:	681b      	ldr	r3, [r3, #0]
 8002314:	3301      	adds	r3, #1
 8002316:	4a4a      	ldr	r2, [pc, #296]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 8002318:	6013      	str	r3, [r2, #0]
			while(note_dataR_stop[DCRightStop][1] == current_time && DCRightStop < note_dataR_len){
 800231a:	4b49      	ldr	r3, [pc, #292]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 800231c:	681b      	ldr	r3, [r3, #0]
 800231e:	4a49      	ldr	r2, [pc, #292]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 8002320:	00db      	lsls	r3, r3, #3
 8002322:	4413      	add	r3, r2
 8002324:	685b      	ldr	r3, [r3, #4]
 8002326:	68fa      	ldr	r2, [r7, #12]
 8002328:	429a      	cmp	r2, r3
 800232a:	d113      	bne.n	8002354 <HAL_TIM_PeriodElapsedCallback+0x5d4>
 800232c:	4b44      	ldr	r3, [pc, #272]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 800232e:	681a      	ldr	r2, [r3, #0]
 8002330:	4b45      	ldr	r3, [pc, #276]	; (8002448 <HAL_TIM_PeriodElapsedCallback+0x6c8>)
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	429a      	cmp	r2, r3
 8002336:	dbe3      	blt.n	8002300 <HAL_TIM_PeriodElapsedCallback+0x580>
			while(note_dataL_stop[DCLeftStop][1] == current_time && DCLeftStop < note_dataL_len){
 8002338:	e00c      	b.n	8002354 <HAL_TIM_PeriodElapsedCallback+0x5d4>
				GPIO_Deactivation_Left(note_dataL_stop[DCLeftStop][0]);
 800233a:	4b44      	ldr	r3, [pc, #272]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	4a44      	ldr	r2, [pc, #272]	; (8002450 <HAL_TIM_PeriodElapsedCallback+0x6d0>)
 8002340:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8002344:	4618      	mov	r0, r3
 8002346:	f000 fe25 	bl	8002f94 <GPIO_Deactivation_Left>
				DCLeftStop++;
 800234a:	4b40      	ldr	r3, [pc, #256]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 800234c:	681b      	ldr	r3, [r3, #0]
 800234e:	3301      	adds	r3, #1
 8002350:	4a3e      	ldr	r2, [pc, #248]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 8002352:	6013      	str	r3, [r2, #0]
			while(note_dataL_stop[DCLeftStop][1] == current_time && DCLeftStop < note_dataL_len){
 8002354:	4b3d      	ldr	r3, [pc, #244]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 8002356:	681b      	ldr	r3, [r3, #0]
 8002358:	4a3d      	ldr	r2, [pc, #244]	; (8002450 <HAL_TIM_PeriodElapsedCallback+0x6d0>)
 800235a:	00db      	lsls	r3, r3, #3
 800235c:	4413      	add	r3, r2
 800235e:	685b      	ldr	r3, [r3, #4]
 8002360:	68fa      	ldr	r2, [r7, #12]
 8002362:	429a      	cmp	r2, r3
 8002364:	d15d      	bne.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 8002366:	4b39      	ldr	r3, [pc, #228]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 8002368:	681a      	ldr	r2, [r3, #0]
 800236a:	4b3a      	ldr	r3, [pc, #232]	; (8002454 <HAL_TIM_PeriodElapsedCallback+0x6d4>)
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	429a      	cmp	r2, r3
 8002370:	dbe3      	blt.n	800233a <HAL_TIM_PeriodElapsedCallback+0x5ba>
 8002372:	e056      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
		else if(note_dataR_stop[DCRightStop][1] > note_dataL_stop[DCLeftStop][1]){
 8002374:	4b32      	ldr	r3, [pc, #200]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	4a32      	ldr	r2, [pc, #200]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 800237a:	00db      	lsls	r3, r3, #3
 800237c:	4413      	add	r3, r2
 800237e:	685a      	ldr	r2, [r3, #4]
 8002380:	4b32      	ldr	r3, [pc, #200]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	4932      	ldr	r1, [pc, #200]	; (8002450 <HAL_TIM_PeriodElapsedCallback+0x6d0>)
 8002386:	00db      	lsls	r3, r3, #3
 8002388:	440b      	add	r3, r1
 800238a:	685b      	ldr	r3, [r3, #4]
 800238c:	429a      	cmp	r2, r3
 800238e:	dd24      	ble.n	80023da <HAL_TIM_PeriodElapsedCallback+0x65a>
			current_time = note_dataL_stop[DCLeftStop][1];
 8002390:	4b2e      	ldr	r3, [pc, #184]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 8002392:	681b      	ldr	r3, [r3, #0]
 8002394:	4a2e      	ldr	r2, [pc, #184]	; (8002450 <HAL_TIM_PeriodElapsedCallback+0x6d0>)
 8002396:	00db      	lsls	r3, r3, #3
 8002398:	4413      	add	r3, r2
 800239a:	685b      	ldr	r3, [r3, #4]
 800239c:	60fb      	str	r3, [r7, #12]
			while(note_dataL_stop[DCLeftStop][1] == current_time && DCLeftStop < note_dataL_len){
 800239e:	e00c      	b.n	80023ba <HAL_TIM_PeriodElapsedCallback+0x63a>
				GPIO_Deactivation_Left(note_dataL_stop[DCLeftStop][0]);
 80023a0:	4b2a      	ldr	r3, [pc, #168]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	4a2a      	ldr	r2, [pc, #168]	; (8002450 <HAL_TIM_PeriodElapsedCallback+0x6d0>)
 80023a6:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80023aa:	4618      	mov	r0, r3
 80023ac:	f000 fdf2 	bl	8002f94 <GPIO_Deactivation_Left>
				DCLeftStop++;
 80023b0:	4b26      	ldr	r3, [pc, #152]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 80023b2:	681b      	ldr	r3, [r3, #0]
 80023b4:	3301      	adds	r3, #1
 80023b6:	4a25      	ldr	r2, [pc, #148]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 80023b8:	6013      	str	r3, [r2, #0]
			while(note_dataL_stop[DCLeftStop][1] == current_time && DCLeftStop < note_dataL_len){
 80023ba:	4b24      	ldr	r3, [pc, #144]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 80023bc:	681b      	ldr	r3, [r3, #0]
 80023be:	4a24      	ldr	r2, [pc, #144]	; (8002450 <HAL_TIM_PeriodElapsedCallback+0x6d0>)
 80023c0:	00db      	lsls	r3, r3, #3
 80023c2:	4413      	add	r3, r2
 80023c4:	685b      	ldr	r3, [r3, #4]
 80023c6:	68fa      	ldr	r2, [r7, #12]
 80023c8:	429a      	cmp	r2, r3
 80023ca:	d12a      	bne.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 80023cc:	4b1f      	ldr	r3, [pc, #124]	; (800244c <HAL_TIM_PeriodElapsedCallback+0x6cc>)
 80023ce:	681a      	ldr	r2, [r3, #0]
 80023d0:	4b20      	ldr	r3, [pc, #128]	; (8002454 <HAL_TIM_PeriodElapsedCallback+0x6d4>)
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	429a      	cmp	r2, r3
 80023d6:	dbe3      	blt.n	80023a0 <HAL_TIM_PeriodElapsedCallback+0x620>
 80023d8:	e023      	b.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
			current_time = note_dataR_stop[DCRightStop][1];
 80023da:	4b19      	ldr	r3, [pc, #100]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	4a19      	ldr	r2, [pc, #100]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 80023e0:	00db      	lsls	r3, r3, #3
 80023e2:	4413      	add	r3, r2
 80023e4:	685b      	ldr	r3, [r3, #4]
 80023e6:	60fb      	str	r3, [r7, #12]
			while(note_dataR_stop[DCRightStop][1] == current_time && DCRightStop < note_dataR_len){
 80023e8:	e00c      	b.n	8002404 <HAL_TIM_PeriodElapsedCallback+0x684>
				GPIO_Deactivation_Right(note_dataR_stop[DCRightStop][0]);
 80023ea:	4b15      	ldr	r3, [pc, #84]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	4a15      	ldr	r2, [pc, #84]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 80023f0:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80023f4:	4618      	mov	r0, r3
 80023f6:	f000 fc63 	bl	8002cc0 <GPIO_Deactivation_Right>
				DCRightStop++;
 80023fa:	4b11      	ldr	r3, [pc, #68]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 80023fc:	681b      	ldr	r3, [r3, #0]
 80023fe:	3301      	adds	r3, #1
 8002400:	4a0f      	ldr	r2, [pc, #60]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 8002402:	6013      	str	r3, [r2, #0]
			while(note_dataR_stop[DCRightStop][1] == current_time && DCRightStop < note_dataR_len){
 8002404:	4b0e      	ldr	r3, [pc, #56]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 8002406:	681b      	ldr	r3, [r3, #0]
 8002408:	4a0e      	ldr	r2, [pc, #56]	; (8002444 <HAL_TIM_PeriodElapsedCallback+0x6c4>)
 800240a:	00db      	lsls	r3, r3, #3
 800240c:	4413      	add	r3, r2
 800240e:	685b      	ldr	r3, [r3, #4]
 8002410:	68fa      	ldr	r2, [r7, #12]
 8002412:	429a      	cmp	r2, r3
 8002414:	d105      	bne.n	8002422 <HAL_TIM_PeriodElapsedCallback+0x6a2>
 8002416:	4b0a      	ldr	r3, [pc, #40]	; (8002440 <HAL_TIM_PeriodElapsedCallback+0x6c0>)
 8002418:	681a      	ldr	r2, [r3, #0]
 800241a:	4b0b      	ldr	r3, [pc, #44]	; (8002448 <HAL_TIM_PeriodElapsedCallback+0x6c8>)
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	429a      	cmp	r2, r3
 8002420:	dbe3      	blt.n	80023ea <HAL_TIM_PeriodElapsedCallback+0x66a>
	setNextAction(current_time);
 8002422:	68f8      	ldr	r0, [r7, #12]
 8002424:	f7ff fc1e 	bl	8001c64 <setNextAction>
	TIM2->CR1 |= TIM_CR1_CEN;
 8002428:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002432:	f043 0301 	orr.w	r3, r3, #1
 8002436:	6013      	str	r3, [r2, #0]
}
 8002438:	bf00      	nop
 800243a:	3710      	adds	r7, #16
 800243c:	46bd      	mov	sp, r7
 800243e:	bd80      	pop	{r7, pc}
 8002440:	20008764 	.word	0x20008764
 8002444:	2001bff0 	.word	0x2001bff0
 8002448:	2001bfec 	.word	0x2001bfec
 800244c:	2000875c 	.word	0x2000875c
 8002450:	2001fe70 	.word	0x2001fe70
 8002454:	200123a8 	.word	0x200123a8

08002458 <moveActuatorLeft>:

    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_8, 1);
}*/

// Move the left linear actuator to the correct position for the current note number
void moveActuatorLeft(int note_num){
 8002458:	b5b0      	push	{r4, r5, r7, lr}
 800245a:	b086      	sub	sp, #24
 800245c:	af00      	add	r7, sp, #0
 800245e:	6078      	str	r0, [r7, #4]
	double d = numToDistLeft[abs((note_num - defaultLeft))];
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	3b2b      	subs	r3, #43	; 0x2b
 8002464:	2b00      	cmp	r3, #0
 8002466:	bfb8      	it	lt
 8002468:	425b      	neglt	r3, r3
 800246a:	4a1b      	ldr	r2, [pc, #108]	; (80024d8 <moveActuatorLeft+0x80>)
 800246c:	00db      	lsls	r3, r3, #3
 800246e:	4413      	add	r3, r2
 8002470:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002474:	e9c7 2304 	strd	r2, r3, [r7, #16]
	double delta_x = d - current_pos_left;
 8002478:	4b18      	ldr	r3, [pc, #96]	; (80024dc <moveActuatorLeft+0x84>)
 800247a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800247e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002482:	f7fd ff11 	bl	80002a8 <__aeabi_dsub>
 8002486:	4602      	mov	r2, r0
 8002488:	460b      	mov	r3, r1
 800248a:	e9c7 2302 	strd	r2, r3, [r7, #8]

	if(delta_x > 0){
 800248e:	f04f 0200 	mov.w	r2, #0
 8002492:	f04f 0300 	mov.w	r3, #0
 8002496:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800249a:	f7fe fb4d 	bl	8000b38 <__aeabi_dcmpgt>
 800249e:	4603      	mov	r3, r0
 80024a0:	2b00      	cmp	r3, #0
 80024a2:	d006      	beq.n	80024b2 <moveActuatorLeft+0x5a>
		// Set stepper direction appropriately
		actuatorMoveDistLoop(delta_x, 1, 0);
 80024a4:	2100      	movs	r1, #0
 80024a6:	2001      	movs	r0, #1
 80024a8:	ed97 0b02 	vldr	d0, [r7, #8]
 80024ac:	f000 f8c4 	bl	8002638 <actuatorMoveDistLoop>
 80024b0:	e009      	b.n	80024c6 <moveActuatorLeft+0x6e>
	}
	else{
		// Set stepper direction appropriately
		actuatorMoveDistLoop(delta_x * -1, 0, 0);
 80024b2:	68bc      	ldr	r4, [r7, #8]
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 80024ba:	2100      	movs	r1, #0
 80024bc:	2000      	movs	r0, #0
 80024be:	ec45 4b10 	vmov	d0, r4, r5
 80024c2:	f000 f8b9 	bl	8002638 <actuatorMoveDistLoop>
	}

	current_pos_left = d;
 80024c6:	4905      	ldr	r1, [pc, #20]	; (80024dc <moveActuatorLeft+0x84>)
 80024c8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80024cc:	e9c1 2300 	strd	r2, r3, [r1]
}
 80024d0:	bf00      	nop
 80024d2:	3718      	adds	r7, #24
 80024d4:	46bd      	mov	sp, r7
 80024d6:	bdb0      	pop	{r4, r5, r7, pc}
 80024d8:	0802af90 	.word	0x0802af90
 80024dc:	20023cf0 	.word	0x20023cf0

080024e0 <moveActuatorRight>:

// Move the right linear actuator to the correct position for the current note number
void moveActuatorRight(int note_num){
 80024e0:	b5b0      	push	{r4, r5, r7, lr}
 80024e2:	b086      	sub	sp, #24
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	6078      	str	r0, [r7, #4]
	double d = numToDistRight[note_num - defaultRight];
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	3b3c      	subs	r3, #60	; 0x3c
 80024ec:	4a1b      	ldr	r2, [pc, #108]	; (800255c <moveActuatorRight+0x7c>)
 80024ee:	00db      	lsls	r3, r3, #3
 80024f0:	4413      	add	r3, r2
 80024f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024f6:	e9c7 2304 	strd	r2, r3, [r7, #16]
	double delta_x = d - current_pos_right;
 80024fa:	4b19      	ldr	r3, [pc, #100]	; (8002560 <moveActuatorRight+0x80>)
 80024fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002500:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002504:	f7fd fed0 	bl	80002a8 <__aeabi_dsub>
 8002508:	4602      	mov	r2, r0
 800250a:	460b      	mov	r3, r1
 800250c:	e9c7 2302 	strd	r2, r3, [r7, #8]

	if(delta_x > 0){
 8002510:	f04f 0200 	mov.w	r2, #0
 8002514:	f04f 0300 	mov.w	r3, #0
 8002518:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800251c:	f7fe fb0c 	bl	8000b38 <__aeabi_dcmpgt>
 8002520:	4603      	mov	r3, r0
 8002522:	2b00      	cmp	r3, #0
 8002524:	d006      	beq.n	8002534 <moveActuatorRight+0x54>
		// Set stepper direction appropriately
		actuatorMoveDistLoop(delta_x, 1, 1);
 8002526:	2101      	movs	r1, #1
 8002528:	2001      	movs	r0, #1
 800252a:	ed97 0b02 	vldr	d0, [r7, #8]
 800252e:	f000 f883 	bl	8002638 <actuatorMoveDistLoop>
 8002532:	e009      	b.n	8002548 <moveActuatorRight+0x68>
		//moveActuatorDistRight(delta_x, 1);
	}
	else{
		// Set stepper direction appropriately
		actuatorMoveDistLoop(delta_x * -1, 0, 1);
 8002534:	68bc      	ldr	r4, [r7, #8]
 8002536:	68fb      	ldr	r3, [r7, #12]
 8002538:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 800253c:	2101      	movs	r1, #1
 800253e:	2000      	movs	r0, #0
 8002540:	ec45 4b10 	vmov	d0, r4, r5
 8002544:	f000 f878 	bl	8002638 <actuatorMoveDistLoop>
		//moveActuatorDistRight(delta_x * -1, 0);
	}

	current_pos_right = d;
 8002548:	4905      	ldr	r1, [pc, #20]	; (8002560 <moveActuatorRight+0x80>)
 800254a:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800254e:	e9c1 2300 	strd	r2, r3, [r1]
}
 8002552:	bf00      	nop
 8002554:	3718      	adds	r7, #24
 8002556:	46bd      	mov	sp, r7
 8002558:	bdb0      	pop	{r4, r5, r7, pc}
 800255a:	bf00      	nop
 800255c:	0802afd0 	.word	0x0802afd0
 8002560:	20023cf8 	.word	0x20023cf8

08002564 <play_notes>:

void play_notes() {
 8002564:	b580      	push	{r7, lr}
 8002566:	af00      	add	r7, sp, #0
	formGroups(note_dataR, note_dataR_len);
 8002568:	4b27      	ldr	r3, [pc, #156]	; (8002608 <play_notes+0xa4>)
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	4619      	mov	r1, r3
 800256e:	4827      	ldr	r0, [pc, #156]	; (800260c <play_notes+0xa8>)
 8002570:	f7fe fe52 	bl	8001218 <formGroups>
	formGroups(note_dataL, note_dataL_len);
 8002574:	4b26      	ldr	r3, [pc, #152]	; (8002610 <play_notes+0xac>)
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	4619      	mov	r1, r3
 800257a:	4826      	ldr	r0, [pc, #152]	; (8002614 <play_notes+0xb0>)
 800257c:	f7fe fe4c 	bl	8001218 <formGroups>

	actuatorPosR_len = assignActuatorPos(actuatorPosR, note_dataR, note_dataR_len, 0);
 8002580:	4b21      	ldr	r3, [pc, #132]	; (8002608 <play_notes+0xa4>)
 8002582:	681a      	ldr	r2, [r3, #0]
 8002584:	2300      	movs	r3, #0
 8002586:	4921      	ldr	r1, [pc, #132]	; (800260c <play_notes+0xa8>)
 8002588:	4823      	ldr	r0, [pc, #140]	; (8002618 <play_notes+0xb4>)
 800258a:	f7ff f83a 	bl	8001602 <assignActuatorPos>
 800258e:	4603      	mov	r3, r0
 8002590:	4a22      	ldr	r2, [pc, #136]	; (800261c <play_notes+0xb8>)
 8002592:	6013      	str	r3, [r2, #0]
	actuatorPosL_len = assignActuatorPos(actuatorPosL, note_dataL, note_dataL_len, 1);
 8002594:	4b1e      	ldr	r3, [pc, #120]	; (8002610 <play_notes+0xac>)
 8002596:	681a      	ldr	r2, [r3, #0]
 8002598:	2301      	movs	r3, #1
 800259a:	491e      	ldr	r1, [pc, #120]	; (8002614 <play_notes+0xb0>)
 800259c:	4820      	ldr	r0, [pc, #128]	; (8002620 <play_notes+0xbc>)
 800259e:	f7ff f830 	bl	8001602 <assignActuatorPos>
 80025a2:	4603      	mov	r3, r0
 80025a4:	4a1f      	ldr	r2, [pc, #124]	; (8002624 <play_notes+0xc0>)
 80025a6:	6013      	str	r3, [r2, #0]

	assignDCAct(actuatorPosR, actuatorPosR_len, note_dataR, note_dataR_len);
 80025a8:	4b1c      	ldr	r3, [pc, #112]	; (800261c <play_notes+0xb8>)
 80025aa:	6819      	ldr	r1, [r3, #0]
 80025ac:	4b16      	ldr	r3, [pc, #88]	; (8002608 <play_notes+0xa4>)
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	4a16      	ldr	r2, [pc, #88]	; (800260c <play_notes+0xa8>)
 80025b2:	4819      	ldr	r0, [pc, #100]	; (8002618 <play_notes+0xb4>)
 80025b4:	f7ff f996 	bl	80018e4 <assignDCAct>
	assignDCAct(actuatorPosL, actuatorPosL_len, note_dataL, note_dataL_len);
 80025b8:	4b1a      	ldr	r3, [pc, #104]	; (8002624 <play_notes+0xc0>)
 80025ba:	6819      	ldr	r1, [r3, #0]
 80025bc:	4b14      	ldr	r3, [pc, #80]	; (8002610 <play_notes+0xac>)
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	4a14      	ldr	r2, [pc, #80]	; (8002614 <play_notes+0xb0>)
 80025c2:	4817      	ldr	r0, [pc, #92]	; (8002620 <play_notes+0xbc>)
 80025c4:	f7ff f98e 	bl	80018e4 <assignDCAct>
	splitStartStop(note_dataR, note_dataR_len, note_dataR_stop);
 80025c8:	4b0f      	ldr	r3, [pc, #60]	; (8002608 <play_notes+0xa4>)
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	4a16      	ldr	r2, [pc, #88]	; (8002628 <play_notes+0xc4>)
 80025ce:	4619      	mov	r1, r3
 80025d0:	480e      	ldr	r0, [pc, #56]	; (800260c <play_notes+0xa8>)
 80025d2:	f7ff f8fc 	bl	80017ce <splitStartStop>
	splitStartStop(note_dataL, note_dataL_len, note_dataL_stop);
 80025d6:	4b0e      	ldr	r3, [pc, #56]	; (8002610 <play_notes+0xac>)
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	4a14      	ldr	r2, [pc, #80]	; (800262c <play_notes+0xc8>)
 80025dc:	4619      	mov	r1, r3
 80025de:	480d      	ldr	r0, [pc, #52]	; (8002614 <play_notes+0xb0>)
 80025e0:	f7ff f8f5 	bl	80017ce <splitStartStop>
	sortStop(note_dataR_stop, note_dataR_len);
 80025e4:	4b08      	ldr	r3, [pc, #32]	; (8002608 <play_notes+0xa4>)
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	4619      	mov	r1, r3
 80025ea:	480f      	ldr	r0, [pc, #60]	; (8002628 <play_notes+0xc4>)
 80025ec:	f7ff f922 	bl	8001834 <sortStop>
	sortStop(note_dataL_stop, note_dataL_len);
 80025f0:	4b07      	ldr	r3, [pc, #28]	; (8002610 <play_notes+0xac>)
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	4619      	mov	r1, r3
 80025f6:	480d      	ldr	r0, [pc, #52]	; (800262c <play_notes+0xc8>)
 80025f8:	f7ff f91c 	bl	8001834 <sortStop>

	// *************************
	// THIS IS THE START SEQUENCE
	// *************************

	readyToPlay = 1;
 80025fc:	4b0c      	ldr	r3, [pc, #48]	; (8002630 <play_notes+0xcc>)
 80025fe:	2201      	movs	r2, #1
 8002600:	601a      	str	r2, [r3, #0]
}
 8002602:	bf00      	nop
 8002604:	bd80      	pop	{r7, pc}
 8002606:	bf00      	nop
 8002608:	2001bfec 	.word	0x2001bfec
 800260c:	200123ac 	.word	0x200123ac
 8002610:	200123a8 	.word	0x200123a8
 8002614:	20008768 	.word	0x20008768
 8002618:	200048bc 	.word	0x200048bc
 800261c:	2000873c 	.word	0x2000873c
 8002620:	20000a38 	.word	0x20000a38
 8002624:	200048b8 	.word	0x200048b8
 8002628:	2001bff0 	.word	0x2001bff0
 800262c:	2001fe70 	.word	0x2001fe70
 8002630:	20023d00 	.word	0x20023d00
 8002634:	00000000 	.word	0x00000000

08002638 <actuatorMoveDistLoop>:

// hand = 0 is left, hand = 1 is right
void actuatorMoveDistLoop(double dist, int dir, int hand){
 8002638:	b580      	push	{r7, lr}
 800263a:	b086      	sub	sp, #24
 800263c:	af00      	add	r7, sp, #0
 800263e:	ed87 0b02 	vstr	d0, [r7, #8]
 8002642:	6078      	str	r0, [r7, #4]
 8002644:	6039      	str	r1, [r7, #0]
	int steps = (int) ((dist / inPerRot) * stepPerRot);
 8002646:	a334      	add	r3, pc, #208	; (adr r3, 8002718 <actuatorMoveDistLoop+0xe0>)
 8002648:	e9d3 2300 	ldrd	r2, r3, [r3]
 800264c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002650:	f7fe f90c 	bl	800086c <__aeabi_ddiv>
 8002654:	4602      	mov	r2, r0
 8002656:	460b      	mov	r3, r1
 8002658:	4610      	mov	r0, r2
 800265a:	4619      	mov	r1, r3
 800265c:	f04f 0200 	mov.w	r2, #0
 8002660:	4b29      	ldr	r3, [pc, #164]	; (8002708 <actuatorMoveDistLoop+0xd0>)
 8002662:	f7fd ffd9 	bl	8000618 <__aeabi_dmul>
 8002666:	4602      	mov	r2, r0
 8002668:	460b      	mov	r3, r1
 800266a:	4610      	mov	r0, r2
 800266c:	4619      	mov	r1, r3
 800266e:	f7fe fa83 	bl	8000b78 <__aeabi_d2iz>
 8002672:	4603      	mov	r3, r0
 8002674:	613b      	str	r3, [r7, #16]

	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_7, dir);
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	b2db      	uxtb	r3, r3
 800267a:	461a      	mov	r2, r3
 800267c:	2180      	movs	r1, #128	; 0x80
 800267e:	4823      	ldr	r0, [pc, #140]	; (800270c <actuatorMoveDistLoop+0xd4>)
 8002680:	f004 fc6e 	bl	8006f60 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0, 0);
 8002684:	2200      	movs	r2, #0
 8002686:	2101      	movs	r1, #1
 8002688:	4821      	ldr	r0, [pc, #132]	; (8002710 <actuatorMoveDistLoop+0xd8>)
 800268a:	f004 fc69 	bl	8006f60 <HAL_GPIO_WritePin>

	if(hand){
 800268e:	683b      	ldr	r3, [r7, #0]
 8002690:	2b00      	cmp	r3, #0
 8002692:	d006      	beq.n	80026a2 <actuatorMoveDistLoop+0x6a>
		HAL_GPIO_WritePin(GPIOF, GPIO_PIN_8, 0);
 8002694:	2200      	movs	r2, #0
 8002696:	f44f 7180 	mov.w	r1, #256	; 0x100
 800269a:	481c      	ldr	r0, [pc, #112]	; (800270c <actuatorMoveDistLoop+0xd4>)
 800269c:	f004 fc60 	bl	8006f60 <HAL_GPIO_WritePin>
 80026a0:	e005      	b.n	80026ae <actuatorMoveDistLoop+0x76>
	}
	else{
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, 0);
 80026a2:	2200      	movs	r2, #0
 80026a4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80026a8:	481a      	ldr	r0, [pc, #104]	; (8002714 <actuatorMoveDistLoop+0xdc>)
 80026aa:	f004 fc59 	bl	8006f60 <HAL_GPIO_WritePin>
	}

	if(steps){
 80026ae:	693b      	ldr	r3, [r7, #16]
 80026b0:	2b00      	cmp	r3, #0
 80026b2:	d019      	beq.n	80026e8 <actuatorMoveDistLoop+0xb0>
		for(int i = 0; i < steps; i++){
 80026b4:	2300      	movs	r3, #0
 80026b6:	617b      	str	r3, [r7, #20]
 80026b8:	e012      	b.n	80026e0 <actuatorMoveDistLoop+0xa8>
			HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0, 1);
 80026ba:	2201      	movs	r2, #1
 80026bc:	2101      	movs	r1, #1
 80026be:	4814      	ldr	r0, [pc, #80]	; (8002710 <actuatorMoveDistLoop+0xd8>)
 80026c0:	f004 fc4e 	bl	8006f60 <HAL_GPIO_WritePin>
			HAL_Delay(1);
 80026c4:	2001      	movs	r0, #1
 80026c6:	f003 fb03 	bl	8005cd0 <HAL_Delay>
			HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0, 0);
 80026ca:	2200      	movs	r2, #0
 80026cc:	2101      	movs	r1, #1
 80026ce:	4810      	ldr	r0, [pc, #64]	; (8002710 <actuatorMoveDistLoop+0xd8>)
 80026d0:	f004 fc46 	bl	8006f60 <HAL_GPIO_WritePin>
			//********************************************
			// CHANGE SPEED BY CHANGING HAL_Delay BELOW
			//********************************************
			HAL_Delay(2);
 80026d4:	2002      	movs	r0, #2
 80026d6:	f003 fafb 	bl	8005cd0 <HAL_Delay>
		for(int i = 0; i < steps; i++){
 80026da:	697b      	ldr	r3, [r7, #20]
 80026dc:	3301      	adds	r3, #1
 80026de:	617b      	str	r3, [r7, #20]
 80026e0:	697a      	ldr	r2, [r7, #20]
 80026e2:	693b      	ldr	r3, [r7, #16]
 80026e4:	429a      	cmp	r2, r3
 80026e6:	dbe8      	blt.n	80026ba <actuatorMoveDistLoop+0x82>
		}
	}

	HAL_GPIO_WritePin(GPIOF, GPIO_PIN_8, 1);
 80026e8:	2201      	movs	r2, #1
 80026ea:	f44f 7180 	mov.w	r1, #256	; 0x100
 80026ee:	4807      	ldr	r0, [pc, #28]	; (800270c <actuatorMoveDistLoop+0xd4>)
 80026f0:	f004 fc36 	bl	8006f60 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, 1);
 80026f4:	2201      	movs	r2, #1
 80026f6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80026fa:	4806      	ldr	r0, [pc, #24]	; (8002714 <actuatorMoveDistLoop+0xdc>)
 80026fc:	f004 fc30 	bl	8006f60 <HAL_GPIO_WritePin>
}
 8002700:	bf00      	nop
 8002702:	3718      	adds	r7, #24
 8002704:	46bd      	mov	sp, r7
 8002706:	bd80      	pop	{r7, pc}
 8002708:	40690000 	.word	0x40690000
 800270c:	48001400 	.word	0x48001400
 8002710:	48001800 	.word	0x48001800
 8002714:	48000800 	.word	0x48000800
 8002718:	0a3d70a4 	.word	0x0a3d70a4
 800271c:	4006a3d7 	.word	0x4006a3d7

08002720 <GPIO_Activation_Right>:
	HAL_Delay(200);
	HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &data_write3[0], 1, 1000);
	HAL_Delay(200);
}

void GPIO_Activation_Right(int note){
 8002720:	b580      	push	{r7, lr}
 8002722:	b08c      	sub	sp, #48	; 0x30
 8002724:	af02      	add	r7, sp, #8
 8002726:	6078      	str	r0, [r7, #4]
     int note_num = note;
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	627b      	str	r3, [r7, #36]	; 0x24

     uint8_t P01_ON[1] = {0x01};
 800272c:	2301      	movs	r3, #1
 800272e:	f887 3020 	strb.w	r3, [r7, #32]
     uint8_t P01_STOP[1] = {0x00};
 8002732:	2300      	movs	r3, #0
 8002734:	773b      	strb	r3, [r7, #28]

     uint8_t P23_ON[1] = {0x04};
 8002736:	2304      	movs	r3, #4
 8002738:	763b      	strb	r3, [r7, #24]
     uint8_t P23_STOP[1] = {0x00};
 800273a:	2300      	movs	r3, #0
 800273c:	753b      	strb	r3, [r7, #20]

     uint8_t P45_ON[1] = {0x10};
 800273e:	2310      	movs	r3, #16
 8002740:	743b      	strb	r3, [r7, #16]
     uint8_t P45_STOP[1] = {0x00};
 8002742:	2300      	movs	r3, #0
 8002744:	733b      	strb	r3, [r7, #12]

     if (note_num == 0){
 8002746:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002748:	2b00      	cmp	r3, #0
 800274a:	d117      	bne.n	800277c <GPIO_Activation_Right+0x5c>
         HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P01_ON[0], 1, 1000);
 800274c:	f107 0220 	add.w	r2, r7, #32
 8002750:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002754:	9300      	str	r3, [sp, #0]
 8002756:	2301      	movs	r3, #1
 8002758:	2140      	movs	r1, #64	; 0x40
 800275a:	48a4      	ldr	r0, [pc, #656]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 800275c:	f004 fce6 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002760:	20fa      	movs	r0, #250	; 0xfa
 8002762:	f003 fab5 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P01_STOP[0], 1, 1000);
 8002766:	f107 021c 	add.w	r2, r7, #28
 800276a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800276e:	9300      	str	r3, [sp, #0]
 8002770:	2301      	movs	r3, #1
 8002772:	2140      	movs	r1, #64	; 0x40
 8002774:	489d      	ldr	r0, [pc, #628]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 8002776:	f004 fcd9 	bl	800712c <HAL_I2C_Master_Transmit>
     } else if (note_num > 11){
         speakNote(note_num);
         HAL_Delay(2*DCDelay);
     }

}
 800277a:	e132      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 1){
 800277c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800277e:	2b01      	cmp	r3, #1
 8002780:	d117      	bne.n	80027b2 <GPIO_Activation_Right+0x92>
         HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P23_ON[0], 1, 1000);
 8002782:	f107 0218 	add.w	r2, r7, #24
 8002786:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800278a:	9300      	str	r3, [sp, #0]
 800278c:	2301      	movs	r3, #1
 800278e:	2140      	movs	r1, #64	; 0x40
 8002790:	4896      	ldr	r0, [pc, #600]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 8002792:	f004 fccb 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002796:	20fa      	movs	r0, #250	; 0xfa
 8002798:	f003 fa9a 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P23_STOP[0], 1, 1000);
 800279c:	f107 0214 	add.w	r2, r7, #20
 80027a0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80027a4:	9300      	str	r3, [sp, #0]
 80027a6:	2301      	movs	r3, #1
 80027a8:	2140      	movs	r1, #64	; 0x40
 80027aa:	4890      	ldr	r0, [pc, #576]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 80027ac:	f004 fcbe 	bl	800712c <HAL_I2C_Master_Transmit>
}
 80027b0:	e117      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 2){
 80027b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027b4:	2b02      	cmp	r3, #2
 80027b6:	d117      	bne.n	80027e8 <GPIO_Activation_Right+0xc8>
         HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P45_ON[0], 1, 1000);
 80027b8:	f107 0210 	add.w	r2, r7, #16
 80027bc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80027c0:	9300      	str	r3, [sp, #0]
 80027c2:	2301      	movs	r3, #1
 80027c4:	2140      	movs	r1, #64	; 0x40
 80027c6:	4889      	ldr	r0, [pc, #548]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 80027c8:	f004 fcb0 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 80027cc:	20fa      	movs	r0, #250	; 0xfa
 80027ce:	f003 fa7f 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P45_STOP[0], 1, 1000);
 80027d2:	f107 020c 	add.w	r2, r7, #12
 80027d6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80027da:	9300      	str	r3, [sp, #0]
 80027dc:	2301      	movs	r3, #1
 80027de:	2140      	movs	r1, #64	; 0x40
 80027e0:	4882      	ldr	r0, [pc, #520]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 80027e2:	f004 fca3 	bl	800712c <HAL_I2C_Master_Transmit>
}
 80027e6:	e0fc      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 3){
 80027e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027ea:	2b03      	cmp	r3, #3
 80027ec:	d117      	bne.n	800281e <GPIO_Activation_Right+0xfe>
         HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P01_ON[0], 1, 1000);
 80027ee:	f107 0220 	add.w	r2, r7, #32
 80027f2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80027f6:	9300      	str	r3, [sp, #0]
 80027f8:	2301      	movs	r3, #1
 80027fa:	2142      	movs	r1, #66	; 0x42
 80027fc:	487b      	ldr	r0, [pc, #492]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 80027fe:	f004 fc95 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002802:	20fa      	movs	r0, #250	; 0xfa
 8002804:	f003 fa64 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P01_STOP[0], 1, 1000);
 8002808:	f107 021c 	add.w	r2, r7, #28
 800280c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002810:	9300      	str	r3, [sp, #0]
 8002812:	2301      	movs	r3, #1
 8002814:	2142      	movs	r1, #66	; 0x42
 8002816:	4875      	ldr	r0, [pc, #468]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 8002818:	f004 fc88 	bl	800712c <HAL_I2C_Master_Transmit>
}
 800281c:	e0e1      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 4){
 800281e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002820:	2b04      	cmp	r3, #4
 8002822:	d117      	bne.n	8002854 <GPIO_Activation_Right+0x134>
         HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P23_ON[0], 1, 1000);
 8002824:	f107 0218 	add.w	r2, r7, #24
 8002828:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800282c:	9300      	str	r3, [sp, #0]
 800282e:	2301      	movs	r3, #1
 8002830:	2142      	movs	r1, #66	; 0x42
 8002832:	486e      	ldr	r0, [pc, #440]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 8002834:	f004 fc7a 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002838:	20fa      	movs	r0, #250	; 0xfa
 800283a:	f003 fa49 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P23_STOP[0], 1, 1000);
 800283e:	f107 0214 	add.w	r2, r7, #20
 8002842:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002846:	9300      	str	r3, [sp, #0]
 8002848:	2301      	movs	r3, #1
 800284a:	2142      	movs	r1, #66	; 0x42
 800284c:	4867      	ldr	r0, [pc, #412]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 800284e:	f004 fc6d 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002852:	e0c6      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 5){
 8002854:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002856:	2b05      	cmp	r3, #5
 8002858:	d117      	bne.n	800288a <GPIO_Activation_Right+0x16a>
         HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P45_ON[0], 1, 1000);
 800285a:	f107 0210 	add.w	r2, r7, #16
 800285e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002862:	9300      	str	r3, [sp, #0]
 8002864:	2301      	movs	r3, #1
 8002866:	2142      	movs	r1, #66	; 0x42
 8002868:	4860      	ldr	r0, [pc, #384]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 800286a:	f004 fc5f 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 800286e:	20fa      	movs	r0, #250	; 0xfa
 8002870:	f003 fa2e 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P45_STOP[0], 1, 1000);
 8002874:	f107 020c 	add.w	r2, r7, #12
 8002878:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800287c:	9300      	str	r3, [sp, #0]
 800287e:	2301      	movs	r3, #1
 8002880:	2142      	movs	r1, #66	; 0x42
 8002882:	485a      	ldr	r0, [pc, #360]	; (80029ec <GPIO_Activation_Right+0x2cc>)
 8002884:	f004 fc52 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002888:	e0ab      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 6){
 800288a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800288c:	2b06      	cmp	r3, #6
 800288e:	d117      	bne.n	80028c0 <GPIO_Activation_Right+0x1a0>
         HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P01_ON[0], 1, 1000);
 8002890:	f107 0220 	add.w	r2, r7, #32
 8002894:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002898:	9300      	str	r3, [sp, #0]
 800289a:	2301      	movs	r3, #1
 800289c:	2140      	movs	r1, #64	; 0x40
 800289e:	4854      	ldr	r0, [pc, #336]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 80028a0:	f004 fc44 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 80028a4:	20fa      	movs	r0, #250	; 0xfa
 80028a6:	f003 fa13 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P01_STOP[0], 1, 1000);
 80028aa:	f107 021c 	add.w	r2, r7, #28
 80028ae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80028b2:	9300      	str	r3, [sp, #0]
 80028b4:	2301      	movs	r3, #1
 80028b6:	2140      	movs	r1, #64	; 0x40
 80028b8:	484d      	ldr	r0, [pc, #308]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 80028ba:	f004 fc37 	bl	800712c <HAL_I2C_Master_Transmit>
}
 80028be:	e090      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 7){
 80028c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80028c2:	2b07      	cmp	r3, #7
 80028c4:	d117      	bne.n	80028f6 <GPIO_Activation_Right+0x1d6>
         HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P23_ON[0], 1, 1000);
 80028c6:	f107 0218 	add.w	r2, r7, #24
 80028ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80028ce:	9300      	str	r3, [sp, #0]
 80028d0:	2301      	movs	r3, #1
 80028d2:	2140      	movs	r1, #64	; 0x40
 80028d4:	4846      	ldr	r0, [pc, #280]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 80028d6:	f004 fc29 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 80028da:	20fa      	movs	r0, #250	; 0xfa
 80028dc:	f003 f9f8 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P23_STOP[0], 1, 1000);
 80028e0:	f107 0214 	add.w	r2, r7, #20
 80028e4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80028e8:	9300      	str	r3, [sp, #0]
 80028ea:	2301      	movs	r3, #1
 80028ec:	2140      	movs	r1, #64	; 0x40
 80028ee:	4840      	ldr	r0, [pc, #256]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 80028f0:	f004 fc1c 	bl	800712c <HAL_I2C_Master_Transmit>
}
 80028f4:	e075      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 8){
 80028f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80028f8:	2b08      	cmp	r3, #8
 80028fa:	d117      	bne.n	800292c <GPIO_Activation_Right+0x20c>
         HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P45_ON[0], 1, 1000);
 80028fc:	f107 0210 	add.w	r2, r7, #16
 8002900:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002904:	9300      	str	r3, [sp, #0]
 8002906:	2301      	movs	r3, #1
 8002908:	2140      	movs	r1, #64	; 0x40
 800290a:	4839      	ldr	r0, [pc, #228]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 800290c:	f004 fc0e 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002910:	20fa      	movs	r0, #250	; 0xfa
 8002912:	f003 f9dd 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P45_STOP[0], 1, 1000);
 8002916:	f107 020c 	add.w	r2, r7, #12
 800291a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800291e:	9300      	str	r3, [sp, #0]
 8002920:	2301      	movs	r3, #1
 8002922:	2140      	movs	r1, #64	; 0x40
 8002924:	4832      	ldr	r0, [pc, #200]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 8002926:	f004 fc01 	bl	800712c <HAL_I2C_Master_Transmit>
}
 800292a:	e05a      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 9){
 800292c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800292e:	2b09      	cmp	r3, #9
 8002930:	d117      	bne.n	8002962 <GPIO_Activation_Right+0x242>
         HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P01_ON[0], 1, 1000);
 8002932:	f107 0220 	add.w	r2, r7, #32
 8002936:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800293a:	9300      	str	r3, [sp, #0]
 800293c:	2301      	movs	r3, #1
 800293e:	2142      	movs	r1, #66	; 0x42
 8002940:	482b      	ldr	r0, [pc, #172]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 8002942:	f004 fbf3 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002946:	20fa      	movs	r0, #250	; 0xfa
 8002948:	f003 f9c2 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P01_STOP[0], 1, 1000);
 800294c:	f107 021c 	add.w	r2, r7, #28
 8002950:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002954:	9300      	str	r3, [sp, #0]
 8002956:	2301      	movs	r3, #1
 8002958:	2142      	movs	r1, #66	; 0x42
 800295a:	4825      	ldr	r0, [pc, #148]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 800295c:	f004 fbe6 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002960:	e03f      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 10){
 8002962:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002964:	2b0a      	cmp	r3, #10
 8002966:	d117      	bne.n	8002998 <GPIO_Activation_Right+0x278>
         HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P23_ON[0], 1, 1000);
 8002968:	f107 0218 	add.w	r2, r7, #24
 800296c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002970:	9300      	str	r3, [sp, #0]
 8002972:	2301      	movs	r3, #1
 8002974:	2142      	movs	r1, #66	; 0x42
 8002976:	481e      	ldr	r0, [pc, #120]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 8002978:	f004 fbd8 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 800297c:	20fa      	movs	r0, #250	; 0xfa
 800297e:	f003 f9a7 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P23_STOP[0], 1, 1000);
 8002982:	f107 0214 	add.w	r2, r7, #20
 8002986:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800298a:	9300      	str	r3, [sp, #0]
 800298c:	2301      	movs	r3, #1
 800298e:	2142      	movs	r1, #66	; 0x42
 8002990:	4817      	ldr	r0, [pc, #92]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 8002992:	f004 fbcb 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002996:	e024      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num == 11){
 8002998:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800299a:	2b0b      	cmp	r3, #11
 800299c:	d117      	bne.n	80029ce <GPIO_Activation_Right+0x2ae>
         HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P45_ON[0], 1, 1000);
 800299e:	f107 0210 	add.w	r2, r7, #16
 80029a2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80029a6:	9300      	str	r3, [sp, #0]
 80029a8:	2301      	movs	r3, #1
 80029aa:	2142      	movs	r1, #66	; 0x42
 80029ac:	4810      	ldr	r0, [pc, #64]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 80029ae:	f004 fbbd 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 80029b2:	20fa      	movs	r0, #250	; 0xfa
 80029b4:	f003 f98c 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P45_STOP[0], 1, 1000);
 80029b8:	f107 020c 	add.w	r2, r7, #12
 80029bc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80029c0:	9300      	str	r3, [sp, #0]
 80029c2:	2301      	movs	r3, #1
 80029c4:	2142      	movs	r1, #66	; 0x42
 80029c6:	480a      	ldr	r0, [pc, #40]	; (80029f0 <GPIO_Activation_Right+0x2d0>)
 80029c8:	f004 fbb0 	bl	800712c <HAL_I2C_Master_Transmit>
}
 80029cc:	e009      	b.n	80029e2 <GPIO_Activation_Right+0x2c2>
     } else if (note_num > 11){
 80029ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80029d0:	2b0b      	cmp	r3, #11
 80029d2:	dd06      	ble.n	80029e2 <GPIO_Activation_Right+0x2c2>
         speakNote(note_num);
 80029d4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80029d6:	f7fe fbaf 	bl	8001138 <speakNote>
         HAL_Delay(2*DCDelay);
 80029da:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80029de:	f003 f977 	bl	8005cd0 <HAL_Delay>
}
 80029e2:	bf00      	nop
 80029e4:	3728      	adds	r7, #40	; 0x28
 80029e6:	46bd      	mov	sp, r7
 80029e8:	bd80      	pop	{r7, pc}
 80029ea:	bf00      	nop
 80029ec:	200004b4 	.word	0x200004b4
 80029f0:	20000508 	.word	0x20000508

080029f4 <GPIO_Activation_Left>:

void GPIO_Activation_Left(int note){
 80029f4:	b580      	push	{r7, lr}
 80029f6:	b08c      	sub	sp, #48	; 0x30
 80029f8:	af02      	add	r7, sp, #8
 80029fa:	6078      	str	r0, [r7, #4]
     int note_num = note;
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	627b      	str	r3, [r7, #36]	; 0x24

     uint8_t P01_ON[1] = {0x01};
 8002a00:	2301      	movs	r3, #1
 8002a02:	f887 3020 	strb.w	r3, [r7, #32]
     uint8_t P01_STOP[1] = {0x00};
 8002a06:	2300      	movs	r3, #0
 8002a08:	773b      	strb	r3, [r7, #28]

     uint8_t P23_ON[1] = {0x04};
 8002a0a:	2304      	movs	r3, #4
 8002a0c:	763b      	strb	r3, [r7, #24]
     uint8_t P23_STOP[1] = {0x00};
 8002a0e:	2300      	movs	r3, #0
 8002a10:	753b      	strb	r3, [r7, #20]

     uint8_t P45_ON[1] = {0x10};
 8002a12:	2310      	movs	r3, #16
 8002a14:	743b      	strb	r3, [r7, #16]
     uint8_t P45_STOP[1] = {0x00};
 8002a16:	2300      	movs	r3, #0
 8002a18:	733b      	strb	r3, [r7, #12]

     if (note_num == 0){
 8002a1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002a1c:	2b00      	cmp	r3, #0
 8002a1e:	d117      	bne.n	8002a50 <GPIO_Activation_Left+0x5c>
         HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P01_ON[0], 1, 1000);
 8002a20:	f107 0220 	add.w	r2, r7, #32
 8002a24:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002a28:	9300      	str	r3, [sp, #0]
 8002a2a:	2301      	movs	r3, #1
 8002a2c:	2140      	movs	r1, #64	; 0x40
 8002a2e:	48a2      	ldr	r0, [pc, #648]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002a30:	f004 fb7c 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002a34:	20fa      	movs	r0, #250	; 0xfa
 8002a36:	f003 f94b 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P01_STOP[0], 1, 1000);
 8002a3a:	f107 021c 	add.w	r2, r7, #28
 8002a3e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002a42:	9300      	str	r3, [sp, #0]
 8002a44:	2301      	movs	r3, #1
 8002a46:	2140      	movs	r1, #64	; 0x40
 8002a48:	489b      	ldr	r0, [pc, #620]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002a4a:	f004 fb6f 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P45_STOP[0], 1, 1000);
     } else if (note_num > 11){
         speakNote(note_num);
     }

}
 8002a4e:	e12e      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 1){
 8002a50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002a52:	2b01      	cmp	r3, #1
 8002a54:	d117      	bne.n	8002a86 <GPIO_Activation_Left+0x92>
         HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P23_ON[0], 1, 1000);
 8002a56:	f107 0218 	add.w	r2, r7, #24
 8002a5a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002a5e:	9300      	str	r3, [sp, #0]
 8002a60:	2301      	movs	r3, #1
 8002a62:	2140      	movs	r1, #64	; 0x40
 8002a64:	4894      	ldr	r0, [pc, #592]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002a66:	f004 fb61 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002a6a:	20fa      	movs	r0, #250	; 0xfa
 8002a6c:	f003 f930 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P23_STOP[0], 1, 1000);
 8002a70:	f107 0214 	add.w	r2, r7, #20
 8002a74:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002a78:	9300      	str	r3, [sp, #0]
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	2140      	movs	r1, #64	; 0x40
 8002a7e:	488e      	ldr	r0, [pc, #568]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002a80:	f004 fb54 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002a84:	e113      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 2){
 8002a86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002a88:	2b02      	cmp	r3, #2
 8002a8a:	d117      	bne.n	8002abc <GPIO_Activation_Left+0xc8>
         HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P45_ON[0], 1, 1000);
 8002a8c:	f107 0210 	add.w	r2, r7, #16
 8002a90:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002a94:	9300      	str	r3, [sp, #0]
 8002a96:	2301      	movs	r3, #1
 8002a98:	2140      	movs	r1, #64	; 0x40
 8002a9a:	4887      	ldr	r0, [pc, #540]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002a9c:	f004 fb46 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002aa0:	20fa      	movs	r0, #250	; 0xfa
 8002aa2:	f003 f915 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P45_STOP[0], 1, 1000);
 8002aa6:	f107 020c 	add.w	r2, r7, #12
 8002aaa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002aae:	9300      	str	r3, [sp, #0]
 8002ab0:	2301      	movs	r3, #1
 8002ab2:	2140      	movs	r1, #64	; 0x40
 8002ab4:	4880      	ldr	r0, [pc, #512]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002ab6:	f004 fb39 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002aba:	e0f8      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 3){
 8002abc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002abe:	2b03      	cmp	r3, #3
 8002ac0:	d117      	bne.n	8002af2 <GPIO_Activation_Left+0xfe>
         HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P01_ON[0], 1, 1000);
 8002ac2:	f107 0220 	add.w	r2, r7, #32
 8002ac6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002aca:	9300      	str	r3, [sp, #0]
 8002acc:	2301      	movs	r3, #1
 8002ace:	2142      	movs	r1, #66	; 0x42
 8002ad0:	4879      	ldr	r0, [pc, #484]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002ad2:	f004 fb2b 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002ad6:	20fa      	movs	r0, #250	; 0xfa
 8002ad8:	f003 f8fa 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P01_STOP[0], 1, 1000);
 8002adc:	f107 021c 	add.w	r2, r7, #28
 8002ae0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ae4:	9300      	str	r3, [sp, #0]
 8002ae6:	2301      	movs	r3, #1
 8002ae8:	2142      	movs	r1, #66	; 0x42
 8002aea:	4873      	ldr	r0, [pc, #460]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002aec:	f004 fb1e 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002af0:	e0dd      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 4){
 8002af2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002af4:	2b04      	cmp	r3, #4
 8002af6:	d117      	bne.n	8002b28 <GPIO_Activation_Left+0x134>
         HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P23_ON[0], 1, 1000);
 8002af8:	f107 0218 	add.w	r2, r7, #24
 8002afc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b00:	9300      	str	r3, [sp, #0]
 8002b02:	2301      	movs	r3, #1
 8002b04:	2142      	movs	r1, #66	; 0x42
 8002b06:	486c      	ldr	r0, [pc, #432]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002b08:	f004 fb10 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002b0c:	20fa      	movs	r0, #250	; 0xfa
 8002b0e:	f003 f8df 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P23_STOP[0], 1, 1000);
 8002b12:	f107 0214 	add.w	r2, r7, #20
 8002b16:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b1a:	9300      	str	r3, [sp, #0]
 8002b1c:	2301      	movs	r3, #1
 8002b1e:	2142      	movs	r1, #66	; 0x42
 8002b20:	4865      	ldr	r0, [pc, #404]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002b22:	f004 fb03 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002b26:	e0c2      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 5){
 8002b28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b2a:	2b05      	cmp	r3, #5
 8002b2c:	d117      	bne.n	8002b5e <GPIO_Activation_Left+0x16a>
         HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P45_ON[0], 1, 1000);
 8002b2e:	f107 0210 	add.w	r2, r7, #16
 8002b32:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b36:	9300      	str	r3, [sp, #0]
 8002b38:	2301      	movs	r3, #1
 8002b3a:	2142      	movs	r1, #66	; 0x42
 8002b3c:	485e      	ldr	r0, [pc, #376]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002b3e:	f004 faf5 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002b42:	20fa      	movs	r0, #250	; 0xfa
 8002b44:	f003 f8c4 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P45_STOP[0], 1, 1000);
 8002b48:	f107 020c 	add.w	r2, r7, #12
 8002b4c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b50:	9300      	str	r3, [sp, #0]
 8002b52:	2301      	movs	r3, #1
 8002b54:	2142      	movs	r1, #66	; 0x42
 8002b56:	4858      	ldr	r0, [pc, #352]	; (8002cb8 <GPIO_Activation_Left+0x2c4>)
 8002b58:	f004 fae8 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002b5c:	e0a7      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 6){
 8002b5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b60:	2b06      	cmp	r3, #6
 8002b62:	d117      	bne.n	8002b94 <GPIO_Activation_Left+0x1a0>
         HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P01_ON[0], 1, 1000);
 8002b64:	f107 0220 	add.w	r2, r7, #32
 8002b68:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b6c:	9300      	str	r3, [sp, #0]
 8002b6e:	2301      	movs	r3, #1
 8002b70:	2140      	movs	r1, #64	; 0x40
 8002b72:	4852      	ldr	r0, [pc, #328]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002b74:	f004 fada 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002b78:	20fa      	movs	r0, #250	; 0xfa
 8002b7a:	f003 f8a9 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P01_STOP[0], 1, 1000);
 8002b7e:	f107 021c 	add.w	r2, r7, #28
 8002b82:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b86:	9300      	str	r3, [sp, #0]
 8002b88:	2301      	movs	r3, #1
 8002b8a:	2140      	movs	r1, #64	; 0x40
 8002b8c:	484b      	ldr	r0, [pc, #300]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002b8e:	f004 facd 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002b92:	e08c      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 7){
 8002b94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b96:	2b07      	cmp	r3, #7
 8002b98:	d117      	bne.n	8002bca <GPIO_Activation_Left+0x1d6>
         HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P23_ON[0], 1, 1000);
 8002b9a:	f107 0218 	add.w	r2, r7, #24
 8002b9e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ba2:	9300      	str	r3, [sp, #0]
 8002ba4:	2301      	movs	r3, #1
 8002ba6:	2140      	movs	r1, #64	; 0x40
 8002ba8:	4844      	ldr	r0, [pc, #272]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002baa:	f004 fabf 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002bae:	20fa      	movs	r0, #250	; 0xfa
 8002bb0:	f003 f88e 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P23_STOP[0], 1, 1000);
 8002bb4:	f107 0214 	add.w	r2, r7, #20
 8002bb8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002bbc:	9300      	str	r3, [sp, #0]
 8002bbe:	2301      	movs	r3, #1
 8002bc0:	2140      	movs	r1, #64	; 0x40
 8002bc2:	483e      	ldr	r0, [pc, #248]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002bc4:	f004 fab2 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002bc8:	e071      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 8){
 8002bca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002bcc:	2b08      	cmp	r3, #8
 8002bce:	d117      	bne.n	8002c00 <GPIO_Activation_Left+0x20c>
         HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P45_ON[0], 1, 1000);
 8002bd0:	f107 0210 	add.w	r2, r7, #16
 8002bd4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002bd8:	9300      	str	r3, [sp, #0]
 8002bda:	2301      	movs	r3, #1
 8002bdc:	2140      	movs	r1, #64	; 0x40
 8002bde:	4837      	ldr	r0, [pc, #220]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002be0:	f004 faa4 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002be4:	20fa      	movs	r0, #250	; 0xfa
 8002be6:	f003 f873 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P45_STOP[0], 1, 1000);
 8002bea:	f107 020c 	add.w	r2, r7, #12
 8002bee:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002bf2:	9300      	str	r3, [sp, #0]
 8002bf4:	2301      	movs	r3, #1
 8002bf6:	2140      	movs	r1, #64	; 0x40
 8002bf8:	4830      	ldr	r0, [pc, #192]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002bfa:	f004 fa97 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002bfe:	e056      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 9){
 8002c00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c02:	2b09      	cmp	r3, #9
 8002c04:	d117      	bne.n	8002c36 <GPIO_Activation_Left+0x242>
         HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P01_ON[0], 1, 1000);
 8002c06:	f107 0220 	add.w	r2, r7, #32
 8002c0a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c0e:	9300      	str	r3, [sp, #0]
 8002c10:	2301      	movs	r3, #1
 8002c12:	2142      	movs	r1, #66	; 0x42
 8002c14:	4829      	ldr	r0, [pc, #164]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002c16:	f004 fa89 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002c1a:	20fa      	movs	r0, #250	; 0xfa
 8002c1c:	f003 f858 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P01_STOP[0], 1, 1000);
 8002c20:	f107 021c 	add.w	r2, r7, #28
 8002c24:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c28:	9300      	str	r3, [sp, #0]
 8002c2a:	2301      	movs	r3, #1
 8002c2c:	2142      	movs	r1, #66	; 0x42
 8002c2e:	4823      	ldr	r0, [pc, #140]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002c30:	f004 fa7c 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002c34:	e03b      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 10){
 8002c36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c38:	2b0a      	cmp	r3, #10
 8002c3a:	d117      	bne.n	8002c6c <GPIO_Activation_Left+0x278>
         HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P23_ON[0], 1, 1000);
 8002c3c:	f107 0218 	add.w	r2, r7, #24
 8002c40:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c44:	9300      	str	r3, [sp, #0]
 8002c46:	2301      	movs	r3, #1
 8002c48:	2142      	movs	r1, #66	; 0x42
 8002c4a:	481c      	ldr	r0, [pc, #112]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002c4c:	f004 fa6e 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002c50:	20fa      	movs	r0, #250	; 0xfa
 8002c52:	f003 f83d 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P23_STOP[0], 1, 1000);
 8002c56:	f107 0214 	add.w	r2, r7, #20
 8002c5a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c5e:	9300      	str	r3, [sp, #0]
 8002c60:	2301      	movs	r3, #1
 8002c62:	2142      	movs	r1, #66	; 0x42
 8002c64:	4815      	ldr	r0, [pc, #84]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002c66:	f004 fa61 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002c6a:	e020      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num == 11){
 8002c6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c6e:	2b0b      	cmp	r3, #11
 8002c70:	d117      	bne.n	8002ca2 <GPIO_Activation_Left+0x2ae>
         HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P45_ON[0], 1, 1000);
 8002c72:	f107 0210 	add.w	r2, r7, #16
 8002c76:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c7a:	9300      	str	r3, [sp, #0]
 8002c7c:	2301      	movs	r3, #1
 8002c7e:	2142      	movs	r1, #66	; 0x42
 8002c80:	480e      	ldr	r0, [pc, #56]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002c82:	f004 fa53 	bl	800712c <HAL_I2C_Master_Transmit>
         HAL_Delay(DCDelay);
 8002c86:	20fa      	movs	r0, #250	; 0xfa
 8002c88:	f003 f822 	bl	8005cd0 <HAL_Delay>
         HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P45_STOP[0], 1, 1000);
 8002c8c:	f107 020c 	add.w	r2, r7, #12
 8002c90:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c94:	9300      	str	r3, [sp, #0]
 8002c96:	2301      	movs	r3, #1
 8002c98:	2142      	movs	r1, #66	; 0x42
 8002c9a:	4808      	ldr	r0, [pc, #32]	; (8002cbc <GPIO_Activation_Left+0x2c8>)
 8002c9c:	f004 fa46 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002ca0:	e005      	b.n	8002cae <GPIO_Activation_Left+0x2ba>
     } else if (note_num > 11){
 8002ca2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ca4:	2b0b      	cmp	r3, #11
 8002ca6:	dd02      	ble.n	8002cae <GPIO_Activation_Left+0x2ba>
         speakNote(note_num);
 8002ca8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002caa:	f7fe fa45 	bl	8001138 <speakNote>
}
 8002cae:	bf00      	nop
 8002cb0:	3728      	adds	r7, #40	; 0x28
 8002cb2:	46bd      	mov	sp, r7
 8002cb4:	bd80      	pop	{r7, pc}
 8002cb6:	bf00      	nop
 8002cb8:	2000055c 	.word	0x2000055c
 8002cbc:	200005b0 	.word	0x200005b0

08002cc0 <GPIO_Deactivation_Right>:

void GPIO_Deactivation_Right(int note){
 8002cc0:	b580      	push	{r7, lr}
 8002cc2:	b08c      	sub	sp, #48	; 0x30
 8002cc4:	af02      	add	r7, sp, #8
 8002cc6:	6078      	str	r0, [r7, #4]
     int note_num = note;
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	627b      	str	r3, [r7, #36]	; 0x24

     uint8_t P01_OFF[1] = {0x02};
 8002ccc:	2302      	movs	r3, #2
 8002cce:	f887 3020 	strb.w	r3, [r7, #32]
     uint8_t P01_STOP[1] = {0x00};
 8002cd2:	2300      	movs	r3, #0
 8002cd4:	773b      	strb	r3, [r7, #28]

     uint8_t P23_OFF[1] = {0x08};
 8002cd6:	2308      	movs	r3, #8
 8002cd8:	763b      	strb	r3, [r7, #24]
     uint8_t P23_STOP[1] = {0x00};
 8002cda:	2300      	movs	r3, #0
 8002cdc:	753b      	strb	r3, [r7, #20]

     uint8_t P45_OFF[1] = {0x20};
 8002cde:	2320      	movs	r3, #32
 8002ce0:	743b      	strb	r3, [r7, #16]
     uint8_t P45_STOP[1] = {0x00};
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	733b      	strb	r3, [r7, #12]

     if (note_num == 0){
 8002ce6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d117      	bne.n	8002d1c <GPIO_Deactivation_Right+0x5c>
              HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P01_OFF[0], 1, 1000);
 8002cec:	f107 0220 	add.w	r2, r7, #32
 8002cf0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002cf4:	9300      	str	r3, [sp, #0]
 8002cf6:	2301      	movs	r3, #1
 8002cf8:	2140      	movs	r1, #64	; 0x40
 8002cfa:	48a4      	ldr	r0, [pc, #656]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002cfc:	f004 fa16 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002d00:	20fa      	movs	r0, #250	; 0xfa
 8002d02:	f002 ffe5 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P01_STOP[0], 1, 1000);
 8002d06:	f107 021c 	add.w	r2, r7, #28
 8002d0a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d0e:	9300      	str	r3, [sp, #0]
 8002d10:	2301      	movs	r3, #1
 8002d12:	2140      	movs	r1, #64	; 0x40
 8002d14:	489d      	ldr	r0, [pc, #628]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002d16:	f004 fa09 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P45_STOP[0], 1, 1000);
              stopSpeaker();
          } else if (note_num > 11){
              stopSpeaker();
          }
}
 8002d1a:	e133      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 1){
 8002d1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d1e:	2b01      	cmp	r3, #1
 8002d20:	d117      	bne.n	8002d52 <GPIO_Deactivation_Right+0x92>
              HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P23_OFF[0], 1, 1000);
 8002d22:	f107 0218 	add.w	r2, r7, #24
 8002d26:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d2a:	9300      	str	r3, [sp, #0]
 8002d2c:	2301      	movs	r3, #1
 8002d2e:	2140      	movs	r1, #64	; 0x40
 8002d30:	4896      	ldr	r0, [pc, #600]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002d32:	f004 f9fb 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002d36:	20fa      	movs	r0, #250	; 0xfa
 8002d38:	f002 ffca 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P23_STOP[0], 1, 1000);
 8002d3c:	f107 0214 	add.w	r2, r7, #20
 8002d40:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d44:	9300      	str	r3, [sp, #0]
 8002d46:	2301      	movs	r3, #1
 8002d48:	2140      	movs	r1, #64	; 0x40
 8002d4a:	4890      	ldr	r0, [pc, #576]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002d4c:	f004 f9ee 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002d50:	e118      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 2){
 8002d52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d54:	2b02      	cmp	r3, #2
 8002d56:	d117      	bne.n	8002d88 <GPIO_Deactivation_Right+0xc8>
              HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P45_OFF[0], 1, 1000);
 8002d58:	f107 0210 	add.w	r2, r7, #16
 8002d5c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d60:	9300      	str	r3, [sp, #0]
 8002d62:	2301      	movs	r3, #1
 8002d64:	2140      	movs	r1, #64	; 0x40
 8002d66:	4889      	ldr	r0, [pc, #548]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002d68:	f004 f9e0 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002d6c:	20fa      	movs	r0, #250	; 0xfa
 8002d6e:	f002 ffaf 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c1, (0x20<<1), &P45_STOP[0], 1, 1000);
 8002d72:	f107 020c 	add.w	r2, r7, #12
 8002d76:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d7a:	9300      	str	r3, [sp, #0]
 8002d7c:	2301      	movs	r3, #1
 8002d7e:	2140      	movs	r1, #64	; 0x40
 8002d80:	4882      	ldr	r0, [pc, #520]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002d82:	f004 f9d3 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002d86:	e0fd      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 3){
 8002d88:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d8a:	2b03      	cmp	r3, #3
 8002d8c:	d117      	bne.n	8002dbe <GPIO_Deactivation_Right+0xfe>
              HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P01_OFF[0], 1, 1000);
 8002d8e:	f107 0220 	add.w	r2, r7, #32
 8002d92:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d96:	9300      	str	r3, [sp, #0]
 8002d98:	2301      	movs	r3, #1
 8002d9a:	2142      	movs	r1, #66	; 0x42
 8002d9c:	487b      	ldr	r0, [pc, #492]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002d9e:	f004 f9c5 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002da2:	20fa      	movs	r0, #250	; 0xfa
 8002da4:	f002 ff94 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P01_STOP[0], 1, 1000);
 8002da8:	f107 021c 	add.w	r2, r7, #28
 8002dac:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002db0:	9300      	str	r3, [sp, #0]
 8002db2:	2301      	movs	r3, #1
 8002db4:	2142      	movs	r1, #66	; 0x42
 8002db6:	4875      	ldr	r0, [pc, #468]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002db8:	f004 f9b8 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002dbc:	e0e2      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 4){
 8002dbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002dc0:	2b04      	cmp	r3, #4
 8002dc2:	d117      	bne.n	8002df4 <GPIO_Deactivation_Right+0x134>
              HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P23_OFF[0], 1, 1000);
 8002dc4:	f107 0218 	add.w	r2, r7, #24
 8002dc8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002dcc:	9300      	str	r3, [sp, #0]
 8002dce:	2301      	movs	r3, #1
 8002dd0:	2142      	movs	r1, #66	; 0x42
 8002dd2:	486e      	ldr	r0, [pc, #440]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002dd4:	f004 f9aa 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002dd8:	20fa      	movs	r0, #250	; 0xfa
 8002dda:	f002 ff79 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P23_STOP[0], 1, 1000);
 8002dde:	f107 0214 	add.w	r2, r7, #20
 8002de2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002de6:	9300      	str	r3, [sp, #0]
 8002de8:	2301      	movs	r3, #1
 8002dea:	2142      	movs	r1, #66	; 0x42
 8002dec:	4867      	ldr	r0, [pc, #412]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002dee:	f004 f99d 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002df2:	e0c7      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 5){
 8002df4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002df6:	2b05      	cmp	r3, #5
 8002df8:	d117      	bne.n	8002e2a <GPIO_Deactivation_Right+0x16a>
              HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P45_OFF[0], 1, 1000);
 8002dfa:	f107 0210 	add.w	r2, r7, #16
 8002dfe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e02:	9300      	str	r3, [sp, #0]
 8002e04:	2301      	movs	r3, #1
 8002e06:	2142      	movs	r1, #66	; 0x42
 8002e08:	4860      	ldr	r0, [pc, #384]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002e0a:	f004 f98f 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002e0e:	20fa      	movs	r0, #250	; 0xfa
 8002e10:	f002 ff5e 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c1, (0x21<<1), &P45_STOP[0], 1, 1000);
 8002e14:	f107 020c 	add.w	r2, r7, #12
 8002e18:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e1c:	9300      	str	r3, [sp, #0]
 8002e1e:	2301      	movs	r3, #1
 8002e20:	2142      	movs	r1, #66	; 0x42
 8002e22:	485a      	ldr	r0, [pc, #360]	; (8002f8c <GPIO_Deactivation_Right+0x2cc>)
 8002e24:	f004 f982 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002e28:	e0ac      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 6){
 8002e2a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e2c:	2b06      	cmp	r3, #6
 8002e2e:	d117      	bne.n	8002e60 <GPIO_Deactivation_Right+0x1a0>
              HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P01_OFF[0], 1, 1000);
 8002e30:	f107 0220 	add.w	r2, r7, #32
 8002e34:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e38:	9300      	str	r3, [sp, #0]
 8002e3a:	2301      	movs	r3, #1
 8002e3c:	2140      	movs	r1, #64	; 0x40
 8002e3e:	4854      	ldr	r0, [pc, #336]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002e40:	f004 f974 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002e44:	20fa      	movs	r0, #250	; 0xfa
 8002e46:	f002 ff43 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P01_STOP[0], 1, 1000);
 8002e4a:	f107 021c 	add.w	r2, r7, #28
 8002e4e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e52:	9300      	str	r3, [sp, #0]
 8002e54:	2301      	movs	r3, #1
 8002e56:	2140      	movs	r1, #64	; 0x40
 8002e58:	484d      	ldr	r0, [pc, #308]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002e5a:	f004 f967 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002e5e:	e091      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 7){
 8002e60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e62:	2b07      	cmp	r3, #7
 8002e64:	d119      	bne.n	8002e9a <GPIO_Deactivation_Right+0x1da>
              HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P23_OFF[0], 1, 1000);
 8002e66:	f107 0218 	add.w	r2, r7, #24
 8002e6a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e6e:	9300      	str	r3, [sp, #0]
 8002e70:	2301      	movs	r3, #1
 8002e72:	2140      	movs	r1, #64	; 0x40
 8002e74:	4846      	ldr	r0, [pc, #280]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002e76:	f004 f959 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002e7a:	20fa      	movs	r0, #250	; 0xfa
 8002e7c:	f002 ff28 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P23_STOP[0], 1, 1000);
 8002e80:	f107 0214 	add.w	r2, r7, #20
 8002e84:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e88:	9300      	str	r3, [sp, #0]
 8002e8a:	2301      	movs	r3, #1
 8002e8c:	2140      	movs	r1, #64	; 0x40
 8002e8e:	4840      	ldr	r0, [pc, #256]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002e90:	f004 f94c 	bl	800712c <HAL_I2C_Master_Transmit>
              stopSpeaker();
 8002e94:	f7fe f996 	bl	80011c4 <stopSpeaker>
}
 8002e98:	e074      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 8){
 8002e9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e9c:	2b08      	cmp	r3, #8
 8002e9e:	d117      	bne.n	8002ed0 <GPIO_Deactivation_Right+0x210>
              HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P45_OFF[0], 1, 1000);
 8002ea0:	f107 0210 	add.w	r2, r7, #16
 8002ea4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ea8:	9300      	str	r3, [sp, #0]
 8002eaa:	2301      	movs	r3, #1
 8002eac:	2140      	movs	r1, #64	; 0x40
 8002eae:	4838      	ldr	r0, [pc, #224]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002eb0:	f004 f93c 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002eb4:	20fa      	movs	r0, #250	; 0xfa
 8002eb6:	f002 ff0b 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c2, (0x20<<1), &P45_STOP[0], 1, 1000);
 8002eba:	f107 020c 	add.w	r2, r7, #12
 8002ebe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ec2:	9300      	str	r3, [sp, #0]
 8002ec4:	2301      	movs	r3, #1
 8002ec6:	2140      	movs	r1, #64	; 0x40
 8002ec8:	4831      	ldr	r0, [pc, #196]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002eca:	f004 f92f 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002ece:	e059      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 9){
 8002ed0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ed2:	2b09      	cmp	r3, #9
 8002ed4:	d119      	bne.n	8002f0a <GPIO_Deactivation_Right+0x24a>
              HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P01_OFF[0], 1, 1000);
 8002ed6:	f107 0220 	add.w	r2, r7, #32
 8002eda:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ede:	9300      	str	r3, [sp, #0]
 8002ee0:	2301      	movs	r3, #1
 8002ee2:	2142      	movs	r1, #66	; 0x42
 8002ee4:	482a      	ldr	r0, [pc, #168]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002ee6:	f004 f921 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002eea:	20fa      	movs	r0, #250	; 0xfa
 8002eec:	f002 fef0 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P01_STOP[0], 1, 1000);
 8002ef0:	f107 021c 	add.w	r2, r7, #28
 8002ef4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ef8:	9300      	str	r3, [sp, #0]
 8002efa:	2301      	movs	r3, #1
 8002efc:	2142      	movs	r1, #66	; 0x42
 8002efe:	4824      	ldr	r0, [pc, #144]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002f00:	f004 f914 	bl	800712c <HAL_I2C_Master_Transmit>
              stopSpeaker();
 8002f04:	f7fe f95e 	bl	80011c4 <stopSpeaker>
}
 8002f08:	e03c      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 10){
 8002f0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f0c:	2b0a      	cmp	r3, #10
 8002f0e:	d117      	bne.n	8002f40 <GPIO_Deactivation_Right+0x280>
              HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P23_OFF[0], 1, 1000);
 8002f10:	f107 0218 	add.w	r2, r7, #24
 8002f14:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002f18:	9300      	str	r3, [sp, #0]
 8002f1a:	2301      	movs	r3, #1
 8002f1c:	2142      	movs	r1, #66	; 0x42
 8002f1e:	481c      	ldr	r0, [pc, #112]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002f20:	f004 f904 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002f24:	20fa      	movs	r0, #250	; 0xfa
 8002f26:	f002 fed3 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P23_STOP[0], 1, 1000);
 8002f2a:	f107 0214 	add.w	r2, r7, #20
 8002f2e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002f32:	9300      	str	r3, [sp, #0]
 8002f34:	2301      	movs	r3, #1
 8002f36:	2142      	movs	r1, #66	; 0x42
 8002f38:	4815      	ldr	r0, [pc, #84]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002f3a:	f004 f8f7 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8002f3e:	e021      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num == 11){
 8002f40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f42:	2b0b      	cmp	r3, #11
 8002f44:	d119      	bne.n	8002f7a <GPIO_Deactivation_Right+0x2ba>
              HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P45_OFF[0], 1, 1000);
 8002f46:	f107 0210 	add.w	r2, r7, #16
 8002f4a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002f4e:	9300      	str	r3, [sp, #0]
 8002f50:	2301      	movs	r3, #1
 8002f52:	2142      	movs	r1, #66	; 0x42
 8002f54:	480e      	ldr	r0, [pc, #56]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002f56:	f004 f8e9 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002f5a:	20fa      	movs	r0, #250	; 0xfa
 8002f5c:	f002 feb8 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c2, (0x21<<1), &P45_STOP[0], 1, 1000);
 8002f60:	f107 020c 	add.w	r2, r7, #12
 8002f64:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002f68:	9300      	str	r3, [sp, #0]
 8002f6a:	2301      	movs	r3, #1
 8002f6c:	2142      	movs	r1, #66	; 0x42
 8002f6e:	4808      	ldr	r0, [pc, #32]	; (8002f90 <GPIO_Deactivation_Right+0x2d0>)
 8002f70:	f004 f8dc 	bl	800712c <HAL_I2C_Master_Transmit>
              stopSpeaker();
 8002f74:	f7fe f926 	bl	80011c4 <stopSpeaker>
}
 8002f78:	e004      	b.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
          } else if (note_num > 11){
 8002f7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f7c:	2b0b      	cmp	r3, #11
 8002f7e:	dd01      	ble.n	8002f84 <GPIO_Deactivation_Right+0x2c4>
              stopSpeaker();
 8002f80:	f7fe f920 	bl	80011c4 <stopSpeaker>
}
 8002f84:	bf00      	nop
 8002f86:	3728      	adds	r7, #40	; 0x28
 8002f88:	46bd      	mov	sp, r7
 8002f8a:	bd80      	pop	{r7, pc}
 8002f8c:	200004b4 	.word	0x200004b4
 8002f90:	20000508 	.word	0x20000508

08002f94 <GPIO_Deactivation_Left>:

void GPIO_Deactivation_Left(int note){
 8002f94:	b580      	push	{r7, lr}
 8002f96:	b08c      	sub	sp, #48	; 0x30
 8002f98:	af02      	add	r7, sp, #8
 8002f9a:	6078      	str	r0, [r7, #4]
     int note_num = note;
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	627b      	str	r3, [r7, #36]	; 0x24

     uint8_t P01_OFF[1] = {0x02};
 8002fa0:	2302      	movs	r3, #2
 8002fa2:	f887 3020 	strb.w	r3, [r7, #32]
     uint8_t P01_STOP[1] = {0x00};
 8002fa6:	2300      	movs	r3, #0
 8002fa8:	773b      	strb	r3, [r7, #28]

     uint8_t P23_OFF[1] = {0x08};
 8002faa:	2308      	movs	r3, #8
 8002fac:	763b      	strb	r3, [r7, #24]
     uint8_t P23_STOP[1] = {0x00};
 8002fae:	2300      	movs	r3, #0
 8002fb0:	753b      	strb	r3, [r7, #20]

     uint8_t P45_OFF[1] = {0x20};
 8002fb2:	2320      	movs	r3, #32
 8002fb4:	743b      	strb	r3, [r7, #16]
     uint8_t P45_STOP[1] = {0x00};
 8002fb6:	2300      	movs	r3, #0
 8002fb8:	733b      	strb	r3, [r7, #12]

     if (note_num == 0){
 8002fba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	d117      	bne.n	8002ff0 <GPIO_Deactivation_Left+0x5c>
              HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P01_OFF[0], 1, 1000);
 8002fc0:	f107 0220 	add.w	r2, r7, #32
 8002fc4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002fc8:	9300      	str	r3, [sp, #0]
 8002fca:	2301      	movs	r3, #1
 8002fcc:	2140      	movs	r1, #64	; 0x40
 8002fce:	48a1      	ldr	r0, [pc, #644]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 8002fd0:	f004 f8ac 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8002fd4:	20fa      	movs	r0, #250	; 0xfa
 8002fd6:	f002 fe7b 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P01_STOP[0], 1, 1000);
 8002fda:	f107 021c 	add.w	r2, r7, #28
 8002fde:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002fe2:	9300      	str	r3, [sp, #0]
 8002fe4:	2301      	movs	r3, #1
 8002fe6:	2140      	movs	r1, #64	; 0x40
 8002fe8:	489a      	ldr	r0, [pc, #616]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 8002fea:	f004 f89f 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
              HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P45_STOP[0], 1, 1000);
          } else if (note_num > 11){
              stopSpeaker();
          }
}
 8002fee:	e12d      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 1){
 8002ff0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ff2:	2b01      	cmp	r3, #1
 8002ff4:	d117      	bne.n	8003026 <GPIO_Deactivation_Left+0x92>
              HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P23_OFF[0], 1, 1000);
 8002ff6:	f107 0218 	add.w	r2, r7, #24
 8002ffa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ffe:	9300      	str	r3, [sp, #0]
 8003000:	2301      	movs	r3, #1
 8003002:	2140      	movs	r1, #64	; 0x40
 8003004:	4893      	ldr	r0, [pc, #588]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 8003006:	f004 f891 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 800300a:	20fa      	movs	r0, #250	; 0xfa
 800300c:	f002 fe60 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P23_STOP[0], 1, 1000);
 8003010:	f107 0214 	add.w	r2, r7, #20
 8003014:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003018:	9300      	str	r3, [sp, #0]
 800301a:	2301      	movs	r3, #1
 800301c:	2140      	movs	r1, #64	; 0x40
 800301e:	488d      	ldr	r0, [pc, #564]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 8003020:	f004 f884 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8003024:	e112      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 2){
 8003026:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003028:	2b02      	cmp	r3, #2
 800302a:	d117      	bne.n	800305c <GPIO_Deactivation_Left+0xc8>
              HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P45_OFF[0], 1, 1000);
 800302c:	f107 0210 	add.w	r2, r7, #16
 8003030:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003034:	9300      	str	r3, [sp, #0]
 8003036:	2301      	movs	r3, #1
 8003038:	2140      	movs	r1, #64	; 0x40
 800303a:	4886      	ldr	r0, [pc, #536]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 800303c:	f004 f876 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8003040:	20fa      	movs	r0, #250	; 0xfa
 8003042:	f002 fe45 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c3, (0x20<<1), &P45_STOP[0], 1, 1000);
 8003046:	f107 020c 	add.w	r2, r7, #12
 800304a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800304e:	9300      	str	r3, [sp, #0]
 8003050:	2301      	movs	r3, #1
 8003052:	2140      	movs	r1, #64	; 0x40
 8003054:	487f      	ldr	r0, [pc, #508]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 8003056:	f004 f869 	bl	800712c <HAL_I2C_Master_Transmit>
}
 800305a:	e0f7      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 3){
 800305c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800305e:	2b03      	cmp	r3, #3
 8003060:	d117      	bne.n	8003092 <GPIO_Deactivation_Left+0xfe>
              HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P01_OFF[0], 1, 1000);
 8003062:	f107 0220 	add.w	r2, r7, #32
 8003066:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800306a:	9300      	str	r3, [sp, #0]
 800306c:	2301      	movs	r3, #1
 800306e:	2142      	movs	r1, #66	; 0x42
 8003070:	4878      	ldr	r0, [pc, #480]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 8003072:	f004 f85b 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8003076:	20fa      	movs	r0, #250	; 0xfa
 8003078:	f002 fe2a 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P01_STOP[0], 1, 1000);
 800307c:	f107 021c 	add.w	r2, r7, #28
 8003080:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003084:	9300      	str	r3, [sp, #0]
 8003086:	2301      	movs	r3, #1
 8003088:	2142      	movs	r1, #66	; 0x42
 800308a:	4872      	ldr	r0, [pc, #456]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 800308c:	f004 f84e 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8003090:	e0dc      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 4){
 8003092:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003094:	2b04      	cmp	r3, #4
 8003096:	d117      	bne.n	80030c8 <GPIO_Deactivation_Left+0x134>
              HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P23_OFF[0], 1, 1000);
 8003098:	f107 0218 	add.w	r2, r7, #24
 800309c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80030a0:	9300      	str	r3, [sp, #0]
 80030a2:	2301      	movs	r3, #1
 80030a4:	2142      	movs	r1, #66	; 0x42
 80030a6:	486b      	ldr	r0, [pc, #428]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 80030a8:	f004 f840 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 80030ac:	20fa      	movs	r0, #250	; 0xfa
 80030ae:	f002 fe0f 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P23_STOP[0], 1, 1000);
 80030b2:	f107 0214 	add.w	r2, r7, #20
 80030b6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80030ba:	9300      	str	r3, [sp, #0]
 80030bc:	2301      	movs	r3, #1
 80030be:	2142      	movs	r1, #66	; 0x42
 80030c0:	4864      	ldr	r0, [pc, #400]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 80030c2:	f004 f833 	bl	800712c <HAL_I2C_Master_Transmit>
}
 80030c6:	e0c1      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 5){
 80030c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030ca:	2b05      	cmp	r3, #5
 80030cc:	d117      	bne.n	80030fe <GPIO_Deactivation_Left+0x16a>
              HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P45_OFF[0], 1, 1000);
 80030ce:	f107 0210 	add.w	r2, r7, #16
 80030d2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80030d6:	9300      	str	r3, [sp, #0]
 80030d8:	2301      	movs	r3, #1
 80030da:	2142      	movs	r1, #66	; 0x42
 80030dc:	485d      	ldr	r0, [pc, #372]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 80030de:	f004 f825 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 80030e2:	20fa      	movs	r0, #250	; 0xfa
 80030e4:	f002 fdf4 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c3, (0x21<<1), &P45_STOP[0], 1, 1000);
 80030e8:	f107 020c 	add.w	r2, r7, #12
 80030ec:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80030f0:	9300      	str	r3, [sp, #0]
 80030f2:	2301      	movs	r3, #1
 80030f4:	2142      	movs	r1, #66	; 0x42
 80030f6:	4857      	ldr	r0, [pc, #348]	; (8003254 <GPIO_Deactivation_Left+0x2c0>)
 80030f8:	f004 f818 	bl	800712c <HAL_I2C_Master_Transmit>
}
 80030fc:	e0a6      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 6){
 80030fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003100:	2b06      	cmp	r3, #6
 8003102:	d117      	bne.n	8003134 <GPIO_Deactivation_Left+0x1a0>
              HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P01_OFF[0], 1, 1000);
 8003104:	f107 0220 	add.w	r2, r7, #32
 8003108:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800310c:	9300      	str	r3, [sp, #0]
 800310e:	2301      	movs	r3, #1
 8003110:	2140      	movs	r1, #64	; 0x40
 8003112:	4851      	ldr	r0, [pc, #324]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 8003114:	f004 f80a 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8003118:	20fa      	movs	r0, #250	; 0xfa
 800311a:	f002 fdd9 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P01_STOP[0], 1, 1000);
 800311e:	f107 021c 	add.w	r2, r7, #28
 8003122:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003126:	9300      	str	r3, [sp, #0]
 8003128:	2301      	movs	r3, #1
 800312a:	2140      	movs	r1, #64	; 0x40
 800312c:	484a      	ldr	r0, [pc, #296]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 800312e:	f003 fffd 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8003132:	e08b      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 7){
 8003134:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003136:	2b07      	cmp	r3, #7
 8003138:	d117      	bne.n	800316a <GPIO_Deactivation_Left+0x1d6>
              HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P23_OFF[0], 1, 1000);
 800313a:	f107 0218 	add.w	r2, r7, #24
 800313e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003142:	9300      	str	r3, [sp, #0]
 8003144:	2301      	movs	r3, #1
 8003146:	2140      	movs	r1, #64	; 0x40
 8003148:	4843      	ldr	r0, [pc, #268]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 800314a:	f003 ffef 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 800314e:	20fa      	movs	r0, #250	; 0xfa
 8003150:	f002 fdbe 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P23_STOP[0], 1, 1000);
 8003154:	f107 0214 	add.w	r2, r7, #20
 8003158:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800315c:	9300      	str	r3, [sp, #0]
 800315e:	2301      	movs	r3, #1
 8003160:	2140      	movs	r1, #64	; 0x40
 8003162:	483d      	ldr	r0, [pc, #244]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 8003164:	f003 ffe2 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8003168:	e070      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 8){
 800316a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800316c:	2b08      	cmp	r3, #8
 800316e:	d117      	bne.n	80031a0 <GPIO_Deactivation_Left+0x20c>
              HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P45_OFF[0], 1, 1000);
 8003170:	f107 0210 	add.w	r2, r7, #16
 8003174:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003178:	9300      	str	r3, [sp, #0]
 800317a:	2301      	movs	r3, #1
 800317c:	2140      	movs	r1, #64	; 0x40
 800317e:	4836      	ldr	r0, [pc, #216]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 8003180:	f003 ffd4 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8003184:	20fa      	movs	r0, #250	; 0xfa
 8003186:	f002 fda3 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c4, (0x20<<1), &P45_STOP[0], 1, 1000);
 800318a:	f107 020c 	add.w	r2, r7, #12
 800318e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003192:	9300      	str	r3, [sp, #0]
 8003194:	2301      	movs	r3, #1
 8003196:	2140      	movs	r1, #64	; 0x40
 8003198:	482f      	ldr	r0, [pc, #188]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 800319a:	f003 ffc7 	bl	800712c <HAL_I2C_Master_Transmit>
}
 800319e:	e055      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 9){
 80031a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031a2:	2b09      	cmp	r3, #9
 80031a4:	d117      	bne.n	80031d6 <GPIO_Deactivation_Left+0x242>
              HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P01_OFF[0], 1, 1000);
 80031a6:	f107 0220 	add.w	r2, r7, #32
 80031aa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80031ae:	9300      	str	r3, [sp, #0]
 80031b0:	2301      	movs	r3, #1
 80031b2:	2142      	movs	r1, #66	; 0x42
 80031b4:	4828      	ldr	r0, [pc, #160]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 80031b6:	f003 ffb9 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 80031ba:	20fa      	movs	r0, #250	; 0xfa
 80031bc:	f002 fd88 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P01_STOP[0], 1, 1000);
 80031c0:	f107 021c 	add.w	r2, r7, #28
 80031c4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80031c8:	9300      	str	r3, [sp, #0]
 80031ca:	2301      	movs	r3, #1
 80031cc:	2142      	movs	r1, #66	; 0x42
 80031ce:	4822      	ldr	r0, [pc, #136]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 80031d0:	f003 ffac 	bl	800712c <HAL_I2C_Master_Transmit>
}
 80031d4:	e03a      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 10){
 80031d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031d8:	2b0a      	cmp	r3, #10
 80031da:	d117      	bne.n	800320c <GPIO_Deactivation_Left+0x278>
              HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P23_OFF[0], 1, 1000);
 80031dc:	f107 0218 	add.w	r2, r7, #24
 80031e0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80031e4:	9300      	str	r3, [sp, #0]
 80031e6:	2301      	movs	r3, #1
 80031e8:	2142      	movs	r1, #66	; 0x42
 80031ea:	481b      	ldr	r0, [pc, #108]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 80031ec:	f003 ff9e 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 80031f0:	20fa      	movs	r0, #250	; 0xfa
 80031f2:	f002 fd6d 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P23_STOP[0], 1, 1000);
 80031f6:	f107 0214 	add.w	r2, r7, #20
 80031fa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80031fe:	9300      	str	r3, [sp, #0]
 8003200:	2301      	movs	r3, #1
 8003202:	2142      	movs	r1, #66	; 0x42
 8003204:	4814      	ldr	r0, [pc, #80]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 8003206:	f003 ff91 	bl	800712c <HAL_I2C_Master_Transmit>
}
 800320a:	e01f      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num == 11){
 800320c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800320e:	2b0b      	cmp	r3, #11
 8003210:	d117      	bne.n	8003242 <GPIO_Deactivation_Left+0x2ae>
              HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P45_OFF[0], 1, 1000);
 8003212:	f107 0210 	add.w	r2, r7, #16
 8003216:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800321a:	9300      	str	r3, [sp, #0]
 800321c:	2301      	movs	r3, #1
 800321e:	2142      	movs	r1, #66	; 0x42
 8003220:	480d      	ldr	r0, [pc, #52]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 8003222:	f003 ff83 	bl	800712c <HAL_I2C_Master_Transmit>
              HAL_Delay(DCDelay);
 8003226:	20fa      	movs	r0, #250	; 0xfa
 8003228:	f002 fd52 	bl	8005cd0 <HAL_Delay>
              HAL_I2C_Master_Transmit(&hi2c4, (0x21<<1), &P45_STOP[0], 1, 1000);
 800322c:	f107 020c 	add.w	r2, r7, #12
 8003230:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003234:	9300      	str	r3, [sp, #0]
 8003236:	2301      	movs	r3, #1
 8003238:	2142      	movs	r1, #66	; 0x42
 800323a:	4807      	ldr	r0, [pc, #28]	; (8003258 <GPIO_Deactivation_Left+0x2c4>)
 800323c:	f003 ff76 	bl	800712c <HAL_I2C_Master_Transmit>
}
 8003240:	e004      	b.n	800324c <GPIO_Deactivation_Left+0x2b8>
          } else if (note_num > 11){
 8003242:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003244:	2b0b      	cmp	r3, #11
 8003246:	dd01      	ble.n	800324c <GPIO_Deactivation_Left+0x2b8>
              stopSpeaker();
 8003248:	f7fd ffbc 	bl	80011c4 <stopSpeaker>
}
 800324c:	bf00      	nop
 800324e:	3728      	adds	r7, #40	; 0x28
 8003250:	46bd      	mov	sp, r7
 8003252:	bd80      	pop	{r7, pc}
 8003254:	2000055c 	.word	0x2000055c
 8003258:	200005b0 	.word	0x200005b0

0800325c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800325c:	b580      	push	{r7, lr}
 800325e:	b086      	sub	sp, #24
 8003260:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003262:	f002 fcc0 	bl	8005be6 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003266:	f000 f931 	bl	80034cc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800326a:	f000 fda5 	bl	8003db8 <MX_GPIO_Init>
  MX_DMA_Init();
 800326e:	f000 fd71 	bl	8003d54 <MX_DMA_Init>
  MX_USART2_UART_Init();
 8003272:	f000 fcd7 	bl	8003c24 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 8003276:	f000 fd21 	bl	8003cbc <MX_USART3_UART_Init>
  MX_TIM5_Init();
 800327a:	f000 fc43 	bl	8003b04 <MX_TIM5_Init>
  MX_TIM2_Init();
 800327e:	f000 fb49 	bl	8003914 <MX_TIM2_Init>
  MX_TIM3_Init();
 8003282:	f000 fb95 	bl	80039b0 <MX_TIM3_Init>
  MX_TIM4_Init();
 8003286:	f000 fbed 	bl	8003a64 <MX_TIM4_Init>
  MX_I2C1_Init();
 800328a:	f000 f9c7 	bl	800361c <MX_I2C1_Init>
  MX_I2C2_Init();
 800328e:	f000 fa05 	bl	800369c <MX_I2C2_Init>
  MX_I2C3_Init();
 8003292:	f000 fa43 	bl	800371c <MX_I2C3_Init>
  MX_I2C4_Init();
 8003296:	f000 fa81 	bl	800379c <MX_I2C4_Init>
  MX_SPI1_Init();
 800329a:	f000 fabf 	bl	800381c <MX_SPI1_Init>
  MX_SPI2_Init();
 800329e:	f000 fafb 	bl	8003898 <MX_SPI2_Init>
  MX_CRC_Init();
 80032a2:	f000 f965 	bl	8003570 <MX_CRC_Init>
  MX_DAC1_Init();
 80032a6:	f000 f985 	bl	80035b4 <MX_DAC1_Init>
  MX_TIM7_Init();
 80032aa:	f000 fc85 	bl	8003bb8 <MX_TIM7_Init>
  MX_TouchGFX_Init();
 80032ae:	f00a ff47 	bl	800e140 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 80032b2:	2180      	movs	r1, #128	; 0x80
 80032b4:	487c      	ldr	r0, [pc, #496]	; (80034a8 <main+0x24c>)
 80032b6:	f003 fe6b 	bl	8006f90 <HAL_GPIO_TogglePin>
	HAL_Delay(3000);
 80032ba:	f640 30b8 	movw	r0, #3000	; 0xbb8
 80032be:	f002 fd07 	bl	8005cd0 <HAL_Delay>
	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 80032c2:	2180      	movs	r1, #128	; 0x80
 80032c4:	4878      	ldr	r0, [pc, #480]	; (80034a8 <main+0x24c>)
 80032c6:	f003 fe63 	bl	8006f90 <HAL_GPIO_TogglePin>

	fill_LUT();
 80032ca:	f7fd fe6d 	bl	8000fa8 <fill_LUT>

	HAL_DAC_SetValue(&hdac1, DAC_CHANNEL_1, DAC_ALIGN_12B_R, 0x0);
 80032ce:	2300      	movs	r3, #0
 80032d0:	2200      	movs	r2, #0
 80032d2:	2100      	movs	r1, #0
 80032d4:	4875      	ldr	r0, [pc, #468]	; (80034ac <main+0x250>)
 80032d6:	f003 f812 	bl	80062fe <HAL_DAC_SetValue>
	HAL_DAC_Start(&hdac1, DAC_CHANNEL_1);
 80032da:	2100      	movs	r1, #0
 80032dc:	4873      	ldr	r0, [pc, #460]	; (80034ac <main+0x250>)
 80032de:	f002 ff9f 	bl	8006220 <HAL_DAC_Start>
	stopSpeaker();
 80032e2:	f7fd ff6f 	bl	80011c4 <stopSpeaker>
	HAL_TIM_Base_Start_IT(&htim7);
 80032e6:	4872      	ldr	r0, [pc, #456]	; (80034b0 <main+0x254>)
 80032e8:	f007 fa3e 	bl	800a768 <HAL_TIM_Base_Start_IT>

  Displ_Init(Displ_Orientat_270);		// initialize the display and set the initial display orientation (here is orientaton: 0°) - THIS FUNCTION MUST PRECEED ANY OTHER DISPLAY FUNCTION CALL.
 80032ec:	2003      	movs	r0, #3
 80032ee:	f002 f88d 	bl	800540c <Displ_Init>
   touchgfxSignalVSync();		// asks TouchGFX to start initial display drawing
 80032f2:	f00f fa43 	bl	801277c <touchgfxSignalVSync>
   Displ_BackLight('I');  			// initialize backlight and turn it on at init level
 80032f6:	2049      	movs	r0, #73	; 0x49
 80032f8:	f002 f94a 	bl	8005590 <Displ_BackLight>

  //********************************************************
  // Might need to move this to where ever we start the song
  //********************************************************

  HAL_TIM_PWM_Start(&htim5, TIM_CHANNEL_4);
 80032fc:	210c      	movs	r1, #12
 80032fe:	486d      	ldr	r0, [pc, #436]	; (80034b4 <main+0x258>)
 8003300:	f007 fb28 	bl	800a954 <HAL_TIM_PWM_Start>
  TIM5->CCR4 = 25;
 8003304:	4b6c      	ldr	r3, [pc, #432]	; (80034b8 <main+0x25c>)
 8003306:	2219      	movs	r2, #25
 8003308:	641a      	str	r2, [r3, #64]	; 0x40

  HAL_UART_Receive_IT(&huart3, RX_Buffer, sizeof(RX_Buffer));
 800330a:	2205      	movs	r2, #5
 800330c:	496b      	ldr	r1, [pc, #428]	; (80034bc <main+0x260>)
 800330e:	486c      	ldr	r0, [pc, #432]	; (80034c0 <main+0x264>)
 8003310:	f008 fce8 	bl	800bce4 <HAL_UART_Receive_IT>
  HAL_UART_Transmit_IT(&huart3, TX_Buffer, sizeof(TX_Buffer));
 8003314:	220e      	movs	r2, #14
 8003316:	496b      	ldr	r1, [pc, #428]	; (80034c4 <main+0x268>)
 8003318:	4869      	ldr	r0, [pc, #420]	; (80034c0 <main+0x264>)
 800331a:	f008 fc4f 	bl	800bbbc <HAL_UART_Transmit_IT>
  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_8, 1);
 800331e:	2201      	movs	r2, #1
 8003320:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003324:	4868      	ldr	r0, [pc, #416]	; (80034c8 <main+0x26c>)
 8003326:	f003 fe1b 	bl	8006f60 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_8, 1);*/
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
   int pressed = 0;
 800332a:	2300      	movs	r3, #0
 800332c:	617b      	str	r3, [r7, #20]
   int start = 0;
 800332e:	2300      	movs	r3, #0
 8003330:	613b      	str	r3, [r7, #16]
   int playingSong = 0;
 8003332:	2300      	movs	r3, #0
 8003334:	60fb      	str	r3, [r7, #12]
   int prevTouch = 0;
 8003336:	2300      	movs	r3, #0
 8003338:	60bb      	str	r3, [r7, #8]
   int currentTouch = 0;
 800333a:	2300      	movs	r3, #0
 800333c:	607b      	str	r3, [r7, #4]


  	  GPIO_Activation_Right(11);
 800333e:	200b      	movs	r0, #11
 8003340:	f7ff f9ee 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(11);
 8003344:	200b      	movs	r0, #11
 8003346:	f7ff fcbb 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(10);
 800334a:	200a      	movs	r0, #10
 800334c:	f7ff f9e8 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(10);
 8003350:	200a      	movs	r0, #10
 8003352:	f7ff fcb5 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(9);
 8003356:	2009      	movs	r0, #9
 8003358:	f7ff f9e2 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(9);
 800335c:	2009      	movs	r0, #9
 800335e:	f7ff fcaf 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(8);
 8003362:	2008      	movs	r0, #8
 8003364:	f7ff f9dc 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(8);
 8003368:	2008      	movs	r0, #8
 800336a:	f7ff fca9 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(7);
 800336e:	2007      	movs	r0, #7
 8003370:	f7ff f9d6 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(7);
 8003374:	2007      	movs	r0, #7
 8003376:	f7ff fca3 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(6);
 800337a:	2006      	movs	r0, #6
 800337c:	f7ff f9d0 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(6);
 8003380:	2006      	movs	r0, #6
 8003382:	f7ff fc9d 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(5);
 8003386:	2005      	movs	r0, #5
 8003388:	f7ff f9ca 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(5);
 800338c:	2005      	movs	r0, #5
 800338e:	f7ff fc97 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(4);
 8003392:	2004      	movs	r0, #4
 8003394:	f7ff f9c4 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(4);
 8003398:	2004      	movs	r0, #4
 800339a:	f7ff fc91 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(3);
 800339e:	2003      	movs	r0, #3
 80033a0:	f7ff f9be 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(3);
 80033a4:	2003      	movs	r0, #3
 80033a6:	f7ff fc8b 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(2);
 80033aa:	2002      	movs	r0, #2
 80033ac:	f7ff f9b8 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(2);
 80033b0:	2002      	movs	r0, #2
 80033b2:	f7ff fc85 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(1);
 80033b6:	2001      	movs	r0, #1
 80033b8:	f7ff f9b2 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(1);
 80033bc:	2001      	movs	r0, #1
 80033be:	f7ff fc7f 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(0);
 80033c2:	2000      	movs	r0, #0
 80033c4:	f7ff f9ac 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(0);
 80033c8:	2000      	movs	r0, #0
 80033ca:	f7ff fc79 	bl	8002cc0 <GPIO_Deactivation_Right>


  	  GPIO_Activation_Right(59);
 80033ce:	203b      	movs	r0, #59	; 0x3b
 80033d0:	f7ff f9a6 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(59);
 80033d4:	203b      	movs	r0, #59	; 0x3b
 80033d6:	f7ff fc73 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(58);
 80033da:	203a      	movs	r0, #58	; 0x3a
 80033dc:	f7ff f9a0 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(58);
 80033e0:	203a      	movs	r0, #58	; 0x3a
 80033e2:	f7ff fc6d 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(57);
 80033e6:	2039      	movs	r0, #57	; 0x39
 80033e8:	f7ff f99a 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(57);
 80033ec:	2039      	movs	r0, #57	; 0x39
 80033ee:	f7ff fc67 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(56);
 80033f2:	2038      	movs	r0, #56	; 0x38
 80033f4:	f7ff f994 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(56);
 80033f8:	2038      	movs	r0, #56	; 0x38
 80033fa:	f7ff fc61 	bl	8002cc0 <GPIO_Deactivation_Right>

  	  GPIO_Activation_Right(55);
 80033fe:	2037      	movs	r0, #55	; 0x37
 8003400:	f7ff f98e 	bl	8002720 <GPIO_Activation_Right>
  	  GPIO_Deactivation_Right(55);
 8003404:	2037      	movs	r0, #55	; 0x37
 8003406:	f7ff fc5b 	bl	8002cc0 <GPIO_Deactivation_Right>

  	GPIO_Activation_Left(11);
 800340a:	200b      	movs	r0, #11
 800340c:	f7ff faf2 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(11);
 8003410:	200b      	movs	r0, #11
 8003412:	f7ff fdbf 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(10);
 8003416:	200a      	movs	r0, #10
 8003418:	f7ff faec 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(10);
 800341c:	200a      	movs	r0, #10
 800341e:	f7ff fdb9 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(9);
 8003422:	2009      	movs	r0, #9
 8003424:	f7ff fae6 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(9);
 8003428:	2009      	movs	r0, #9
 800342a:	f7ff fdb3 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(8);
 800342e:	2008      	movs	r0, #8
 8003430:	f7ff fae0 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(8);
 8003434:	2008      	movs	r0, #8
 8003436:	f7ff fdad 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(7);
 800343a:	2007      	movs	r0, #7
 800343c:	f7ff fada 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(7);
 8003440:	2007      	movs	r0, #7
 8003442:	f7ff fda7 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(6);
 8003446:	2006      	movs	r0, #6
 8003448:	f7ff fad4 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(6);
 800344c:	2006      	movs	r0, #6
 800344e:	f7ff fda1 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(5);
 8003452:	2005      	movs	r0, #5
 8003454:	f7ff face 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(5);
 8003458:	2005      	movs	r0, #5
 800345a:	f7ff fd9b 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(4);
 800345e:	2004      	movs	r0, #4
 8003460:	f7ff fac8 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(4);
 8003464:	2004      	movs	r0, #4
 8003466:	f7ff fd95 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(3);
 800346a:	2003      	movs	r0, #3
 800346c:	f7ff fac2 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(3);
 8003470:	2003      	movs	r0, #3
 8003472:	f7ff fd8f 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(2);
 8003476:	2002      	movs	r0, #2
 8003478:	f7ff fabc 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(2);
 800347c:	2002      	movs	r0, #2
 800347e:	f7ff fd89 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(1);
 8003482:	2001      	movs	r0, #1
 8003484:	f7ff fab6 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(1);
 8003488:	2001      	movs	r0, #1
 800348a:	f7ff fd83 	bl	8002f94 <GPIO_Deactivation_Left>

  	GPIO_Activation_Left(0);
 800348e:	2000      	movs	r0, #0
 8003490:	f7ff fab0 	bl	80029f4 <GPIO_Activation_Left>
  	GPIO_Deactivation_Left(0);
 8003494:	2000      	movs	r0, #0
 8003496:	f7ff fd7d 	bl	8002f94 <GPIO_Deactivation_Left>
		  prevTouch = currentTouch;


    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 800349a:	f00a fe59 	bl	800e150 <MX_TouchGFX_Process>
 800349e:	2300      	movs	r3, #0


//}

  /* USER CODE END 3 */
}
 80034a0:	4618      	mov	r0, r3
 80034a2:	3718      	adds	r7, #24
 80034a4:	46bd      	mov	sp, r7
 80034a6:	bd80      	pop	{r7, pc}
 80034a8:	48000400 	.word	0x48000400
 80034ac:	200004a0 	.word	0x200004a0
 80034b0:	200008bc 	.word	0x200008bc
 80034b4:	20000870 	.word	0x20000870
 80034b8:	40000c00 	.word	0x40000c00
 80034bc:	20000a30 	.word	0x20000a30
 80034c0:	2000099c 	.word	0x2000099c
 80034c4:	20000004 	.word	0x20000004
 80034c8:	48001400 	.word	0x48001400

080034cc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80034cc:	b580      	push	{r7, lr}
 80034ce:	b096      	sub	sp, #88	; 0x58
 80034d0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80034d2:	f107 0314 	add.w	r3, r7, #20
 80034d6:	2244      	movs	r2, #68	; 0x44
 80034d8:	2100      	movs	r1, #0
 80034da:	4618      	mov	r0, r3
 80034dc:	f025 fec9 	bl	8029272 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80034e0:	463b      	mov	r3, r7
 80034e2:	2200      	movs	r2, #0
 80034e4:	601a      	str	r2, [r3, #0]
 80034e6:	605a      	str	r2, [r3, #4]
 80034e8:	609a      	str	r2, [r3, #8]
 80034ea:	60da      	str	r2, [r3, #12]
 80034ec:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK)
 80034ee:	2000      	movs	r0, #0
 80034f0:	f004 f9fc 	bl	80078ec <HAL_PWREx_ControlVoltageScaling>
 80034f4:	4603      	mov	r3, r0
 80034f6:	2b00      	cmp	r3, #0
 80034f8:	d001      	beq.n	80034fe <SystemClock_Config+0x32>
  {
    Error_Handler();
 80034fa:	f001 f803 	bl	8004504 <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 80034fe:	2310      	movs	r3, #16
 8003500:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8003502:	2301      	movs	r3, #1
 8003504:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8003506:	2300      	movs	r3, #0
 8003508:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 800350a:	2360      	movs	r3, #96	; 0x60
 800350c:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800350e:	2302      	movs	r3, #2
 8003510:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 8003512:	2301      	movs	r3, #1
 8003514:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 8003516:	2301      	movs	r3, #1
 8003518:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLN = 60;
 800351a:	233c      	movs	r3, #60	; 0x3c
 800351c:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800351e:	2302      	movs	r3, #2
 8003520:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8003522:	2302      	movs	r3, #2
 8003524:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8003526:	2302      	movs	r3, #2
 8003528:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800352a:	f107 0314 	add.w	r3, r7, #20
 800352e:	4618      	mov	r0, r3
 8003530:	f004 fa90 	bl	8007a54 <HAL_RCC_OscConfig>
 8003534:	4603      	mov	r3, r0
 8003536:	2b00      	cmp	r3, #0
 8003538:	d001      	beq.n	800353e <SystemClock_Config+0x72>
  {
    Error_Handler();
 800353a:	f000 ffe3 	bl	8004504 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800353e:	230f      	movs	r3, #15
 8003540:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003542:	2303      	movs	r3, #3
 8003544:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003546:	2300      	movs	r3, #0
 8003548:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800354a:	2300      	movs	r3, #0
 800354c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800354e:	2300      	movs	r3, #0
 8003550:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8003552:	463b      	mov	r3, r7
 8003554:	2105      	movs	r1, #5
 8003556:	4618      	mov	r0, r3
 8003558:	f004 fe96 	bl	8008288 <HAL_RCC_ClockConfig>
 800355c:	4603      	mov	r3, r0
 800355e:	2b00      	cmp	r3, #0
 8003560:	d001      	beq.n	8003566 <SystemClock_Config+0x9a>
  {
    Error_Handler();
 8003562:	f000 ffcf 	bl	8004504 <Error_Handler>
  }
}
 8003566:	bf00      	nop
 8003568:	3758      	adds	r7, #88	; 0x58
 800356a:	46bd      	mov	sp, r7
 800356c:	bd80      	pop	{r7, pc}
	...

08003570 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8003570:	b580      	push	{r7, lr}
 8003572:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8003574:	4b0d      	ldr	r3, [pc, #52]	; (80035ac <MX_CRC_Init+0x3c>)
 8003576:	4a0e      	ldr	r2, [pc, #56]	; (80035b0 <MX_CRC_Init+0x40>)
 8003578:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800357a:	4b0c      	ldr	r3, [pc, #48]	; (80035ac <MX_CRC_Init+0x3c>)
 800357c:	2200      	movs	r2, #0
 800357e:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8003580:	4b0a      	ldr	r3, [pc, #40]	; (80035ac <MX_CRC_Init+0x3c>)
 8003582:	2200      	movs	r2, #0
 8003584:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8003586:	4b09      	ldr	r3, [pc, #36]	; (80035ac <MX_CRC_Init+0x3c>)
 8003588:	2200      	movs	r2, #0
 800358a:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 800358c:	4b07      	ldr	r3, [pc, #28]	; (80035ac <MX_CRC_Init+0x3c>)
 800358e:	2200      	movs	r2, #0
 8003590:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8003592:	4b06      	ldr	r3, [pc, #24]	; (80035ac <MX_CRC_Init+0x3c>)
 8003594:	2201      	movs	r2, #1
 8003596:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8003598:	4804      	ldr	r0, [pc, #16]	; (80035ac <MX_CRC_Init+0x3c>)
 800359a:	f002 fd2d 	bl	8005ff8 <HAL_CRC_Init>
 800359e:	4603      	mov	r3, r0
 80035a0:	2b00      	cmp	r3, #0
 80035a2:	d001      	beq.n	80035a8 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 80035a4:	f000 ffae 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80035a8:	bf00      	nop
 80035aa:	bd80      	pop	{r7, pc}
 80035ac:	2000047c 	.word	0x2000047c
 80035b0:	40023000 	.word	0x40023000

080035b4 <MX_DAC1_Init>:
  * @brief DAC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC1_Init(void)
{
 80035b4:	b580      	push	{r7, lr}
 80035b6:	b08a      	sub	sp, #40	; 0x28
 80035b8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC1_Init 0 */

  /* USER CODE END DAC1_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 80035ba:	463b      	mov	r3, r7
 80035bc:	2228      	movs	r2, #40	; 0x28
 80035be:	2100      	movs	r1, #0
 80035c0:	4618      	mov	r0, r3
 80035c2:	f025 fe56 	bl	8029272 <memset>

  /* USER CODE END DAC1_Init 1 */

  /** DAC Initialization
  */
  hdac1.Instance = DAC1;
 80035c6:	4b13      	ldr	r3, [pc, #76]	; (8003614 <MX_DAC1_Init+0x60>)
 80035c8:	4a13      	ldr	r2, [pc, #76]	; (8003618 <MX_DAC1_Init+0x64>)
 80035ca:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac1) != HAL_OK)
 80035cc:	4811      	ldr	r0, [pc, #68]	; (8003614 <MX_DAC1_Init+0x60>)
 80035ce:	f002 fe05 	bl	80061dc <HAL_DAC_Init>
 80035d2:	4603      	mov	r3, r0
 80035d4:	2b00      	cmp	r3, #0
 80035d6:	d001      	beq.n	80035dc <MX_DAC1_Init+0x28>
  {
    Error_Handler();
 80035d8:	f000 ff94 	bl	8004504 <Error_Handler>
  }

  /** DAC channel OUT1 config
  */
  sConfig.DAC_SampleAndHold = DAC_SAMPLEANDHOLD_DISABLE;
 80035dc:	2300      	movs	r3, #0
 80035de:	607b      	str	r3, [r7, #4]
  sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 80035e0:	2300      	movs	r3, #0
 80035e2:	60bb      	str	r3, [r7, #8]
  sConfig.DAC_HighFrequency = DAC_HIGH_FREQUENCY_INTERFACE_MODE_ABOVE_80MHZ;
 80035e4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80035e8:	603b      	str	r3, [r7, #0]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 80035ea:	2300      	movs	r3, #0
 80035ec:	60fb      	str	r3, [r7, #12]
  sConfig.DAC_ConnectOnChipPeripheral = DAC_CHIPCONNECT_DISABLE;
 80035ee:	2300      	movs	r3, #0
 80035f0:	613b      	str	r3, [r7, #16]
  sConfig.DAC_UserTrimming = DAC_TRIMMING_FACTORY;
 80035f2:	2300      	movs	r3, #0
 80035f4:	617b      	str	r3, [r7, #20]
  if (HAL_DAC_ConfigChannel(&hdac1, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 80035f6:	463b      	mov	r3, r7
 80035f8:	2200      	movs	r2, #0
 80035fa:	4619      	mov	r1, r3
 80035fc:	4805      	ldr	r0, [pc, #20]	; (8003614 <MX_DAC1_Init+0x60>)
 80035fe:	f002 fea3 	bl	8006348 <HAL_DAC_ConfigChannel>
 8003602:	4603      	mov	r3, r0
 8003604:	2b00      	cmp	r3, #0
 8003606:	d001      	beq.n	800360c <MX_DAC1_Init+0x58>
  {
    Error_Handler();
 8003608:	f000 ff7c 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN DAC1_Init 2 */

  /* USER CODE END DAC1_Init 2 */

}
 800360c:	bf00      	nop
 800360e:	3728      	adds	r7, #40	; 0x28
 8003610:	46bd      	mov	sp, r7
 8003612:	bd80      	pop	{r7, pc}
 8003614:	200004a0 	.word	0x200004a0
 8003618:	40007400 	.word	0x40007400

0800361c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 800361c:	b580      	push	{r7, lr}
 800361e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8003620:	4b1b      	ldr	r3, [pc, #108]	; (8003690 <MX_I2C1_Init+0x74>)
 8003622:	4a1c      	ldr	r2, [pc, #112]	; (8003694 <MX_I2C1_Init+0x78>)
 8003624:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x307075B1;
 8003626:	4b1a      	ldr	r3, [pc, #104]	; (8003690 <MX_I2C1_Init+0x74>)
 8003628:	4a1b      	ldr	r2, [pc, #108]	; (8003698 <MX_I2C1_Init+0x7c>)
 800362a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 800362c:	4b18      	ldr	r3, [pc, #96]	; (8003690 <MX_I2C1_Init+0x74>)
 800362e:	2200      	movs	r2, #0
 8003630:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003632:	4b17      	ldr	r3, [pc, #92]	; (8003690 <MX_I2C1_Init+0x74>)
 8003634:	2201      	movs	r2, #1
 8003636:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003638:	4b15      	ldr	r3, [pc, #84]	; (8003690 <MX_I2C1_Init+0x74>)
 800363a:	2200      	movs	r2, #0
 800363c:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 800363e:	4b14      	ldr	r3, [pc, #80]	; (8003690 <MX_I2C1_Init+0x74>)
 8003640:	2200      	movs	r2, #0
 8003642:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8003644:	4b12      	ldr	r3, [pc, #72]	; (8003690 <MX_I2C1_Init+0x74>)
 8003646:	2200      	movs	r2, #0
 8003648:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800364a:	4b11      	ldr	r3, [pc, #68]	; (8003690 <MX_I2C1_Init+0x74>)
 800364c:	2200      	movs	r2, #0
 800364e:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003650:	4b0f      	ldr	r3, [pc, #60]	; (8003690 <MX_I2C1_Init+0x74>)
 8003652:	2200      	movs	r2, #0
 8003654:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8003656:	480e      	ldr	r0, [pc, #56]	; (8003690 <MX_I2C1_Init+0x74>)
 8003658:	f003 fccc 	bl	8006ff4 <HAL_I2C_Init>
 800365c:	4603      	mov	r3, r0
 800365e:	2b00      	cmp	r3, #0
 8003660:	d001      	beq.n	8003666 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8003662:	f000 ff4f 	bl	8004504 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8003666:	2100      	movs	r1, #0
 8003668:	4809      	ldr	r0, [pc, #36]	; (8003690 <MX_I2C1_Init+0x74>)
 800366a:	f004 f887 	bl	800777c <HAL_I2CEx_ConfigAnalogFilter>
 800366e:	4603      	mov	r3, r0
 8003670:	2b00      	cmp	r3, #0
 8003672:	d001      	beq.n	8003678 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8003674:	f000 ff46 	bl	8004504 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8003678:	2100      	movs	r1, #0
 800367a:	4805      	ldr	r0, [pc, #20]	; (8003690 <MX_I2C1_Init+0x74>)
 800367c:	f004 f8c9 	bl	8007812 <HAL_I2CEx_ConfigDigitalFilter>
 8003680:	4603      	mov	r3, r0
 8003682:	2b00      	cmp	r3, #0
 8003684:	d001      	beq.n	800368a <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8003686:	f000 ff3d 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800368a:	bf00      	nop
 800368c:	bd80      	pop	{r7, pc}
 800368e:	bf00      	nop
 8003690:	200004b4 	.word	0x200004b4
 8003694:	40005400 	.word	0x40005400
 8003698:	307075b1 	.word	0x307075b1

0800369c <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 800369c:	b580      	push	{r7, lr}
 800369e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80036a0:	4b1b      	ldr	r3, [pc, #108]	; (8003710 <MX_I2C2_Init+0x74>)
 80036a2:	4a1c      	ldr	r2, [pc, #112]	; (8003714 <MX_I2C2_Init+0x78>)
 80036a4:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x307075B1;
 80036a6:	4b1a      	ldr	r3, [pc, #104]	; (8003710 <MX_I2C2_Init+0x74>)
 80036a8:	4a1b      	ldr	r2, [pc, #108]	; (8003718 <MX_I2C2_Init+0x7c>)
 80036aa:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 80036ac:	4b18      	ldr	r3, [pc, #96]	; (8003710 <MX_I2C2_Init+0x74>)
 80036ae:	2200      	movs	r2, #0
 80036b0:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80036b2:	4b17      	ldr	r3, [pc, #92]	; (8003710 <MX_I2C2_Init+0x74>)
 80036b4:	2201      	movs	r2, #1
 80036b6:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80036b8:	4b15      	ldr	r3, [pc, #84]	; (8003710 <MX_I2C2_Init+0x74>)
 80036ba:	2200      	movs	r2, #0
 80036bc:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 80036be:	4b14      	ldr	r3, [pc, #80]	; (8003710 <MX_I2C2_Init+0x74>)
 80036c0:	2200      	movs	r2, #0
 80036c2:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80036c4:	4b12      	ldr	r3, [pc, #72]	; (8003710 <MX_I2C2_Init+0x74>)
 80036c6:	2200      	movs	r2, #0
 80036c8:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80036ca:	4b11      	ldr	r3, [pc, #68]	; (8003710 <MX_I2C2_Init+0x74>)
 80036cc:	2200      	movs	r2, #0
 80036ce:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80036d0:	4b0f      	ldr	r3, [pc, #60]	; (8003710 <MX_I2C2_Init+0x74>)
 80036d2:	2200      	movs	r2, #0
 80036d4:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 80036d6:	480e      	ldr	r0, [pc, #56]	; (8003710 <MX_I2C2_Init+0x74>)
 80036d8:	f003 fc8c 	bl	8006ff4 <HAL_I2C_Init>
 80036dc:	4603      	mov	r3, r0
 80036de:	2b00      	cmp	r3, #0
 80036e0:	d001      	beq.n	80036e6 <MX_I2C2_Init+0x4a>
  {
    Error_Handler();
 80036e2:	f000 ff0f 	bl	8004504 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80036e6:	2100      	movs	r1, #0
 80036e8:	4809      	ldr	r0, [pc, #36]	; (8003710 <MX_I2C2_Init+0x74>)
 80036ea:	f004 f847 	bl	800777c <HAL_I2CEx_ConfigAnalogFilter>
 80036ee:	4603      	mov	r3, r0
 80036f0:	2b00      	cmp	r3, #0
 80036f2:	d001      	beq.n	80036f8 <MX_I2C2_Init+0x5c>
  {
    Error_Handler();
 80036f4:	f000 ff06 	bl	8004504 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 80036f8:	2100      	movs	r1, #0
 80036fa:	4805      	ldr	r0, [pc, #20]	; (8003710 <MX_I2C2_Init+0x74>)
 80036fc:	f004 f889 	bl	8007812 <HAL_I2CEx_ConfigDigitalFilter>
 8003700:	4603      	mov	r3, r0
 8003702:	2b00      	cmp	r3, #0
 8003704:	d001      	beq.n	800370a <MX_I2C2_Init+0x6e>
  {
    Error_Handler();
 8003706:	f000 fefd 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 800370a:	bf00      	nop
 800370c:	bd80      	pop	{r7, pc}
 800370e:	bf00      	nop
 8003710:	20000508 	.word	0x20000508
 8003714:	40005800 	.word	0x40005800
 8003718:	307075b1 	.word	0x307075b1

0800371c <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 800371c:	b580      	push	{r7, lr}
 800371e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8003720:	4b1b      	ldr	r3, [pc, #108]	; (8003790 <MX_I2C3_Init+0x74>)
 8003722:	4a1c      	ldr	r2, [pc, #112]	; (8003794 <MX_I2C3_Init+0x78>)
 8003724:	601a      	str	r2, [r3, #0]
  hi2c3.Init.Timing = 0x307075B1;
 8003726:	4b1a      	ldr	r3, [pc, #104]	; (8003790 <MX_I2C3_Init+0x74>)
 8003728:	4a1b      	ldr	r2, [pc, #108]	; (8003798 <MX_I2C3_Init+0x7c>)
 800372a:	605a      	str	r2, [r3, #4]
  hi2c3.Init.OwnAddress1 = 0;
 800372c:	4b18      	ldr	r3, [pc, #96]	; (8003790 <MX_I2C3_Init+0x74>)
 800372e:	2200      	movs	r2, #0
 8003730:	609a      	str	r2, [r3, #8]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003732:	4b17      	ldr	r3, [pc, #92]	; (8003790 <MX_I2C3_Init+0x74>)
 8003734:	2201      	movs	r2, #1
 8003736:	60da      	str	r2, [r3, #12]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003738:	4b15      	ldr	r3, [pc, #84]	; (8003790 <MX_I2C3_Init+0x74>)
 800373a:	2200      	movs	r2, #0
 800373c:	611a      	str	r2, [r3, #16]
  hi2c3.Init.OwnAddress2 = 0;
 800373e:	4b14      	ldr	r3, [pc, #80]	; (8003790 <MX_I2C3_Init+0x74>)
 8003740:	2200      	movs	r2, #0
 8003742:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8003744:	4b12      	ldr	r3, [pc, #72]	; (8003790 <MX_I2C3_Init+0x74>)
 8003746:	2200      	movs	r2, #0
 8003748:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800374a:	4b11      	ldr	r3, [pc, #68]	; (8003790 <MX_I2C3_Init+0x74>)
 800374c:	2200      	movs	r2, #0
 800374e:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003750:	4b0f      	ldr	r3, [pc, #60]	; (8003790 <MX_I2C3_Init+0x74>)
 8003752:	2200      	movs	r2, #0
 8003754:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8003756:	480e      	ldr	r0, [pc, #56]	; (8003790 <MX_I2C3_Init+0x74>)
 8003758:	f003 fc4c 	bl	8006ff4 <HAL_I2C_Init>
 800375c:	4603      	mov	r3, r0
 800375e:	2b00      	cmp	r3, #0
 8003760:	d001      	beq.n	8003766 <MX_I2C3_Init+0x4a>
  {
    Error_Handler();
 8003762:	f000 fecf 	bl	8004504 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8003766:	2100      	movs	r1, #0
 8003768:	4809      	ldr	r0, [pc, #36]	; (8003790 <MX_I2C3_Init+0x74>)
 800376a:	f004 f807 	bl	800777c <HAL_I2CEx_ConfigAnalogFilter>
 800376e:	4603      	mov	r3, r0
 8003770:	2b00      	cmp	r3, #0
 8003772:	d001      	beq.n	8003778 <MX_I2C3_Init+0x5c>
  {
    Error_Handler();
 8003774:	f000 fec6 	bl	8004504 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8003778:	2100      	movs	r1, #0
 800377a:	4805      	ldr	r0, [pc, #20]	; (8003790 <MX_I2C3_Init+0x74>)
 800377c:	f004 f849 	bl	8007812 <HAL_I2CEx_ConfigDigitalFilter>
 8003780:	4603      	mov	r3, r0
 8003782:	2b00      	cmp	r3, #0
 8003784:	d001      	beq.n	800378a <MX_I2C3_Init+0x6e>
  {
    Error_Handler();
 8003786:	f000 febd 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 800378a:	bf00      	nop
 800378c:	bd80      	pop	{r7, pc}
 800378e:	bf00      	nop
 8003790:	2000055c 	.word	0x2000055c
 8003794:	40005c00 	.word	0x40005c00
 8003798:	307075b1 	.word	0x307075b1

0800379c <MX_I2C4_Init>:
  * @brief I2C4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C4_Init(void)
{
 800379c:	b580      	push	{r7, lr}
 800379e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C4_Init 0 */

  /* USER CODE BEGIN I2C4_Init 1 */

  /* USER CODE END I2C4_Init 1 */
  hi2c4.Instance = I2C4;
 80037a0:	4b1b      	ldr	r3, [pc, #108]	; (8003810 <MX_I2C4_Init+0x74>)
 80037a2:	4a1c      	ldr	r2, [pc, #112]	; (8003814 <MX_I2C4_Init+0x78>)
 80037a4:	601a      	str	r2, [r3, #0]
  hi2c4.Init.Timing = 0x307075B1;
 80037a6:	4b1a      	ldr	r3, [pc, #104]	; (8003810 <MX_I2C4_Init+0x74>)
 80037a8:	4a1b      	ldr	r2, [pc, #108]	; (8003818 <MX_I2C4_Init+0x7c>)
 80037aa:	605a      	str	r2, [r3, #4]
  hi2c4.Init.OwnAddress1 = 0;
 80037ac:	4b18      	ldr	r3, [pc, #96]	; (8003810 <MX_I2C4_Init+0x74>)
 80037ae:	2200      	movs	r2, #0
 80037b0:	609a      	str	r2, [r3, #8]
  hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80037b2:	4b17      	ldr	r3, [pc, #92]	; (8003810 <MX_I2C4_Init+0x74>)
 80037b4:	2201      	movs	r2, #1
 80037b6:	60da      	str	r2, [r3, #12]
  hi2c4.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80037b8:	4b15      	ldr	r3, [pc, #84]	; (8003810 <MX_I2C4_Init+0x74>)
 80037ba:	2200      	movs	r2, #0
 80037bc:	611a      	str	r2, [r3, #16]
  hi2c4.Init.OwnAddress2 = 0;
 80037be:	4b14      	ldr	r3, [pc, #80]	; (8003810 <MX_I2C4_Init+0x74>)
 80037c0:	2200      	movs	r2, #0
 80037c2:	615a      	str	r2, [r3, #20]
  hi2c4.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80037c4:	4b12      	ldr	r3, [pc, #72]	; (8003810 <MX_I2C4_Init+0x74>)
 80037c6:	2200      	movs	r2, #0
 80037c8:	619a      	str	r2, [r3, #24]
  hi2c4.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80037ca:	4b11      	ldr	r3, [pc, #68]	; (8003810 <MX_I2C4_Init+0x74>)
 80037cc:	2200      	movs	r2, #0
 80037ce:	61da      	str	r2, [r3, #28]
  hi2c4.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80037d0:	4b0f      	ldr	r3, [pc, #60]	; (8003810 <MX_I2C4_Init+0x74>)
 80037d2:	2200      	movs	r2, #0
 80037d4:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c4) != HAL_OK)
 80037d6:	480e      	ldr	r0, [pc, #56]	; (8003810 <MX_I2C4_Init+0x74>)
 80037d8:	f003 fc0c 	bl	8006ff4 <HAL_I2C_Init>
 80037dc:	4603      	mov	r3, r0
 80037de:	2b00      	cmp	r3, #0
 80037e0:	d001      	beq.n	80037e6 <MX_I2C4_Init+0x4a>
  {
    Error_Handler();
 80037e2:	f000 fe8f 	bl	8004504 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c4, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80037e6:	2100      	movs	r1, #0
 80037e8:	4809      	ldr	r0, [pc, #36]	; (8003810 <MX_I2C4_Init+0x74>)
 80037ea:	f003 ffc7 	bl	800777c <HAL_I2CEx_ConfigAnalogFilter>
 80037ee:	4603      	mov	r3, r0
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d001      	beq.n	80037f8 <MX_I2C4_Init+0x5c>
  {
    Error_Handler();
 80037f4:	f000 fe86 	bl	8004504 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c4, 0) != HAL_OK)
 80037f8:	2100      	movs	r1, #0
 80037fa:	4805      	ldr	r0, [pc, #20]	; (8003810 <MX_I2C4_Init+0x74>)
 80037fc:	f004 f809 	bl	8007812 <HAL_I2CEx_ConfigDigitalFilter>
 8003800:	4603      	mov	r3, r0
 8003802:	2b00      	cmp	r3, #0
 8003804:	d001      	beq.n	800380a <MX_I2C4_Init+0x6e>
  {
    Error_Handler();
 8003806:	f000 fe7d 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN I2C4_Init 2 */

  /* USER CODE END I2C4_Init 2 */

}
 800380a:	bf00      	nop
 800380c:	bd80      	pop	{r7, pc}
 800380e:	bf00      	nop
 8003810:	200005b0 	.word	0x200005b0
 8003814:	40008400 	.word	0x40008400
 8003818:	307075b1 	.word	0x307075b1

0800381c <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 800381c:	b580      	push	{r7, lr}
 800381e:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8003820:	4b1b      	ldr	r3, [pc, #108]	; (8003890 <MX_SPI1_Init+0x74>)
 8003822:	4a1c      	ldr	r2, [pc, #112]	; (8003894 <MX_SPI1_Init+0x78>)
 8003824:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8003826:	4b1a      	ldr	r3, [pc, #104]	; (8003890 <MX_SPI1_Init+0x74>)
 8003828:	f44f 7282 	mov.w	r2, #260	; 0x104
 800382c:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800382e:	4b18      	ldr	r3, [pc, #96]	; (8003890 <MX_SPI1_Init+0x74>)
 8003830:	2200      	movs	r2, #0
 8003832:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8003834:	4b16      	ldr	r3, [pc, #88]	; (8003890 <MX_SPI1_Init+0x74>)
 8003836:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 800383a:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800383c:	4b14      	ldr	r3, [pc, #80]	; (8003890 <MX_SPI1_Init+0x74>)
 800383e:	2200      	movs	r2, #0
 8003840:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8003842:	4b13      	ldr	r3, [pc, #76]	; (8003890 <MX_SPI1_Init+0x74>)
 8003844:	2200      	movs	r2, #0
 8003846:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8003848:	4b11      	ldr	r3, [pc, #68]	; (8003890 <MX_SPI1_Init+0x74>)
 800384a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800384e:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8003850:	4b0f      	ldr	r3, [pc, #60]	; (8003890 <MX_SPI1_Init+0x74>)
 8003852:	2200      	movs	r2, #0
 8003854:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8003856:	4b0e      	ldr	r3, [pc, #56]	; (8003890 <MX_SPI1_Init+0x74>)
 8003858:	2200      	movs	r2, #0
 800385a:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800385c:	4b0c      	ldr	r3, [pc, #48]	; (8003890 <MX_SPI1_Init+0x74>)
 800385e:	2200      	movs	r2, #0
 8003860:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8003862:	4b0b      	ldr	r3, [pc, #44]	; (8003890 <MX_SPI1_Init+0x74>)
 8003864:	2200      	movs	r2, #0
 8003866:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 7;
 8003868:	4b09      	ldr	r3, [pc, #36]	; (8003890 <MX_SPI1_Init+0x74>)
 800386a:	2207      	movs	r2, #7
 800386c:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 800386e:	4b08      	ldr	r3, [pc, #32]	; (8003890 <MX_SPI1_Init+0x74>)
 8003870:	2200      	movs	r2, #0
 8003872:	631a      	str	r2, [r3, #48]	; 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8003874:	4b06      	ldr	r3, [pc, #24]	; (8003890 <MX_SPI1_Init+0x74>)
 8003876:	2208      	movs	r2, #8
 8003878:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800387a:	4805      	ldr	r0, [pc, #20]	; (8003890 <MX_SPI1_Init+0x74>)
 800387c:	f005 fcda 	bl	8009234 <HAL_SPI_Init>
 8003880:	4603      	mov	r3, r0
 8003882:	2b00      	cmp	r3, #0
 8003884:	d001      	beq.n	800388a <MX_SPI1_Init+0x6e>
  {
    Error_Handler();
 8003886:	f000 fe3d 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 800388a:	bf00      	nop
 800388c:	bd80      	pop	{r7, pc}
 800388e:	bf00      	nop
 8003890:	20000604 	.word	0x20000604
 8003894:	40013000 	.word	0x40013000

08003898 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8003898:	b580      	push	{r7, lr}
 800389a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 800389c:	4b1b      	ldr	r3, [pc, #108]	; (800390c <MX_SPI2_Init+0x74>)
 800389e:	4a1c      	ldr	r2, [pc, #112]	; (8003910 <MX_SPI2_Init+0x78>)
 80038a0:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80038a2:	4b1a      	ldr	r3, [pc, #104]	; (800390c <MX_SPI2_Init+0x74>)
 80038a4:	f44f 7282 	mov.w	r2, #260	; 0x104
 80038a8:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 80038aa:	4b18      	ldr	r3, [pc, #96]	; (800390c <MX_SPI2_Init+0x74>)
 80038ac:	2200      	movs	r2, #0
 80038ae:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 80038b0:	4b16      	ldr	r3, [pc, #88]	; (800390c <MX_SPI2_Init+0x74>)
 80038b2:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 80038b6:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 80038b8:	4b14      	ldr	r3, [pc, #80]	; (800390c <MX_SPI2_Init+0x74>)
 80038ba:	2200      	movs	r2, #0
 80038bc:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80038be:	4b13      	ldr	r3, [pc, #76]	; (800390c <MX_SPI2_Init+0x74>)
 80038c0:	2200      	movs	r2, #0
 80038c2:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80038c4:	4b11      	ldr	r3, [pc, #68]	; (800390c <MX_SPI2_Init+0x74>)
 80038c6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80038ca:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80038cc:	4b0f      	ldr	r3, [pc, #60]	; (800390c <MX_SPI2_Init+0x74>)
 80038ce:	2200      	movs	r2, #0
 80038d0:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80038d2:	4b0e      	ldr	r3, [pc, #56]	; (800390c <MX_SPI2_Init+0x74>)
 80038d4:	2200      	movs	r2, #0
 80038d6:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80038d8:	4b0c      	ldr	r3, [pc, #48]	; (800390c <MX_SPI2_Init+0x74>)
 80038da:	2200      	movs	r2, #0
 80038dc:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80038de:	4b0b      	ldr	r3, [pc, #44]	; (800390c <MX_SPI2_Init+0x74>)
 80038e0:	2200      	movs	r2, #0
 80038e2:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 7;
 80038e4:	4b09      	ldr	r3, [pc, #36]	; (800390c <MX_SPI2_Init+0x74>)
 80038e6:	2207      	movs	r2, #7
 80038e8:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 80038ea:	4b08      	ldr	r3, [pc, #32]	; (800390c <MX_SPI2_Init+0x74>)
 80038ec:	2200      	movs	r2, #0
 80038ee:	631a      	str	r2, [r3, #48]	; 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 80038f0:	4b06      	ldr	r3, [pc, #24]	; (800390c <MX_SPI2_Init+0x74>)
 80038f2:	2208      	movs	r2, #8
 80038f4:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80038f6:	4805      	ldr	r0, [pc, #20]	; (800390c <MX_SPI2_Init+0x74>)
 80038f8:	f005 fc9c 	bl	8009234 <HAL_SPI_Init>
 80038fc:	4603      	mov	r3, r0
 80038fe:	2b00      	cmp	r3, #0
 8003900:	d001      	beq.n	8003906 <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 8003902:	f000 fdff 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8003906:	bf00      	nop
 8003908:	bd80      	pop	{r7, pc}
 800390a:	bf00      	nop
 800390c:	20000668 	.word	0x20000668
 8003910:	40003800 	.word	0x40003800

08003914 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8003914:	b580      	push	{r7, lr}
 8003916:	b088      	sub	sp, #32
 8003918:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800391a:	f107 0310 	add.w	r3, r7, #16
 800391e:	2200      	movs	r2, #0
 8003920:	601a      	str	r2, [r3, #0]
 8003922:	605a      	str	r2, [r3, #4]
 8003924:	609a      	str	r2, [r3, #8]
 8003926:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003928:	1d3b      	adds	r3, r7, #4
 800392a:	2200      	movs	r2, #0
 800392c:	601a      	str	r2, [r3, #0]
 800392e:	605a      	str	r2, [r3, #4]
 8003930:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8003932:	4b1e      	ldr	r3, [pc, #120]	; (80039ac <MX_TIM2_Init+0x98>)
 8003934:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003938:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 59999;
 800393a:	4b1c      	ldr	r3, [pc, #112]	; (80039ac <MX_TIM2_Init+0x98>)
 800393c:	f64e 225f 	movw	r2, #59999	; 0xea5f
 8003940:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003942:	4b1a      	ldr	r3, [pc, #104]	; (80039ac <MX_TIM2_Init+0x98>)
 8003944:	2200      	movs	r2, #0
 8003946:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8003948:	4b18      	ldr	r3, [pc, #96]	; (80039ac <MX_TIM2_Init+0x98>)
 800394a:	f04f 32ff 	mov.w	r2, #4294967295
 800394e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003950:	4b16      	ldr	r3, [pc, #88]	; (80039ac <MX_TIM2_Init+0x98>)
 8003952:	2200      	movs	r2, #0
 8003954:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003956:	4b15      	ldr	r3, [pc, #84]	; (80039ac <MX_TIM2_Init+0x98>)
 8003958:	2200      	movs	r2, #0
 800395a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800395c:	4813      	ldr	r0, [pc, #76]	; (80039ac <MX_TIM2_Init+0x98>)
 800395e:	f006 fe1b 	bl	800a598 <HAL_TIM_Base_Init>
 8003962:	4603      	mov	r3, r0
 8003964:	2b00      	cmp	r3, #0
 8003966:	d001      	beq.n	800396c <MX_TIM2_Init+0x58>
  {
    Error_Handler();
 8003968:	f000 fdcc 	bl	8004504 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800396c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003970:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8003972:	f107 0310 	add.w	r3, r7, #16
 8003976:	4619      	mov	r1, r3
 8003978:	480c      	ldr	r0, [pc, #48]	; (80039ac <MX_TIM2_Init+0x98>)
 800397a:	f007 fb07 	bl	800af8c <HAL_TIM_ConfigClockSource>
 800397e:	4603      	mov	r3, r0
 8003980:	2b00      	cmp	r3, #0
 8003982:	d001      	beq.n	8003988 <MX_TIM2_Init+0x74>
  {
    Error_Handler();
 8003984:	f000 fdbe 	bl	8004504 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003988:	2300      	movs	r3, #0
 800398a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800398c:	2300      	movs	r3, #0
 800398e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8003990:	1d3b      	adds	r3, r7, #4
 8003992:	4619      	mov	r1, r3
 8003994:	4805      	ldr	r0, [pc, #20]	; (80039ac <MX_TIM2_Init+0x98>)
 8003996:	f008 f81b 	bl	800b9d0 <HAL_TIMEx_MasterConfigSynchronization>
 800399a:	4603      	mov	r3, r0
 800399c:	2b00      	cmp	r3, #0
 800399e:	d001      	beq.n	80039a4 <MX_TIM2_Init+0x90>
  {
    Error_Handler();
 80039a0:	f000 fdb0 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80039a4:	bf00      	nop
 80039a6:	3720      	adds	r7, #32
 80039a8:	46bd      	mov	sp, r7
 80039aa:	bd80      	pop	{r7, pc}
 80039ac:	2000078c 	.word	0x2000078c

080039b0 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80039b0:	b580      	push	{r7, lr}
 80039b2:	b08a      	sub	sp, #40	; 0x28
 80039b4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80039b6:	f107 031c 	add.w	r3, r7, #28
 80039ba:	2200      	movs	r2, #0
 80039bc:	601a      	str	r2, [r3, #0]
 80039be:	605a      	str	r2, [r3, #4]
 80039c0:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80039c2:	463b      	mov	r3, r7
 80039c4:	2200      	movs	r2, #0
 80039c6:	601a      	str	r2, [r3, #0]
 80039c8:	605a      	str	r2, [r3, #4]
 80039ca:	609a      	str	r2, [r3, #8]
 80039cc:	60da      	str	r2, [r3, #12]
 80039ce:	611a      	str	r2, [r3, #16]
 80039d0:	615a      	str	r2, [r3, #20]
 80039d2:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80039d4:	4b21      	ldr	r3, [pc, #132]	; (8003a5c <MX_TIM3_Init+0xac>)
 80039d6:	4a22      	ldr	r2, [pc, #136]	; (8003a60 <MX_TIM3_Init+0xb0>)
 80039d8:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 10000;
 80039da:	4b20      	ldr	r3, [pc, #128]	; (8003a5c <MX_TIM3_Init+0xac>)
 80039dc:	f242 7210 	movw	r2, #10000	; 0x2710
 80039e0:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80039e2:	4b1e      	ldr	r3, [pc, #120]	; (8003a5c <MX_TIM3_Init+0xac>)
 80039e4:	2200      	movs	r2, #0
 80039e6:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100;
 80039e8:	4b1c      	ldr	r3, [pc, #112]	; (8003a5c <MX_TIM3_Init+0xac>)
 80039ea:	2264      	movs	r2, #100	; 0x64
 80039ec:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80039ee:	4b1b      	ldr	r3, [pc, #108]	; (8003a5c <MX_TIM3_Init+0xac>)
 80039f0:	2200      	movs	r2, #0
 80039f2:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80039f4:	4b19      	ldr	r3, [pc, #100]	; (8003a5c <MX_TIM3_Init+0xac>)
 80039f6:	2200      	movs	r2, #0
 80039f8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80039fa:	4818      	ldr	r0, [pc, #96]	; (8003a5c <MX_TIM3_Init+0xac>)
 80039fc:	f006 ff53 	bl	800a8a6 <HAL_TIM_PWM_Init>
 8003a00:	4603      	mov	r3, r0
 8003a02:	2b00      	cmp	r3, #0
 8003a04:	d001      	beq.n	8003a0a <MX_TIM3_Init+0x5a>
  {
    Error_Handler();
 8003a06:	f000 fd7d 	bl	8004504 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003a0a:	2300      	movs	r3, #0
 8003a0c:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003a0e:	2300      	movs	r3, #0
 8003a10:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8003a12:	f107 031c 	add.w	r3, r7, #28
 8003a16:	4619      	mov	r1, r3
 8003a18:	4810      	ldr	r0, [pc, #64]	; (8003a5c <MX_TIM3_Init+0xac>)
 8003a1a:	f007 ffd9 	bl	800b9d0 <HAL_TIMEx_MasterConfigSynchronization>
 8003a1e:	4603      	mov	r3, r0
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	d001      	beq.n	8003a28 <MX_TIM3_Init+0x78>
  {
    Error_Handler();
 8003a24:	f000 fd6e 	bl	8004504 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003a28:	2360      	movs	r3, #96	; 0x60
 8003a2a:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 8003a2c:	2300      	movs	r3, #0
 8003a2e:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8003a30:	2300      	movs	r3, #0
 8003a32:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8003a34:	2300      	movs	r3, #0
 8003a36:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8003a38:	463b      	mov	r3, r7
 8003a3a:	2204      	movs	r2, #4
 8003a3c:	4619      	mov	r1, r3
 8003a3e:	4807      	ldr	r0, [pc, #28]	; (8003a5c <MX_TIM3_Init+0xac>)
 8003a40:	f007 f990 	bl	800ad64 <HAL_TIM_PWM_ConfigChannel>
 8003a44:	4603      	mov	r3, r0
 8003a46:	2b00      	cmp	r3, #0
 8003a48:	d001      	beq.n	8003a4e <MX_TIM3_Init+0x9e>
  {
    Error_Handler();
 8003a4a:	f000 fd5b 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8003a4e:	4803      	ldr	r0, [pc, #12]	; (8003a5c <MX_TIM3_Init+0xac>)
 8003a50:	f001 f958 	bl	8004d04 <HAL_TIM_MspPostInit>

}
 8003a54:	bf00      	nop
 8003a56:	3728      	adds	r7, #40	; 0x28
 8003a58:	46bd      	mov	sp, r7
 8003a5a:	bd80      	pop	{r7, pc}
 8003a5c:	200007d8 	.word	0x200007d8
 8003a60:	40000400 	.word	0x40000400

08003a64 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8003a64:	b580      	push	{r7, lr}
 8003a66:	b088      	sub	sp, #32
 8003a68:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003a6a:	f107 0310 	add.w	r3, r7, #16
 8003a6e:	2200      	movs	r2, #0
 8003a70:	601a      	str	r2, [r3, #0]
 8003a72:	605a      	str	r2, [r3, #4]
 8003a74:	609a      	str	r2, [r3, #8]
 8003a76:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003a78:	1d3b      	adds	r3, r7, #4
 8003a7a:	2200      	movs	r2, #0
 8003a7c:	601a      	str	r2, [r3, #0]
 8003a7e:	605a      	str	r2, [r3, #4]
 8003a80:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8003a82:	4b1e      	ldr	r3, [pc, #120]	; (8003afc <MX_TIM4_Init+0x98>)
 8003a84:	4a1e      	ldr	r2, [pc, #120]	; (8003b00 <MX_TIM4_Init+0x9c>)
 8003a86:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 39999;
 8003a88:	4b1c      	ldr	r3, [pc, #112]	; (8003afc <MX_TIM4_Init+0x98>)
 8003a8a:	f649 423f 	movw	r2, #39999	; 0x9c3f
 8003a8e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003a90:	4b1a      	ldr	r3, [pc, #104]	; (8003afc <MX_TIM4_Init+0x98>)
 8003a92:	2200      	movs	r2, #0
 8003a94:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8003a96:	4b19      	ldr	r3, [pc, #100]	; (8003afc <MX_TIM4_Init+0x98>)
 8003a98:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003a9c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003a9e:	4b17      	ldr	r3, [pc, #92]	; (8003afc <MX_TIM4_Init+0x98>)
 8003aa0:	2200      	movs	r2, #0
 8003aa2:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003aa4:	4b15      	ldr	r3, [pc, #84]	; (8003afc <MX_TIM4_Init+0x98>)
 8003aa6:	2200      	movs	r2, #0
 8003aa8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8003aaa:	4814      	ldr	r0, [pc, #80]	; (8003afc <MX_TIM4_Init+0x98>)
 8003aac:	f006 fd74 	bl	800a598 <HAL_TIM_Base_Init>
 8003ab0:	4603      	mov	r3, r0
 8003ab2:	2b00      	cmp	r3, #0
 8003ab4:	d001      	beq.n	8003aba <MX_TIM4_Init+0x56>
  {
    Error_Handler();
 8003ab6:	f000 fd25 	bl	8004504 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003aba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003abe:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8003ac0:	f107 0310 	add.w	r3, r7, #16
 8003ac4:	4619      	mov	r1, r3
 8003ac6:	480d      	ldr	r0, [pc, #52]	; (8003afc <MX_TIM4_Init+0x98>)
 8003ac8:	f007 fa60 	bl	800af8c <HAL_TIM_ConfigClockSource>
 8003acc:	4603      	mov	r3, r0
 8003ace:	2b00      	cmp	r3, #0
 8003ad0:	d001      	beq.n	8003ad6 <MX_TIM4_Init+0x72>
  {
    Error_Handler();
 8003ad2:	f000 fd17 	bl	8004504 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003ad6:	2300      	movs	r3, #0
 8003ad8:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003ada:	2300      	movs	r3, #0
 8003adc:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8003ade:	1d3b      	adds	r3, r7, #4
 8003ae0:	4619      	mov	r1, r3
 8003ae2:	4806      	ldr	r0, [pc, #24]	; (8003afc <MX_TIM4_Init+0x98>)
 8003ae4:	f007 ff74 	bl	800b9d0 <HAL_TIMEx_MasterConfigSynchronization>
 8003ae8:	4603      	mov	r3, r0
 8003aea:	2b00      	cmp	r3, #0
 8003aec:	d001      	beq.n	8003af2 <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 8003aee:	f000 fd09 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8003af2:	bf00      	nop
 8003af4:	3720      	adds	r7, #32
 8003af6:	46bd      	mov	sp, r7
 8003af8:	bd80      	pop	{r7, pc}
 8003afa:	bf00      	nop
 8003afc:	20000824 	.word	0x20000824
 8003b00:	40000800 	.word	0x40000800

08003b04 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8003b04:	b580      	push	{r7, lr}
 8003b06:	b08a      	sub	sp, #40	; 0x28
 8003b08:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003b0a:	f107 031c 	add.w	r3, r7, #28
 8003b0e:	2200      	movs	r2, #0
 8003b10:	601a      	str	r2, [r3, #0]
 8003b12:	605a      	str	r2, [r3, #4]
 8003b14:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003b16:	463b      	mov	r3, r7
 8003b18:	2200      	movs	r2, #0
 8003b1a:	601a      	str	r2, [r3, #0]
 8003b1c:	605a      	str	r2, [r3, #4]
 8003b1e:	609a      	str	r2, [r3, #8]
 8003b20:	60da      	str	r2, [r3, #12]
 8003b22:	611a      	str	r2, [r3, #16]
 8003b24:	615a      	str	r2, [r3, #20]
 8003b26:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8003b28:	4b21      	ldr	r3, [pc, #132]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003b2a:	4a22      	ldr	r2, [pc, #136]	; (8003bb4 <MX_TIM5_Init+0xb0>)
 8003b2c:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 39;
 8003b2e:	4b20      	ldr	r3, [pc, #128]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003b30:	2227      	movs	r2, #39	; 0x27
 8003b32:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003b34:	4b1e      	ldr	r3, [pc, #120]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003b36:	2200      	movs	r2, #0
 8003b38:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 49;
 8003b3a:	4b1d      	ldr	r3, [pc, #116]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003b3c:	2231      	movs	r2, #49	; 0x31
 8003b3e:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003b40:	4b1b      	ldr	r3, [pc, #108]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003b42:	2200      	movs	r2, #0
 8003b44:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003b46:	4b1a      	ldr	r3, [pc, #104]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003b48:	2200      	movs	r2, #0
 8003b4a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8003b4c:	4818      	ldr	r0, [pc, #96]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003b4e:	f006 feaa 	bl	800a8a6 <HAL_TIM_PWM_Init>
 8003b52:	4603      	mov	r3, r0
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d001      	beq.n	8003b5c <MX_TIM5_Init+0x58>
  {
    Error_Handler();
 8003b58:	f000 fcd4 	bl	8004504 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003b5c:	2300      	movs	r3, #0
 8003b5e:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003b60:	2300      	movs	r3, #0
 8003b62:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8003b64:	f107 031c 	add.w	r3, r7, #28
 8003b68:	4619      	mov	r1, r3
 8003b6a:	4811      	ldr	r0, [pc, #68]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003b6c:	f007 ff30 	bl	800b9d0 <HAL_TIMEx_MasterConfigSynchronization>
 8003b70:	4603      	mov	r3, r0
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	d001      	beq.n	8003b7a <MX_TIM5_Init+0x76>
  {
    Error_Handler();
 8003b76:	f000 fcc5 	bl	8004504 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003b7a:	2360      	movs	r3, #96	; 0x60
 8003b7c:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 8003b7e:	2300      	movs	r3, #0
 8003b80:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8003b82:	2300      	movs	r3, #0
 8003b84:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8003b86:	2300      	movs	r3, #0
 8003b88:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8003b8a:	463b      	mov	r3, r7
 8003b8c:	220c      	movs	r2, #12
 8003b8e:	4619      	mov	r1, r3
 8003b90:	4807      	ldr	r0, [pc, #28]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003b92:	f007 f8e7 	bl	800ad64 <HAL_TIM_PWM_ConfigChannel>
 8003b96:	4603      	mov	r3, r0
 8003b98:	2b00      	cmp	r3, #0
 8003b9a:	d001      	beq.n	8003ba0 <MX_TIM5_Init+0x9c>
  {
    Error_Handler();
 8003b9c:	f000 fcb2 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */
  HAL_TIM_MspPostInit(&htim5);
 8003ba0:	4803      	ldr	r0, [pc, #12]	; (8003bb0 <MX_TIM5_Init+0xac>)
 8003ba2:	f001 f8af 	bl	8004d04 <HAL_TIM_MspPostInit>

}
 8003ba6:	bf00      	nop
 8003ba8:	3728      	adds	r7, #40	; 0x28
 8003baa:	46bd      	mov	sp, r7
 8003bac:	bd80      	pop	{r7, pc}
 8003bae:	bf00      	nop
 8003bb0:	20000870 	.word	0x20000870
 8003bb4:	40000c00 	.word	0x40000c00

08003bb8 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 8003bb8:	b580      	push	{r7, lr}
 8003bba:	b084      	sub	sp, #16
 8003bbc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003bbe:	1d3b      	adds	r3, r7, #4
 8003bc0:	2200      	movs	r2, #0
 8003bc2:	601a      	str	r2, [r3, #0]
 8003bc4:	605a      	str	r2, [r3, #4]
 8003bc6:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 8003bc8:	4b14      	ldr	r3, [pc, #80]	; (8003c1c <MX_TIM7_Init+0x64>)
 8003bca:	4a15      	ldr	r2, [pc, #84]	; (8003c20 <MX_TIM7_Init+0x68>)
 8003bcc:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 12;
 8003bce:	4b13      	ldr	r3, [pc, #76]	; (8003c1c <MX_TIM7_Init+0x64>)
 8003bd0:	220c      	movs	r2, #12
 8003bd2:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003bd4:	4b11      	ldr	r3, [pc, #68]	; (8003c1c <MX_TIM7_Init+0x64>)
 8003bd6:	2200      	movs	r2, #0
 8003bd8:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 90;
 8003bda:	4b10      	ldr	r3, [pc, #64]	; (8003c1c <MX_TIM7_Init+0x64>)
 8003bdc:	225a      	movs	r2, #90	; 0x5a
 8003bde:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003be0:	4b0e      	ldr	r3, [pc, #56]	; (8003c1c <MX_TIM7_Init+0x64>)
 8003be2:	2200      	movs	r2, #0
 8003be4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8003be6:	480d      	ldr	r0, [pc, #52]	; (8003c1c <MX_TIM7_Init+0x64>)
 8003be8:	f006 fcd6 	bl	800a598 <HAL_TIM_Base_Init>
 8003bec:	4603      	mov	r3, r0
 8003bee:	2b00      	cmp	r3, #0
 8003bf0:	d001      	beq.n	8003bf6 <MX_TIM7_Init+0x3e>
  {
    Error_Handler();
 8003bf2:	f000 fc87 	bl	8004504 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003bf6:	2300      	movs	r3, #0
 8003bf8:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003bfa:	2300      	movs	r3, #0
 8003bfc:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8003bfe:	1d3b      	adds	r3, r7, #4
 8003c00:	4619      	mov	r1, r3
 8003c02:	4806      	ldr	r0, [pc, #24]	; (8003c1c <MX_TIM7_Init+0x64>)
 8003c04:	f007 fee4 	bl	800b9d0 <HAL_TIMEx_MasterConfigSynchronization>
 8003c08:	4603      	mov	r3, r0
 8003c0a:	2b00      	cmp	r3, #0
 8003c0c:	d001      	beq.n	8003c12 <MX_TIM7_Init+0x5a>
  {
    Error_Handler();
 8003c0e:	f000 fc79 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 8003c12:	bf00      	nop
 8003c14:	3710      	adds	r7, #16
 8003c16:	46bd      	mov	sp, r7
 8003c18:	bd80      	pop	{r7, pc}
 8003c1a:	bf00      	nop
 8003c1c:	200008bc 	.word	0x200008bc
 8003c20:	40001400 	.word	0x40001400

08003c24 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8003c24:	b580      	push	{r7, lr}
 8003c26:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8003c28:	4b22      	ldr	r3, [pc, #136]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c2a:	4a23      	ldr	r2, [pc, #140]	; (8003cb8 <MX_USART2_UART_Init+0x94>)
 8003c2c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8003c2e:	4b21      	ldr	r3, [pc, #132]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c30:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8003c34:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8003c36:	4b1f      	ldr	r3, [pc, #124]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c38:	2200      	movs	r2, #0
 8003c3a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8003c3c:	4b1d      	ldr	r3, [pc, #116]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c3e:	2200      	movs	r2, #0
 8003c40:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8003c42:	4b1c      	ldr	r3, [pc, #112]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c44:	2200      	movs	r2, #0
 8003c46:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8003c48:	4b1a      	ldr	r3, [pc, #104]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c4a:	220c      	movs	r2, #12
 8003c4c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003c4e:	4b19      	ldr	r3, [pc, #100]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c50:	2200      	movs	r2, #0
 8003c52:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8003c54:	4b17      	ldr	r3, [pc, #92]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c56:	2200      	movs	r2, #0
 8003c58:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8003c5a:	4b16      	ldr	r3, [pc, #88]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c5c:	2200      	movs	r2, #0
 8003c5e:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8003c60:	4b14      	ldr	r3, [pc, #80]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c62:	2200      	movs	r2, #0
 8003c64:	625a      	str	r2, [r3, #36]	; 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8003c66:	4b13      	ldr	r3, [pc, #76]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c68:	2200      	movs	r2, #0
 8003c6a:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8003c6c:	4811      	ldr	r0, [pc, #68]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c6e:	f007 ff55 	bl	800bb1c <HAL_UART_Init>
 8003c72:	4603      	mov	r3, r0
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d001      	beq.n	8003c7c <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 8003c78:	f000 fc44 	bl	8004504 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003c7c:	2100      	movs	r1, #0
 8003c7e:	480d      	ldr	r0, [pc, #52]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c80:	f00a f994 	bl	800dfac <HAL_UARTEx_SetTxFifoThreshold>
 8003c84:	4603      	mov	r3, r0
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	d001      	beq.n	8003c8e <MX_USART2_UART_Init+0x6a>
  {
    Error_Handler();
 8003c8a:	f000 fc3b 	bl	8004504 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003c8e:	2100      	movs	r1, #0
 8003c90:	4808      	ldr	r0, [pc, #32]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003c92:	f00a f9c9 	bl	800e028 <HAL_UARTEx_SetRxFifoThreshold>
 8003c96:	4603      	mov	r3, r0
 8003c98:	2b00      	cmp	r3, #0
 8003c9a:	d001      	beq.n	8003ca0 <MX_USART2_UART_Init+0x7c>
  {
    Error_Handler();
 8003c9c:	f000 fc32 	bl	8004504 <Error_Handler>
  }
  if (HAL_UARTEx_EnableFifoMode(&huart2) != HAL_OK)
 8003ca0:	4804      	ldr	r0, [pc, #16]	; (8003cb4 <MX_USART2_UART_Init+0x90>)
 8003ca2:	f00a f90f 	bl	800dec4 <HAL_UARTEx_EnableFifoMode>
 8003ca6:	4603      	mov	r3, r0
 8003ca8:	2b00      	cmp	r3, #0
 8003caa:	d001      	beq.n	8003cb0 <MX_USART2_UART_Init+0x8c>
  {
    Error_Handler();
 8003cac:	f000 fc2a 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8003cb0:	bf00      	nop
 8003cb2:	bd80      	pop	{r7, pc}
 8003cb4:	20000908 	.word	0x20000908
 8003cb8:	40004400 	.word	0x40004400

08003cbc <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8003cbc:	b580      	push	{r7, lr}
 8003cbe:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8003cc0:	4b22      	ldr	r3, [pc, #136]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003cc2:	4a23      	ldr	r2, [pc, #140]	; (8003d50 <MX_USART3_UART_Init+0x94>)
 8003cc4:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 9600;
 8003cc6:	4b21      	ldr	r3, [pc, #132]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003cc8:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8003ccc:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8003cce:	4b1f      	ldr	r3, [pc, #124]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003cd0:	2200      	movs	r2, #0
 8003cd2:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8003cd4:	4b1d      	ldr	r3, [pc, #116]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8003cda:	4b1c      	ldr	r3, [pc, #112]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003cdc:	2200      	movs	r2, #0
 8003cde:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8003ce0:	4b1a      	ldr	r3, [pc, #104]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003ce2:	220c      	movs	r2, #12
 8003ce4:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003ce6:	4b19      	ldr	r3, [pc, #100]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003ce8:	2200      	movs	r2, #0
 8003cea:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8003cec:	4b17      	ldr	r3, [pc, #92]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003cee:	2200      	movs	r2, #0
 8003cf0:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8003cf2:	4b16      	ldr	r3, [pc, #88]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003cf4:	2200      	movs	r2, #0
 8003cf6:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8003cf8:	4b14      	ldr	r3, [pc, #80]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003cfa:	2200      	movs	r2, #0
 8003cfc:	625a      	str	r2, [r3, #36]	; 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8003cfe:	4b13      	ldr	r3, [pc, #76]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003d00:	2200      	movs	r2, #0
 8003d02:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8003d04:	4811      	ldr	r0, [pc, #68]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003d06:	f007 ff09 	bl	800bb1c <HAL_UART_Init>
 8003d0a:	4603      	mov	r3, r0
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d001      	beq.n	8003d14 <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
 8003d10:	f000 fbf8 	bl	8004504 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003d14:	2100      	movs	r1, #0
 8003d16:	480d      	ldr	r0, [pc, #52]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003d18:	f00a f948 	bl	800dfac <HAL_UARTEx_SetTxFifoThreshold>
 8003d1c:	4603      	mov	r3, r0
 8003d1e:	2b00      	cmp	r3, #0
 8003d20:	d001      	beq.n	8003d26 <MX_USART3_UART_Init+0x6a>
  {
    Error_Handler();
 8003d22:	f000 fbef 	bl	8004504 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003d26:	2100      	movs	r1, #0
 8003d28:	4808      	ldr	r0, [pc, #32]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003d2a:	f00a f97d 	bl	800e028 <HAL_UARTEx_SetRxFifoThreshold>
 8003d2e:	4603      	mov	r3, r0
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d001      	beq.n	8003d38 <MX_USART3_UART_Init+0x7c>
  {
    Error_Handler();
 8003d34:	f000 fbe6 	bl	8004504 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 8003d38:	4804      	ldr	r0, [pc, #16]	; (8003d4c <MX_USART3_UART_Init+0x90>)
 8003d3a:	f00a f8fe 	bl	800df3a <HAL_UARTEx_DisableFifoMode>
 8003d3e:	4603      	mov	r3, r0
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d001      	beq.n	8003d48 <MX_USART3_UART_Init+0x8c>
  {
    Error_Handler();
 8003d44:	f000 fbde 	bl	8004504 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8003d48:	bf00      	nop
 8003d4a:	bd80      	pop	{r7, pc}
 8003d4c:	2000099c 	.word	0x2000099c
 8003d50:	40004800 	.word	0x40004800

08003d54 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8003d54:	b580      	push	{r7, lr}
 8003d56:	b082      	sub	sp, #8
 8003d58:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMAMUX1_CLK_ENABLE();
 8003d5a:	4b16      	ldr	r3, [pc, #88]	; (8003db4 <MX_DMA_Init+0x60>)
 8003d5c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003d5e:	4a15      	ldr	r2, [pc, #84]	; (8003db4 <MX_DMA_Init+0x60>)
 8003d60:	f043 0304 	orr.w	r3, r3, #4
 8003d64:	6493      	str	r3, [r2, #72]	; 0x48
 8003d66:	4b13      	ldr	r3, [pc, #76]	; (8003db4 <MX_DMA_Init+0x60>)
 8003d68:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003d6a:	f003 0304 	and.w	r3, r3, #4
 8003d6e:	607b      	str	r3, [r7, #4]
 8003d70:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA1_CLK_ENABLE();
 8003d72:	4b10      	ldr	r3, [pc, #64]	; (8003db4 <MX_DMA_Init+0x60>)
 8003d74:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003d76:	4a0f      	ldr	r2, [pc, #60]	; (8003db4 <MX_DMA_Init+0x60>)
 8003d78:	f043 0301 	orr.w	r3, r3, #1
 8003d7c:	6493      	str	r3, [r2, #72]	; 0x48
 8003d7e:	4b0d      	ldr	r3, [pc, #52]	; (8003db4 <MX_DMA_Init+0x60>)
 8003d80:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003d82:	f003 0301 	and.w	r3, r3, #1
 8003d86:	603b      	str	r3, [r7, #0]
 8003d88:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8003d8a:	2200      	movs	r2, #0
 8003d8c:	2100      	movs	r1, #0
 8003d8e:	200b      	movs	r0, #11
 8003d90:	f002 f8df 	bl	8005f52 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8003d94:	200b      	movs	r0, #11
 8003d96:	f002 f8f8 	bl	8005f8a <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 8003d9a:	2200      	movs	r2, #0
 8003d9c:	2100      	movs	r1, #0
 8003d9e:	200c      	movs	r0, #12
 8003da0:	f002 f8d7 	bl	8005f52 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 8003da4:	200c      	movs	r0, #12
 8003da6:	f002 f8f0 	bl	8005f8a <HAL_NVIC_EnableIRQ>

}
 8003daa:	bf00      	nop
 8003dac:	3708      	adds	r7, #8
 8003dae:	46bd      	mov	sp, r7
 8003db0:	bd80      	pop	{r7, pc}
 8003db2:	bf00      	nop
 8003db4:	40021000 	.word	0x40021000

08003db8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8003db8:	b580      	push	{r7, lr}
 8003dba:	b08e      	sub	sp, #56	; 0x38
 8003dbc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003dbe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003dc2:	2200      	movs	r2, #0
 8003dc4:	601a      	str	r2, [r3, #0]
 8003dc6:	605a      	str	r2, [r3, #4]
 8003dc8:	609a      	str	r2, [r3, #8]
 8003dca:	60da      	str	r2, [r3, #12]
 8003dcc:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8003dce:	4bb5      	ldr	r3, [pc, #724]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003dd0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003dd2:	4ab4      	ldr	r2, [pc, #720]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003dd4:	f043 0310 	orr.w	r3, r3, #16
 8003dd8:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003dda:	4bb2      	ldr	r3, [pc, #712]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003ddc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003dde:	f003 0310 	and.w	r3, r3, #16
 8003de2:	623b      	str	r3, [r7, #32]
 8003de4:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003de6:	4baf      	ldr	r3, [pc, #700]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003de8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003dea:	4aae      	ldr	r2, [pc, #696]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003dec:	f043 0304 	orr.w	r3, r3, #4
 8003df0:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003df2:	4bac      	ldr	r3, [pc, #688]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003df4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003df6:	f003 0304 	and.w	r3, r3, #4
 8003dfa:	61fb      	str	r3, [r7, #28]
 8003dfc:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8003dfe:	4ba9      	ldr	r3, [pc, #676]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e02:	4aa8      	ldr	r2, [pc, #672]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e04:	f043 0320 	orr.w	r3, r3, #32
 8003e08:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003e0a:	4ba6      	ldr	r3, [pc, #664]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e0e:	f003 0320 	and.w	r3, r3, #32
 8003e12:	61bb      	str	r3, [r7, #24]
 8003e14:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8003e16:	4ba3      	ldr	r3, [pc, #652]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e1a:	4aa2      	ldr	r2, [pc, #648]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e1c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003e20:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003e22:	4ba0      	ldr	r3, [pc, #640]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e26:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003e2a:	617b      	str	r3, [r7, #20]
 8003e2c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003e2e:	4b9d      	ldr	r3, [pc, #628]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e32:	4a9c      	ldr	r2, [pc, #624]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e34:	f043 0301 	orr.w	r3, r3, #1
 8003e38:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003e3a:	4b9a      	ldr	r3, [pc, #616]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e3e:	f003 0301 	and.w	r3, r3, #1
 8003e42:	613b      	str	r3, [r7, #16]
 8003e44:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8003e46:	4b97      	ldr	r3, [pc, #604]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e4a:	4a96      	ldr	r2, [pc, #600]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e4c:	f043 0302 	orr.w	r3, r3, #2
 8003e50:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003e52:	4b94      	ldr	r3, [pc, #592]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e56:	f003 0302 	and.w	r3, r3, #2
 8003e5a:	60fb      	str	r3, [r7, #12]
 8003e5c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8003e5e:	4b91      	ldr	r3, [pc, #580]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e60:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e62:	4a90      	ldr	r2, [pc, #576]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e64:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003e68:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003e6a:	4b8e      	ldr	r3, [pc, #568]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e6e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003e72:	60bb      	str	r3, [r7, #8]
 8003e74:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8003e76:	4b8b      	ldr	r3, [pc, #556]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e7a:	4a8a      	ldr	r2, [pc, #552]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e7c:	f043 0308 	orr.w	r3, r3, #8
 8003e80:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003e82:	4b88      	ldr	r3, [pc, #544]	; (80040a4 <MX_GPIO_Init+0x2ec>)
 8003e84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e86:	f003 0308 	and.w	r3, r3, #8
 8003e8a:	607b      	str	r3, [r7, #4]
 8003e8c:	687b      	ldr	r3, [r7, #4]
  HAL_PWREx_EnableVddIO2();
 8003e8e:	f003 fdd1 	bl	8007a34 <HAL_PWREx_EnableVddIO2>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_7|GPIO_PIN_8|DISPL_RST_Pin|DISPL_DC_Pin, GPIO_PIN_RESET);
 8003e92:	2200      	movs	r2, #0
 8003e94:	f44f 41a3 	mov.w	r1, #20864	; 0x5180
 8003e98:	4883      	ldr	r0, [pc, #524]	; (80040a8 <MX_GPIO_Init+0x2f0>)
 8003e9a:	f003 f861 	bl	8006f60 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3, GPIO_PIN_RESET);
 8003e9e:	2200      	movs	r2, #0
 8003ea0:	210f      	movs	r1, #15
 8003ea2:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8003ea6:	f003 f85b 	bl	8006f60 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_10
 8003eaa:	2200      	movs	r2, #0
 8003eac:	f44f 6153 	mov.w	r1, #3376	; 0xd30
 8003eb0:	487e      	ldr	r0, [pc, #504]	; (80040ac <MX_GPIO_Init+0x2f4>)
 8003eb2:	f003 f855 	bl	8006f60 <HAL_GPIO_WritePin>
                          |GPIO_PIN_11, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 8003eb6:	2201      	movs	r2, #1
 8003eb8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8003ebc:	487a      	ldr	r0, [pc, #488]	; (80040a8 <MX_GPIO_Init+0x2f0>)
 8003ebe:	f003 f84f 	bl	8006f60 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_0|GPIO_PIN_6, GPIO_PIN_RESET);
 8003ec2:	2200      	movs	r2, #0
 8003ec4:	2141      	movs	r1, #65	; 0x41
 8003ec6:	487a      	ldr	r0, [pc, #488]	; (80040b0 <MX_GPIO_Init+0x2f8>)
 8003ec8:	f003 f84a 	bl	8006f60 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 8003ecc:	2201      	movs	r2, #1
 8003ece:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003ed2:	4878      	ldr	r0, [pc, #480]	; (80040b4 <MX_GPIO_Init+0x2fc>)
 8003ed4:	f003 f844 	bl	8006f60 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, GPIO_PIN_RESET);
 8003ed8:	2200      	movs	r2, #0
 8003eda:	2180      	movs	r1, #128	; 0x80
 8003edc:	4876      	ldr	r0, [pc, #472]	; (80040b8 <MX_GPIO_Init+0x300>)
 8003ede:	f003 f83f 	bl	8006f60 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PE2 PE3 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8003ee2:	230c      	movs	r3, #12
 8003ee4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003ee6:	2302      	movs	r3, #2
 8003ee8:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003eea:	2300      	movs	r3, #0
 8003eec:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003eee:	2300      	movs	r3, #0
 8003ef0:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF13_SAI1;
 8003ef2:	230d      	movs	r3, #13
 8003ef4:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8003ef6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003efa:	4619      	mov	r1, r3
 8003efc:	486d      	ldr	r0, [pc, #436]	; (80040b4 <MX_GPIO_Init+0x2fc>)
 8003efe:	f002 fe9d 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PF7 PF8 DISPL_RST_Pin */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|DISPL_RST_Pin;
 8003f02:	f44f 538c 	mov.w	r3, #4480	; 0x1180
 8003f06:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003f08:	2301      	movs	r3, #1
 8003f0a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003f0c:	2300      	movs	r3, #0
 8003f0e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003f10:	2300      	movs	r3, #0
 8003f12:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003f14:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003f18:	4619      	mov	r1, r3
 8003f1a:	4863      	ldr	r0, [pc, #396]	; (80040a8 <MX_GPIO_Init+0x2f0>)
 8003f1c:	f002 fe8e 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PC1 */
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 8003f20:	2302      	movs	r3, #2
 8003f22:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 8003f24:	230b      	movs	r3, #11
 8003f26:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003f28:	2300      	movs	r3, #0
 8003f2a:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003f2c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003f30:	4619      	mov	r1, r3
 8003f32:	485e      	ldr	r0, [pc, #376]	; (80040ac <MX_GPIO_Init+0x2f4>)
 8003f34:	f002 fe82 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PA0 PA1 PA2 PA3 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8003f38:	230f      	movs	r3, #15
 8003f3a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003f3c:	2301      	movs	r3, #1
 8003f3e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003f40:	2300      	movs	r3, #0
 8003f42:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003f44:	2300      	movs	r3, #0
 8003f46:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003f48:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003f4c:	4619      	mov	r1, r3
 8003f4e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8003f52:	f002 fe73 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PC4 PC5 PC8 PC10
                           PC11 */
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_10
 8003f56:	f44f 6353 	mov.w	r3, #3376	; 0xd30
 8003f5a:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_11;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003f5c:	2301      	movs	r3, #1
 8003f5e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003f60:	2300      	movs	r3, #0
 8003f62:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003f64:	2300      	movs	r3, #0
 8003f66:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003f68:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003f6c:	4619      	mov	r1, r3
 8003f6e:	484f      	ldr	r0, [pc, #316]	; (80040ac <MX_GPIO_Init+0x2f4>)
 8003f70:	f002 fe64 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB1 */
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 8003f74:	2302      	movs	r3, #2
 8003f76:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 8003f78:	230b      	movs	r3, #11
 8003f7a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003f7c:	2300      	movs	r3, #0
 8003f7e:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003f80:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003f84:	4619      	mov	r1, r3
 8003f86:	484c      	ldr	r0, [pc, #304]	; (80040b8 <MX_GPIO_Init+0x300>)
 8003f88:	f002 fe58 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8003f8c:	2304      	movs	r3, #4
 8003f8e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8003f90:	2303      	movs	r3, #3
 8003f92:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003f94:	2300      	movs	r3, #0
 8003f96:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003f98:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003f9c:	4619      	mov	r1, r3
 8003f9e:	4846      	ldr	r0, [pc, #280]	; (80040b8 <MX_GPIO_Init+0x300>)
 8003fa0:	f002 fe4c 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : DISPL_CS_Pin DISPL_DC_Pin */
  GPIO_InitStruct.Pin = DISPL_CS_Pin|DISPL_DC_Pin;
 8003fa4:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 8003fa8:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003faa:	2301      	movs	r3, #1
 8003fac:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003fae:	2300      	movs	r3, #0
 8003fb0:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003fb2:	2302      	movs	r3, #2
 8003fb4:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003fb6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003fba:	4619      	mov	r1, r3
 8003fbc:	483a      	ldr	r0, [pc, #232]	; (80040a8 <MX_GPIO_Init+0x2f0>)
 8003fbe:	f002 fe3d 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PG0 PG6 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_6;
 8003fc2:	2341      	movs	r3, #65	; 0x41
 8003fc4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003fc6:	2301      	movs	r3, #1
 8003fc8:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003fca:	2300      	movs	r3, #0
 8003fcc:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003fce:	2300      	movs	r3, #0
 8003fd0:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003fd2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003fd6:	4619      	mov	r1, r3
 8003fd8:	4835      	ldr	r0, [pc, #212]	; (80040b0 <MX_GPIO_Init+0x2f8>)
 8003fda:	f002 fe2f 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8003fde:	2302      	movs	r3, #2
 8003fe0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8003fe2:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8003fe6:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003fe8:	2301      	movs	r3, #1
 8003fea:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8003fec:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003ff0:	4619      	mov	r1, r3
 8003ff2:	482f      	ldr	r0, [pc, #188]	; (80040b0 <MX_GPIO_Init+0x2f8>)
 8003ff4:	f002 fe22 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PE7 PE8 PE9 PE10
                           PE12 PE13 */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8003ff8:	f44f 535e 	mov.w	r3, #14208	; 0x3780
 8003ffc:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_12|GPIO_PIN_13;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003ffe:	2302      	movs	r3, #2
 8004000:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004002:	2300      	movs	r3, #0
 8004004:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004006:	2300      	movs	r3, #0
 8004008:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 800400a:	2301      	movs	r3, #1
 800400c:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800400e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004012:	4619      	mov	r1, r3
 8004014:	4827      	ldr	r0, [pc, #156]	; (80040b4 <MX_GPIO_Init+0x2fc>)
 8004016:	f002 fe11 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = TOUCH_CS_Pin;
 800401a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800401e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004020:	2301      	movs	r3, #1
 8004022:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004024:	2300      	movs	r3, #0
 8004026:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8004028:	2302      	movs	r3, #2
 800402a:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(TOUCH_CS_GPIO_Port, &GPIO_InitStruct);
 800402c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004030:	4619      	mov	r1, r3
 8004032:	4820      	ldr	r0, [pc, #128]	; (80040b4 <MX_GPIO_Init+0x2fc>)
 8004034:	f002 fe02 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PE14 PE15 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8004038:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 800403c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800403e:	2302      	movs	r3, #2
 8004040:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004042:	2300      	movs	r3, #0
 8004044:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004046:	2300      	movs	r3, #0
 8004048:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF3_TIM1_COMP1;
 800404a:	2303      	movs	r3, #3
 800404c:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800404e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004052:	4619      	mov	r1, r3
 8004054:	4817      	ldr	r0, [pc, #92]	; (80040b4 <MX_GPIO_Init+0x2fc>)
 8004056:	f002 fdf1 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PB12 PB13 PB15 */
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_15;
 800405a:	f44f 4330 	mov.w	r3, #45056	; 0xb000
 800405e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004060:	2302      	movs	r3, #2
 8004062:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004064:	2300      	movs	r3, #0
 8004066:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004068:	2300      	movs	r3, #0
 800406a:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF13_SAI2;
 800406c:	230d      	movs	r3, #13
 800406e:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004070:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004074:	4619      	mov	r1, r3
 8004076:	4810      	ldr	r0, [pc, #64]	; (80040b8 <MX_GPIO_Init+0x300>)
 8004078:	f002 fde0 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB14 */
  GPIO_InitStruct.Pin = GPIO_PIN_14;
 800407c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8004080:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004082:	2302      	movs	r3, #2
 8004084:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004086:	2300      	movs	r3, #0
 8004088:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800408a:	2300      	movs	r3, #0
 800408c:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF14_TIM15;
 800408e:	230e      	movs	r3, #14
 8004090:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004092:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004096:	4619      	mov	r1, r3
 8004098:	4807      	ldr	r0, [pc, #28]	; (80040b8 <MX_GPIO_Init+0x300>)
 800409a:	f002 fdcf 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PG7 PG8 */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
 800409e:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80040a2:	e00b      	b.n	80040bc <MX_GPIO_Init+0x304>
 80040a4:	40021000 	.word	0x40021000
 80040a8:	48001400 	.word	0x48001400
 80040ac:	48000800 	.word	0x48000800
 80040b0:	48001800 	.word	0x48001800
 80040b4:	48001000 	.word	0x48001000
 80040b8:	48000400 	.word	0x48000400
 80040bc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80040be:	2302      	movs	r3, #2
 80040c0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80040c2:	2300      	movs	r3, #0
 80040c4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80040c6:	2303      	movs	r3, #3
 80040c8:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 80040ca:	2308      	movs	r3, #8
 80040cc:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80040ce:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80040d2:	4619      	mov	r1, r3
 80040d4:	484f      	ldr	r0, [pc, #316]	; (8004214 <MX_GPIO_Init+0x45c>)
 80040d6:	f002 fdb1 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PC6 */
  GPIO_InitStruct.Pin = GPIO_PIN_6;
 80040da:	2340      	movs	r3, #64	; 0x40
 80040dc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80040de:	2302      	movs	r3, #2
 80040e0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80040e2:	2300      	movs	r3, #0
 80040e4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80040e6:	2300      	movs	r3, #0
 80040e8:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF13_SAI2;
 80040ea:	230d      	movs	r3, #13
 80040ec:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80040ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80040f2:	4619      	mov	r1, r3
 80040f4:	4848      	ldr	r0, [pc, #288]	; (8004218 <MX_GPIO_Init+0x460>)
 80040f6:	f002 fda1 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PC9 PC12 */
  GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_12;
 80040fa:	f44f 5390 	mov.w	r3, #4608	; 0x1200
 80040fe:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004100:	2302      	movs	r3, #2
 8004102:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004104:	2300      	movs	r3, #0
 8004106:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004108:	2303      	movs	r3, #3
 800410a:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF12_SDMMC1;
 800410c:	230c      	movs	r3, #12
 800410e:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8004110:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004114:	4619      	mov	r1, r3
 8004116:	4840      	ldr	r0, [pc, #256]	; (8004218 <MX_GPIO_Init+0x460>)
 8004118:	f002 fd90 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PA8 PA10 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_10;
 800411c:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8004120:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004122:	2302      	movs	r3, #2
 8004124:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004126:	2300      	movs	r3, #0
 8004128:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800412a:	2303      	movs	r3, #3
 800412c:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 800412e:	230a      	movs	r3, #10
 8004130:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004132:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004136:	4619      	mov	r1, r3
 8004138:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800413c:	f002 fd7e 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PA9 */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
 8004140:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004144:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8004146:	2300      	movs	r3, #0
 8004148:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800414a:	2300      	movs	r3, #0
 800414c:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800414e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004152:	4619      	mov	r1, r3
 8004154:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8004158:	f002 fd70 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PD0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800415c:	2301      	movs	r3, #1
 800415e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004160:	2302      	movs	r3, #2
 8004162:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004164:	2300      	movs	r3, #0
 8004166:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004168:	2303      	movs	r3, #3
 800416a:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 800416c:	2309      	movs	r3, #9
 800416e:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8004170:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004174:	4619      	mov	r1, r3
 8004176:	4829      	ldr	r0, [pc, #164]	; (800421c <MX_GPIO_Init+0x464>)
 8004178:	f002 fd60 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PD2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800417c:	2304      	movs	r3, #4
 800417e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004180:	2302      	movs	r3, #2
 8004182:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004184:	2300      	movs	r3, #0
 8004186:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004188:	2303      	movs	r3, #3
 800418a:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF12_SDMMC1;
 800418c:	230c      	movs	r3, #12
 800418e:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8004190:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004194:	4619      	mov	r1, r3
 8004196:	4821      	ldr	r0, [pc, #132]	; (800421c <MX_GPIO_Init+0x464>)
 8004198:	f002 fd50 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PG9 PG10 */
  GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800419c:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80041a0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80041a2:	2302      	movs	r3, #2
 80041a4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80041a6:	2300      	movs	r3, #0
 80041a8:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80041aa:	2303      	movs	r3, #3
 80041ac:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80041ae:	2307      	movs	r3, #7
 80041b0:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80041b2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80041b6:	4619      	mov	r1, r3
 80041b8:	4816      	ldr	r0, [pc, #88]	; (8004214 <MX_GPIO_Init+0x45c>)
 80041ba:	f002 fd3f 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80041be:	2308      	movs	r3, #8
 80041c0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80041c2:	2302      	movs	r3, #2
 80041c4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80041c6:	2300      	movs	r3, #0
 80041c8:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80041ca:	2303      	movs	r3, #3
 80041cc:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 80041ce:	2306      	movs	r3, #6
 80041d0:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80041d2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80041d6:	4619      	mov	r1, r3
 80041d8:	4811      	ldr	r0, [pc, #68]	; (8004220 <MX_GPIO_Init+0x468>)
 80041da:	f002 fd2f 	bl	8006c3c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 80041de:	2380      	movs	r3, #128	; 0x80
 80041e0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80041e2:	2301      	movs	r3, #1
 80041e4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80041e6:	2300      	movs	r3, #0
 80041e8:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80041ea:	2300      	movs	r3, #0
 80041ec:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80041ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80041f2:	4619      	mov	r1, r3
 80041f4:	480a      	ldr	r0, [pc, #40]	; (8004220 <MX_GPIO_Init+0x468>)
 80041f6:	f002 fd21 	bl	8006c3c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 80041fa:	2200      	movs	r2, #0
 80041fc:	2100      	movs	r1, #0
 80041fe:	2007      	movs	r0, #7
 8004200:	f001 fea7 	bl	8005f52 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 8004204:	2007      	movs	r0, #7
 8004206:	f001 fec0 	bl	8005f8a <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800420a:	bf00      	nop
 800420c:	3738      	adds	r7, #56	; 0x38
 800420e:	46bd      	mov	sp, r7
 8004210:	bd80      	pop	{r7, pc}
 8004212:	bf00      	nop
 8004214:	48001800 	.word	0x48001800
 8004218:	48000800 	.word	0x48000800
 800421c:	48000c00 	.word	0x48000c00
 8004220:	48000400 	.word	0x48000400

08004224 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8004224:	b580      	push	{r7, lr}
 8004226:	b086      	sub	sp, #24
 8004228:	af00      	add	r7, sp, #0
 800422a:	6078      	str	r0, [r7, #4]
	//__NOP(); // for debugging
	//Commented out ->Instance
		if (huart->Instance == USART3)
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	681b      	ldr	r3, [r3, #0]
 8004230:	4a97      	ldr	r2, [pc, #604]	; (8004490 <HAL_UART_RxCpltCallback+0x26c>)
 8004232:	4293      	cmp	r3, r2
 8004234:	f040 8157 	bne.w	80044e6 <HAL_UART_RxCpltCallback+0x2c2>
	    {

	        // RX_Buffer[0] = note number
	        // RX_Buffer[1] = start time upper half, RX_Buffer[2] = start time lower half
	        // RX_Buffer[3] = end time upper half, RX_Buffer[4] = end time lower half
	        int noteNum = RX_Buffer[0];
 8004238:	4b96      	ldr	r3, [pc, #600]	; (8004494 <HAL_UART_RxCpltCallback+0x270>)
 800423a:	781b      	ldrb	r3, [r3, #0]
 800423c:	613b      	str	r3, [r7, #16]
	        int start_Time = (RX_Buffer[1] << 8) + RX_Buffer[2];
 800423e:	4b95      	ldr	r3, [pc, #596]	; (8004494 <HAL_UART_RxCpltCallback+0x270>)
 8004240:	785b      	ldrb	r3, [r3, #1]
 8004242:	021b      	lsls	r3, r3, #8
 8004244:	4a93      	ldr	r2, [pc, #588]	; (8004494 <HAL_UART_RxCpltCallback+0x270>)
 8004246:	7892      	ldrb	r2, [r2, #2]
 8004248:	4413      	add	r3, r2
 800424a:	60fb      	str	r3, [r7, #12]
	        int end_Time = (RX_Buffer[3] << 8) + RX_Buffer[4];
 800424c:	4b91      	ldr	r3, [pc, #580]	; (8004494 <HAL_UART_RxCpltCallback+0x270>)
 800424e:	78db      	ldrb	r3, [r3, #3]
 8004250:	021b      	lsls	r3, r3, #8
 8004252:	4a90      	ldr	r2, [pc, #576]	; (8004494 <HAL_UART_RxCpltCallback+0x270>)
 8004254:	7912      	ldrb	r2, [r2, #4]
 8004256:	4413      	add	r3, r2
 8004258:	60bb      	str	r3, [r7, #8]
	        if(noteNum == 1 && start_Time == end_Time){
 800425a:	693b      	ldr	r3, [r7, #16]
 800425c:	2b01      	cmp	r3, #1
 800425e:	d10a      	bne.n	8004276 <HAL_UART_RxCpltCallback+0x52>
 8004260:	68fa      	ldr	r2, [r7, #12]
 8004262:	68bb      	ldr	r3, [r7, #8]
 8004264:	429a      	cmp	r2, r3
 8004266:	d106      	bne.n	8004276 <HAL_UART_RxCpltCallback+0x52>
	        	// Starting to send title
	        	reading_title = 1;
 8004268:	4b8b      	ldr	r3, [pc, #556]	; (8004498 <HAL_UART_RxCpltCallback+0x274>)
 800426a:	2201      	movs	r2, #1
 800426c:	601a      	str	r2, [r3, #0]
	        	title_index = 0;
 800426e:	4b8b      	ldr	r3, [pc, #556]	; (800449c <HAL_UART_RxCpltCallback+0x278>)
 8004270:	2200      	movs	r2, #0
 8004272:	601a      	str	r2, [r3, #0]
 8004274:	e026      	b.n	80042c4 <HAL_UART_RxCpltCallback+0xa0>
	        }
	        else if(noteNum == 2 && start_Time == end_Time){
 8004276:	693b      	ldr	r3, [r7, #16]
 8004278:	2b02      	cmp	r3, #2
 800427a:	d107      	bne.n	800428c <HAL_UART_RxCpltCallback+0x68>
 800427c:	68fa      	ldr	r2, [r7, #12]
 800427e:	68bb      	ldr	r3, [r7, #8]
 8004280:	429a      	cmp	r2, r3
 8004282:	d103      	bne.n	800428c <HAL_UART_RxCpltCallback+0x68>
	        	// Title done, do other stuff
	        	reading_title = 0;
 8004284:	4b84      	ldr	r3, [pc, #528]	; (8004498 <HAL_UART_RxCpltCallback+0x274>)
 8004286:	2200      	movs	r2, #0
 8004288:	601a      	str	r2, [r3, #0]
 800428a:	e01b      	b.n	80042c4 <HAL_UART_RxCpltCallback+0xa0>
	        }
	        else if(reading_title){
 800428c:	4b82      	ldr	r3, [pc, #520]	; (8004498 <HAL_UART_RxCpltCallback+0x274>)
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	2b00      	cmp	r3, #0
 8004292:	d017      	beq.n	80042c4 <HAL_UART_RxCpltCallback+0xa0>
	        	for(int i = 0; i < 5; i++){
 8004294:	2300      	movs	r3, #0
 8004296:	617b      	str	r3, [r7, #20]
 8004298:	e00c      	b.n	80042b4 <HAL_UART_RxCpltCallback+0x90>
	        		midi_titleBuffer[title_index + i] = RX_Buffer[i];
 800429a:	4b80      	ldr	r3, [pc, #512]	; (800449c <HAL_UART_RxCpltCallback+0x278>)
 800429c:	681a      	ldr	r2, [r3, #0]
 800429e:	697b      	ldr	r3, [r7, #20]
 80042a0:	4413      	add	r3, r2
 80042a2:	497c      	ldr	r1, [pc, #496]	; (8004494 <HAL_UART_RxCpltCallback+0x270>)
 80042a4:	697a      	ldr	r2, [r7, #20]
 80042a6:	440a      	add	r2, r1
 80042a8:	7811      	ldrb	r1, [r2, #0]
 80042aa:	4a7d      	ldr	r2, [pc, #500]	; (80044a0 <HAL_UART_RxCpltCallback+0x27c>)
 80042ac:	54d1      	strb	r1, [r2, r3]
	        	for(int i = 0; i < 5; i++){
 80042ae:	697b      	ldr	r3, [r7, #20]
 80042b0:	3301      	adds	r3, #1
 80042b2:	617b      	str	r3, [r7, #20]
 80042b4:	697b      	ldr	r3, [r7, #20]
 80042b6:	2b04      	cmp	r3, #4
 80042b8:	ddef      	ble.n	800429a <HAL_UART_RxCpltCallback+0x76>
	        	}
	        	title_index += 5;
 80042ba:	4b78      	ldr	r3, [pc, #480]	; (800449c <HAL_UART_RxCpltCallback+0x278>)
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	3305      	adds	r3, #5
 80042c0:	4a76      	ldr	r2, [pc, #472]	; (800449c <HAL_UART_RxCpltCallback+0x278>)
 80042c2:	6013      	str	r3, [r2, #0]
	        }
	        // noteNum = 0 and start_Time = end_Time indicates the beginning of a song
	        // noteNum = 255 and start_time = end_Time indicates the end of a song
	        if(noteNum == 3 && start_Time == end_Time){
 80042c4:	693b      	ldr	r3, [r7, #16]
 80042c6:	2b03      	cmp	r3, #3
 80042c8:	d110      	bne.n	80042ec <HAL_UART_RxCpltCallback+0xc8>
 80042ca:	68fa      	ldr	r2, [r7, #12]
 80042cc:	68bb      	ldr	r3, [r7, #8]
 80042ce:	429a      	cmp	r2, r3
 80042d0:	d10c      	bne.n	80042ec <HAL_UART_RxCpltCallback+0xc8>
	        	song_length = 0;
 80042d2:	4b74      	ldr	r3, [pc, #464]	; (80044a4 <HAL_UART_RxCpltCallback+0x280>)
 80042d4:	2200      	movs	r2, #0
 80042d6:	601a      	str	r2, [r3, #0]
	        	note_dataR_len = 0;
 80042d8:	4b73      	ldr	r3, [pc, #460]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 80042da:	2200      	movs	r2, #0
 80042dc:	601a      	str	r2, [r3, #0]
	        	note_dataL_len = 0;
 80042de:	4b73      	ldr	r3, [pc, #460]	; (80044ac <HAL_UART_RxCpltCallback+0x288>)
 80042e0:	2200      	movs	r2, #0
 80042e2:	601a      	str	r2, [r3, #0]
	        	read_notes = 1;
 80042e4:	4b72      	ldr	r3, [pc, #456]	; (80044b0 <HAL_UART_RxCpltCallback+0x28c>)
 80042e6:	2201      	movs	r2, #1
 80042e8:	601a      	str	r2, [r3, #0]
 80042ea:	e0f7      	b.n	80044dc <HAL_UART_RxCpltCallback+0x2b8>
	        }
	        else if (noteNum == 4 && start_Time == end_Time){
 80042ec:	693b      	ldr	r3, [r7, #16]
 80042ee:	2b04      	cmp	r3, #4
 80042f0:	d150      	bne.n	8004394 <HAL_UART_RxCpltCallback+0x170>
 80042f2:	68fa      	ldr	r2, [r7, #12]
 80042f4:	68bb      	ldr	r3, [r7, #8]
 80042f6:	429a      	cmp	r2, r3
 80042f8:	d14c      	bne.n	8004394 <HAL_UART_RxCpltCallback+0x170>
	        	note_dataR[note_dataR_len][0] = 0;
 80042fa:	4b6b      	ldr	r3, [pc, #428]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 80042fc:	681a      	ldr	r2, [r3, #0]
 80042fe:	496d      	ldr	r1, [pc, #436]	; (80044b4 <HAL_UART_RxCpltCallback+0x290>)
 8004300:	4613      	mov	r3, r2
 8004302:	009b      	lsls	r3, r3, #2
 8004304:	4413      	add	r3, r2
 8004306:	009b      	lsls	r3, r3, #2
 8004308:	440b      	add	r3, r1
 800430a:	2200      	movs	r2, #0
 800430c:	601a      	str	r2, [r3, #0]
	            note_dataR[note_dataR_len][1] = 0;
 800430e:	4b66      	ldr	r3, [pc, #408]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 8004310:	681a      	ldr	r2, [r3, #0]
 8004312:	4968      	ldr	r1, [pc, #416]	; (80044b4 <HAL_UART_RxCpltCallback+0x290>)
 8004314:	4613      	mov	r3, r2
 8004316:	009b      	lsls	r3, r3, #2
 8004318:	4413      	add	r3, r2
 800431a:	009b      	lsls	r3, r3, #2
 800431c:	440b      	add	r3, r1
 800431e:	3304      	adds	r3, #4
 8004320:	2200      	movs	r2, #0
 8004322:	601a      	str	r2, [r3, #0]
	            note_dataR[note_dataR_len][2] = 0;
 8004324:	4b60      	ldr	r3, [pc, #384]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 8004326:	681a      	ldr	r2, [r3, #0]
 8004328:	4962      	ldr	r1, [pc, #392]	; (80044b4 <HAL_UART_RxCpltCallback+0x290>)
 800432a:	4613      	mov	r3, r2
 800432c:	009b      	lsls	r3, r3, #2
 800432e:	4413      	add	r3, r2
 8004330:	009b      	lsls	r3, r3, #2
 8004332:	440b      	add	r3, r1
 8004334:	3308      	adds	r3, #8
 8004336:	2200      	movs	r2, #0
 8004338:	601a      	str	r2, [r3, #0]
	            note_dataL[note_dataL_len][0] = 0;
 800433a:	4b5c      	ldr	r3, [pc, #368]	; (80044ac <HAL_UART_RxCpltCallback+0x288>)
 800433c:	681a      	ldr	r2, [r3, #0]
 800433e:	495e      	ldr	r1, [pc, #376]	; (80044b8 <HAL_UART_RxCpltCallback+0x294>)
 8004340:	4613      	mov	r3, r2
 8004342:	009b      	lsls	r3, r3, #2
 8004344:	4413      	add	r3, r2
 8004346:	009b      	lsls	r3, r3, #2
 8004348:	440b      	add	r3, r1
 800434a:	2200      	movs	r2, #0
 800434c:	601a      	str	r2, [r3, #0]
	            note_dataL[note_dataL_len][1] = 0;
 800434e:	4b57      	ldr	r3, [pc, #348]	; (80044ac <HAL_UART_RxCpltCallback+0x288>)
 8004350:	681a      	ldr	r2, [r3, #0]
 8004352:	4959      	ldr	r1, [pc, #356]	; (80044b8 <HAL_UART_RxCpltCallback+0x294>)
 8004354:	4613      	mov	r3, r2
 8004356:	009b      	lsls	r3, r3, #2
 8004358:	4413      	add	r3, r2
 800435a:	009b      	lsls	r3, r3, #2
 800435c:	440b      	add	r3, r1
 800435e:	3304      	adds	r3, #4
 8004360:	2200      	movs	r2, #0
 8004362:	601a      	str	r2, [r3, #0]
	            note_dataL[note_dataL_len][2] = 0;
 8004364:	4b51      	ldr	r3, [pc, #324]	; (80044ac <HAL_UART_RxCpltCallback+0x288>)
 8004366:	681a      	ldr	r2, [r3, #0]
 8004368:	4953      	ldr	r1, [pc, #332]	; (80044b8 <HAL_UART_RxCpltCallback+0x294>)
 800436a:	4613      	mov	r3, r2
 800436c:	009b      	lsls	r3, r3, #2
 800436e:	4413      	add	r3, r2
 8004370:	009b      	lsls	r3, r3, #2
 8004372:	440b      	add	r3, r1
 8004374:	3308      	adds	r3, #8
 8004376:	2200      	movs	r2, #0
 8004378:	601a      	str	r2, [r3, #0]
	        	song_length = note_dataR_len + note_dataL_len;
 800437a:	4b4b      	ldr	r3, [pc, #300]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 800437c:	681a      	ldr	r2, [r3, #0]
 800437e:	4b4b      	ldr	r3, [pc, #300]	; (80044ac <HAL_UART_RxCpltCallback+0x288>)
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	4413      	add	r3, r2
 8004384:	4a47      	ldr	r2, [pc, #284]	; (80044a4 <HAL_UART_RxCpltCallback+0x280>)
 8004386:	6013      	str	r3, [r2, #0]
	            read_notes = 0;
 8004388:	4b49      	ldr	r3, [pc, #292]	; (80044b0 <HAL_UART_RxCpltCallback+0x28c>)
 800438a:	2200      	movs	r2, #0
 800438c:	601a      	str	r2, [r3, #0]
	            play_notes();
 800438e:	f7fe f8e9 	bl	8002564 <play_notes>
 8004392:	e0a3      	b.n	80044dc <HAL_UART_RxCpltCallback+0x2b8>
	        }
	        else if(read_notes){
 8004394:	4b46      	ldr	r3, [pc, #280]	; (80044b0 <HAL_UART_RxCpltCallback+0x28c>)
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	2b00      	cmp	r3, #0
 800439a:	f000 809f 	beq.w	80044dc <HAL_UART_RxCpltCallback+0x2b8>
	        	if(noteNum >= 60){
 800439e:	693b      	ldr	r3, [r7, #16]
 80043a0:	2b3b      	cmp	r3, #59	; 0x3b
 80043a2:	dd41      	ble.n	8004428 <HAL_UART_RxCpltCallback+0x204>
	        		note_dataR[note_dataR_len][0] = noteNum;
 80043a4:	4b40      	ldr	r3, [pc, #256]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 80043a6:	681a      	ldr	r2, [r3, #0]
 80043a8:	4942      	ldr	r1, [pc, #264]	; (80044b4 <HAL_UART_RxCpltCallback+0x290>)
 80043aa:	4613      	mov	r3, r2
 80043ac:	009b      	lsls	r3, r3, #2
 80043ae:	4413      	add	r3, r2
 80043b0:	009b      	lsls	r3, r3, #2
 80043b2:	440b      	add	r3, r1
 80043b4:	693a      	ldr	r2, [r7, #16]
 80043b6:	601a      	str	r2, [r3, #0]
	        		note_dataR[note_dataR_len][1] = start_Time + 2;
 80043b8:	4b3b      	ldr	r3, [pc, #236]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 80043ba:	681a      	ldr	r2, [r3, #0]
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	1c99      	adds	r1, r3, #2
 80043c0:	483c      	ldr	r0, [pc, #240]	; (80044b4 <HAL_UART_RxCpltCallback+0x290>)
 80043c2:	4613      	mov	r3, r2
 80043c4:	009b      	lsls	r3, r3, #2
 80043c6:	4413      	add	r3, r2
 80043c8:	009b      	lsls	r3, r3, #2
 80043ca:	4403      	add	r3, r0
 80043cc:	3304      	adds	r3, #4
 80043ce:	6019      	str	r1, [r3, #0]
	        		note_dataR[note_dataR_len][2] = end_Time + 2;
 80043d0:	4b35      	ldr	r3, [pc, #212]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 80043d2:	681a      	ldr	r2, [r3, #0]
 80043d4:	68bb      	ldr	r3, [r7, #8]
 80043d6:	1c99      	adds	r1, r3, #2
 80043d8:	4836      	ldr	r0, [pc, #216]	; (80044b4 <HAL_UART_RxCpltCallback+0x290>)
 80043da:	4613      	mov	r3, r2
 80043dc:	009b      	lsls	r3, r3, #2
 80043de:	4413      	add	r3, r2
 80043e0:	009b      	lsls	r3, r3, #2
 80043e2:	4403      	add	r3, r0
 80043e4:	3308      	adds	r3, #8
 80043e6:	6019      	str	r1, [r3, #0]
	        		if(noteNum > highestNote){
 80043e8:	693b      	ldr	r3, [r7, #16]
 80043ea:	2b60      	cmp	r3, #96	; 0x60
 80043ec:	dd0b      	ble.n	8004406 <HAL_UART_RxCpltCallback+0x1e2>
	        			note_dataR[note_dataR_len][4] = 1;
 80043ee:	4b2e      	ldr	r3, [pc, #184]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 80043f0:	681a      	ldr	r2, [r3, #0]
 80043f2:	4930      	ldr	r1, [pc, #192]	; (80044b4 <HAL_UART_RxCpltCallback+0x290>)
 80043f4:	4613      	mov	r3, r2
 80043f6:	009b      	lsls	r3, r3, #2
 80043f8:	4413      	add	r3, r2
 80043fa:	009b      	lsls	r3, r3, #2
 80043fc:	440b      	add	r3, r1
 80043fe:	3310      	adds	r3, #16
 8004400:	2201      	movs	r2, #1
 8004402:	601a      	str	r2, [r3, #0]
 8004404:	e00a      	b.n	800441c <HAL_UART_RxCpltCallback+0x1f8>
	        		}
	        		else{
	        			note_dataR[note_dataR_len][4] = 0;
 8004406:	4b28      	ldr	r3, [pc, #160]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 8004408:	681a      	ldr	r2, [r3, #0]
 800440a:	492a      	ldr	r1, [pc, #168]	; (80044b4 <HAL_UART_RxCpltCallback+0x290>)
 800440c:	4613      	mov	r3, r2
 800440e:	009b      	lsls	r3, r3, #2
 8004410:	4413      	add	r3, r2
 8004412:	009b      	lsls	r3, r3, #2
 8004414:	440b      	add	r3, r1
 8004416:	3310      	adds	r3, #16
 8004418:	2200      	movs	r2, #0
 800441a:	601a      	str	r2, [r3, #0]
	        		}
	        		note_dataR_len++;
 800441c:	4b22      	ldr	r3, [pc, #136]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	3301      	adds	r3, #1
 8004422:	4a21      	ldr	r2, [pc, #132]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 8004424:	6013      	str	r3, [r2, #0]
 8004426:	e059      	b.n	80044dc <HAL_UART_RxCpltCallback+0x2b8>
	        	}
	        	else{
	        		note_dataL[note_dataL_len][0] = noteNum;
 8004428:	4b20      	ldr	r3, [pc, #128]	; (80044ac <HAL_UART_RxCpltCallback+0x288>)
 800442a:	681a      	ldr	r2, [r3, #0]
 800442c:	4922      	ldr	r1, [pc, #136]	; (80044b8 <HAL_UART_RxCpltCallback+0x294>)
 800442e:	4613      	mov	r3, r2
 8004430:	009b      	lsls	r3, r3, #2
 8004432:	4413      	add	r3, r2
 8004434:	009b      	lsls	r3, r3, #2
 8004436:	440b      	add	r3, r1
 8004438:	693a      	ldr	r2, [r7, #16]
 800443a:	601a      	str	r2, [r3, #0]
	        		note_dataL[note_dataL_len][1] = start_Time + 2;
 800443c:	4b1b      	ldr	r3, [pc, #108]	; (80044ac <HAL_UART_RxCpltCallback+0x288>)
 800443e:	681a      	ldr	r2, [r3, #0]
 8004440:	68fb      	ldr	r3, [r7, #12]
 8004442:	1c99      	adds	r1, r3, #2
 8004444:	481c      	ldr	r0, [pc, #112]	; (80044b8 <HAL_UART_RxCpltCallback+0x294>)
 8004446:	4613      	mov	r3, r2
 8004448:	009b      	lsls	r3, r3, #2
 800444a:	4413      	add	r3, r2
 800444c:	009b      	lsls	r3, r3, #2
 800444e:	4403      	add	r3, r0
 8004450:	3304      	adds	r3, #4
 8004452:	6019      	str	r1, [r3, #0]
	        		note_dataL[note_dataL_len][2] = end_Time + 2;
 8004454:	4b15      	ldr	r3, [pc, #84]	; (80044ac <HAL_UART_RxCpltCallback+0x288>)
 8004456:	681a      	ldr	r2, [r3, #0]
 8004458:	68bb      	ldr	r3, [r7, #8]
 800445a:	1c99      	adds	r1, r3, #2
 800445c:	4816      	ldr	r0, [pc, #88]	; (80044b8 <HAL_UART_RxCpltCallback+0x294>)
 800445e:	4613      	mov	r3, r2
 8004460:	009b      	lsls	r3, r3, #2
 8004462:	4413      	add	r3, r2
 8004464:	009b      	lsls	r3, r3, #2
 8004466:	4403      	add	r3, r0
 8004468:	3308      	adds	r3, #8
 800446a:	6019      	str	r1, [r3, #0]
	        		if(noteNum < lowestNote || noteNum > 54){
 800446c:	693b      	ldr	r3, [r7, #16]
 800446e:	2b23      	cmp	r3, #35	; 0x23
 8004470:	dd02      	ble.n	8004478 <HAL_UART_RxCpltCallback+0x254>
 8004472:	693b      	ldr	r3, [r7, #16]
 8004474:	2b36      	cmp	r3, #54	; 0x36
 8004476:	dd21      	ble.n	80044bc <HAL_UART_RxCpltCallback+0x298>
	        			note_dataR[note_dataR_len][4] = 1;
 8004478:	4b0b      	ldr	r3, [pc, #44]	; (80044a8 <HAL_UART_RxCpltCallback+0x284>)
 800447a:	681a      	ldr	r2, [r3, #0]
 800447c:	490d      	ldr	r1, [pc, #52]	; (80044b4 <HAL_UART_RxCpltCallback+0x290>)
 800447e:	4613      	mov	r3, r2
 8004480:	009b      	lsls	r3, r3, #2
 8004482:	4413      	add	r3, r2
 8004484:	009b      	lsls	r3, r3, #2
 8004486:	440b      	add	r3, r1
 8004488:	3310      	adds	r3, #16
 800448a:	2201      	movs	r2, #1
 800448c:	601a      	str	r2, [r3, #0]
 800448e:	e020      	b.n	80044d2 <HAL_UART_RxCpltCallback+0x2ae>
 8004490:	40004800 	.word	0x40004800
 8004494:	20000a30 	.word	0x20000a30
 8004498:	20008748 	.word	0x20008748
 800449c:	2000874c 	.word	0x2000874c
 80044a0:	20000014 	.word	0x20000014
 80044a4:	20008740 	.word	0x20008740
 80044a8:	2001bfec 	.word	0x2001bfec
 80044ac:	200123a8 	.word	0x200123a8
 80044b0:	20008744 	.word	0x20008744
 80044b4:	200123ac 	.word	0x200123ac
 80044b8:	20008768 	.word	0x20008768
	        		}
	        		else{
	        			note_dataR[note_dataR_len][4] = 0;
 80044bc:	4b0c      	ldr	r3, [pc, #48]	; (80044f0 <HAL_UART_RxCpltCallback+0x2cc>)
 80044be:	681a      	ldr	r2, [r3, #0]
 80044c0:	490c      	ldr	r1, [pc, #48]	; (80044f4 <HAL_UART_RxCpltCallback+0x2d0>)
 80044c2:	4613      	mov	r3, r2
 80044c4:	009b      	lsls	r3, r3, #2
 80044c6:	4413      	add	r3, r2
 80044c8:	009b      	lsls	r3, r3, #2
 80044ca:	440b      	add	r3, r1
 80044cc:	3310      	adds	r3, #16
 80044ce:	2200      	movs	r2, #0
 80044d0:	601a      	str	r2, [r3, #0]
	        		}
	        		note_dataL_len++;
 80044d2:	4b09      	ldr	r3, [pc, #36]	; (80044f8 <HAL_UART_RxCpltCallback+0x2d4>)
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	3301      	adds	r3, #1
 80044d8:	4a07      	ldr	r2, [pc, #28]	; (80044f8 <HAL_UART_RxCpltCallback+0x2d4>)
 80044da:	6013      	str	r3, [r2, #0]



	         // Similar logic for the last 2 motors using ReceivedData[2] and ReceivedData[3]
	        //memset(RX_Buffer, 0, sizeof(RX_Buffer));
	        HAL_UART_Receive_IT(&huart3, RX_Buffer, sizeof(RX_Buffer));
 80044dc:	2205      	movs	r2, #5
 80044de:	4907      	ldr	r1, [pc, #28]	; (80044fc <HAL_UART_RxCpltCallback+0x2d8>)
 80044e0:	4807      	ldr	r0, [pc, #28]	; (8004500 <HAL_UART_RxCpltCallback+0x2dc>)
 80044e2:	f007 fbff 	bl	800bce4 <HAL_UART_Receive_IT>
	    }

}
 80044e6:	bf00      	nop
 80044e8:	3718      	adds	r7, #24
 80044ea:	46bd      	mov	sp, r7
 80044ec:	bd80      	pop	{r7, pc}
 80044ee:	bf00      	nop
 80044f0:	2001bfec 	.word	0x2001bfec
 80044f4:	200123ac 	.word	0x200123ac
 80044f8:	200123a8 	.word	0x200123a8
 80044fc:	20000a30 	.word	0x20000a30
 8004500:	2000099c 	.word	0x2000099c

08004504 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004504:	b480      	push	{r7}
 8004506:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8004508:	b672      	cpsid	i
}
 800450a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800450c:	e7fe      	b.n	800450c <Error_Handler+0x8>
	...

08004510 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8004510:	b580      	push	{r7, lr}
 8004512:	b082      	sub	sp, #8
 8004514:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004516:	4b0f      	ldr	r3, [pc, #60]	; (8004554 <HAL_MspInit+0x44>)
 8004518:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800451a:	4a0e      	ldr	r2, [pc, #56]	; (8004554 <HAL_MspInit+0x44>)
 800451c:	f043 0301 	orr.w	r3, r3, #1
 8004520:	6613      	str	r3, [r2, #96]	; 0x60
 8004522:	4b0c      	ldr	r3, [pc, #48]	; (8004554 <HAL_MspInit+0x44>)
 8004524:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004526:	f003 0301 	and.w	r3, r3, #1
 800452a:	607b      	str	r3, [r7, #4]
 800452c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800452e:	4b09      	ldr	r3, [pc, #36]	; (8004554 <HAL_MspInit+0x44>)
 8004530:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004532:	4a08      	ldr	r2, [pc, #32]	; (8004554 <HAL_MspInit+0x44>)
 8004534:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004538:	6593      	str	r3, [r2, #88]	; 0x58
 800453a:	4b06      	ldr	r3, [pc, #24]	; (8004554 <HAL_MspInit+0x44>)
 800453c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800453e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004542:	603b      	str	r3, [r7, #0]
 8004544:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);
 8004546:	2005      	movs	r0, #5
 8004548:	f001 fcf8 	bl	8005f3c <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800454c:	bf00      	nop
 800454e:	3708      	adds	r7, #8
 8004550:	46bd      	mov	sp, r7
 8004552:	bd80      	pop	{r7, pc}
 8004554:	40021000 	.word	0x40021000

08004558 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8004558:	b480      	push	{r7}
 800455a:	b085      	sub	sp, #20
 800455c:	af00      	add	r7, sp, #0
 800455e:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	4a0a      	ldr	r2, [pc, #40]	; (8004590 <HAL_CRC_MspInit+0x38>)
 8004566:	4293      	cmp	r3, r2
 8004568:	d10b      	bne.n	8004582 <HAL_CRC_MspInit+0x2a>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800456a:	4b0a      	ldr	r3, [pc, #40]	; (8004594 <HAL_CRC_MspInit+0x3c>)
 800456c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800456e:	4a09      	ldr	r2, [pc, #36]	; (8004594 <HAL_CRC_MspInit+0x3c>)
 8004570:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004574:	6493      	str	r3, [r2, #72]	; 0x48
 8004576:	4b07      	ldr	r3, [pc, #28]	; (8004594 <HAL_CRC_MspInit+0x3c>)
 8004578:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800457a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800457e:	60fb      	str	r3, [r7, #12]
 8004580:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8004582:	bf00      	nop
 8004584:	3714      	adds	r7, #20
 8004586:	46bd      	mov	sp, r7
 8004588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800458c:	4770      	bx	lr
 800458e:	bf00      	nop
 8004590:	40023000 	.word	0x40023000
 8004594:	40021000 	.word	0x40021000

08004598 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8004598:	b580      	push	{r7, lr}
 800459a:	b08a      	sub	sp, #40	; 0x28
 800459c:	af00      	add	r7, sp, #0
 800459e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80045a0:	f107 0314 	add.w	r3, r7, #20
 80045a4:	2200      	movs	r2, #0
 80045a6:	601a      	str	r2, [r3, #0]
 80045a8:	605a      	str	r2, [r3, #4]
 80045aa:	609a      	str	r2, [r3, #8]
 80045ac:	60da      	str	r2, [r3, #12]
 80045ae:	611a      	str	r2, [r3, #16]
  if(hdac->Instance==DAC1)
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	4a15      	ldr	r2, [pc, #84]	; (800460c <HAL_DAC_MspInit+0x74>)
 80045b6:	4293      	cmp	r3, r2
 80045b8:	d124      	bne.n	8004604 <HAL_DAC_MspInit+0x6c>
  {
  /* USER CODE BEGIN DAC1_MspInit 0 */

  /* USER CODE END DAC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC1_CLK_ENABLE();
 80045ba:	4b15      	ldr	r3, [pc, #84]	; (8004610 <HAL_DAC_MspInit+0x78>)
 80045bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80045be:	4a14      	ldr	r2, [pc, #80]	; (8004610 <HAL_DAC_MspInit+0x78>)
 80045c0:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80045c4:	6593      	str	r3, [r2, #88]	; 0x58
 80045c6:	4b12      	ldr	r3, [pc, #72]	; (8004610 <HAL_DAC_MspInit+0x78>)
 80045c8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80045ca:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80045ce:	613b      	str	r3, [r7, #16]
 80045d0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80045d2:	4b0f      	ldr	r3, [pc, #60]	; (8004610 <HAL_DAC_MspInit+0x78>)
 80045d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80045d6:	4a0e      	ldr	r2, [pc, #56]	; (8004610 <HAL_DAC_MspInit+0x78>)
 80045d8:	f043 0301 	orr.w	r3, r3, #1
 80045dc:	64d3      	str	r3, [r2, #76]	; 0x4c
 80045de:	4b0c      	ldr	r3, [pc, #48]	; (8004610 <HAL_DAC_MspInit+0x78>)
 80045e0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80045e2:	f003 0301 	and.w	r3, r3, #1
 80045e6:	60fb      	str	r3, [r7, #12]
 80045e8:	68fb      	ldr	r3, [r7, #12]
    /**DAC1 GPIO Configuration
    PA4     ------> DAC1_OUT1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 80045ea:	2310      	movs	r3, #16
 80045ec:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80045ee:	2303      	movs	r3, #3
 80045f0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80045f2:	2300      	movs	r3, #0
 80045f4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80045f6:	f107 0314 	add.w	r3, r7, #20
 80045fa:	4619      	mov	r1, r3
 80045fc:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8004600:	f002 fb1c 	bl	8006c3c <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC1_MspInit 1 */

  /* USER CODE END DAC1_MspInit 1 */
  }

}
 8004604:	bf00      	nop
 8004606:	3728      	adds	r7, #40	; 0x28
 8004608:	46bd      	mov	sp, r7
 800460a:	bd80      	pop	{r7, pc}
 800460c:	40007400 	.word	0x40007400
 8004610:	40021000 	.word	0x40021000

08004614 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8004614:	b580      	push	{r7, lr}
 8004616:	b0b6      	sub	sp, #216	; 0xd8
 8004618:	af00      	add	r7, sp, #0
 800461a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800461c:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8004620:	2200      	movs	r2, #0
 8004622:	601a      	str	r2, [r3, #0]
 8004624:	605a      	str	r2, [r3, #4]
 8004626:	609a      	str	r2, [r3, #8]
 8004628:	60da      	str	r2, [r3, #12]
 800462a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800462c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8004630:	2294      	movs	r2, #148	; 0x94
 8004632:	2100      	movs	r1, #0
 8004634:	4618      	mov	r0, r3
 8004636:	f024 fe1c 	bl	8029272 <memset>
  if(hi2c->Instance==I2C1)
 800463a:	687b      	ldr	r3, [r7, #4]
 800463c:	681b      	ldr	r3, [r3, #0]
 800463e:	4ab2      	ldr	r2, [pc, #712]	; (8004908 <HAL_I2C_MspInit+0x2f4>)
 8004640:	4293      	cmp	r3, r2
 8004642:	d13d      	bne.n	80046c0 <HAL_I2C_MspInit+0xac>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8004644:	2340      	movs	r3, #64	; 0x40
 8004646:	633b      	str	r3, [r7, #48]	; 0x30
    PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8004648:	2300      	movs	r3, #0
 800464a:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800464e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8004652:	4618      	mov	r0, r3
 8004654:	f004 f8d6 	bl	8008804 <HAL_RCCEx_PeriphCLKConfig>
 8004658:	4603      	mov	r3, r0
 800465a:	2b00      	cmp	r3, #0
 800465c:	d001      	beq.n	8004662 <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 800465e:	f7ff ff51 	bl	8004504 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004662:	4baa      	ldr	r3, [pc, #680]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 8004664:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004666:	4aa9      	ldr	r2, [pc, #676]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 8004668:	f043 0302 	orr.w	r3, r3, #2
 800466c:	64d3      	str	r3, [r2, #76]	; 0x4c
 800466e:	4ba7      	ldr	r3, [pc, #668]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 8004670:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004672:	f003 0302 	and.w	r3, r3, #2
 8004676:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004678:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800467a:	f44f 7340 	mov.w	r3, #768	; 0x300
 800467e:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8004682:	2312      	movs	r3, #18
 8004684:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8004688:	2301      	movs	r3, #1
 800468a:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800468e:	2303      	movs	r3, #3
 8004690:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8004694:	2304      	movs	r3, #4
 8004696:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800469a:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 800469e:	4619      	mov	r1, r3
 80046a0:	489b      	ldr	r0, [pc, #620]	; (8004910 <HAL_I2C_MspInit+0x2fc>)
 80046a2:	f002 facb 	bl	8006c3c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80046a6:	4b99      	ldr	r3, [pc, #612]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80046a8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80046aa:	4a98      	ldr	r2, [pc, #608]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80046ac:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80046b0:	6593      	str	r3, [r2, #88]	; 0x58
 80046b2:	4b96      	ldr	r3, [pc, #600]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80046b4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80046b6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80046ba:	62bb      	str	r3, [r7, #40]	; 0x28
 80046bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
  /* USER CODE BEGIN I2C4_MspInit 1 */

  /* USER CODE END I2C4_MspInit 1 */
  }

}
 80046be:	e11e      	b.n	80048fe <HAL_I2C_MspInit+0x2ea>
  else if(hi2c->Instance==I2C2)
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	681b      	ldr	r3, [r3, #0]
 80046c4:	4a93      	ldr	r2, [pc, #588]	; (8004914 <HAL_I2C_MspInit+0x300>)
 80046c6:	4293      	cmp	r3, r2
 80046c8:	d151      	bne.n	800476e <HAL_I2C_MspInit+0x15a>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 80046ca:	2380      	movs	r3, #128	; 0x80
 80046cc:	633b      	str	r3, [r7, #48]	; 0x30
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 80046ce:	2300      	movs	r3, #0
 80046d0:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80046d4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80046d8:	4618      	mov	r0, r3
 80046da:	f004 f893 	bl	8008804 <HAL_RCCEx_PeriphCLKConfig>
 80046de:	4603      	mov	r3, r0
 80046e0:	2b00      	cmp	r3, #0
 80046e2:	d001      	beq.n	80046e8 <HAL_I2C_MspInit+0xd4>
      Error_Handler();
 80046e4:	f7ff ff0e 	bl	8004504 <Error_Handler>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80046e8:	4b88      	ldr	r3, [pc, #544]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80046ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80046ec:	4a87      	ldr	r2, [pc, #540]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80046ee:	f043 0320 	orr.w	r3, r3, #32
 80046f2:	64d3      	str	r3, [r2, #76]	; 0x4c
 80046f4:	4b85      	ldr	r3, [pc, #532]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80046f6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80046f8:	f003 0320 	and.w	r3, r3, #32
 80046fc:	627b      	str	r3, [r7, #36]	; 0x24
 80046fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8004700:	2303      	movs	r3, #3
 8004702:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8004706:	2312      	movs	r3, #18
 8004708:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800470c:	2301      	movs	r3, #1
 800470e:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004712:	2303      	movs	r3, #3
 8004714:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8004718:	2304      	movs	r3, #4
 800471a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800471e:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8004722:	4619      	mov	r1, r3
 8004724:	487c      	ldr	r0, [pc, #496]	; (8004918 <HAL_I2C_MspInit+0x304>)
 8004726:	f002 fa89 	bl	8006c3c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800472a:	2304      	movs	r3, #4
 800472c:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8004730:	2312      	movs	r3, #18
 8004732:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004736:	2300      	movs	r3, #0
 8004738:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800473c:	2303      	movs	r3, #3
 800473e:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8004742:	2304      	movs	r3, #4
 8004744:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004748:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 800474c:	4619      	mov	r1, r3
 800474e:	4872      	ldr	r0, [pc, #456]	; (8004918 <HAL_I2C_MspInit+0x304>)
 8004750:	f002 fa74 	bl	8006c3c <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 8004754:	4b6d      	ldr	r3, [pc, #436]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 8004756:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004758:	4a6c      	ldr	r2, [pc, #432]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 800475a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800475e:	6593      	str	r3, [r2, #88]	; 0x58
 8004760:	4b6a      	ldr	r3, [pc, #424]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 8004762:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004764:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004768:	623b      	str	r3, [r7, #32]
 800476a:	6a3b      	ldr	r3, [r7, #32]
}
 800476c:	e0c7      	b.n	80048fe <HAL_I2C_MspInit+0x2ea>
  else if(hi2c->Instance==I2C3)
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	681b      	ldr	r3, [r3, #0]
 8004772:	4a6a      	ldr	r2, [pc, #424]	; (800491c <HAL_I2C_MspInit+0x308>)
 8004774:	4293      	cmp	r3, r2
 8004776:	d15e      	bne.n	8004836 <HAL_I2C_MspInit+0x222>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8004778:	f44f 7380 	mov.w	r3, #256	; 0x100
 800477c:	633b      	str	r3, [r7, #48]	; 0x30
    PeriphClkInit.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 800477e:	2300      	movs	r3, #0
 8004780:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8004784:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8004788:	4618      	mov	r0, r3
 800478a:	f004 f83b 	bl	8008804 <HAL_RCCEx_PeriphCLKConfig>
 800478e:	4603      	mov	r3, r0
 8004790:	2b00      	cmp	r3, #0
 8004792:	d001      	beq.n	8004798 <HAL_I2C_MspInit+0x184>
      Error_Handler();
 8004794:	f7ff feb6 	bl	8004504 <Error_Handler>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8004798:	4b5c      	ldr	r3, [pc, #368]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 800479a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800479c:	4a5b      	ldr	r2, [pc, #364]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 800479e:	f043 0304 	orr.w	r3, r3, #4
 80047a2:	64d3      	str	r3, [r2, #76]	; 0x4c
 80047a4:	4b59      	ldr	r3, [pc, #356]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80047a6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80047a8:	f003 0304 	and.w	r3, r3, #4
 80047ac:	61fb      	str	r3, [r7, #28]
 80047ae:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80047b0:	4b56      	ldr	r3, [pc, #344]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80047b2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80047b4:	4a55      	ldr	r2, [pc, #340]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80047b6:	f043 0302 	orr.w	r3, r3, #2
 80047ba:	64d3      	str	r3, [r2, #76]	; 0x4c
 80047bc:	4b53      	ldr	r3, [pc, #332]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80047be:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80047c0:	f003 0302 	and.w	r3, r3, #2
 80047c4:	61bb      	str	r3, [r7, #24]
 80047c6:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80047c8:	2301      	movs	r3, #1
 80047ca:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80047ce:	2312      	movs	r3, #18
 80047d0:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80047d4:	2301      	movs	r3, #1
 80047d6:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80047da:	2301      	movs	r3, #1
 80047dc:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80047e0:	2304      	movs	r3, #4
 80047e2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80047e6:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 80047ea:	4619      	mov	r1, r3
 80047ec:	484c      	ldr	r0, [pc, #304]	; (8004920 <HAL_I2C_MspInit+0x30c>)
 80047ee:	f002 fa25 	bl	8006c3c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 80047f2:	2310      	movs	r3, #16
 80047f4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80047f8:	2312      	movs	r3, #18
 80047fa:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80047fe:	2301      	movs	r3, #1
 8004800:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 8004804:	2301      	movs	r3, #1
 8004806:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800480a:	2304      	movs	r3, #4
 800480c:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004810:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8004814:	4619      	mov	r1, r3
 8004816:	483e      	ldr	r0, [pc, #248]	; (8004910 <HAL_I2C_MspInit+0x2fc>)
 8004818:	f002 fa10 	bl	8006c3c <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 800481c:	4b3b      	ldr	r3, [pc, #236]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 800481e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004820:	4a3a      	ldr	r2, [pc, #232]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 8004822:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8004826:	6593      	str	r3, [r2, #88]	; 0x58
 8004828:	4b38      	ldr	r3, [pc, #224]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 800482a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800482c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8004830:	617b      	str	r3, [r7, #20]
 8004832:	697b      	ldr	r3, [r7, #20]
}
 8004834:	e063      	b.n	80048fe <HAL_I2C_MspInit+0x2ea>
  else if(hi2c->Instance==I2C4)
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	4a3a      	ldr	r2, [pc, #232]	; (8004924 <HAL_I2C_MspInit+0x310>)
 800483c:	4293      	cmp	r3, r2
 800483e:	d15e      	bne.n	80048fe <HAL_I2C_MspInit+0x2ea>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C4;
 8004840:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8004844:	633b      	str	r3, [r7, #48]	; 0x30
    PeriphClkInit.I2c4ClockSelection = RCC_I2C4CLKSOURCE_PCLK1;
 8004846:	2300      	movs	r3, #0
 8004848:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800484c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8004850:	4618      	mov	r0, r3
 8004852:	f003 ffd7 	bl	8008804 <HAL_RCCEx_PeriphCLKConfig>
 8004856:	4603      	mov	r3, r0
 8004858:	2b00      	cmp	r3, #0
 800485a:	d001      	beq.n	8004860 <HAL_I2C_MspInit+0x24c>
      Error_Handler();
 800485c:	f7ff fe52 	bl	8004504 <Error_Handler>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8004860:	4b2a      	ldr	r3, [pc, #168]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 8004862:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004864:	4a29      	ldr	r2, [pc, #164]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 8004866:	f043 0320 	orr.w	r3, r3, #32
 800486a:	64d3      	str	r3, [r2, #76]	; 0x4c
 800486c:	4b27      	ldr	r3, [pc, #156]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 800486e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004870:	f003 0320 	and.w	r3, r3, #32
 8004874:	613b      	str	r3, [r7, #16]
 8004876:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004878:	4b24      	ldr	r3, [pc, #144]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 800487a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800487c:	4a23      	ldr	r2, [pc, #140]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 800487e:	f043 0302 	orr.w	r3, r3, #2
 8004882:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004884:	4b21      	ldr	r3, [pc, #132]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 8004886:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004888:	f003 0302 	and.w	r3, r3, #2
 800488c:	60fb      	str	r3, [r7, #12]
 800488e:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8004890:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004894:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8004898:	2312      	movs	r3, #18
 800489a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800489e:	2301      	movs	r3, #1
 80048a0:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80048a4:	2303      	movs	r3, #3
 80048a6:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
 80048aa:	2304      	movs	r3, #4
 80048ac:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80048b0:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 80048b4:	4619      	mov	r1, r3
 80048b6:	4818      	ldr	r0, [pc, #96]	; (8004918 <HAL_I2C_MspInit+0x304>)
 80048b8:	f002 f9c0 	bl	8006c3c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 80048bc:	2340      	movs	r3, #64	; 0x40
 80048be:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80048c2:	2312      	movs	r3, #18
 80048c4:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80048c8:	2301      	movs	r3, #1
 80048ca:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80048ce:	2303      	movs	r3, #3
 80048d0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
    GPIO_InitStruct.Alternate = GPIO_AF5_I2C4;
 80048d4:	2305      	movs	r3, #5
 80048d6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80048da:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 80048de:	4619      	mov	r1, r3
 80048e0:	480b      	ldr	r0, [pc, #44]	; (8004910 <HAL_I2C_MspInit+0x2fc>)
 80048e2:	f002 f9ab 	bl	8006c3c <HAL_GPIO_Init>
    __HAL_RCC_I2C4_CLK_ENABLE();
 80048e6:	4b09      	ldr	r3, [pc, #36]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80048e8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80048ea:	4a08      	ldr	r2, [pc, #32]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80048ec:	f043 0302 	orr.w	r3, r3, #2
 80048f0:	65d3      	str	r3, [r2, #92]	; 0x5c
 80048f2:	4b06      	ldr	r3, [pc, #24]	; (800490c <HAL_I2C_MspInit+0x2f8>)
 80048f4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80048f6:	f003 0302 	and.w	r3, r3, #2
 80048fa:	60bb      	str	r3, [r7, #8]
 80048fc:	68bb      	ldr	r3, [r7, #8]
}
 80048fe:	bf00      	nop
 8004900:	37d8      	adds	r7, #216	; 0xd8
 8004902:	46bd      	mov	sp, r7
 8004904:	bd80      	pop	{r7, pc}
 8004906:	bf00      	nop
 8004908:	40005400 	.word	0x40005400
 800490c:	40021000 	.word	0x40021000
 8004910:	48000400 	.word	0x48000400
 8004914:	40005800 	.word	0x40005800
 8004918:	48001400 	.word	0x48001400
 800491c:	40005c00 	.word	0x40005c00
 8004920:	48000800 	.word	0x48000800
 8004924:	40008400 	.word	0x40008400

08004928 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8004928:	b580      	push	{r7, lr}
 800492a:	b08c      	sub	sp, #48	; 0x30
 800492c:	af00      	add	r7, sp, #0
 800492e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004930:	f107 031c 	add.w	r3, r7, #28
 8004934:	2200      	movs	r2, #0
 8004936:	601a      	str	r2, [r3, #0]
 8004938:	605a      	str	r2, [r3, #4]
 800493a:	609a      	str	r2, [r3, #8]
 800493c:	60da      	str	r2, [r3, #12]
 800493e:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	4a6e      	ldr	r2, [pc, #440]	; (8004b00 <HAL_SPI_MspInit+0x1d8>)
 8004946:	4293      	cmp	r3, r2
 8004948:	d15a      	bne.n	8004a00 <HAL_SPI_MspInit+0xd8>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 800494a:	4b6e      	ldr	r3, [pc, #440]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 800494c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800494e:	4a6d      	ldr	r2, [pc, #436]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004950:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004954:	6613      	str	r3, [r2, #96]	; 0x60
 8004956:	4b6b      	ldr	r3, [pc, #428]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004958:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800495a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800495e:	61bb      	str	r3, [r7, #24]
 8004960:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004962:	4b68      	ldr	r3, [pc, #416]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004964:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004966:	4a67      	ldr	r2, [pc, #412]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004968:	f043 0301 	orr.w	r3, r3, #1
 800496c:	64d3      	str	r3, [r2, #76]	; 0x4c
 800496e:	4b65      	ldr	r3, [pc, #404]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004970:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004972:	f003 0301 	and.w	r3, r3, #1
 8004976:	617b      	str	r3, [r7, #20]
 8004978:	697b      	ldr	r3, [r7, #20]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = DISPL_SCK_Pin|DISPL_MISO_Pin|DISPL_MOSI_Pin;
 800497a:	23e0      	movs	r3, #224	; 0xe0
 800497c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800497e:	2302      	movs	r3, #2
 8004980:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004982:	2300      	movs	r3, #0
 8004984:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004986:	2303      	movs	r3, #3
 8004988:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800498a:	2305      	movs	r3, #5
 800498c:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800498e:	f107 031c 	add.w	r3, r7, #28
 8004992:	4619      	mov	r1, r3
 8004994:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8004998:	f002 f950 	bl	8006c3c <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA1_Channel2;
 800499c:	4b5a      	ldr	r3, [pc, #360]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 800499e:	4a5b      	ldr	r2, [pc, #364]	; (8004b0c <HAL_SPI_MspInit+0x1e4>)
 80049a0:	601a      	str	r2, [r3, #0]
    hdma_spi1_tx.Init.Request = DMA_REQUEST_SPI1_TX;
 80049a2:	4b59      	ldr	r3, [pc, #356]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049a4:	220b      	movs	r2, #11
 80049a6:	605a      	str	r2, [r3, #4]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80049a8:	4b57      	ldr	r3, [pc, #348]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049aa:	2210      	movs	r2, #16
 80049ac:	609a      	str	r2, [r3, #8]
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80049ae:	4b56      	ldr	r3, [pc, #344]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049b0:	2200      	movs	r2, #0
 80049b2:	60da      	str	r2, [r3, #12]
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 80049b4:	4b54      	ldr	r3, [pc, #336]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049b6:	2280      	movs	r2, #128	; 0x80
 80049b8:	611a      	str	r2, [r3, #16]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80049ba:	4b53      	ldr	r3, [pc, #332]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049bc:	2200      	movs	r2, #0
 80049be:	615a      	str	r2, [r3, #20]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80049c0:	4b51      	ldr	r3, [pc, #324]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049c2:	2200      	movs	r2, #0
 80049c4:	619a      	str	r2, [r3, #24]
    hdma_spi1_tx.Init.Mode = DMA_NORMAL;
 80049c6:	4b50      	ldr	r3, [pc, #320]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049c8:	2200      	movs	r2, #0
 80049ca:	61da      	str	r2, [r3, #28]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
 80049cc:	4b4e      	ldr	r3, [pc, #312]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049ce:	2200      	movs	r2, #0
 80049d0:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 80049d2:	484d      	ldr	r0, [pc, #308]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049d4:	f001 fe04 	bl	80065e0 <HAL_DMA_Init>
 80049d8:	4603      	mov	r3, r0
 80049da:	2b00      	cmp	r3, #0
 80049dc:	d001      	beq.n	80049e2 <HAL_SPI_MspInit+0xba>
    {
      Error_Handler();
 80049de:	f7ff fd91 	bl	8004504 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi1_tx);
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	4a48      	ldr	r2, [pc, #288]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049e6:	655a      	str	r2, [r3, #84]	; 0x54
 80049e8:	4a47      	ldr	r2, [pc, #284]	; (8004b08 <HAL_SPI_MspInit+0x1e0>)
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	6293      	str	r3, [r2, #40]	; 0x28

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 3, 0);
 80049ee:	2200      	movs	r2, #0
 80049f0:	2103      	movs	r1, #3
 80049f2:	2023      	movs	r0, #35	; 0x23
 80049f4:	f001 faad 	bl	8005f52 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 80049f8:	2023      	movs	r0, #35	; 0x23
 80049fa:	f001 fac6 	bl	8005f8a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 80049fe:	e07a      	b.n	8004af6 <HAL_SPI_MspInit+0x1ce>
  else if(hspi->Instance==SPI2)
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	681b      	ldr	r3, [r3, #0]
 8004a04:	4a42      	ldr	r2, [pc, #264]	; (8004b10 <HAL_SPI_MspInit+0x1e8>)
 8004a06:	4293      	cmp	r3, r2
 8004a08:	d175      	bne.n	8004af6 <HAL_SPI_MspInit+0x1ce>
    __HAL_RCC_SPI2_CLK_ENABLE();
 8004a0a:	4b3e      	ldr	r3, [pc, #248]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004a0c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004a0e:	4a3d      	ldr	r2, [pc, #244]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004a10:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004a14:	6593      	str	r3, [r2, #88]	; 0x58
 8004a16:	4b3b      	ldr	r3, [pc, #236]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004a18:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004a1a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004a1e:	613b      	str	r3, [r7, #16]
 8004a20:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8004a22:	4b38      	ldr	r3, [pc, #224]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004a24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004a26:	4a37      	ldr	r2, [pc, #220]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004a28:	f043 0304 	orr.w	r3, r3, #4
 8004a2c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004a2e:	4b35      	ldr	r3, [pc, #212]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004a30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004a32:	f003 0304 	and.w	r3, r3, #4
 8004a36:	60fb      	str	r3, [r7, #12]
 8004a38:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004a3a:	4b32      	ldr	r3, [pc, #200]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004a3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004a3e:	4a31      	ldr	r2, [pc, #196]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004a40:	f043 0302 	orr.w	r3, r3, #2
 8004a44:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004a46:	4b2f      	ldr	r3, [pc, #188]	; (8004b04 <HAL_SPI_MspInit+0x1dc>)
 8004a48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004a4a:	f003 0302 	and.w	r3, r3, #2
 8004a4e:	60bb      	str	r3, [r7, #8]
 8004a50:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = TOUCH_MISO_Pin|TOUCH_MOSI_Pin;
 8004a52:	230c      	movs	r3, #12
 8004a54:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004a56:	2302      	movs	r3, #2
 8004a58:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004a5a:	2300      	movs	r3, #0
 8004a5c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004a5e:	2303      	movs	r3, #3
 8004a60:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8004a62:	2305      	movs	r3, #5
 8004a64:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8004a66:	f107 031c 	add.w	r3, r7, #28
 8004a6a:	4619      	mov	r1, r3
 8004a6c:	4829      	ldr	r0, [pc, #164]	; (8004b14 <HAL_SPI_MspInit+0x1ec>)
 8004a6e:	f002 f8e5 	bl	8006c3c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = TOUCH_SCK_Pin;
 8004a72:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004a76:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004a78:	2302      	movs	r3, #2
 8004a7a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004a7c:	2300      	movs	r3, #0
 8004a7e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004a80:	2303      	movs	r3, #3
 8004a82:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8004a84:	2305      	movs	r3, #5
 8004a86:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(TOUCH_SCK_GPIO_Port, &GPIO_InitStruct);
 8004a88:	f107 031c 	add.w	r3, r7, #28
 8004a8c:	4619      	mov	r1, r3
 8004a8e:	4822      	ldr	r0, [pc, #136]	; (8004b18 <HAL_SPI_MspInit+0x1f0>)
 8004a90:	f002 f8d4 	bl	8006c3c <HAL_GPIO_Init>
    hdma_spi2_tx.Instance = DMA1_Channel1;
 8004a94:	4b21      	ldr	r3, [pc, #132]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004a96:	4a22      	ldr	r2, [pc, #136]	; (8004b20 <HAL_SPI_MspInit+0x1f8>)
 8004a98:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Request = DMA_REQUEST_SPI2_TX;
 8004a9a:	4b20      	ldr	r3, [pc, #128]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004a9c:	220d      	movs	r2, #13
 8004a9e:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8004aa0:	4b1e      	ldr	r3, [pc, #120]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004aa2:	2210      	movs	r2, #16
 8004aa4:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8004aa6:	4b1d      	ldr	r3, [pc, #116]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004aa8:	2200      	movs	r2, #0
 8004aaa:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8004aac:	4b1b      	ldr	r3, [pc, #108]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004aae:	2280      	movs	r2, #128	; 0x80
 8004ab0:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8004ab2:	4b1a      	ldr	r3, [pc, #104]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004ab4:	2200      	movs	r2, #0
 8004ab6:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8004ab8:	4b18      	ldr	r3, [pc, #96]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004aba:	2200      	movs	r2, #0
 8004abc:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8004abe:	4b17      	ldr	r3, [pc, #92]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004ac0:	2200      	movs	r2, #0
 8004ac2:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8004ac4:	4b15      	ldr	r3, [pc, #84]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004ac6:	2200      	movs	r2, #0
 8004ac8:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8004aca:	4814      	ldr	r0, [pc, #80]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004acc:	f001 fd88 	bl	80065e0 <HAL_DMA_Init>
 8004ad0:	4603      	mov	r3, r0
 8004ad2:	2b00      	cmp	r3, #0
 8004ad4:	d001      	beq.n	8004ada <HAL_SPI_MspInit+0x1b2>
      Error_Handler();
 8004ad6:	f7ff fd15 	bl	8004504 <Error_Handler>
    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8004ada:	687b      	ldr	r3, [r7, #4]
 8004adc:	4a0f      	ldr	r2, [pc, #60]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004ade:	655a      	str	r2, [r3, #84]	; 0x54
 8004ae0:	4a0e      	ldr	r2, [pc, #56]	; (8004b1c <HAL_SPI_MspInit+0x1f4>)
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	6293      	str	r3, [r2, #40]	; 0x28
    HAL_NVIC_SetPriority(SPI2_IRQn, 3, 0);
 8004ae6:	2200      	movs	r2, #0
 8004ae8:	2103      	movs	r1, #3
 8004aea:	2024      	movs	r0, #36	; 0x24
 8004aec:	f001 fa31 	bl	8005f52 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8004af0:	2024      	movs	r0, #36	; 0x24
 8004af2:	f001 fa4a 	bl	8005f8a <HAL_NVIC_EnableIRQ>
}
 8004af6:	bf00      	nop
 8004af8:	3730      	adds	r7, #48	; 0x30
 8004afa:	46bd      	mov	sp, r7
 8004afc:	bd80      	pop	{r7, pc}
 8004afe:	bf00      	nop
 8004b00:	40013000 	.word	0x40013000
 8004b04:	40021000 	.word	0x40021000
 8004b08:	200006cc 	.word	0x200006cc
 8004b0c:	4002001c 	.word	0x4002001c
 8004b10:	40003800 	.word	0x40003800
 8004b14:	48000800 	.word	0x48000800
 8004b18:	48000400 	.word	0x48000400
 8004b1c:	2000072c 	.word	0x2000072c
 8004b20:	40020008 	.word	0x40020008

08004b24 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8004b24:	b580      	push	{r7, lr}
 8004b26:	b08c      	sub	sp, #48	; 0x30
 8004b28:	af00      	add	r7, sp, #0
 8004b2a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004b2c:	f107 031c 	add.w	r3, r7, #28
 8004b30:	2200      	movs	r2, #0
 8004b32:	601a      	str	r2, [r3, #0]
 8004b34:	605a      	str	r2, [r3, #4]
 8004b36:	609a      	str	r2, [r3, #8]
 8004b38:	60da      	str	r2, [r3, #12]
 8004b3a:	611a      	str	r2, [r3, #16]
  if(htim_base->Instance==TIM2)
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	681b      	ldr	r3, [r3, #0]
 8004b40:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004b44:	d114      	bne.n	8004b70 <HAL_TIM_Base_MspInit+0x4c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8004b46:	4b3e      	ldr	r3, [pc, #248]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004b48:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004b4a:	4a3d      	ldr	r2, [pc, #244]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004b4c:	f043 0301 	orr.w	r3, r3, #1
 8004b50:	6593      	str	r3, [r2, #88]	; 0x58
 8004b52:	4b3b      	ldr	r3, [pc, #236]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004b54:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004b56:	f003 0301 	and.w	r3, r3, #1
 8004b5a:	61bb      	str	r3, [r7, #24]
 8004b5c:	69bb      	ldr	r3, [r7, #24]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 2, 0);
 8004b5e:	2200      	movs	r2, #0
 8004b60:	2102      	movs	r1, #2
 8004b62:	201c      	movs	r0, #28
 8004b64:	f001 f9f5 	bl	8005f52 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8004b68:	201c      	movs	r0, #28
 8004b6a:	f001 fa0e 	bl	8005f8a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8004b6e:	e063      	b.n	8004c38 <HAL_TIM_Base_MspInit+0x114>
  else if(htim_base->Instance==TIM4)
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	4a33      	ldr	r2, [pc, #204]	; (8004c44 <HAL_TIM_Base_MspInit+0x120>)
 8004b76:	4293      	cmp	r3, r2
 8004b78:	d145      	bne.n	8004c06 <HAL_TIM_Base_MspInit+0xe2>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8004b7a:	4b31      	ldr	r3, [pc, #196]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004b7c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004b7e:	4a30      	ldr	r2, [pc, #192]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004b80:	f043 0304 	orr.w	r3, r3, #4
 8004b84:	6593      	str	r3, [r2, #88]	; 0x58
 8004b86:	4b2e      	ldr	r3, [pc, #184]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004b88:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004b8a:	f003 0304 	and.w	r3, r3, #4
 8004b8e:	617b      	str	r3, [r7, #20]
 8004b90:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8004b92:	4b2b      	ldr	r3, [pc, #172]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004b94:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004b96:	4a2a      	ldr	r2, [pc, #168]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004b98:	f043 0308 	orr.w	r3, r3, #8
 8004b9c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004b9e:	4b28      	ldr	r3, [pc, #160]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004ba0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004ba2:	f003 0308 	and.w	r3, r3, #8
 8004ba6:	613b      	str	r3, [r7, #16]
 8004ba8:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8004baa:	4b25      	ldr	r3, [pc, #148]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004bac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004bae:	4a24      	ldr	r2, [pc, #144]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004bb0:	f043 0310 	orr.w	r3, r3, #16
 8004bb4:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004bb6:	4b22      	ldr	r3, [pc, #136]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004bb8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004bba:	f003 0310 	and.w	r3, r3, #16
 8004bbe:	60fb      	str	r3, [r7, #12]
 8004bc0:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8004bc2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8004bc6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004bc8:	2302      	movs	r3, #2
 8004bca:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004bcc:	2300      	movs	r3, #0
 8004bce:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004bd0:	2300      	movs	r3, #0
 8004bd2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8004bd4:	2302      	movs	r3, #2
 8004bd6:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8004bd8:	f107 031c 	add.w	r3, r7, #28
 8004bdc:	4619      	mov	r1, r3
 8004bde:	481a      	ldr	r0, [pc, #104]	; (8004c48 <HAL_TIM_Base_MspInit+0x124>)
 8004be0:	f002 f82c 	bl	8006c3c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8004be4:	2301      	movs	r3, #1
 8004be6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004be8:	2302      	movs	r3, #2
 8004bea:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004bec:	2300      	movs	r3, #0
 8004bee:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004bf0:	2300      	movs	r3, #0
 8004bf2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8004bf4:	2302      	movs	r3, #2
 8004bf6:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8004bf8:	f107 031c 	add.w	r3, r7, #28
 8004bfc:	4619      	mov	r1, r3
 8004bfe:	4813      	ldr	r0, [pc, #76]	; (8004c4c <HAL_TIM_Base_MspInit+0x128>)
 8004c00:	f002 f81c 	bl	8006c3c <HAL_GPIO_Init>
}
 8004c04:	e018      	b.n	8004c38 <HAL_TIM_Base_MspInit+0x114>
  else if(htim_base->Instance==TIM7)
 8004c06:	687b      	ldr	r3, [r7, #4]
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	4a11      	ldr	r2, [pc, #68]	; (8004c50 <HAL_TIM_Base_MspInit+0x12c>)
 8004c0c:	4293      	cmp	r3, r2
 8004c0e:	d113      	bne.n	8004c38 <HAL_TIM_Base_MspInit+0x114>
    __HAL_RCC_TIM7_CLK_ENABLE();
 8004c10:	4b0b      	ldr	r3, [pc, #44]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004c12:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004c14:	4a0a      	ldr	r2, [pc, #40]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004c16:	f043 0320 	orr.w	r3, r3, #32
 8004c1a:	6593      	str	r3, [r2, #88]	; 0x58
 8004c1c:	4b08      	ldr	r3, [pc, #32]	; (8004c40 <HAL_TIM_Base_MspInit+0x11c>)
 8004c1e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004c20:	f003 0320 	and.w	r3, r3, #32
 8004c24:	60bb      	str	r3, [r7, #8]
 8004c26:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 8004c28:	2200      	movs	r2, #0
 8004c2a:	2100      	movs	r1, #0
 8004c2c:	2037      	movs	r0, #55	; 0x37
 8004c2e:	f001 f990 	bl	8005f52 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8004c32:	2037      	movs	r0, #55	; 0x37
 8004c34:	f001 f9a9 	bl	8005f8a <HAL_NVIC_EnableIRQ>
}
 8004c38:	bf00      	nop
 8004c3a:	3730      	adds	r7, #48	; 0x30
 8004c3c:	46bd      	mov	sp, r7
 8004c3e:	bd80      	pop	{r7, pc}
 8004c40:	40021000 	.word	0x40021000
 8004c44:	40000800 	.word	0x40000800
 8004c48:	48000c00 	.word	0x48000c00
 8004c4c:	48001000 	.word	0x48001000
 8004c50:	40001400 	.word	0x40001400

08004c54 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8004c54:	b580      	push	{r7, lr}
 8004c56:	b08a      	sub	sp, #40	; 0x28
 8004c58:	af00      	add	r7, sp, #0
 8004c5a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004c5c:	f107 0314 	add.w	r3, r7, #20
 8004c60:	2200      	movs	r2, #0
 8004c62:	601a      	str	r2, [r3, #0]
 8004c64:	605a      	str	r2, [r3, #4]
 8004c66:	609a      	str	r2, [r3, #8]
 8004c68:	60da      	str	r2, [r3, #12]
 8004c6a:	611a      	str	r2, [r3, #16]
  if(htim_pwm->Instance==TIM3)
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	681b      	ldr	r3, [r3, #0]
 8004c70:	4a20      	ldr	r2, [pc, #128]	; (8004cf4 <HAL_TIM_PWM_MspInit+0xa0>)
 8004c72:	4293      	cmp	r3, r2
 8004c74:	d128      	bne.n	8004cc8 <HAL_TIM_PWM_MspInit+0x74>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8004c76:	4b20      	ldr	r3, [pc, #128]	; (8004cf8 <HAL_TIM_PWM_MspInit+0xa4>)
 8004c78:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004c7a:	4a1f      	ldr	r2, [pc, #124]	; (8004cf8 <HAL_TIM_PWM_MspInit+0xa4>)
 8004c7c:	f043 0302 	orr.w	r3, r3, #2
 8004c80:	6593      	str	r3, [r2, #88]	; 0x58
 8004c82:	4b1d      	ldr	r3, [pc, #116]	; (8004cf8 <HAL_TIM_PWM_MspInit+0xa4>)
 8004c84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004c86:	f003 0302 	and.w	r3, r3, #2
 8004c8a:	613b      	str	r3, [r7, #16]
 8004c8c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004c8e:	4b1a      	ldr	r3, [pc, #104]	; (8004cf8 <HAL_TIM_PWM_MspInit+0xa4>)
 8004c90:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004c92:	4a19      	ldr	r2, [pc, #100]	; (8004cf8 <HAL_TIM_PWM_MspInit+0xa4>)
 8004c94:	f043 0302 	orr.w	r3, r3, #2
 8004c98:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004c9a:	4b17      	ldr	r3, [pc, #92]	; (8004cf8 <HAL_TIM_PWM_MspInit+0xa4>)
 8004c9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004c9e:	f003 0302 	and.w	r3, r3, #2
 8004ca2:	60fb      	str	r3, [r7, #12]
 8004ca4:	68fb      	ldr	r3, [r7, #12]
    /**TIM3 GPIO Configuration
    PB0     ------> TIM3_CH3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8004ca6:	2301      	movs	r3, #1
 8004ca8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004caa:	2302      	movs	r3, #2
 8004cac:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004cae:	2300      	movs	r3, #0
 8004cb0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004cb2:	2300      	movs	r3, #0
 8004cb4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8004cb6:	2302      	movs	r3, #2
 8004cb8:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004cba:	f107 0314 	add.w	r3, r7, #20
 8004cbe:	4619      	mov	r1, r3
 8004cc0:	480e      	ldr	r0, [pc, #56]	; (8004cfc <HAL_TIM_PWM_MspInit+0xa8>)
 8004cc2:	f001 ffbb 	bl	8006c3c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }

}
 8004cc6:	e010      	b.n	8004cea <HAL_TIM_PWM_MspInit+0x96>
  else if(htim_pwm->Instance==TIM5)
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	4a0c      	ldr	r2, [pc, #48]	; (8004d00 <HAL_TIM_PWM_MspInit+0xac>)
 8004cce:	4293      	cmp	r3, r2
 8004cd0:	d10b      	bne.n	8004cea <HAL_TIM_PWM_MspInit+0x96>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8004cd2:	4b09      	ldr	r3, [pc, #36]	; (8004cf8 <HAL_TIM_PWM_MspInit+0xa4>)
 8004cd4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004cd6:	4a08      	ldr	r2, [pc, #32]	; (8004cf8 <HAL_TIM_PWM_MspInit+0xa4>)
 8004cd8:	f043 0308 	orr.w	r3, r3, #8
 8004cdc:	6593      	str	r3, [r2, #88]	; 0x58
 8004cde:	4b06      	ldr	r3, [pc, #24]	; (8004cf8 <HAL_TIM_PWM_MspInit+0xa4>)
 8004ce0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004ce2:	f003 0308 	and.w	r3, r3, #8
 8004ce6:	60bb      	str	r3, [r7, #8]
 8004ce8:	68bb      	ldr	r3, [r7, #8]
}
 8004cea:	bf00      	nop
 8004cec:	3728      	adds	r7, #40	; 0x28
 8004cee:	46bd      	mov	sp, r7
 8004cf0:	bd80      	pop	{r7, pc}
 8004cf2:	bf00      	nop
 8004cf4:	40000400 	.word	0x40000400
 8004cf8:	40021000 	.word	0x40021000
 8004cfc:	48000400 	.word	0x48000400
 8004d00:	40000c00 	.word	0x40000c00

08004d04 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8004d04:	b580      	push	{r7, lr}
 8004d06:	b08a      	sub	sp, #40	; 0x28
 8004d08:	af00      	add	r7, sp, #0
 8004d0a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004d0c:	f107 0314 	add.w	r3, r7, #20
 8004d10:	2200      	movs	r2, #0
 8004d12:	601a      	str	r2, [r3, #0]
 8004d14:	605a      	str	r2, [r3, #4]
 8004d16:	609a      	str	r2, [r3, #8]
 8004d18:	60da      	str	r2, [r3, #12]
 8004d1a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	4a22      	ldr	r2, [pc, #136]	; (8004dac <HAL_TIM_MspPostInit+0xa8>)
 8004d22:	4293      	cmp	r3, r2
 8004d24:	d11c      	bne.n	8004d60 <HAL_TIM_MspPostInit+0x5c>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004d26:	4b22      	ldr	r3, [pc, #136]	; (8004db0 <HAL_TIM_MspPostInit+0xac>)
 8004d28:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004d2a:	4a21      	ldr	r2, [pc, #132]	; (8004db0 <HAL_TIM_MspPostInit+0xac>)
 8004d2c:	f043 0302 	orr.w	r3, r3, #2
 8004d30:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004d32:	4b1f      	ldr	r3, [pc, #124]	; (8004db0 <HAL_TIM_MspPostInit+0xac>)
 8004d34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004d36:	f003 0302 	and.w	r3, r3, #2
 8004d3a:	613b      	str	r3, [r7, #16]
 8004d3c:	693b      	ldr	r3, [r7, #16]
    /**TIM3 GPIO Configuration
    PB5     ------> TIM3_CH2
    */
    GPIO_InitStruct.Pin = DISPL_LED_Pin;
 8004d3e:	2320      	movs	r3, #32
 8004d40:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004d42:	2302      	movs	r3, #2
 8004d44:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004d46:	2300      	movs	r3, #0
 8004d48:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004d4a:	2300      	movs	r3, #0
 8004d4c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8004d4e:	2302      	movs	r3, #2
 8004d50:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(DISPL_LED_GPIO_Port, &GPIO_InitStruct);
 8004d52:	f107 0314 	add.w	r3, r7, #20
 8004d56:	4619      	mov	r1, r3
 8004d58:	4816      	ldr	r0, [pc, #88]	; (8004db4 <HAL_TIM_MspPostInit+0xb0>)
 8004d5a:	f001 ff6f 	bl	8006c3c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 8004d5e:	e021      	b.n	8004da4 <HAL_TIM_MspPostInit+0xa0>
  else if(htim->Instance==TIM5)
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	4a14      	ldr	r2, [pc, #80]	; (8004db8 <HAL_TIM_MspPostInit+0xb4>)
 8004d66:	4293      	cmp	r3, r2
 8004d68:	d11c      	bne.n	8004da4 <HAL_TIM_MspPostInit+0xa0>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8004d6a:	4b11      	ldr	r3, [pc, #68]	; (8004db0 <HAL_TIM_MspPostInit+0xac>)
 8004d6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004d6e:	4a10      	ldr	r2, [pc, #64]	; (8004db0 <HAL_TIM_MspPostInit+0xac>)
 8004d70:	f043 0320 	orr.w	r3, r3, #32
 8004d74:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004d76:	4b0e      	ldr	r3, [pc, #56]	; (8004db0 <HAL_TIM_MspPostInit+0xac>)
 8004d78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004d7a:	f003 0320 	and.w	r3, r3, #32
 8004d7e:	60fb      	str	r3, [r7, #12]
 8004d80:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8004d82:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004d86:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004d88:	2302      	movs	r3, #2
 8004d8a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004d8c:	2300      	movs	r3, #0
 8004d8e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004d90:	2300      	movs	r3, #0
 8004d92:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 8004d94:	2302      	movs	r3, #2
 8004d96:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8004d98:	f107 0314 	add.w	r3, r7, #20
 8004d9c:	4619      	mov	r1, r3
 8004d9e:	4807      	ldr	r0, [pc, #28]	; (8004dbc <HAL_TIM_MspPostInit+0xb8>)
 8004da0:	f001 ff4c 	bl	8006c3c <HAL_GPIO_Init>
}
 8004da4:	bf00      	nop
 8004da6:	3728      	adds	r7, #40	; 0x28
 8004da8:	46bd      	mov	sp, r7
 8004daa:	bd80      	pop	{r7, pc}
 8004dac:	40000400 	.word	0x40000400
 8004db0:	40021000 	.word	0x40021000
 8004db4:	48000400 	.word	0x48000400
 8004db8:	40000c00 	.word	0x40000c00
 8004dbc:	48001400 	.word	0x48001400

08004dc0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8004dc0:	b580      	push	{r7, lr}
 8004dc2:	b0b0      	sub	sp, #192	; 0xc0
 8004dc4:	af00      	add	r7, sp, #0
 8004dc6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004dc8:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8004dcc:	2200      	movs	r2, #0
 8004dce:	601a      	str	r2, [r3, #0]
 8004dd0:	605a      	str	r2, [r3, #4]
 8004dd2:	609a      	str	r2, [r3, #8]
 8004dd4:	60da      	str	r2, [r3, #12]
 8004dd6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8004dd8:	f107 0318 	add.w	r3, r7, #24
 8004ddc:	2294      	movs	r2, #148	; 0x94
 8004dde:	2100      	movs	r1, #0
 8004de0:	4618      	mov	r0, r3
 8004de2:	f024 fa46 	bl	8029272 <memset>
  if(huart->Instance==USART2)
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	4a4a      	ldr	r2, [pc, #296]	; (8004f14 <HAL_UART_MspInit+0x154>)
 8004dec:	4293      	cmp	r3, r2
 8004dee:	d143      	bne.n	8004e78 <HAL_UART_MspInit+0xb8>

  /* USER CODE END USART2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8004df0:	2302      	movs	r3, #2
 8004df2:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8004df4:	2300      	movs	r3, #0
 8004df6:	65bb      	str	r3, [r7, #88]	; 0x58
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8004df8:	f107 0318 	add.w	r3, r7, #24
 8004dfc:	4618      	mov	r0, r3
 8004dfe:	f003 fd01 	bl	8008804 <HAL_RCCEx_PeriphCLKConfig>
 8004e02:	4603      	mov	r3, r0
 8004e04:	2b00      	cmp	r3, #0
 8004e06:	d001      	beq.n	8004e0c <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8004e08:	f7ff fb7c 	bl	8004504 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8004e0c:	4b42      	ldr	r3, [pc, #264]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004e0e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004e10:	4a41      	ldr	r2, [pc, #260]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004e12:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004e16:	6593      	str	r3, [r2, #88]	; 0x58
 8004e18:	4b3f      	ldr	r3, [pc, #252]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004e1a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004e1c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004e20:	617b      	str	r3, [r7, #20]
 8004e22:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8004e24:	4b3c      	ldr	r3, [pc, #240]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004e26:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004e28:	4a3b      	ldr	r2, [pc, #236]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004e2a:	f043 0308 	orr.w	r3, r3, #8
 8004e2e:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004e30:	4b39      	ldr	r3, [pc, #228]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004e32:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004e34:	f003 0308 	and.w	r3, r3, #8
 8004e38:	613b      	str	r3, [r7, #16]
 8004e3a:	693b      	ldr	r3, [r7, #16]
    /**USART2 GPIO Configuration
    PD5     ------> USART2_TX
    PD6     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8004e3c:	2360      	movs	r3, #96	; 0x60
 8004e3e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004e42:	2302      	movs	r3, #2
 8004e44:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004e48:	2300      	movs	r3, #0
 8004e4a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004e4e:	2303      	movs	r3, #3
 8004e50:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8004e54:	2307      	movs	r3, #7
 8004e56:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8004e5a:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8004e5e:	4619      	mov	r1, r3
 8004e60:	482e      	ldr	r0, [pc, #184]	; (8004f1c <HAL_UART_MspInit+0x15c>)
 8004e62:	f001 feeb 	bl	8006c3c <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8004e66:	2200      	movs	r2, #0
 8004e68:	2100      	movs	r1, #0
 8004e6a:	2026      	movs	r0, #38	; 0x26
 8004e6c:	f001 f871 	bl	8005f52 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8004e70:	2026      	movs	r0, #38	; 0x26
 8004e72:	f001 f88a 	bl	8005f8a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8004e76:	e048      	b.n	8004f0a <HAL_UART_MspInit+0x14a>
  else if(huart->Instance==USART3)
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	4a28      	ldr	r2, [pc, #160]	; (8004f20 <HAL_UART_MspInit+0x160>)
 8004e7e:	4293      	cmp	r3, r2
 8004e80:	d143      	bne.n	8004f0a <HAL_UART_MspInit+0x14a>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 8004e82:	2304      	movs	r3, #4
 8004e84:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 8004e86:	2300      	movs	r3, #0
 8004e88:	65fb      	str	r3, [r7, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8004e8a:	f107 0318 	add.w	r3, r7, #24
 8004e8e:	4618      	mov	r0, r3
 8004e90:	f003 fcb8 	bl	8008804 <HAL_RCCEx_PeriphCLKConfig>
 8004e94:	4603      	mov	r3, r0
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	d001      	beq.n	8004e9e <HAL_UART_MspInit+0xde>
      Error_Handler();
 8004e9a:	f7ff fb33 	bl	8004504 <Error_Handler>
    __HAL_RCC_USART3_CLK_ENABLE();
 8004e9e:	4b1e      	ldr	r3, [pc, #120]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004ea0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004ea2:	4a1d      	ldr	r2, [pc, #116]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004ea4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004ea8:	6593      	str	r3, [r2, #88]	; 0x58
 8004eaa:	4b1b      	ldr	r3, [pc, #108]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004eac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004eae:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004eb2:	60fb      	str	r3, [r7, #12]
 8004eb4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8004eb6:	4b18      	ldr	r3, [pc, #96]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004eb8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004eba:	4a17      	ldr	r2, [pc, #92]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004ebc:	f043 0308 	orr.w	r3, r3, #8
 8004ec0:	64d3      	str	r3, [r2, #76]	; 0x4c
 8004ec2:	4b15      	ldr	r3, [pc, #84]	; (8004f18 <HAL_UART_MspInit+0x158>)
 8004ec4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004ec6:	f003 0308 	and.w	r3, r3, #8
 8004eca:	60bb      	str	r3, [r7, #8]
 8004ecc:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8004ece:	f44f 7340 	mov.w	r3, #768	; 0x300
 8004ed2:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004ed6:	2302      	movs	r3, #2
 8004ed8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004edc:	2300      	movs	r3, #0
 8004ede:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004ee2:	2303      	movs	r3, #3
 8004ee4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8004ee8:	2307      	movs	r3, #7
 8004eea:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8004eee:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8004ef2:	4619      	mov	r1, r3
 8004ef4:	4809      	ldr	r0, [pc, #36]	; (8004f1c <HAL_UART_MspInit+0x15c>)
 8004ef6:	f001 fea1 	bl	8006c3c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 8004efa:	2200      	movs	r2, #0
 8004efc:	2100      	movs	r1, #0
 8004efe:	2027      	movs	r0, #39	; 0x27
 8004f00:	f001 f827 	bl	8005f52 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8004f04:	2027      	movs	r0, #39	; 0x27
 8004f06:	f001 f840 	bl	8005f8a <HAL_NVIC_EnableIRQ>
}
 8004f0a:	bf00      	nop
 8004f0c:	37c0      	adds	r7, #192	; 0xc0
 8004f0e:	46bd      	mov	sp, r7
 8004f10:	bd80      	pop	{r7, pc}
 8004f12:	bf00      	nop
 8004f14:	40004400 	.word	0x40004400
 8004f18:	40021000 	.word	0x40021000
 8004f1c:	48000c00 	.word	0x48000c00
 8004f20:	40004800 	.word	0x40004800

08004f24 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004f24:	b480      	push	{r7}
 8004f26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004f28:	e7fe      	b.n	8004f28 <NMI_Handler+0x4>

08004f2a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004f2a:	b480      	push	{r7}
 8004f2c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004f2e:	e7fe      	b.n	8004f2e <HardFault_Handler+0x4>

08004f30 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004f30:	b480      	push	{r7}
 8004f32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8004f34:	e7fe      	b.n	8004f34 <MemManage_Handler+0x4>

08004f36 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004f36:	b480      	push	{r7}
 8004f38:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8004f3a:	e7fe      	b.n	8004f3a <BusFault_Handler+0x4>

08004f3c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004f3c:	b480      	push	{r7}
 8004f3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8004f40:	e7fe      	b.n	8004f40 <UsageFault_Handler+0x4>

08004f42 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8004f42:	b480      	push	{r7}
 8004f44:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8004f46:	bf00      	nop
 8004f48:	46bd      	mov	sp, r7
 8004f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f4e:	4770      	bx	lr

08004f50 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8004f50:	b480      	push	{r7}
 8004f52:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004f54:	bf00      	nop
 8004f56:	46bd      	mov	sp, r7
 8004f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f5c:	4770      	bx	lr

08004f5e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004f5e:	b480      	push	{r7}
 8004f60:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8004f62:	bf00      	nop
 8004f64:	46bd      	mov	sp, r7
 8004f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f6a:	4770      	bx	lr

08004f6c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004f6c:	b580      	push	{r7, lr}
 8004f6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004f70:	f000 fe8e 	bl	8005c90 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004f74:	bf00      	nop
 8004f76:	bd80      	pop	{r7, pc}

08004f78 <EXTI1_IRQHandler>:

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
 8004f78:	b580      	push	{r7, lr}
 8004f7a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI1_IRQn 0 */

  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8004f7c:	2002      	movs	r0, #2
 8004f7e:	f002 f821 	bl	8006fc4 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI1_IRQn 1 */

  /* USER CODE END EXTI1_IRQn 1 */
}
 8004f82:	bf00      	nop
 8004f84:	bd80      	pop	{r7, pc}
	...

08004f88 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel1 global interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 8004f88:	b580      	push	{r7, lr}
 8004f8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8004f8c:	4802      	ldr	r0, [pc, #8]	; (8004f98 <DMA1_Channel1_IRQHandler+0x10>)
 8004f8e:	f001 fd05 	bl	800699c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8004f92:	bf00      	nop
 8004f94:	bd80      	pop	{r7, pc}
 8004f96:	bf00      	nop
 8004f98:	2000072c 	.word	0x2000072c

08004f9c <DMA1_Channel2_IRQHandler>:

/**
  * @brief This function handles DMA1 channel2 global interrupt.
  */
void DMA1_Channel2_IRQHandler(void)
{
 8004f9c:	b580      	push	{r7, lr}
 8004f9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */

  /* USER CODE END DMA1_Channel2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 8004fa0:	4802      	ldr	r0, [pc, #8]	; (8004fac <DMA1_Channel2_IRQHandler+0x10>)
 8004fa2:	f001 fcfb 	bl	800699c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */

  /* USER CODE END DMA1_Channel2_IRQn 1 */
}
 8004fa6:	bf00      	nop
 8004fa8:	bd80      	pop	{r7, pc}
 8004faa:	bf00      	nop
 8004fac:	200006cc 	.word	0x200006cc

08004fb0 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8004fb0:	b580      	push	{r7, lr}
 8004fb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8004fb4:	4802      	ldr	r0, [pc, #8]	; (8004fc0 <TIM2_IRQHandler+0x10>)
 8004fb6:	f005 fdd3 	bl	800ab60 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8004fba:	bf00      	nop
 8004fbc:	bd80      	pop	{r7, pc}
 8004fbe:	bf00      	nop
 8004fc0:	2000078c 	.word	0x2000078c

08004fc4 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8004fc4:	b580      	push	{r7, lr}
 8004fc6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8004fc8:	4802      	ldr	r0, [pc, #8]	; (8004fd4 <SPI1_IRQHandler+0x10>)
 8004fca:	f004 ff95 	bl	8009ef8 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8004fce:	bf00      	nop
 8004fd0:	bd80      	pop	{r7, pc}
 8004fd2:	bf00      	nop
 8004fd4:	20000604 	.word	0x20000604

08004fd8 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8004fd8:	b580      	push	{r7, lr}
 8004fda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8004fdc:	4802      	ldr	r0, [pc, #8]	; (8004fe8 <SPI2_IRQHandler+0x10>)
 8004fde:	f004 ff8b 	bl	8009ef8 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8004fe2:	bf00      	nop
 8004fe4:	bd80      	pop	{r7, pc}
 8004fe6:	bf00      	nop
 8004fe8:	20000668 	.word	0x20000668

08004fec <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8004fec:	b580      	push	{r7, lr}
 8004fee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8004ff0:	4802      	ldr	r0, [pc, #8]	; (8004ffc <USART2_IRQHandler+0x10>)
 8004ff2:	f006 fec3 	bl	800bd7c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8004ff6:	bf00      	nop
 8004ff8:	bd80      	pop	{r7, pc}
 8004ffa:	bf00      	nop
 8004ffc:	20000908 	.word	0x20000908

08005000 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 8005000:	b580      	push	{r7, lr}
 8005002:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 8005004:	4802      	ldr	r0, [pc, #8]	; (8005010 <USART3_IRQHandler+0x10>)
 8005006:	f006 feb9 	bl	800bd7c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 800500a:	bf00      	nop
 800500c:	bd80      	pop	{r7, pc}
 800500e:	bf00      	nop
 8005010:	2000099c 	.word	0x2000099c

08005014 <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 8005014:	b580      	push	{r7, lr}
 8005016:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */
	TIM7_ISR();
 8005018:	f7fc f8de 	bl	80011d8 <TIM7_ISR>
  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 800501c:	4802      	ldr	r0, [pc, #8]	; (8005028 <TIM7_IRQHandler+0x14>)
 800501e:	f005 fd9f 	bl	800ab60 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 8005022:	bf00      	nop
 8005024:	bd80      	pop	{r7, pc}
 8005026:	bf00      	nop
 8005028:	200008bc 	.word	0x200008bc

0800502c <_getpid>:
 800502c:	b480      	push	{r7}
 800502e:	af00      	add	r7, sp, #0
 8005030:	2301      	movs	r3, #1
 8005032:	4618      	mov	r0, r3
 8005034:	46bd      	mov	sp, r7
 8005036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800503a:	4770      	bx	lr

0800503c <_kill>:
 800503c:	b580      	push	{r7, lr}
 800503e:	b082      	sub	sp, #8
 8005040:	af00      	add	r7, sp, #0
 8005042:	6078      	str	r0, [r7, #4]
 8005044:	6039      	str	r1, [r7, #0]
 8005046:	f024 f9b7 	bl	80293b8 <__errno>
 800504a:	4603      	mov	r3, r0
 800504c:	2216      	movs	r2, #22
 800504e:	601a      	str	r2, [r3, #0]
 8005050:	f04f 33ff 	mov.w	r3, #4294967295
 8005054:	4618      	mov	r0, r3
 8005056:	3708      	adds	r7, #8
 8005058:	46bd      	mov	sp, r7
 800505a:	bd80      	pop	{r7, pc}

0800505c <_exit>:
 800505c:	b580      	push	{r7, lr}
 800505e:	b082      	sub	sp, #8
 8005060:	af00      	add	r7, sp, #0
 8005062:	6078      	str	r0, [r7, #4]
 8005064:	f04f 31ff 	mov.w	r1, #4294967295
 8005068:	6878      	ldr	r0, [r7, #4]
 800506a:	f7ff ffe7 	bl	800503c <_kill>
 800506e:	e7fe      	b.n	800506e <_exit+0x12>

08005070 <_read>:
 8005070:	b580      	push	{r7, lr}
 8005072:	b086      	sub	sp, #24
 8005074:	af00      	add	r7, sp, #0
 8005076:	60f8      	str	r0, [r7, #12]
 8005078:	60b9      	str	r1, [r7, #8]
 800507a:	607a      	str	r2, [r7, #4]
 800507c:	2300      	movs	r3, #0
 800507e:	617b      	str	r3, [r7, #20]
 8005080:	e00a      	b.n	8005098 <_read+0x28>
 8005082:	f3af 8000 	nop.w
 8005086:	4601      	mov	r1, r0
 8005088:	68bb      	ldr	r3, [r7, #8]
 800508a:	1c5a      	adds	r2, r3, #1
 800508c:	60ba      	str	r2, [r7, #8]
 800508e:	b2ca      	uxtb	r2, r1
 8005090:	701a      	strb	r2, [r3, #0]
 8005092:	697b      	ldr	r3, [r7, #20]
 8005094:	3301      	adds	r3, #1
 8005096:	617b      	str	r3, [r7, #20]
 8005098:	697a      	ldr	r2, [r7, #20]
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	429a      	cmp	r2, r3
 800509e:	dbf0      	blt.n	8005082 <_read+0x12>
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	4618      	mov	r0, r3
 80050a4:	3718      	adds	r7, #24
 80050a6:	46bd      	mov	sp, r7
 80050a8:	bd80      	pop	{r7, pc}

080050aa <_write>:
 80050aa:	b580      	push	{r7, lr}
 80050ac:	b086      	sub	sp, #24
 80050ae:	af00      	add	r7, sp, #0
 80050b0:	60f8      	str	r0, [r7, #12]
 80050b2:	60b9      	str	r1, [r7, #8]
 80050b4:	607a      	str	r2, [r7, #4]
 80050b6:	2300      	movs	r3, #0
 80050b8:	617b      	str	r3, [r7, #20]
 80050ba:	e009      	b.n	80050d0 <_write+0x26>
 80050bc:	68bb      	ldr	r3, [r7, #8]
 80050be:	1c5a      	adds	r2, r3, #1
 80050c0:	60ba      	str	r2, [r7, #8]
 80050c2:	781b      	ldrb	r3, [r3, #0]
 80050c4:	4618      	mov	r0, r3
 80050c6:	f3af 8000 	nop.w
 80050ca:	697b      	ldr	r3, [r7, #20]
 80050cc:	3301      	adds	r3, #1
 80050ce:	617b      	str	r3, [r7, #20]
 80050d0:	697a      	ldr	r2, [r7, #20]
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	429a      	cmp	r2, r3
 80050d6:	dbf1      	blt.n	80050bc <_write+0x12>
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	4618      	mov	r0, r3
 80050dc:	3718      	adds	r7, #24
 80050de:	46bd      	mov	sp, r7
 80050e0:	bd80      	pop	{r7, pc}

080050e2 <_close>:
 80050e2:	b480      	push	{r7}
 80050e4:	b083      	sub	sp, #12
 80050e6:	af00      	add	r7, sp, #0
 80050e8:	6078      	str	r0, [r7, #4]
 80050ea:	f04f 33ff 	mov.w	r3, #4294967295
 80050ee:	4618      	mov	r0, r3
 80050f0:	370c      	adds	r7, #12
 80050f2:	46bd      	mov	sp, r7
 80050f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050f8:	4770      	bx	lr

080050fa <_fstat>:
 80050fa:	b480      	push	{r7}
 80050fc:	b083      	sub	sp, #12
 80050fe:	af00      	add	r7, sp, #0
 8005100:	6078      	str	r0, [r7, #4]
 8005102:	6039      	str	r1, [r7, #0]
 8005104:	683b      	ldr	r3, [r7, #0]
 8005106:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800510a:	605a      	str	r2, [r3, #4]
 800510c:	2300      	movs	r3, #0
 800510e:	4618      	mov	r0, r3
 8005110:	370c      	adds	r7, #12
 8005112:	46bd      	mov	sp, r7
 8005114:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005118:	4770      	bx	lr

0800511a <_isatty>:
 800511a:	b480      	push	{r7}
 800511c:	b083      	sub	sp, #12
 800511e:	af00      	add	r7, sp, #0
 8005120:	6078      	str	r0, [r7, #4]
 8005122:	2301      	movs	r3, #1
 8005124:	4618      	mov	r0, r3
 8005126:	370c      	adds	r7, #12
 8005128:	46bd      	mov	sp, r7
 800512a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800512e:	4770      	bx	lr

08005130 <_lseek>:
 8005130:	b480      	push	{r7}
 8005132:	b085      	sub	sp, #20
 8005134:	af00      	add	r7, sp, #0
 8005136:	60f8      	str	r0, [r7, #12]
 8005138:	60b9      	str	r1, [r7, #8]
 800513a:	607a      	str	r2, [r7, #4]
 800513c:	2300      	movs	r3, #0
 800513e:	4618      	mov	r0, r3
 8005140:	3714      	adds	r7, #20
 8005142:	46bd      	mov	sp, r7
 8005144:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005148:	4770      	bx	lr
	...

0800514c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800514c:	b580      	push	{r7, lr}
 800514e:	b086      	sub	sp, #24
 8005150:	af00      	add	r7, sp, #0
 8005152:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8005154:	4a14      	ldr	r2, [pc, #80]	; (80051a8 <_sbrk+0x5c>)
 8005156:	4b15      	ldr	r3, [pc, #84]	; (80051ac <_sbrk+0x60>)
 8005158:	1ad3      	subs	r3, r2, r3
 800515a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800515c:	697b      	ldr	r3, [r7, #20]
 800515e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8005160:	4b13      	ldr	r3, [pc, #76]	; (80051b0 <_sbrk+0x64>)
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	2b00      	cmp	r3, #0
 8005166:	d102      	bne.n	800516e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8005168:	4b11      	ldr	r3, [pc, #68]	; (80051b0 <_sbrk+0x64>)
 800516a:	4a12      	ldr	r2, [pc, #72]	; (80051b4 <_sbrk+0x68>)
 800516c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800516e:	4b10      	ldr	r3, [pc, #64]	; (80051b0 <_sbrk+0x64>)
 8005170:	681a      	ldr	r2, [r3, #0]
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	4413      	add	r3, r2
 8005176:	693a      	ldr	r2, [r7, #16]
 8005178:	429a      	cmp	r2, r3
 800517a:	d207      	bcs.n	800518c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800517c:	f024 f91c 	bl	80293b8 <__errno>
 8005180:	4603      	mov	r3, r0
 8005182:	220c      	movs	r2, #12
 8005184:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8005186:	f04f 33ff 	mov.w	r3, #4294967295
 800518a:	e009      	b.n	80051a0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800518c:	4b08      	ldr	r3, [pc, #32]	; (80051b0 <_sbrk+0x64>)
 800518e:	681b      	ldr	r3, [r3, #0]
 8005190:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8005192:	4b07      	ldr	r3, [pc, #28]	; (80051b0 <_sbrk+0x64>)
 8005194:	681a      	ldr	r2, [r3, #0]
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	4413      	add	r3, r2
 800519a:	4a05      	ldr	r2, [pc, #20]	; (80051b0 <_sbrk+0x64>)
 800519c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800519e:	68fb      	ldr	r3, [r7, #12]
}
 80051a0:	4618      	mov	r0, r3
 80051a2:	3718      	adds	r7, #24
 80051a4:	46bd      	mov	sp, r7
 80051a6:	bd80      	pop	{r7, pc}
 80051a8:	200a0000 	.word	0x200a0000
 80051ac:	00000400 	.word	0x00000400
 80051b0:	20023d0c 	.word	0x20023d0c
 80051b4:	200265c8 	.word	0x200265c8

080051b8 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 80051b8:	b480      	push	{r7}
 80051ba:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 80051bc:	4b06      	ldr	r3, [pc, #24]	; (80051d8 <SystemInit+0x20>)
 80051be:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80051c2:	4a05      	ldr	r2, [pc, #20]	; (80051d8 <SystemInit+0x20>)
 80051c4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80051c8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
#endif
}
 80051cc:	bf00      	nop
 80051ce:	46bd      	mov	sp, r7
 80051d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051d4:	4770      	bx	lr
 80051d6:	bf00      	nop
 80051d8:	e000ed00 	.word	0xe000ed00

080051dc <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 80051dc:	b480      	push	{r7}
 80051de:	af00      	add	r7, sp, #0
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
		}
	}
}
 80051e0:	bf00      	nop
 80051e2:	46bd      	mov	sp, r7
 80051e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051e8:	4770      	bx	lr
	...

080051ec <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 80051ec:	b580      	push	{r7, lr}
 80051ee:	b086      	sub	sp, #24
 80051f0:	af00      	add	r7, sp, #0
 80051f2:	6039      	str	r1, [r7, #0]
 80051f4:	4611      	mov	r1, r2
 80051f6:	461a      	mov	r2, r3
 80051f8:	4603      	mov	r3, r0
 80051fa:	71fb      	strb	r3, [r7, #7]
 80051fc:	460b      	mov	r3, r1
 80051fe:	80bb      	strh	r3, [r7, #4]
 8005200:	4613      	mov	r3, r2
 8005202:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8005204:	bf00      	nop
 8005206:	4b25      	ldr	r3, [pc, #148]	; (800529c <Displ_Transmit+0xb0>)
 8005208:	781b      	ldrb	r3, [r3, #0]
 800520a:	b2db      	uxtb	r3, r3
 800520c:	2b00      	cmp	r3, #0
 800520e:	d0fa      	beq.n	8005206 <Displ_Transmit+0x1a>

	Displ_Select();
 8005210:	f7ff ffe4 	bl	80051dc <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 8005214:	79fb      	ldrb	r3, [r7, #7]
 8005216:	461a      	mov	r2, r3
 8005218:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800521c:	4820      	ldr	r0, [pc, #128]	; (80052a0 <Displ_Transmit+0xb4>)
 800521e:	f001 fe9f 	bl	8006f60 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 8005222:	79bb      	ldrb	r3, [r7, #6]
 8005224:	2b00      	cmp	r3, #0
 8005226:	d016      	beq.n	8005256 <Displ_Transmit+0x6a>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 8005228:	88bb      	ldrh	r3, [r7, #4]
 800522a:	683a      	ldr	r2, [r7, #0]
 800522c:	4413      	add	r3, r2
 800522e:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8005230:	683b      	ldr	r3, [r7, #0]
 8005232:	617b      	str	r3, [r7, #20]
 8005234:	e00b      	b.n	800524e <Displ_Transmit+0x62>
			*data32=__REV16(*data32);
 8005236:	697b      	ldr	r3, [r7, #20]
 8005238:	681b      	ldr	r3, [r3, #0]
 800523a:	60fb      	str	r3, [r7, #12]
 */
__STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	ba5b      	rev16	r3, r3
 8005240:	60bb      	str	r3, [r7, #8]
  return result;
 8005242:	68ba      	ldr	r2, [r7, #8]
 8005244:	697b      	ldr	r3, [r7, #20]
 8005246:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8005248:	697b      	ldr	r3, [r7, #20]
 800524a:	3304      	adds	r3, #4
 800524c:	617b      	str	r3, [r7, #20]
 800524e:	697a      	ldr	r2, [r7, #20]
 8005250:	693b      	ldr	r3, [r7, #16]
 8005252:	429a      	cmp	r2, r3
 8005254:	d3ef      	bcc.n	8005236 <Displ_Transmit+0x4a>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 8005256:	88bb      	ldrh	r3, [r7, #4]
 8005258:	2b13      	cmp	r3, #19
 800525a:	d812      	bhi.n	8005282 <Displ_Transmit+0x96>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 800525c:	4b0f      	ldr	r3, [pc, #60]	; (800529c <Displ_Transmit+0xb0>)
 800525e:	2200      	movs	r2, #0
 8005260:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 8005262:	88ba      	ldrh	r2, [r7, #4]
 8005264:	f04f 33ff 	mov.w	r3, #4294967295
 8005268:	6839      	ldr	r1, [r7, #0]
 800526a:	480e      	ldr	r0, [pc, #56]	; (80052a4 <Displ_Transmit+0xb8>)
 800526c:	f004 f885 	bl	800937a <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 8005270:	4b0a      	ldr	r3, [pc, #40]	; (800529c <Displ_Transmit+0xb0>)
 8005272:	2201      	movs	r2, #1
 8005274:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 8005276:	79bb      	ldrb	r3, [r7, #6]
 8005278:	2b00      	cmp	r3, #0
 800527a:	d00b      	beq.n	8005294 <Displ_Transmit+0xa8>
				DisplayDriver_TransferCompleteCallback();
 800527c:	f00d fa78 	bl	8012770 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 8005280:	e008      	b.n	8005294 <Displ_Transmit+0xa8>
			Displ_SpiAvailable=0;
 8005282:	4b06      	ldr	r3, [pc, #24]	; (800529c <Displ_Transmit+0xb0>)
 8005284:	2200      	movs	r2, #0
 8005286:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 8005288:	88bb      	ldrh	r3, [r7, #4]
 800528a:	461a      	mov	r2, r3
 800528c:	6839      	ldr	r1, [r7, #0]
 800528e:	4805      	ldr	r0, [pc, #20]	; (80052a4 <Displ_Transmit+0xb8>)
 8005290:	f004 fd42 	bl	8009d18 <HAL_SPI_Transmit_DMA>
	}
 8005294:	bf00      	nop
 8005296:	3718      	adds	r7, #24
 8005298:	46bd      	mov	sp, r7
 800529a:	bd80      	pop	{r7, pc}
 800529c:	2000028c 	.word	0x2000028c
 80052a0:	48001400 	.word	0x48001400
 80052a4:	20000604 	.word	0x20000604

080052a8 <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 80052a8:	b580      	push	{r7, lr}
 80052aa:	b082      	sub	sp, #8
 80052ac:	af00      	add	r7, sp, #0
 80052ae:	4603      	mov	r3, r0
 80052b0:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 80052b2:	1df9      	adds	r1, r7, #7
 80052b4:	2300      	movs	r3, #0
 80052b6:	2201      	movs	r2, #1
 80052b8:	2000      	movs	r0, #0
 80052ba:	f7ff ff97 	bl	80051ec <Displ_Transmit>
}
 80052be:	bf00      	nop
 80052c0:	3708      	adds	r7, #8
 80052c2:	46bd      	mov	sp, r7
 80052c4:	bd80      	pop	{r7, pc}

080052c6 <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 80052c6:	b580      	push	{r7, lr}
 80052c8:	b084      	sub	sp, #16
 80052ca:	af00      	add	r7, sp, #0
 80052cc:	60f8      	str	r0, [r7, #12]
 80052ce:	60b9      	str	r1, [r7, #8]
 80052d0:	4613      	mov	r3, r2
 80052d2:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 80052d4:	68bb      	ldr	r3, [r7, #8]
 80052d6:	2b00      	cmp	r3, #0
 80052d8:	d007      	beq.n	80052ea <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 80052da:	68bb      	ldr	r3, [r7, #8]
 80052dc:	b29a      	uxth	r2, r3
 80052de:	79fb      	ldrb	r3, [r7, #7]
 80052e0:	68f9      	ldr	r1, [r7, #12]
 80052e2:	2001      	movs	r0, #1
 80052e4:	f7ff ff82 	bl	80051ec <Displ_Transmit>
 80052e8:	e000      	b.n	80052ec <Displ_WriteData+0x26>
	if (buff_size==0) return;
 80052ea:	bf00      	nop
}
 80052ec:	3710      	adds	r7, #16
 80052ee:	46bd      	mov	sp, r7
 80052f0:	bd80      	pop	{r7, pc}
	...

080052f4 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 80052f4:	b580      	push	{r7, lr}
 80052f6:	af00      	add	r7, sp, #0
	Displ_Select();
 80052f8:	f7ff ff70 	bl	80051dc <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 80052fc:	2200      	movs	r2, #0
 80052fe:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8005302:	481a      	ldr	r0, [pc, #104]	; (800536c <ILI9XXX_Init+0x78>)
 8005304:	f001 fe2c 	bl	8006f60 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8005308:	2001      	movs	r0, #1
 800530a:	f000 fce1 	bl	8005cd0 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 800530e:	2201      	movs	r2, #1
 8005310:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8005314:	4815      	ldr	r0, [pc, #84]	; (800536c <ILI9XXX_Init+0x78>)
 8005316:	f001 fe23 	bl	8006f60 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 800531a:	2096      	movs	r0, #150	; 0x96
 800531c:	f000 fcd8 	bl	8005cd0 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 8005320:	203a      	movs	r0, #58	; 0x3a
 8005322:	f7ff ffc1 	bl	80052a8 <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 8005326:	2200      	movs	r2, #0
 8005328:	2101      	movs	r1, #1
 800532a:	4811      	ldr	r0, [pc, #68]	; (8005370 <ILI9XXX_Init+0x7c>)
 800532c:	f7ff ffcb 	bl	80052c6 <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8005330:	20b0      	movs	r0, #176	; 0xb0
 8005332:	f7ff ffb9 	bl	80052a8 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8005336:	2200      	movs	r2, #0
 8005338:	2101      	movs	r1, #1
 800533a:	480e      	ldr	r0, [pc, #56]	; (8005374 <ILI9XXX_Init+0x80>)
 800533c:	f7ff ffc3 	bl	80052c6 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8005340:	20b0      	movs	r0, #176	; 0xb0
 8005342:	f7ff ffb1 	bl	80052a8 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8005346:	2200      	movs	r2, #0
 8005348:	2101      	movs	r1, #1
 800534a:	480a      	ldr	r0, [pc, #40]	; (8005374 <ILI9XXX_Init+0x80>)
 800534c:	f7ff ffbb 	bl	80052c6 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 8005350:	2011      	movs	r0, #17
 8005352:	f7ff ffa9 	bl	80052a8 <Displ_WriteCommand>
	HAL_Delay(120);
 8005356:	2078      	movs	r0, #120	; 0x78
 8005358:	f000 fcba 	bl	8005cd0 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 800535c:	2029      	movs	r0, #41	; 0x29
 800535e:	f7ff ffa3 	bl	80052a8 <Displ_WriteCommand>
	HAL_Delay(5);
 8005362:	2005      	movs	r0, #5
 8005364:	f000 fcb4 	bl	8005cd0 <HAL_Delay>

}
 8005368:	bf00      	nop
 800536a:	bd80      	pop	{r7, pc}
 800536c:	48001400 	.word	0x48001400
 8005370:	08029ed8 	.word	0x08029ed8
 8005374:	08029edc 	.word	0x08029edc

08005378 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 8005378:	b590      	push	{r4, r7, lr}
 800537a:	b083      	sub	sp, #12
 800537c:	af00      	add	r7, sp, #0
 800537e:	4604      	mov	r4, r0
 8005380:	4608      	mov	r0, r1
 8005382:	4611      	mov	r1, r2
 8005384:	461a      	mov	r2, r3
 8005386:	4623      	mov	r3, r4
 8005388:	80fb      	strh	r3, [r7, #6]
 800538a:	4603      	mov	r3, r0
 800538c:	80bb      	strh	r3, [r7, #4]
 800538e:	460b      	mov	r3, r1
 8005390:	807b      	strh	r3, [r7, #2]
 8005392:	4613      	mov	r3, r2
 8005394:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 8005396:	887b      	ldrh	r3, [r7, #2]
 8005398:	061a      	lsls	r2, r3, #24
 800539a:	887b      	ldrh	r3, [r7, #2]
 800539c:	021b      	lsls	r3, r3, #8
 800539e:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80053a2:	431a      	orrs	r2, r3
 80053a4:	88fb      	ldrh	r3, [r7, #6]
 80053a6:	021b      	lsls	r3, r3, #8
 80053a8:	b29b      	uxth	r3, r3
 80053aa:	4313      	orrs	r3, r2
 80053ac:	88fa      	ldrh	r2, [r7, #6]
 80053ae:	0a12      	lsrs	r2, r2, #8
 80053b0:	b292      	uxth	r2, r2
 80053b2:	431a      	orrs	r2, r3
 80053b4:	4b14      	ldr	r3, [pc, #80]	; (8005408 <Displ_SetAddressWindow+0x90>)
 80053b6:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 80053b8:	202a      	movs	r0, #42	; 0x2a
 80053ba:	f7ff ff75 	bl	80052a8 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 80053be:	2200      	movs	r2, #0
 80053c0:	2104      	movs	r1, #4
 80053c2:	4811      	ldr	r0, [pc, #68]	; (8005408 <Displ_SetAddressWindow+0x90>)
 80053c4:	f7ff ff7f 	bl	80052c6 <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 80053c8:	883b      	ldrh	r3, [r7, #0]
 80053ca:	061a      	lsls	r2, r3, #24
 80053cc:	883b      	ldrh	r3, [r7, #0]
 80053ce:	021b      	lsls	r3, r3, #8
 80053d0:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80053d4:	431a      	orrs	r2, r3
 80053d6:	88bb      	ldrh	r3, [r7, #4]
 80053d8:	021b      	lsls	r3, r3, #8
 80053da:	b29b      	uxth	r3, r3
 80053dc:	4313      	orrs	r3, r2
 80053de:	88ba      	ldrh	r2, [r7, #4]
 80053e0:	0a12      	lsrs	r2, r2, #8
 80053e2:	b292      	uxth	r2, r2
 80053e4:	431a      	orrs	r2, r3
 80053e6:	4b08      	ldr	r3, [pc, #32]	; (8005408 <Displ_SetAddressWindow+0x90>)
 80053e8:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 80053ea:	202b      	movs	r0, #43	; 0x2b
 80053ec:	f7ff ff5c 	bl	80052a8 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 80053f0:	2200      	movs	r2, #0
 80053f2:	2104      	movs	r1, #4
 80053f4:	4804      	ldr	r0, [pc, #16]	; (8005408 <Displ_SetAddressWindow+0x90>)
 80053f6:	f7ff ff66 	bl	80052c6 <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 80053fa:	202c      	movs	r0, #44	; 0x2c
 80053fc:	f7ff ff54 	bl	80052a8 <Displ_WriteCommand>
}
 8005400:	bf00      	nop
 8005402:	370c      	adds	r7, #12
 8005404:	46bd      	mov	sp, r7
 8005406:	bd90      	pop	{r4, r7, pc}
 8005408:	20023d18 	.word	0x20023d18

0800540c <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 800540c:	b580      	push	{r7, lr}
 800540e:	b082      	sub	sp, #8
 8005410:	af00      	add	r7, sp, #0
 8005412:	4603      	mov	r3, r0
 8005414:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
	} else {																	// otherwise leave both port permanently selected
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
 8005416:	2200      	movs	r2, #0
 8005418:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800541c:	4816      	ldr	r0, [pc, #88]	; (8005478 <Displ_Init+0x6c>)
 800541e:	f001 fd9f 	bl	8006f60 <HAL_GPIO_WritePin>
		SET_DISPL_SPI_BAUDRATE;
 8005422:	4b16      	ldr	r3, [pc, #88]	; (800547c <Displ_Init+0x70>)
 8005424:	681a      	ldr	r2, [r3, #0]
 8005426:	4915      	ldr	r1, [pc, #84]	; (800547c <Displ_Init+0x70>)
 8005428:	f64f 73c7 	movw	r3, #65479	; 0xffc7
 800542c:	4013      	ands	r3, r2
 800542e:	600b      	str	r3, [r1, #0]
 8005430:	4b12      	ldr	r3, [pc, #72]	; (800547c <Displ_Init+0x70>)
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	4a11      	ldr	r2, [pc, #68]	; (800547c <Displ_Init+0x70>)
 8005436:	f043 0308 	orr.w	r3, r3, #8
 800543a:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
 800543c:	2200      	movs	r2, #0
 800543e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8005442:	480f      	ldr	r0, [pc, #60]	; (8005480 <Displ_Init+0x74>)
 8005444:	f001 fd8c 	bl	8006f60 <HAL_GPIO_WritePin>
		SET_TOUCH_SPI_BAUDRATE;
 8005448:	4b0e      	ldr	r3, [pc, #56]	; (8005484 <Displ_Init+0x78>)
 800544a:	681a      	ldr	r2, [r3, #0]
 800544c:	490d      	ldr	r1, [pc, #52]	; (8005484 <Displ_Init+0x78>)
 800544e:	f64f 73c7 	movw	r3, #65479	; 0xffc7
 8005452:	4013      	ands	r3, r2
 8005454:	600b      	str	r3, [r1, #0]
 8005456:	4b0b      	ldr	r3, [pc, #44]	; (8005484 <Displ_Init+0x78>)
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	4a0a      	ldr	r2, [pc, #40]	; (8005484 <Displ_Init+0x78>)
 800545c:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8005460:	6013      	str	r3, [r2, #0]
	}
	ILI9XXX_Init();
 8005462:	f7ff ff47 	bl	80052f4 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 8005466:	79fb      	ldrb	r3, [r7, #7]
 8005468:	4618      	mov	r0, r3
 800546a:	f000 f80d 	bl	8005488 <Displ_Orientation>
}
 800546e:	bf00      	nop
 8005470:	3708      	adds	r7, #8
 8005472:	46bd      	mov	sp, r7
 8005474:	bd80      	pop	{r7, pc}
 8005476:	bf00      	nop
 8005478:	48001400 	.word	0x48001400
 800547c:	40013000 	.word	0x40013000
 8005480:	48001000 	.word	0x48001000
 8005484:	40003800 	.word	0x40003800

08005488 <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 8005488:	b580      	push	{r7, lr}
 800548a:	b082      	sub	sp, #8
 800548c:	af00      	add	r7, sp, #0
 800548e:	4603      	mov	r3, r0
 8005490:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 8005492:	79fb      	ldrb	r3, [r7, #7]
 8005494:	2b03      	cmp	r3, #3
 8005496:	d837      	bhi.n	8005508 <Displ_Orientation+0x80>
 8005498:	a201      	add	r2, pc, #4	; (adr r2, 80054a0 <Displ_Orientation+0x18>)
 800549a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800549e:	bf00      	nop
 80054a0:	080054b1 	.word	0x080054b1
 80054a4:	080054c7 	.word	0x080054c7
 80054a8:	080054dd 	.word	0x080054dd
 80054ac:	080054f3 	.word	0x080054f3
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 80054b0:	4b1d      	ldr	r3, [pc, #116]	; (8005528 <Displ_Orientation+0xa0>)
 80054b2:	2288      	movs	r2, #136	; 0x88
 80054b4:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80054b6:	4b1d      	ldr	r3, [pc, #116]	; (800552c <Displ_Orientation+0xa4>)
 80054b8:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80054bc:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80054be:	4b1c      	ldr	r3, [pc, #112]	; (8005530 <Displ_Orientation+0xa8>)
 80054c0:	22f0      	movs	r2, #240	; 0xf0
 80054c2:	801a      	strh	r2, [r3, #0]
			break;
 80054c4:	e020      	b.n	8005508 <Displ_Orientation+0x80>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 80054c6:	4b18      	ldr	r3, [pc, #96]	; (8005528 <Displ_Orientation+0xa0>)
 80054c8:	22e8      	movs	r2, #232	; 0xe8
 80054ca:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80054cc:	4b17      	ldr	r3, [pc, #92]	; (800552c <Displ_Orientation+0xa4>)
 80054ce:	22f0      	movs	r2, #240	; 0xf0
 80054d0:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80054d2:	4b17      	ldr	r3, [pc, #92]	; (8005530 <Displ_Orientation+0xa8>)
 80054d4:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80054d8:	801a      	strh	r2, [r3, #0]
			break;
 80054da:	e015      	b.n	8005508 <Displ_Orientation+0x80>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 80054dc:	4b12      	ldr	r3, [pc, #72]	; (8005528 <Displ_Orientation+0xa0>)
 80054de:	2248      	movs	r2, #72	; 0x48
 80054e0:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80054e2:	4b12      	ldr	r3, [pc, #72]	; (800552c <Displ_Orientation+0xa4>)
 80054e4:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80054e8:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80054ea:	4b11      	ldr	r3, [pc, #68]	; (8005530 <Displ_Orientation+0xa8>)
 80054ec:	22f0      	movs	r2, #240	; 0xf0
 80054ee:	801a      	strh	r2, [r3, #0]
			break;
 80054f0:	e00a      	b.n	8005508 <Displ_Orientation+0x80>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 80054f2:	4b0d      	ldr	r3, [pc, #52]	; (8005528 <Displ_Orientation+0xa0>)
 80054f4:	2228      	movs	r2, #40	; 0x28
 80054f6:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80054f8:	4b0c      	ldr	r3, [pc, #48]	; (800552c <Displ_Orientation+0xa4>)
 80054fa:	22f0      	movs	r2, #240	; 0xf0
 80054fc:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80054fe:	4b0c      	ldr	r3, [pc, #48]	; (8005530 <Displ_Orientation+0xa8>)
 8005500:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8005504:	801a      	strh	r2, [r3, #0]
			break;
 8005506:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 8005508:	2036      	movs	r0, #54	; 0x36
 800550a:	f7ff fecd 	bl	80052a8 <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 800550e:	2200      	movs	r2, #0
 8005510:	2101      	movs	r1, #1
 8005512:	4805      	ldr	r0, [pc, #20]	; (8005528 <Displ_Orientation+0xa0>)
 8005514:	f7ff fed7 	bl	80052c6 <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 8005518:	4a06      	ldr	r2, [pc, #24]	; (8005534 <Displ_Orientation+0xac>)
 800551a:	79fb      	ldrb	r3, [r7, #7]
 800551c:	7013      	strb	r3, [r2, #0]
}
 800551e:	bf00      	nop
 8005520:	3708      	adds	r7, #8
 8005522:	46bd      	mov	sp, r7
 8005524:	bd80      	pop	{r7, pc}
 8005526:	bf00      	nop
 8005528:	20023d1c 	.word	0x20023d1c
 800552c:	20023d14 	.word	0x20023d14
 8005530:	20023d12 	.word	0x20023d12
 8005534:	20023d10 	.word	0x20023d10

08005538 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 8005538:	b480      	push	{r7}
 800553a:	b083      	sub	sp, #12
 800553c:	af00      	add	r7, sp, #0
 800553e:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	681b      	ldr	r3, [r3, #0]
 8005544:	4a05      	ldr	r2, [pc, #20]	; (800555c <HAL_SPI_ErrorCallback+0x24>)
 8005546:	4293      	cmp	r3, r2
 8005548:	d102      	bne.n	8005550 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 800554a:	4b05      	ldr	r3, [pc, #20]	; (8005560 <HAL_SPI_ErrorCallback+0x28>)
 800554c:	2201      	movs	r2, #1
 800554e:	701a      	strb	r2, [r3, #0]
	}
}
 8005550:	bf00      	nop
 8005552:	370c      	adds	r7, #12
 8005554:	46bd      	mov	sp, r7
 8005556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800555a:	4770      	bx	lr
 800555c:	40013000 	.word	0x40013000
 8005560:	2000028c 	.word	0x2000028c

08005564 <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 8005564:	b580      	push	{r7, lr}
 8005566:	b082      	sub	sp, #8
 8005568:	af00      	add	r7, sp, #0
 800556a:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	4a05      	ldr	r2, [pc, #20]	; (8005588 <HAL_SPI_TxCpltCallback+0x24>)
 8005572:	4293      	cmp	r3, r2
 8005574:	d104      	bne.n	8005580 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 8005576:	4b05      	ldr	r3, [pc, #20]	; (800558c <HAL_SPI_TxCpltCallback+0x28>)
 8005578:	2201      	movs	r2, #1
 800557a:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 800557c:	f00d f8f8 	bl	8012770 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 8005580:	bf00      	nop
 8005582:	3708      	adds	r7, #8
 8005584:	46bd      	mov	sp, r7
 8005586:	bd80      	pop	{r7, pc}
 8005588:	40013000 	.word	0x40013000
 800558c:	2000028c 	.word	0x2000028c

08005590 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 8005590:	b580      	push	{r7, lr}
 8005592:	b082      	sub	sp, #8
 8005594:	af00      	add	r7, sp, #0
 8005596:	4603      	mov	r3, r0
 8005598:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 800559a:	79fb      	ldrb	r3, [r7, #7]
 800559c:	3b2b      	subs	r3, #43	; 0x2b
 800559e:	2b2c      	cmp	r3, #44	; 0x2c
 80055a0:	f200 80a0 	bhi.w	80056e4 <Displ_BackLight+0x154>
 80055a4:	a201      	add	r2, pc, #4	; (adr r2, 80055ac <Displ_BackLight+0x1c>)
 80055a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80055aa:	bf00      	nop
 80055ac:	0800569b 	.word	0x0800569b
 80055b0:	080056e5 	.word	0x080056e5
 80055b4:	080056bb 	.word	0x080056bb
 80055b8:	080056e5 	.word	0x080056e5
 80055bc:	080056e5 	.word	0x080056e5
 80055c0:	0800566f 	.word	0x0800566f
 80055c4:	08005665 	.word	0x08005665
 80055c8:	080056e5 	.word	0x080056e5
 80055cc:	080056e5 	.word	0x080056e5
 80055d0:	080056e5 	.word	0x080056e5
 80055d4:	080056e5 	.word	0x080056e5
 80055d8:	080056e5 	.word	0x080056e5
 80055dc:	080056e5 	.word	0x080056e5
 80055e0:	080056e5 	.word	0x080056e5
 80055e4:	080056e5 	.word	0x080056e5
 80055e8:	080056e5 	.word	0x080056e5
 80055ec:	080056e5 	.word	0x080056e5
 80055f0:	080056e5 	.word	0x080056e5
 80055f4:	080056e5 	.word	0x080056e5
 80055f8:	080056e5 	.word	0x080056e5
 80055fc:	080056e5 	.word	0x080056e5
 8005600:	080056e5 	.word	0x080056e5
 8005604:	080056e5 	.word	0x080056e5
 8005608:	080056e5 	.word	0x080056e5
 800560c:	080056e5 	.word	0x080056e5
 8005610:	080056e5 	.word	0x080056e5
 8005614:	080056e5 	.word	0x080056e5
 8005618:	08005665 	.word	0x08005665
 800561c:	080056e5 	.word	0x080056e5
 8005620:	080056e5 	.word	0x080056e5
 8005624:	080056d5 	.word	0x080056d5
 8005628:	080056e5 	.word	0x080056e5
 800562c:	080056e5 	.word	0x080056e5
 8005630:	080056e5 	.word	0x080056e5
 8005634:	080056e5 	.word	0x080056e5
 8005638:	080056e5 	.word	0x080056e5
 800563c:	080056e5 	.word	0x080056e5
 8005640:	080056e5 	.word	0x080056e5
 8005644:	08005661 	.word	0x08005661
 8005648:	080056e5 	.word	0x080056e5
 800564c:	08005681 	.word	0x08005681
 8005650:	080056e5 	.word	0x080056e5
 8005654:	080056e5 	.word	0x080056e5
 8005658:	080056e5 	.word	0x080056e5
 800565c:	08005677 	.word	0x08005677
	case 'Q':
		__NOP();
 8005660:	bf00      	nop
		break;
 8005662:	e042      	b.n	80056ea <Displ_BackLight+0x15a>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
		break;
#else
	case 'F':
	case '1':
		BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 8005664:	4b24      	ldr	r3, [pc, #144]	; (80056f8 <Displ_BackLight+0x168>)
 8005666:	4a24      	ldr	r2, [pc, #144]	; (80056f8 <Displ_BackLight+0x168>)
 8005668:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800566a:	6393      	str	r3, [r2, #56]	; 0x38
		break;
 800566c:	e03d      	b.n	80056ea <Displ_BackLight+0x15a>
	case '0':
		BKLIT_TIMER->BKLIT_CCR=0;
 800566e:	4b22      	ldr	r3, [pc, #136]	; (80056f8 <Displ_BackLight+0x168>)
 8005670:	2200      	movs	r2, #0
 8005672:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 8005674:	e039      	b.n	80056ea <Displ_BackLight+0x15a>
	case 'W':
		BKLIT_TIMER->BKLIT_CCR=memCCR1;					//restore previous level
 8005676:	4b21      	ldr	r3, [pc, #132]	; (80056fc <Displ_BackLight+0x16c>)
 8005678:	881a      	ldrh	r2, [r3, #0]
 800567a:	4b1f      	ldr	r3, [pc, #124]	; (80056f8 <Displ_BackLight+0x168>)
 800567c:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 800567e:	e034      	b.n	80056ea <Displ_BackLight+0x15a>
	case 'S':
		memCCR1=BKLIT_TIMER->BKLIT_CCR;
 8005680:	4b1d      	ldr	r3, [pc, #116]	; (80056f8 <Displ_BackLight+0x168>)
 8005682:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005684:	b29a      	uxth	r2, r3
 8005686:	4b1d      	ldr	r3, [pc, #116]	; (80056fc <Displ_BackLight+0x16c>)
 8005688:	801a      	strh	r2, [r3, #0]
		if (BKLIT_TIMER->BKLIT_CCR>=(BKLIT_STBY_LEVEL))	//set stby level only if current level is higher
 800568a:	4b1b      	ldr	r3, [pc, #108]	; (80056f8 <Displ_BackLight+0x168>)
 800568c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800568e:	2b31      	cmp	r3, #49	; 0x31
 8005690:	d92a      	bls.n	80056e8 <Displ_BackLight+0x158>
			BKLIT_TIMER->BKLIT_CCR=(BKLIT_STBY_LEVEL);
 8005692:	4b19      	ldr	r3, [pc, #100]	; (80056f8 <Displ_BackLight+0x168>)
 8005694:	2232      	movs	r2, #50	; 0x32
 8005696:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 8005698:	e026      	b.n	80056e8 <Displ_BackLight+0x158>
	case '+':
		if (BKLIT_TIMER->ARR>BKLIT_TIMER->BKLIT_CCR)		// if CCR1 has not yet the highest value (ARR)
 800569a:	4b17      	ldr	r3, [pc, #92]	; (80056f8 <Displ_BackLight+0x168>)
 800569c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800569e:	4b16      	ldr	r3, [pc, #88]	; (80056f8 <Displ_BackLight+0x168>)
 80056a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80056a2:	429a      	cmp	r2, r3
 80056a4:	d904      	bls.n	80056b0 <Displ_BackLight+0x120>
			++BKLIT_TIMER->BKLIT_CCR;
 80056a6:	4b14      	ldr	r3, [pc, #80]	; (80056f8 <Displ_BackLight+0x168>)
 80056a8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80056aa:	3201      	adds	r2, #1
 80056ac:	639a      	str	r2, [r3, #56]	; 0x38
		else
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
		break;
 80056ae:	e01c      	b.n	80056ea <Displ_BackLight+0x15a>
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 80056b0:	4b11      	ldr	r3, [pc, #68]	; (80056f8 <Displ_BackLight+0x168>)
 80056b2:	4a11      	ldr	r2, [pc, #68]	; (80056f8 <Displ_BackLight+0x168>)
 80056b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80056b6:	6393      	str	r3, [r2, #56]	; 0x38
		break;
 80056b8:	e017      	b.n	80056ea <Displ_BackLight+0x15a>
	case '-':
		if (BKLIT_TIMER->BKLIT_CCR>0)					// if CCR1 has not yet the lowest value (0)
 80056ba:	4b0f      	ldr	r3, [pc, #60]	; (80056f8 <Displ_BackLight+0x168>)
 80056bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80056be:	2b00      	cmp	r3, #0
 80056c0:	d004      	beq.n	80056cc <Displ_BackLight+0x13c>
			--BKLIT_TIMER->BKLIT_CCR;
 80056c2:	4b0d      	ldr	r3, [pc, #52]	; (80056f8 <Displ_BackLight+0x168>)
 80056c4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80056c6:	3a01      	subs	r2, #1
 80056c8:	639a      	str	r2, [r3, #56]	; 0x38
		else
			BKLIT_TIMER->BKLIT_CCR=0;
		break;
 80056ca:	e00e      	b.n	80056ea <Displ_BackLight+0x15a>
			BKLIT_TIMER->BKLIT_CCR=0;
 80056cc:	4b0a      	ldr	r3, [pc, #40]	; (80056f8 <Displ_BackLight+0x168>)
 80056ce:	2200      	movs	r2, #0
 80056d0:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 80056d2:	e00a      	b.n	80056ea <Displ_BackLight+0x15a>
	case 'I':
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
 80056d4:	2104      	movs	r1, #4
 80056d6:	480a      	ldr	r0, [pc, #40]	; (8005700 <Displ_BackLight+0x170>)
 80056d8:	f005 f93c 	bl	800a954 <HAL_TIM_PWM_Start>
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
 80056dc:	4b06      	ldr	r3, [pc, #24]	; (80056f8 <Displ_BackLight+0x168>)
 80056de:	2264      	movs	r2, #100	; 0x64
 80056e0:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 80056e2:	e002      	b.n	80056ea <Displ_BackLight+0x15a>
#endif
	default:
		break;
 80056e4:	bf00      	nop
 80056e6:	e000      	b.n	80056ea <Displ_BackLight+0x15a>
		break;
 80056e8:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
#else
	return (BKLIT_TIMER->BKLIT_CCR);
 80056ea:	4b03      	ldr	r3, [pc, #12]	; (80056f8 <Displ_BackLight+0x168>)
 80056ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
#endif
}
 80056ee:	4618      	mov	r0, r3
 80056f0:	3708      	adds	r7, #8
 80056f2:	46bd      	mov	sp, r7
 80056f4:	bd80      	pop	{r7, pc}
 80056f6:	bf00      	nop
 80056f8:	40000400 	.word	0x40000400
 80056fc:	20023d1e 	.word	0x20023d1e
 8005700:	200007d8 	.word	0x200007d8

08005704 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 8005704:	b480      	push	{r7}
 8005706:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 8005708:	4b06      	ldr	r3, [pc, #24]	; (8005724 <touchgfxDisplayDriverTransmitActive+0x20>)
 800570a:	781b      	ldrb	r3, [r3, #0]
 800570c:	b2db      	uxtb	r3, r3
 800570e:	2b00      	cmp	r3, #0
 8005710:	bf0c      	ite	eq
 8005712:	2301      	moveq	r3, #1
 8005714:	2300      	movne	r3, #0
 8005716:	b2db      	uxtb	r3, r3
}
 8005718:	4618      	mov	r0, r3
 800571a:	46bd      	mov	sp, r7
 800571c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005720:	4770      	bx	lr
 8005722:	bf00      	nop
 8005724:	2000028c 	.word	0x2000028c

08005728 <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 8005728:	b590      	push	{r4, r7, lr}
 800572a:	b085      	sub	sp, #20
 800572c:	af00      	add	r7, sp, #0
 800572e:	60f8      	str	r0, [r7, #12]
 8005730:	4608      	mov	r0, r1
 8005732:	4611      	mov	r1, r2
 8005734:	461a      	mov	r2, r3
 8005736:	4603      	mov	r3, r0
 8005738:	817b      	strh	r3, [r7, #10]
 800573a:	460b      	mov	r3, r1
 800573c:	813b      	strh	r3, [r7, #8]
 800573e:	4613      	mov	r3, r2
 8005740:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 8005742:	897a      	ldrh	r2, [r7, #10]
 8005744:	88fb      	ldrh	r3, [r7, #6]
 8005746:	4413      	add	r3, r2
 8005748:	b29b      	uxth	r3, r3
 800574a:	3b01      	subs	r3, #1
 800574c:	b29c      	uxth	r4, r3
 800574e:	893a      	ldrh	r2, [r7, #8]
 8005750:	8c3b      	ldrh	r3, [r7, #32]
 8005752:	4413      	add	r3, r2
 8005754:	b29b      	uxth	r3, r3
 8005756:	3b01      	subs	r3, #1
 8005758:	b29b      	uxth	r3, r3
 800575a:	8939      	ldrh	r1, [r7, #8]
 800575c:	8978      	ldrh	r0, [r7, #10]
 800575e:	4622      	mov	r2, r4
 8005760:	f7ff fe0a 	bl	8005378 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 8005764:	88fb      	ldrh	r3, [r7, #6]
 8005766:	8c3a      	ldrh	r2, [r7, #32]
 8005768:	fb02 f303 	mul.w	r3, r2, r3
 800576c:	005b      	lsls	r3, r3, #1
 800576e:	2201      	movs	r2, #1
 8005770:	4619      	mov	r1, r3
 8005772:	68f8      	ldr	r0, [r7, #12]
 8005774:	f7ff fda7 	bl	80052c6 <Displ_WriteData>
}
 8005778:	bf00      	nop
 800577a:	3714      	adds	r7, #20
 800577c:	46bd      	mov	sp, r7
 800577e:	bd90      	pop	{r4, r7, pc}

08005780 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 8005780:	b480      	push	{r7}
 8005782:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 8005784:	4b06      	ldr	r3, [pc, #24]	; (80057a0 <Touch_HandlePenDownInterrupt+0x20>)
 8005786:	781b      	ldrb	r3, [r3, #0]
 8005788:	b2db      	uxtb	r3, r3
 800578a:	2b00      	cmp	r3, #0
 800578c:	d002      	beq.n	8005794 <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 800578e:	4b05      	ldr	r3, [pc, #20]	; (80057a4 <Touch_HandlePenDownInterrupt+0x24>)
 8005790:	2201      	movs	r2, #1
 8005792:	701a      	strb	r2, [r3, #0]
	}
}
 8005794:	bf00      	nop
 8005796:	46bd      	mov	sp, r7
 8005798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800579c:	4770      	bx	lr
 800579e:	bf00      	nop
 80057a0:	2000028d 	.word	0x2000028d
 80057a4:	20023d20 	.word	0x20023d20

080057a8 <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80057a8:	b580      	push	{r7, lr}
 80057aa:	b082      	sub	sp, #8
 80057ac:	af00      	add	r7, sp, #0
 80057ae:	4603      	mov	r3, r0
 80057b0:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 80057b2:	88fb      	ldrh	r3, [r7, #6]
 80057b4:	2b02      	cmp	r3, #2
 80057b6:	d101      	bne.n	80057bc <HAL_GPIO_EXTI_Callback+0x14>
		Touch_HandlePenDownInterrupt();
 80057b8:	f7ff ffe2 	bl	8005780 <Touch_HandlePenDownInterrupt>
	}
}
 80057bc:	bf00      	nop
 80057be:	3708      	adds	r7, #8
 80057c0:	46bd      	mov	sp, r7
 80057c2:	bd80      	pop	{r7, pc}

080057c4 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 80057c4:	b580      	push	{r7, lr}
 80057c6:	b084      	sub	sp, #16
 80057c8:	af00      	add	r7, sp, #0
 80057ca:	4603      	mov	r3, r0
 80057cc:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 80057ce:	2300      	movs	r3, #0
 80057d0:	813b      	strh	r3, [r7, #8]
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 80057d2:	4b16      	ldr	r3, [pc, #88]	; (800582c <Touch_PollAxis+0x68>)
 80057d4:	2200      	movs	r2, #0
 80057d6:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 80057d8:	2007      	movs	r0, #7
 80057da:	f000 fbe4 	bl	8005fa6 <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 80057de:	1df9      	adds	r1, r7, #7
 80057e0:	230a      	movs	r3, #10
 80057e2:	2201      	movs	r2, #1
 80057e4:	4812      	ldr	r0, [pc, #72]	; (8005830 <Touch_PollAxis+0x6c>)
 80057e6:	f003 fdc8 	bl	800937a <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 80057ea:	f107 0108 	add.w	r1, r7, #8
 80057ee:	230a      	movs	r3, #10
 80057f0:	2202      	movs	r2, #2
 80057f2:	480f      	ldr	r0, [pc, #60]	; (8005830 <Touch_PollAxis+0x6c>)
 80057f4:	f003 ff36 	bl	8009664 <HAL_SPI_Receive>
 80057f8:	4603      	mov	r3, r0
 80057fa:	2b00      	cmp	r3, #0
 80057fc:	d105      	bne.n	800580a <Touch_PollAxis+0x46>
		poll16 = (poll[0]<<8) + poll[1];
 80057fe:	7a3b      	ldrb	r3, [r7, #8]
 8005800:	021b      	lsls	r3, r3, #8
 8005802:	7a7a      	ldrb	r2, [r7, #9]
 8005804:	4413      	add	r3, r2
 8005806:	60fb      	str	r3, [r7, #12]
 8005808:	e001      	b.n	800580e <Touch_PollAxis+0x4a>
	}
	else {
		poll16 = 0;
 800580a:	2300      	movs	r3, #0
 800580c:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 800580e:	2007      	movs	r0, #7
 8005810:	f000 fbe3 	bl	8005fda <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 8005814:	2007      	movs	r0, #7
 8005816:	f000 fbb8 	bl	8005f8a <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 800581a:	4b04      	ldr	r3, [pc, #16]	; (800582c <Touch_PollAxis+0x68>)
 800581c:	2201      	movs	r2, #1
 800581e:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
	}

	return poll16;
 8005820:	68fb      	ldr	r3, [r7, #12]
 8005822:	b29b      	uxth	r3, r3
}
 8005824:	4618      	mov	r0, r3
 8005826:	3710      	adds	r7, #16
 8005828:	46bd      	mov	sp, r7
 800582a:	bd80      	pop	{r7, pc}
 800582c:	2000028d 	.word	0x2000028d
 8005830:	20000668 	.word	0x20000668

08005834 <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 8005834:	b580      	push	{r7, lr}
 8005836:	b08a      	sub	sp, #40	; 0x28
 8005838:	af00      	add	r7, sp, #0
 800583a:	60f8      	str	r0, [r7, #12]
 800583c:	60b9      	str	r1, [r7, #8]
 800583e:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 8005840:	2304      	movs	r3, #4
 8005842:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 8005844:	2300      	movs	r3, #0
 8005846:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8005848:	2300      	movs	r3, #0
 800584a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800584e:	e00c      	b.n	800586a <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 8005850:	20b0      	movs	r0, #176	; 0xb0
 8005852:	f7ff ffb7 	bl	80057c4 <Touch_PollAxis>
 8005856:	4603      	mov	r3, r0
 8005858:	461a      	mov	r2, r3
 800585a:	6a3b      	ldr	r3, [r7, #32]
 800585c:	4413      	add	r3, r2
 800585e:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8005860:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8005864:	3301      	adds	r3, #1
 8005866:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800586a:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 800586e:	7ffb      	ldrb	r3, [r7, #31]
 8005870:	2101      	movs	r1, #1
 8005872:	fa01 f303 	lsl.w	r3, r1, r3
 8005876:	429a      	cmp	r2, r3
 8005878:	dbea      	blt.n	8005850 <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 800587a:	7ffb      	ldrb	r3, [r7, #31]
 800587c:	6a3a      	ldr	r2, [r7, #32]
 800587e:	fa22 f303 	lsr.w	r3, r2, r3
 8005882:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 8005884:	6a3b      	ldr	r3, [r7, #32]
 8005886:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800588a:	d806      	bhi.n	800589a <Touch_GetXYtouch+0x66>
		*isTouch=0;
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	2200      	movs	r2, #0
 8005890:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8005892:	2007      	movs	r0, #7
 8005894:	f000 fba1 	bl	8005fda <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8005898:	e0b2      	b.n	8005a00 <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 800589a:	2300      	movs	r3, #0
 800589c:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800589e:	2300      	movs	r3, #0
 80058a0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80058a4:	e00c      	b.n	80058c0 <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 80058a6:	20d0      	movs	r0, #208	; 0xd0
 80058a8:	f7ff ff8c 	bl	80057c4 <Touch_PollAxis>
 80058ac:	4603      	mov	r3, r0
 80058ae:	461a      	mov	r2, r3
 80058b0:	6a3b      	ldr	r3, [r7, #32]
 80058b2:	4413      	add	r3, r2
 80058b4:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80058b6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80058ba:	3301      	adds	r3, #1
 80058bc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80058c0:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 80058c4:	7ffb      	ldrb	r3, [r7, #31]
 80058c6:	2101      	movs	r1, #1
 80058c8:	fa01 f303 	lsl.w	r3, r1, r3
 80058cc:	429a      	cmp	r2, r3
 80058ce:	dbea      	blt.n	80058a6 <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 80058d0:	7ffb      	ldrb	r3, [r7, #31]
 80058d2:	6a3a      	ldr	r2, [r7, #32]
 80058d4:	fa22 f303 	lsr.w	r3, r2, r3
 80058d8:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 80058da:	6a3b      	ldr	r3, [r7, #32]
 80058dc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80058e0:	d806      	bhi.n	80058f0 <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	2200      	movs	r2, #0
 80058e6:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80058e8:	2007      	movs	r0, #7
 80058ea:	f000 fb76 	bl	8005fda <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 80058ee:	e087      	b.n	8005a00 <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 80058f0:	6a3b      	ldr	r3, [r7, #32]
 80058f2:	ee07 3a90 	vmov	s15, r3
 80058f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80058fa:	ed9f 7a43 	vldr	s14, [pc, #268]	; 8005a08 <Touch_GetXYtouch+0x1d4>
 80058fe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005902:	ed9f 7a42 	vldr	s14, [pc, #264]	; 8005a0c <Touch_GetXYtouch+0x1d8>
 8005906:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800590a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800590e:	ee17 3a90 	vmov	r3, s15
 8005912:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 8005914:	2300      	movs	r3, #0
 8005916:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8005918:	2300      	movs	r3, #0
 800591a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800591e:	e00c      	b.n	800593a <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 8005920:	2090      	movs	r0, #144	; 0x90
 8005922:	f7ff ff4f 	bl	80057c4 <Touch_PollAxis>
 8005926:	4603      	mov	r3, r0
 8005928:	461a      	mov	r2, r3
 800592a:	6a3b      	ldr	r3, [r7, #32]
 800592c:	4413      	add	r3, r2
 800592e:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8005930:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8005934:	3301      	adds	r3, #1
 8005936:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800593a:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 800593e:	7ffb      	ldrb	r3, [r7, #31]
 8005940:	2101      	movs	r1, #1
 8005942:	fa01 f303 	lsl.w	r3, r1, r3
 8005946:	429a      	cmp	r2, r3
 8005948:	dbea      	blt.n	8005920 <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 800594a:	7ffb      	ldrb	r3, [r7, #31]
 800594c:	6a3a      	ldr	r2, [r7, #32]
 800594e:	fa22 f303 	lsr.w	r3, r2, r3
 8005952:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8005954:	6a3b      	ldr	r3, [r7, #32]
 8005956:	ee07 3a90 	vmov	s15, r3
 800595a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800595e:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8005a10 <Touch_GetXYtouch+0x1dc>
 8005962:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005966:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8005a14 <Touch_GetXYtouch+0x1e0>
 800596a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800596e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8005972:	ee17 3a90 	vmov	r3, s15
 8005976:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 8005978:	4b27      	ldr	r3, [pc, #156]	; (8005a18 <Touch_GetXYtouch+0x1e4>)
 800597a:	781b      	ldrb	r3, [r3, #0]
 800597c:	2b03      	cmp	r3, #3
 800597e:	d83b      	bhi.n	80059f8 <Touch_GetXYtouch+0x1c4>
 8005980:	a201      	add	r2, pc, #4	; (adr r2, 8005988 <Touch_GetXYtouch+0x154>)
 8005982:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005986:	bf00      	nop
 8005988:	08005999 	.word	0x08005999
 800598c:	080059ab 	.word	0x080059ab
 8005990:	080059c3 	.word	0x080059c3
 8005994:	080059e1 	.word	0x080059e1
	{
	case TOUCH0:
		*x=touchx;
 8005998:	69bb      	ldr	r3, [r7, #24]
 800599a:	b29a      	uxth	r2, r3
 800599c:	68fb      	ldr	r3, [r7, #12]
 800599e:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 80059a0:	697b      	ldr	r3, [r7, #20]
 80059a2:	b29a      	uxth	r2, r3
 80059a4:	68bb      	ldr	r3, [r7, #8]
 80059a6:	801a      	strh	r2, [r3, #0]
		break;
 80059a8:	e026      	b.n	80059f8 <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 80059aa:	697b      	ldr	r3, [r7, #20]
 80059ac:	b29a      	uxth	r2, r3
 80059ae:	68fb      	ldr	r3, [r7, #12]
 80059b0:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 80059b2:	69bb      	ldr	r3, [r7, #24]
 80059b4:	b29b      	uxth	r3, r3
 80059b6:	f1c3 03f0 	rsb	r3, r3, #240	; 0xf0
 80059ba:	b29a      	uxth	r2, r3
 80059bc:	68bb      	ldr	r3, [r7, #8]
 80059be:	801a      	strh	r2, [r3, #0]
		break;
 80059c0:	e01a      	b.n	80059f8 <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 80059c2:	69bb      	ldr	r3, [r7, #24]
 80059c4:	b29b      	uxth	r3, r3
 80059c6:	f1c3 03f0 	rsb	r3, r3, #240	; 0xf0
 80059ca:	b29a      	uxth	r2, r3
 80059cc:	68fb      	ldr	r3, [r7, #12]
 80059ce:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 80059d0:	697b      	ldr	r3, [r7, #20]
 80059d2:	b29b      	uxth	r3, r3
 80059d4:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
 80059d8:	b29a      	uxth	r2, r3
 80059da:	68bb      	ldr	r3, [r7, #8]
 80059dc:	801a      	strh	r2, [r3, #0]
		break;
 80059de:	e00b      	b.n	80059f8 <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=touchy;
 80059e0:	697b      	ldr	r3, [r7, #20]
 80059e2:	b29a      	uxth	r2, r3
 80059e4:	68fb      	ldr	r3, [r7, #12]
 80059e6:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 80059e8:	69bb      	ldr	r3, [r7, #24]
 80059ea:	b29b      	uxth	r3, r3
 80059ec:	f1c3 03f0 	rsb	r3, r3, #240	; 0xf0
 80059f0:	b29a      	uxth	r2, r3
 80059f2:	68bb      	ldr	r3, [r7, #8]
 80059f4:	801a      	strh	r2, [r3, #0]
		break;
 80059f6:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	2201      	movs	r2, #1
 80059fc:	701a      	strb	r2, [r3, #0]
	return;
 80059fe:	bf00      	nop
}
 8005a00:	3728      	adds	r7, #40	; 0x28
 8005a02:	46bd      	mov	sp, r7
 8005a04:	bd80      	pop	{r7, pc}
 8005a06:	bf00      	nop
 8005a08:	3c033c60 	.word	0x3c033c60
 8005a0c:	413ff7cf 	.word	0x413ff7cf
 8005a10:	3c375643 	.word	0x3c375643
 8005a14:	421c3a5e 	.word	0x421c3a5e
 8005a18:	20023d10 	.word	0x20023d10

08005a1c <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 8005a1c:	b580      	push	{r7, lr}
 8005a1e:	b084      	sub	sp, #16
 8005a20:	af00      	add	r7, sp, #0
 8005a22:	4603      	mov	r3, r0
 8005a24:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 8005a26:	4b10      	ldr	r3, [pc, #64]	; (8005a68 <Touch_GotATouch+0x4c>)
 8005a28:	781b      	ldrb	r3, [r3, #0]
 8005a2a:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 8005a2c:	79fb      	ldrb	r3, [r7, #7]
 8005a2e:	2b02      	cmp	r3, #2
 8005a30:	d10f      	bne.n	8005a52 <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 8005a32:	f000 f941 	bl	8005cb8 <HAL_GetTick>
 8005a36:	4602      	mov	r2, r0
 8005a38:	4b0c      	ldr	r3, [pc, #48]	; (8005a6c <Touch_GotATouch+0x50>)
 8005a3a:	681b      	ldr	r3, [r3, #0]
 8005a3c:	1ad3      	subs	r3, r2, r3
 8005a3e:	2b3b      	cmp	r3, #59	; 0x3b
 8005a40:	d905      	bls.n	8005a4e <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 8005a42:	f000 f939 	bl	8005cb8 <HAL_GetTick>
 8005a46:	4603      	mov	r3, r0
 8005a48:	4a08      	ldr	r2, [pc, #32]	; (8005a6c <Touch_GotATouch+0x50>)
 8005a4a:	6013      	str	r3, [r2, #0]
 8005a4c:	e001      	b.n	8005a52 <Touch_GotATouch+0x36>
		else
			result=0;
 8005a4e:	2300      	movs	r3, #0
 8005a50:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 8005a52:	79fb      	ldrb	r3, [r7, #7]
 8005a54:	2b01      	cmp	r3, #1
 8005a56:	d102      	bne.n	8005a5e <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 8005a58:	4b03      	ldr	r3, [pc, #12]	; (8005a68 <Touch_GotATouch+0x4c>)
 8005a5a:	2200      	movs	r2, #0
 8005a5c:	701a      	strb	r2, [r3, #0]
	return result;
 8005a5e:	7bfb      	ldrb	r3, [r7, #15]
}
 8005a60:	4618      	mov	r0, r3
 8005a62:	3710      	adds	r7, #16
 8005a64:	46bd      	mov	sp, r7
 8005a66:	bd80      	pop	{r7, pc}
 8005a68:	20023d20 	.word	0x20023d20
 8005a6c:	20023d24 	.word	0x20023d24

08005a70 <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8005a70:	b580      	push	{r7, lr}
 8005a72:	b084      	sub	sp, #16
 8005a74:	af00      	add	r7, sp, #0
 8005a76:	6078      	str	r0, [r7, #4]
 8005a78:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 8005a7a:	2300      	movs	r3, #0
 8005a7c:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 8005a7e:	2300      	movs	r3, #0
 8005a80:	81bb      	strh	r3, [r7, #12]
 8005a82:	2300      	movs	r3, #0
 8005a84:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 8005a86:	2000      	movs	r0, #0
 8005a88:	f7ff ffc8 	bl	8005a1c <Touch_GotATouch>
 8005a8c:	4603      	mov	r3, r0
 8005a8e:	2b00      	cmp	r3, #0
 8005a90:	d071      	beq.n	8005b76 <Touch_TouchGFXSampleTouch+0x106>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 8005a92:	f107 020f 	add.w	r2, r7, #15
 8005a96:	f107 010a 	add.w	r1, r7, #10
 8005a9a:	f107 030c 	add.w	r3, r7, #12
 8005a9e:	4618      	mov	r0, r3
 8005aa0:	f7ff fec8 	bl	8005834 <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 8005aa4:	7bfb      	ldrb	r3, [r7, #15]
 8005aa6:	2b00      	cmp	r3, #0
 8005aa8:	d126      	bne.n	8005af8 <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 8005aaa:	4b35      	ldr	r3, [pc, #212]	; (8005b80 <Touch_TouchGFXSampleTouch+0x110>)
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	2b00      	cmp	r3, #0
 8005ab0:	d061      	beq.n	8005b76 <Touch_TouchGFXSampleTouch+0x106>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 8005ab2:	4b34      	ldr	r3, [pc, #208]	; (8005b84 <Touch_TouchGFXSampleTouch+0x114>)
 8005ab4:	781b      	ldrb	r3, [r3, #0]
 8005ab6:	1e5a      	subs	r2, r3, #1
 8005ab8:	b2d1      	uxtb	r1, r2
 8005aba:	4a32      	ldr	r2, [pc, #200]	; (8005b84 <Touch_TouchGFXSampleTouch+0x114>)
 8005abc:	7011      	strb	r1, [r2, #0]
 8005abe:	2b06      	cmp	r3, #6
 8005ac0:	d90c      	bls.n	8005adc <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 8005ac2:	4b31      	ldr	r3, [pc, #196]	; (8005b88 <Touch_TouchGFXSampleTouch+0x118>)
 8005ac4:	881b      	ldrh	r3, [r3, #0]
 8005ac6:	461a      	mov	r2, r3
 8005ac8:	687b      	ldr	r3, [r7, #4]
 8005aca:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 8005acc:	4b2f      	ldr	r3, [pc, #188]	; (8005b8c <Touch_TouchGFXSampleTouch+0x11c>)
 8005ace:	881b      	ldrh	r3, [r3, #0]
 8005ad0:	461a      	mov	r2, r3
 8005ad2:	683b      	ldr	r3, [r7, #0]
 8005ad4:	601a      	str	r2, [r3, #0]
					isTouch=1;
 8005ad6:	2301      	movs	r3, #1
 8005ad8:	73fb      	strb	r3, [r7, #15]
 8005ada:	e04c      	b.n	8005b76 <Touch_TouchGFXSampleTouch+0x106>
				} else if ((repetition==255)) {  // that's -1
 8005adc:	4b29      	ldr	r3, [pc, #164]	; (8005b84 <Touch_TouchGFXSampleTouch+0x114>)
 8005ade:	781b      	ldrb	r3, [r3, #0]
 8005ae0:	2bff      	cmp	r3, #255	; 0xff
 8005ae2:	d148      	bne.n	8005b76 <Touch_TouchGFXSampleTouch+0x106>
					touchTime=0;					// set display as untouched
 8005ae4:	4b26      	ldr	r3, [pc, #152]	; (8005b80 <Touch_TouchGFXSampleTouch+0x110>)
 8005ae6:	2200      	movs	r2, #0
 8005ae8:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 8005aea:	2001      	movs	r0, #1
 8005aec:	f7ff ff96 	bl	8005a1c <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 8005af0:	4b24      	ldr	r3, [pc, #144]	; (8005b84 <Touch_TouchGFXSampleTouch+0x114>)
 8005af2:	2205      	movs	r2, #5
 8005af4:	701a      	strb	r2, [r3, #0]
 8005af6:	e03e      	b.n	8005b76 <Touch_TouchGFXSampleTouch+0x106>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 8005af8:	4b21      	ldr	r3, [pc, #132]	; (8005b80 <Touch_TouchGFXSampleTouch+0x110>)
 8005afa:	681b      	ldr	r3, [r3, #0]
 8005afc:	2b00      	cmp	r3, #0
 8005afe:	d10e      	bne.n	8005b1e <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8005b00:	89ba      	ldrh	r2, [r7, #12]
 8005b02:	4b21      	ldr	r3, [pc, #132]	; (8005b88 <Touch_TouchGFXSampleTouch+0x118>)
 8005b04:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8005b06:	897a      	ldrh	r2, [r7, #10]
 8005b08:	4b20      	ldr	r3, [pc, #128]	; (8005b8c <Touch_TouchGFXSampleTouch+0x11c>)
 8005b0a:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 8005b0c:	f000 f8d4 	bl	8005cb8 <HAL_GetTick>
 8005b10:	4603      	mov	r3, r0
 8005b12:	4a1b      	ldr	r2, [pc, #108]	; (8005b80 <Touch_TouchGFXSampleTouch+0x110>)
 8005b14:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 8005b16:	4b1e      	ldr	r3, [pc, #120]	; (8005b90 <Touch_TouchGFXSampleTouch+0x120>)
 8005b18:	2201      	movs	r2, #1
 8005b1a:	701a      	strb	r2, [r3, #0]
 8005b1c:	e012      	b.n	8005b44 <Touch_TouchGFXSampleTouch+0xd4>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 8005b1e:	f000 f8cb 	bl	8005cb8 <HAL_GetTick>
 8005b22:	4602      	mov	r2, r0
 8005b24:	4b16      	ldr	r3, [pc, #88]	; (8005b80 <Touch_TouchGFXSampleTouch+0x110>)
 8005b26:	681b      	ldr	r3, [r3, #0]
 8005b28:	1ad3      	subs	r3, r2, r3
 8005b2a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005b2e:	d909      	bls.n	8005b44 <Touch_TouchGFXSampleTouch+0xd4>
					flipTouch=!flipTouch;	// alternate every time function is called
 8005b30:	4b17      	ldr	r3, [pc, #92]	; (8005b90 <Touch_TouchGFXSampleTouch+0x120>)
 8005b32:	781b      	ldrb	r3, [r3, #0]
 8005b34:	2b00      	cmp	r3, #0
 8005b36:	bf0c      	ite	eq
 8005b38:	2301      	moveq	r3, #1
 8005b3a:	2300      	movne	r3, #0
 8005b3c:	b2db      	uxtb	r3, r3
 8005b3e:	461a      	mov	r2, r3
 8005b40:	4b13      	ldr	r3, [pc, #76]	; (8005b90 <Touch_TouchGFXSampleTouch+0x120>)
 8005b42:	701a      	strb	r2, [r3, #0]
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 8005b44:	4b12      	ldr	r3, [pc, #72]	; (8005b90 <Touch_TouchGFXSampleTouch+0x120>)
 8005b46:	781b      	ldrb	r3, [r3, #0]
 8005b48:	2b00      	cmp	r3, #0
 8005b4a:	d012      	beq.n	8005b72 <Touch_TouchGFXSampleTouch+0x102>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8005b4c:	89bb      	ldrh	r3, [r7, #12]
 8005b4e:	461a      	mov	r2, r3
 8005b50:	687b      	ldr	r3, [r7, #4]
 8005b52:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8005b54:	897b      	ldrh	r3, [r7, #10]
 8005b56:	461a      	mov	r2, r3
 8005b58:	683b      	ldr	r3, [r7, #0]
 8005b5a:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	b29a      	uxth	r2, r3
 8005b62:	4b09      	ldr	r3, [pc, #36]	; (8005b88 <Touch_TouchGFXSampleTouch+0x118>)
 8005b64:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 8005b66:	683b      	ldr	r3, [r7, #0]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	b29a      	uxth	r2, r3
 8005b6c:	4b07      	ldr	r3, [pc, #28]	; (8005b8c <Touch_TouchGFXSampleTouch+0x11c>)
 8005b6e:	801a      	strh	r2, [r3, #0]
 8005b70:	e001      	b.n	8005b76 <Touch_TouchGFXSampleTouch+0x106>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8005b72:	2300      	movs	r3, #0
 8005b74:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8005b76:	7bfb      	ldrb	r3, [r7, #15]
}
 8005b78:	4618      	mov	r0, r3
 8005b7a:	3710      	adds	r7, #16
 8005b7c:	46bd      	mov	sp, r7
 8005b7e:	bd80      	pop	{r7, pc}
 8005b80:	20000290 	.word	0x20000290
 8005b84:	20000294 	.word	0x20000294
 8005b88:	20023d28 	.word	0x20023d28
 8005b8c:	20023d2a 	.word	0x20023d2a
 8005b90:	20023d2c 	.word	0x20023d2c

08005b94 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Set stack pointer */
 8005b94:	f8df d034 	ldr.w	sp, [pc, #52]	; 8005bcc <LoopForever+0x2>

/* Call the clock system initialization function.*/
    bl  SystemInit
 8005b98:	f7ff fb0e 	bl	80051b8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8005b9c:	480c      	ldr	r0, [pc, #48]	; (8005bd0 <LoopForever+0x6>)
  ldr r1, =_edata
 8005b9e:	490d      	ldr	r1, [pc, #52]	; (8005bd4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8005ba0:	4a0d      	ldr	r2, [pc, #52]	; (8005bd8 <LoopForever+0xe>)
  movs r3, #0
 8005ba2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8005ba4:	e002      	b.n	8005bac <LoopCopyDataInit>

08005ba6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8005ba6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8005ba8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8005baa:	3304      	adds	r3, #4

08005bac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8005bac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8005bae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8005bb0:	d3f9      	bcc.n	8005ba6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8005bb2:	4a0a      	ldr	r2, [pc, #40]	; (8005bdc <LoopForever+0x12>)
  ldr r4, =_ebss
 8005bb4:	4c0a      	ldr	r4, [pc, #40]	; (8005be0 <LoopForever+0x16>)
  movs r3, #0
 8005bb6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8005bb8:	e001      	b.n	8005bbe <LoopFillZerobss>

08005bba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8005bba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8005bbc:	3204      	adds	r2, #4

08005bbe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8005bbe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8005bc0:	d3fb      	bcc.n	8005bba <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8005bc2:	f023 fbff 	bl	80293c4 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8005bc6:	f7fd fb49 	bl	800325c <main>

08005bca <LoopForever>:

LoopForever:
    b LoopForever
 8005bca:	e7fe      	b.n	8005bca <LoopForever>
  ldr   sp, =_estack    /* Set stack pointer */
 8005bcc:	200a0000 	.word	0x200a0000
  ldr r0, =_sdata
 8005bd0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8005bd4:	20000398 	.word	0x20000398
  ldr r2, =_sidata
 8005bd8:	0805d044 	.word	0x0805d044
  ldr r2, =_sbss
 8005bdc:	20000398 	.word	0x20000398
  ldr r4, =_ebss
 8005be0:	200265c8 	.word	0x200265c8

08005be4 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8005be4:	e7fe      	b.n	8005be4 <ADC1_IRQHandler>

08005be6 <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005be6:	b580      	push	{r7, lr}
 8005be8:	b082      	sub	sp, #8
 8005bea:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 8005bec:	2300      	movs	r3, #0
 8005bee:	71fb      	strb	r3, [r7, #7]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005bf0:	2003      	movs	r0, #3
 8005bf2:	f000 f9a3 	bl	8005f3c <HAL_NVIC_SetPriorityGrouping>

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8005bf6:	2000      	movs	r0, #0
 8005bf8:	f000 f80e 	bl	8005c18 <HAL_InitTick>
 8005bfc:	4603      	mov	r3, r0
 8005bfe:	2b00      	cmp	r3, #0
 8005c00:	d002      	beq.n	8005c08 <HAL_Init+0x22>
  {
    status = HAL_ERROR;
 8005c02:	2301      	movs	r3, #1
 8005c04:	71fb      	strb	r3, [r7, #7]
 8005c06:	e001      	b.n	8005c0c <HAL_Init+0x26>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8005c08:	f7fe fc82 	bl	8004510 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 8005c0c:	79fb      	ldrb	r3, [r7, #7]
}
 8005c0e:	4618      	mov	r0, r3
 8005c10:	3708      	adds	r7, #8
 8005c12:	46bd      	mov	sp, r7
 8005c14:	bd80      	pop	{r7, pc}
	...

08005c18 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority  Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8005c18:	b580      	push	{r7, lr}
 8005c1a:	b084      	sub	sp, #16
 8005c1c:	af00      	add	r7, sp, #0
 8005c1e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
 8005c20:	2300      	movs	r3, #0
 8005c22:	73fb      	strb	r3, [r7, #15]

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/
  if ((uint32_t)uwTickFreq != 0U)
 8005c24:	4b17      	ldr	r3, [pc, #92]	; (8005c84 <HAL_InitTick+0x6c>)
 8005c26:	781b      	ldrb	r3, [r3, #0]
 8005c28:	2b00      	cmp	r3, #0
 8005c2a:	d023      	beq.n	8005c74 <HAL_InitTick+0x5c>
  {
    /*Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / (uint32_t)uwTickFreq)) == 0U)
 8005c2c:	4b16      	ldr	r3, [pc, #88]	; (8005c88 <HAL_InitTick+0x70>)
 8005c2e:	681a      	ldr	r2, [r3, #0]
 8005c30:	4b14      	ldr	r3, [pc, #80]	; (8005c84 <HAL_InitTick+0x6c>)
 8005c32:	781b      	ldrb	r3, [r3, #0]
 8005c34:	4619      	mov	r1, r3
 8005c36:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005c3a:	fbb3 f3f1 	udiv	r3, r3, r1
 8005c3e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005c42:	4618      	mov	r0, r3
 8005c44:	f000 f9bd 	bl	8005fc2 <HAL_SYSTICK_Config>
 8005c48:	4603      	mov	r3, r0
 8005c4a:	2b00      	cmp	r3, #0
 8005c4c:	d10f      	bne.n	8005c6e <HAL_InitTick+0x56>
    {
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	2b0f      	cmp	r3, #15
 8005c52:	d809      	bhi.n	8005c68 <HAL_InitTick+0x50>
      {
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8005c54:	2200      	movs	r2, #0
 8005c56:	6879      	ldr	r1, [r7, #4]
 8005c58:	f04f 30ff 	mov.w	r0, #4294967295
 8005c5c:	f000 f979 	bl	8005f52 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8005c60:	4a0a      	ldr	r2, [pc, #40]	; (8005c8c <HAL_InitTick+0x74>)
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	6013      	str	r3, [r2, #0]
 8005c66:	e007      	b.n	8005c78 <HAL_InitTick+0x60>
      }
      else
      {
        status = HAL_ERROR;
 8005c68:	2301      	movs	r3, #1
 8005c6a:	73fb      	strb	r3, [r7, #15]
 8005c6c:	e004      	b.n	8005c78 <HAL_InitTick+0x60>
      }
    }
    else
    {
      status = HAL_ERROR;
 8005c6e:	2301      	movs	r3, #1
 8005c70:	73fb      	strb	r3, [r7, #15]
 8005c72:	e001      	b.n	8005c78 <HAL_InitTick+0x60>
    }
  }
  else
  {
    status = HAL_ERROR;
 8005c74:	2301      	movs	r3, #1
 8005c76:	73fb      	strb	r3, [r7, #15]
  }

  /* Return function status */
  return status;
 8005c78:	7bfb      	ldrb	r3, [r7, #15]
}
 8005c7a:	4618      	mov	r0, r3
 8005c7c:	3710      	adds	r7, #16
 8005c7e:	46bd      	mov	sp, r7
 8005c80:	bd80      	pop	{r7, pc}
 8005c82:	bf00      	nop
 8005c84:	2000029c 	.word	0x2000029c
 8005c88:	20000288 	.word	0x20000288
 8005c8c:	20000298 	.word	0x20000298

08005c90 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8005c90:	b480      	push	{r7}
 8005c92:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8005c94:	4b06      	ldr	r3, [pc, #24]	; (8005cb0 <HAL_IncTick+0x20>)
 8005c96:	781b      	ldrb	r3, [r3, #0]
 8005c98:	461a      	mov	r2, r3
 8005c9a:	4b06      	ldr	r3, [pc, #24]	; (8005cb4 <HAL_IncTick+0x24>)
 8005c9c:	681b      	ldr	r3, [r3, #0]
 8005c9e:	4413      	add	r3, r2
 8005ca0:	4a04      	ldr	r2, [pc, #16]	; (8005cb4 <HAL_IncTick+0x24>)
 8005ca2:	6013      	str	r3, [r2, #0]
}
 8005ca4:	bf00      	nop
 8005ca6:	46bd      	mov	sp, r7
 8005ca8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cac:	4770      	bx	lr
 8005cae:	bf00      	nop
 8005cb0:	2000029c 	.word	0x2000029c
 8005cb4:	20023d30 	.word	0x20023d30

08005cb8 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8005cb8:	b480      	push	{r7}
 8005cba:	af00      	add	r7, sp, #0
  return uwTick;
 8005cbc:	4b03      	ldr	r3, [pc, #12]	; (8005ccc <HAL_GetTick+0x14>)
 8005cbe:	681b      	ldr	r3, [r3, #0]
}
 8005cc0:	4618      	mov	r0, r3
 8005cc2:	46bd      	mov	sp, r7
 8005cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cc8:	4770      	bx	lr
 8005cca:	bf00      	nop
 8005ccc:	20023d30 	.word	0x20023d30

08005cd0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005cd0:	b580      	push	{r7, lr}
 8005cd2:	b084      	sub	sp, #16
 8005cd4:	af00      	add	r7, sp, #0
 8005cd6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8005cd8:	f7ff ffee 	bl	8005cb8 <HAL_GetTick>
 8005cdc:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8005cde:	687b      	ldr	r3, [r7, #4]
 8005ce0:	60fb      	str	r3, [r7, #12]

  /* Add a period to guaranty minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005ce2:	68fb      	ldr	r3, [r7, #12]
 8005ce4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005ce8:	d005      	beq.n	8005cf6 <HAL_Delay+0x26>
  {
    wait += (uint32_t)uwTickFreq;
 8005cea:	4b0a      	ldr	r3, [pc, #40]	; (8005d14 <HAL_Delay+0x44>)
 8005cec:	781b      	ldrb	r3, [r3, #0]
 8005cee:	461a      	mov	r2, r3
 8005cf0:	68fb      	ldr	r3, [r7, #12]
 8005cf2:	4413      	add	r3, r2
 8005cf4:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8005cf6:	bf00      	nop
 8005cf8:	f7ff ffde 	bl	8005cb8 <HAL_GetTick>
 8005cfc:	4602      	mov	r2, r0
 8005cfe:	68bb      	ldr	r3, [r7, #8]
 8005d00:	1ad3      	subs	r3, r2, r3
 8005d02:	68fa      	ldr	r2, [r7, #12]
 8005d04:	429a      	cmp	r2, r3
 8005d06:	d8f7      	bhi.n	8005cf8 <HAL_Delay+0x28>
  {
  }
}
 8005d08:	bf00      	nop
 8005d0a:	bf00      	nop
 8005d0c:	3710      	adds	r7, #16
 8005d0e:	46bd      	mov	sp, r7
 8005d10:	bd80      	pop	{r7, pc}
 8005d12:	bf00      	nop
 8005d14:	2000029c 	.word	0x2000029c

08005d18 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8005d18:	b480      	push	{r7}
 8005d1a:	b085      	sub	sp, #20
 8005d1c:	af00      	add	r7, sp, #0
 8005d1e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	f003 0307 	and.w	r3, r3, #7
 8005d26:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005d28:	4b0c      	ldr	r3, [pc, #48]	; (8005d5c <__NVIC_SetPriorityGrouping+0x44>)
 8005d2a:	68db      	ldr	r3, [r3, #12]
 8005d2c:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005d2e:	68ba      	ldr	r2, [r7, #8]
 8005d30:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8005d34:	4013      	ands	r3, r2
 8005d36:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005d38:	68fb      	ldr	r3, [r7, #12]
 8005d3a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8005d3c:	68bb      	ldr	r3, [r7, #8]
 8005d3e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8005d40:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005d44:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005d48:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8005d4a:	4a04      	ldr	r2, [pc, #16]	; (8005d5c <__NVIC_SetPriorityGrouping+0x44>)
 8005d4c:	68bb      	ldr	r3, [r7, #8]
 8005d4e:	60d3      	str	r3, [r2, #12]
}
 8005d50:	bf00      	nop
 8005d52:	3714      	adds	r7, #20
 8005d54:	46bd      	mov	sp, r7
 8005d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d5a:	4770      	bx	lr
 8005d5c:	e000ed00 	.word	0xe000ed00

08005d60 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8005d60:	b480      	push	{r7}
 8005d62:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8005d64:	4b04      	ldr	r3, [pc, #16]	; (8005d78 <__NVIC_GetPriorityGrouping+0x18>)
 8005d66:	68db      	ldr	r3, [r3, #12]
 8005d68:	0a1b      	lsrs	r3, r3, #8
 8005d6a:	f003 0307 	and.w	r3, r3, #7
}
 8005d6e:	4618      	mov	r0, r3
 8005d70:	46bd      	mov	sp, r7
 8005d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d76:	4770      	bx	lr
 8005d78:	e000ed00 	.word	0xe000ed00

08005d7c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8005d7c:	b480      	push	{r7}
 8005d7e:	b083      	sub	sp, #12
 8005d80:	af00      	add	r7, sp, #0
 8005d82:	4603      	mov	r3, r0
 8005d84:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8005d86:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005d8a:	2b00      	cmp	r3, #0
 8005d8c:	db0b      	blt.n	8005da6 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005d8e:	79fb      	ldrb	r3, [r7, #7]
 8005d90:	f003 021f 	and.w	r2, r3, #31
 8005d94:	4907      	ldr	r1, [pc, #28]	; (8005db4 <__NVIC_EnableIRQ+0x38>)
 8005d96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005d9a:	095b      	lsrs	r3, r3, #5
 8005d9c:	2001      	movs	r0, #1
 8005d9e:	fa00 f202 	lsl.w	r2, r0, r2
 8005da2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8005da6:	bf00      	nop
 8005da8:	370c      	adds	r7, #12
 8005daa:	46bd      	mov	sp, r7
 8005dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005db0:	4770      	bx	lr
 8005db2:	bf00      	nop
 8005db4:	e000e100 	.word	0xe000e100

08005db8 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8005db8:	b480      	push	{r7}
 8005dba:	b083      	sub	sp, #12
 8005dbc:	af00      	add	r7, sp, #0
 8005dbe:	4603      	mov	r3, r0
 8005dc0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8005dc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005dc6:	2b00      	cmp	r3, #0
 8005dc8:	db12      	blt.n	8005df0 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005dca:	79fb      	ldrb	r3, [r7, #7]
 8005dcc:	f003 021f 	and.w	r2, r3, #31
 8005dd0:	490a      	ldr	r1, [pc, #40]	; (8005dfc <__NVIC_DisableIRQ+0x44>)
 8005dd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005dd6:	095b      	lsrs	r3, r3, #5
 8005dd8:	2001      	movs	r0, #1
 8005dda:	fa00 f202 	lsl.w	r2, r0, r2
 8005dde:	3320      	adds	r3, #32
 8005de0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8005de4:	f3bf 8f4f 	dsb	sy
}
 8005de8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8005dea:	f3bf 8f6f 	isb	sy
}
 8005dee:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 8005df0:	bf00      	nop
 8005df2:	370c      	adds	r7, #12
 8005df4:	46bd      	mov	sp, r7
 8005df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dfa:	4770      	bx	lr
 8005dfc:	e000e100 	.word	0xe000e100

08005e00 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8005e00:	b480      	push	{r7}
 8005e02:	b083      	sub	sp, #12
 8005e04:	af00      	add	r7, sp, #0
 8005e06:	4603      	mov	r3, r0
 8005e08:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8005e0a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005e0e:	2b00      	cmp	r3, #0
 8005e10:	db0c      	blt.n	8005e2c <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005e12:	79fb      	ldrb	r3, [r7, #7]
 8005e14:	f003 021f 	and.w	r2, r3, #31
 8005e18:	4907      	ldr	r1, [pc, #28]	; (8005e38 <__NVIC_ClearPendingIRQ+0x38>)
 8005e1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005e1e:	095b      	lsrs	r3, r3, #5
 8005e20:	2001      	movs	r0, #1
 8005e22:	fa00 f202 	lsl.w	r2, r0, r2
 8005e26:	3360      	adds	r3, #96	; 0x60
 8005e28:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8005e2c:	bf00      	nop
 8005e2e:	370c      	adds	r7, #12
 8005e30:	46bd      	mov	sp, r7
 8005e32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e36:	4770      	bx	lr
 8005e38:	e000e100 	.word	0xe000e100

08005e3c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8005e3c:	b480      	push	{r7}
 8005e3e:	b083      	sub	sp, #12
 8005e40:	af00      	add	r7, sp, #0
 8005e42:	4603      	mov	r3, r0
 8005e44:	6039      	str	r1, [r7, #0]
 8005e46:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8005e48:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	db0a      	blt.n	8005e66 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005e50:	683b      	ldr	r3, [r7, #0]
 8005e52:	b2da      	uxtb	r2, r3
 8005e54:	490c      	ldr	r1, [pc, #48]	; (8005e88 <__NVIC_SetPriority+0x4c>)
 8005e56:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005e5a:	0112      	lsls	r2, r2, #4
 8005e5c:	b2d2      	uxtb	r2, r2
 8005e5e:	440b      	add	r3, r1
 8005e60:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8005e64:	e00a      	b.n	8005e7c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005e66:	683b      	ldr	r3, [r7, #0]
 8005e68:	b2da      	uxtb	r2, r3
 8005e6a:	4908      	ldr	r1, [pc, #32]	; (8005e8c <__NVIC_SetPriority+0x50>)
 8005e6c:	79fb      	ldrb	r3, [r7, #7]
 8005e6e:	f003 030f 	and.w	r3, r3, #15
 8005e72:	3b04      	subs	r3, #4
 8005e74:	0112      	lsls	r2, r2, #4
 8005e76:	b2d2      	uxtb	r2, r2
 8005e78:	440b      	add	r3, r1
 8005e7a:	761a      	strb	r2, [r3, #24]
}
 8005e7c:	bf00      	nop
 8005e7e:	370c      	adds	r7, #12
 8005e80:	46bd      	mov	sp, r7
 8005e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e86:	4770      	bx	lr
 8005e88:	e000e100 	.word	0xe000e100
 8005e8c:	e000ed00 	.word	0xe000ed00

08005e90 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8005e90:	b480      	push	{r7}
 8005e92:	b089      	sub	sp, #36	; 0x24
 8005e94:	af00      	add	r7, sp, #0
 8005e96:	60f8      	str	r0, [r7, #12]
 8005e98:	60b9      	str	r1, [r7, #8]
 8005e9a:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8005e9c:	68fb      	ldr	r3, [r7, #12]
 8005e9e:	f003 0307 	and.w	r3, r3, #7
 8005ea2:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005ea4:	69fb      	ldr	r3, [r7, #28]
 8005ea6:	f1c3 0307 	rsb	r3, r3, #7
 8005eaa:	2b04      	cmp	r3, #4
 8005eac:	bf28      	it	cs
 8005eae:	2304      	movcs	r3, #4
 8005eb0:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005eb2:	69fb      	ldr	r3, [r7, #28]
 8005eb4:	3304      	adds	r3, #4
 8005eb6:	2b06      	cmp	r3, #6
 8005eb8:	d902      	bls.n	8005ec0 <NVIC_EncodePriority+0x30>
 8005eba:	69fb      	ldr	r3, [r7, #28]
 8005ebc:	3b03      	subs	r3, #3
 8005ebe:	e000      	b.n	8005ec2 <NVIC_EncodePriority+0x32>
 8005ec0:	2300      	movs	r3, #0
 8005ec2:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005ec4:	f04f 32ff 	mov.w	r2, #4294967295
 8005ec8:	69bb      	ldr	r3, [r7, #24]
 8005eca:	fa02 f303 	lsl.w	r3, r2, r3
 8005ece:	43da      	mvns	r2, r3
 8005ed0:	68bb      	ldr	r3, [r7, #8]
 8005ed2:	401a      	ands	r2, r3
 8005ed4:	697b      	ldr	r3, [r7, #20]
 8005ed6:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005ed8:	f04f 31ff 	mov.w	r1, #4294967295
 8005edc:	697b      	ldr	r3, [r7, #20]
 8005ede:	fa01 f303 	lsl.w	r3, r1, r3
 8005ee2:	43d9      	mvns	r1, r3
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005ee8:	4313      	orrs	r3, r2
         );
}
 8005eea:	4618      	mov	r0, r3
 8005eec:	3724      	adds	r7, #36	; 0x24
 8005eee:	46bd      	mov	sp, r7
 8005ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ef4:	4770      	bx	lr
	...

08005ef8 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8005ef8:	b580      	push	{r7, lr}
 8005efa:	b082      	sub	sp, #8
 8005efc:	af00      	add	r7, sp, #0
 8005efe:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	3b01      	subs	r3, #1
 8005f04:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8005f08:	d301      	bcc.n	8005f0e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8005f0a:	2301      	movs	r3, #1
 8005f0c:	e00f      	b.n	8005f2e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8005f0e:	4a0a      	ldr	r2, [pc, #40]	; (8005f38 <SysTick_Config+0x40>)
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	3b01      	subs	r3, #1
 8005f14:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8005f16:	210f      	movs	r1, #15
 8005f18:	f04f 30ff 	mov.w	r0, #4294967295
 8005f1c:	f7ff ff8e 	bl	8005e3c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8005f20:	4b05      	ldr	r3, [pc, #20]	; (8005f38 <SysTick_Config+0x40>)
 8005f22:	2200      	movs	r2, #0
 8005f24:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8005f26:	4b04      	ldr	r3, [pc, #16]	; (8005f38 <SysTick_Config+0x40>)
 8005f28:	2207      	movs	r2, #7
 8005f2a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8005f2c:	2300      	movs	r3, #0
}
 8005f2e:	4618      	mov	r0, r3
 8005f30:	3708      	adds	r7, #8
 8005f32:	46bd      	mov	sp, r7
 8005f34:	bd80      	pop	{r7, pc}
 8005f36:	bf00      	nop
 8005f38:	e000e010 	.word	0xe000e010

08005f3c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8005f3c:	b580      	push	{r7, lr}
 8005f3e:	b082      	sub	sp, #8
 8005f40:	af00      	add	r7, sp, #0
 8005f42:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8005f44:	6878      	ldr	r0, [r7, #4]
 8005f46:	f7ff fee7 	bl	8005d18 <__NVIC_SetPriorityGrouping>
}
 8005f4a:	bf00      	nop
 8005f4c:	3708      	adds	r7, #8
 8005f4e:	46bd      	mov	sp, r7
 8005f50:	bd80      	pop	{r7, pc}

08005f52 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8005f52:	b580      	push	{r7, lr}
 8005f54:	b086      	sub	sp, #24
 8005f56:	af00      	add	r7, sp, #0
 8005f58:	4603      	mov	r3, r0
 8005f5a:	60b9      	str	r1, [r7, #8]
 8005f5c:	607a      	str	r2, [r7, #4]
 8005f5e:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 8005f60:	2300      	movs	r3, #0
 8005f62:	617b      	str	r3, [r7, #20]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8005f64:	f7ff fefc 	bl	8005d60 <__NVIC_GetPriorityGrouping>
 8005f68:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8005f6a:	687a      	ldr	r2, [r7, #4]
 8005f6c:	68b9      	ldr	r1, [r7, #8]
 8005f6e:	6978      	ldr	r0, [r7, #20]
 8005f70:	f7ff ff8e 	bl	8005e90 <NVIC_EncodePriority>
 8005f74:	4602      	mov	r2, r0
 8005f76:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8005f7a:	4611      	mov	r1, r2
 8005f7c:	4618      	mov	r0, r3
 8005f7e:	f7ff ff5d 	bl	8005e3c <__NVIC_SetPriority>
}
 8005f82:	bf00      	nop
 8005f84:	3718      	adds	r7, #24
 8005f86:	46bd      	mov	sp, r7
 8005f88:	bd80      	pop	{r7, pc}

08005f8a <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32l4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8005f8a:	b580      	push	{r7, lr}
 8005f8c:	b082      	sub	sp, #8
 8005f8e:	af00      	add	r7, sp, #0
 8005f90:	4603      	mov	r3, r0
 8005f92:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8005f94:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005f98:	4618      	mov	r0, r3
 8005f9a:	f7ff feef 	bl	8005d7c <__NVIC_EnableIRQ>
}
 8005f9e:	bf00      	nop
 8005fa0:	3708      	adds	r7, #8
 8005fa2:	46bd      	mov	sp, r7
 8005fa4:	bd80      	pop	{r7, pc}

08005fa6 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32l4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8005fa6:	b580      	push	{r7, lr}
 8005fa8:	b082      	sub	sp, #8
 8005faa:	af00      	add	r7, sp, #0
 8005fac:	4603      	mov	r3, r0
 8005fae:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 8005fb0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005fb4:	4618      	mov	r0, r3
 8005fb6:	f7ff feff 	bl	8005db8 <__NVIC_DisableIRQ>
}
 8005fba:	bf00      	nop
 8005fbc:	3708      	adds	r7, #8
 8005fbe:	46bd      	mov	sp, r7
 8005fc0:	bd80      	pop	{r7, pc}

08005fc2 <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8005fc2:	b580      	push	{r7, lr}
 8005fc4:	b082      	sub	sp, #8
 8005fc6:	af00      	add	r7, sp, #0
 8005fc8:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8005fca:	6878      	ldr	r0, [r7, #4]
 8005fcc:	f7ff ff94 	bl	8005ef8 <SysTick_Config>
 8005fd0:	4603      	mov	r3, r0
}
 8005fd2:	4618      	mov	r0, r3
 8005fd4:	3708      	adds	r7, #8
 8005fd6:	46bd      	mov	sp, r7
 8005fd8:	bd80      	pop	{r7, pc}

08005fda <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32l4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8005fda:	b580      	push	{r7, lr}
 8005fdc:	b082      	sub	sp, #8
 8005fde:	af00      	add	r7, sp, #0
 8005fe0:	4603      	mov	r3, r0
 8005fe2:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 8005fe4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005fe8:	4618      	mov	r0, r3
 8005fea:	f7ff ff09 	bl	8005e00 <__NVIC_ClearPendingIRQ>
}
 8005fee:	bf00      	nop
 8005ff0:	3708      	adds	r7, #8
 8005ff2:	46bd      	mov	sp, r7
 8005ff4:	bd80      	pop	{r7, pc}
	...

08005ff8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005ff8:	b580      	push	{r7, lr}
 8005ffa:	b082      	sub	sp, #8
 8005ffc:	af00      	add	r7, sp, #0
 8005ffe:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006000:	687b      	ldr	r3, [r7, #4]
 8006002:	2b00      	cmp	r3, #0
 8006004:	d101      	bne.n	800600a <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8006006:	2301      	movs	r3, #1
 8006008:	e054      	b.n	80060b4 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800600a:	687b      	ldr	r3, [r7, #4]
 800600c:	7f5b      	ldrb	r3, [r3, #29]
 800600e:	b2db      	uxtb	r3, r3
 8006010:	2b00      	cmp	r3, #0
 8006012:	d105      	bne.n	8006020 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	2200      	movs	r2, #0
 8006018:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800601a:	6878      	ldr	r0, [r7, #4]
 800601c:	f7fe fa9c 	bl	8004558 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	2202      	movs	r2, #2
 8006024:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8006026:	687b      	ldr	r3, [r7, #4]
 8006028:	791b      	ldrb	r3, [r3, #4]
 800602a:	2b00      	cmp	r3, #0
 800602c:	d10c      	bne.n	8006048 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 800602e:	687b      	ldr	r3, [r7, #4]
 8006030:	681b      	ldr	r3, [r3, #0]
 8006032:	4a22      	ldr	r2, [pc, #136]	; (80060bc <HAL_CRC_Init+0xc4>)
 8006034:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	681b      	ldr	r3, [r3, #0]
 800603a:	689a      	ldr	r2, [r3, #8]
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	681b      	ldr	r3, [r3, #0]
 8006040:	f022 0218 	bic.w	r2, r2, #24
 8006044:	609a      	str	r2, [r3, #8]
 8006046:	e00c      	b.n	8006062 <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	6899      	ldr	r1, [r3, #8]
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	68db      	ldr	r3, [r3, #12]
 8006050:	461a      	mov	r2, r3
 8006052:	6878      	ldr	r0, [r7, #4]
 8006054:	f000 f834 	bl	80060c0 <HAL_CRCEx_Polynomial_Set>
 8006058:	4603      	mov	r3, r0
 800605a:	2b00      	cmp	r3, #0
 800605c:	d001      	beq.n	8006062 <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 800605e:	2301      	movs	r3, #1
 8006060:	e028      	b.n	80060b4 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	795b      	ldrb	r3, [r3, #5]
 8006066:	2b00      	cmp	r3, #0
 8006068:	d105      	bne.n	8006076 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800606a:	687b      	ldr	r3, [r7, #4]
 800606c:	681b      	ldr	r3, [r3, #0]
 800606e:	f04f 32ff 	mov.w	r2, #4294967295
 8006072:	611a      	str	r2, [r3, #16]
 8006074:	e004      	b.n	8006080 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	687a      	ldr	r2, [r7, #4]
 800607c:	6912      	ldr	r2, [r2, #16]
 800607e:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	681b      	ldr	r3, [r3, #0]
 8006084:	689b      	ldr	r3, [r3, #8]
 8006086:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 800608a:	687b      	ldr	r3, [r7, #4]
 800608c:	695a      	ldr	r2, [r3, #20]
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	681b      	ldr	r3, [r3, #0]
 8006092:	430a      	orrs	r2, r1
 8006094:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8006096:	687b      	ldr	r3, [r7, #4]
 8006098:	681b      	ldr	r3, [r3, #0]
 800609a:	689b      	ldr	r3, [r3, #8]
 800609c:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 80060a0:	687b      	ldr	r3, [r7, #4]
 80060a2:	699a      	ldr	r2, [r3, #24]
 80060a4:	687b      	ldr	r3, [r7, #4]
 80060a6:	681b      	ldr	r3, [r3, #0]
 80060a8:	430a      	orrs	r2, r1
 80060aa:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	2201      	movs	r2, #1
 80060b0:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 80060b2:	2300      	movs	r3, #0
}
 80060b4:	4618      	mov	r0, r3
 80060b6:	3708      	adds	r7, #8
 80060b8:	46bd      	mov	sp, r7
 80060ba:	bd80      	pop	{r7, pc}
 80060bc:	04c11db7 	.word	0x04c11db7

080060c0 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 80060c0:	b480      	push	{r7}
 80060c2:	b087      	sub	sp, #28
 80060c4:	af00      	add	r7, sp, #0
 80060c6:	60f8      	str	r0, [r7, #12]
 80060c8:	60b9      	str	r1, [r7, #8]
 80060ca:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80060cc:	2300      	movs	r3, #0
 80060ce:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80060d0:	231f      	movs	r3, #31
 80060d2:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 80060d4:	68bb      	ldr	r3, [r7, #8]
 80060d6:	f003 0301 	and.w	r3, r3, #1
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d102      	bne.n	80060e4 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 80060de:	2301      	movs	r3, #1
 80060e0:	75fb      	strb	r3, [r7, #23]
 80060e2:	e063      	b.n	80061ac <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80060e4:	bf00      	nop
 80060e6:	693b      	ldr	r3, [r7, #16]
 80060e8:	1e5a      	subs	r2, r3, #1
 80060ea:	613a      	str	r2, [r7, #16]
 80060ec:	2b00      	cmp	r3, #0
 80060ee:	d009      	beq.n	8006104 <HAL_CRCEx_Polynomial_Set+0x44>
 80060f0:	693b      	ldr	r3, [r7, #16]
 80060f2:	f003 031f 	and.w	r3, r3, #31
 80060f6:	68ba      	ldr	r2, [r7, #8]
 80060f8:	fa22 f303 	lsr.w	r3, r2, r3
 80060fc:	f003 0301 	and.w	r3, r3, #1
 8006100:	2b00      	cmp	r3, #0
 8006102:	d0f0      	beq.n	80060e6 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 8006104:	687b      	ldr	r3, [r7, #4]
 8006106:	2b18      	cmp	r3, #24
 8006108:	d846      	bhi.n	8006198 <HAL_CRCEx_Polynomial_Set+0xd8>
 800610a:	a201      	add	r2, pc, #4	; (adr r2, 8006110 <HAL_CRCEx_Polynomial_Set+0x50>)
 800610c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006110:	0800619f 	.word	0x0800619f
 8006114:	08006199 	.word	0x08006199
 8006118:	08006199 	.word	0x08006199
 800611c:	08006199 	.word	0x08006199
 8006120:	08006199 	.word	0x08006199
 8006124:	08006199 	.word	0x08006199
 8006128:	08006199 	.word	0x08006199
 800612c:	08006199 	.word	0x08006199
 8006130:	0800618d 	.word	0x0800618d
 8006134:	08006199 	.word	0x08006199
 8006138:	08006199 	.word	0x08006199
 800613c:	08006199 	.word	0x08006199
 8006140:	08006199 	.word	0x08006199
 8006144:	08006199 	.word	0x08006199
 8006148:	08006199 	.word	0x08006199
 800614c:	08006199 	.word	0x08006199
 8006150:	08006181 	.word	0x08006181
 8006154:	08006199 	.word	0x08006199
 8006158:	08006199 	.word	0x08006199
 800615c:	08006199 	.word	0x08006199
 8006160:	08006199 	.word	0x08006199
 8006164:	08006199 	.word	0x08006199
 8006168:	08006199 	.word	0x08006199
 800616c:	08006199 	.word	0x08006199
 8006170:	08006175 	.word	0x08006175
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8006174:	693b      	ldr	r3, [r7, #16]
 8006176:	2b06      	cmp	r3, #6
 8006178:	d913      	bls.n	80061a2 <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 800617a:	2301      	movs	r3, #1
 800617c:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800617e:	e010      	b.n	80061a2 <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 8006180:	693b      	ldr	r3, [r7, #16]
 8006182:	2b07      	cmp	r3, #7
 8006184:	d90f      	bls.n	80061a6 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8006186:	2301      	movs	r3, #1
 8006188:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800618a:	e00c      	b.n	80061a6 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 800618c:	693b      	ldr	r3, [r7, #16]
 800618e:	2b0f      	cmp	r3, #15
 8006190:	d90b      	bls.n	80061aa <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 8006192:	2301      	movs	r3, #1
 8006194:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8006196:	e008      	b.n	80061aa <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8006198:	2301      	movs	r3, #1
 800619a:	75fb      	strb	r3, [r7, #23]
        break;
 800619c:	e006      	b.n	80061ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800619e:	bf00      	nop
 80061a0:	e004      	b.n	80061ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80061a2:	bf00      	nop
 80061a4:	e002      	b.n	80061ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80061a6:	bf00      	nop
 80061a8:	e000      	b.n	80061ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80061aa:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 80061ac:	7dfb      	ldrb	r3, [r7, #23]
 80061ae:	2b00      	cmp	r3, #0
 80061b0:	d10d      	bne.n	80061ce <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 80061b2:	68fb      	ldr	r3, [r7, #12]
 80061b4:	681b      	ldr	r3, [r3, #0]
 80061b6:	68ba      	ldr	r2, [r7, #8]
 80061b8:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80061ba:	68fb      	ldr	r3, [r7, #12]
 80061bc:	681b      	ldr	r3, [r3, #0]
 80061be:	689b      	ldr	r3, [r3, #8]
 80061c0:	f023 0118 	bic.w	r1, r3, #24
 80061c4:	68fb      	ldr	r3, [r7, #12]
 80061c6:	681b      	ldr	r3, [r3, #0]
 80061c8:	687a      	ldr	r2, [r7, #4]
 80061ca:	430a      	orrs	r2, r1
 80061cc:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 80061ce:	7dfb      	ldrb	r3, [r7, #23]
}
 80061d0:	4618      	mov	r0, r3
 80061d2:	371c      	adds	r7, #28
 80061d4:	46bd      	mov	sp, r7
 80061d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061da:	4770      	bx	lr

080061dc <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef *hdac)
{
 80061dc:	b580      	push	{r7, lr}
 80061de:	b082      	sub	sp, #8
 80061e0:	af00      	add	r7, sp, #0
 80061e2:	6078      	str	r0, [r7, #4]
  /* Check DAC handle */
  if (hdac == NULL)
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d101      	bne.n	80061ee <HAL_DAC_Init+0x12>
  {
     return HAL_ERROR;
 80061ea:	2301      	movs	r3, #1
 80061ec:	e014      	b.n	8006218 <HAL_DAC_Init+0x3c>
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));

  if (hdac->State == HAL_DAC_STATE_RESET)
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	791b      	ldrb	r3, [r3, #4]
 80061f2:	b2db      	uxtb	r3, r3
 80061f4:	2b00      	cmp	r3, #0
 80061f6:	d105      	bne.n	8006204 <HAL_DAC_Init+0x28>
      hdac->MspInitCallback             = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */

    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	2200      	movs	r2, #0
 80061fc:	715a      	strb	r2, [r3, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 80061fe:	6878      	ldr	r0, [r7, #4]
 8006200:	f7fe f9ca 	bl	8004598 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }

  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	2202      	movs	r2, #2
 8006208:	711a      	strb	r2, [r3, #4]

  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	2200      	movs	r2, #0
 800620e:	611a      	str	r2, [r3, #16]

  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	2201      	movs	r2, #1
 8006214:	711a      	strb	r2, [r3, #4]

  /* Return function status */
  return HAL_OK;
 8006216:	2300      	movs	r3, #0
}
 8006218:	4618      	mov	r0, r3
 800621a:	3708      	adds	r7, #8
 800621c:	46bd      	mov	sp, r7
 800621e:	bd80      	pop	{r7, pc}

08006220 <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected (when supported)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef *hdac, uint32_t Channel)
{
 8006220:	b480      	push	{r7}
 8006222:	b083      	sub	sp, #12
 8006224:	af00      	add	r7, sp, #0
 8006226:	6078      	str	r0, [r7, #4]
 8006228:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));

  /* Process locked */
  __HAL_LOCK(hdac);
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	795b      	ldrb	r3, [r3, #5]
 800622e:	2b01      	cmp	r3, #1
 8006230:	d101      	bne.n	8006236 <HAL_DAC_Start+0x16>
 8006232:	2302      	movs	r3, #2
 8006234:	e040      	b.n	80062b8 <HAL_DAC_Start+0x98>
 8006236:	687b      	ldr	r3, [r7, #4]
 8006238:	2201      	movs	r2, #1
 800623a:	715a      	strb	r2, [r3, #5]

  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 800623c:	687b      	ldr	r3, [r7, #4]
 800623e:	2202      	movs	r2, #2
 8006240:	711a      	strb	r2, [r3, #4]

  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	681b      	ldr	r3, [r3, #0]
 8006246:	6819      	ldr	r1, [r3, #0]
 8006248:	683b      	ldr	r3, [r7, #0]
 800624a:	f003 0310 	and.w	r3, r3, #16
 800624e:	2201      	movs	r2, #1
 8006250:	409a      	lsls	r2, r3
 8006252:	687b      	ldr	r3, [r7, #4]
 8006254:	681b      	ldr	r3, [r3, #0]
 8006256:	430a      	orrs	r2, r1
 8006258:	601a      	str	r2, [r3, #0]

#if defined (STM32L4P5xx) || defined (STM32L4Q5xx) || defined (STM32L4R5xx) || defined (STM32L4R7xx) || defined (STM32L4R9xx) || defined (STM32L4S5xx) || defined (STM32L4S7xx) || defined(STM32L4S9xx)
  if (Channel == DAC_CHANNEL_1)
 800625a:	683b      	ldr	r3, [r7, #0]
 800625c:	2b00      	cmp	r3, #0
 800625e:	d10f      	bne.n	8006280 <HAL_DAC_Start+0x60>
  {
    /* Check if software trigger enabled */
    if ((hdac->Instance->CR & (DAC_CR_TEN1 | DAC_CR_TSEL1)) == DAC_TRIGGER_SOFTWARE)
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	681b      	ldr	r3, [r3, #0]
 8006264:	681b      	ldr	r3, [r3, #0]
 8006266:	f003 033e 	and.w	r3, r3, #62	; 0x3e
 800626a:	2b02      	cmp	r3, #2
 800626c:	d11d      	bne.n	80062aa <HAL_DAC_Start+0x8a>
    {
      /* Enable the selected DAC software conversion */
      SET_BIT(hdac->Instance->SWTRIGR, DAC_SWTRIGR_SWTRIG1);
 800626e:	687b      	ldr	r3, [r7, #4]
 8006270:	681b      	ldr	r3, [r3, #0]
 8006272:	685a      	ldr	r2, [r3, #4]
 8006274:	687b      	ldr	r3, [r7, #4]
 8006276:	681b      	ldr	r3, [r3, #0]
 8006278:	f042 0201 	orr.w	r2, r2, #1
 800627c:	605a      	str	r2, [r3, #4]
 800627e:	e014      	b.n	80062aa <HAL_DAC_Start+0x8a>
    }
  }
  else
  {
    /* Check if software trigger enabled */
    if ((hdac->Instance->CR & (DAC_CR_TEN2 | DAC_CR_TSEL2)) == (DAC_TRIGGER_SOFTWARE << (Channel & 0x10UL)))
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	681b      	ldr	r3, [r3, #0]
 8006284:	681b      	ldr	r3, [r3, #0]
 8006286:	f403 1278 	and.w	r2, r3, #4063232	; 0x3e0000
 800628a:	683b      	ldr	r3, [r7, #0]
 800628c:	f003 0310 	and.w	r3, r3, #16
 8006290:	2102      	movs	r1, #2
 8006292:	fa01 f303 	lsl.w	r3, r1, r3
 8006296:	429a      	cmp	r2, r3
 8006298:	d107      	bne.n	80062aa <HAL_DAC_Start+0x8a>
    {
      /* Enable the selected DAC software conversion*/
      SET_BIT(hdac->Instance->SWTRIGR, DAC_SWTRIGR_SWTRIG2);
 800629a:	687b      	ldr	r3, [r7, #4]
 800629c:	681b      	ldr	r3, [r3, #0]
 800629e:	685a      	ldr	r2, [r3, #4]
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	681b      	ldr	r3, [r3, #0]
 80062a4:	f042 0202 	orr.w	r2, r2, #2
 80062a8:	605a      	str	r2, [r3, #4]
    /* Enable the selected DAC software conversion */
    SET_BIT(hdac->Instance->SWTRIGR, DAC_SWTRIGR_SWTRIG1);
  }
#endif /* STM32L451xx STM32L452xx STM32L462xx */
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	2201      	movs	r2, #1
 80062ae:	711a      	strb	r2, [r3, #4]

  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80062b0:	687b      	ldr	r3, [r7, #4]
 80062b2:	2200      	movs	r2, #0
 80062b4:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 80062b6:	2300      	movs	r3, #0
}
 80062b8:	4618      	mov	r0, r3
 80062ba:	370c      	adds	r7, #12
 80062bc:	46bd      	mov	sp, r7
 80062be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062c2:	4770      	bx	lr

080062c4 <HAL_DAC_Stop>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Stop(DAC_HandleTypeDef *hdac, uint32_t Channel)
{
 80062c4:	b480      	push	{r7}
 80062c6:	b083      	sub	sp, #12
 80062c8:	af00      	add	r7, sp, #0
 80062ca:	6078      	str	r0, [r7, #4]
 80062cc:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));

  /* Disable the Peripheral */
  __HAL_DAC_DISABLE(hdac, Channel);
 80062ce:	687b      	ldr	r3, [r7, #4]
 80062d0:	681b      	ldr	r3, [r3, #0]
 80062d2:	6819      	ldr	r1, [r3, #0]
 80062d4:	683b      	ldr	r3, [r7, #0]
 80062d6:	f003 0310 	and.w	r3, r3, #16
 80062da:	2201      	movs	r2, #1
 80062dc:	fa02 f303 	lsl.w	r3, r2, r3
 80062e0:	43da      	mvns	r2, r3
 80062e2:	687b      	ldr	r3, [r7, #4]
 80062e4:	681b      	ldr	r3, [r3, #0]
 80062e6:	400a      	ands	r2, r1
 80062e8:	601a      	str	r2, [r3, #0]

  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	2201      	movs	r2, #1
 80062ee:	711a      	strb	r2, [r3, #4]

  /* Return function status */
  return HAL_OK;
 80062f0:	2300      	movs	r3, #0
}
 80062f2:	4618      	mov	r0, r3
 80062f4:	370c      	adds	r7, #12
 80062f6:	46bd      	mov	sp, r7
 80062f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062fc:	4770      	bx	lr

080062fe <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef *hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{
 80062fe:	b480      	push	{r7}
 8006300:	b087      	sub	sp, #28
 8006302:	af00      	add	r7, sp, #0
 8006304:	60f8      	str	r0, [r7, #12]
 8006306:	60b9      	str	r1, [r7, #8]
 8006308:	607a      	str	r2, [r7, #4]
 800630a:	603b      	str	r3, [r7, #0]
  __IO uint32_t tmp = 0;
 800630c:	2300      	movs	r3, #0
 800630e:	617b      	str	r3, [r7, #20]
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));

  tmp = (uint32_t)hdac->Instance;
 8006310:	68fb      	ldr	r3, [r7, #12]
 8006312:	681b      	ldr	r3, [r3, #0]
 8006314:	617b      	str	r3, [r7, #20]
  if (Channel == DAC_CHANNEL_1)
 8006316:	68bb      	ldr	r3, [r7, #8]
 8006318:	2b00      	cmp	r3, #0
 800631a:	d105      	bne.n	8006328 <HAL_DAC_SetValue+0x2a>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 800631c:	697a      	ldr	r2, [r7, #20]
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	4413      	add	r3, r2
 8006322:	3308      	adds	r3, #8
 8006324:	617b      	str	r3, [r7, #20]
 8006326:	e004      	b.n	8006332 <HAL_DAC_SetValue+0x34>
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006328:	697a      	ldr	r2, [r7, #20]
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	4413      	add	r3, r2
 800632e:	3314      	adds	r3, #20
 8006330:	617b      	str	r3, [r7, #20]
  }

  /* Set the DAC channel selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 8006332:	697b      	ldr	r3, [r7, #20]
 8006334:	461a      	mov	r2, r3
 8006336:	683b      	ldr	r3, [r7, #0]
 8006338:	6013      	str	r3, [r2, #0]

  /* Return function status */
  return HAL_OK;
 800633a:	2300      	movs	r3, #0
}
 800633c:	4618      	mov	r0, r3
 800633e:	371c      	adds	r7, #28
 8006340:	46bd      	mov	sp, r7
 8006342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006346:	4770      	bx	lr

08006348 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected (Whenever present)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef *hdac, DAC_ChannelConfTypeDef *sConfig, uint32_t Channel)
{
 8006348:	b580      	push	{r7, lr}
 800634a:	b088      	sub	sp, #32
 800634c:	af00      	add	r7, sp, #0
 800634e:	60f8      	str	r0, [r7, #12]
 8006350:	60b9      	str	r1, [r7, #8]
 8006352:	607a      	str	r2, [r7, #4]
  uint32_t tmpreg1;
  uint32_t tmpreg2;
  uint32_t tickstart = 0U;
 8006354:	2300      	movs	r3, #0
 8006356:	61bb      	str	r3, [r7, #24]
    assert_param(IS_DAC_REFRESHTIME(sConfig->DAC_SampleAndHoldConfig.DAC_RefreshTime));
  }
  assert_param(IS_DAC_CHANNEL(Channel));

  /* Process locked */
  __HAL_LOCK(hdac);
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	795b      	ldrb	r3, [r3, #5]
 800635c:	2b01      	cmp	r3, #1
 800635e:	d101      	bne.n	8006364 <HAL_DAC_ConfigChannel+0x1c>
 8006360:	2302      	movs	r3, #2
 8006362:	e137      	b.n	80065d4 <HAL_DAC_ConfigChannel+0x28c>
 8006364:	68fb      	ldr	r3, [r7, #12]
 8006366:	2201      	movs	r2, #1
 8006368:	715a      	strb	r2, [r3, #5]

  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 800636a:	68fb      	ldr	r3, [r7, #12]
 800636c:	2202      	movs	r2, #2
 800636e:	711a      	strb	r2, [r3, #4]

  if (sConfig->DAC_SampleAndHold == DAC_SAMPLEANDHOLD_ENABLE)
 8006370:	68bb      	ldr	r3, [r7, #8]
 8006372:	685b      	ldr	r3, [r3, #4]
 8006374:	2b04      	cmp	r3, #4
 8006376:	f040 8081 	bne.w	800647c <HAL_DAC_ConfigChannel+0x134>
  /* Sample on old configuration */
  {
    /* Get timeout */
    tickstart = HAL_GetTick();
 800637a:	f7ff fc9d 	bl	8005cb8 <HAL_GetTick>
 800637e:	61b8      	str	r0, [r7, #24]

    if (Channel == DAC_CHANNEL_1)
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	2b00      	cmp	r3, #0
 8006384:	d140      	bne.n	8006408 <HAL_DAC_ConfigChannel+0xc0>
    {

      /* SHSR1 can be written when BWST1 is cleared */
      while (((hdac->Instance->SR) & DAC_SR_BWST1) != 0UL)
 8006386:	e018      	b.n	80063ba <HAL_DAC_ConfigChannel+0x72>
      {
        /* Check for the Timeout */
        if ((HAL_GetTick() - tickstart) > TIMEOUT_DAC_CALIBCONFIG)
 8006388:	f7ff fc96 	bl	8005cb8 <HAL_GetTick>
 800638c:	4602      	mov	r2, r0
 800638e:	69bb      	ldr	r3, [r7, #24]
 8006390:	1ad3      	subs	r3, r2, r3
 8006392:	2b01      	cmp	r3, #1
 8006394:	d911      	bls.n	80063ba <HAL_DAC_ConfigChannel+0x72>
        {
          /* New check to avoid false timeout detection in case of preemption */
          if(((hdac->Instance->SR) & DAC_SR_BWST1) != 0UL)
 8006396:	68fb      	ldr	r3, [r7, #12]
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800639c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d00a      	beq.n	80063ba <HAL_DAC_ConfigChannel+0x72>
          {
            /* Update error code */
            SET_BIT(hdac->ErrorCode, HAL_DAC_ERROR_TIMEOUT);
 80063a4:	68fb      	ldr	r3, [r7, #12]
 80063a6:	691b      	ldr	r3, [r3, #16]
 80063a8:	f043 0208 	orr.w	r2, r3, #8
 80063ac:	68fb      	ldr	r3, [r7, #12]
 80063ae:	611a      	str	r2, [r3, #16]

            /* Change the DMA state */
            hdac->State = HAL_DAC_STATE_TIMEOUT;
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	2203      	movs	r2, #3
 80063b4:	711a      	strb	r2, [r3, #4]

            return HAL_TIMEOUT;
 80063b6:	2303      	movs	r3, #3
 80063b8:	e10c      	b.n	80065d4 <HAL_DAC_ConfigChannel+0x28c>
      while (((hdac->Instance->SR) & DAC_SR_BWST1) != 0UL)
 80063ba:	68fb      	ldr	r3, [r7, #12]
 80063bc:	681b      	ldr	r3, [r3, #0]
 80063be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80063c0:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80063c4:	2b00      	cmp	r3, #0
 80063c6:	d1df      	bne.n	8006388 <HAL_DAC_ConfigChannel+0x40>
          }
        }
      }
      HAL_Delay(1);
 80063c8:	2001      	movs	r0, #1
 80063ca:	f7ff fc81 	bl	8005cd0 <HAL_Delay>
      hdac->Instance->SHSR1 = sConfig->DAC_SampleAndHoldConfig.DAC_SampleTime;
 80063ce:	68fb      	ldr	r3, [r7, #12]
 80063d0:	681b      	ldr	r3, [r3, #0]
 80063d2:	68ba      	ldr	r2, [r7, #8]
 80063d4:	69d2      	ldr	r2, [r2, #28]
 80063d6:	641a      	str	r2, [r3, #64]	; 0x40
 80063d8:	e023      	b.n	8006422 <HAL_DAC_ConfigChannel+0xda>
      /* SHSR2 can be written when BWST2 is cleared */

      while (((hdac->Instance->SR) & DAC_SR_BWST2) != 0UL)
      {
        /* Check for the Timeout */
        if ((HAL_GetTick() - tickstart) > TIMEOUT_DAC_CALIBCONFIG)
 80063da:	f7ff fc6d 	bl	8005cb8 <HAL_GetTick>
 80063de:	4602      	mov	r2, r0
 80063e0:	69bb      	ldr	r3, [r7, #24]
 80063e2:	1ad3      	subs	r3, r2, r3
 80063e4:	2b01      	cmp	r3, #1
 80063e6:	d90f      	bls.n	8006408 <HAL_DAC_ConfigChannel+0xc0>
        {
          /* New check to avoid false timeout detection in case of preemption */
          if(((hdac->Instance->SR) & DAC_SR_BWST2) != 0UL)
 80063e8:	68fb      	ldr	r3, [r7, #12]
 80063ea:	681b      	ldr	r3, [r3, #0]
 80063ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80063ee:	2b00      	cmp	r3, #0
 80063f0:	da0a      	bge.n	8006408 <HAL_DAC_ConfigChannel+0xc0>
          {
            /* Update error code */
            SET_BIT(hdac->ErrorCode, HAL_DAC_ERROR_TIMEOUT);
 80063f2:	68fb      	ldr	r3, [r7, #12]
 80063f4:	691b      	ldr	r3, [r3, #16]
 80063f6:	f043 0208 	orr.w	r2, r3, #8
 80063fa:	68fb      	ldr	r3, [r7, #12]
 80063fc:	611a      	str	r2, [r3, #16]

            /* Change the DMA state */
            hdac->State = HAL_DAC_STATE_TIMEOUT;
 80063fe:	68fb      	ldr	r3, [r7, #12]
 8006400:	2203      	movs	r2, #3
 8006402:	711a      	strb	r2, [r3, #4]

            return HAL_TIMEOUT;
 8006404:	2303      	movs	r3, #3
 8006406:	e0e5      	b.n	80065d4 <HAL_DAC_ConfigChannel+0x28c>
      while (((hdac->Instance->SR) & DAC_SR_BWST2) != 0UL)
 8006408:	68fb      	ldr	r3, [r7, #12]
 800640a:	681b      	ldr	r3, [r3, #0]
 800640c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800640e:	2b00      	cmp	r3, #0
 8006410:	dbe3      	blt.n	80063da <HAL_DAC_ConfigChannel+0x92>
          }
        }
      }
      HAL_Delay(1U);
 8006412:	2001      	movs	r0, #1
 8006414:	f7ff fc5c 	bl	8005cd0 <HAL_Delay>
      hdac->Instance->SHSR2 = sConfig->DAC_SampleAndHoldConfig.DAC_SampleTime;
 8006418:	68fb      	ldr	r3, [r7, #12]
 800641a:	681b      	ldr	r3, [r3, #0]
 800641c:	68ba      	ldr	r2, [r7, #8]
 800641e:	69d2      	ldr	r2, [r2, #28]
 8006420:	645a      	str	r2, [r3, #68]	; 0x44
    }
#endif /* STM32L451xx STM32L452xx STM32L462xx */

    /* HoldTime */
    MODIFY_REG(hdac->Instance->SHHR, DAC_SHHR_THOLD1 << (Channel & 0x10UL), (sConfig->DAC_SampleAndHoldConfig.DAC_HoldTime) << (Channel & 0x10UL));
 8006422:	68fb      	ldr	r3, [r7, #12]
 8006424:	681b      	ldr	r3, [r3, #0]
 8006426:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006428:	687b      	ldr	r3, [r7, #4]
 800642a:	f003 0310 	and.w	r3, r3, #16
 800642e:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8006432:	fa01 f303 	lsl.w	r3, r1, r3
 8006436:	43db      	mvns	r3, r3
 8006438:	ea02 0103 	and.w	r1, r2, r3
 800643c:	68bb      	ldr	r3, [r7, #8]
 800643e:	6a1a      	ldr	r2, [r3, #32]
 8006440:	687b      	ldr	r3, [r7, #4]
 8006442:	f003 0310 	and.w	r3, r3, #16
 8006446:	409a      	lsls	r2, r3
 8006448:	68fb      	ldr	r3, [r7, #12]
 800644a:	681b      	ldr	r3, [r3, #0]
 800644c:	430a      	orrs	r2, r1
 800644e:	649a      	str	r2, [r3, #72]	; 0x48
    /* RefreshTime */
    MODIFY_REG(hdac->Instance->SHRR, DAC_SHRR_TREFRESH1 << (Channel & 0x10UL), (sConfig->DAC_SampleAndHoldConfig.DAC_RefreshTime) << (Channel & 0x10UL));
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	f003 0310 	and.w	r3, r3, #16
 800645c:	21ff      	movs	r1, #255	; 0xff
 800645e:	fa01 f303 	lsl.w	r3, r1, r3
 8006462:	43db      	mvns	r3, r3
 8006464:	ea02 0103 	and.w	r1, r2, r3
 8006468:	68bb      	ldr	r3, [r7, #8]
 800646a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	f003 0310 	and.w	r3, r3, #16
 8006472:	409a      	lsls	r2, r3
 8006474:	68fb      	ldr	r3, [r7, #12]
 8006476:	681b      	ldr	r3, [r3, #0]
 8006478:	430a      	orrs	r2, r1
 800647a:	64da      	str	r2, [r3, #76]	; 0x4c
  }

  if (sConfig->DAC_UserTrimming == DAC_TRIMMING_USER)
 800647c:	68bb      	ldr	r3, [r7, #8]
 800647e:	695b      	ldr	r3, [r3, #20]
 8006480:	2b01      	cmp	r3, #1
 8006482:	d11d      	bne.n	80064c0 <HAL_DAC_ConfigChannel+0x178>
  /* USER TRIMMING */
  {
    /* Get the DAC CCR value */
    tmpreg1 = hdac->Instance->CCR;
 8006484:	68fb      	ldr	r3, [r7, #12]
 8006486:	681b      	ldr	r3, [r3, #0]
 8006488:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800648a:	61fb      	str	r3, [r7, #28]
    /* Clear trimming value */
    tmpreg1 &= ~(((uint32_t)(DAC_CCR_OTRIM1)) << (Channel & 0x10UL));
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	f003 0310 	and.w	r3, r3, #16
 8006492:	221f      	movs	r2, #31
 8006494:	fa02 f303 	lsl.w	r3, r2, r3
 8006498:	43db      	mvns	r3, r3
 800649a:	69fa      	ldr	r2, [r7, #28]
 800649c:	4013      	ands	r3, r2
 800649e:	61fb      	str	r3, [r7, #28]
    /* Configure for the selected trimming offset */
    tmpreg2 = sConfig->DAC_TrimmingValue;
 80064a0:	68bb      	ldr	r3, [r7, #8]
 80064a2:	699b      	ldr	r3, [r3, #24]
 80064a4:	617b      	str	r3, [r7, #20]
    /* Calculate CCR register value depending on DAC_Channel */
    tmpreg1 |= tmpreg2 << (Channel & 0x10UL);
 80064a6:	687b      	ldr	r3, [r7, #4]
 80064a8:	f003 0310 	and.w	r3, r3, #16
 80064ac:	697a      	ldr	r2, [r7, #20]
 80064ae:	fa02 f303 	lsl.w	r3, r2, r3
 80064b2:	69fa      	ldr	r2, [r7, #28]
 80064b4:	4313      	orrs	r3, r2
 80064b6:	61fb      	str	r3, [r7, #28]
    /* Write to DAC CCR */
    hdac->Instance->CCR = tmpreg1;
 80064b8:	68fb      	ldr	r3, [r7, #12]
 80064ba:	681b      	ldr	r3, [r3, #0]
 80064bc:	69fa      	ldr	r2, [r7, #28]
 80064be:	639a      	str	r2, [r3, #56]	; 0x38
  }
  /* else factory trimming is used (factory setting are available at reset)*/
  /* SW Nothing has nothing to do */

  /* Get the DAC MCR value */
  tmpreg1 = hdac->Instance->MCR;
 80064c0:	68fb      	ldr	r3, [r7, #12]
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80064c6:	61fb      	str	r3, [r7, #28]
  /* Clear DAC_MCR_MODEx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_MCR_MODE1)) << (Channel & 0x10UL));
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	f003 0310 	and.w	r3, r3, #16
 80064ce:	2207      	movs	r2, #7
 80064d0:	fa02 f303 	lsl.w	r3, r2, r3
 80064d4:	43db      	mvns	r3, r3
 80064d6:	69fa      	ldr	r2, [r7, #28]
 80064d8:	4013      	ands	r3, r2
 80064da:	61fb      	str	r3, [r7, #28]
  /* Configure for the selected DAC channel: mode, buffer output & on chip peripheral connect */
  tmpreg2 = (sConfig->DAC_SampleAndHold | sConfig->DAC_OutputBuffer | sConfig->DAC_ConnectOnChipPeripheral);
 80064dc:	68bb      	ldr	r3, [r7, #8]
 80064de:	685a      	ldr	r2, [r3, #4]
 80064e0:	68bb      	ldr	r3, [r7, #8]
 80064e2:	68db      	ldr	r3, [r3, #12]
 80064e4:	431a      	orrs	r2, r3
 80064e6:	68bb      	ldr	r3, [r7, #8]
 80064e8:	691b      	ldr	r3, [r3, #16]
 80064ea:	4313      	orrs	r3, r2
 80064ec:	617b      	str	r3, [r7, #20]
  /* Calculate MCR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << (Channel & 0x10UL);
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	f003 0310 	and.w	r3, r3, #16
 80064f4:	697a      	ldr	r2, [r7, #20]
 80064f6:	fa02 f303 	lsl.w	r3, r2, r3
 80064fa:	69fa      	ldr	r2, [r7, #28]
 80064fc:	4313      	orrs	r3, r2
 80064fe:	61fb      	str	r3, [r7, #28]
  /* Write to DAC MCR */
  hdac->Instance->MCR = tmpreg1;
 8006500:	68fb      	ldr	r3, [r7, #12]
 8006502:	681b      	ldr	r3, [r3, #0]
 8006504:	69fa      	ldr	r2, [r7, #28]
 8006506:	63da      	str	r2, [r3, #60]	; 0x3c

  /* DAC in normal operating mode hence clear DAC_CR_CENx bit */
  CLEAR_BIT(hdac->Instance->CR, DAC_CR_CEN1 << (Channel & 0x10UL));
 8006508:	68fb      	ldr	r3, [r7, #12]
 800650a:	681b      	ldr	r3, [r3, #0]
 800650c:	6819      	ldr	r1, [r3, #0]
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	f003 0310 	and.w	r3, r3, #16
 8006514:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8006518:	fa02 f303 	lsl.w	r3, r2, r3
 800651c:	43da      	mvns	r2, r3
 800651e:	68fb      	ldr	r3, [r7, #12]
 8006520:	681b      	ldr	r3, [r3, #0]
 8006522:	400a      	ands	r2, r1
 8006524:	601a      	str	r2, [r3, #0]

  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 8006526:	68fb      	ldr	r3, [r7, #12]
 8006528:	681b      	ldr	r3, [r3, #0]
 800652a:	681b      	ldr	r3, [r3, #0]
 800652c:	61fb      	str	r3, [r7, #28]
  /* Clear TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1)) << (Channel & 0x10UL));
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	f003 0310 	and.w	r3, r3, #16
 8006534:	f640 72fe 	movw	r2, #4094	; 0xffe
 8006538:	fa02 f303 	lsl.w	r3, r2, r3
 800653c:	43db      	mvns	r3, r3
 800653e:	69fa      	ldr	r2, [r7, #28]
 8006540:	4013      	ands	r3, r2
 8006542:	61fb      	str	r3, [r7, #28]
  /* Configure for the selected DAC channel: trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  tmpreg2 = sConfig->DAC_Trigger;
 8006544:	68bb      	ldr	r3, [r7, #8]
 8006546:	689b      	ldr	r3, [r3, #8]
 8006548:	617b      	str	r3, [r7, #20]
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << (Channel & 0x10UL);
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	f003 0310 	and.w	r3, r3, #16
 8006550:	697a      	ldr	r2, [r7, #20]
 8006552:	fa02 f303 	lsl.w	r3, r2, r3
 8006556:	69fa      	ldr	r2, [r7, #28]
 8006558:	4313      	orrs	r3, r2
 800655a:	61fb      	str	r3, [r7, #28]
#if defined (STM32L4P5xx) || defined (STM32L4Q5xx) || defined (STM32L4R5xx) || defined (STM32L4R7xx) || defined (STM32L4R9xx) || defined (STM32L4S5xx) || defined (STM32L4S7xx) || defined(STM32L4S9xx)
  if (DAC_HIGH_FREQUENCY_INTERFACE_MODE_ABOVE_80MHZ == sConfig->DAC_HighFrequency)
 800655c:	68bb      	ldr	r3, [r7, #8]
 800655e:	681b      	ldr	r3, [r3, #0]
 8006560:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006564:	d104      	bne.n	8006570 <HAL_DAC_ConfigChannel+0x228>
  {
    tmpreg1 |= DAC_CR_HFSEL;
 8006566:	69fb      	ldr	r3, [r7, #28]
 8006568:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800656c:	61fb      	str	r3, [r7, #28]
 800656e:	e018      	b.n	80065a2 <HAL_DAC_ConfigChannel+0x25a>
  }
  else
  {
    if (DAC_HIGH_FREQUENCY_INTERFACE_MODE_DISABLE == sConfig->DAC_HighFrequency)
 8006570:	68bb      	ldr	r3, [r7, #8]
 8006572:	681b      	ldr	r3, [r3, #0]
 8006574:	2b00      	cmp	r3, #0
 8006576:	d104      	bne.n	8006582 <HAL_DAC_ConfigChannel+0x23a>
    {
      tmpreg1 &= ~(DAC_CR_HFSEL);
 8006578:	69fb      	ldr	r3, [r7, #28]
 800657a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800657e:	61fb      	str	r3, [r7, #28]
 8006580:	e00f      	b.n	80065a2 <HAL_DAC_ConfigChannel+0x25a>
    }
    else /* Automatic selection */
    {
      hclkfreq = HAL_RCC_GetHCLKFreq();
 8006582:	f002 f847 	bl	8008614 <HAL_RCC_GetHCLKFreq>
 8006586:	6138      	str	r0, [r7, #16]
      if (hclkfreq > HFSEL_ENABLE_THRESHOLD_80MHZ)
 8006588:	693b      	ldr	r3, [r7, #16]
 800658a:	4a14      	ldr	r2, [pc, #80]	; (80065dc <HAL_DAC_ConfigChannel+0x294>)
 800658c:	4293      	cmp	r3, r2
 800658e:	d904      	bls.n	800659a <HAL_DAC_ConfigChannel+0x252>
      {
        /* High frequency enable when HCLK frequency higher than 80   */
         tmpreg1 |= DAC_CR_HFSEL;
 8006590:	69fb      	ldr	r3, [r7, #28]
 8006592:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006596:	61fb      	str	r3, [r7, #28]
 8006598:	e003      	b.n	80065a2 <HAL_DAC_ConfigChannel+0x25a>
      }
      else
      {
        /* High frequency disable when HCLK frequency higher than 80  */
        tmpreg1 &= ~(DAC_CR_HFSEL);
 800659a:	69fb      	ldr	r3, [r7, #28]
 800659c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80065a0:	61fb      	str	r3, [r7, #28]
  }

#endif /* STM32L4P5xx STM32L4Q5xx STM32L4R5xx STM32L4R7xx STM32L4R9xx STM32L4S5xx STM32L4S7xx STM32L4S9xx */

  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 80065a2:	68fb      	ldr	r3, [r7, #12]
 80065a4:	681b      	ldr	r3, [r3, #0]
 80065a6:	69fa      	ldr	r2, [r7, #28]
 80065a8:	601a      	str	r2, [r3, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << (Channel & 0x10UL));
 80065aa:	68fb      	ldr	r3, [r7, #12]
 80065ac:	681b      	ldr	r3, [r3, #0]
 80065ae:	6819      	ldr	r1, [r3, #0]
 80065b0:	687b      	ldr	r3, [r7, #4]
 80065b2:	f003 0310 	and.w	r3, r3, #16
 80065b6:	22c0      	movs	r2, #192	; 0xc0
 80065b8:	fa02 f303 	lsl.w	r3, r2, r3
 80065bc:	43da      	mvns	r2, r3
 80065be:	68fb      	ldr	r3, [r7, #12]
 80065c0:	681b      	ldr	r3, [r3, #0]
 80065c2:	400a      	ands	r2, r1
 80065c4:	601a      	str	r2, [r3, #0]

  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80065c6:	68fb      	ldr	r3, [r7, #12]
 80065c8:	2201      	movs	r2, #1
 80065ca:	711a      	strb	r2, [r3, #4]

  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80065cc:	68fb      	ldr	r3, [r7, #12]
 80065ce:	2200      	movs	r2, #0
 80065d0:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 80065d2:	2300      	movs	r3, #0
}
 80065d4:	4618      	mov	r0, r3
 80065d6:	3720      	adds	r7, #32
 80065d8:	46bd      	mov	sp, r7
 80065da:	bd80      	pop	{r7, pc}
 80065dc:	04c4b400 	.word	0x04c4b400

080065e0 <HAL_DMA_Init>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *              the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80065e0:	b580      	push	{r7, lr}
 80065e2:	b084      	sub	sp, #16
 80065e4:	af00      	add	r7, sp, #0
 80065e6:	6078      	str	r0, [r7, #4]
  uint32_t tmp;

  /* Check the DMA handle allocation */
  if (hdma == NULL)
 80065e8:	687b      	ldr	r3, [r7, #4]
 80065ea:	2b00      	cmp	r3, #0
 80065ec:	d101      	bne.n	80065f2 <HAL_DMA_Init+0x12>
  {
    return HAL_ERROR;
 80065ee:	2301      	movs	r3, #1
 80065f0:	e08d      	b.n	800670e <HAL_DMA_Init+0x12e>
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  assert_param(IS_DMA_ALL_REQUEST(hdma->Init.Request));

  /* Compute the channel index */
  if ((uint32_t)(hdma->Instance) < (uint32_t)(DMA2_Channel1))
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	681b      	ldr	r3, [r3, #0]
 80065f6:	461a      	mov	r2, r3
 80065f8:	4b47      	ldr	r3, [pc, #284]	; (8006718 <HAL_DMA_Init+0x138>)
 80065fa:	429a      	cmp	r2, r3
 80065fc:	d80f      	bhi.n	800661e <HAL_DMA_Init+0x3e>
  {
    /* DMA1 */
    hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 80065fe:	687b      	ldr	r3, [r7, #4]
 8006600:	681b      	ldr	r3, [r3, #0]
 8006602:	461a      	mov	r2, r3
 8006604:	4b45      	ldr	r3, [pc, #276]	; (800671c <HAL_DMA_Init+0x13c>)
 8006606:	4413      	add	r3, r2
 8006608:	4a45      	ldr	r2, [pc, #276]	; (8006720 <HAL_DMA_Init+0x140>)
 800660a:	fba2 2303 	umull	r2, r3, r2, r3
 800660e:	091b      	lsrs	r3, r3, #4
 8006610:	009a      	lsls	r2, r3, #2
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	645a      	str	r2, [r3, #68]	; 0x44
    hdma->DmaBaseAddress = DMA1;
 8006616:	687b      	ldr	r3, [r7, #4]
 8006618:	4a42      	ldr	r2, [pc, #264]	; (8006724 <HAL_DMA_Init+0x144>)
 800661a:	641a      	str	r2, [r3, #64]	; 0x40
 800661c:	e00e      	b.n	800663c <HAL_DMA_Init+0x5c>
  }
  else
  {
    /* DMA2 */
    hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA2_Channel1) / ((uint32_t)DMA2_Channel2 - (uint32_t)DMA2_Channel1)) << 2U;
 800661e:	687b      	ldr	r3, [r7, #4]
 8006620:	681b      	ldr	r3, [r3, #0]
 8006622:	461a      	mov	r2, r3
 8006624:	4b40      	ldr	r3, [pc, #256]	; (8006728 <HAL_DMA_Init+0x148>)
 8006626:	4413      	add	r3, r2
 8006628:	4a3d      	ldr	r2, [pc, #244]	; (8006720 <HAL_DMA_Init+0x140>)
 800662a:	fba2 2303 	umull	r2, r3, r2, r3
 800662e:	091b      	lsrs	r3, r3, #4
 8006630:	009a      	lsls	r2, r3, #2
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	645a      	str	r2, [r3, #68]	; 0x44
    hdma->DmaBaseAddress = DMA2;
 8006636:	687b      	ldr	r3, [r7, #4]
 8006638:	4a3c      	ldr	r2, [pc, #240]	; (800672c <HAL_DMA_Init+0x14c>)
 800663a:	641a      	str	r2, [r3, #64]	; 0x40
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 800663c:	687b      	ldr	r3, [r7, #4]
 800663e:	2202      	movs	r2, #2
 8006640:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25

  /* Get the CR register value */
  tmp = hdma->Instance->CCR;
 8006644:	687b      	ldr	r3, [r7, #4]
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	681b      	ldr	r3, [r3, #0]
 800664a:	60fb      	str	r3, [r7, #12]

  /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR and MEM2MEM bits */
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  |
 800664c:	68fb      	ldr	r3, [r7, #12]
 800664e:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8006652:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006656:	60fb      	str	r3, [r7, #12]
                      DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   |
                      DMA_CCR_DIR   | DMA_CCR_MEM2MEM));

  /* Prepare the DMA Channel configuration */
  tmp |=  hdma->Init.Direction        |
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	689a      	ldr	r2, [r3, #8]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Direction        |
 8006660:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	691b      	ldr	r3, [r3, #16]
 8006666:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8006668:	687b      	ldr	r3, [r7, #4]
 800666a:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800666c:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800666e:	687b      	ldr	r3, [r7, #4]
 8006670:	699b      	ldr	r3, [r3, #24]
 8006672:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8006678:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 800667a:	687b      	ldr	r3, [r7, #4]
 800667c:	6a1b      	ldr	r3, [r3, #32]
 800667e:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Direction        |
 8006680:	68fa      	ldr	r2, [r7, #12]
 8006682:	4313      	orrs	r3, r2
 8006684:	60fb      	str	r3, [r7, #12]

  /* Write to DMA Channel CR register */
  hdma->Instance->CCR = tmp;
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	68fa      	ldr	r2, [r7, #12]
 800668c:	601a      	str	r2, [r3, #0]

#if defined(DMAMUX1)
  /* Initialize parameters for DMAMUX channel :
     DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask
  */
  DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 800668e:	6878      	ldr	r0, [r7, #4]
 8006690:	f000 fa72 	bl	8006b78 <DMA_CalcDMAMUXChannelBaseAndMask>

  if (hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 8006694:	687b      	ldr	r3, [r7, #4]
 8006696:	689b      	ldr	r3, [r3, #8]
 8006698:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800669c:	d102      	bne.n	80066a4 <HAL_DMA_Init+0xc4>
  {
    /* if memory to memory force the request to 0*/
    hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	2200      	movs	r2, #0
 80066a2:	605a      	str	r2, [r3, #4]
  }

  /* Set peripheral request  to DMAMUX channel */
  hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	685a      	ldr	r2, [r3, #4]
 80066a8:	687b      	ldr	r3, [r7, #4]
 80066aa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80066ac:	b2d2      	uxtb	r2, r2
 80066ae:	601a      	str	r2, [r3, #0]

  /* Clear the DMAMUX synchro overrun flag */
  hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80066b4:	687a      	ldr	r2, [r7, #4]
 80066b6:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80066b8:	605a      	str	r2, [r3, #4]

  if (((hdma->Init.Request > 0U) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR3)))
 80066ba:	687b      	ldr	r3, [r7, #4]
 80066bc:	685b      	ldr	r3, [r3, #4]
 80066be:	2b00      	cmp	r3, #0
 80066c0:	d010      	beq.n	80066e4 <HAL_DMA_Init+0x104>
 80066c2:	687b      	ldr	r3, [r7, #4]
 80066c4:	685b      	ldr	r3, [r3, #4]
 80066c6:	2b04      	cmp	r3, #4
 80066c8:	d80c      	bhi.n	80066e4 <HAL_DMA_Init+0x104>
  {
    /* Initialize parameters for DMAMUX request generator :
       DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask
    */
    DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 80066ca:	6878      	ldr	r0, [r7, #4]
 80066cc:	f000 fa92 	bl	8006bf4 <DMA_CalcDMAMUXRequestGenBaseAndMask>

    /* Reset the DMAMUX request generator register*/
    hdma->DMAmuxRequestGen->RGCR = 0U;
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80066d4:	2200      	movs	r2, #0
 80066d6:	601a      	str	r2, [r3, #0]

    /* Clear the DMAMUX request generator overrun flag */
    hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80066dc:	687a      	ldr	r2, [r7, #4]
 80066de:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 80066e0:	605a      	str	r2, [r3, #4]
 80066e2:	e008      	b.n	80066f6 <HAL_DMA_Init+0x116>
  }
  else
  {
    hdma->DMAmuxRequestGen = 0U;
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	2200      	movs	r2, #0
 80066e8:	655a      	str	r2, [r3, #84]	; 0x54
    hdma->DMAmuxRequestGenStatus = 0U;
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	2200      	movs	r2, #0
 80066ee:	659a      	str	r2, [r3, #88]	; 0x58
    hdma->DMAmuxRequestGenStatusMask = 0U;
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	2200      	movs	r2, #0
 80066f4:	65da      	str	r2, [r3, #92]	; 0x5c
#endif /* STM32L431xx || STM32L432xx || STM32L433xx || STM32L442xx || STM32L443xx */
  /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L442xx || STM32L486xx */
  /* STM32L496xx || STM32L4A6xx                                              */

  /* Initialise the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	2200      	movs	r2, #0
 80066fa:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA state*/
  hdma->State = HAL_DMA_STATE_READY;
 80066fc:	687b      	ldr	r3, [r7, #4]
 80066fe:	2201      	movs	r2, #1
 8006700:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25

  /* Allocate lock resource and initialize it */
  hdma->Lock = HAL_UNLOCKED;
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	2200      	movs	r2, #0
 8006708:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

  return HAL_OK;
 800670c:	2300      	movs	r3, #0
}
 800670e:	4618      	mov	r0, r3
 8006710:	3710      	adds	r7, #16
 8006712:	46bd      	mov	sp, r7
 8006714:	bd80      	pop	{r7, pc}
 8006716:	bf00      	nop
 8006718:	40020407 	.word	0x40020407
 800671c:	bffdfff8 	.word	0xbffdfff8
 8006720:	cccccccd 	.word	0xcccccccd
 8006724:	40020000 	.word	0x40020000
 8006728:	bffdfbf8 	.word	0xbffdfbf8
 800672c:	40020400 	.word	0x40020400

08006730 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8006730:	b580      	push	{r7, lr}
 8006732:	b086      	sub	sp, #24
 8006734:	af00      	add	r7, sp, #0
 8006736:	60f8      	str	r0, [r7, #12]
 8006738:	60b9      	str	r1, [r7, #8]
 800673a:	607a      	str	r2, [r7, #4]
 800673c:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800673e:	2300      	movs	r3, #0
 8006740:	75fb      	strb	r3, [r7, #23]

  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));

  /* Process locked */
  __HAL_LOCK(hdma);
 8006742:	68fb      	ldr	r3, [r7, #12]
 8006744:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8006748:	2b01      	cmp	r3, #1
 800674a:	d101      	bne.n	8006750 <HAL_DMA_Start_IT+0x20>
 800674c:	2302      	movs	r3, #2
 800674e:	e066      	b.n	800681e <HAL_DMA_Start_IT+0xee>
 8006750:	68fb      	ldr	r3, [r7, #12]
 8006752:	2201      	movs	r2, #1
 8006754:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

  if (HAL_DMA_STATE_READY == hdma->State)
 8006758:	68fb      	ldr	r3, [r7, #12]
 800675a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800675e:	b2db      	uxtb	r3, r3
 8006760:	2b01      	cmp	r3, #1
 8006762:	d155      	bne.n	8006810 <HAL_DMA_Start_IT+0xe0>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8006764:	68fb      	ldr	r3, [r7, #12]
 8006766:	2202      	movs	r2, #2
 8006768:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800676c:	68fb      	ldr	r3, [r7, #12]
 800676e:	2200      	movs	r2, #0
 8006770:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 8006772:	68fb      	ldr	r3, [r7, #12]
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	681a      	ldr	r2, [r3, #0]
 8006778:	68fb      	ldr	r3, [r7, #12]
 800677a:	681b      	ldr	r3, [r3, #0]
 800677c:	f022 0201 	bic.w	r2, r2, #1
 8006780:	601a      	str	r2, [r3, #0]

    /* Configure the source, destination address and the data length & clear flags*/
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8006782:	683b      	ldr	r3, [r7, #0]
 8006784:	687a      	ldr	r2, [r7, #4]
 8006786:	68b9      	ldr	r1, [r7, #8]
 8006788:	68f8      	ldr	r0, [r7, #12]
 800678a:	f000 f9b6 	bl	8006afa <DMA_SetConfig>

    /* Enable the transfer complete interrupt */
    /* Enable the transfer Error interrupt */
    if (NULL != hdma->XferHalfCpltCallback)
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006792:	2b00      	cmp	r3, #0
 8006794:	d008      	beq.n	80067a8 <HAL_DMA_Start_IT+0x78>
    {
      /* Enable the Half transfer complete interrupt as well */
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	681a      	ldr	r2, [r3, #0]
 800679c:	68fb      	ldr	r3, [r7, #12]
 800679e:	681b      	ldr	r3, [r3, #0]
 80067a0:	f042 020e 	orr.w	r2, r2, #14
 80067a4:	601a      	str	r2, [r3, #0]
 80067a6:	e00f      	b.n	80067c8 <HAL_DMA_Start_IT+0x98>
    }
    else
    {
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 80067a8:	68fb      	ldr	r3, [r7, #12]
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	681a      	ldr	r2, [r3, #0]
 80067ae:	68fb      	ldr	r3, [r7, #12]
 80067b0:	681b      	ldr	r3, [r3, #0]
 80067b2:	f022 0204 	bic.w	r2, r2, #4
 80067b6:	601a      	str	r2, [r3, #0]
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
 80067b8:	68fb      	ldr	r3, [r7, #12]
 80067ba:	681b      	ldr	r3, [r3, #0]
 80067bc:	681a      	ldr	r2, [r3, #0]
 80067be:	68fb      	ldr	r3, [r7, #12]
 80067c0:	681b      	ldr	r3, [r3, #0]
 80067c2:	f042 020a 	orr.w	r2, r2, #10
 80067c6:	601a      	str	r2, [r3, #0]
    }

#ifdef DMAMUX1

    /* Check if DMAMUX Synchronization is enabled*/
    if ((hdma->DMAmuxChannel->CCR & DMAMUX_CxCR_SE) != 0U)
 80067c8:	68fb      	ldr	r3, [r7, #12]
 80067ca:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80067cc:	681b      	ldr	r3, [r3, #0]
 80067ce:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80067d2:	2b00      	cmp	r3, #0
 80067d4:	d007      	beq.n	80067e6 <HAL_DMA_Start_IT+0xb6>
    {
      /* Enable DMAMUX sync overrun IT*/
      hdma->DMAmuxChannel->CCR |= DMAMUX_CxCR_SOIE;
 80067d6:	68fb      	ldr	r3, [r7, #12]
 80067d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80067da:	681a      	ldr	r2, [r3, #0]
 80067dc:	68fb      	ldr	r3, [r7, #12]
 80067de:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80067e0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80067e4:	601a      	str	r2, [r3, #0]
    }

    if (hdma->DMAmuxRequestGen != 0U)
 80067e6:	68fb      	ldr	r3, [r7, #12]
 80067e8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80067ea:	2b00      	cmp	r3, #0
 80067ec:	d007      	beq.n	80067fe <HAL_DMA_Start_IT+0xce>
    {
      /* if using DMAMUX request generator, enable the DMAMUX request generator overrun IT*/
      /* enable the request gen overrun IT*/
      hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 80067ee:	68fb      	ldr	r3, [r7, #12]
 80067f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80067f2:	681a      	ldr	r2, [r3, #0]
 80067f4:	68fb      	ldr	r3, [r7, #12]
 80067f6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80067f8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80067fc:	601a      	str	r2, [r3, #0]
    }

#endif /* DMAMUX1 */

    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 80067fe:	68fb      	ldr	r3, [r7, #12]
 8006800:	681b      	ldr	r3, [r3, #0]
 8006802:	681a      	ldr	r2, [r3, #0]
 8006804:	68fb      	ldr	r3, [r7, #12]
 8006806:	681b      	ldr	r3, [r3, #0]
 8006808:	f042 0201 	orr.w	r2, r2, #1
 800680c:	601a      	str	r2, [r3, #0]
 800680e:	e005      	b.n	800681c <HAL_DMA_Start_IT+0xec>
  }
  else
  {
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8006810:	68fb      	ldr	r3, [r7, #12]
 8006812:	2200      	movs	r2, #0
 8006814:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

    /* Remain BUSY */
    status = HAL_BUSY;
 8006818:	2302      	movs	r3, #2
 800681a:	75fb      	strb	r3, [r7, #23]
  }
  return status;
 800681c:	7dfb      	ldrb	r3, [r7, #23]
}
 800681e:	4618      	mov	r0, r3
 8006820:	3718      	adds	r7, #24
 8006822:	46bd      	mov	sp, r7
 8006824:	bd80      	pop	{r7, pc}

08006826 <HAL_DMA_Abort>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Channel.
    * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8006826:	b480      	push	{r7}
 8006828:	b085      	sub	sp, #20
 800682a:	af00      	add	r7, sp, #0
 800682c:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800682e:	2300      	movs	r3, #0
 8006830:	73fb      	strb	r3, [r7, #15]

  /* Check the DMA peripheral state */
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8006832:	687b      	ldr	r3, [r7, #4]
 8006834:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8006838:	b2db      	uxtb	r3, r3
 800683a:	2b02      	cmp	r3, #2
 800683c:	d008      	beq.n	8006850 <HAL_DMA_Abort+0x2a>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	2204      	movs	r2, #4
 8006842:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8006844:	687b      	ldr	r3, [r7, #4]
 8006846:	2200      	movs	r2, #0
 8006848:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

    return HAL_ERROR;
 800684c:	2301      	movs	r3, #1
 800684e:	e040      	b.n	80068d2 <HAL_DMA_Abort+0xac>
  }
  else
  {
    /* Disable DMA IT */
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	681b      	ldr	r3, [r3, #0]
 8006854:	681a      	ldr	r2, [r3, #0]
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	681b      	ldr	r3, [r3, #0]
 800685a:	f022 020e 	bic.w	r2, r2, #14
 800685e:	601a      	str	r2, [r3, #0]

#if defined(DMAMUX1)
    /* disable the DMAMUX sync overrun IT*/
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 8006860:	687b      	ldr	r3, [r7, #4]
 8006862:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006864:	681a      	ldr	r2, [r3, #0]
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800686a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800686e:	601a      	str	r2, [r3, #0]
#endif /* DMAMUX1 */

    /* Disable the channel */
    __HAL_DMA_DISABLE(hdma);
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	681b      	ldr	r3, [r3, #0]
 8006874:	681a      	ldr	r2, [r3, #0]
 8006876:	687b      	ldr	r3, [r7, #4]
 8006878:	681b      	ldr	r3, [r3, #0]
 800687a:	f022 0201 	bic.w	r2, r2, #1
 800687e:	601a      	str	r2, [r3, #0]

    /* Clear all flags */
    hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 8006880:	687b      	ldr	r3, [r7, #4]
 8006882:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006884:	f003 021c 	and.w	r2, r3, #28
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800688c:	2101      	movs	r1, #1
 800688e:	fa01 f202 	lsl.w	r2, r1, r2
 8006892:	605a      	str	r2, [r3, #4]

#if defined(DMAMUX1)
    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006898:	687a      	ldr	r2, [r7, #4]
 800689a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800689c:	605a      	str	r2, [r3, #4]

    if (hdma->DMAmuxRequestGen != 0U)
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80068a2:	2b00      	cmp	r3, #0
 80068a4:	d00c      	beq.n	80068c0 <HAL_DMA_Abort+0x9a>
    {
      /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
      /* disable the request gen overrun IT*/
      hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80068aa:	681a      	ldr	r2, [r3, #0]
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80068b0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80068b4:	601a      	str	r2, [r3, #0]

      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80068ba:	687a      	ldr	r2, [r7, #4]
 80068bc:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 80068be:	605a      	str	r2, [r3, #4]
    }

#endif /* DMAMUX1 */

    /* Change the DMA state */
    hdma->State = HAL_DMA_STATE_READY;
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	2201      	movs	r2, #1
 80068c4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	2200      	movs	r2, #0
 80068cc:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

    return status;
 80068d0:	7bfb      	ldrb	r3, [r7, #15]
  }
}
 80068d2:	4618      	mov	r0, r3
 80068d4:	3714      	adds	r7, #20
 80068d6:	46bd      	mov	sp, r7
 80068d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068dc:	4770      	bx	lr

080068de <HAL_DMA_Abort_IT>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 80068de:	b580      	push	{r7, lr}
 80068e0:	b084      	sub	sp, #16
 80068e2:	af00      	add	r7, sp, #0
 80068e4:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80068e6:	2300      	movs	r3, #0
 80068e8:	73fb      	strb	r3, [r7, #15]

  if (HAL_DMA_STATE_BUSY != hdma->State)
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 80068f0:	b2db      	uxtb	r3, r3
 80068f2:	2b02      	cmp	r3, #2
 80068f4:	d005      	beq.n	8006902 <HAL_DMA_Abort_IT+0x24>
  {
    /* no transfer ongoing */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	2204      	movs	r2, #4
 80068fa:	63da      	str	r2, [r3, #60]	; 0x3c

    status = HAL_ERROR;
 80068fc:	2301      	movs	r3, #1
 80068fe:	73fb      	strb	r3, [r7, #15]
 8006900:	e047      	b.n	8006992 <HAL_DMA_Abort_IT+0xb4>
  }
  else
  {
    /* Disable DMA IT */
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	681b      	ldr	r3, [r3, #0]
 8006906:	681a      	ldr	r2, [r3, #0]
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	f022 020e 	bic.w	r2, r2, #14
 8006910:	601a      	str	r2, [r3, #0]

    /* Disable the channel */
    __HAL_DMA_DISABLE(hdma);
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	681a      	ldr	r2, [r3, #0]
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	681b      	ldr	r3, [r3, #0]
 800691c:	f022 0201 	bic.w	r2, r2, #1
 8006920:	601a      	str	r2, [r3, #0]

#if defined(DMAMUX1)
    /* disable the DMAMUX sync overrun IT*/
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006926:	681a      	ldr	r2, [r3, #0]
 8006928:	687b      	ldr	r3, [r7, #4]
 800692a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800692c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006930:	601a      	str	r2, [r3, #0]

    /* Clear all flags */
    hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006936:	f003 021c 	and.w	r2, r3, #28
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800693e:	2101      	movs	r1, #1
 8006940:	fa01 f202 	lsl.w	r2, r1, r2
 8006944:	605a      	str	r2, [r3, #4]

    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800694a:	687a      	ldr	r2, [r7, #4]
 800694c:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800694e:	605a      	str	r2, [r3, #4]

    if (hdma->DMAmuxRequestGen != 0U)
 8006950:	687b      	ldr	r3, [r7, #4]
 8006952:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006954:	2b00      	cmp	r3, #0
 8006956:	d00c      	beq.n	8006972 <HAL_DMA_Abort_IT+0x94>
    {
      /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
      /* disable the request gen overrun IT*/
      hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800695c:	681a      	ldr	r2, [r3, #0]
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006962:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006966:	601a      	str	r2, [r3, #0]

      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8006968:	687b      	ldr	r3, [r7, #4]
 800696a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800696c:	687a      	ldr	r2, [r7, #4]
 800696e:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8006970:	605a      	str	r2, [r3, #4]
    /* Clear all flags */
    hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
#endif /* DMAMUX1 */

    /* Change the DMA state */
    hdma->State = HAL_DMA_STATE_READY;
 8006972:	687b      	ldr	r3, [r7, #4]
 8006974:	2201      	movs	r2, #1
 8006976:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	2200      	movs	r2, #0
 800697e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

    /* Call User Abort callback */
    if (hdma->XferAbortCallback != NULL)
 8006982:	687b      	ldr	r3, [r7, #4]
 8006984:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006986:	2b00      	cmp	r3, #0
 8006988:	d003      	beq.n	8006992 <HAL_DMA_Abort_IT+0xb4>
    {
      hdma->XferAbortCallback(hdma);
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800698e:	6878      	ldr	r0, [r7, #4]
 8006990:	4798      	blx	r3
    }
  }
  return status;
 8006992:	7bfb      	ldrb	r3, [r7, #15]
}
 8006994:	4618      	mov	r0, r3
 8006996:	3710      	adds	r7, #16
 8006998:	46bd      	mov	sp, r7
 800699a:	bd80      	pop	{r7, pc}

0800699c <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Channel.
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 800699c:	b580      	push	{r7, lr}
 800699e:	b084      	sub	sp, #16
 80069a0:	af00      	add	r7, sp, #0
 80069a2:	6078      	str	r0, [r7, #4]
  uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069a8:	681b      	ldr	r3, [r3, #0]
 80069aa:	60fb      	str	r3, [r7, #12]
  uint32_t source_it = hdma->Instance->CCR;
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	681b      	ldr	r3, [r3, #0]
 80069b2:	60bb      	str	r3, [r7, #8]

  /* Half Transfer Complete Interrupt management ******************************/
  if (((flag_it & (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1CU))) != 0U) && ((source_it & DMA_IT_HT) != 0U))
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80069b8:	f003 031c 	and.w	r3, r3, #28
 80069bc:	2204      	movs	r2, #4
 80069be:	409a      	lsls	r2, r3
 80069c0:	68fb      	ldr	r3, [r7, #12]
 80069c2:	4013      	ands	r3, r2
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	d026      	beq.n	8006a16 <HAL_DMA_IRQHandler+0x7a>
 80069c8:	68bb      	ldr	r3, [r7, #8]
 80069ca:	f003 0304 	and.w	r3, r3, #4
 80069ce:	2b00      	cmp	r3, #0
 80069d0:	d021      	beq.n	8006a16 <HAL_DMA_IRQHandler+0x7a>
  {
    /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
    if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	681b      	ldr	r3, [r3, #0]
 80069d6:	681b      	ldr	r3, [r3, #0]
 80069d8:	f003 0320 	and.w	r3, r3, #32
 80069dc:	2b00      	cmp	r3, #0
 80069de:	d107      	bne.n	80069f0 <HAL_DMA_IRQHandler+0x54>
    {
      /* Disable the half transfer interrupt */
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 80069e0:	687b      	ldr	r3, [r7, #4]
 80069e2:	681b      	ldr	r3, [r3, #0]
 80069e4:	681a      	ldr	r2, [r3, #0]
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	681b      	ldr	r3, [r3, #0]
 80069ea:	f022 0204 	bic.w	r2, r2, #4
 80069ee:	601a      	str	r2, [r3, #0]
    }
    /* Clear the half transfer complete flag */
    hdma->DmaBaseAddress->IFCR = DMA_ISR_HTIF1 << (hdma->ChannelIndex & 0x1CU);
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80069f4:	f003 021c 	and.w	r2, r3, #28
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069fc:	2104      	movs	r1, #4
 80069fe:	fa01 f202 	lsl.w	r2, r1, r2
 8006a02:	605a      	str	r2, [r3, #4]

    /* DMA peripheral state is not updated in Half Transfer */
    /* but in Transfer Complete case */

    if (hdma->XferHalfCpltCallback != NULL)
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d071      	beq.n	8006af0 <HAL_DMA_IRQHandler+0x154>
    {
      /* Half transfer callback */
      hdma->XferHalfCpltCallback(hdma);
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a10:	6878      	ldr	r0, [r7, #4]
 8006a12:	4798      	blx	r3
    if (hdma->XferHalfCpltCallback != NULL)
 8006a14:	e06c      	b.n	8006af0 <HAL_DMA_IRQHandler+0x154>
    }
  }

  /* Transfer Complete Interrupt management ***********************************/
  else if (((flag_it & (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1CU))) != 0U) && ((source_it & DMA_IT_TC) != 0U))
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006a1a:	f003 031c 	and.w	r3, r3, #28
 8006a1e:	2202      	movs	r2, #2
 8006a20:	409a      	lsls	r2, r3
 8006a22:	68fb      	ldr	r3, [r7, #12]
 8006a24:	4013      	ands	r3, r2
 8006a26:	2b00      	cmp	r3, #0
 8006a28:	d02e      	beq.n	8006a88 <HAL_DMA_IRQHandler+0xec>
 8006a2a:	68bb      	ldr	r3, [r7, #8]
 8006a2c:	f003 0302 	and.w	r3, r3, #2
 8006a30:	2b00      	cmp	r3, #0
 8006a32:	d029      	beq.n	8006a88 <HAL_DMA_IRQHandler+0xec>
  {
    if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	681b      	ldr	r3, [r3, #0]
 8006a38:	681b      	ldr	r3, [r3, #0]
 8006a3a:	f003 0320 	and.w	r3, r3, #32
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d10b      	bne.n	8006a5a <HAL_DMA_IRQHandler+0xbe>
    {
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      /* Disable the transfer complete and error interrupt */
      /* if the DMA mode is not CIRCULAR  */
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	681b      	ldr	r3, [r3, #0]
 8006a46:	681a      	ldr	r2, [r3, #0]
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	681b      	ldr	r3, [r3, #0]
 8006a4c:	f022 020a 	bic.w	r2, r2, #10
 8006a50:	601a      	str	r2, [r3, #0]

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8006a52:	687b      	ldr	r3, [r7, #4]
 8006a54:	2201      	movs	r2, #1
 8006a56:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    }
    /* Clear the transfer complete flag */
    hdma->DmaBaseAddress->IFCR = (DMA_ISR_TCIF1 << (hdma->ChannelIndex & 0x1CU));
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006a5e:	f003 021c 	and.w	r2, r3, #28
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a66:	2102      	movs	r1, #2
 8006a68:	fa01 f202 	lsl.w	r2, r1, r2
 8006a6c:	605a      	str	r2, [r3, #4]

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8006a6e:	687b      	ldr	r3, [r7, #4]
 8006a70:	2200      	movs	r2, #0
 8006a72:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

    if (hdma->XferCpltCallback != NULL)
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006a7a:	2b00      	cmp	r3, #0
 8006a7c:	d038      	beq.n	8006af0 <HAL_DMA_IRQHandler+0x154>
    {
      /* Transfer complete callback */
      hdma->XferCpltCallback(hdma);
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006a82:	6878      	ldr	r0, [r7, #4]
 8006a84:	4798      	blx	r3
    if (hdma->XferCpltCallback != NULL)
 8006a86:	e033      	b.n	8006af0 <HAL_DMA_IRQHandler+0x154>
    }
  }

  /* Transfer Error Interrupt management **************************************/
  else if (((flag_it & (DMA_FLAG_TE1 << (hdma->ChannelIndex & 0x1CU))) != 0U) && ((source_it & DMA_IT_TE) !=  0U))
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006a8c:	f003 031c 	and.w	r3, r3, #28
 8006a90:	2208      	movs	r2, #8
 8006a92:	409a      	lsls	r2, r3
 8006a94:	68fb      	ldr	r3, [r7, #12]
 8006a96:	4013      	ands	r3, r2
 8006a98:	2b00      	cmp	r3, #0
 8006a9a:	d02a      	beq.n	8006af2 <HAL_DMA_IRQHandler+0x156>
 8006a9c:	68bb      	ldr	r3, [r7, #8]
 8006a9e:	f003 0308 	and.w	r3, r3, #8
 8006aa2:	2b00      	cmp	r3, #0
 8006aa4:	d025      	beq.n	8006af2 <HAL_DMA_IRQHandler+0x156>
  {
    /* When a DMA transfer error occurs */
    /* A hardware clear of its EN bits is performed */
    /* Disable ALL DMA IT */
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8006aa6:	687b      	ldr	r3, [r7, #4]
 8006aa8:	681b      	ldr	r3, [r3, #0]
 8006aaa:	681a      	ldr	r2, [r3, #0]
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	f022 020e 	bic.w	r2, r2, #14
 8006ab4:	601a      	str	r2, [r3, #0]

    /* Clear all flags */
    hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 8006ab6:	687b      	ldr	r3, [r7, #4]
 8006ab8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006aba:	f003 021c 	and.w	r2, r3, #28
 8006abe:	687b      	ldr	r3, [r7, #4]
 8006ac0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ac2:	2101      	movs	r1, #1
 8006ac4:	fa01 f202 	lsl.w	r2, r1, r2
 8006ac8:	605a      	str	r2, [r3, #4]

    /* Update error code */
    hdma->ErrorCode = HAL_DMA_ERROR_TE;
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	2201      	movs	r2, #1
 8006ace:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change the DMA state */
    hdma->State = HAL_DMA_STATE_READY;
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	2201      	movs	r2, #1
 8006ad4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	2200      	movs	r2, #0
 8006adc:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

    if (hdma->XferErrorCallback != NULL)
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006ae4:	2b00      	cmp	r3, #0
 8006ae6:	d004      	beq.n	8006af2 <HAL_DMA_IRQHandler+0x156>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006aec:	6878      	ldr	r0, [r7, #4]
 8006aee:	4798      	blx	r3
  }
  else
  {
    /* Nothing To Do */
  }
  return;
 8006af0:	bf00      	nop
 8006af2:	bf00      	nop
}
 8006af4:	3710      	adds	r7, #16
 8006af6:	46bd      	mov	sp, r7
 8006af8:	bd80      	pop	{r7, pc}

08006afa <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8006afa:	b480      	push	{r7}
 8006afc:	b085      	sub	sp, #20
 8006afe:	af00      	add	r7, sp, #0
 8006b00:	60f8      	str	r0, [r7, #12]
 8006b02:	60b9      	str	r1, [r7, #8]
 8006b04:	607a      	str	r2, [r7, #4]
 8006b06:	603b      	str	r3, [r7, #0]
#if defined(DMAMUX1)
  /* Clear the DMAMUX synchro overrun flag */
  hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8006b08:	68fb      	ldr	r3, [r7, #12]
 8006b0a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006b0c:	68fa      	ldr	r2, [r7, #12]
 8006b0e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8006b10:	605a      	str	r2, [r3, #4]

  if (hdma->DMAmuxRequestGen != 0U)
 8006b12:	68fb      	ldr	r3, [r7, #12]
 8006b14:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006b16:	2b00      	cmp	r3, #0
 8006b18:	d004      	beq.n	8006b24 <DMA_SetConfig+0x2a>
  {
    /* Clear the DMAMUX request generator overrun flag */
    hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8006b1a:	68fb      	ldr	r3, [r7, #12]
 8006b1c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006b1e:	68fa      	ldr	r2, [r7, #12]
 8006b20:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8006b22:	605a      	str	r2, [r3, #4]
  }
#endif

  /* Clear all flags */
  hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1CU));
 8006b24:	68fb      	ldr	r3, [r7, #12]
 8006b26:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b28:	f003 021c 	and.w	r2, r3, #28
 8006b2c:	68fb      	ldr	r3, [r7, #12]
 8006b2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b30:	2101      	movs	r1, #1
 8006b32:	fa01 f202 	lsl.w	r2, r1, r2
 8006b36:	605a      	str	r2, [r3, #4]

  /* Configure DMA Channel data length */
  hdma->Instance->CNDTR = DataLength;
 8006b38:	68fb      	ldr	r3, [r7, #12]
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	683a      	ldr	r2, [r7, #0]
 8006b3e:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8006b40:	68fb      	ldr	r3, [r7, #12]
 8006b42:	689b      	ldr	r3, [r3, #8]
 8006b44:	2b10      	cmp	r3, #16
 8006b46:	d108      	bne.n	8006b5a <DMA_SetConfig+0x60>
  {
    /* Configure DMA Channel destination address */
    hdma->Instance->CPAR = DstAddress;
 8006b48:	68fb      	ldr	r3, [r7, #12]
 8006b4a:	681b      	ldr	r3, [r3, #0]
 8006b4c:	687a      	ldr	r2, [r7, #4]
 8006b4e:	609a      	str	r2, [r3, #8]

    /* Configure DMA Channel source address */
    hdma->Instance->CMAR = SrcAddress;
 8006b50:	68fb      	ldr	r3, [r7, #12]
 8006b52:	681b      	ldr	r3, [r3, #0]
 8006b54:	68ba      	ldr	r2, [r7, #8]
 8006b56:	60da      	str	r2, [r3, #12]
    hdma->Instance->CPAR = SrcAddress;

    /* Configure DMA Channel destination address */
    hdma->Instance->CMAR = DstAddress;
  }
}
 8006b58:	e007      	b.n	8006b6a <DMA_SetConfig+0x70>
    hdma->Instance->CPAR = SrcAddress;
 8006b5a:	68fb      	ldr	r3, [r7, #12]
 8006b5c:	681b      	ldr	r3, [r3, #0]
 8006b5e:	68ba      	ldr	r2, [r7, #8]
 8006b60:	609a      	str	r2, [r3, #8]
    hdma->Instance->CMAR = DstAddress;
 8006b62:	68fb      	ldr	r3, [r7, #12]
 8006b64:	681b      	ldr	r3, [r3, #0]
 8006b66:	687a      	ldr	r2, [r7, #4]
 8006b68:	60da      	str	r2, [r3, #12]
}
 8006b6a:	bf00      	nop
 8006b6c:	3714      	adds	r7, #20
 8006b6e:	46bd      	mov	sp, r7
 8006b70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b74:	4770      	bx	lr
	...

08006b78 <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @param  hdma        pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Channel.
  * @retval None
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8006b78:	b480      	push	{r7}
 8006b7a:	b085      	sub	sp, #20
 8006b7c:	af00      	add	r7, sp, #0
 8006b7e:	6078      	str	r0, [r7, #4]
  uint32_t channel_number;

  /* check if instance is not outside the DMA channel range */
  if ((uint32_t)hdma->Instance < (uint32_t)DMA2_Channel1)
 8006b80:	687b      	ldr	r3, [r7, #4]
 8006b82:	681b      	ldr	r3, [r3, #0]
 8006b84:	461a      	mov	r2, r3
 8006b86:	4b17      	ldr	r3, [pc, #92]	; (8006be4 <DMA_CalcDMAMUXChannelBaseAndMask+0x6c>)
 8006b88:	429a      	cmp	r2, r3
 8006b8a:	d80a      	bhi.n	8006ba2 <DMA_CalcDMAMUXChannelBaseAndMask+0x2a>
  {
    /* DMA1 */
    hdma->DMAmuxChannel = (DMAMUX1_Channel0 + (hdma->ChannelIndex >> 2U));
 8006b8c:	687b      	ldr	r3, [r7, #4]
 8006b8e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b90:	089b      	lsrs	r3, r3, #2
 8006b92:	009b      	lsls	r3, r3, #2
 8006b94:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8006b98:	f503 3302 	add.w	r3, r3, #133120	; 0x20800
 8006b9c:	687a      	ldr	r2, [r7, #4]
 8006b9e:	6493      	str	r3, [r2, #72]	; 0x48
 8006ba0:	e007      	b.n	8006bb2 <DMA_CalcDMAMUXChannelBaseAndMask+0x3a>
  }
  else
  {
    /* DMA2 */
    hdma->DMAmuxChannel = (DMAMUX1_Channel7 + (hdma->ChannelIndex >> 2U));
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ba6:	089b      	lsrs	r3, r3, #2
 8006ba8:	009a      	lsls	r2, r3, #2
 8006baa:	4b0f      	ldr	r3, [pc, #60]	; (8006be8 <DMA_CalcDMAMUXChannelBaseAndMask+0x70>)
 8006bac:	4413      	add	r3, r2
 8006bae:	687a      	ldr	r2, [r7, #4]
 8006bb0:	6493      	str	r3, [r2, #72]	; 0x48
  }

  channel_number = (((uint32_t)hdma->Instance & 0xFFU) - 8U) / 20U;
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	681b      	ldr	r3, [r3, #0]
 8006bb6:	b2db      	uxtb	r3, r3
 8006bb8:	3b08      	subs	r3, #8
 8006bba:	4a0c      	ldr	r2, [pc, #48]	; (8006bec <DMA_CalcDMAMUXChannelBaseAndMask+0x74>)
 8006bbc:	fba2 2303 	umull	r2, r3, r2, r3
 8006bc0:	091b      	lsrs	r3, r3, #4
 8006bc2:	60fb      	str	r3, [r7, #12]
  hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	4a0a      	ldr	r2, [pc, #40]	; (8006bf0 <DMA_CalcDMAMUXChannelBaseAndMask+0x78>)
 8006bc8:	64da      	str	r2, [r3, #76]	; 0x4c
  hdma->DMAmuxChannelStatusMask = 1UL << (channel_number & 0x1FU);
 8006bca:	68fb      	ldr	r3, [r7, #12]
 8006bcc:	f003 031f 	and.w	r3, r3, #31
 8006bd0:	2201      	movs	r2, #1
 8006bd2:	409a      	lsls	r2, r3
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	651a      	str	r2, [r3, #80]	; 0x50
}
 8006bd8:	bf00      	nop
 8006bda:	3714      	adds	r7, #20
 8006bdc:	46bd      	mov	sp, r7
 8006bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006be2:	4770      	bx	lr
 8006be4:	40020407 	.word	0x40020407
 8006be8:	4002081c 	.word	0x4002081c
 8006bec:	cccccccd 	.word	0xcccccccd
 8006bf0:	40020880 	.word	0x40020880

08006bf4 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
  *                     the configuration information for the specified DMA Channel.
  * @retval None
  */

static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8006bf4:	b480      	push	{r7}
 8006bf6:	b085      	sub	sp, #20
 8006bf8:	af00      	add	r7, sp, #0
 8006bfa:	6078      	str	r0, [r7, #4]
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	685b      	ldr	r3, [r3, #4]
 8006c00:	b2db      	uxtb	r3, r3
 8006c02:	60fb      	str	r3, [r7, #12]

  /* DMA Channels are connected to DMAMUX1 request generator blocks*/
  hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8006c04:	68fa      	ldr	r2, [r7, #12]
 8006c06:	4b0b      	ldr	r3, [pc, #44]	; (8006c34 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 8006c08:	4413      	add	r3, r2
 8006c0a:	009b      	lsls	r3, r3, #2
 8006c0c:	461a      	mov	r2, r3
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	655a      	str	r2, [r3, #84]	; 0x54

  hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 8006c12:	687b      	ldr	r3, [r7, #4]
 8006c14:	4a08      	ldr	r2, [pc, #32]	; (8006c38 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 8006c16:	659a      	str	r2, [r3, #88]	; 0x58

  /* here "Request" is either DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR3, i.e. <= 4*/
  hdma->DMAmuxRequestGenStatusMask = 1UL << ((request - 1U) & 0x3U);
 8006c18:	68fb      	ldr	r3, [r7, #12]
 8006c1a:	3b01      	subs	r3, #1
 8006c1c:	f003 0303 	and.w	r3, r3, #3
 8006c20:	2201      	movs	r2, #1
 8006c22:	409a      	lsls	r2, r3
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	65da      	str	r2, [r3, #92]	; 0x5c
}
 8006c28:	bf00      	nop
 8006c2a:	3714      	adds	r7, #20
 8006c2c:	46bd      	mov	sp, r7
 8006c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c32:	4770      	bx	lr
 8006c34:	1000823f 	.word	0x1000823f
 8006c38:	40020940 	.word	0x40020940

08006c3c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006c3c:	b480      	push	{r7}
 8006c3e:	b087      	sub	sp, #28
 8006c40:	af00      	add	r7, sp, #0
 8006c42:	6078      	str	r0, [r7, #4]
 8006c44:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8006c46:	2300      	movs	r3, #0
 8006c48:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8006c4a:	e166      	b.n	8006f1a <HAL_GPIO_Init+0x2de>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8006c4c:	683b      	ldr	r3, [r7, #0]
 8006c4e:	681a      	ldr	r2, [r3, #0]
 8006c50:	2101      	movs	r1, #1
 8006c52:	697b      	ldr	r3, [r7, #20]
 8006c54:	fa01 f303 	lsl.w	r3, r1, r3
 8006c58:	4013      	ands	r3, r2
 8006c5a:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8006c5c:	68fb      	ldr	r3, [r7, #12]
 8006c5e:	2b00      	cmp	r3, #0
 8006c60:	f000 8158 	beq.w	8006f14 <HAL_GPIO_Init+0x2d8>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8006c64:	683b      	ldr	r3, [r7, #0]
 8006c66:	685b      	ldr	r3, [r3, #4]
 8006c68:	f003 0303 	and.w	r3, r3, #3
 8006c6c:	2b01      	cmp	r3, #1
 8006c6e:	d005      	beq.n	8006c7c <HAL_GPIO_Init+0x40>
 8006c70:	683b      	ldr	r3, [r7, #0]
 8006c72:	685b      	ldr	r3, [r3, #4]
 8006c74:	f003 0303 	and.w	r3, r3, #3
 8006c78:	2b02      	cmp	r3, #2
 8006c7a:	d130      	bne.n	8006cde <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	689b      	ldr	r3, [r3, #8]
 8006c80:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8006c82:	697b      	ldr	r3, [r7, #20]
 8006c84:	005b      	lsls	r3, r3, #1
 8006c86:	2203      	movs	r2, #3
 8006c88:	fa02 f303 	lsl.w	r3, r2, r3
 8006c8c:	43db      	mvns	r3, r3
 8006c8e:	693a      	ldr	r2, [r7, #16]
 8006c90:	4013      	ands	r3, r2
 8006c92:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8006c94:	683b      	ldr	r3, [r7, #0]
 8006c96:	68da      	ldr	r2, [r3, #12]
 8006c98:	697b      	ldr	r3, [r7, #20]
 8006c9a:	005b      	lsls	r3, r3, #1
 8006c9c:	fa02 f303 	lsl.w	r3, r2, r3
 8006ca0:	693a      	ldr	r2, [r7, #16]
 8006ca2:	4313      	orrs	r3, r2
 8006ca4:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8006ca6:	687b      	ldr	r3, [r7, #4]
 8006ca8:	693a      	ldr	r2, [r7, #16]
 8006caa:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8006cac:	687b      	ldr	r3, [r7, #4]
 8006cae:	685b      	ldr	r3, [r3, #4]
 8006cb0:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8006cb2:	2201      	movs	r2, #1
 8006cb4:	697b      	ldr	r3, [r7, #20]
 8006cb6:	fa02 f303 	lsl.w	r3, r2, r3
 8006cba:	43db      	mvns	r3, r3
 8006cbc:	693a      	ldr	r2, [r7, #16]
 8006cbe:	4013      	ands	r3, r2
 8006cc0:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8006cc2:	683b      	ldr	r3, [r7, #0]
 8006cc4:	685b      	ldr	r3, [r3, #4]
 8006cc6:	091b      	lsrs	r3, r3, #4
 8006cc8:	f003 0201 	and.w	r2, r3, #1
 8006ccc:	697b      	ldr	r3, [r7, #20]
 8006cce:	fa02 f303 	lsl.w	r3, r2, r3
 8006cd2:	693a      	ldr	r2, [r7, #16]
 8006cd4:	4313      	orrs	r3, r2
 8006cd6:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8006cd8:	687b      	ldr	r3, [r7, #4]
 8006cda:	693a      	ldr	r2, [r7, #16]
 8006cdc:	605a      	str	r2, [r3, #4]
      }

#endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx */

      /* Activate the Pull-up or Pull down resistor for the current IO */
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8006cde:	683b      	ldr	r3, [r7, #0]
 8006ce0:	685b      	ldr	r3, [r3, #4]
 8006ce2:	f003 0303 	and.w	r3, r3, #3
 8006ce6:	2b03      	cmp	r3, #3
 8006ce8:	d017      	beq.n	8006d1a <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        temp = GPIOx->PUPDR;
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	68db      	ldr	r3, [r3, #12]
 8006cee:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8006cf0:	697b      	ldr	r3, [r7, #20]
 8006cf2:	005b      	lsls	r3, r3, #1
 8006cf4:	2203      	movs	r2, #3
 8006cf6:	fa02 f303 	lsl.w	r3, r2, r3
 8006cfa:	43db      	mvns	r3, r3
 8006cfc:	693a      	ldr	r2, [r7, #16]
 8006cfe:	4013      	ands	r3, r2
 8006d00:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8006d02:	683b      	ldr	r3, [r7, #0]
 8006d04:	689a      	ldr	r2, [r3, #8]
 8006d06:	697b      	ldr	r3, [r7, #20]
 8006d08:	005b      	lsls	r3, r3, #1
 8006d0a:	fa02 f303 	lsl.w	r3, r2, r3
 8006d0e:	693a      	ldr	r2, [r7, #16]
 8006d10:	4313      	orrs	r3, r2
 8006d12:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	693a      	ldr	r2, [r7, #16]
 8006d18:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8006d1a:	683b      	ldr	r3, [r7, #0]
 8006d1c:	685b      	ldr	r3, [r3, #4]
 8006d1e:	f003 0303 	and.w	r3, r3, #3
 8006d22:	2b02      	cmp	r3, #2
 8006d24:	d123      	bne.n	8006d6e <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8006d26:	697b      	ldr	r3, [r7, #20]
 8006d28:	08da      	lsrs	r2, r3, #3
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	3208      	adds	r2, #8
 8006d2e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006d32:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8006d34:	697b      	ldr	r3, [r7, #20]
 8006d36:	f003 0307 	and.w	r3, r3, #7
 8006d3a:	009b      	lsls	r3, r3, #2
 8006d3c:	220f      	movs	r2, #15
 8006d3e:	fa02 f303 	lsl.w	r3, r2, r3
 8006d42:	43db      	mvns	r3, r3
 8006d44:	693a      	ldr	r2, [r7, #16]
 8006d46:	4013      	ands	r3, r2
 8006d48:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8006d4a:	683b      	ldr	r3, [r7, #0]
 8006d4c:	691a      	ldr	r2, [r3, #16]
 8006d4e:	697b      	ldr	r3, [r7, #20]
 8006d50:	f003 0307 	and.w	r3, r3, #7
 8006d54:	009b      	lsls	r3, r3, #2
 8006d56:	fa02 f303 	lsl.w	r3, r2, r3
 8006d5a:	693a      	ldr	r2, [r7, #16]
 8006d5c:	4313      	orrs	r3, r2
 8006d5e:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8006d60:	697b      	ldr	r3, [r7, #20]
 8006d62:	08da      	lsrs	r2, r3, #3
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	3208      	adds	r2, #8
 8006d68:	6939      	ldr	r1, [r7, #16]
 8006d6a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	681b      	ldr	r3, [r3, #0]
 8006d72:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8006d74:	697b      	ldr	r3, [r7, #20]
 8006d76:	005b      	lsls	r3, r3, #1
 8006d78:	2203      	movs	r2, #3
 8006d7a:	fa02 f303 	lsl.w	r3, r2, r3
 8006d7e:	43db      	mvns	r3, r3
 8006d80:	693a      	ldr	r2, [r7, #16]
 8006d82:	4013      	ands	r3, r2
 8006d84:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8006d86:	683b      	ldr	r3, [r7, #0]
 8006d88:	685b      	ldr	r3, [r3, #4]
 8006d8a:	f003 0203 	and.w	r2, r3, #3
 8006d8e:	697b      	ldr	r3, [r7, #20]
 8006d90:	005b      	lsls	r3, r3, #1
 8006d92:	fa02 f303 	lsl.w	r3, r2, r3
 8006d96:	693a      	ldr	r2, [r7, #16]
 8006d98:	4313      	orrs	r3, r2
 8006d9a:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	693a      	ldr	r2, [r7, #16]
 8006da0:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8006da2:	683b      	ldr	r3, [r7, #0]
 8006da4:	685b      	ldr	r3, [r3, #4]
 8006da6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006daa:	2b00      	cmp	r3, #0
 8006dac:	f000 80b2 	beq.w	8006f14 <HAL_GPIO_Init+0x2d8>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006db0:	4b61      	ldr	r3, [pc, #388]	; (8006f38 <HAL_GPIO_Init+0x2fc>)
 8006db2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006db4:	4a60      	ldr	r2, [pc, #384]	; (8006f38 <HAL_GPIO_Init+0x2fc>)
 8006db6:	f043 0301 	orr.w	r3, r3, #1
 8006dba:	6613      	str	r3, [r2, #96]	; 0x60
 8006dbc:	4b5e      	ldr	r3, [pc, #376]	; (8006f38 <HAL_GPIO_Init+0x2fc>)
 8006dbe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006dc0:	f003 0301 	and.w	r3, r3, #1
 8006dc4:	60bb      	str	r3, [r7, #8]
 8006dc6:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8006dc8:	4a5c      	ldr	r2, [pc, #368]	; (8006f3c <HAL_GPIO_Init+0x300>)
 8006dca:	697b      	ldr	r3, [r7, #20]
 8006dcc:	089b      	lsrs	r3, r3, #2
 8006dce:	3302      	adds	r3, #2
 8006dd0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006dd4:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8006dd6:	697b      	ldr	r3, [r7, #20]
 8006dd8:	f003 0303 	and.w	r3, r3, #3
 8006ddc:	009b      	lsls	r3, r3, #2
 8006dde:	220f      	movs	r2, #15
 8006de0:	fa02 f303 	lsl.w	r3, r2, r3
 8006de4:	43db      	mvns	r3, r3
 8006de6:	693a      	ldr	r2, [r7, #16]
 8006de8:	4013      	ands	r3, r2
 8006dea:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8006df2:	d02b      	beq.n	8006e4c <HAL_GPIO_Init+0x210>
 8006df4:	687b      	ldr	r3, [r7, #4]
 8006df6:	4a52      	ldr	r2, [pc, #328]	; (8006f40 <HAL_GPIO_Init+0x304>)
 8006df8:	4293      	cmp	r3, r2
 8006dfa:	d025      	beq.n	8006e48 <HAL_GPIO_Init+0x20c>
 8006dfc:	687b      	ldr	r3, [r7, #4]
 8006dfe:	4a51      	ldr	r2, [pc, #324]	; (8006f44 <HAL_GPIO_Init+0x308>)
 8006e00:	4293      	cmp	r3, r2
 8006e02:	d01f      	beq.n	8006e44 <HAL_GPIO_Init+0x208>
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	4a50      	ldr	r2, [pc, #320]	; (8006f48 <HAL_GPIO_Init+0x30c>)
 8006e08:	4293      	cmp	r3, r2
 8006e0a:	d019      	beq.n	8006e40 <HAL_GPIO_Init+0x204>
 8006e0c:	687b      	ldr	r3, [r7, #4]
 8006e0e:	4a4f      	ldr	r2, [pc, #316]	; (8006f4c <HAL_GPIO_Init+0x310>)
 8006e10:	4293      	cmp	r3, r2
 8006e12:	d013      	beq.n	8006e3c <HAL_GPIO_Init+0x200>
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	4a4e      	ldr	r2, [pc, #312]	; (8006f50 <HAL_GPIO_Init+0x314>)
 8006e18:	4293      	cmp	r3, r2
 8006e1a:	d00d      	beq.n	8006e38 <HAL_GPIO_Init+0x1fc>
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	4a4d      	ldr	r2, [pc, #308]	; (8006f54 <HAL_GPIO_Init+0x318>)
 8006e20:	4293      	cmp	r3, r2
 8006e22:	d007      	beq.n	8006e34 <HAL_GPIO_Init+0x1f8>
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	4a4c      	ldr	r2, [pc, #304]	; (8006f58 <HAL_GPIO_Init+0x31c>)
 8006e28:	4293      	cmp	r3, r2
 8006e2a:	d101      	bne.n	8006e30 <HAL_GPIO_Init+0x1f4>
 8006e2c:	2307      	movs	r3, #7
 8006e2e:	e00e      	b.n	8006e4e <HAL_GPIO_Init+0x212>
 8006e30:	2308      	movs	r3, #8
 8006e32:	e00c      	b.n	8006e4e <HAL_GPIO_Init+0x212>
 8006e34:	2306      	movs	r3, #6
 8006e36:	e00a      	b.n	8006e4e <HAL_GPIO_Init+0x212>
 8006e38:	2305      	movs	r3, #5
 8006e3a:	e008      	b.n	8006e4e <HAL_GPIO_Init+0x212>
 8006e3c:	2304      	movs	r3, #4
 8006e3e:	e006      	b.n	8006e4e <HAL_GPIO_Init+0x212>
 8006e40:	2303      	movs	r3, #3
 8006e42:	e004      	b.n	8006e4e <HAL_GPIO_Init+0x212>
 8006e44:	2302      	movs	r3, #2
 8006e46:	e002      	b.n	8006e4e <HAL_GPIO_Init+0x212>
 8006e48:	2301      	movs	r3, #1
 8006e4a:	e000      	b.n	8006e4e <HAL_GPIO_Init+0x212>
 8006e4c:	2300      	movs	r3, #0
 8006e4e:	697a      	ldr	r2, [r7, #20]
 8006e50:	f002 0203 	and.w	r2, r2, #3
 8006e54:	0092      	lsls	r2, r2, #2
 8006e56:	4093      	lsls	r3, r2
 8006e58:	693a      	ldr	r2, [r7, #16]
 8006e5a:	4313      	orrs	r3, r2
 8006e5c:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8006e5e:	4937      	ldr	r1, [pc, #220]	; (8006f3c <HAL_GPIO_Init+0x300>)
 8006e60:	697b      	ldr	r3, [r7, #20]
 8006e62:	089b      	lsrs	r3, r3, #2
 8006e64:	3302      	adds	r3, #2
 8006e66:	693a      	ldr	r2, [r7, #16]
 8006e68:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8006e6c:	4b3b      	ldr	r3, [pc, #236]	; (8006f5c <HAL_GPIO_Init+0x320>)
 8006e6e:	689b      	ldr	r3, [r3, #8]
 8006e70:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8006e72:	68fb      	ldr	r3, [r7, #12]
 8006e74:	43db      	mvns	r3, r3
 8006e76:	693a      	ldr	r2, [r7, #16]
 8006e78:	4013      	ands	r3, r2
 8006e7a:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8006e7c:	683b      	ldr	r3, [r7, #0]
 8006e7e:	685b      	ldr	r3, [r3, #4]
 8006e80:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8006e84:	2b00      	cmp	r3, #0
 8006e86:	d003      	beq.n	8006e90 <HAL_GPIO_Init+0x254>
        {
          temp |= iocurrent;
 8006e88:	693a      	ldr	r2, [r7, #16]
 8006e8a:	68fb      	ldr	r3, [r7, #12]
 8006e8c:	4313      	orrs	r3, r2
 8006e8e:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR1 = temp;
 8006e90:	4a32      	ldr	r2, [pc, #200]	; (8006f5c <HAL_GPIO_Init+0x320>)
 8006e92:	693b      	ldr	r3, [r7, #16]
 8006e94:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR1;
 8006e96:	4b31      	ldr	r3, [pc, #196]	; (8006f5c <HAL_GPIO_Init+0x320>)
 8006e98:	68db      	ldr	r3, [r3, #12]
 8006e9a:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	43db      	mvns	r3, r3
 8006ea0:	693a      	ldr	r2, [r7, #16]
 8006ea2:	4013      	ands	r3, r2
 8006ea4:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8006ea6:	683b      	ldr	r3, [r7, #0]
 8006ea8:	685b      	ldr	r3, [r3, #4]
 8006eaa:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8006eae:	2b00      	cmp	r3, #0
 8006eb0:	d003      	beq.n	8006eba <HAL_GPIO_Init+0x27e>
        {
          temp |= iocurrent;
 8006eb2:	693a      	ldr	r2, [r7, #16]
 8006eb4:	68fb      	ldr	r3, [r7, #12]
 8006eb6:	4313      	orrs	r3, r2
 8006eb8:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR1 = temp;
 8006eba:	4a28      	ldr	r2, [pc, #160]	; (8006f5c <HAL_GPIO_Init+0x320>)
 8006ebc:	693b      	ldr	r3, [r7, #16]
 8006ebe:	60d3      	str	r3, [r2, #12]

        /* Clear EXTI line configuration */
        temp = EXTI->EMR1;
 8006ec0:	4b26      	ldr	r3, [pc, #152]	; (8006f5c <HAL_GPIO_Init+0x320>)
 8006ec2:	685b      	ldr	r3, [r3, #4]
 8006ec4:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8006ec6:	68fb      	ldr	r3, [r7, #12]
 8006ec8:	43db      	mvns	r3, r3
 8006eca:	693a      	ldr	r2, [r7, #16]
 8006ecc:	4013      	ands	r3, r2
 8006ece:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8006ed0:	683b      	ldr	r3, [r7, #0]
 8006ed2:	685b      	ldr	r3, [r3, #4]
 8006ed4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006ed8:	2b00      	cmp	r3, #0
 8006eda:	d003      	beq.n	8006ee4 <HAL_GPIO_Init+0x2a8>
        {
          temp |= iocurrent;
 8006edc:	693a      	ldr	r2, [r7, #16]
 8006ede:	68fb      	ldr	r3, [r7, #12]
 8006ee0:	4313      	orrs	r3, r2
 8006ee2:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR1 = temp;
 8006ee4:	4a1d      	ldr	r2, [pc, #116]	; (8006f5c <HAL_GPIO_Init+0x320>)
 8006ee6:	693b      	ldr	r3, [r7, #16]
 8006ee8:	6053      	str	r3, [r2, #4]

        temp = EXTI->IMR1;
 8006eea:	4b1c      	ldr	r3, [pc, #112]	; (8006f5c <HAL_GPIO_Init+0x320>)
 8006eec:	681b      	ldr	r3, [r3, #0]
 8006eee:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8006ef0:	68fb      	ldr	r3, [r7, #12]
 8006ef2:	43db      	mvns	r3, r3
 8006ef4:	693a      	ldr	r2, [r7, #16]
 8006ef6:	4013      	ands	r3, r2
 8006ef8:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8006efa:	683b      	ldr	r3, [r7, #0]
 8006efc:	685b      	ldr	r3, [r3, #4]
 8006efe:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006f02:	2b00      	cmp	r3, #0
 8006f04:	d003      	beq.n	8006f0e <HAL_GPIO_Init+0x2d2>
        {
          temp |= iocurrent;
 8006f06:	693a      	ldr	r2, [r7, #16]
 8006f08:	68fb      	ldr	r3, [r7, #12]
 8006f0a:	4313      	orrs	r3, r2
 8006f0c:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR1 = temp;
 8006f0e:	4a13      	ldr	r2, [pc, #76]	; (8006f5c <HAL_GPIO_Init+0x320>)
 8006f10:	693b      	ldr	r3, [r7, #16]
 8006f12:	6013      	str	r3, [r2, #0]
      }
    }

    position++;
 8006f14:	697b      	ldr	r3, [r7, #20]
 8006f16:	3301      	adds	r3, #1
 8006f18:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8006f1a:	683b      	ldr	r3, [r7, #0]
 8006f1c:	681a      	ldr	r2, [r3, #0]
 8006f1e:	697b      	ldr	r3, [r7, #20]
 8006f20:	fa22 f303 	lsr.w	r3, r2, r3
 8006f24:	2b00      	cmp	r3, #0
 8006f26:	f47f ae91 	bne.w	8006c4c <HAL_GPIO_Init+0x10>
  }
}
 8006f2a:	bf00      	nop
 8006f2c:	bf00      	nop
 8006f2e:	371c      	adds	r7, #28
 8006f30:	46bd      	mov	sp, r7
 8006f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f36:	4770      	bx	lr
 8006f38:	40021000 	.word	0x40021000
 8006f3c:	40010000 	.word	0x40010000
 8006f40:	48000400 	.word	0x48000400
 8006f44:	48000800 	.word	0x48000800
 8006f48:	48000c00 	.word	0x48000c00
 8006f4c:	48001000 	.word	0x48001000
 8006f50:	48001400 	.word	0x48001400
 8006f54:	48001800 	.word	0x48001800
 8006f58:	48001c00 	.word	0x48001c00
 8006f5c:	40010400 	.word	0x40010400

08006f60 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8006f60:	b480      	push	{r7}
 8006f62:	b083      	sub	sp, #12
 8006f64:	af00      	add	r7, sp, #0
 8006f66:	6078      	str	r0, [r7, #4]
 8006f68:	460b      	mov	r3, r1
 8006f6a:	807b      	strh	r3, [r7, #2]
 8006f6c:	4613      	mov	r3, r2
 8006f6e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006f70:	787b      	ldrb	r3, [r7, #1]
 8006f72:	2b00      	cmp	r3, #0
 8006f74:	d003      	beq.n	8006f7e <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8006f76:	887a      	ldrh	r2, [r7, #2]
 8006f78:	687b      	ldr	r3, [r7, #4]
 8006f7a:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8006f7c:	e002      	b.n	8006f84 <HAL_GPIO_WritePin+0x24>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8006f7e:	887a      	ldrh	r2, [r7, #2]
 8006f80:	687b      	ldr	r3, [r7, #4]
 8006f82:	629a      	str	r2, [r3, #40]	; 0x28
}
 8006f84:	bf00      	nop
 8006f86:	370c      	adds	r7, #12
 8006f88:	46bd      	mov	sp, r7
 8006f8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f8e:	4770      	bx	lr

08006f90 <HAL_GPIO_TogglePin>:
  * @param  GPIOx where x can be (A..H) to select the GPIO peripheral for STM32L4 family
  * @param  GPIO_Pin specifies the pin to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8006f90:	b480      	push	{r7}
 8006f92:	b085      	sub	sp, #20
 8006f94:	af00      	add	r7, sp, #0
 8006f96:	6078      	str	r0, [r7, #4]
 8006f98:	460b      	mov	r3, r1
 8006f9a:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8006f9c:	687b      	ldr	r3, [r7, #4]
 8006f9e:	695b      	ldr	r3, [r3, #20]
 8006fa0:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8006fa2:	887a      	ldrh	r2, [r7, #2]
 8006fa4:	68fb      	ldr	r3, [r7, #12]
 8006fa6:	4013      	ands	r3, r2
 8006fa8:	041a      	lsls	r2, r3, #16
 8006faa:	68fb      	ldr	r3, [r7, #12]
 8006fac:	43d9      	mvns	r1, r3
 8006fae:	887b      	ldrh	r3, [r7, #2]
 8006fb0:	400b      	ands	r3, r1
 8006fb2:	431a      	orrs	r2, r3
 8006fb4:	687b      	ldr	r3, [r7, #4]
 8006fb6:	619a      	str	r2, [r3, #24]
}
 8006fb8:	bf00      	nop
 8006fba:	3714      	adds	r7, #20
 8006fbc:	46bd      	mov	sp, r7
 8006fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fc2:	4770      	bx	lr

08006fc4 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8006fc4:	b580      	push	{r7, lr}
 8006fc6:	b082      	sub	sp, #8
 8006fc8:	af00      	add	r7, sp, #0
 8006fca:	4603      	mov	r3, r0
 8006fcc:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 8006fce:	4b08      	ldr	r3, [pc, #32]	; (8006ff0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8006fd0:	695a      	ldr	r2, [r3, #20]
 8006fd2:	88fb      	ldrh	r3, [r7, #6]
 8006fd4:	4013      	ands	r3, r2
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	d006      	beq.n	8006fe8 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8006fda:	4a05      	ldr	r2, [pc, #20]	; (8006ff0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8006fdc:	88fb      	ldrh	r3, [r7, #6]
 8006fde:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8006fe0:	88fb      	ldrh	r3, [r7, #6]
 8006fe2:	4618      	mov	r0, r3
 8006fe4:	f7fe fbe0 	bl	80057a8 <HAL_GPIO_EXTI_Callback>
  }
}
 8006fe8:	bf00      	nop
 8006fea:	3708      	adds	r7, #8
 8006fec:	46bd      	mov	sp, r7
 8006fee:	bd80      	pop	{r7, pc}
 8006ff0:	40010400 	.word	0x40010400

08006ff4 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8006ff4:	b580      	push	{r7, lr}
 8006ff6:	b082      	sub	sp, #8
 8006ff8:	af00      	add	r7, sp, #0
 8006ffa:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	2b00      	cmp	r3, #0
 8007000:	d101      	bne.n	8007006 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8007002:	2301      	movs	r3, #1
 8007004:	e08d      	b.n	8007122 <HAL_I2C_Init+0x12e>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800700c:	b2db      	uxtb	r3, r3
 800700e:	2b00      	cmp	r3, #0
 8007010:	d106      	bne.n	8007020 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8007012:	687b      	ldr	r3, [r7, #4]
 8007014:	2200      	movs	r2, #0
 8007016:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 800701a:	6878      	ldr	r0, [r7, #4]
 800701c:	f7fd fafa 	bl	8004614 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8007020:	687b      	ldr	r3, [r7, #4]
 8007022:	2224      	movs	r2, #36	; 0x24
 8007024:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	681a      	ldr	r2, [r3, #0]
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	681b      	ldr	r3, [r3, #0]
 8007032:	f022 0201 	bic.w	r2, r2, #1
 8007036:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	685a      	ldr	r2, [r3, #4]
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	681b      	ldr	r3, [r3, #0]
 8007040:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007044:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	681b      	ldr	r3, [r3, #0]
 800704a:	689a      	ldr	r2, [r3, #8]
 800704c:	687b      	ldr	r3, [r7, #4]
 800704e:	681b      	ldr	r3, [r3, #0]
 8007050:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8007054:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	68db      	ldr	r3, [r3, #12]
 800705a:	2b01      	cmp	r3, #1
 800705c:	d107      	bne.n	800706e <HAL_I2C_Init+0x7a>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	689a      	ldr	r2, [r3, #8]
 8007062:	687b      	ldr	r3, [r7, #4]
 8007064:	681b      	ldr	r3, [r3, #0]
 8007066:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800706a:	609a      	str	r2, [r3, #8]
 800706c:	e006      	b.n	800707c <HAL_I2C_Init+0x88>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	689a      	ldr	r2, [r3, #8]
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	681b      	ldr	r3, [r3, #0]
 8007076:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 800707a:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	68db      	ldr	r3, [r3, #12]
 8007080:	2b02      	cmp	r3, #2
 8007082:	d108      	bne.n	8007096 <HAL_I2C_Init+0xa2>
  {
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	681b      	ldr	r3, [r3, #0]
 8007088:	685a      	ldr	r2, [r3, #4]
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007092:	605a      	str	r2, [r3, #4]
 8007094:	e007      	b.n	80070a6 <HAL_I2C_Init+0xb2>
  }
  else
  {
    /* Clear the I2C ADD10 bit */
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8007096:	687b      	ldr	r3, [r7, #4]
 8007098:	681b      	ldr	r3, [r3, #0]
 800709a:	685a      	ldr	r2, [r3, #4]
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	681b      	ldr	r3, [r3, #0]
 80070a0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80070a4:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	685b      	ldr	r3, [r3, #4]
 80070ac:	687a      	ldr	r2, [r7, #4]
 80070ae:	6812      	ldr	r2, [r2, #0]
 80070b0:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80070b4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80070b8:	6053      	str	r3, [r2, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	68da      	ldr	r2, [r3, #12]
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	681b      	ldr	r3, [r3, #0]
 80070c4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80070c8:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80070ca:	687b      	ldr	r3, [r7, #4]
 80070cc:	691a      	ldr	r2, [r3, #16]
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	695b      	ldr	r3, [r3, #20]
 80070d2:	ea42 0103 	orr.w	r1, r2, r3
                          (hi2c->Init.OwnAddress2Masks << 8));
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	699b      	ldr	r3, [r3, #24]
 80070da:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	681b      	ldr	r3, [r3, #0]
 80070e0:	430a      	orrs	r2, r1
 80070e2:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80070e4:	687b      	ldr	r3, [r7, #4]
 80070e6:	69d9      	ldr	r1, [r3, #28]
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	6a1a      	ldr	r2, [r3, #32]
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	681b      	ldr	r3, [r3, #0]
 80070f0:	430a      	orrs	r2, r1
 80070f2:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	681a      	ldr	r2, [r3, #0]
 80070fa:	687b      	ldr	r3, [r7, #4]
 80070fc:	681b      	ldr	r3, [r3, #0]
 80070fe:	f042 0201 	orr.w	r2, r2, #1
 8007102:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	2200      	movs	r2, #0
 8007108:	645a      	str	r2, [r3, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	2220      	movs	r2, #32
 800710e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	2200      	movs	r2, #0
 8007116:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8007118:	687b      	ldr	r3, [r7, #4]
 800711a:	2200      	movs	r2, #0
 800711c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

  return HAL_OK;
 8007120:	2300      	movs	r3, #0
}
 8007122:	4618      	mov	r0, r3
 8007124:	3708      	adds	r7, #8
 8007126:	46bd      	mov	sp, r7
 8007128:	bd80      	pop	{r7, pc}
	...

0800712c <HAL_I2C_Master_Transmit>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData,
                                          uint16_t Size, uint32_t Timeout)
{
 800712c:	b580      	push	{r7, lr}
 800712e:	b088      	sub	sp, #32
 8007130:	af02      	add	r7, sp, #8
 8007132:	60f8      	str	r0, [r7, #12]
 8007134:	607a      	str	r2, [r7, #4]
 8007136:	461a      	mov	r2, r3
 8007138:	460b      	mov	r3, r1
 800713a:	817b      	strh	r3, [r7, #10]
 800713c:	4613      	mov	r3, r2
 800713e:	813b      	strh	r3, [r7, #8]
  uint32_t tickstart;
  uint32_t xfermode;

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007140:	68fb      	ldr	r3, [r7, #12]
 8007142:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8007146:	b2db      	uxtb	r3, r3
 8007148:	2b20      	cmp	r3, #32
 800714a:	f040 80fd 	bne.w	8007348 <HAL_I2C_Master_Transmit+0x21c>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800714e:	68fb      	ldr	r3, [r7, #12]
 8007150:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8007154:	2b01      	cmp	r3, #1
 8007156:	d101      	bne.n	800715c <HAL_I2C_Master_Transmit+0x30>
 8007158:	2302      	movs	r3, #2
 800715a:	e0f6      	b.n	800734a <HAL_I2C_Master_Transmit+0x21e>
 800715c:	68fb      	ldr	r3, [r7, #12]
 800715e:	2201      	movs	r2, #1
 8007160:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8007164:	f7fe fda8 	bl	8005cb8 <HAL_GetTick>
 8007168:	6138      	str	r0, [r7, #16]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800716a:	693b      	ldr	r3, [r7, #16]
 800716c:	9300      	str	r3, [sp, #0]
 800716e:	2319      	movs	r3, #25
 8007170:	2201      	movs	r2, #1
 8007172:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8007176:	68f8      	ldr	r0, [r7, #12]
 8007178:	f000 f914 	bl	80073a4 <I2C_WaitOnFlagUntilTimeout>
 800717c:	4603      	mov	r3, r0
 800717e:	2b00      	cmp	r3, #0
 8007180:	d001      	beq.n	8007186 <HAL_I2C_Master_Transmit+0x5a>
    {
      return HAL_ERROR;
 8007182:	2301      	movs	r3, #1
 8007184:	e0e1      	b.n	800734a <HAL_I2C_Master_Transmit+0x21e>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8007186:	68fb      	ldr	r3, [r7, #12]
 8007188:	2221      	movs	r2, #33	; 0x21
 800718a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 800718e:	68fb      	ldr	r3, [r7, #12]
 8007190:	2210      	movs	r2, #16
 8007192:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007196:	68fb      	ldr	r3, [r7, #12]
 8007198:	2200      	movs	r2, #0
 800719a:	645a      	str	r2, [r3, #68]	; 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 800719c:	68fb      	ldr	r3, [r7, #12]
 800719e:	687a      	ldr	r2, [r7, #4]
 80071a0:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount = Size;
 80071a2:	68fb      	ldr	r3, [r7, #12]
 80071a4:	893a      	ldrh	r2, [r7, #8]
 80071a6:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 80071a8:	68fb      	ldr	r3, [r7, #12]
 80071aa:	2200      	movs	r2, #0
 80071ac:	635a      	str	r2, [r3, #52]	; 0x34

    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80071ae:	68fb      	ldr	r3, [r7, #12]
 80071b0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071b2:	b29b      	uxth	r3, r3
 80071b4:	2bff      	cmp	r3, #255	; 0xff
 80071b6:	d906      	bls.n	80071c6 <HAL_I2C_Master_Transmit+0x9a>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80071b8:	68fb      	ldr	r3, [r7, #12]
 80071ba:	22ff      	movs	r2, #255	; 0xff
 80071bc:	851a      	strh	r2, [r3, #40]	; 0x28
      xfermode = I2C_RELOAD_MODE;
 80071be:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80071c2:	617b      	str	r3, [r7, #20]
 80071c4:	e007      	b.n	80071d6 <HAL_I2C_Master_Transmit+0xaa>
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 80071c6:	68fb      	ldr	r3, [r7, #12]
 80071c8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071ca:	b29a      	uxth	r2, r3
 80071cc:	68fb      	ldr	r3, [r7, #12]
 80071ce:	851a      	strh	r2, [r3, #40]	; 0x28
      xfermode = I2C_AUTOEND_MODE;
 80071d0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80071d4:	617b      	str	r3, [r7, #20]
    }

    if (hi2c->XferSize > 0U)
 80071d6:	68fb      	ldr	r3, [r7, #12]
 80071d8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80071da:	2b00      	cmp	r3, #0
 80071dc:	d024      	beq.n	8007228 <HAL_I2C_Master_Transmit+0xfc>
    {
      /* Preload TX register */
      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80071de:	68fb      	ldr	r3, [r7, #12]
 80071e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071e2:	781a      	ldrb	r2, [r3, #0]
 80071e4:	68fb      	ldr	r3, [r7, #12]
 80071e6:	681b      	ldr	r3, [r3, #0]
 80071e8:	629a      	str	r2, [r3, #40]	; 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 80071ea:	68fb      	ldr	r3, [r7, #12]
 80071ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071ee:	1c5a      	adds	r2, r3, #1
 80071f0:	68fb      	ldr	r3, [r7, #12]
 80071f2:	625a      	str	r2, [r3, #36]	; 0x24

      hi2c->XferCount--;
 80071f4:	68fb      	ldr	r3, [r7, #12]
 80071f6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071f8:	b29b      	uxth	r3, r3
 80071fa:	3b01      	subs	r3, #1
 80071fc:	b29a      	uxth	r2, r3
 80071fe:	68fb      	ldr	r3, [r7, #12]
 8007200:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 8007202:	68fb      	ldr	r3, [r7, #12]
 8007204:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007206:	3b01      	subs	r3, #1
 8007208:	b29a      	uxth	r2, r3
 800720a:	68fb      	ldr	r3, [r7, #12]
 800720c:	851a      	strh	r2, [r3, #40]	; 0x28

      /* Send Slave Address */
      /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)(hi2c->XferSize + 1U), xfermode,
 800720e:	68fb      	ldr	r3, [r7, #12]
 8007210:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007212:	b2db      	uxtb	r3, r3
 8007214:	3301      	adds	r3, #1
 8007216:	b2da      	uxtb	r2, r3
 8007218:	8979      	ldrh	r1, [r7, #10]
 800721a:	4b4e      	ldr	r3, [pc, #312]	; (8007354 <HAL_I2C_Master_Transmit+0x228>)
 800721c:	9300      	str	r3, [sp, #0]
 800721e:	697b      	ldr	r3, [r7, #20]
 8007220:	68f8      	ldr	r0, [r7, #12]
 8007222:	f000 fa79 	bl	8007718 <I2C_TransferConfig>
 8007226:	e066      	b.n	80072f6 <HAL_I2C_Master_Transmit+0x1ca>
    }
    else
    {
      /* Send Slave Address */
      /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode,
 8007228:	68fb      	ldr	r3, [r7, #12]
 800722a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800722c:	b2da      	uxtb	r2, r3
 800722e:	8979      	ldrh	r1, [r7, #10]
 8007230:	4b48      	ldr	r3, [pc, #288]	; (8007354 <HAL_I2C_Master_Transmit+0x228>)
 8007232:	9300      	str	r3, [sp, #0]
 8007234:	697b      	ldr	r3, [r7, #20]
 8007236:	68f8      	ldr	r0, [r7, #12]
 8007238:	f000 fa6e 	bl	8007718 <I2C_TransferConfig>
                         I2C_GENERATE_START_WRITE);
    }

    while (hi2c->XferCount > 0U)
 800723c:	e05b      	b.n	80072f6 <HAL_I2C_Master_Transmit+0x1ca>
    {
      /* Wait until TXIS flag is set */
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800723e:	693a      	ldr	r2, [r7, #16]
 8007240:	6a39      	ldr	r1, [r7, #32]
 8007242:	68f8      	ldr	r0, [r7, #12]
 8007244:	f000 f8fd 	bl	8007442 <I2C_WaitOnTXISFlagUntilTimeout>
 8007248:	4603      	mov	r3, r0
 800724a:	2b00      	cmp	r3, #0
 800724c:	d001      	beq.n	8007252 <HAL_I2C_Master_Transmit+0x126>
      {
        return HAL_ERROR;
 800724e:	2301      	movs	r3, #1
 8007250:	e07b      	b.n	800734a <HAL_I2C_Master_Transmit+0x21e>
      }
      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8007252:	68fb      	ldr	r3, [r7, #12]
 8007254:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007256:	781a      	ldrb	r2, [r3, #0]
 8007258:	68fb      	ldr	r3, [r7, #12]
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	629a      	str	r2, [r3, #40]	; 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 800725e:	68fb      	ldr	r3, [r7, #12]
 8007260:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007262:	1c5a      	adds	r2, r3, #1
 8007264:	68fb      	ldr	r3, [r7, #12]
 8007266:	625a      	str	r2, [r3, #36]	; 0x24

      hi2c->XferCount--;
 8007268:	68fb      	ldr	r3, [r7, #12]
 800726a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800726c:	b29b      	uxth	r3, r3
 800726e:	3b01      	subs	r3, #1
 8007270:	b29a      	uxth	r2, r3
 8007272:	68fb      	ldr	r3, [r7, #12]
 8007274:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 8007276:	68fb      	ldr	r3, [r7, #12]
 8007278:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800727a:	3b01      	subs	r3, #1
 800727c:	b29a      	uxth	r2, r3
 800727e:	68fb      	ldr	r3, [r7, #12]
 8007280:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8007282:	68fb      	ldr	r3, [r7, #12]
 8007284:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007286:	b29b      	uxth	r3, r3
 8007288:	2b00      	cmp	r3, #0
 800728a:	d034      	beq.n	80072f6 <HAL_I2C_Master_Transmit+0x1ca>
 800728c:	68fb      	ldr	r3, [r7, #12]
 800728e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007290:	2b00      	cmp	r3, #0
 8007292:	d130      	bne.n	80072f6 <HAL_I2C_Master_Transmit+0x1ca>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8007294:	693b      	ldr	r3, [r7, #16]
 8007296:	9300      	str	r3, [sp, #0]
 8007298:	6a3b      	ldr	r3, [r7, #32]
 800729a:	2200      	movs	r2, #0
 800729c:	2180      	movs	r1, #128	; 0x80
 800729e:	68f8      	ldr	r0, [r7, #12]
 80072a0:	f000 f880 	bl	80073a4 <I2C_WaitOnFlagUntilTimeout>
 80072a4:	4603      	mov	r3, r0
 80072a6:	2b00      	cmp	r3, #0
 80072a8:	d001      	beq.n	80072ae <HAL_I2C_Master_Transmit+0x182>
        {
          return HAL_ERROR;
 80072aa:	2301      	movs	r3, #1
 80072ac:	e04d      	b.n	800734a <HAL_I2C_Master_Transmit+0x21e>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80072ae:	68fb      	ldr	r3, [r7, #12]
 80072b0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072b2:	b29b      	uxth	r3, r3
 80072b4:	2bff      	cmp	r3, #255	; 0xff
 80072b6:	d90e      	bls.n	80072d6 <HAL_I2C_Master_Transmit+0x1aa>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80072b8:	68fb      	ldr	r3, [r7, #12]
 80072ba:	22ff      	movs	r2, #255	; 0xff
 80072bc:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80072be:	68fb      	ldr	r3, [r7, #12]
 80072c0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80072c2:	b2da      	uxtb	r2, r3
 80072c4:	8979      	ldrh	r1, [r7, #10]
 80072c6:	2300      	movs	r3, #0
 80072c8:	9300      	str	r3, [sp, #0]
 80072ca:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80072ce:	68f8      	ldr	r0, [r7, #12]
 80072d0:	f000 fa22 	bl	8007718 <I2C_TransferConfig>
 80072d4:	e00f      	b.n	80072f6 <HAL_I2C_Master_Transmit+0x1ca>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 80072d6:	68fb      	ldr	r3, [r7, #12]
 80072d8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072da:	b29a      	uxth	r2, r3
 80072dc:	68fb      	ldr	r3, [r7, #12]
 80072de:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80072e0:	68fb      	ldr	r3, [r7, #12]
 80072e2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80072e4:	b2da      	uxtb	r2, r3
 80072e6:	8979      	ldrh	r1, [r7, #10]
 80072e8:	2300      	movs	r3, #0
 80072ea:	9300      	str	r3, [sp, #0]
 80072ec:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80072f0:	68f8      	ldr	r0, [r7, #12]
 80072f2:	f000 fa11 	bl	8007718 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 80072f6:	68fb      	ldr	r3, [r7, #12]
 80072f8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072fa:	b29b      	uxth	r3, r3
 80072fc:	2b00      	cmp	r3, #0
 80072fe:	d19e      	bne.n	800723e <HAL_I2C_Master_Transmit+0x112>
      }
    }

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is set */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007300:	693a      	ldr	r2, [r7, #16]
 8007302:	6a39      	ldr	r1, [r7, #32]
 8007304:	68f8      	ldr	r0, [r7, #12]
 8007306:	f000 f8e3 	bl	80074d0 <I2C_WaitOnSTOPFlagUntilTimeout>
 800730a:	4603      	mov	r3, r0
 800730c:	2b00      	cmp	r3, #0
 800730e:	d001      	beq.n	8007314 <HAL_I2C_Master_Transmit+0x1e8>
    {
      return HAL_ERROR;
 8007310:	2301      	movs	r3, #1
 8007312:	e01a      	b.n	800734a <HAL_I2C_Master_Transmit+0x21e>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8007314:	68fb      	ldr	r3, [r7, #12]
 8007316:	681b      	ldr	r3, [r3, #0]
 8007318:	2220      	movs	r2, #32
 800731a:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 800731c:	68fb      	ldr	r3, [r7, #12]
 800731e:	681b      	ldr	r3, [r3, #0]
 8007320:	6859      	ldr	r1, [r3, #4]
 8007322:	68fb      	ldr	r3, [r7, #12]
 8007324:	681a      	ldr	r2, [r3, #0]
 8007326:	4b0c      	ldr	r3, [pc, #48]	; (8007358 <HAL_I2C_Master_Transmit+0x22c>)
 8007328:	400b      	ands	r3, r1
 800732a:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 800732c:	68fb      	ldr	r3, [r7, #12]
 800732e:	2220      	movs	r2, #32
 8007330:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8007334:	68fb      	ldr	r3, [r7, #12]
 8007336:	2200      	movs	r2, #0
 8007338:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800733c:	68fb      	ldr	r3, [r7, #12]
 800733e:	2200      	movs	r2, #0
 8007340:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8007344:	2300      	movs	r3, #0
 8007346:	e000      	b.n	800734a <HAL_I2C_Master_Transmit+0x21e>
  }
  else
  {
    return HAL_BUSY;
 8007348:	2302      	movs	r3, #2
  }
}
 800734a:	4618      	mov	r0, r3
 800734c:	3718      	adds	r7, #24
 800734e:	46bd      	mov	sp, r7
 8007350:	bd80      	pop	{r7, pc}
 8007352:	bf00      	nop
 8007354:	80002000 	.word	0x80002000
 8007358:	fe00e800 	.word	0xfe00e800

0800735c <I2C_Flush_TXDR>:
  * @brief  I2C Tx data register flush process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
 800735c:	b480      	push	{r7}
 800735e:	b083      	sub	sp, #12
 8007360:	af00      	add	r7, sp, #0
 8007362:	6078      	str	r0, [r7, #4]
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	681b      	ldr	r3, [r3, #0]
 8007368:	699b      	ldr	r3, [r3, #24]
 800736a:	f003 0302 	and.w	r3, r3, #2
 800736e:	2b02      	cmp	r3, #2
 8007370:	d103      	bne.n	800737a <I2C_Flush_TXDR+0x1e>
  {
    hi2c->Instance->TXDR = 0x00U;
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	681b      	ldr	r3, [r3, #0]
 8007376:	2200      	movs	r2, #0
 8007378:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	681b      	ldr	r3, [r3, #0]
 800737e:	699b      	ldr	r3, [r3, #24]
 8007380:	f003 0301 	and.w	r3, r3, #1
 8007384:	2b01      	cmp	r3, #1
 8007386:	d007      	beq.n	8007398 <I2C_Flush_TXDR+0x3c>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	681b      	ldr	r3, [r3, #0]
 800738c:	699a      	ldr	r2, [r3, #24]
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	681b      	ldr	r3, [r3, #0]
 8007392:	f042 0201 	orr.w	r2, r2, #1
 8007396:	619a      	str	r2, [r3, #24]
  }
}
 8007398:	bf00      	nop
 800739a:	370c      	adds	r7, #12
 800739c:	46bd      	mov	sp, r7
 800739e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073a2:	4770      	bx	lr

080073a4 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 80073a4:	b580      	push	{r7, lr}
 80073a6:	b084      	sub	sp, #16
 80073a8:	af00      	add	r7, sp, #0
 80073aa:	60f8      	str	r0, [r7, #12]
 80073ac:	60b9      	str	r1, [r7, #8]
 80073ae:	603b      	str	r3, [r7, #0]
 80073b0:	4613      	mov	r3, r2
 80073b2:	71fb      	strb	r3, [r7, #7]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80073b4:	e031      	b.n	800741a <I2C_WaitOnFlagUntilTimeout+0x76>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80073b6:	683b      	ldr	r3, [r7, #0]
 80073b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80073bc:	d02d      	beq.n	800741a <I2C_WaitOnFlagUntilTimeout+0x76>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80073be:	f7fe fc7b 	bl	8005cb8 <HAL_GetTick>
 80073c2:	4602      	mov	r2, r0
 80073c4:	69bb      	ldr	r3, [r7, #24]
 80073c6:	1ad3      	subs	r3, r2, r3
 80073c8:	683a      	ldr	r2, [r7, #0]
 80073ca:	429a      	cmp	r2, r3
 80073cc:	d302      	bcc.n	80073d4 <I2C_WaitOnFlagUntilTimeout+0x30>
 80073ce:	683b      	ldr	r3, [r7, #0]
 80073d0:	2b00      	cmp	r3, #0
 80073d2:	d122      	bne.n	800741a <I2C_WaitOnFlagUntilTimeout+0x76>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 80073d4:	68fb      	ldr	r3, [r7, #12]
 80073d6:	681b      	ldr	r3, [r3, #0]
 80073d8:	699a      	ldr	r2, [r3, #24]
 80073da:	68bb      	ldr	r3, [r7, #8]
 80073dc:	4013      	ands	r3, r2
 80073de:	68ba      	ldr	r2, [r7, #8]
 80073e0:	429a      	cmp	r2, r3
 80073e2:	bf0c      	ite	eq
 80073e4:	2301      	moveq	r3, #1
 80073e6:	2300      	movne	r3, #0
 80073e8:	b2db      	uxtb	r3, r3
 80073ea:	461a      	mov	r2, r3
 80073ec:	79fb      	ldrb	r3, [r7, #7]
 80073ee:	429a      	cmp	r2, r3
 80073f0:	d113      	bne.n	800741a <I2C_WaitOnFlagUntilTimeout+0x76>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80073f2:	68fb      	ldr	r3, [r7, #12]
 80073f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80073f6:	f043 0220 	orr.w	r2, r3, #32
 80073fa:	68fb      	ldr	r3, [r7, #12]
 80073fc:	645a      	str	r2, [r3, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 80073fe:	68fb      	ldr	r3, [r7, #12]
 8007400:	2220      	movs	r2, #32
 8007402:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8007406:	68fb      	ldr	r3, [r7, #12]
 8007408:	2200      	movs	r2, #0
 800740a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 800740e:	68fb      	ldr	r3, [r7, #12]
 8007410:	2200      	movs	r2, #0
 8007412:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
          return HAL_ERROR;
 8007416:	2301      	movs	r3, #1
 8007418:	e00f      	b.n	800743a <I2C_WaitOnFlagUntilTimeout+0x96>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800741a:	68fb      	ldr	r3, [r7, #12]
 800741c:	681b      	ldr	r3, [r3, #0]
 800741e:	699a      	ldr	r2, [r3, #24]
 8007420:	68bb      	ldr	r3, [r7, #8]
 8007422:	4013      	ands	r3, r2
 8007424:	68ba      	ldr	r2, [r7, #8]
 8007426:	429a      	cmp	r2, r3
 8007428:	bf0c      	ite	eq
 800742a:	2301      	moveq	r3, #1
 800742c:	2300      	movne	r3, #0
 800742e:	b2db      	uxtb	r3, r3
 8007430:	461a      	mov	r2, r3
 8007432:	79fb      	ldrb	r3, [r7, #7]
 8007434:	429a      	cmp	r2, r3
 8007436:	d0be      	beq.n	80073b6 <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8007438:	2300      	movs	r3, #0
}
 800743a:	4618      	mov	r0, r3
 800743c:	3710      	adds	r7, #16
 800743e:	46bd      	mov	sp, r7
 8007440:	bd80      	pop	{r7, pc}

08007442 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8007442:	b580      	push	{r7, lr}
 8007444:	b084      	sub	sp, #16
 8007446:	af00      	add	r7, sp, #0
 8007448:	60f8      	str	r0, [r7, #12]
 800744a:	60b9      	str	r1, [r7, #8]
 800744c:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 800744e:	e033      	b.n	80074b8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8007450:	687a      	ldr	r2, [r7, #4]
 8007452:	68b9      	ldr	r1, [r7, #8]
 8007454:	68f8      	ldr	r0, [r7, #12]
 8007456:	f000 f87f 	bl	8007558 <I2C_IsErrorOccurred>
 800745a:	4603      	mov	r3, r0
 800745c:	2b00      	cmp	r3, #0
 800745e:	d001      	beq.n	8007464 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8007460:	2301      	movs	r3, #1
 8007462:	e031      	b.n	80074c8 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8007464:	68bb      	ldr	r3, [r7, #8]
 8007466:	f1b3 3fff 	cmp.w	r3, #4294967295
 800746a:	d025      	beq.n	80074b8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800746c:	f7fe fc24 	bl	8005cb8 <HAL_GetTick>
 8007470:	4602      	mov	r2, r0
 8007472:	687b      	ldr	r3, [r7, #4]
 8007474:	1ad3      	subs	r3, r2, r3
 8007476:	68ba      	ldr	r2, [r7, #8]
 8007478:	429a      	cmp	r2, r3
 800747a:	d302      	bcc.n	8007482 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 800747c:	68bb      	ldr	r3, [r7, #8]
 800747e:	2b00      	cmp	r3, #0
 8007480:	d11a      	bne.n	80074b8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8007482:	68fb      	ldr	r3, [r7, #12]
 8007484:	681b      	ldr	r3, [r3, #0]
 8007486:	699b      	ldr	r3, [r3, #24]
 8007488:	f003 0302 	and.w	r3, r3, #2
 800748c:	2b02      	cmp	r3, #2
 800748e:	d013      	beq.n	80074b8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007490:	68fb      	ldr	r3, [r7, #12]
 8007492:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007494:	f043 0220 	orr.w	r2, r3, #32
 8007498:	68fb      	ldr	r3, [r7, #12]
 800749a:	645a      	str	r2, [r3, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 800749c:	68fb      	ldr	r3, [r7, #12]
 800749e:	2220      	movs	r2, #32
 80074a0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80074a4:	68fb      	ldr	r3, [r7, #12]
 80074a6:	2200      	movs	r2, #0
 80074a8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80074ac:	68fb      	ldr	r3, [r7, #12]
 80074ae:	2200      	movs	r2, #0
 80074b0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

          return HAL_ERROR;
 80074b4:	2301      	movs	r3, #1
 80074b6:	e007      	b.n	80074c8 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 80074b8:	68fb      	ldr	r3, [r7, #12]
 80074ba:	681b      	ldr	r3, [r3, #0]
 80074bc:	699b      	ldr	r3, [r3, #24]
 80074be:	f003 0302 	and.w	r3, r3, #2
 80074c2:	2b02      	cmp	r3, #2
 80074c4:	d1c4      	bne.n	8007450 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 80074c6:	2300      	movs	r3, #0
}
 80074c8:	4618      	mov	r0, r3
 80074ca:	3710      	adds	r7, #16
 80074cc:	46bd      	mov	sp, r7
 80074ce:	bd80      	pop	{r7, pc}

080074d0 <I2C_WaitOnSTOPFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 80074d0:	b580      	push	{r7, lr}
 80074d2:	b084      	sub	sp, #16
 80074d4:	af00      	add	r7, sp, #0
 80074d6:	60f8      	str	r0, [r7, #12]
 80074d8:	60b9      	str	r1, [r7, #8]
 80074da:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80074dc:	e02f      	b.n	800753e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80074de:	687a      	ldr	r2, [r7, #4]
 80074e0:	68b9      	ldr	r1, [r7, #8]
 80074e2:	68f8      	ldr	r0, [r7, #12]
 80074e4:	f000 f838 	bl	8007558 <I2C_IsErrorOccurred>
 80074e8:	4603      	mov	r3, r0
 80074ea:	2b00      	cmp	r3, #0
 80074ec:	d001      	beq.n	80074f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 80074ee:	2301      	movs	r3, #1
 80074f0:	e02d      	b.n	800754e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80074f2:	f7fe fbe1 	bl	8005cb8 <HAL_GetTick>
 80074f6:	4602      	mov	r2, r0
 80074f8:	687b      	ldr	r3, [r7, #4]
 80074fa:	1ad3      	subs	r3, r2, r3
 80074fc:	68ba      	ldr	r2, [r7, #8]
 80074fe:	429a      	cmp	r2, r3
 8007500:	d302      	bcc.n	8007508 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8007502:	68bb      	ldr	r3, [r7, #8]
 8007504:	2b00      	cmp	r3, #0
 8007506:	d11a      	bne.n	800753e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8007508:	68fb      	ldr	r3, [r7, #12]
 800750a:	681b      	ldr	r3, [r3, #0]
 800750c:	699b      	ldr	r3, [r3, #24]
 800750e:	f003 0320 	and.w	r3, r3, #32
 8007512:	2b20      	cmp	r3, #32
 8007514:	d013      	beq.n	800753e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8007516:	68fb      	ldr	r3, [r7, #12]
 8007518:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800751a:	f043 0220 	orr.w	r2, r3, #32
 800751e:	68fb      	ldr	r3, [r7, #12]
 8007520:	645a      	str	r2, [r3, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8007522:	68fb      	ldr	r3, [r7, #12]
 8007524:	2220      	movs	r2, #32
 8007526:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800752a:	68fb      	ldr	r3, [r7, #12]
 800752c:	2200      	movs	r2, #0
 800752e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8007532:	68fb      	ldr	r3, [r7, #12]
 8007534:	2200      	movs	r2, #0
 8007536:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

        return HAL_ERROR;
 800753a:	2301      	movs	r3, #1
 800753c:	e007      	b.n	800754e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 800753e:	68fb      	ldr	r3, [r7, #12]
 8007540:	681b      	ldr	r3, [r3, #0]
 8007542:	699b      	ldr	r3, [r3, #24]
 8007544:	f003 0320 	and.w	r3, r3, #32
 8007548:	2b20      	cmp	r3, #32
 800754a:	d1c8      	bne.n	80074de <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 800754c:	2300      	movs	r3, #0
}
 800754e:	4618      	mov	r0, r3
 8007550:	3710      	adds	r7, #16
 8007552:	46bd      	mov	sp, r7
 8007554:	bd80      	pop	{r7, pc}
	...

08007558 <I2C_IsErrorOccurred>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8007558:	b580      	push	{r7, lr}
 800755a:	b08a      	sub	sp, #40	; 0x28
 800755c:	af00      	add	r7, sp, #0
 800755e:	60f8      	str	r0, [r7, #12]
 8007560:	60b9      	str	r1, [r7, #8]
 8007562:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8007564:	2300      	movs	r3, #0
 8007566:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  uint32_t itflag   = hi2c->Instance->ISR;
 800756a:	68fb      	ldr	r3, [r7, #12]
 800756c:	681b      	ldr	r3, [r3, #0]
 800756e:	699b      	ldr	r3, [r3, #24]
 8007570:	61bb      	str	r3, [r7, #24]
  uint32_t error_code = 0;
 8007572:	2300      	movs	r3, #0
 8007574:	623b      	str	r3, [r7, #32]
  uint32_t tickstart = Tickstart;
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	61fb      	str	r3, [r7, #28]
  uint32_t tmp1;
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 800757a:	69bb      	ldr	r3, [r7, #24]
 800757c:	f003 0310 	and.w	r3, r3, #16
 8007580:	2b00      	cmp	r3, #0
 8007582:	d068      	beq.n	8007656 <I2C_IsErrorOccurred+0xfe>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007584:	68fb      	ldr	r3, [r7, #12]
 8007586:	681b      	ldr	r3, [r3, #0]
 8007588:	2210      	movs	r2, #16
 800758a:	61da      	str	r2, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 800758c:	e049      	b.n	8007622 <I2C_IsErrorOccurred+0xca>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
 800758e:	68bb      	ldr	r3, [r7, #8]
 8007590:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007594:	d045      	beq.n	8007622 <I2C_IsErrorOccurred+0xca>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8007596:	f7fe fb8f 	bl	8005cb8 <HAL_GetTick>
 800759a:	4602      	mov	r2, r0
 800759c:	69fb      	ldr	r3, [r7, #28]
 800759e:	1ad3      	subs	r3, r2, r3
 80075a0:	68ba      	ldr	r2, [r7, #8]
 80075a2:	429a      	cmp	r2, r3
 80075a4:	d302      	bcc.n	80075ac <I2C_IsErrorOccurred+0x54>
 80075a6:	68bb      	ldr	r3, [r7, #8]
 80075a8:	2b00      	cmp	r3, #0
 80075aa:	d13a      	bne.n	8007622 <I2C_IsErrorOccurred+0xca>
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 80075ac:	68fb      	ldr	r3, [r7, #12]
 80075ae:	681b      	ldr	r3, [r3, #0]
 80075b0:	685b      	ldr	r3, [r3, #4]
 80075b2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80075b6:	617b      	str	r3, [r7, #20]
          tmp2 = hi2c->Mode;
 80075b8:	68fb      	ldr	r3, [r7, #12]
 80075ba:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 80075be:	74fb      	strb	r3, [r7, #19]

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 80075c0:	68fb      	ldr	r3, [r7, #12]
 80075c2:	681b      	ldr	r3, [r3, #0]
 80075c4:	699b      	ldr	r3, [r3, #24]
 80075c6:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80075ca:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80075ce:	d121      	bne.n	8007614 <I2C_IsErrorOccurred+0xbc>
 80075d0:	697b      	ldr	r3, [r7, #20]
 80075d2:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80075d6:	d01d      	beq.n	8007614 <I2C_IsErrorOccurred+0xbc>
              (tmp1 != I2C_CR2_STOP) && \
 80075d8:	7cfb      	ldrb	r3, [r7, #19]
 80075da:	2b20      	cmp	r3, #32
 80075dc:	d01a      	beq.n	8007614 <I2C_IsErrorOccurred+0xbc>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 80075de:	68fb      	ldr	r3, [r7, #12]
 80075e0:	681b      	ldr	r3, [r3, #0]
 80075e2:	685a      	ldr	r2, [r3, #4]
 80075e4:	68fb      	ldr	r3, [r7, #12]
 80075e6:	681b      	ldr	r3, [r3, #0]
 80075e8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80075ec:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
 80075ee:	f7fe fb63 	bl	8005cb8 <HAL_GetTick>
 80075f2:	61f8      	str	r0, [r7, #28]
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80075f4:	e00e      	b.n	8007614 <I2C_IsErrorOccurred+0xbc>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 80075f6:	f7fe fb5f 	bl	8005cb8 <HAL_GetTick>
 80075fa:	4602      	mov	r2, r0
 80075fc:	69fb      	ldr	r3, [r7, #28]
 80075fe:	1ad3      	subs	r3, r2, r3
 8007600:	2b19      	cmp	r3, #25
 8007602:	d907      	bls.n	8007614 <I2C_IsErrorOccurred+0xbc>
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8007604:	6a3b      	ldr	r3, [r7, #32]
 8007606:	f043 0320 	orr.w	r3, r3, #32
 800760a:	623b      	str	r3, [r7, #32]

              status = HAL_ERROR;
 800760c:	2301      	movs	r3, #1
 800760e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

              break;
 8007612:	e006      	b.n	8007622 <I2C_IsErrorOccurred+0xca>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8007614:	68fb      	ldr	r3, [r7, #12]
 8007616:	681b      	ldr	r3, [r3, #0]
 8007618:	699b      	ldr	r3, [r3, #24]
 800761a:	f003 0320 	and.w	r3, r3, #32
 800761e:	2b20      	cmp	r3, #32
 8007620:	d1e9      	bne.n	80075f6 <I2C_IsErrorOccurred+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8007622:	68fb      	ldr	r3, [r7, #12]
 8007624:	681b      	ldr	r3, [r3, #0]
 8007626:	699b      	ldr	r3, [r3, #24]
 8007628:	f003 0320 	and.w	r3, r3, #32
 800762c:	2b20      	cmp	r3, #32
 800762e:	d003      	beq.n	8007638 <I2C_IsErrorOccurred+0xe0>
 8007630:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8007634:	2b00      	cmp	r3, #0
 8007636:	d0aa      	beq.n	800758e <I2C_IsErrorOccurred+0x36>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
 8007638:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800763c:	2b00      	cmp	r3, #0
 800763e:	d103      	bne.n	8007648 <I2C_IsErrorOccurred+0xf0>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8007640:	68fb      	ldr	r3, [r7, #12]
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	2220      	movs	r2, #32
 8007646:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
 8007648:	6a3b      	ldr	r3, [r7, #32]
 800764a:	f043 0304 	orr.w	r3, r3, #4
 800764e:	623b      	str	r3, [r7, #32]

    status = HAL_ERROR;
 8007650:	2301      	movs	r3, #1
 8007652:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
 8007656:	68fb      	ldr	r3, [r7, #12]
 8007658:	681b      	ldr	r3, [r3, #0]
 800765a:	699b      	ldr	r3, [r3, #24]
 800765c:	61bb      	str	r3, [r7, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 800765e:	69bb      	ldr	r3, [r7, #24]
 8007660:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007664:	2b00      	cmp	r3, #0
 8007666:	d00b      	beq.n	8007680 <I2C_IsErrorOccurred+0x128>
  {
    error_code |= HAL_I2C_ERROR_BERR;
 8007668:	6a3b      	ldr	r3, [r7, #32]
 800766a:	f043 0301 	orr.w	r3, r3, #1
 800766e:	623b      	str	r3, [r7, #32]

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8007670:	68fb      	ldr	r3, [r7, #12]
 8007672:	681b      	ldr	r3, [r3, #0]
 8007674:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007678:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 800767a:	2301      	movs	r3, #1
 800767c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8007680:	69bb      	ldr	r3, [r7, #24]
 8007682:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007686:	2b00      	cmp	r3, #0
 8007688:	d00b      	beq.n	80076a2 <I2C_IsErrorOccurred+0x14a>
  {
    error_code |= HAL_I2C_ERROR_OVR;
 800768a:	6a3b      	ldr	r3, [r7, #32]
 800768c:	f043 0308 	orr.w	r3, r3, #8
 8007690:	623b      	str	r3, [r7, #32]

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8007692:	68fb      	ldr	r3, [r7, #12]
 8007694:	681b      	ldr	r3, [r3, #0]
 8007696:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800769a:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 800769c:	2301      	movs	r3, #1
 800769e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 80076a2:	69bb      	ldr	r3, [r7, #24]
 80076a4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80076a8:	2b00      	cmp	r3, #0
 80076aa:	d00b      	beq.n	80076c4 <I2C_IsErrorOccurred+0x16c>
  {
    error_code |= HAL_I2C_ERROR_ARLO;
 80076ac:	6a3b      	ldr	r3, [r7, #32]
 80076ae:	f043 0302 	orr.w	r3, r3, #2
 80076b2:	623b      	str	r3, [r7, #32]

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80076b4:	68fb      	ldr	r3, [r7, #12]
 80076b6:	681b      	ldr	r3, [r3, #0]
 80076b8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80076bc:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 80076be:	2301      	movs	r3, #1
 80076c0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  if (status != HAL_OK)
 80076c4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80076c8:	2b00      	cmp	r3, #0
 80076ca:	d01c      	beq.n	8007706 <I2C_IsErrorOccurred+0x1ae>
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);
 80076cc:	68f8      	ldr	r0, [r7, #12]
 80076ce:	f7ff fe45 	bl	800735c <I2C_Flush_TXDR>

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 80076d2:	68fb      	ldr	r3, [r7, #12]
 80076d4:	681b      	ldr	r3, [r3, #0]
 80076d6:	6859      	ldr	r1, [r3, #4]
 80076d8:	68fb      	ldr	r3, [r7, #12]
 80076da:	681a      	ldr	r2, [r3, #0]
 80076dc:	4b0d      	ldr	r3, [pc, #52]	; (8007714 <I2C_IsErrorOccurred+0x1bc>)
 80076de:	400b      	ands	r3, r1
 80076e0:	6053      	str	r3, [r2, #4]

    hi2c->ErrorCode |= error_code;
 80076e2:	68fb      	ldr	r3, [r7, #12]
 80076e4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80076e6:	6a3b      	ldr	r3, [r7, #32]
 80076e8:	431a      	orrs	r2, r3
 80076ea:	68fb      	ldr	r3, [r7, #12]
 80076ec:	645a      	str	r2, [r3, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 80076ee:	68fb      	ldr	r3, [r7, #12]
 80076f0:	2220      	movs	r2, #32
 80076f2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80076f6:	68fb      	ldr	r3, [r7, #12]
 80076f8:	2200      	movs	r2, #0
 80076fa:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80076fe:	68fb      	ldr	r3, [r7, #12]
 8007700:	2200      	movs	r2, #0
 8007702:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
  }

  return status;
 8007706:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 800770a:	4618      	mov	r0, r3
 800770c:	3728      	adds	r7, #40	; 0x28
 800770e:	46bd      	mov	sp, r7
 8007710:	bd80      	pop	{r7, pc}
 8007712:	bf00      	nop
 8007714:	fe00e800 	.word	0xfe00e800

08007718 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8007718:	b480      	push	{r7}
 800771a:	b087      	sub	sp, #28
 800771c:	af00      	add	r7, sp, #0
 800771e:	60f8      	str	r0, [r7, #12]
 8007720:	607b      	str	r3, [r7, #4]
 8007722:	460b      	mov	r3, r1
 8007724:	817b      	strh	r3, [r7, #10]
 8007726:	4613      	mov	r3, r2
 8007728:	727b      	strb	r3, [r7, #9]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800772a:	897b      	ldrh	r3, [r7, #10]
 800772c:	f3c3 0209 	ubfx	r2, r3, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8007730:	7a7b      	ldrb	r3, [r7, #9]
 8007732:	041b      	lsls	r3, r3, #16
 8007734:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8007738:	431a      	orrs	r2, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	431a      	orrs	r2, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800773e:	6a3b      	ldr	r3, [r7, #32]
 8007740:	4313      	orrs	r3, r2
 8007742:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007746:	617b      	str	r3, [r7, #20]
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8007748:	68fb      	ldr	r3, [r7, #12]
 800774a:	681b      	ldr	r3, [r3, #0]
 800774c:	685a      	ldr	r2, [r3, #4]
 800774e:	6a3b      	ldr	r3, [r7, #32]
 8007750:	0d5b      	lsrs	r3, r3, #21
 8007752:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8007756:	4b08      	ldr	r3, [pc, #32]	; (8007778 <I2C_TransferConfig+0x60>)
 8007758:	430b      	orrs	r3, r1
 800775a:	43db      	mvns	r3, r3
 800775c:	ea02 0103 	and.w	r1, r2, r3
 8007760:	68fb      	ldr	r3, [r7, #12]
 8007762:	681b      	ldr	r3, [r3, #0]
 8007764:	697a      	ldr	r2, [r7, #20]
 8007766:	430a      	orrs	r2, r1
 8007768:	605a      	str	r2, [r3, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 800776a:	bf00      	nop
 800776c:	371c      	adds	r7, #28
 800776e:	46bd      	mov	sp, r7
 8007770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007774:	4770      	bx	lr
 8007776:	bf00      	nop
 8007778:	03ff63ff 	.word	0x03ff63ff

0800777c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800777c:	b480      	push	{r7}
 800777e:	b083      	sub	sp, #12
 8007780:	af00      	add	r7, sp, #0
 8007782:	6078      	str	r0, [r7, #4]
 8007784:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007786:	687b      	ldr	r3, [r7, #4]
 8007788:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800778c:	b2db      	uxtb	r3, r3
 800778e:	2b20      	cmp	r3, #32
 8007790:	d138      	bne.n	8007804 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8007798:	2b01      	cmp	r3, #1
 800779a:	d101      	bne.n	80077a0 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800779c:	2302      	movs	r3, #2
 800779e:	e032      	b.n	8007806 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	2201      	movs	r2, #1
 80077a4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 80077a8:	687b      	ldr	r3, [r7, #4]
 80077aa:	2224      	movs	r2, #36	; 0x24
 80077ac:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80077b0:	687b      	ldr	r3, [r7, #4]
 80077b2:	681b      	ldr	r3, [r3, #0]
 80077b4:	681a      	ldr	r2, [r3, #0]
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	681b      	ldr	r3, [r3, #0]
 80077ba:	f022 0201 	bic.w	r2, r2, #1
 80077be:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80077c0:	687b      	ldr	r3, [r7, #4]
 80077c2:	681b      	ldr	r3, [r3, #0]
 80077c4:	681a      	ldr	r2, [r3, #0]
 80077c6:	687b      	ldr	r3, [r7, #4]
 80077c8:	681b      	ldr	r3, [r3, #0]
 80077ca:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80077ce:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	681b      	ldr	r3, [r3, #0]
 80077d4:	6819      	ldr	r1, [r3, #0]
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	681b      	ldr	r3, [r3, #0]
 80077da:	683a      	ldr	r2, [r7, #0]
 80077dc:	430a      	orrs	r2, r1
 80077de:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	681b      	ldr	r3, [r3, #0]
 80077e4:	681a      	ldr	r2, [r3, #0]
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	681b      	ldr	r3, [r3, #0]
 80077ea:	f042 0201 	orr.w	r2, r2, #1
 80077ee:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	2220      	movs	r2, #32
 80077f4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80077f8:	687b      	ldr	r3, [r7, #4]
 80077fa:	2200      	movs	r2, #0
 80077fc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8007800:	2300      	movs	r3, #0
 8007802:	e000      	b.n	8007806 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 8007804:	2302      	movs	r3, #2
  }
}
 8007806:	4618      	mov	r0, r3
 8007808:	370c      	adds	r7, #12
 800780a:	46bd      	mov	sp, r7
 800780c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007810:	4770      	bx	lr

08007812 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8007812:	b480      	push	{r7}
 8007814:	b085      	sub	sp, #20
 8007816:	af00      	add	r7, sp, #0
 8007818:	6078      	str	r0, [r7, #4]
 800781a:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8007822:	b2db      	uxtb	r3, r3
 8007824:	2b20      	cmp	r3, #32
 8007826:	d139      	bne.n	800789c <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8007828:	687b      	ldr	r3, [r7, #4]
 800782a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800782e:	2b01      	cmp	r3, #1
 8007830:	d101      	bne.n	8007836 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8007832:	2302      	movs	r3, #2
 8007834:	e033      	b.n	800789e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8007836:	687b      	ldr	r3, [r7, #4]
 8007838:	2201      	movs	r2, #1
 800783a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	2224      	movs	r2, #36	; 0x24
 8007842:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8007846:	687b      	ldr	r3, [r7, #4]
 8007848:	681b      	ldr	r3, [r3, #0]
 800784a:	681a      	ldr	r2, [r3, #0]
 800784c:	687b      	ldr	r3, [r7, #4]
 800784e:	681b      	ldr	r3, [r3, #0]
 8007850:	f022 0201 	bic.w	r2, r2, #1
 8007854:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	681b      	ldr	r3, [r3, #0]
 800785a:	681b      	ldr	r3, [r3, #0]
 800785c:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 800785e:	68fb      	ldr	r3, [r7, #12]
 8007860:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8007864:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8007866:	683b      	ldr	r3, [r7, #0]
 8007868:	021b      	lsls	r3, r3, #8
 800786a:	68fa      	ldr	r2, [r7, #12]
 800786c:	4313      	orrs	r3, r2
 800786e:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	68fa      	ldr	r2, [r7, #12]
 8007876:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8007878:	687b      	ldr	r3, [r7, #4]
 800787a:	681b      	ldr	r3, [r3, #0]
 800787c:	681a      	ldr	r2, [r3, #0]
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	681b      	ldr	r3, [r3, #0]
 8007882:	f042 0201 	orr.w	r2, r2, #1
 8007886:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8007888:	687b      	ldr	r3, [r7, #4]
 800788a:	2220      	movs	r2, #32
 800788c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007890:	687b      	ldr	r3, [r7, #4]
 8007892:	2200      	movs	r2, #0
 8007894:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8007898:	2300      	movs	r3, #0
 800789a:	e000      	b.n	800789e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 800789c:	2302      	movs	r3, #2
  }
}
 800789e:	4618      	mov	r0, r3
 80078a0:	3714      	adds	r7, #20
 80078a2:	46bd      	mov	sp, r7
 80078a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078a8:	4770      	bx	lr
	...

080078ac <HAL_PWREx_GetVoltageRange>:
  * @brief Return Voltage Scaling Range.
  * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1 or PWR_REGULATOR_VOLTAGE_SCALE2
  *         or PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when applicable)
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
 80078ac:	b480      	push	{r7}
 80078ae:	af00      	add	r7, sp, #0
#if defined(PWR_CR5_R1MODE)
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 80078b0:	4b0d      	ldr	r3, [pc, #52]	; (80078e8 <HAL_PWREx_GetVoltageRange+0x3c>)
 80078b2:	681b      	ldr	r3, [r3, #0]
 80078b4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80078b8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80078bc:	d102      	bne.n	80078c4 <HAL_PWREx_GetVoltageRange+0x18>
    {
      return PWR_REGULATOR_VOLTAGE_SCALE2;
 80078be:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80078c2:	e00b      	b.n	80078dc <HAL_PWREx_GetVoltageRange+0x30>
    }
    else if (READ_BIT(PWR->CR5, PWR_CR5_R1MODE) == PWR_CR5_R1MODE)
 80078c4:	4b08      	ldr	r3, [pc, #32]	; (80078e8 <HAL_PWREx_GetVoltageRange+0x3c>)
 80078c6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80078ca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80078ce:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80078d2:	d102      	bne.n	80078da <HAL_PWREx_GetVoltageRange+0x2e>
    {
      /* PWR_CR5_R1MODE bit set means that Range 1 Boost is disabled */
      return PWR_REGULATOR_VOLTAGE_SCALE1;
 80078d4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80078d8:	e000      	b.n	80078dc <HAL_PWREx_GetVoltageRange+0x30>
    }
    else
    {
      return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
 80078da:	2300      	movs	r3, #0
    }
#else
  return  (PWR->CR1 & PWR_CR1_VOS);
#endif
}
 80078dc:	4618      	mov	r0, r3
 80078de:	46bd      	mov	sp, r7
 80078e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078e4:	4770      	bx	lr
 80078e6:	bf00      	nop
 80078e8:	40007000 	.word	0x40007000

080078ec <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        50 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 80078ec:	b480      	push	{r7}
 80078ee:	b085      	sub	sp, #20
 80078f0:	af00      	add	r7, sp, #0
 80078f2:	6078      	str	r0, [r7, #4]
  uint32_t wait_loop_index;

  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

#if defined(PWR_CR5_R1MODE)
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1_BOOST)
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	2b00      	cmp	r3, #0
 80078f8:	d141      	bne.n	800797e <HAL_PWREx_ControlVoltageScaling+0x92>
  {
    /* If current range is range 2 */
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 80078fa:	4b4b      	ldr	r3, [pc, #300]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80078fc:	681b      	ldr	r3, [r3, #0]
 80078fe:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8007902:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007906:	d131      	bne.n	800796c <HAL_PWREx_ControlVoltageScaling+0x80>
    {
      /* Make sure Range 1 Boost is enabled */
      CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 8007908:	4b47      	ldr	r3, [pc, #284]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800790a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800790e:	4a46      	ldr	r2, [pc, #280]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8007910:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007914:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80

      /* Set Range 1 */
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 8007918:	4b43      	ldr	r3, [pc, #268]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800791a:	681b      	ldr	r3, [r3, #0]
 800791c:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8007920:	4a41      	ldr	r2, [pc, #260]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8007922:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007926:	6013      	str	r3, [r2, #0]

      /* Wait until VOSF is cleared */
      wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1;
 8007928:	4b40      	ldr	r3, [pc, #256]	; (8007a2c <HAL_PWREx_ControlVoltageScaling+0x140>)
 800792a:	681b      	ldr	r3, [r3, #0]
 800792c:	2232      	movs	r2, #50	; 0x32
 800792e:	fb02 f303 	mul.w	r3, r2, r3
 8007932:	4a3f      	ldr	r2, [pc, #252]	; (8007a30 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8007934:	fba2 2303 	umull	r2, r3, r2, r3
 8007938:	0c9b      	lsrs	r3, r3, #18
 800793a:	3301      	adds	r3, #1
 800793c:	60fb      	str	r3, [r7, #12]
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 800793e:	e002      	b.n	8007946 <HAL_PWREx_ControlVoltageScaling+0x5a>
      {
        wait_loop_index--;
 8007940:	68fb      	ldr	r3, [r7, #12]
 8007942:	3b01      	subs	r3, #1
 8007944:	60fb      	str	r3, [r7, #12]
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 8007946:	4b38      	ldr	r3, [pc, #224]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8007948:	695b      	ldr	r3, [r3, #20]
 800794a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800794e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007952:	d102      	bne.n	800795a <HAL_PWREx_ControlVoltageScaling+0x6e>
 8007954:	68fb      	ldr	r3, [r7, #12]
 8007956:	2b00      	cmp	r3, #0
 8007958:	d1f2      	bne.n	8007940 <HAL_PWREx_ControlVoltageScaling+0x54>
      }
      if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 800795a:	4b33      	ldr	r3, [pc, #204]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800795c:	695b      	ldr	r3, [r3, #20]
 800795e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007962:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007966:	d158      	bne.n	8007a1a <HAL_PWREx_ControlVoltageScaling+0x12e>
      {
        return HAL_TIMEOUT;
 8007968:	2303      	movs	r3, #3
 800796a:	e057      	b.n	8007a1c <HAL_PWREx_ControlVoltageScaling+0x130>
    }
    /* If current range is range 1 normal or boost mode */
    else
    {
      /* Enable Range 1 Boost (no issue if bit already reset) */
      CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 800796c:	4b2e      	ldr	r3, [pc, #184]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800796e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007972:	4a2d      	ldr	r2, [pc, #180]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8007974:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007978:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 800797c:	e04d      	b.n	8007a1a <HAL_PWREx_ControlVoltageScaling+0x12e>
    }
  }
  else if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007984:	d141      	bne.n	8007a0a <HAL_PWREx_ControlVoltageScaling+0x11e>
  {
    /* If current range is range 2 */
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 8007986:	4b28      	ldr	r3, [pc, #160]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8007988:	681b      	ldr	r3, [r3, #0]
 800798a:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800798e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007992:	d131      	bne.n	80079f8 <HAL_PWREx_ControlVoltageScaling+0x10c>
    {
      /* Make sure Range 1 Boost is disabled */
      SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 8007994:	4b24      	ldr	r3, [pc, #144]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8007996:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800799a:	4a23      	ldr	r2, [pc, #140]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800799c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80079a0:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80

      /* Set Range 1 */
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 80079a4:	4b20      	ldr	r3, [pc, #128]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80079a6:	681b      	ldr	r3, [r3, #0]
 80079a8:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80079ac:	4a1e      	ldr	r2, [pc, #120]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80079ae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80079b2:	6013      	str	r3, [r2, #0]

      /* Wait until VOSF is cleared */
      wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1;
 80079b4:	4b1d      	ldr	r3, [pc, #116]	; (8007a2c <HAL_PWREx_ControlVoltageScaling+0x140>)
 80079b6:	681b      	ldr	r3, [r3, #0]
 80079b8:	2232      	movs	r2, #50	; 0x32
 80079ba:	fb02 f303 	mul.w	r3, r2, r3
 80079be:	4a1c      	ldr	r2, [pc, #112]	; (8007a30 <HAL_PWREx_ControlVoltageScaling+0x144>)
 80079c0:	fba2 2303 	umull	r2, r3, r2, r3
 80079c4:	0c9b      	lsrs	r3, r3, #18
 80079c6:	3301      	adds	r3, #1
 80079c8:	60fb      	str	r3, [r7, #12]
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 80079ca:	e002      	b.n	80079d2 <HAL_PWREx_ControlVoltageScaling+0xe6>
      {
        wait_loop_index--;
 80079cc:	68fb      	ldr	r3, [r7, #12]
 80079ce:	3b01      	subs	r3, #1
 80079d0:	60fb      	str	r3, [r7, #12]
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 80079d2:	4b15      	ldr	r3, [pc, #84]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80079d4:	695b      	ldr	r3, [r3, #20]
 80079d6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80079da:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80079de:	d102      	bne.n	80079e6 <HAL_PWREx_ControlVoltageScaling+0xfa>
 80079e0:	68fb      	ldr	r3, [r7, #12]
 80079e2:	2b00      	cmp	r3, #0
 80079e4:	d1f2      	bne.n	80079cc <HAL_PWREx_ControlVoltageScaling+0xe0>
      }
      if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 80079e6:	4b10      	ldr	r3, [pc, #64]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80079e8:	695b      	ldr	r3, [r3, #20]
 80079ea:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80079ee:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80079f2:	d112      	bne.n	8007a1a <HAL_PWREx_ControlVoltageScaling+0x12e>
      {
        return HAL_TIMEOUT;
 80079f4:	2303      	movs	r3, #3
 80079f6:	e011      	b.n	8007a1c <HAL_PWREx_ControlVoltageScaling+0x130>
    }
     /* If current range is range 1 normal or boost mode */
    else
    {
      /* Disable Range 1 Boost (no issue if bit already set) */
      SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 80079f8:	4b0b      	ldr	r3, [pc, #44]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80079fa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80079fe:	4a0a      	ldr	r2, [pc, #40]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8007a00:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007a04:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8007a08:	e007      	b.n	8007a1a <HAL_PWREx_ControlVoltageScaling+0x12e>
    }
  }
  else
  {
    /* Set Range 2 */
    MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 8007a0a:	4b07      	ldr	r3, [pc, #28]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8007a0c:	681b      	ldr	r3, [r3, #0]
 8007a0e:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8007a12:	4a05      	ldr	r2, [pc, #20]	; (8007a28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8007a14:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8007a18:	6013      	str	r3, [r2, #0]
      /* No need to wait for VOSF to be cleared for this transition */
    }
  }
#endif

  return HAL_OK;
 8007a1a:	2300      	movs	r3, #0
}
 8007a1c:	4618      	mov	r0, r3
 8007a1e:	3714      	adds	r7, #20
 8007a20:	46bd      	mov	sp, r7
 8007a22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a26:	4770      	bx	lr
 8007a28:	40007000 	.word	0x40007000
 8007a2c:	20000288 	.word	0x20000288
 8007a30:	431bde83 	.word	0x431bde83

08007a34 <HAL_PWREx_EnableVddIO2>:
  * @brief Enable VDDIO2 supply.
  * @note  Remove VDDIO2 electrical and logical isolation, once VDDIO2 supply is present.
  * @retval None
  */
void HAL_PWREx_EnableVddIO2(void)
{
 8007a34:	b480      	push	{r7}
 8007a36:	af00      	add	r7, sp, #0
  SET_BIT(PWR->CR2, PWR_CR2_IOSV);
 8007a38:	4b05      	ldr	r3, [pc, #20]	; (8007a50 <HAL_PWREx_EnableVddIO2+0x1c>)
 8007a3a:	685b      	ldr	r3, [r3, #4]
 8007a3c:	4a04      	ldr	r2, [pc, #16]	; (8007a50 <HAL_PWREx_EnableVddIO2+0x1c>)
 8007a3e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007a42:	6053      	str	r3, [r2, #4]
}
 8007a44:	bf00      	nop
 8007a46:	46bd      	mov	sp, r7
 8007a48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a4c:	4770      	bx	lr
 8007a4e:	bf00      	nop
 8007a50:	40007000 	.word	0x40007000

08007a54 <HAL_RCC_OscConfig>:
  * @note   If HSE failed to start, HSE should be disabled before recalling
            HAL_RCC_OscConfig().
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007a54:	b580      	push	{r7, lr}
 8007a56:	b088      	sub	sp, #32
 8007a58:	af00      	add	r7, sp, #0
 8007a5a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	2b00      	cmp	r3, #0
 8007a60:	d102      	bne.n	8007a68 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 8007a62:	2301      	movs	r3, #1
 8007a64:	f000 bc08 	b.w	8008278 <HAL_RCC_OscConfig+0x824>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007a68:	4b96      	ldr	r3, [pc, #600]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007a6a:	689b      	ldr	r3, [r3, #8]
 8007a6c:	f003 030c 	and.w	r3, r3, #12
 8007a70:	61bb      	str	r3, [r7, #24]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8007a72:	4b94      	ldr	r3, [pc, #592]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007a74:	68db      	ldr	r3, [r3, #12]
 8007a76:	f003 0303 	and.w	r3, r3, #3
 8007a7a:	617b      	str	r3, [r7, #20]

  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8007a7c:	687b      	ldr	r3, [r7, #4]
 8007a7e:	681b      	ldr	r3, [r3, #0]
 8007a80:	f003 0310 	and.w	r3, r3, #16
 8007a84:	2b00      	cmp	r3, #0
 8007a86:	f000 80e4 	beq.w	8007c52 <HAL_RCC_OscConfig+0x1fe>
    assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));
    assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
    assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

    /* Check if MSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 8007a8a:	69bb      	ldr	r3, [r7, #24]
 8007a8c:	2b00      	cmp	r3, #0
 8007a8e:	d007      	beq.n	8007aa0 <HAL_RCC_OscConfig+0x4c>
 8007a90:	69bb      	ldr	r3, [r7, #24]
 8007a92:	2b0c      	cmp	r3, #12
 8007a94:	f040 808b 	bne.w	8007bae <HAL_RCC_OscConfig+0x15a>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_MSI)))
 8007a98:	697b      	ldr	r3, [r7, #20]
 8007a9a:	2b01      	cmp	r3, #1
 8007a9c:	f040 8087 	bne.w	8007bae <HAL_RCC_OscConfig+0x15a>
    {
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8007aa0:	4b88      	ldr	r3, [pc, #544]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007aa2:	681b      	ldr	r3, [r3, #0]
 8007aa4:	f003 0302 	and.w	r3, r3, #2
 8007aa8:	2b00      	cmp	r3, #0
 8007aaa:	d005      	beq.n	8007ab8 <HAL_RCC_OscConfig+0x64>
 8007aac:	687b      	ldr	r3, [r7, #4]
 8007aae:	699b      	ldr	r3, [r3, #24]
 8007ab0:	2b00      	cmp	r3, #0
 8007ab2:	d101      	bne.n	8007ab8 <HAL_RCC_OscConfig+0x64>
      {
        return HAL_ERROR;
 8007ab4:	2301      	movs	r3, #1
 8007ab6:	e3df      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      else
      {
        /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
           must be correctly programmed according to the frequency of the CPU clock
           (HCLK) and the supply voltage of the device. */
        if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	6a1a      	ldr	r2, [r3, #32]
 8007abc:	4b81      	ldr	r3, [pc, #516]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007abe:	681b      	ldr	r3, [r3, #0]
 8007ac0:	f003 0308 	and.w	r3, r3, #8
 8007ac4:	2b00      	cmp	r3, #0
 8007ac6:	d004      	beq.n	8007ad2 <HAL_RCC_OscConfig+0x7e>
 8007ac8:	4b7e      	ldr	r3, [pc, #504]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007aca:	681b      	ldr	r3, [r3, #0]
 8007acc:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8007ad0:	e005      	b.n	8007ade <HAL_RCC_OscConfig+0x8a>
 8007ad2:	4b7c      	ldr	r3, [pc, #496]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007ad4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007ad8:	091b      	lsrs	r3, r3, #4
 8007ada:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8007ade:	4293      	cmp	r3, r2
 8007ae0:	d223      	bcs.n	8007b2a <HAL_RCC_OscConfig+0xd6>
        {
          /* First increase number of wait states update if necessary */
          if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8007ae2:	687b      	ldr	r3, [r7, #4]
 8007ae4:	6a1b      	ldr	r3, [r3, #32]
 8007ae6:	4618      	mov	r0, r3
 8007ae8:	f000 fdcc 	bl	8008684 <RCC_SetFlashLatencyFromMSIRange>
 8007aec:	4603      	mov	r3, r0
 8007aee:	2b00      	cmp	r3, #0
 8007af0:	d001      	beq.n	8007af6 <HAL_RCC_OscConfig+0xa2>
          {
            return HAL_ERROR;
 8007af2:	2301      	movs	r3, #1
 8007af4:	e3c0      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
          }

          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8007af6:	4b73      	ldr	r3, [pc, #460]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007af8:	681b      	ldr	r3, [r3, #0]
 8007afa:	4a72      	ldr	r2, [pc, #456]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007afc:	f043 0308 	orr.w	r3, r3, #8
 8007b00:	6013      	str	r3, [r2, #0]
 8007b02:	4b70      	ldr	r3, [pc, #448]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b04:	681b      	ldr	r3, [r3, #0]
 8007b06:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	6a1b      	ldr	r3, [r3, #32]
 8007b0e:	496d      	ldr	r1, [pc, #436]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b10:	4313      	orrs	r3, r2
 8007b12:	600b      	str	r3, [r1, #0]
          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8007b14:	4b6b      	ldr	r3, [pc, #428]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b16:	685b      	ldr	r3, [r3, #4]
 8007b18:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	69db      	ldr	r3, [r3, #28]
 8007b20:	021b      	lsls	r3, r3, #8
 8007b22:	4968      	ldr	r1, [pc, #416]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b24:	4313      	orrs	r3, r2
 8007b26:	604b      	str	r3, [r1, #4]
 8007b28:	e025      	b.n	8007b76 <HAL_RCC_OscConfig+0x122>
        }
        else
        {
          /* Else, keep current flash latency while decreasing applies */
          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8007b2a:	4b66      	ldr	r3, [pc, #408]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b2c:	681b      	ldr	r3, [r3, #0]
 8007b2e:	4a65      	ldr	r2, [pc, #404]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b30:	f043 0308 	orr.w	r3, r3, #8
 8007b34:	6013      	str	r3, [r2, #0]
 8007b36:	4b63      	ldr	r3, [pc, #396]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b38:	681b      	ldr	r3, [r3, #0]
 8007b3a:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8007b3e:	687b      	ldr	r3, [r7, #4]
 8007b40:	6a1b      	ldr	r3, [r3, #32]
 8007b42:	4960      	ldr	r1, [pc, #384]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b44:	4313      	orrs	r3, r2
 8007b46:	600b      	str	r3, [r1, #0]
          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8007b48:	4b5e      	ldr	r3, [pc, #376]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b4a:	685b      	ldr	r3, [r3, #4]
 8007b4c:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	69db      	ldr	r3, [r3, #28]
 8007b54:	021b      	lsls	r3, r3, #8
 8007b56:	495b      	ldr	r1, [pc, #364]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b58:	4313      	orrs	r3, r2
 8007b5a:	604b      	str	r3, [r1, #4]

          /* Decrease number of wait states update if necessary */
          /* Only possible when MSI is the System clock source  */
          if(sysclk_source == RCC_CFGR_SWS_MSI)
 8007b5c:	69bb      	ldr	r3, [r7, #24]
 8007b5e:	2b00      	cmp	r3, #0
 8007b60:	d109      	bne.n	8007b76 <HAL_RCC_OscConfig+0x122>
          {
            if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8007b62:	687b      	ldr	r3, [r7, #4]
 8007b64:	6a1b      	ldr	r3, [r3, #32]
 8007b66:	4618      	mov	r0, r3
 8007b68:	f000 fd8c 	bl	8008684 <RCC_SetFlashLatencyFromMSIRange>
 8007b6c:	4603      	mov	r3, r0
 8007b6e:	2b00      	cmp	r3, #0
 8007b70:	d001      	beq.n	8007b76 <HAL_RCC_OscConfig+0x122>
            {
              return HAL_ERROR;
 8007b72:	2301      	movs	r3, #1
 8007b74:	e380      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
            }
          }
        }

        /* Update the SystemCoreClock global variable */
        SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 8007b76:	f000 fcc1 	bl	80084fc <HAL_RCC_GetSysClockFreq>
 8007b7a:	4602      	mov	r2, r0
 8007b7c:	4b51      	ldr	r3, [pc, #324]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007b7e:	689b      	ldr	r3, [r3, #8]
 8007b80:	091b      	lsrs	r3, r3, #4
 8007b82:	f003 030f 	and.w	r3, r3, #15
 8007b86:	4950      	ldr	r1, [pc, #320]	; (8007cc8 <HAL_RCC_OscConfig+0x274>)
 8007b88:	5ccb      	ldrb	r3, [r1, r3]
 8007b8a:	f003 031f 	and.w	r3, r3, #31
 8007b8e:	fa22 f303 	lsr.w	r3, r2, r3
 8007b92:	4a4e      	ldr	r2, [pc, #312]	; (8007ccc <HAL_RCC_OscConfig+0x278>)
 8007b94:	6013      	str	r3, [r2, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick(uwTickPrio);
 8007b96:	4b4e      	ldr	r3, [pc, #312]	; (8007cd0 <HAL_RCC_OscConfig+0x27c>)
 8007b98:	681b      	ldr	r3, [r3, #0]
 8007b9a:	4618      	mov	r0, r3
 8007b9c:	f7fe f83c 	bl	8005c18 <HAL_InitTick>
 8007ba0:	4603      	mov	r3, r0
 8007ba2:	73fb      	strb	r3, [r7, #15]
        if(status != HAL_OK)
 8007ba4:	7bfb      	ldrb	r3, [r7, #15]
 8007ba6:	2b00      	cmp	r3, #0
 8007ba8:	d052      	beq.n	8007c50 <HAL_RCC_OscConfig+0x1fc>
        {
          return status;
 8007baa:	7bfb      	ldrb	r3, [r7, #15]
 8007bac:	e364      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      }
    }
    else
    {
      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	699b      	ldr	r3, [r3, #24]
 8007bb2:	2b00      	cmp	r3, #0
 8007bb4:	d032      	beq.n	8007c1c <HAL_RCC_OscConfig+0x1c8>
      {
        /* Enable the Internal High Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 8007bb6:	4b43      	ldr	r3, [pc, #268]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	4a42      	ldr	r2, [pc, #264]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007bbc:	f043 0301 	orr.w	r3, r3, #1
 8007bc0:	6013      	str	r3, [r2, #0]

        /* Get timeout */
        tickstart = HAL_GetTick();
 8007bc2:	f7fe f879 	bl	8005cb8 <HAL_GetTick>
 8007bc6:	6138      	str	r0, [r7, #16]

        /* Wait till MSI is ready */
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 8007bc8:	e008      	b.n	8007bdc <HAL_RCC_OscConfig+0x188>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8007bca:	f7fe f875 	bl	8005cb8 <HAL_GetTick>
 8007bce:	4602      	mov	r2, r0
 8007bd0:	693b      	ldr	r3, [r7, #16]
 8007bd2:	1ad3      	subs	r3, r2, r3
 8007bd4:	2b02      	cmp	r3, #2
 8007bd6:	d901      	bls.n	8007bdc <HAL_RCC_OscConfig+0x188>
          {
            return HAL_TIMEOUT;
 8007bd8:	2303      	movs	r3, #3
 8007bda:	e34d      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 8007bdc:	4b39      	ldr	r3, [pc, #228]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007bde:	681b      	ldr	r3, [r3, #0]
 8007be0:	f003 0302 	and.w	r3, r3, #2
 8007be4:	2b00      	cmp	r3, #0
 8007be6:	d0f0      	beq.n	8007bca <HAL_RCC_OscConfig+0x176>
          }
        }
         /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8007be8:	4b36      	ldr	r3, [pc, #216]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	4a35      	ldr	r2, [pc, #212]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007bee:	f043 0308 	orr.w	r3, r3, #8
 8007bf2:	6013      	str	r3, [r2, #0]
 8007bf4:	4b33      	ldr	r3, [pc, #204]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007bf6:	681b      	ldr	r3, [r3, #0]
 8007bf8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8007bfc:	687b      	ldr	r3, [r7, #4]
 8007bfe:	6a1b      	ldr	r3, [r3, #32]
 8007c00:	4930      	ldr	r1, [pc, #192]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007c02:	4313      	orrs	r3, r2
 8007c04:	600b      	str	r3, [r1, #0]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8007c06:	4b2f      	ldr	r3, [pc, #188]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007c08:	685b      	ldr	r3, [r3, #4]
 8007c0a:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8007c0e:	687b      	ldr	r3, [r7, #4]
 8007c10:	69db      	ldr	r3, [r3, #28]
 8007c12:	021b      	lsls	r3, r3, #8
 8007c14:	492b      	ldr	r1, [pc, #172]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007c16:	4313      	orrs	r3, r2
 8007c18:	604b      	str	r3, [r1, #4]
 8007c1a:	e01a      	b.n	8007c52 <HAL_RCC_OscConfig+0x1fe>

      }
      else
      {
        /* Disable the Internal High Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 8007c1c:	4b29      	ldr	r3, [pc, #164]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007c1e:	681b      	ldr	r3, [r3, #0]
 8007c20:	4a28      	ldr	r2, [pc, #160]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007c22:	f023 0301 	bic.w	r3, r3, #1
 8007c26:	6013      	str	r3, [r2, #0]

        /* Get timeout */
        tickstart = HAL_GetTick();
 8007c28:	f7fe f846 	bl	8005cb8 <HAL_GetTick>
 8007c2c:	6138      	str	r0, [r7, #16]

        /* Wait till MSI is ready */
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 8007c2e:	e008      	b.n	8007c42 <HAL_RCC_OscConfig+0x1ee>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8007c30:	f7fe f842 	bl	8005cb8 <HAL_GetTick>
 8007c34:	4602      	mov	r2, r0
 8007c36:	693b      	ldr	r3, [r7, #16]
 8007c38:	1ad3      	subs	r3, r2, r3
 8007c3a:	2b02      	cmp	r3, #2
 8007c3c:	d901      	bls.n	8007c42 <HAL_RCC_OscConfig+0x1ee>
          {
            return HAL_TIMEOUT;
 8007c3e:	2303      	movs	r3, #3
 8007c40:	e31a      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 8007c42:	4b20      	ldr	r3, [pc, #128]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007c44:	681b      	ldr	r3, [r3, #0]
 8007c46:	f003 0302 	and.w	r3, r3, #2
 8007c4a:	2b00      	cmp	r3, #0
 8007c4c:	d1f0      	bne.n	8007c30 <HAL_RCC_OscConfig+0x1dc>
 8007c4e:	e000      	b.n	8007c52 <HAL_RCC_OscConfig+0x1fe>
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8007c50:	bf00      	nop
        }
      }
    }
  }
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	681b      	ldr	r3, [r3, #0]
 8007c56:	f003 0301 	and.w	r3, r3, #1
 8007c5a:	2b00      	cmp	r3, #0
 8007c5c:	d073      	beq.n	8007d46 <HAL_RCC_OscConfig+0x2f2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 8007c5e:	69bb      	ldr	r3, [r7, #24]
 8007c60:	2b08      	cmp	r3, #8
 8007c62:	d005      	beq.n	8007c70 <HAL_RCC_OscConfig+0x21c>
 8007c64:	69bb      	ldr	r3, [r7, #24]
 8007c66:	2b0c      	cmp	r3, #12
 8007c68:	d10e      	bne.n	8007c88 <HAL_RCC_OscConfig+0x234>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSE)))
 8007c6a:	697b      	ldr	r3, [r7, #20]
 8007c6c:	2b03      	cmp	r3, #3
 8007c6e:	d10b      	bne.n	8007c88 <HAL_RCC_OscConfig+0x234>
    {
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007c70:	4b14      	ldr	r3, [pc, #80]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007c72:	681b      	ldr	r3, [r3, #0]
 8007c74:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007c78:	2b00      	cmp	r3, #0
 8007c7a:	d063      	beq.n	8007d44 <HAL_RCC_OscConfig+0x2f0>
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	685b      	ldr	r3, [r3, #4]
 8007c80:	2b00      	cmp	r3, #0
 8007c82:	d15f      	bne.n	8007d44 <HAL_RCC_OscConfig+0x2f0>
      {
        return HAL_ERROR;
 8007c84:	2301      	movs	r3, #1
 8007c86:	e2f7      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	685b      	ldr	r3, [r3, #4]
 8007c8c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007c90:	d106      	bne.n	8007ca0 <HAL_RCC_OscConfig+0x24c>
 8007c92:	4b0c      	ldr	r3, [pc, #48]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007c94:	681b      	ldr	r3, [r3, #0]
 8007c96:	4a0b      	ldr	r2, [pc, #44]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007c98:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007c9c:	6013      	str	r3, [r2, #0]
 8007c9e:	e025      	b.n	8007cec <HAL_RCC_OscConfig+0x298>
 8007ca0:	687b      	ldr	r3, [r7, #4]
 8007ca2:	685b      	ldr	r3, [r3, #4]
 8007ca4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007ca8:	d114      	bne.n	8007cd4 <HAL_RCC_OscConfig+0x280>
 8007caa:	4b06      	ldr	r3, [pc, #24]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	4a05      	ldr	r2, [pc, #20]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007cb0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007cb4:	6013      	str	r3, [r2, #0]
 8007cb6:	4b03      	ldr	r3, [pc, #12]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007cb8:	681b      	ldr	r3, [r3, #0]
 8007cba:	4a02      	ldr	r2, [pc, #8]	; (8007cc4 <HAL_RCC_OscConfig+0x270>)
 8007cbc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007cc0:	6013      	str	r3, [r2, #0]
 8007cc2:	e013      	b.n	8007cec <HAL_RCC_OscConfig+0x298>
 8007cc4:	40021000 	.word	0x40021000
 8007cc8:	0802b0a8 	.word	0x0802b0a8
 8007ccc:	20000288 	.word	0x20000288
 8007cd0:	20000298 	.word	0x20000298
 8007cd4:	4ba0      	ldr	r3, [pc, #640]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007cd6:	681b      	ldr	r3, [r3, #0]
 8007cd8:	4a9f      	ldr	r2, [pc, #636]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007cda:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007cde:	6013      	str	r3, [r2, #0]
 8007ce0:	4b9d      	ldr	r3, [pc, #628]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007ce2:	681b      	ldr	r3, [r3, #0]
 8007ce4:	4a9c      	ldr	r2, [pc, #624]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007ce6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007cea:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8007cec:	687b      	ldr	r3, [r7, #4]
 8007cee:	685b      	ldr	r3, [r3, #4]
 8007cf0:	2b00      	cmp	r3, #0
 8007cf2:	d013      	beq.n	8007d1c <HAL_RCC_OscConfig+0x2c8>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007cf4:	f7fd ffe0 	bl	8005cb8 <HAL_GetTick>
 8007cf8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8007cfa:	e008      	b.n	8007d0e <HAL_RCC_OscConfig+0x2ba>
        {
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8007cfc:	f7fd ffdc 	bl	8005cb8 <HAL_GetTick>
 8007d00:	4602      	mov	r2, r0
 8007d02:	693b      	ldr	r3, [r7, #16]
 8007d04:	1ad3      	subs	r3, r2, r3
 8007d06:	2b64      	cmp	r3, #100	; 0x64
 8007d08:	d901      	bls.n	8007d0e <HAL_RCC_OscConfig+0x2ba>
          {
            return HAL_TIMEOUT;
 8007d0a:	2303      	movs	r3, #3
 8007d0c:	e2b4      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8007d0e:	4b92      	ldr	r3, [pc, #584]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007d16:	2b00      	cmp	r3, #0
 8007d18:	d0f0      	beq.n	8007cfc <HAL_RCC_OscConfig+0x2a8>
 8007d1a:	e014      	b.n	8007d46 <HAL_RCC_OscConfig+0x2f2>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007d1c:	f7fd ffcc 	bl	8005cb8 <HAL_GetTick>
 8007d20:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8007d22:	e008      	b.n	8007d36 <HAL_RCC_OscConfig+0x2e2>
        {
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8007d24:	f7fd ffc8 	bl	8005cb8 <HAL_GetTick>
 8007d28:	4602      	mov	r2, r0
 8007d2a:	693b      	ldr	r3, [r7, #16]
 8007d2c:	1ad3      	subs	r3, r2, r3
 8007d2e:	2b64      	cmp	r3, #100	; 0x64
 8007d30:	d901      	bls.n	8007d36 <HAL_RCC_OscConfig+0x2e2>
          {
            return HAL_TIMEOUT;
 8007d32:	2303      	movs	r3, #3
 8007d34:	e2a0      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8007d36:	4b88      	ldr	r3, [pc, #544]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007d38:	681b      	ldr	r3, [r3, #0]
 8007d3a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007d3e:	2b00      	cmp	r3, #0
 8007d40:	d1f0      	bne.n	8007d24 <HAL_RCC_OscConfig+0x2d0>
 8007d42:	e000      	b.n	8007d46 <HAL_RCC_OscConfig+0x2f2>
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007d44:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	681b      	ldr	r3, [r3, #0]
 8007d4a:	f003 0302 	and.w	r3, r3, #2
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	d060      	beq.n	8007e14 <HAL_RCC_OscConfig+0x3c0>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 8007d52:	69bb      	ldr	r3, [r7, #24]
 8007d54:	2b04      	cmp	r3, #4
 8007d56:	d005      	beq.n	8007d64 <HAL_RCC_OscConfig+0x310>
 8007d58:	69bb      	ldr	r3, [r7, #24]
 8007d5a:	2b0c      	cmp	r3, #12
 8007d5c:	d119      	bne.n	8007d92 <HAL_RCC_OscConfig+0x33e>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSI)))
 8007d5e:	697b      	ldr	r3, [r7, #20]
 8007d60:	2b02      	cmp	r3, #2
 8007d62:	d116      	bne.n	8007d92 <HAL_RCC_OscConfig+0x33e>
    {
      /* When HSI is used as system clock it will not be disabled */
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8007d64:	4b7c      	ldr	r3, [pc, #496]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007d66:	681b      	ldr	r3, [r3, #0]
 8007d68:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007d6c:	2b00      	cmp	r3, #0
 8007d6e:	d005      	beq.n	8007d7c <HAL_RCC_OscConfig+0x328>
 8007d70:	687b      	ldr	r3, [r7, #4]
 8007d72:	68db      	ldr	r3, [r3, #12]
 8007d74:	2b00      	cmp	r3, #0
 8007d76:	d101      	bne.n	8007d7c <HAL_RCC_OscConfig+0x328>
      {
        return HAL_ERROR;
 8007d78:	2301      	movs	r3, #1
 8007d7a:	e27d      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007d7c:	4b76      	ldr	r3, [pc, #472]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007d7e:	685b      	ldr	r3, [r3, #4]
 8007d80:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8007d84:	687b      	ldr	r3, [r7, #4]
 8007d86:	691b      	ldr	r3, [r3, #16]
 8007d88:	061b      	lsls	r3, r3, #24
 8007d8a:	4973      	ldr	r1, [pc, #460]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007d8c:	4313      	orrs	r3, r2
 8007d8e:	604b      	str	r3, [r1, #4]
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8007d90:	e040      	b.n	8007e14 <HAL_RCC_OscConfig+0x3c0>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8007d92:	687b      	ldr	r3, [r7, #4]
 8007d94:	68db      	ldr	r3, [r3, #12]
 8007d96:	2b00      	cmp	r3, #0
 8007d98:	d023      	beq.n	8007de2 <HAL_RCC_OscConfig+0x38e>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8007d9a:	4b6f      	ldr	r3, [pc, #444]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007d9c:	681b      	ldr	r3, [r3, #0]
 8007d9e:	4a6e      	ldr	r2, [pc, #440]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007da0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007da4:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007da6:	f7fd ff87 	bl	8005cb8 <HAL_GetTick>
 8007daa:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8007dac:	e008      	b.n	8007dc0 <HAL_RCC_OscConfig+0x36c>
        {
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8007dae:	f7fd ff83 	bl	8005cb8 <HAL_GetTick>
 8007db2:	4602      	mov	r2, r0
 8007db4:	693b      	ldr	r3, [r7, #16]
 8007db6:	1ad3      	subs	r3, r2, r3
 8007db8:	2b02      	cmp	r3, #2
 8007dba:	d901      	bls.n	8007dc0 <HAL_RCC_OscConfig+0x36c>
          {
            return HAL_TIMEOUT;
 8007dbc:	2303      	movs	r3, #3
 8007dbe:	e25b      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8007dc0:	4b65      	ldr	r3, [pc, #404]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007dc2:	681b      	ldr	r3, [r3, #0]
 8007dc4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007dc8:	2b00      	cmp	r3, #0
 8007dca:	d0f0      	beq.n	8007dae <HAL_RCC_OscConfig+0x35a>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007dcc:	4b62      	ldr	r3, [pc, #392]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007dce:	685b      	ldr	r3, [r3, #4]
 8007dd0:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8007dd4:	687b      	ldr	r3, [r7, #4]
 8007dd6:	691b      	ldr	r3, [r3, #16]
 8007dd8:	061b      	lsls	r3, r3, #24
 8007dda:	495f      	ldr	r1, [pc, #380]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007ddc:	4313      	orrs	r3, r2
 8007dde:	604b      	str	r3, [r1, #4]
 8007de0:	e018      	b.n	8007e14 <HAL_RCC_OscConfig+0x3c0>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8007de2:	4b5d      	ldr	r3, [pc, #372]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007de4:	681b      	ldr	r3, [r3, #0]
 8007de6:	4a5c      	ldr	r2, [pc, #368]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007de8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007dec:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007dee:	f7fd ff63 	bl	8005cb8 <HAL_GetTick>
 8007df2:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8007df4:	e008      	b.n	8007e08 <HAL_RCC_OscConfig+0x3b4>
        {
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8007df6:	f7fd ff5f 	bl	8005cb8 <HAL_GetTick>
 8007dfa:	4602      	mov	r2, r0
 8007dfc:	693b      	ldr	r3, [r7, #16]
 8007dfe:	1ad3      	subs	r3, r2, r3
 8007e00:	2b02      	cmp	r3, #2
 8007e02:	d901      	bls.n	8007e08 <HAL_RCC_OscConfig+0x3b4>
          {
            return HAL_TIMEOUT;
 8007e04:	2303      	movs	r3, #3
 8007e06:	e237      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8007e08:	4b53      	ldr	r3, [pc, #332]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007e0a:	681b      	ldr	r3, [r3, #0]
 8007e0c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007e10:	2b00      	cmp	r3, #0
 8007e12:	d1f0      	bne.n	8007df6 <HAL_RCC_OscConfig+0x3a2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007e14:	687b      	ldr	r3, [r7, #4]
 8007e16:	681b      	ldr	r3, [r3, #0]
 8007e18:	f003 0308 	and.w	r3, r3, #8
 8007e1c:	2b00      	cmp	r3, #0
 8007e1e:	d03c      	beq.n	8007e9a <HAL_RCC_OscConfig+0x446>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8007e20:	687b      	ldr	r3, [r7, #4]
 8007e22:	695b      	ldr	r3, [r3, #20]
 8007e24:	2b00      	cmp	r3, #0
 8007e26:	d01c      	beq.n	8007e62 <HAL_RCC_OscConfig+0x40e>
        MODIFY_REG(RCC->CSR, RCC_CSR_LSIPREDIV, RCC_OscInitStruct->LSIDiv);
      }
#endif /* RCC_CSR_LSIPREDIV */

      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8007e28:	4b4b      	ldr	r3, [pc, #300]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007e2a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007e2e:	4a4a      	ldr	r2, [pc, #296]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007e30:	f043 0301 	orr.w	r3, r3, #1
 8007e34:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007e38:	f7fd ff3e 	bl	8005cb8 <HAL_GetTick>
 8007e3c:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8007e3e:	e008      	b.n	8007e52 <HAL_RCC_OscConfig+0x3fe>
      {
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8007e40:	f7fd ff3a 	bl	8005cb8 <HAL_GetTick>
 8007e44:	4602      	mov	r2, r0
 8007e46:	693b      	ldr	r3, [r7, #16]
 8007e48:	1ad3      	subs	r3, r2, r3
 8007e4a:	2b02      	cmp	r3, #2
 8007e4c:	d901      	bls.n	8007e52 <HAL_RCC_OscConfig+0x3fe>
        {
          return HAL_TIMEOUT;
 8007e4e:	2303      	movs	r3, #3
 8007e50:	e212      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8007e52:	4b41      	ldr	r3, [pc, #260]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007e54:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007e58:	f003 0302 	and.w	r3, r3, #2
 8007e5c:	2b00      	cmp	r3, #0
 8007e5e:	d0ef      	beq.n	8007e40 <HAL_RCC_OscConfig+0x3ec>
 8007e60:	e01b      	b.n	8007e9a <HAL_RCC_OscConfig+0x446>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8007e62:	4b3d      	ldr	r3, [pc, #244]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007e64:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007e68:	4a3b      	ldr	r2, [pc, #236]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007e6a:	f023 0301 	bic.w	r3, r3, #1
 8007e6e:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007e72:	f7fd ff21 	bl	8005cb8 <HAL_GetTick>
 8007e76:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8007e78:	e008      	b.n	8007e8c <HAL_RCC_OscConfig+0x438>
      {
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8007e7a:	f7fd ff1d 	bl	8005cb8 <HAL_GetTick>
 8007e7e:	4602      	mov	r2, r0
 8007e80:	693b      	ldr	r3, [r7, #16]
 8007e82:	1ad3      	subs	r3, r2, r3
 8007e84:	2b02      	cmp	r3, #2
 8007e86:	d901      	bls.n	8007e8c <HAL_RCC_OscConfig+0x438>
        {
          return HAL_TIMEOUT;
 8007e88:	2303      	movs	r3, #3
 8007e8a:	e1f5      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8007e8c:	4b32      	ldr	r3, [pc, #200]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007e8e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007e92:	f003 0302 	and.w	r3, r3, #2
 8007e96:	2b00      	cmp	r3, #0
 8007e98:	d1ef      	bne.n	8007e7a <HAL_RCC_OscConfig+0x426>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007e9a:	687b      	ldr	r3, [r7, #4]
 8007e9c:	681b      	ldr	r3, [r3, #0]
 8007e9e:	f003 0304 	and.w	r3, r3, #4
 8007ea2:	2b00      	cmp	r3, #0
 8007ea4:	f000 80a6 	beq.w	8007ff4 <HAL_RCC_OscConfig+0x5a0>
  {
    FlagStatus       pwrclkchanged = RESET;
 8007ea8:	2300      	movs	r3, #0
 8007eaa:	77fb      	strb	r3, [r7, #31]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 8007eac:	4b2a      	ldr	r3, [pc, #168]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007eae:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007eb0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007eb4:	2b00      	cmp	r3, #0
 8007eb6:	d10d      	bne.n	8007ed4 <HAL_RCC_OscConfig+0x480>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8007eb8:	4b27      	ldr	r3, [pc, #156]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007eba:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007ebc:	4a26      	ldr	r2, [pc, #152]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007ebe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007ec2:	6593      	str	r3, [r2, #88]	; 0x58
 8007ec4:	4b24      	ldr	r3, [pc, #144]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007ec6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007ec8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007ecc:	60bb      	str	r3, [r7, #8]
 8007ece:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8007ed0:	2301      	movs	r3, #1
 8007ed2:	77fb      	strb	r3, [r7, #31]
    }

    if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8007ed4:	4b21      	ldr	r3, [pc, #132]	; (8007f5c <HAL_RCC_OscConfig+0x508>)
 8007ed6:	681b      	ldr	r3, [r3, #0]
 8007ed8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007edc:	2b00      	cmp	r3, #0
 8007ede:	d118      	bne.n	8007f12 <HAL_RCC_OscConfig+0x4be>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8007ee0:	4b1e      	ldr	r3, [pc, #120]	; (8007f5c <HAL_RCC_OscConfig+0x508>)
 8007ee2:	681b      	ldr	r3, [r3, #0]
 8007ee4:	4a1d      	ldr	r2, [pc, #116]	; (8007f5c <HAL_RCC_OscConfig+0x508>)
 8007ee6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007eea:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8007eec:	f7fd fee4 	bl	8005cb8 <HAL_GetTick>
 8007ef0:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8007ef2:	e008      	b.n	8007f06 <HAL_RCC_OscConfig+0x4b2>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007ef4:	f7fd fee0 	bl	8005cb8 <HAL_GetTick>
 8007ef8:	4602      	mov	r2, r0
 8007efa:	693b      	ldr	r3, [r7, #16]
 8007efc:	1ad3      	subs	r3, r2, r3
 8007efe:	2b02      	cmp	r3, #2
 8007f00:	d901      	bls.n	8007f06 <HAL_RCC_OscConfig+0x4b2>
        {
          return HAL_TIMEOUT;
 8007f02:	2303      	movs	r3, #3
 8007f04:	e1b8      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8007f06:	4b15      	ldr	r3, [pc, #84]	; (8007f5c <HAL_RCC_OscConfig+0x508>)
 8007f08:	681b      	ldr	r3, [r3, #0]
 8007f0a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007f0e:	2b00      	cmp	r3, #0
 8007f10:	d0f0      	beq.n	8007ef4 <HAL_RCC_OscConfig+0x4a0>
    {
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
    }
#else
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007f12:	687b      	ldr	r3, [r7, #4]
 8007f14:	689b      	ldr	r3, [r3, #8]
 8007f16:	2b01      	cmp	r3, #1
 8007f18:	d108      	bne.n	8007f2c <HAL_RCC_OscConfig+0x4d8>
 8007f1a:	4b0f      	ldr	r3, [pc, #60]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007f1c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007f20:	4a0d      	ldr	r2, [pc, #52]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007f22:	f043 0301 	orr.w	r3, r3, #1
 8007f26:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8007f2a:	e029      	b.n	8007f80 <HAL_RCC_OscConfig+0x52c>
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	689b      	ldr	r3, [r3, #8]
 8007f30:	2b05      	cmp	r3, #5
 8007f32:	d115      	bne.n	8007f60 <HAL_RCC_OscConfig+0x50c>
 8007f34:	4b08      	ldr	r3, [pc, #32]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007f36:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007f3a:	4a07      	ldr	r2, [pc, #28]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007f3c:	f043 0304 	orr.w	r3, r3, #4
 8007f40:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8007f44:	4b04      	ldr	r3, [pc, #16]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007f46:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007f4a:	4a03      	ldr	r2, [pc, #12]	; (8007f58 <HAL_RCC_OscConfig+0x504>)
 8007f4c:	f043 0301 	orr.w	r3, r3, #1
 8007f50:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8007f54:	e014      	b.n	8007f80 <HAL_RCC_OscConfig+0x52c>
 8007f56:	bf00      	nop
 8007f58:	40021000 	.word	0x40021000
 8007f5c:	40007000 	.word	0x40007000
 8007f60:	4b9d      	ldr	r3, [pc, #628]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8007f62:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007f66:	4a9c      	ldr	r2, [pc, #624]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8007f68:	f023 0301 	bic.w	r3, r3, #1
 8007f6c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8007f70:	4b99      	ldr	r3, [pc, #612]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8007f72:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007f76:	4a98      	ldr	r2, [pc, #608]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8007f78:	f023 0304 	bic.w	r3, r3, #4
 8007f7c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
#endif /* RCC_BDCR_LSESYSDIS */

    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	689b      	ldr	r3, [r3, #8]
 8007f84:	2b00      	cmp	r3, #0
 8007f86:	d016      	beq.n	8007fb6 <HAL_RCC_OscConfig+0x562>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007f88:	f7fd fe96 	bl	8005cb8 <HAL_GetTick>
 8007f8c:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8007f8e:	e00a      	b.n	8007fa6 <HAL_RCC_OscConfig+0x552>
      {
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007f90:	f7fd fe92 	bl	8005cb8 <HAL_GetTick>
 8007f94:	4602      	mov	r2, r0
 8007f96:	693b      	ldr	r3, [r7, #16]
 8007f98:	1ad3      	subs	r3, r2, r3
 8007f9a:	f241 3288 	movw	r2, #5000	; 0x1388
 8007f9e:	4293      	cmp	r3, r2
 8007fa0:	d901      	bls.n	8007fa6 <HAL_RCC_OscConfig+0x552>
        {
          return HAL_TIMEOUT;
 8007fa2:	2303      	movs	r3, #3
 8007fa4:	e168      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8007fa6:	4b8c      	ldr	r3, [pc, #560]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8007fa8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007fac:	f003 0302 	and.w	r3, r3, #2
 8007fb0:	2b00      	cmp	r3, #0
 8007fb2:	d0ed      	beq.n	8007f90 <HAL_RCC_OscConfig+0x53c>
 8007fb4:	e015      	b.n	8007fe2 <HAL_RCC_OscConfig+0x58e>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007fb6:	f7fd fe7f 	bl	8005cb8 <HAL_GetTick>
 8007fba:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8007fbc:	e00a      	b.n	8007fd4 <HAL_RCC_OscConfig+0x580>
      {
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007fbe:	f7fd fe7b 	bl	8005cb8 <HAL_GetTick>
 8007fc2:	4602      	mov	r2, r0
 8007fc4:	693b      	ldr	r3, [r7, #16]
 8007fc6:	1ad3      	subs	r3, r2, r3
 8007fc8:	f241 3288 	movw	r2, #5000	; 0x1388
 8007fcc:	4293      	cmp	r3, r2
 8007fce:	d901      	bls.n	8007fd4 <HAL_RCC_OscConfig+0x580>
        {
          return HAL_TIMEOUT;
 8007fd0:	2303      	movs	r3, #3
 8007fd2:	e151      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8007fd4:	4b80      	ldr	r3, [pc, #512]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8007fd6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007fda:	f003 0302 	and.w	r3, r3, #2
 8007fde:	2b00      	cmp	r3, #0
 8007fe0:	d1ed      	bne.n	8007fbe <HAL_RCC_OscConfig+0x56a>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS);
#endif /* RCC_BDCR_LSESYSDIS */
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8007fe2:	7ffb      	ldrb	r3, [r7, #31]
 8007fe4:	2b01      	cmp	r3, #1
 8007fe6:	d105      	bne.n	8007ff4 <HAL_RCC_OscConfig+0x5a0>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8007fe8:	4b7b      	ldr	r3, [pc, #492]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8007fea:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007fec:	4a7a      	ldr	r2, [pc, #488]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8007fee:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007ff2:	6593      	str	r3, [r2, #88]	; 0x58
    }
  }
#if defined(RCC_HSI48_SUPPORT)
  /*------------------------------ HSI48 Configuration -----------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8007ff4:	687b      	ldr	r3, [r7, #4]
 8007ff6:	681b      	ldr	r3, [r3, #0]
 8007ff8:	f003 0320 	and.w	r3, r3, #32
 8007ffc:	2b00      	cmp	r3, #0
 8007ffe:	d03c      	beq.n	800807a <HAL_RCC_OscConfig+0x626>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the LSI State */
    if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8008000:	687b      	ldr	r3, [r7, #4]
 8008002:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008004:	2b00      	cmp	r3, #0
 8008006:	d01c      	beq.n	8008042 <HAL_RCC_OscConfig+0x5ee>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 8008008:	4b73      	ldr	r3, [pc, #460]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 800800a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800800e:	4a72      	ldr	r2, [pc, #456]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008010:	f043 0301 	orr.w	r3, r3, #1
 8008014:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8008018:	f7fd fe4e 	bl	8005cb8 <HAL_GetTick>
 800801c:	6138      	str	r0, [r7, #16]

      /* Wait till HSI48 is ready */
      while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 800801e:	e008      	b.n	8008032 <HAL_RCC_OscConfig+0x5de>
      {
        if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8008020:	f7fd fe4a 	bl	8005cb8 <HAL_GetTick>
 8008024:	4602      	mov	r2, r0
 8008026:	693b      	ldr	r3, [r7, #16]
 8008028:	1ad3      	subs	r3, r2, r3
 800802a:	2b02      	cmp	r3, #2
 800802c:	d901      	bls.n	8008032 <HAL_RCC_OscConfig+0x5de>
        {
          return HAL_TIMEOUT;
 800802e:	2303      	movs	r3, #3
 8008030:	e122      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 8008032:	4b69      	ldr	r3, [pc, #420]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008034:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8008038:	f003 0302 	and.w	r3, r3, #2
 800803c:	2b00      	cmp	r3, #0
 800803e:	d0ef      	beq.n	8008020 <HAL_RCC_OscConfig+0x5cc>
 8008040:	e01b      	b.n	800807a <HAL_RCC_OscConfig+0x626>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 8008042:	4b65      	ldr	r3, [pc, #404]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008044:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8008048:	4a63      	ldr	r2, [pc, #396]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 800804a:	f023 0301 	bic.w	r3, r3, #1
 800804e:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8008052:	f7fd fe31 	bl	8005cb8 <HAL_GetTick>
 8008056:	6138      	str	r0, [r7, #16]

      /* Wait till HSI48 is disabled */
      while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 8008058:	e008      	b.n	800806c <HAL_RCC_OscConfig+0x618>
      {
        if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 800805a:	f7fd fe2d 	bl	8005cb8 <HAL_GetTick>
 800805e:	4602      	mov	r2, r0
 8008060:	693b      	ldr	r3, [r7, #16]
 8008062:	1ad3      	subs	r3, r2, r3
 8008064:	2b02      	cmp	r3, #2
 8008066:	d901      	bls.n	800806c <HAL_RCC_OscConfig+0x618>
        {
          return HAL_TIMEOUT;
 8008068:	2303      	movs	r3, #3
 800806a:	e105      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 800806c:	4b5a      	ldr	r3, [pc, #360]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 800806e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8008072:	f003 0302 	and.w	r3, r3, #2
 8008076:	2b00      	cmp	r3, #0
 8008078:	d1ef      	bne.n	800805a <HAL_RCC_OscConfig+0x606>
#endif /* RCC_HSI48_SUPPORT */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));

  if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800807e:	2b00      	cmp	r3, #0
 8008080:	f000 80f9 	beq.w	8008276 <HAL_RCC_OscConfig+0x822>
  {
    /* PLL On ? */
    if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008088:	2b02      	cmp	r3, #2
 800808a:	f040 80cf 	bne.w	800822c <HAL_RCC_OscConfig+0x7d8>
#endif /* RCC_PLLP_SUPPORT */
      assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
      assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

      /* Do nothing if PLL configuration is the unchanged */
      pll_config = RCC->PLLCFGR;
 800808e:	4b52      	ldr	r3, [pc, #328]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008090:	68db      	ldr	r3, [r3, #12]
 8008092:	617b      	str	r3, [r7, #20]
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8008094:	697b      	ldr	r3, [r7, #20]
 8008096:	f003 0203 	and.w	r2, r3, #3
 800809a:	687b      	ldr	r3, [r7, #4]
 800809c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800809e:	429a      	cmp	r2, r3
 80080a0:	d12c      	bne.n	80080fc <HAL_RCC_OscConfig+0x6a8>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 80080a2:	697b      	ldr	r3, [r7, #20]
 80080a4:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80080ac:	3b01      	subs	r3, #1
 80080ae:	011b      	lsls	r3, r3, #4
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80080b0:	429a      	cmp	r2, r3
 80080b2:	d123      	bne.n	80080fc <HAL_RCC_OscConfig+0x6a8>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80080b4:	697b      	ldr	r3, [r7, #20]
 80080b6:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 80080ba:	687b      	ldr	r3, [r7, #4]
 80080bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80080be:	021b      	lsls	r3, r3, #8
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 80080c0:	429a      	cmp	r2, r3
 80080c2:	d11b      	bne.n	80080fc <HAL_RCC_OscConfig+0x6a8>
#if defined(RCC_PLLP_SUPPORT)
#if defined(RCC_PLLP_DIV_2_31_SUPPORT)
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLPDIV) != (RCC_OscInitStruct->PLL.PLLP << RCC_PLLCFGR_PLLPDIV_Pos)) ||
 80080c4:	697b      	ldr	r3, [r7, #20]
 80080c6:	f003 4278 	and.w	r2, r3, #4160749568	; 0xf8000000
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80080ce:	06db      	lsls	r3, r3, #27
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80080d0:	429a      	cmp	r2, r3
 80080d2:	d113      	bne.n	80080fc <HAL_RCC_OscConfig+0x6a8>
#else
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DIV7) ? 0U : 1U)) ||
#endif
#endif
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 80080d4:	697b      	ldr	r3, [r7, #20]
 80080d6:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 80080da:	687b      	ldr	r3, [r7, #4]
 80080dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80080de:	085b      	lsrs	r3, r3, #1
 80080e0:	3b01      	subs	r3, #1
 80080e2:	055b      	lsls	r3, r3, #21
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLPDIV) != (RCC_OscInitStruct->PLL.PLLP << RCC_PLLCFGR_PLLPDIV_Pos)) ||
 80080e4:	429a      	cmp	r2, r3
 80080e6:	d109      	bne.n	80080fc <HAL_RCC_OscConfig+0x6a8>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U) << RCC_PLLCFGR_PLLR_Pos)))
 80080e8:	697b      	ldr	r3, [r7, #20]
 80080ea:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 80080ee:	687b      	ldr	r3, [r7, #4]
 80080f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80080f2:	085b      	lsrs	r3, r3, #1
 80080f4:	3b01      	subs	r3, #1
 80080f6:	065b      	lsls	r3, r3, #25
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 80080f8:	429a      	cmp	r2, r3
 80080fa:	d071      	beq.n	80081e0 <HAL_RCC_OscConfig+0x78c>
      {
        /* Check if the PLL is used as system clock or not */
        if(sysclk_source != RCC_CFGR_SWS_PLL)
 80080fc:	69bb      	ldr	r3, [r7, #24]
 80080fe:	2b0c      	cmp	r3, #12
 8008100:	d068      	beq.n	80081d4 <HAL_RCC_OscConfig+0x780>
        {
#if defined(RCC_PLLSAI1_SUPPORT) || defined(RCC_PLLSAI2_SUPPORT)
          /* Check if main PLL can be updated */
          /* Not possible if the source is shared by other enabled PLLSAIx */
          if((READ_BIT(RCC->CR, RCC_CR_PLLSAI1ON) != 0U)
 8008102:	4b35      	ldr	r3, [pc, #212]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008104:	681b      	ldr	r3, [r3, #0]
 8008106:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800810a:	2b00      	cmp	r3, #0
 800810c:	d105      	bne.n	800811a <HAL_RCC_OscConfig+0x6c6>
#if defined(RCC_PLLSAI2_SUPPORT)
             || (READ_BIT(RCC->CR, RCC_CR_PLLSAI2ON) != 0U)
 800810e:	4b32      	ldr	r3, [pc, #200]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008110:	681b      	ldr	r3, [r3, #0]
 8008112:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008116:	2b00      	cmp	r3, #0
 8008118:	d001      	beq.n	800811e <HAL_RCC_OscConfig+0x6ca>
#endif
            )
          {
            return HAL_ERROR;
 800811a:	2301      	movs	r3, #1
 800811c:	e0ac      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
          }
          else
#endif /* RCC_PLLSAI1_SUPPORT || RCC_PLLSAI2_SUPPORT */
          {
            /* Disable the main PLL. */
            __HAL_RCC_PLL_DISABLE();
 800811e:	4b2e      	ldr	r3, [pc, #184]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008120:	681b      	ldr	r3, [r3, #0]
 8008122:	4a2d      	ldr	r2, [pc, #180]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008124:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8008128:	6013      	str	r3, [r2, #0]

            /* Get Start Tick*/
            tickstart = HAL_GetTick();
 800812a:	f7fd fdc5 	bl	8005cb8 <HAL_GetTick>
 800812e:	6138      	str	r0, [r7, #16]

            /* Wait till PLL is ready */
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8008130:	e008      	b.n	8008144 <HAL_RCC_OscConfig+0x6f0>
            {
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8008132:	f7fd fdc1 	bl	8005cb8 <HAL_GetTick>
 8008136:	4602      	mov	r2, r0
 8008138:	693b      	ldr	r3, [r7, #16]
 800813a:	1ad3      	subs	r3, r2, r3
 800813c:	2b02      	cmp	r3, #2
 800813e:	d901      	bls.n	8008144 <HAL_RCC_OscConfig+0x6f0>
              {
                return HAL_TIMEOUT;
 8008140:	2303      	movs	r3, #3
 8008142:	e099      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8008144:	4b24      	ldr	r3, [pc, #144]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008146:	681b      	ldr	r3, [r3, #0]
 8008148:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800814c:	2b00      	cmp	r3, #0
 800814e:	d1f0      	bne.n	8008132 <HAL_RCC_OscConfig+0x6de>
              }
            }

            /* Configure the main PLL clock source, multiplication and division factors. */
#if defined(RCC_PLLP_SUPPORT)
            __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8008150:	4b21      	ldr	r3, [pc, #132]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008152:	68da      	ldr	r2, [r3, #12]
 8008154:	4b21      	ldr	r3, [pc, #132]	; (80081dc <HAL_RCC_OscConfig+0x788>)
 8008156:	4013      	ands	r3, r2
 8008158:	687a      	ldr	r2, [r7, #4]
 800815a:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800815c:	687a      	ldr	r2, [r7, #4]
 800815e:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8008160:	3a01      	subs	r2, #1
 8008162:	0112      	lsls	r2, r2, #4
 8008164:	4311      	orrs	r1, r2
 8008166:	687a      	ldr	r2, [r7, #4]
 8008168:	6b52      	ldr	r2, [r2, #52]	; 0x34
 800816a:	0212      	lsls	r2, r2, #8
 800816c:	4311      	orrs	r1, r2
 800816e:	687a      	ldr	r2, [r7, #4]
 8008170:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8008172:	0852      	lsrs	r2, r2, #1
 8008174:	3a01      	subs	r2, #1
 8008176:	0552      	lsls	r2, r2, #21
 8008178:	4311      	orrs	r1, r2
 800817a:	687a      	ldr	r2, [r7, #4]
 800817c:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800817e:	0852      	lsrs	r2, r2, #1
 8008180:	3a01      	subs	r2, #1
 8008182:	0652      	lsls	r2, r2, #25
 8008184:	4311      	orrs	r1, r2
 8008186:	687a      	ldr	r2, [r7, #4]
 8008188:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800818a:	06d2      	lsls	r2, r2, #27
 800818c:	430a      	orrs	r2, r1
 800818e:	4912      	ldr	r1, [pc, #72]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008190:	4313      	orrs	r3, r2
 8008192:	60cb      	str	r3, [r1, #12]
                                 RCC_OscInitStruct->PLL.PLLQ,
                                 RCC_OscInitStruct->PLL.PLLR);
#endif

            /* Enable the main PLL. */
            __HAL_RCC_PLL_ENABLE();
 8008194:	4b10      	ldr	r3, [pc, #64]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 8008196:	681b      	ldr	r3, [r3, #0]
 8008198:	4a0f      	ldr	r2, [pc, #60]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 800819a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800819e:	6013      	str	r3, [r2, #0]

            /* Enable PLL System Clock output. */
            __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 80081a0:	4b0d      	ldr	r3, [pc, #52]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 80081a2:	68db      	ldr	r3, [r3, #12]
 80081a4:	4a0c      	ldr	r2, [pc, #48]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 80081a6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80081aa:	60d3      	str	r3, [r2, #12]

            /* Get Start Tick*/
            tickstart = HAL_GetTick();
 80081ac:	f7fd fd84 	bl	8005cb8 <HAL_GetTick>
 80081b0:	6138      	str	r0, [r7, #16]

            /* Wait till PLL is ready */
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 80081b2:	e008      	b.n	80081c6 <HAL_RCC_OscConfig+0x772>
            {
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80081b4:	f7fd fd80 	bl	8005cb8 <HAL_GetTick>
 80081b8:	4602      	mov	r2, r0
 80081ba:	693b      	ldr	r3, [r7, #16]
 80081bc:	1ad3      	subs	r3, r2, r3
 80081be:	2b02      	cmp	r3, #2
 80081c0:	d901      	bls.n	80081c6 <HAL_RCC_OscConfig+0x772>
              {
                return HAL_TIMEOUT;
 80081c2:	2303      	movs	r3, #3
 80081c4:	e058      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 80081c6:	4b04      	ldr	r3, [pc, #16]	; (80081d8 <HAL_RCC_OscConfig+0x784>)
 80081c8:	681b      	ldr	r3, [r3, #0]
 80081ca:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80081ce:	2b00      	cmp	r3, #0
 80081d0:	d0f0      	beq.n	80081b4 <HAL_RCC_OscConfig+0x760>
        if(sysclk_source != RCC_CFGR_SWS_PLL)
 80081d2:	e050      	b.n	8008276 <HAL_RCC_OscConfig+0x822>
          }
        }
        else
        {
          /* PLL is already used as System core clock */
          return HAL_ERROR;
 80081d4:	2301      	movs	r3, #1
 80081d6:	e04f      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
 80081d8:	40021000 	.word	0x40021000
 80081dc:	019d800c 	.word	0x019d800c
      }
      else
      {
        /* PLL configuration is unchanged */
        /* Re-enable PLL if it was disabled (ie. low power mode) */
        if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 80081e0:	4b27      	ldr	r3, [pc, #156]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 80081e2:	681b      	ldr	r3, [r3, #0]
 80081e4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80081e8:	2b00      	cmp	r3, #0
 80081ea:	d144      	bne.n	8008276 <HAL_RCC_OscConfig+0x822>
        {
          /* Enable the main PLL. */
          __HAL_RCC_PLL_ENABLE();
 80081ec:	4b24      	ldr	r3, [pc, #144]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 80081ee:	681b      	ldr	r3, [r3, #0]
 80081f0:	4a23      	ldr	r2, [pc, #140]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 80081f2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80081f6:	6013      	str	r3, [r2, #0]

          /* Enable PLL System Clock output. */
          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 80081f8:	4b21      	ldr	r3, [pc, #132]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 80081fa:	68db      	ldr	r3, [r3, #12]
 80081fc:	4a20      	ldr	r2, [pc, #128]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 80081fe:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8008202:	60d3      	str	r3, [r2, #12]

          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 8008204:	f7fd fd58 	bl	8005cb8 <HAL_GetTick>
 8008208:	6138      	str	r0, [r7, #16]

          /* Wait till PLL is ready */
          while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 800820a:	e008      	b.n	800821e <HAL_RCC_OscConfig+0x7ca>
          {
            if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800820c:	f7fd fd54 	bl	8005cb8 <HAL_GetTick>
 8008210:	4602      	mov	r2, r0
 8008212:	693b      	ldr	r3, [r7, #16]
 8008214:	1ad3      	subs	r3, r2, r3
 8008216:	2b02      	cmp	r3, #2
 8008218:	d901      	bls.n	800821e <HAL_RCC_OscConfig+0x7ca>
            {
              return HAL_TIMEOUT;
 800821a:	2303      	movs	r3, #3
 800821c:	e02c      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
          while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 800821e:	4b18      	ldr	r3, [pc, #96]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 8008220:	681b      	ldr	r3, [r3, #0]
 8008222:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008226:	2b00      	cmp	r3, #0
 8008228:	d0f0      	beq.n	800820c <HAL_RCC_OscConfig+0x7b8>
 800822a:	e024      	b.n	8008276 <HAL_RCC_OscConfig+0x822>
      }
    }
    else
    {
      /* Check that PLL is not used as system clock or not */
      if(sysclk_source != RCC_CFGR_SWS_PLL)
 800822c:	69bb      	ldr	r3, [r7, #24]
 800822e:	2b0c      	cmp	r3, #12
 8008230:	d01f      	beq.n	8008272 <HAL_RCC_OscConfig+0x81e>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8008232:	4b13      	ldr	r3, [pc, #76]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 8008234:	681b      	ldr	r3, [r3, #0]
 8008236:	4a12      	ldr	r2, [pc, #72]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 8008238:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800823c:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800823e:	f7fd fd3b 	bl	8005cb8 <HAL_GetTick>
 8008242:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8008244:	e008      	b.n	8008258 <HAL_RCC_OscConfig+0x804>
        {
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8008246:	f7fd fd37 	bl	8005cb8 <HAL_GetTick>
 800824a:	4602      	mov	r2, r0
 800824c:	693b      	ldr	r3, [r7, #16]
 800824e:	1ad3      	subs	r3, r2, r3
 8008250:	2b02      	cmp	r3, #2
 8008252:	d901      	bls.n	8008258 <HAL_RCC_OscConfig+0x804>
          {
            return HAL_TIMEOUT;
 8008254:	2303      	movs	r3, #3
 8008256:	e00f      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8008258:	4b09      	ldr	r3, [pc, #36]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 800825a:	681b      	ldr	r3, [r3, #0]
 800825c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008260:	2b00      	cmp	r3, #0
 8008262:	d1f0      	bne.n	8008246 <HAL_RCC_OscConfig+0x7f2>
          }
        }
        /* Unselect main PLL clock source and disable main PLL outputs to save power */
#if defined(RCC_PLLSAI2_SUPPORT)
        RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
 8008264:	4b06      	ldr	r3, [pc, #24]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 8008266:	68da      	ldr	r2, [r3, #12]
 8008268:	4905      	ldr	r1, [pc, #20]	; (8008280 <HAL_RCC_OscConfig+0x82c>)
 800826a:	4b06      	ldr	r3, [pc, #24]	; (8008284 <HAL_RCC_OscConfig+0x830>)
 800826c:	4013      	ands	r3, r2
 800826e:	60cb      	str	r3, [r1, #12]
 8008270:	e001      	b.n	8008276 <HAL_RCC_OscConfig+0x822>
#endif /* RCC_PLLSAI2_SUPPORT */
      }
      else
      {
        /* PLL is already used as System core clock */
        return HAL_ERROR;
 8008272:	2301      	movs	r3, #1
 8008274:	e000      	b.n	8008278 <HAL_RCC_OscConfig+0x824>
      }
    }
  }
  return HAL_OK;
 8008276:	2300      	movs	r3, #0
}
 8008278:	4618      	mov	r0, r3
 800827a:	3720      	adds	r7, #32
 800827c:	46bd      	mov	sp, r7
 800827e:	bd80      	pop	{r7, pc}
 8008280:	40021000 	.word	0x40021000
 8008284:	feeefffc 	.word	0xfeeefffc

08008288 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8008288:	b580      	push	{r7, lr}
 800828a:	b086      	sub	sp, #24
 800828c:	af00      	add	r7, sp, #0
 800828e:	6078      	str	r0, [r7, #4]
 8008290:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
#if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
    defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) || defined(STM32L4S7xx) || defined(STM32L4S9xx)
  uint32_t hpre = RCC_SYSCLK_DIV1;
 8008292:	2300      	movs	r3, #0
 8008294:	617b      	str	r3, [r7, #20]
#endif
  HAL_StatusTypeDef status;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8008296:	687b      	ldr	r3, [r7, #4]
 8008298:	2b00      	cmp	r3, #0
 800829a:	d101      	bne.n	80082a0 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 800829c:	2301      	movs	r3, #1
 800829e:	e11d      	b.n	80084dc <HAL_RCC_ClockConfig+0x254>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80082a0:	4b90      	ldr	r3, [pc, #576]	; (80084e4 <HAL_RCC_ClockConfig+0x25c>)
 80082a2:	681b      	ldr	r3, [r3, #0]
 80082a4:	f003 030f 	and.w	r3, r3, #15
 80082a8:	683a      	ldr	r2, [r7, #0]
 80082aa:	429a      	cmp	r2, r3
 80082ac:	d910      	bls.n	80082d0 <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80082ae:	4b8d      	ldr	r3, [pc, #564]	; (80084e4 <HAL_RCC_ClockConfig+0x25c>)
 80082b0:	681b      	ldr	r3, [r3, #0]
 80082b2:	f023 020f 	bic.w	r2, r3, #15
 80082b6:	498b      	ldr	r1, [pc, #556]	; (80084e4 <HAL_RCC_ClockConfig+0x25c>)
 80082b8:	683b      	ldr	r3, [r7, #0]
 80082ba:	4313      	orrs	r3, r2
 80082bc:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80082be:	4b89      	ldr	r3, [pc, #548]	; (80084e4 <HAL_RCC_ClockConfig+0x25c>)
 80082c0:	681b      	ldr	r3, [r3, #0]
 80082c2:	f003 030f 	and.w	r3, r3, #15
 80082c6:	683a      	ldr	r2, [r7, #0]
 80082c8:	429a      	cmp	r2, r3
 80082ca:	d001      	beq.n	80082d0 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 80082cc:	2301      	movs	r3, #1
 80082ce:	e105      	b.n	80084dc <HAL_RCC_ClockConfig+0x254>
    }
  }

  /*----------------- HCLK Configuration prior to SYSCLK----------------------*/
  /* Apply higher HCLK prescaler request here to ensure CPU clock is not of of spec when SYSCLK is increased */
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	681b      	ldr	r3, [r3, #0]
 80082d4:	f003 0302 	and.w	r3, r3, #2
 80082d8:	2b00      	cmp	r3, #0
 80082da:	d010      	beq.n	80082fe <HAL_RCC_ClockConfig+0x76>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));

    if(RCC_ClkInitStruct->AHBCLKDivider > READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	689a      	ldr	r2, [r3, #8]
 80082e0:	4b81      	ldr	r3, [pc, #516]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80082e2:	689b      	ldr	r3, [r3, #8]
 80082e4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80082e8:	429a      	cmp	r2, r3
 80082ea:	d908      	bls.n	80082fe <HAL_RCC_ClockConfig+0x76>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80082ec:	4b7e      	ldr	r3, [pc, #504]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80082ee:	689b      	ldr	r3, [r3, #8]
 80082f0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	689b      	ldr	r3, [r3, #8]
 80082f8:	497b      	ldr	r1, [pc, #492]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80082fa:	4313      	orrs	r3, r2
 80082fc:	608b      	str	r3, [r1, #8]
    }
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	681b      	ldr	r3, [r3, #0]
 8008302:	f003 0301 	and.w	r3, r3, #1
 8008306:	2b00      	cmp	r3, #0
 8008308:	d079      	beq.n	80083fe <HAL_RCC_ClockConfig+0x176>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* PLL is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800830a:	687b      	ldr	r3, [r7, #4]
 800830c:	685b      	ldr	r3, [r3, #4]
 800830e:	2b03      	cmp	r3, #3
 8008310:	d11e      	bne.n	8008350 <HAL_RCC_ClockConfig+0xc8>
    {
      /* Check the PLL ready flag */
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8008312:	4b75      	ldr	r3, [pc, #468]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 8008314:	681b      	ldr	r3, [r3, #0]
 8008316:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800831a:	2b00      	cmp	r3, #0
 800831c:	d101      	bne.n	8008322 <HAL_RCC_ClockConfig+0x9a>
      {
        return HAL_ERROR;
 800831e:	2301      	movs	r3, #1
 8008320:	e0dc      	b.n	80084dc <HAL_RCC_ClockConfig+0x254>
      }
#if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
    defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) || defined(STM32L4S7xx) || defined(STM32L4S9xx)
      /* Undershoot management when selection PLL as SYSCLK source and frequency above 80Mhz */
      /* Compute target PLL output frequency */
      if(RCC_GetSysClockFreqFromPLLSource() > 80000000U)
 8008322:	f000 fa09 	bl	8008738 <RCC_GetSysClockFreqFromPLLSource>
 8008326:	4603      	mov	r3, r0
 8008328:	4a70      	ldr	r2, [pc, #448]	; (80084ec <HAL_RCC_ClockConfig+0x264>)
 800832a:	4293      	cmp	r3, r2
 800832c:	d946      	bls.n	80083bc <HAL_RCC_ClockConfig+0x134>
      {
        /* If lowest HCLK prescaler, apply intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
        if(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)
 800832e:	4b6e      	ldr	r3, [pc, #440]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 8008330:	689b      	ldr	r3, [r3, #8]
 8008332:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8008336:	2b00      	cmp	r3, #0
 8008338:	d140      	bne.n	80083bc <HAL_RCC_ClockConfig+0x134>
        {
          MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 800833a:	4b6b      	ldr	r3, [pc, #428]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 800833c:	689b      	ldr	r3, [r3, #8]
 800833e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008342:	4a69      	ldr	r2, [pc, #420]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 8008344:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008348:	6093      	str	r3, [r2, #8]
          hpre = RCC_SYSCLK_DIV2;
 800834a:	2380      	movs	r3, #128	; 0x80
 800834c:	617b      	str	r3, [r7, #20]
 800834e:	e035      	b.n	80083bc <HAL_RCC_ClockConfig+0x134>
#endif
    }
    else
    {
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008350:	687b      	ldr	r3, [r7, #4]
 8008352:	685b      	ldr	r3, [r3, #4]
 8008354:	2b02      	cmp	r3, #2
 8008356:	d107      	bne.n	8008368 <HAL_RCC_ClockConfig+0xe0>
      {
        /* Check the HSE ready flag */
        if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8008358:	4b63      	ldr	r3, [pc, #396]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 800835a:	681b      	ldr	r3, [r3, #0]
 800835c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008360:	2b00      	cmp	r3, #0
 8008362:	d115      	bne.n	8008390 <HAL_RCC_ClockConfig+0x108>
        {
          return HAL_ERROR;
 8008364:	2301      	movs	r3, #1
 8008366:	e0b9      	b.n	80084dc <HAL_RCC_ClockConfig+0x254>
        }
      }
      /* MSI is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8008368:	687b      	ldr	r3, [r7, #4]
 800836a:	685b      	ldr	r3, [r3, #4]
 800836c:	2b00      	cmp	r3, #0
 800836e:	d107      	bne.n	8008380 <HAL_RCC_ClockConfig+0xf8>
      {
        /* Check the MSI ready flag */
        if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 8008370:	4b5d      	ldr	r3, [pc, #372]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 8008372:	681b      	ldr	r3, [r3, #0]
 8008374:	f003 0302 	and.w	r3, r3, #2
 8008378:	2b00      	cmp	r3, #0
 800837a:	d109      	bne.n	8008390 <HAL_RCC_ClockConfig+0x108>
        {
          return HAL_ERROR;
 800837c:	2301      	movs	r3, #1
 800837e:	e0ad      	b.n	80084dc <HAL_RCC_ClockConfig+0x254>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8008380:	4b59      	ldr	r3, [pc, #356]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 8008382:	681b      	ldr	r3, [r3, #0]
 8008384:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8008388:	2b00      	cmp	r3, #0
 800838a:	d101      	bne.n	8008390 <HAL_RCC_ClockConfig+0x108>
        {
          return HAL_ERROR;
 800838c:	2301      	movs	r3, #1
 800838e:	e0a5      	b.n	80084dc <HAL_RCC_ClockConfig+0x254>
        }
      }
#if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
    defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) || defined(STM32L4S7xx) || defined(STM32L4S9xx)
      /* Overshoot management when going down from PLL as SYSCLK source and frequency above 80Mhz */
      if(HAL_RCC_GetSysClockFreq() > 80000000U)
 8008390:	f000 f8b4 	bl	80084fc <HAL_RCC_GetSysClockFreq>
 8008394:	4603      	mov	r3, r0
 8008396:	4a55      	ldr	r2, [pc, #340]	; (80084ec <HAL_RCC_ClockConfig+0x264>)
 8008398:	4293      	cmp	r3, r2
 800839a:	d90f      	bls.n	80083bc <HAL_RCC_ClockConfig+0x134>
      {
        /* If lowest HCLK prescaler, apply intermediate step with HCLK prescaler 2 necessary before to go under 80Mhz */
        if(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)
 800839c:	4b52      	ldr	r3, [pc, #328]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 800839e:	689b      	ldr	r3, [r3, #8]
 80083a0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80083a4:	2b00      	cmp	r3, #0
 80083a6:	d109      	bne.n	80083bc <HAL_RCC_ClockConfig+0x134>
        {
          MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 80083a8:	4b4f      	ldr	r3, [pc, #316]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80083aa:	689b      	ldr	r3, [r3, #8]
 80083ac:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80083b0:	4a4d      	ldr	r2, [pc, #308]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80083b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80083b6:	6093      	str	r3, [r2, #8]
          hpre = RCC_SYSCLK_DIV2;
 80083b8:	2380      	movs	r3, #128	; 0x80
 80083ba:	617b      	str	r3, [r7, #20]
      }
#endif

    }

    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80083bc:	4b4a      	ldr	r3, [pc, #296]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80083be:	689b      	ldr	r3, [r3, #8]
 80083c0:	f023 0203 	bic.w	r2, r3, #3
 80083c4:	687b      	ldr	r3, [r7, #4]
 80083c6:	685b      	ldr	r3, [r3, #4]
 80083c8:	4947      	ldr	r1, [pc, #284]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80083ca:	4313      	orrs	r3, r2
 80083cc:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80083ce:	f7fd fc73 	bl	8005cb8 <HAL_GetTick>
 80083d2:	6138      	str	r0, [r7, #16]

    while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80083d4:	e00a      	b.n	80083ec <HAL_RCC_ClockConfig+0x164>
    {
      if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80083d6:	f7fd fc6f 	bl	8005cb8 <HAL_GetTick>
 80083da:	4602      	mov	r2, r0
 80083dc:	693b      	ldr	r3, [r7, #16]
 80083de:	1ad3      	subs	r3, r2, r3
 80083e0:	f241 3288 	movw	r2, #5000	; 0x1388
 80083e4:	4293      	cmp	r3, r2
 80083e6:	d901      	bls.n	80083ec <HAL_RCC_ClockConfig+0x164>
      {
        return HAL_TIMEOUT;
 80083e8:	2303      	movs	r3, #3
 80083ea:	e077      	b.n	80084dc <HAL_RCC_ClockConfig+0x254>
    while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80083ec:	4b3e      	ldr	r3, [pc, #248]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80083ee:	689b      	ldr	r3, [r3, #8]
 80083f0:	f003 020c 	and.w	r2, r3, #12
 80083f4:	687b      	ldr	r3, [r7, #4]
 80083f6:	685b      	ldr	r3, [r3, #4]
 80083f8:	009b      	lsls	r3, r3, #2
 80083fa:	429a      	cmp	r2, r3
 80083fc:	d1eb      	bne.n	80083d6 <HAL_RCC_ClockConfig+0x14e>
  }

#if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
    defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) || defined(STM32L4S7xx) || defined(STM32L4S9xx)
  /* Is intermediate HCLK prescaler 2 applied internally, resume with HCLK prescaler 1 */
  if(hpre == RCC_SYSCLK_DIV2)
 80083fe:	697b      	ldr	r3, [r7, #20]
 8008400:	2b80      	cmp	r3, #128	; 0x80
 8008402:	d105      	bne.n	8008410 <HAL_RCC_ClockConfig+0x188>
  {
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
 8008404:	4b38      	ldr	r3, [pc, #224]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 8008406:	689b      	ldr	r3, [r3, #8]
 8008408:	4a37      	ldr	r2, [pc, #220]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 800840a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800840e:	6093      	str	r3, [r2, #8]
  }
#endif

  /*----------------- HCLK Configuration after SYSCLK-------------------------*/
  /* Apply lower HCLK prescaler request here to ensure CPU clock is not of of spec when SYSCLK is set */
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	681b      	ldr	r3, [r3, #0]
 8008414:	f003 0302 	and.w	r3, r3, #2
 8008418:	2b00      	cmp	r3, #0
 800841a:	d010      	beq.n	800843e <HAL_RCC_ClockConfig+0x1b6>
  {
    if(RCC_ClkInitStruct->AHBCLKDivider < READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 800841c:	687b      	ldr	r3, [r7, #4]
 800841e:	689a      	ldr	r2, [r3, #8]
 8008420:	4b31      	ldr	r3, [pc, #196]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 8008422:	689b      	ldr	r3, [r3, #8]
 8008424:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8008428:	429a      	cmp	r2, r3
 800842a:	d208      	bcs.n	800843e <HAL_RCC_ClockConfig+0x1b6>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800842c:	4b2e      	ldr	r3, [pc, #184]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 800842e:	689b      	ldr	r3, [r3, #8]
 8008430:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	689b      	ldr	r3, [r3, #8]
 8008438:	492b      	ldr	r1, [pc, #172]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 800843a:	4313      	orrs	r3, r2
 800843c:	608b      	str	r3, [r1, #8]
    }
  }

  /* Allow decreasing of the number of wait states (because of lower CPU frequency expected) */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800843e:	4b29      	ldr	r3, [pc, #164]	; (80084e4 <HAL_RCC_ClockConfig+0x25c>)
 8008440:	681b      	ldr	r3, [r3, #0]
 8008442:	f003 030f 	and.w	r3, r3, #15
 8008446:	683a      	ldr	r2, [r7, #0]
 8008448:	429a      	cmp	r2, r3
 800844a:	d210      	bcs.n	800846e <HAL_RCC_ClockConfig+0x1e6>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800844c:	4b25      	ldr	r3, [pc, #148]	; (80084e4 <HAL_RCC_ClockConfig+0x25c>)
 800844e:	681b      	ldr	r3, [r3, #0]
 8008450:	f023 020f 	bic.w	r2, r3, #15
 8008454:	4923      	ldr	r1, [pc, #140]	; (80084e4 <HAL_RCC_ClockConfig+0x25c>)
 8008456:	683b      	ldr	r3, [r7, #0]
 8008458:	4313      	orrs	r3, r2
 800845a:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800845c:	4b21      	ldr	r3, [pc, #132]	; (80084e4 <HAL_RCC_ClockConfig+0x25c>)
 800845e:	681b      	ldr	r3, [r3, #0]
 8008460:	f003 030f 	and.w	r3, r3, #15
 8008464:	683a      	ldr	r2, [r7, #0]
 8008466:	429a      	cmp	r2, r3
 8008468:	d001      	beq.n	800846e <HAL_RCC_ClockConfig+0x1e6>
    {
      return HAL_ERROR;
 800846a:	2301      	movs	r3, #1
 800846c:	e036      	b.n	80084dc <HAL_RCC_ClockConfig+0x254>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	681b      	ldr	r3, [r3, #0]
 8008472:	f003 0304 	and.w	r3, r3, #4
 8008476:	2b00      	cmp	r3, #0
 8008478:	d008      	beq.n	800848c <HAL_RCC_ClockConfig+0x204>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800847a:	4b1b      	ldr	r3, [pc, #108]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 800847c:	689b      	ldr	r3, [r3, #8]
 800847e:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	68db      	ldr	r3, [r3, #12]
 8008486:	4918      	ldr	r1, [pc, #96]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 8008488:	4313      	orrs	r3, r2
 800848a:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	681b      	ldr	r3, [r3, #0]
 8008490:	f003 0308 	and.w	r3, r3, #8
 8008494:	2b00      	cmp	r3, #0
 8008496:	d009      	beq.n	80084ac <HAL_RCC_ClockConfig+0x224>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8008498:	4b13      	ldr	r3, [pc, #76]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 800849a:	689b      	ldr	r3, [r3, #8]
 800849c:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80084a0:	687b      	ldr	r3, [r7, #4]
 80084a2:	691b      	ldr	r3, [r3, #16]
 80084a4:	00db      	lsls	r3, r3, #3
 80084a6:	4910      	ldr	r1, [pc, #64]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80084a8:	4313      	orrs	r3, r2
 80084aa:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 80084ac:	f000 f826 	bl	80084fc <HAL_RCC_GetSysClockFreq>
 80084b0:	4602      	mov	r2, r0
 80084b2:	4b0d      	ldr	r3, [pc, #52]	; (80084e8 <HAL_RCC_ClockConfig+0x260>)
 80084b4:	689b      	ldr	r3, [r3, #8]
 80084b6:	091b      	lsrs	r3, r3, #4
 80084b8:	f003 030f 	and.w	r3, r3, #15
 80084bc:	490c      	ldr	r1, [pc, #48]	; (80084f0 <HAL_RCC_ClockConfig+0x268>)
 80084be:	5ccb      	ldrb	r3, [r1, r3]
 80084c0:	f003 031f 	and.w	r3, r3, #31
 80084c4:	fa22 f303 	lsr.w	r3, r2, r3
 80084c8:	4a0a      	ldr	r2, [pc, #40]	; (80084f4 <HAL_RCC_ClockConfig+0x26c>)
 80084ca:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(uwTickPrio);
 80084cc:	4b0a      	ldr	r3, [pc, #40]	; (80084f8 <HAL_RCC_ClockConfig+0x270>)
 80084ce:	681b      	ldr	r3, [r3, #0]
 80084d0:	4618      	mov	r0, r3
 80084d2:	f7fd fba1 	bl	8005c18 <HAL_InitTick>
 80084d6:	4603      	mov	r3, r0
 80084d8:	73fb      	strb	r3, [r7, #15]

  return status;
 80084da:	7bfb      	ldrb	r3, [r7, #15]
}
 80084dc:	4618      	mov	r0, r3
 80084de:	3718      	adds	r7, #24
 80084e0:	46bd      	mov	sp, r7
 80084e2:	bd80      	pop	{r7, pc}
 80084e4:	40022000 	.word	0x40022000
 80084e8:	40021000 	.word	0x40021000
 80084ec:	04c4b400 	.word	0x04c4b400
 80084f0:	0802b0a8 	.word	0x0802b0a8
 80084f4:	20000288 	.word	0x20000288
 80084f8:	20000298 	.word	0x20000298

080084fc <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80084fc:	b480      	push	{r7}
 80084fe:	b089      	sub	sp, #36	; 0x24
 8008500:	af00      	add	r7, sp, #0
  uint32_t msirange = 0U, sysclockfreq = 0U;
 8008502:	2300      	movs	r3, #0
 8008504:	61fb      	str	r3, [r7, #28]
 8008506:	2300      	movs	r3, #0
 8008508:	61bb      	str	r3, [r7, #24]
  uint32_t pllvco, pllsource, pllr, pllm;    /* no init needed */
  uint32_t sysclk_source, pll_oscsource;

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800850a:	4b3e      	ldr	r3, [pc, #248]	; (8008604 <HAL_RCC_GetSysClockFreq+0x108>)
 800850c:	689b      	ldr	r3, [r3, #8]
 800850e:	f003 030c 	and.w	r3, r3, #12
 8008512:	613b      	str	r3, [r7, #16]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8008514:	4b3b      	ldr	r3, [pc, #236]	; (8008604 <HAL_RCC_GetSysClockFreq+0x108>)
 8008516:	68db      	ldr	r3, [r3, #12]
 8008518:	f003 0303 	and.w	r3, r3, #3
 800851c:	60fb      	str	r3, [r7, #12]

  if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 800851e:	693b      	ldr	r3, [r7, #16]
 8008520:	2b00      	cmp	r3, #0
 8008522:	d005      	beq.n	8008530 <HAL_RCC_GetSysClockFreq+0x34>
 8008524:	693b      	ldr	r3, [r7, #16]
 8008526:	2b0c      	cmp	r3, #12
 8008528:	d121      	bne.n	800856e <HAL_RCC_GetSysClockFreq+0x72>
     ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 800852a:	68fb      	ldr	r3, [r7, #12]
 800852c:	2b01      	cmp	r3, #1
 800852e:	d11e      	bne.n	800856e <HAL_RCC_GetSysClockFreq+0x72>
  {
    /* MSI or PLL with MSI source used as system clock source */

    /* Get SYSCLK source */
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 8008530:	4b34      	ldr	r3, [pc, #208]	; (8008604 <HAL_RCC_GetSysClockFreq+0x108>)
 8008532:	681b      	ldr	r3, [r3, #0]
 8008534:	f003 0308 	and.w	r3, r3, #8
 8008538:	2b00      	cmp	r3, #0
 800853a:	d107      	bne.n	800854c <HAL_RCC_GetSysClockFreq+0x50>
    { /* MSISRANGE from RCC_CSR applies */
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 800853c:	4b31      	ldr	r3, [pc, #196]	; (8008604 <HAL_RCC_GetSysClockFreq+0x108>)
 800853e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008542:	0a1b      	lsrs	r3, r3, #8
 8008544:	f003 030f 	and.w	r3, r3, #15
 8008548:	61fb      	str	r3, [r7, #28]
 800854a:	e005      	b.n	8008558 <HAL_RCC_GetSysClockFreq+0x5c>
    }
    else
    { /* MSIRANGE from RCC_CR applies */
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 800854c:	4b2d      	ldr	r3, [pc, #180]	; (8008604 <HAL_RCC_GetSysClockFreq+0x108>)
 800854e:	681b      	ldr	r3, [r3, #0]
 8008550:	091b      	lsrs	r3, r3, #4
 8008552:	f003 030f 	and.w	r3, r3, #15
 8008556:	61fb      	str	r3, [r7, #28]
    }
    /*MSI frequency range in HZ*/
    msirange = MSIRangeTable[msirange];
 8008558:	4a2b      	ldr	r2, [pc, #172]	; (8008608 <HAL_RCC_GetSysClockFreq+0x10c>)
 800855a:	69fb      	ldr	r3, [r7, #28]
 800855c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008560:	61fb      	str	r3, [r7, #28]

    if(sysclk_source == RCC_CFGR_SWS_MSI)
 8008562:	693b      	ldr	r3, [r7, #16]
 8008564:	2b00      	cmp	r3, #0
 8008566:	d10d      	bne.n	8008584 <HAL_RCC_GetSysClockFreq+0x88>
    {
      /* MSI used as system clock source */
      sysclockfreq = msirange;
 8008568:	69fb      	ldr	r3, [r7, #28]
 800856a:	61bb      	str	r3, [r7, #24]
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 800856c:	e00a      	b.n	8008584 <HAL_RCC_GetSysClockFreq+0x88>
    }
  }
  else if(sysclk_source == RCC_CFGR_SWS_HSI)
 800856e:	693b      	ldr	r3, [r7, #16]
 8008570:	2b04      	cmp	r3, #4
 8008572:	d102      	bne.n	800857a <HAL_RCC_GetSysClockFreq+0x7e>
  {
    /* HSI used as system clock source */
    sysclockfreq = HSI_VALUE;
 8008574:	4b25      	ldr	r3, [pc, #148]	; (800860c <HAL_RCC_GetSysClockFreq+0x110>)
 8008576:	61bb      	str	r3, [r7, #24]
 8008578:	e004      	b.n	8008584 <HAL_RCC_GetSysClockFreq+0x88>
  }
  else if(sysclk_source == RCC_CFGR_SWS_HSE)
 800857a:	693b      	ldr	r3, [r7, #16]
 800857c:	2b08      	cmp	r3, #8
 800857e:	d101      	bne.n	8008584 <HAL_RCC_GetSysClockFreq+0x88>
  {
    /* HSE used as system clock source */
    sysclockfreq = HSE_VALUE;
 8008580:	4b23      	ldr	r3, [pc, #140]	; (8008610 <HAL_RCC_GetSysClockFreq+0x114>)
 8008582:	61bb      	str	r3, [r7, #24]
  else
  {
    /* unexpected case: sysclockfreq at 0 */
  }

  if(sysclk_source == RCC_CFGR_SWS_PLL)
 8008584:	693b      	ldr	r3, [r7, #16]
 8008586:	2b0c      	cmp	r3, #12
 8008588:	d134      	bne.n	80085f4 <HAL_RCC_GetSysClockFreq+0xf8>
    /* PLL used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE) * PLLN / PLLM
    SYSCLK = PLL_VCO / PLLR
    */
    pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 800858a:	4b1e      	ldr	r3, [pc, #120]	; (8008604 <HAL_RCC_GetSysClockFreq+0x108>)
 800858c:	68db      	ldr	r3, [r3, #12]
 800858e:	f003 0303 	and.w	r3, r3, #3
 8008592:	60bb      	str	r3, [r7, #8]

    switch (pllsource)
 8008594:	68bb      	ldr	r3, [r7, #8]
 8008596:	2b02      	cmp	r3, #2
 8008598:	d003      	beq.n	80085a2 <HAL_RCC_GetSysClockFreq+0xa6>
 800859a:	68bb      	ldr	r3, [r7, #8]
 800859c:	2b03      	cmp	r3, #3
 800859e:	d003      	beq.n	80085a8 <HAL_RCC_GetSysClockFreq+0xac>
 80085a0:	e005      	b.n	80085ae <HAL_RCC_GetSysClockFreq+0xb2>
    {
    case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
      pllvco = HSI_VALUE;
 80085a2:	4b1a      	ldr	r3, [pc, #104]	; (800860c <HAL_RCC_GetSysClockFreq+0x110>)
 80085a4:	617b      	str	r3, [r7, #20]
      break;
 80085a6:	e005      	b.n	80085b4 <HAL_RCC_GetSysClockFreq+0xb8>

    case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      pllvco = HSE_VALUE;
 80085a8:	4b19      	ldr	r3, [pc, #100]	; (8008610 <HAL_RCC_GetSysClockFreq+0x114>)
 80085aa:	617b      	str	r3, [r7, #20]
      break;
 80085ac:	e002      	b.n	80085b4 <HAL_RCC_GetSysClockFreq+0xb8>

    case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
    default:
      pllvco = msirange;
 80085ae:	69fb      	ldr	r3, [r7, #28]
 80085b0:	617b      	str	r3, [r7, #20]
      break;
 80085b2:	bf00      	nop
    }
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80085b4:	4b13      	ldr	r3, [pc, #76]	; (8008604 <HAL_RCC_GetSysClockFreq+0x108>)
 80085b6:	68db      	ldr	r3, [r3, #12]
 80085b8:	091b      	lsrs	r3, r3, #4
 80085ba:	f003 030f 	and.w	r3, r3, #15
 80085be:	3301      	adds	r3, #1
 80085c0:	607b      	str	r3, [r7, #4]
    pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 80085c2:	4b10      	ldr	r3, [pc, #64]	; (8008604 <HAL_RCC_GetSysClockFreq+0x108>)
 80085c4:	68db      	ldr	r3, [r3, #12]
 80085c6:	0a1b      	lsrs	r3, r3, #8
 80085c8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80085cc:	697a      	ldr	r2, [r7, #20]
 80085ce:	fb03 f202 	mul.w	r2, r3, r2
 80085d2:	687b      	ldr	r3, [r7, #4]
 80085d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80085d8:	617b      	str	r3, [r7, #20]
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 80085da:	4b0a      	ldr	r3, [pc, #40]	; (8008604 <HAL_RCC_GetSysClockFreq+0x108>)
 80085dc:	68db      	ldr	r3, [r3, #12]
 80085de:	0e5b      	lsrs	r3, r3, #25
 80085e0:	f003 0303 	and.w	r3, r3, #3
 80085e4:	3301      	adds	r3, #1
 80085e6:	005b      	lsls	r3, r3, #1
 80085e8:	603b      	str	r3, [r7, #0]
    sysclockfreq = pllvco / pllr;
 80085ea:	697a      	ldr	r2, [r7, #20]
 80085ec:	683b      	ldr	r3, [r7, #0]
 80085ee:	fbb2 f3f3 	udiv	r3, r2, r3
 80085f2:	61bb      	str	r3, [r7, #24]
  }

  return sysclockfreq;
 80085f4:	69bb      	ldr	r3, [r7, #24]
}
 80085f6:	4618      	mov	r0, r3
 80085f8:	3724      	adds	r7, #36	; 0x24
 80085fa:	46bd      	mov	sp, r7
 80085fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008600:	4770      	bx	lr
 8008602:	bf00      	nop
 8008604:	40021000 	.word	0x40021000
 8008608:	0802b0c0 	.word	0x0802b0c0
 800860c:	00f42400 	.word	0x00f42400
 8008610:	007a1200 	.word	0x007a1200

08008614 <HAL_RCC_GetHCLKFreq>:
  *
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency in Hz
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8008614:	b480      	push	{r7}
 8008616:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8008618:	4b03      	ldr	r3, [pc, #12]	; (8008628 <HAL_RCC_GetHCLKFreq+0x14>)
 800861a:	681b      	ldr	r3, [r3, #0]
}
 800861c:	4618      	mov	r0, r3
 800861e:	46bd      	mov	sp, r7
 8008620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008624:	4770      	bx	lr
 8008626:	bf00      	nop
 8008628:	20000288 	.word	0x20000288

0800862c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 800862c:	b580      	push	{r7, lr}
 800862e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos] & 0x1FU));
 8008630:	f7ff fff0 	bl	8008614 <HAL_RCC_GetHCLKFreq>
 8008634:	4602      	mov	r2, r0
 8008636:	4b06      	ldr	r3, [pc, #24]	; (8008650 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008638:	689b      	ldr	r3, [r3, #8]
 800863a:	0a1b      	lsrs	r3, r3, #8
 800863c:	f003 0307 	and.w	r3, r3, #7
 8008640:	4904      	ldr	r1, [pc, #16]	; (8008654 <HAL_RCC_GetPCLK1Freq+0x28>)
 8008642:	5ccb      	ldrb	r3, [r1, r3]
 8008644:	f003 031f 	and.w	r3, r3, #31
 8008648:	fa22 f303 	lsr.w	r3, r2, r3
}
 800864c:	4618      	mov	r0, r3
 800864e:	bd80      	pop	{r7, pc}
 8008650:	40021000 	.word	0x40021000
 8008654:	0802b0b8 	.word	0x0802b0b8

08008658 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8008658:	b580      	push	{r7, lr}
 800865a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos] & 0x1FU));
 800865c:	f7ff ffda 	bl	8008614 <HAL_RCC_GetHCLKFreq>
 8008660:	4602      	mov	r2, r0
 8008662:	4b06      	ldr	r3, [pc, #24]	; (800867c <HAL_RCC_GetPCLK2Freq+0x24>)
 8008664:	689b      	ldr	r3, [r3, #8]
 8008666:	0adb      	lsrs	r3, r3, #11
 8008668:	f003 0307 	and.w	r3, r3, #7
 800866c:	4904      	ldr	r1, [pc, #16]	; (8008680 <HAL_RCC_GetPCLK2Freq+0x28>)
 800866e:	5ccb      	ldrb	r3, [r1, r3]
 8008670:	f003 031f 	and.w	r3, r3, #31
 8008674:	fa22 f303 	lsr.w	r3, r2, r3
}
 8008678:	4618      	mov	r0, r3
 800867a:	bd80      	pop	{r7, pc}
 800867c:	40021000 	.word	0x40021000
 8008680:	0802b0b8 	.word	0x0802b0b8

08008684 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 8008684:	b580      	push	{r7, lr}
 8008686:	b086      	sub	sp, #24
 8008688:	af00      	add	r7, sp, #0
 800868a:	6078      	str	r0, [r7, #4]
  uint32_t vos;
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 800868c:	2300      	movs	r3, #0
 800868e:	613b      	str	r3, [r7, #16]

  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 8008690:	4b27      	ldr	r3, [pc, #156]	; (8008730 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8008692:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008694:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008698:	2b00      	cmp	r3, #0
 800869a:	d003      	beq.n	80086a4 <RCC_SetFlashLatencyFromMSIRange+0x20>
  {
    vos = HAL_PWREx_GetVoltageRange();
 800869c:	f7ff f906 	bl	80078ac <HAL_PWREx_GetVoltageRange>
 80086a0:	6178      	str	r0, [r7, #20]
 80086a2:	e014      	b.n	80086ce <RCC_SetFlashLatencyFromMSIRange+0x4a>
  }
  else
  {
    __HAL_RCC_PWR_CLK_ENABLE();
 80086a4:	4b22      	ldr	r3, [pc, #136]	; (8008730 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 80086a6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80086a8:	4a21      	ldr	r2, [pc, #132]	; (8008730 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 80086aa:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80086ae:	6593      	str	r3, [r2, #88]	; 0x58
 80086b0:	4b1f      	ldr	r3, [pc, #124]	; (8008730 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 80086b2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80086b4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80086b8:	60fb      	str	r3, [r7, #12]
 80086ba:	68fb      	ldr	r3, [r7, #12]
    vos = HAL_PWREx_GetVoltageRange();
 80086bc:	f7ff f8f6 	bl	80078ac <HAL_PWREx_GetVoltageRange>
 80086c0:	6178      	str	r0, [r7, #20]
    __HAL_RCC_PWR_CLK_DISABLE();
 80086c2:	4b1b      	ldr	r3, [pc, #108]	; (8008730 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 80086c4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80086c6:	4a1a      	ldr	r2, [pc, #104]	; (8008730 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 80086c8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80086cc:	6593      	str	r3, [r2, #88]	; 0x58
  }

  if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 80086ce:	697b      	ldr	r3, [r7, #20]
 80086d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80086d4:	d10b      	bne.n	80086ee <RCC_SetFlashLatencyFromMSIRange+0x6a>
  {
    if(msirange > RCC_MSIRANGE_8)
 80086d6:	687b      	ldr	r3, [r7, #4]
 80086d8:	2b80      	cmp	r3, #128	; 0x80
 80086da:	d913      	bls.n	8008704 <RCC_SetFlashLatencyFromMSIRange+0x80>
    {
      /* MSI > 16Mhz */
      if(msirange > RCC_MSIRANGE_10)
 80086dc:	687b      	ldr	r3, [r7, #4]
 80086de:	2ba0      	cmp	r3, #160	; 0xa0
 80086e0:	d902      	bls.n	80086e8 <RCC_SetFlashLatencyFromMSIRange+0x64>
      {
        /* MSI 48Mhz */
        latency = FLASH_LATENCY_2; /* 2WS */
 80086e2:	2302      	movs	r3, #2
 80086e4:	613b      	str	r3, [r7, #16]
 80086e6:	e00d      	b.n	8008704 <RCC_SetFlashLatencyFromMSIRange+0x80>
      }
      else
      {
        /* MSI 24Mhz or 32Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 80086e8:	2301      	movs	r3, #1
 80086ea:	613b      	str	r3, [r7, #16]
 80086ec:	e00a      	b.n	8008704 <RCC_SetFlashLatencyFromMSIRange+0x80>
  }
  else
  {
#if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
    defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) || defined(STM32L4S7xx) || defined(STM32L4S9xx)
    if(msirange >= RCC_MSIRANGE_8)
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	2b7f      	cmp	r3, #127	; 0x7f
 80086f2:	d902      	bls.n	80086fa <RCC_SetFlashLatencyFromMSIRange+0x76>
    {
      /* MSI >= 16Mhz */
      latency = FLASH_LATENCY_2; /* 2WS */
 80086f4:	2302      	movs	r3, #2
 80086f6:	613b      	str	r3, [r7, #16]
 80086f8:	e004      	b.n	8008704 <RCC_SetFlashLatencyFromMSIRange+0x80>
    }
    else
    {
      if(msirange == RCC_MSIRANGE_7)
 80086fa:	687b      	ldr	r3, [r7, #4]
 80086fc:	2b70      	cmp	r3, #112	; 0x70
 80086fe:	d101      	bne.n	8008704 <RCC_SetFlashLatencyFromMSIRange+0x80>
      {
        /* MSI 8Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 8008700:	2301      	movs	r3, #1
 8008702:	613b      	str	r3, [r7, #16]
      /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
    }
#endif
  }

  __HAL_FLASH_SET_LATENCY(latency);
 8008704:	4b0b      	ldr	r3, [pc, #44]	; (8008734 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 8008706:	681b      	ldr	r3, [r3, #0]
 8008708:	f023 020f 	bic.w	r2, r3, #15
 800870c:	4909      	ldr	r1, [pc, #36]	; (8008734 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 800870e:	693b      	ldr	r3, [r7, #16]
 8008710:	4313      	orrs	r3, r2
 8008712:	600b      	str	r3, [r1, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
     memory by reading the FLASH_ACR register */
  if(__HAL_FLASH_GET_LATENCY() != latency)
 8008714:	4b07      	ldr	r3, [pc, #28]	; (8008734 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 8008716:	681b      	ldr	r3, [r3, #0]
 8008718:	f003 030f 	and.w	r3, r3, #15
 800871c:	693a      	ldr	r2, [r7, #16]
 800871e:	429a      	cmp	r2, r3
 8008720:	d001      	beq.n	8008726 <RCC_SetFlashLatencyFromMSIRange+0xa2>
  {
    return HAL_ERROR;
 8008722:	2301      	movs	r3, #1
 8008724:	e000      	b.n	8008728 <RCC_SetFlashLatencyFromMSIRange+0xa4>
  }

  return HAL_OK;
 8008726:	2300      	movs	r3, #0
}
 8008728:	4618      	mov	r0, r3
 800872a:	3718      	adds	r7, #24
 800872c:	46bd      	mov	sp, r7
 800872e:	bd80      	pop	{r7, pc}
 8008730:	40021000 	.word	0x40021000
 8008734:	40022000 	.word	0x40022000

08008738 <RCC_GetSysClockFreqFromPLLSource>:
/**
  * @brief  Compute SYSCLK frequency based on PLL SYSCLK source.
  * @retval SYSCLK frequency
  */
static uint32_t RCC_GetSysClockFreqFromPLLSource(void)
{
 8008738:	b480      	push	{r7}
 800873a:	b087      	sub	sp, #28
 800873c:	af00      	add	r7, sp, #0
  uint32_t msirange, pllvco, pllsource, pllr, pllm, sysclockfreq;  /* no init needed */

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE) * PLLN / PLLM
     SYSCLK = PLL_VCO / PLLR
   */
  pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 800873e:	4b2d      	ldr	r3, [pc, #180]	; (80087f4 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8008740:	68db      	ldr	r3, [r3, #12]
 8008742:	f003 0303 	and.w	r3, r3, #3
 8008746:	60fb      	str	r3, [r7, #12]

  switch (pllsource)
 8008748:	68fb      	ldr	r3, [r7, #12]
 800874a:	2b03      	cmp	r3, #3
 800874c:	d00b      	beq.n	8008766 <RCC_GetSysClockFreqFromPLLSource+0x2e>
 800874e:	68fb      	ldr	r3, [r7, #12]
 8008750:	2b03      	cmp	r3, #3
 8008752:	d825      	bhi.n	80087a0 <RCC_GetSysClockFreqFromPLLSource+0x68>
 8008754:	68fb      	ldr	r3, [r7, #12]
 8008756:	2b01      	cmp	r3, #1
 8008758:	d008      	beq.n	800876c <RCC_GetSysClockFreqFromPLLSource+0x34>
 800875a:	68fb      	ldr	r3, [r7, #12]
 800875c:	2b02      	cmp	r3, #2
 800875e:	d11f      	bne.n	80087a0 <RCC_GetSysClockFreqFromPLLSource+0x68>
  {
  case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
    pllvco = HSI_VALUE;
 8008760:	4b25      	ldr	r3, [pc, #148]	; (80087f8 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8008762:	613b      	str	r3, [r7, #16]
    break;
 8008764:	e01f      	b.n	80087a6 <RCC_GetSysClockFreqFromPLLSource+0x6e>

  case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
    pllvco = HSE_VALUE;
 8008766:	4b25      	ldr	r3, [pc, #148]	; (80087fc <RCC_GetSysClockFreqFromPLLSource+0xc4>)
 8008768:	613b      	str	r3, [r7, #16]
    break;
 800876a:	e01c      	b.n	80087a6 <RCC_GetSysClockFreqFromPLLSource+0x6e>

  case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
    /* Get MSI range source */
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 800876c:	4b21      	ldr	r3, [pc, #132]	; (80087f4 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 800876e:	681b      	ldr	r3, [r3, #0]
 8008770:	f003 0308 	and.w	r3, r3, #8
 8008774:	2b00      	cmp	r3, #0
 8008776:	d107      	bne.n	8008788 <RCC_GetSysClockFreqFromPLLSource+0x50>
    { /* MSISRANGE from RCC_CSR applies */
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 8008778:	4b1e      	ldr	r3, [pc, #120]	; (80087f4 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 800877a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800877e:	0a1b      	lsrs	r3, r3, #8
 8008780:	f003 030f 	and.w	r3, r3, #15
 8008784:	617b      	str	r3, [r7, #20]
 8008786:	e005      	b.n	8008794 <RCC_GetSysClockFreqFromPLLSource+0x5c>
    }
    else
    { /* MSIRANGE from RCC_CR applies */
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 8008788:	4b1a      	ldr	r3, [pc, #104]	; (80087f4 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 800878a:	681b      	ldr	r3, [r3, #0]
 800878c:	091b      	lsrs	r3, r3, #4
 800878e:	f003 030f 	and.w	r3, r3, #15
 8008792:	617b      	str	r3, [r7, #20]
    }
    /*MSI frequency range in HZ*/
    pllvco = MSIRangeTable[msirange];
 8008794:	4a1a      	ldr	r2, [pc, #104]	; (8008800 <RCC_GetSysClockFreqFromPLLSource+0xc8>)
 8008796:	697b      	ldr	r3, [r7, #20]
 8008798:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800879c:	613b      	str	r3, [r7, #16]
    break;
 800879e:	e002      	b.n	80087a6 <RCC_GetSysClockFreqFromPLLSource+0x6e>
  default:
    /* unexpected */
    pllvco = 0;
 80087a0:	2300      	movs	r3, #0
 80087a2:	613b      	str	r3, [r7, #16]
    break;
 80087a4:	bf00      	nop
  }
  pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80087a6:	4b13      	ldr	r3, [pc, #76]	; (80087f4 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 80087a8:	68db      	ldr	r3, [r3, #12]
 80087aa:	091b      	lsrs	r3, r3, #4
 80087ac:	f003 030f 	and.w	r3, r3, #15
 80087b0:	3301      	adds	r3, #1
 80087b2:	60bb      	str	r3, [r7, #8]
  pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 80087b4:	4b0f      	ldr	r3, [pc, #60]	; (80087f4 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 80087b6:	68db      	ldr	r3, [r3, #12]
 80087b8:	0a1b      	lsrs	r3, r3, #8
 80087ba:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80087be:	693a      	ldr	r2, [r7, #16]
 80087c0:	fb03 f202 	mul.w	r2, r3, r2
 80087c4:	68bb      	ldr	r3, [r7, #8]
 80087c6:	fbb2 f3f3 	udiv	r3, r2, r3
 80087ca:	613b      	str	r3, [r7, #16]
  pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 80087cc:	4b09      	ldr	r3, [pc, #36]	; (80087f4 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 80087ce:	68db      	ldr	r3, [r3, #12]
 80087d0:	0e5b      	lsrs	r3, r3, #25
 80087d2:	f003 0303 	and.w	r3, r3, #3
 80087d6:	3301      	adds	r3, #1
 80087d8:	005b      	lsls	r3, r3, #1
 80087da:	607b      	str	r3, [r7, #4]
  sysclockfreq = pllvco / pllr;
 80087dc:	693a      	ldr	r2, [r7, #16]
 80087de:	687b      	ldr	r3, [r7, #4]
 80087e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80087e4:	603b      	str	r3, [r7, #0]

  return sysclockfreq;
 80087e6:	683b      	ldr	r3, [r7, #0]
}
 80087e8:	4618      	mov	r0, r3
 80087ea:	371c      	adds	r7, #28
 80087ec:	46bd      	mov	sp, r7
 80087ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087f2:	4770      	bx	lr
 80087f4:	40021000 	.word	0x40021000
 80087f8:	00f42400 	.word	0x00f42400
 80087fc:	007a1200 	.word	0x007a1200
 8008800:	0802b0c0 	.word	0x0802b0c0

08008804 <HAL_RCCEx_PeriphCLKConfig>:
  *         the RTC clock source: in this case the access to Backup domain is enabled.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8008804:	b580      	push	{r7, lr}
 8008806:	b086      	sub	sp, #24
 8008808:	af00      	add	r7, sp, #0
 800880a:	6078      	str	r0, [r7, #4]
  uint32_t tmpregister, tickstart;     /* no init needed */
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 800880c:	2300      	movs	r3, #0
 800880e:	74fb      	strb	r3, [r7, #19]
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8008810:	2300      	movs	r3, #0
 8008812:	74bb      	strb	r3, [r7, #18]
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

#if defined(SAI1)

  /*-------------------------- SAI1 clock source configuration ---------------------*/
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8008814:	687b      	ldr	r3, [r7, #4]
 8008816:	681b      	ldr	r3, [r3, #0]
 8008818:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800881c:	2b00      	cmp	r3, #0
 800881e:	d040      	beq.n	80088a2 <HAL_RCCEx_PeriphCLKConfig+0x9e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLK(PeriphClkInit->Sai1ClockSelection));

    switch(PeriphClkInit->Sai1ClockSelection)
 8008820:	687b      	ldr	r3, [r7, #4]
 8008822:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008824:	2b80      	cmp	r3, #128	; 0x80
 8008826:	d02a      	beq.n	800887e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8008828:	2b80      	cmp	r3, #128	; 0x80
 800882a:	d825      	bhi.n	8008878 <HAL_RCCEx_PeriphCLKConfig+0x74>
 800882c:	2b60      	cmp	r3, #96	; 0x60
 800882e:	d026      	beq.n	800887e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8008830:	2b60      	cmp	r3, #96	; 0x60
 8008832:	d821      	bhi.n	8008878 <HAL_RCCEx_PeriphCLKConfig+0x74>
 8008834:	2b40      	cmp	r3, #64	; 0x40
 8008836:	d006      	beq.n	8008846 <HAL_RCCEx_PeriphCLKConfig+0x42>
 8008838:	2b40      	cmp	r3, #64	; 0x40
 800883a:	d81d      	bhi.n	8008878 <HAL_RCCEx_PeriphCLKConfig+0x74>
 800883c:	2b00      	cmp	r3, #0
 800883e:	d009      	beq.n	8008854 <HAL_RCCEx_PeriphCLKConfig+0x50>
 8008840:	2b20      	cmp	r3, #32
 8008842:	d010      	beq.n	8008866 <HAL_RCCEx_PeriphCLKConfig+0x62>
 8008844:	e018      	b.n	8008878 <HAL_RCCEx_PeriphCLKConfig+0x74>
    {
    case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
      /* Enable SAI Clock output generated from System PLL . */
#if defined(RCC_PLLSAI2_SUPPORT)
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 8008846:	4b89      	ldr	r3, [pc, #548]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008848:	68db      	ldr	r3, [r3, #12]
 800884a:	4a88      	ldr	r2, [pc, #544]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 800884c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008850:	60d3      	str	r3, [r2, #12]
#else
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI2CLK);
#endif /* RCC_PLLSAI2_SUPPORT */
      /* SAI1 clock source config set later after clock selection check */
      break;
 8008852:	e015      	b.n	8008880 <HAL_RCCEx_PeriphCLKConfig+0x7c>

    case RCC_SAI1CLKSOURCE_PLLSAI1:  /* PLLSAI1 is used as clock source for SAI1*/
      /* PLLSAI1 input clock, parameters M, N & P configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 8008854:	687b      	ldr	r3, [r7, #4]
 8008856:	3304      	adds	r3, #4
 8008858:	2100      	movs	r1, #0
 800885a:	4618      	mov	r0, r3
 800885c:	f000 fb02 	bl	8008e64 <RCCEx_PLLSAI1_Config>
 8008860:	4603      	mov	r3, r0
 8008862:	74fb      	strb	r3, [r7, #19]
      /* SAI1 clock source config set later after clock selection check */
      break;
 8008864:	e00c      	b.n	8008880 <HAL_RCCEx_PeriphCLKConfig+0x7c>

#if defined(RCC_PLLSAI2_SUPPORT)

    case RCC_SAI1CLKSOURCE_PLLSAI2:  /* PLLSAI2 is used as clock source for SAI1*/
      /* PLLSAI2 input clock, parameters M, N & P configuration clock output (PLLSAI2ClockOut) */
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 8008866:	687b      	ldr	r3, [r7, #4]
 8008868:	3320      	adds	r3, #32
 800886a:	2100      	movs	r1, #0
 800886c:	4618      	mov	r0, r3
 800886e:	f000 fbed 	bl	800904c <RCCEx_PLLSAI2_Config>
 8008872:	4603      	mov	r3, r0
 8008874:	74fb      	strb	r3, [r7, #19]
      /* SAI1 clock source config set later after clock selection check */
      break;
 8008876:	e003      	b.n	8008880 <HAL_RCCEx_PeriphCLKConfig+0x7c>
#endif /* STM32L4P5xx || STM32L4Q5xx || STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
      /* SAI1 clock source config set later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
 8008878:	2301      	movs	r3, #1
 800887a:	74fb      	strb	r3, [r7, #19]
      break;
 800887c:	e000      	b.n	8008880 <HAL_RCCEx_PeriphCLKConfig+0x7c>
      break;
 800887e:	bf00      	nop
    }

    if(ret == HAL_OK)
 8008880:	7cfb      	ldrb	r3, [r7, #19]
 8008882:	2b00      	cmp	r3, #0
 8008884:	d10b      	bne.n	800889e <HAL_RCCEx_PeriphCLKConfig+0x9a>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8008886:	4b79      	ldr	r3, [pc, #484]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008888:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800888c:	f023 02e0 	bic.w	r2, r3, #224	; 0xe0
 8008890:	687b      	ldr	r3, [r7, #4]
 8008892:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008894:	4975      	ldr	r1, [pc, #468]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008896:	4313      	orrs	r3, r2
 8008898:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 800889c:	e001      	b.n	80088a2 <HAL_RCCEx_PeriphCLKConfig+0x9e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800889e:	7cfb      	ldrb	r3, [r7, #19]
 80088a0:	74bb      	strb	r3, [r7, #18]
#endif /* SAI1 */

#if defined(SAI2)

  /*-------------------------- SAI2 clock source configuration ---------------------*/
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 80088a2:	687b      	ldr	r3, [r7, #4]
 80088a4:	681b      	ldr	r3, [r3, #0]
 80088a6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80088aa:	2b00      	cmp	r3, #0
 80088ac:	d047      	beq.n	800893e <HAL_RCCEx_PeriphCLKConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLK(PeriphClkInit->Sai2ClockSelection));

    switch(PeriphClkInit->Sai2ClockSelection)
 80088ae:	687b      	ldr	r3, [r7, #4]
 80088b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80088b2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80088b6:	d030      	beq.n	800891a <HAL_RCCEx_PeriphCLKConfig+0x116>
 80088b8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80088bc:	d82a      	bhi.n	8008914 <HAL_RCCEx_PeriphCLKConfig+0x110>
 80088be:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80088c2:	d02a      	beq.n	800891a <HAL_RCCEx_PeriphCLKConfig+0x116>
 80088c4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80088c8:	d824      	bhi.n	8008914 <HAL_RCCEx_PeriphCLKConfig+0x110>
 80088ca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80088ce:	d008      	beq.n	80088e2 <HAL_RCCEx_PeriphCLKConfig+0xde>
 80088d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80088d4:	d81e      	bhi.n	8008914 <HAL_RCCEx_PeriphCLKConfig+0x110>
 80088d6:	2b00      	cmp	r3, #0
 80088d8:	d00a      	beq.n	80088f0 <HAL_RCCEx_PeriphCLKConfig+0xec>
 80088da:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80088de:	d010      	beq.n	8008902 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80088e0:	e018      	b.n	8008914 <HAL_RCCEx_PeriphCLKConfig+0x110>
    {
    case RCC_SAI2CLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
      /* Enable SAI Clock output generated from System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 80088e2:	4b62      	ldr	r3, [pc, #392]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 80088e4:	68db      	ldr	r3, [r3, #12]
 80088e6:	4a61      	ldr	r2, [pc, #388]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 80088e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80088ec:	60d3      	str	r3, [r2, #12]
      /* SAI2 clock source config set later after clock selection check */
      break;
 80088ee:	e015      	b.n	800891c <HAL_RCCEx_PeriphCLKConfig+0x118>

    case RCC_SAI2CLKSOURCE_PLLSAI1: /* PLLSAI1 is used as clock source for SAI2*/
      /* PLLSAI1 input clock, parameters M, N & P configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 80088f0:	687b      	ldr	r3, [r7, #4]
 80088f2:	3304      	adds	r3, #4
 80088f4:	2100      	movs	r1, #0
 80088f6:	4618      	mov	r0, r3
 80088f8:	f000 fab4 	bl	8008e64 <RCCEx_PLLSAI1_Config>
 80088fc:	4603      	mov	r3, r0
 80088fe:	74fb      	strb	r3, [r7, #19]
      /* SAI2 clock source config set later after clock selection check */
      break;
 8008900:	e00c      	b.n	800891c <HAL_RCCEx_PeriphCLKConfig+0x118>

    case RCC_SAI2CLKSOURCE_PLLSAI2:  /* PLLSAI2 is used as clock source for SAI2*/
      /* PLLSAI2 input clock, parameters M, N & P configuration and clock output (PLLSAI2ClockOut) */
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	3320      	adds	r3, #32
 8008906:	2100      	movs	r1, #0
 8008908:	4618      	mov	r0, r3
 800890a:	f000 fb9f 	bl	800904c <RCCEx_PLLSAI2_Config>
 800890e:	4603      	mov	r3, r0
 8008910:	74fb      	strb	r3, [r7, #19]
      /* SAI2 clock source config set later after clock selection check */
      break;
 8008912:	e003      	b.n	800891c <HAL_RCCEx_PeriphCLKConfig+0x118>
#endif /* STM32L4P5xx || STM32L4Q5xx || STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
      /* SAI2 clock source config set later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
 8008914:	2301      	movs	r3, #1
 8008916:	74fb      	strb	r3, [r7, #19]
      break;
 8008918:	e000      	b.n	800891c <HAL_RCCEx_PeriphCLKConfig+0x118>
      break;
 800891a:	bf00      	nop
    }

    if(ret == HAL_OK)
 800891c:	7cfb      	ldrb	r3, [r7, #19]
 800891e:	2b00      	cmp	r3, #0
 8008920:	d10b      	bne.n	800893a <HAL_RCCEx_PeriphCLKConfig+0x136>
    {
      /* Set the source of SAI2 clock*/
      __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8008922:	4b52      	ldr	r3, [pc, #328]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008924:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008928:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800892c:	687b      	ldr	r3, [r7, #4]
 800892e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008930:	494e      	ldr	r1, [pc, #312]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008932:	4313      	orrs	r3, r2
 8008934:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 8008938:	e001      	b.n	800893e <HAL_RCCEx_PeriphCLKConfig+0x13a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800893a:	7cfb      	ldrb	r3, [r7, #19]
 800893c:	74bb      	strb	r3, [r7, #18]
    }
  }
#endif /* SAI2 */

  /*-------------------------- RTC clock source configuration ----------------------*/
  if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 800893e:	687b      	ldr	r3, [r7, #4]
 8008940:	681b      	ldr	r3, [r3, #0]
 8008942:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008946:	2b00      	cmp	r3, #0
 8008948:	f000 809f 	beq.w	8008a8a <HAL_RCCEx_PeriphCLKConfig+0x286>
  {
    FlagStatus       pwrclkchanged = RESET;
 800894c:	2300      	movs	r3, #0
 800894e:	747b      	strb	r3, [r7, #17]

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8008950:	4b46      	ldr	r3, [pc, #280]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008952:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008954:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008958:	2b00      	cmp	r3, #0
 800895a:	d101      	bne.n	8008960 <HAL_RCCEx_PeriphCLKConfig+0x15c>
 800895c:	2301      	movs	r3, #1
 800895e:	e000      	b.n	8008962 <HAL_RCCEx_PeriphCLKConfig+0x15e>
 8008960:	2300      	movs	r3, #0
 8008962:	2b00      	cmp	r3, #0
 8008964:	d00d      	beq.n	8008982 <HAL_RCCEx_PeriphCLKConfig+0x17e>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8008966:	4b41      	ldr	r3, [pc, #260]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008968:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800896a:	4a40      	ldr	r2, [pc, #256]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 800896c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008970:	6593      	str	r3, [r2, #88]	; 0x58
 8008972:	4b3e      	ldr	r3, [pc, #248]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008974:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008976:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800897a:	60bb      	str	r3, [r7, #8]
 800897c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800897e:	2301      	movs	r3, #1
 8008980:	747b      	strb	r3, [r7, #17]
    }

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8008982:	4b3b      	ldr	r3, [pc, #236]	; (8008a70 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8008984:	681b      	ldr	r3, [r3, #0]
 8008986:	4a3a      	ldr	r2, [pc, #232]	; (8008a70 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8008988:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800898c:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 800898e:	f7fd f993 	bl	8005cb8 <HAL_GetTick>
 8008992:	60f8      	str	r0, [r7, #12]

    while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == 0U)
 8008994:	e009      	b.n	80089aa <HAL_RCCEx_PeriphCLKConfig+0x1a6>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008996:	f7fd f98f 	bl	8005cb8 <HAL_GetTick>
 800899a:	4602      	mov	r2, r0
 800899c:	68fb      	ldr	r3, [r7, #12]
 800899e:	1ad3      	subs	r3, r2, r3
 80089a0:	2b02      	cmp	r3, #2
 80089a2:	d902      	bls.n	80089aa <HAL_RCCEx_PeriphCLKConfig+0x1a6>
      {
        ret = HAL_TIMEOUT;
 80089a4:	2303      	movs	r3, #3
 80089a6:	74fb      	strb	r3, [r7, #19]
        break;
 80089a8:	e005      	b.n	80089b6 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == 0U)
 80089aa:	4b31      	ldr	r3, [pc, #196]	; (8008a70 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80089ac:	681b      	ldr	r3, [r3, #0]
 80089ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80089b2:	2b00      	cmp	r3, #0
 80089b4:	d0ef      	beq.n	8008996 <HAL_RCCEx_PeriphCLKConfig+0x192>
      }
    }

    if(ret == HAL_OK)
 80089b6:	7cfb      	ldrb	r3, [r7, #19]
 80089b8:	2b00      	cmp	r3, #0
 80089ba:	d15b      	bne.n	8008a74 <HAL_RCCEx_PeriphCLKConfig+0x270>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 80089bc:	4b2b      	ldr	r3, [pc, #172]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 80089be:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80089c2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80089c6:	617b      	str	r3, [r7, #20]

      if((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 80089c8:	697b      	ldr	r3, [r7, #20]
 80089ca:	2b00      	cmp	r3, #0
 80089cc:	d01f      	beq.n	8008a0e <HAL_RCCEx_PeriphCLKConfig+0x20a>
 80089ce:	687b      	ldr	r3, [r7, #4]
 80089d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80089d4:	697a      	ldr	r2, [r7, #20]
 80089d6:	429a      	cmp	r2, r3
 80089d8:	d019      	beq.n	8008a0e <HAL_RCCEx_PeriphCLKConfig+0x20a>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 80089da:	4b24      	ldr	r3, [pc, #144]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 80089dc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80089e0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80089e4:	617b      	str	r3, [r7, #20]
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 80089e6:	4b21      	ldr	r3, [pc, #132]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 80089e8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80089ec:	4a1f      	ldr	r2, [pc, #124]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 80089ee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80089f2:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
        __HAL_RCC_BACKUPRESET_RELEASE();
 80089f6:	4b1d      	ldr	r3, [pc, #116]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 80089f8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80089fc:	4a1b      	ldr	r2, [pc, #108]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 80089fe:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008a02:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpregister;
 8008a06:	4a19      	ldr	r2, [pc, #100]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008a08:	697b      	ldr	r3, [r7, #20]
 8008a0a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
      }

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8008a0e:	697b      	ldr	r3, [r7, #20]
 8008a10:	f003 0301 	and.w	r3, r3, #1
 8008a14:	2b00      	cmp	r3, #0
 8008a16:	d016      	beq.n	8008a46 <HAL_RCCEx_PeriphCLKConfig+0x242>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8008a18:	f7fd f94e 	bl	8005cb8 <HAL_GetTick>
 8008a1c:	60f8      	str	r0, [r7, #12]

        /* Wait till LSE is ready */
        while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8008a1e:	e00b      	b.n	8008a38 <HAL_RCCEx_PeriphCLKConfig+0x234>
        {
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008a20:	f7fd f94a 	bl	8005cb8 <HAL_GetTick>
 8008a24:	4602      	mov	r2, r0
 8008a26:	68fb      	ldr	r3, [r7, #12]
 8008a28:	1ad3      	subs	r3, r2, r3
 8008a2a:	f241 3288 	movw	r2, #5000	; 0x1388
 8008a2e:	4293      	cmp	r3, r2
 8008a30:	d902      	bls.n	8008a38 <HAL_RCCEx_PeriphCLKConfig+0x234>
          {
            ret = HAL_TIMEOUT;
 8008a32:	2303      	movs	r3, #3
 8008a34:	74fb      	strb	r3, [r7, #19]
            break;
 8008a36:	e006      	b.n	8008a46 <HAL_RCCEx_PeriphCLKConfig+0x242>
        while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8008a38:	4b0c      	ldr	r3, [pc, #48]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008a3a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008a3e:	f003 0302 	and.w	r3, r3, #2
 8008a42:	2b00      	cmp	r3, #0
 8008a44:	d0ec      	beq.n	8008a20 <HAL_RCCEx_PeriphCLKConfig+0x21c>
          }
        }
      }

      if(ret == HAL_OK)
 8008a46:	7cfb      	ldrb	r3, [r7, #19]
 8008a48:	2b00      	cmp	r3, #0
 8008a4a:	d10c      	bne.n	8008a66 <HAL_RCCEx_PeriphCLKConfig+0x262>
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008a4c:	4b07      	ldr	r3, [pc, #28]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008a4e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008a52:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8008a56:	687b      	ldr	r3, [r7, #4]
 8008a58:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008a5c:	4903      	ldr	r1, [pc, #12]	; (8008a6c <HAL_RCCEx_PeriphCLKConfig+0x268>)
 8008a5e:	4313      	orrs	r3, r2
 8008a60:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8008a64:	e008      	b.n	8008a78 <HAL_RCCEx_PeriphCLKConfig+0x274>
      }
      else
      {
        /* set overall return value */
        status = ret;
 8008a66:	7cfb      	ldrb	r3, [r7, #19]
 8008a68:	74bb      	strb	r3, [r7, #18]
 8008a6a:	e005      	b.n	8008a78 <HAL_RCCEx_PeriphCLKConfig+0x274>
 8008a6c:	40021000 	.word	0x40021000
 8008a70:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008a74:	7cfb      	ldrb	r3, [r7, #19]
 8008a76:	74bb      	strb	r3, [r7, #18]
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8008a78:	7c7b      	ldrb	r3, [r7, #17]
 8008a7a:	2b01      	cmp	r3, #1
 8008a7c:	d105      	bne.n	8008a8a <HAL_RCCEx_PeriphCLKConfig+0x286>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8008a7e:	4ba0      	ldr	r3, [pc, #640]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008a80:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008a82:	4a9f      	ldr	r2, [pc, #636]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008a84:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008a88:	6593      	str	r3, [r2, #88]	; 0x58
    }
  }

  /*-------------------------- USART1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	681b      	ldr	r3, [r3, #0]
 8008a8e:	f003 0301 	and.w	r3, r3, #1
 8008a92:	2b00      	cmp	r3, #0
 8008a94:	d00a      	beq.n	8008aac <HAL_RCCEx_PeriphCLKConfig+0x2a8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8008a96:	4b9a      	ldr	r3, [pc, #616]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008a98:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008a9c:	f023 0203 	bic.w	r2, r3, #3
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008aa4:	4996      	ldr	r1, [pc, #600]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008aa6:	4313      	orrs	r3, r2
 8008aa8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- USART2 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8008aac:	687b      	ldr	r3, [r7, #4]
 8008aae:	681b      	ldr	r3, [r3, #0]
 8008ab0:	f003 0302 	and.w	r3, r3, #2
 8008ab4:	2b00      	cmp	r3, #0
 8008ab6:	d00a      	beq.n	8008ace <HAL_RCCEx_PeriphCLKConfig+0x2ca>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8008ab8:	4b91      	ldr	r3, [pc, #580]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008aba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008abe:	f023 020c 	bic.w	r2, r3, #12
 8008ac2:	687b      	ldr	r3, [r7, #4]
 8008ac4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008ac6:	498e      	ldr	r1, [pc, #568]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008ac8:	4313      	orrs	r3, r2
 8008aca:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#if defined(USART3)

  /*-------------------------- USART3 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	681b      	ldr	r3, [r3, #0]
 8008ad2:	f003 0304 	and.w	r3, r3, #4
 8008ad6:	2b00      	cmp	r3, #0
 8008ad8:	d00a      	beq.n	8008af0 <HAL_RCCEx_PeriphCLKConfig+0x2ec>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8008ada:	4b89      	ldr	r3, [pc, #548]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008adc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008ae0:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8008ae4:	687b      	ldr	r3, [r7, #4]
 8008ae6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008ae8:	4985      	ldr	r1, [pc, #532]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008aea:	4313      	orrs	r3, r2
 8008aec:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* USART3 */

#if defined(UART4)

  /*-------------------------- UART4 clock source configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8008af0:	687b      	ldr	r3, [r7, #4]
 8008af2:	681b      	ldr	r3, [r3, #0]
 8008af4:	f003 0308 	and.w	r3, r3, #8
 8008af8:	2b00      	cmp	r3, #0
 8008afa:	d00a      	beq.n	8008b12 <HAL_RCCEx_PeriphCLKConfig+0x30e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8008afc:	4b80      	ldr	r3, [pc, #512]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008afe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008b02:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8008b06:	687b      	ldr	r3, [r7, #4]
 8008b08:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008b0a:	497d      	ldr	r1, [pc, #500]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008b0c:	4313      	orrs	r3, r2
 8008b0e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* UART4 */

#if defined(UART5)

  /*-------------------------- UART5 clock source configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8008b12:	687b      	ldr	r3, [r7, #4]
 8008b14:	681b      	ldr	r3, [r3, #0]
 8008b16:	f003 0310 	and.w	r3, r3, #16
 8008b1a:	2b00      	cmp	r3, #0
 8008b1c:	d00a      	beq.n	8008b34 <HAL_RCCEx_PeriphCLKConfig+0x330>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8008b1e:	4b78      	ldr	r3, [pc, #480]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008b20:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008b24:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008b2c:	4974      	ldr	r1, [pc, #464]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008b2e:	4313      	orrs	r3, r2
 8008b30:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#endif /* UART5 */

  /*-------------------------- LPUART1 clock source configuration ------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8008b34:	687b      	ldr	r3, [r7, #4]
 8008b36:	681b      	ldr	r3, [r3, #0]
 8008b38:	f003 0320 	and.w	r3, r3, #32
 8008b3c:	2b00      	cmp	r3, #0
 8008b3e:	d00a      	beq.n	8008b56 <HAL_RCCEx_PeriphCLKConfig+0x352>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));

    /* Configure the LPUART1 clock source */
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8008b40:	4b6f      	ldr	r3, [pc, #444]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008b42:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008b46:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008b4e:	496c      	ldr	r1, [pc, #432]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008b50:	4313      	orrs	r3, r2
 8008b52:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- LPTIM1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	681b      	ldr	r3, [r3, #0]
 8008b5a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008b5e:	2b00      	cmp	r3, #0
 8008b60:	d00a      	beq.n	8008b78 <HAL_RCCEx_PeriphCLKConfig+0x374>
  {
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8008b62:	4b67      	ldr	r3, [pc, #412]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008b64:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008b68:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8008b6c:	687b      	ldr	r3, [r7, #4]
 8008b6e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008b70:	4963      	ldr	r1, [pc, #396]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008b72:	4313      	orrs	r3, r2
 8008b74:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- LPTIM2 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 8008b78:	687b      	ldr	r3, [r7, #4]
 8008b7a:	681b      	ldr	r3, [r3, #0]
 8008b7c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8008b80:	2b00      	cmp	r3, #0
 8008b82:	d00a      	beq.n	8008b9a <HAL_RCCEx_PeriphCLKConfig+0x396>
  {
    assert_param(IS_RCC_LPTIM2CLK(PeriphClkInit->Lptim2ClockSelection));
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8008b84:	4b5e      	ldr	r3, [pc, #376]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008b86:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008b8a:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8008b8e:	687b      	ldr	r3, [r7, #4]
 8008b90:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8008b92:	495b      	ldr	r1, [pc, #364]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008b94:	4313      	orrs	r3, r2
 8008b96:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8008b9a:	687b      	ldr	r3, [r7, #4]
 8008b9c:	681b      	ldr	r3, [r3, #0]
 8008b9e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008ba2:	2b00      	cmp	r3, #0
 8008ba4:	d00a      	beq.n	8008bbc <HAL_RCCEx_PeriphCLKConfig+0x3b8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8008ba6:	4b56      	ldr	r3, [pc, #344]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008ba8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008bac:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8008bb0:	687b      	ldr	r3, [r7, #4]
 8008bb2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008bb4:	4952      	ldr	r1, [pc, #328]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008bb6:	4313      	orrs	r3, r2
 8008bb8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#if defined(I2C2)

  /*-------------------------- I2C2 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	681b      	ldr	r3, [r3, #0]
 8008bc0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008bc4:	2b00      	cmp	r3, #0
 8008bc6:	d00a      	beq.n	8008bde <HAL_RCCEx_PeriphCLKConfig+0x3da>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8008bc8:	4b4d      	ldr	r3, [pc, #308]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008bca:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008bce:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008bd6:	494a      	ldr	r1, [pc, #296]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008bd8:	4313      	orrs	r3, r2
 8008bda:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#endif /* I2C2 */

  /*-------------------------- I2C3 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8008bde:	687b      	ldr	r3, [r7, #4]
 8008be0:	681b      	ldr	r3, [r3, #0]
 8008be2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008be6:	2b00      	cmp	r3, #0
 8008be8:	d00a      	beq.n	8008c00 <HAL_RCCEx_PeriphCLKConfig+0x3fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8008bea:	4b45      	ldr	r3, [pc, #276]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008bec:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008bf0:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8008bf4:	687b      	ldr	r3, [r7, #4]
 8008bf6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008bf8:	4941      	ldr	r1, [pc, #260]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008bfa:	4313      	orrs	r3, r2
 8008bfc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#if defined(I2C4)

  /*-------------------------- I2C4 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	681b      	ldr	r3, [r3, #0]
 8008c04:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8008c08:	2b00      	cmp	r3, #0
 8008c0a:	d00a      	beq.n	8008c22 <HAL_RCCEx_PeriphCLKConfig+0x41e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8008c0c:	4b3c      	ldr	r3, [pc, #240]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008c0e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008c12:	f023 0203 	bic.w	r2, r3, #3
 8008c16:	687b      	ldr	r3, [r7, #4]
 8008c18:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008c1a:	4939      	ldr	r1, [pc, #228]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008c1c:	4313      	orrs	r3, r2
 8008c1e:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
#endif /* I2C4 */

#if defined(USB_OTG_FS) || defined(USB)

  /*-------------------------- USB clock source configuration ----------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 8008c22:	687b      	ldr	r3, [r7, #4]
 8008c24:	681b      	ldr	r3, [r3, #0]
 8008c26:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8008c2a:	2b00      	cmp	r3, #0
 8008c2c:	d028      	beq.n	8008c80 <HAL_RCCEx_PeriphCLKConfig+0x47c>
  {
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8008c2e:	4b34      	ldr	r3, [pc, #208]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008c30:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008c34:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8008c38:	687b      	ldr	r3, [r7, #4]
 8008c3a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008c3c:	4930      	ldr	r1, [pc, #192]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008c3e:	4313      	orrs	r3, r2
 8008c40:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

    if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 8008c44:	687b      	ldr	r3, [r7, #4]
 8008c46:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008c48:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8008c4c:	d106      	bne.n	8008c5c <HAL_RCCEx_PeriphCLKConfig+0x458>
    {
      /* Enable PLL48M1CLK output clock */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8008c4e:	4b2c      	ldr	r3, [pc, #176]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008c50:	68db      	ldr	r3, [r3, #12]
 8008c52:	4a2b      	ldr	r2, [pc, #172]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008c54:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8008c58:	60d3      	str	r3, [r2, #12]
 8008c5a:	e011      	b.n	8008c80 <HAL_RCCEx_PeriphCLKConfig+0x47c>
    }
    else
    {
#if defined(RCC_PLLSAI1_SUPPORT)
      if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLLSAI1)
 8008c5c:	687b      	ldr	r3, [r7, #4]
 8008c5e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008c60:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008c64:	d10c      	bne.n	8008c80 <HAL_RCCEx_PeriphCLKConfig+0x47c>
      {
        /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) */
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8008c66:	687b      	ldr	r3, [r7, #4]
 8008c68:	3304      	adds	r3, #4
 8008c6a:	2101      	movs	r1, #1
 8008c6c:	4618      	mov	r0, r3
 8008c6e:	f000 f8f9 	bl	8008e64 <RCCEx_PLLSAI1_Config>
 8008c72:	4603      	mov	r3, r0
 8008c74:	74fb      	strb	r3, [r7, #19]

        if(ret != HAL_OK)
 8008c76:	7cfb      	ldrb	r3, [r7, #19]
 8008c78:	2b00      	cmp	r3, #0
 8008c7a:	d001      	beq.n	8008c80 <HAL_RCCEx_PeriphCLKConfig+0x47c>
        {
          /* set overall return value */
          status = ret;
 8008c7c:	7cfb      	ldrb	r3, [r7, #19]
 8008c7e:	74bb      	strb	r3, [r7, #18]
#endif /* USB_OTG_FS || USB */

#if defined(SDMMC1)

  /*-------------------------- SDMMC1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == (RCC_PERIPHCLK_SDMMC1))
 8008c80:	687b      	ldr	r3, [r7, #4]
 8008c82:	681b      	ldr	r3, [r3, #0]
 8008c84:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008c88:	2b00      	cmp	r3, #0
 8008c8a:	d04d      	beq.n	8008d28 <HAL_RCCEx_PeriphCLKConfig+0x524>
  {
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8008c8c:	687b      	ldr	r3, [r7, #4]
 8008c8e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8008c90:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008c94:	d108      	bne.n	8008ca8 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 8008c96:	4b1a      	ldr	r3, [pc, #104]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008c98:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008c9c:	4a18      	ldr	r2, [pc, #96]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008c9e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008ca2:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
 8008ca6:	e012      	b.n	8008cce <HAL_RCCEx_PeriphCLKConfig+0x4ca>
 8008ca8:	4b15      	ldr	r3, [pc, #84]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008caa:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008cae:	4a14      	ldr	r2, [pc, #80]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008cb0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008cb4:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
 8008cb8:	4b11      	ldr	r3, [pc, #68]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008cba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008cbe:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8008cc2:	687b      	ldr	r3, [r7, #4]
 8008cc4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8008cc6:	490e      	ldr	r1, [pc, #56]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008cc8:	4313      	orrs	r3, r2
 8008cca:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

    if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLL)   /* PLL "Q" ? */
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8008cd2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8008cd6:	d106      	bne.n	8008ce6 <HAL_RCCEx_PeriphCLKConfig+0x4e2>
    {
      /* Enable PLL48M1CLK output clock */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8008cd8:	4b09      	ldr	r3, [pc, #36]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008cda:	68db      	ldr	r3, [r3, #12]
 8008cdc:	4a08      	ldr	r2, [pc, #32]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008cde:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8008ce2:	60d3      	str	r3, [r2, #12]
 8008ce4:	e020      	b.n	8008d28 <HAL_RCCEx_PeriphCLKConfig+0x524>
    }
#if defined(RCC_CCIPR2_SDMMCSEL)
    else if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLLP) /* PLL "P" ? */
 8008ce6:	687b      	ldr	r3, [r7, #4]
 8008ce8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8008cea:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008cee:	d109      	bne.n	8008d04 <HAL_RCCEx_PeriphCLKConfig+0x500>
    {
      /* Enable PLLSAI3CLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 8008cf0:	4b03      	ldr	r3, [pc, #12]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008cf2:	68db      	ldr	r3, [r3, #12]
 8008cf4:	4a02      	ldr	r2, [pc, #8]	; (8008d00 <HAL_RCCEx_PeriphCLKConfig+0x4fc>)
 8008cf6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008cfa:	60d3      	str	r3, [r2, #12]
 8008cfc:	e014      	b.n	8008d28 <HAL_RCCEx_PeriphCLKConfig+0x524>
 8008cfe:	bf00      	nop
 8008d00:	40021000 	.word	0x40021000
    }
#endif
    else if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLLSAI1)
 8008d04:	687b      	ldr	r3, [r7, #4]
 8008d06:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8008d08:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008d0c:	d10c      	bne.n	8008d28 <HAL_RCCEx_PeriphCLKConfig+0x524>
    {
      /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8008d0e:	687b      	ldr	r3, [r7, #4]
 8008d10:	3304      	adds	r3, #4
 8008d12:	2101      	movs	r1, #1
 8008d14:	4618      	mov	r0, r3
 8008d16:	f000 f8a5 	bl	8008e64 <RCCEx_PLLSAI1_Config>
 8008d1a:	4603      	mov	r3, r0
 8008d1c:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 8008d1e:	7cfb      	ldrb	r3, [r7, #19]
 8008d20:	2b00      	cmp	r3, #0
 8008d22:	d001      	beq.n	8008d28 <HAL_RCCEx_PeriphCLKConfig+0x524>
      {
        /* set overall return value */
        status = ret;
 8008d24:	7cfb      	ldrb	r3, [r7, #19]
 8008d26:	74bb      	strb	r3, [r7, #18]
  }

#endif /* SDMMC1 */

  /*-------------------------- RNG clock source configuration ----------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 8008d28:	687b      	ldr	r3, [r7, #4]
 8008d2a:	681b      	ldr	r3, [r3, #0]
 8008d2c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008d30:	2b00      	cmp	r3, #0
 8008d32:	d028      	beq.n	8008d86 <HAL_RCCEx_PeriphCLKConfig+0x582>
  {
    assert_param(IS_RCC_RNGCLKSOURCE(PeriphClkInit->RngClockSelection));
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8008d34:	4b4a      	ldr	r3, [pc, #296]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008d36:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008d3a:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008d42:	4947      	ldr	r1, [pc, #284]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008d44:	4313      	orrs	r3, r2
 8008d46:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

    if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008d4e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8008d52:	d106      	bne.n	8008d62 <HAL_RCCEx_PeriphCLKConfig+0x55e>
    {
      /* Enable PLL48M1CLK output clock */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8008d54:	4b42      	ldr	r3, [pc, #264]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008d56:	68db      	ldr	r3, [r3, #12]
 8008d58:	4a41      	ldr	r2, [pc, #260]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008d5a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8008d5e:	60d3      	str	r3, [r2, #12]
 8008d60:	e011      	b.n	8008d86 <HAL_RCCEx_PeriphCLKConfig+0x582>
    }
#if defined(RCC_PLLSAI1_SUPPORT)
    else if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLLSAI1)
 8008d62:	687b      	ldr	r3, [r7, #4]
 8008d64:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008d66:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008d6a:	d10c      	bne.n	8008d86 <HAL_RCCEx_PeriphCLKConfig+0x582>
    {
      /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8008d6c:	687b      	ldr	r3, [r7, #4]
 8008d6e:	3304      	adds	r3, #4
 8008d70:	2101      	movs	r1, #1
 8008d72:	4618      	mov	r0, r3
 8008d74:	f000 f876 	bl	8008e64 <RCCEx_PLLSAI1_Config>
 8008d78:	4603      	mov	r3, r0
 8008d7a:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 8008d7c:	7cfb      	ldrb	r3, [r7, #19]
 8008d7e:	2b00      	cmp	r3, #0
 8008d80:	d001      	beq.n	8008d86 <HAL_RCCEx_PeriphCLKConfig+0x582>
      {
        /* set overall return value */
        status = ret;
 8008d82:	7cfb      	ldrb	r3, [r7, #19]
 8008d84:	74bb      	strb	r3, [r7, #18]
    }
  }

  /*-------------------------- ADC clock source configuration ----------------------*/
#if !defined(STM32L412xx) && !defined(STM32L422xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8008d86:	687b      	ldr	r3, [r7, #4]
 8008d88:	681b      	ldr	r3, [r3, #0]
 8008d8a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8008d8e:	2b00      	cmp	r3, #0
 8008d90:	d01e      	beq.n	8008dd0 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));

    /* Configure the ADC interface clock source */
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8008d92:	4b33      	ldr	r3, [pc, #204]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008d94:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008d98:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 8008d9c:	687b      	ldr	r3, [r7, #4]
 8008d9e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008da2:	492f      	ldr	r1, [pc, #188]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008da4:	4313      	orrs	r3, r2
 8008da6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

#if defined(RCC_PLLSAI1_SUPPORT)
    if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 8008daa:	687b      	ldr	r3, [r7, #4]
 8008dac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008db0:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008db4:	d10c      	bne.n	8008dd0 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* PLLSAI1 input clock, parameters M, N & R configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_R_UPDATE);
 8008db6:	687b      	ldr	r3, [r7, #4]
 8008db8:	3304      	adds	r3, #4
 8008dba:	2102      	movs	r1, #2
 8008dbc:	4618      	mov	r0, r3
 8008dbe:	f000 f851 	bl	8008e64 <RCCEx_PLLSAI1_Config>
 8008dc2:	4603      	mov	r3, r0
 8008dc4:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 8008dc6:	7cfb      	ldrb	r3, [r7, #19]
 8008dc8:	2b00      	cmp	r3, #0
 8008dca:	d001      	beq.n	8008dd0 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
      {
        /* set overall return value */
        status = ret;
 8008dcc:	7cfb      	ldrb	r3, [r7, #19]
 8008dce:	74bb      	strb	r3, [r7, #18]
#endif /* SWPMI1 */

#if defined(DFSDM1_Filter0)

  /*-------------------------- DFSDM1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8008dd0:	687b      	ldr	r3, [r7, #4]
 8008dd2:	681b      	ldr	r3, [r3, #0]
 8008dd4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008dd8:	2b00      	cmp	r3, #0
 8008dda:	d00b      	beq.n	8008df4 <HAL_RCCEx_PeriphCLKConfig+0x5f0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8008ddc:	4b20      	ldr	r3, [pc, #128]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008dde:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008de2:	f023 0204 	bic.w	r2, r3, #4
 8008de6:	687b      	ldr	r3, [r7, #4]
 8008de8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008dec:	491c      	ldr	r1, [pc, #112]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008dee:	4313      	orrs	r3, r2
 8008df0:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
  }

#if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) || defined(STM32L4S7xx) || defined(STM32L4S9xx)
  /*-------------------------- DFSDM1 audio clock source configuration -------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1AUDIO) == RCC_PERIPHCLK_DFSDM1AUDIO)
 8008df4:	687b      	ldr	r3, [r7, #4]
 8008df6:	681b      	ldr	r3, [r3, #0]
 8008df8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8008dfc:	2b00      	cmp	r3, #0
 8008dfe:	d00b      	beq.n	8008e18 <HAL_RCCEx_PeriphCLKConfig+0x614>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1AUDIOCLKSOURCE(PeriphClkInit->Dfsdm1AudioClockSelection));

    /* Configure the DFSDM1 interface audio clock source */
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
 8008e00:	4b17      	ldr	r3, [pc, #92]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008e02:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008e06:	f023 0218 	bic.w	r2, r3, #24
 8008e0a:	687b      	ldr	r3, [r7, #4]
 8008e0c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008e10:	4913      	ldr	r1, [pc, #76]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008e12:	4313      	orrs	r3, r2
 8008e14:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
#endif /* DSI */

#if defined(OCTOSPI1) || defined(OCTOSPI2)

  /*-------------------------- OctoSPIx clock source configuration ----------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8008e18:	687b      	ldr	r3, [r7, #4]
 8008e1a:	681b      	ldr	r3, [r3, #0]
 8008e1c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008e20:	2b00      	cmp	r3, #0
 8008e22:	d017      	beq.n	8008e54 <HAL_RCCEx_PeriphCLKConfig+0x650>
  {
    /* Check the parameters */
    assert_param(IS_RCC_OSPICLKSOURCE(PeriphClkInit->OspiClockSelection));

    /* Configure the OctoSPI clock source */
    __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 8008e24:	4b0e      	ldr	r3, [pc, #56]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008e26:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008e2a:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8008e34:	490a      	ldr	r1, [pc, #40]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008e36:	4313      	orrs	r3, r2
 8008e38:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c

    if(PeriphClkInit->OspiClockSelection == RCC_OSPICLKSOURCE_PLL)
 8008e3c:	687b      	ldr	r3, [r7, #4]
 8008e3e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8008e42:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008e46:	d105      	bne.n	8008e54 <HAL_RCCEx_PeriphCLKConfig+0x650>
    {
      /* Enable PLL48M1CLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8008e48:	4b05      	ldr	r3, [pc, #20]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008e4a:	68db      	ldr	r3, [r3, #12]
 8008e4c:	4a04      	ldr	r2, [pc, #16]	; (8008e60 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8008e4e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8008e52:	60d3      	str	r3, [r2, #12]
    }
  }

#endif /* OCTOSPI1 || OCTOSPI2 */

  return status;
 8008e54:	7cbb      	ldrb	r3, [r7, #18]
}
 8008e56:	4618      	mov	r0, r3
 8008e58:	3718      	adds	r7, #24
 8008e5a:	46bd      	mov	sp, r7
 8008e5c:	bd80      	pop	{r7, pc}
 8008e5e:	bf00      	nop
 8008e60:	40021000 	.word	0x40021000

08008e64 <RCCEx_PLLSAI1_Config>:
  * @note   PLLSAI1 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI1_Config(RCC_PLLSAI1InitTypeDef *PllSai1, uint32_t Divider)
{
 8008e64:	b580      	push	{r7, lr}
 8008e66:	b084      	sub	sp, #16
 8008e68:	af00      	add	r7, sp, #0
 8008e6a:	6078      	str	r0, [r7, #4]
 8008e6c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 8008e6e:	2300      	movs	r3, #0
 8008e70:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLLSAI1M_VALUE(PllSai1->PLLSAI1M));
  assert_param(IS_RCC_PLLSAI1N_VALUE(PllSai1->PLLSAI1N));
  assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(PllSai1->PLLSAI1ClockOut));

  /* Check that PLLSAI1 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8008e72:	4b72      	ldr	r3, [pc, #456]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008e74:	68db      	ldr	r3, [r3, #12]
 8008e76:	f003 0303 	and.w	r3, r3, #3
 8008e7a:	2b00      	cmp	r3, #0
 8008e7c:	d00e      	beq.n	8008e9c <RCCEx_PLLSAI1_Config+0x38>
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai1->PLLSAI1Source)
 8008e7e:	4b6f      	ldr	r3, [pc, #444]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008e80:	68db      	ldr	r3, [r3, #12]
 8008e82:	f003 0203 	and.w	r2, r3, #3
 8008e86:	687b      	ldr	r3, [r7, #4]
 8008e88:	681b      	ldr	r3, [r3, #0]
 8008e8a:	429a      	cmp	r2, r3
 8008e8c:	d103      	bne.n	8008e96 <RCCEx_PLLSAI1_Config+0x32>
       ||
       (PllSai1->PLLSAI1Source == RCC_PLLSOURCE_NONE)
 8008e8e:	687b      	ldr	r3, [r7, #4]
 8008e90:	681b      	ldr	r3, [r3, #0]
       ||
 8008e92:	2b00      	cmp	r3, #0
 8008e94:	d142      	bne.n	8008f1c <RCCEx_PLLSAI1_Config+0xb8>
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSAI1M)
#endif
      )
    {
      status = HAL_ERROR;
 8008e96:	2301      	movs	r3, #1
 8008e98:	73fb      	strb	r3, [r7, #15]
 8008e9a:	e03f      	b.n	8008f1c <RCCEx_PLLSAI1_Config+0xb8>
    }
  }
  else
  {
    /* Check PLLSAI1 clock source availability */
    switch(PllSai1->PLLSAI1Source)
 8008e9c:	687b      	ldr	r3, [r7, #4]
 8008e9e:	681b      	ldr	r3, [r3, #0]
 8008ea0:	2b03      	cmp	r3, #3
 8008ea2:	d018      	beq.n	8008ed6 <RCCEx_PLLSAI1_Config+0x72>
 8008ea4:	2b03      	cmp	r3, #3
 8008ea6:	d825      	bhi.n	8008ef4 <RCCEx_PLLSAI1_Config+0x90>
 8008ea8:	2b01      	cmp	r3, #1
 8008eaa:	d002      	beq.n	8008eb2 <RCCEx_PLLSAI1_Config+0x4e>
 8008eac:	2b02      	cmp	r3, #2
 8008eae:	d009      	beq.n	8008ec4 <RCCEx_PLLSAI1_Config+0x60>
 8008eb0:	e020      	b.n	8008ef4 <RCCEx_PLLSAI1_Config+0x90>
    {
    case RCC_PLLSOURCE_MSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 8008eb2:	4b62      	ldr	r3, [pc, #392]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008eb4:	681b      	ldr	r3, [r3, #0]
 8008eb6:	f003 0302 	and.w	r3, r3, #2
 8008eba:	2b00      	cmp	r3, #0
 8008ebc:	d11d      	bne.n	8008efa <RCCEx_PLLSAI1_Config+0x96>
      {
        status = HAL_ERROR;
 8008ebe:	2301      	movs	r3, #1
 8008ec0:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8008ec2:	e01a      	b.n	8008efa <RCCEx_PLLSAI1_Config+0x96>
    case RCC_PLLSOURCE_HSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 8008ec4:	4b5d      	ldr	r3, [pc, #372]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008ec6:	681b      	ldr	r3, [r3, #0]
 8008ec8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8008ecc:	2b00      	cmp	r3, #0
 8008ece:	d116      	bne.n	8008efe <RCCEx_PLLSAI1_Config+0x9a>
      {
        status = HAL_ERROR;
 8008ed0:	2301      	movs	r3, #1
 8008ed2:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8008ed4:	e013      	b.n	8008efe <RCCEx_PLLSAI1_Config+0x9a>
    case RCC_PLLSOURCE_HSE:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
 8008ed6:	4b59      	ldr	r3, [pc, #356]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008ed8:	681b      	ldr	r3, [r3, #0]
 8008eda:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008ede:	2b00      	cmp	r3, #0
 8008ee0:	d10f      	bne.n	8008f02 <RCCEx_PLLSAI1_Config+0x9e>
      {
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8008ee2:	4b56      	ldr	r3, [pc, #344]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008ee4:	681b      	ldr	r3, [r3, #0]
 8008ee6:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008eea:	2b00      	cmp	r3, #0
 8008eec:	d109      	bne.n	8008f02 <RCCEx_PLLSAI1_Config+0x9e>
        {
          status = HAL_ERROR;
 8008eee:	2301      	movs	r3, #1
 8008ef0:	73fb      	strb	r3, [r7, #15]
        }
      }
      break;
 8008ef2:	e006      	b.n	8008f02 <RCCEx_PLLSAI1_Config+0x9e>
    default:
      status = HAL_ERROR;
 8008ef4:	2301      	movs	r3, #1
 8008ef6:	73fb      	strb	r3, [r7, #15]
      break;
 8008ef8:	e004      	b.n	8008f04 <RCCEx_PLLSAI1_Config+0xa0>
      break;
 8008efa:	bf00      	nop
 8008efc:	e002      	b.n	8008f04 <RCCEx_PLLSAI1_Config+0xa0>
      break;
 8008efe:	bf00      	nop
 8008f00:	e000      	b.n	8008f04 <RCCEx_PLLSAI1_Config+0xa0>
      break;
 8008f02:	bf00      	nop
    }

    if(status == HAL_OK)
 8008f04:	7bfb      	ldrb	r3, [r7, #15]
 8008f06:	2b00      	cmp	r3, #0
 8008f08:	d108      	bne.n	8008f1c <RCCEx_PLLSAI1_Config+0xb8>
    {
#if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
      /* Set PLLSAI1 clock source */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PllSai1->PLLSAI1Source);
 8008f0a:	4b4c      	ldr	r3, [pc, #304]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008f0c:	68db      	ldr	r3, [r3, #12]
 8008f0e:	f023 0203 	bic.w	r2, r3, #3
 8008f12:	687b      	ldr	r3, [r7, #4]
 8008f14:	681b      	ldr	r3, [r3, #0]
 8008f16:	4949      	ldr	r1, [pc, #292]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008f18:	4313      	orrs	r3, r2
 8008f1a:	60cb      	str	r3, [r1, #12]
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai1->PLLSAI1Source | (PllSai1->PLLSAI1M - 1U) << RCC_PLLCFGR_PLLM_Pos);
#endif
    }
  }

  if(status == HAL_OK)
 8008f1c:	7bfb      	ldrb	r3, [r7, #15]
 8008f1e:	2b00      	cmp	r3, #0
 8008f20:	f040 8086 	bne.w	8009030 <RCCEx_PLLSAI1_Config+0x1cc>
  {
    /* Disable the PLLSAI1 */
    __HAL_RCC_PLLSAI1_DISABLE();
 8008f24:	4b45      	ldr	r3, [pc, #276]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008f26:	681b      	ldr	r3, [r3, #0]
 8008f28:	4a44      	ldr	r2, [pc, #272]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008f2a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8008f2e:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8008f30:	f7fc fec2 	bl	8005cb8 <HAL_GetTick>
 8008f34:	60b8      	str	r0, [r7, #8]

    /* Wait till PLLSAI1 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 8008f36:	e009      	b.n	8008f4c <RCCEx_PLLSAI1_Config+0xe8>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8008f38:	f7fc febe 	bl	8005cb8 <HAL_GetTick>
 8008f3c:	4602      	mov	r2, r0
 8008f3e:	68bb      	ldr	r3, [r7, #8]
 8008f40:	1ad3      	subs	r3, r2, r3
 8008f42:	2b02      	cmp	r3, #2
 8008f44:	d902      	bls.n	8008f4c <RCCEx_PLLSAI1_Config+0xe8>
      {
        status = HAL_TIMEOUT;
 8008f46:	2303      	movs	r3, #3
 8008f48:	73fb      	strb	r3, [r7, #15]
        break;
 8008f4a:	e005      	b.n	8008f58 <RCCEx_PLLSAI1_Config+0xf4>
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 8008f4c:	4b3b      	ldr	r3, [pc, #236]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008f4e:	681b      	ldr	r3, [r3, #0]
 8008f50:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008f54:	2b00      	cmp	r3, #0
 8008f56:	d1ef      	bne.n	8008f38 <RCCEx_PLLSAI1_Config+0xd4>
      }
    }

    if(status == HAL_OK)
 8008f58:	7bfb      	ldrb	r3, [r7, #15]
 8008f5a:	2b00      	cmp	r3, #0
 8008f5c:	d168      	bne.n	8009030 <RCCEx_PLLSAI1_Config+0x1cc>
    {
      if(Divider == DIVIDER_P_UPDATE)
 8008f5e:	683b      	ldr	r3, [r7, #0]
 8008f60:	2b00      	cmp	r3, #0
 8008f62:	d113      	bne.n	8008f8c <RCCEx_PLLSAI1_Config+0x128>
        assert_param(IS_RCC_PLLSAI1P_VALUE(PllSai1->PLLSAI1P));
#if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)

        /* Configure the PLLSAI1 Division factor M, P and Multiplication factor N*/
#if defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8008f64:	4b35      	ldr	r3, [pc, #212]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008f66:	691a      	ldr	r2, [r3, #16]
 8008f68:	4b35      	ldr	r3, [pc, #212]	; (8009040 <RCCEx_PLLSAI1_Config+0x1dc>)
 8008f6a:	4013      	ands	r3, r2
 8008f6c:	687a      	ldr	r2, [r7, #4]
 8008f6e:	6892      	ldr	r2, [r2, #8]
 8008f70:	0211      	lsls	r1, r2, #8
 8008f72:	687a      	ldr	r2, [r7, #4]
 8008f74:	68d2      	ldr	r2, [r2, #12]
 8008f76:	06d2      	lsls	r2, r2, #27
 8008f78:	4311      	orrs	r1, r2
 8008f7a:	687a      	ldr	r2, [r7, #4]
 8008f7c:	6852      	ldr	r2, [r2, #4]
 8008f7e:	3a01      	subs	r2, #1
 8008f80:	0112      	lsls	r2, r2, #4
 8008f82:	430a      	orrs	r2, r1
 8008f84:	492d      	ldr	r1, [pc, #180]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008f86:	4313      	orrs	r3, r2
 8008f88:	610b      	str	r3, [r1, #16]
 8008f8a:	e02d      	b.n	8008fe8 <RCCEx_PLLSAI1_Config+0x184>
                   ((PllSai1->PLLSAI1P >> 4U) << RCC_PLLSAI1CFGR_PLLSAI1P_Pos));
#endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */

#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }
      else if(Divider == DIVIDER_Q_UPDATE)
 8008f8c:	683b      	ldr	r3, [r7, #0]
 8008f8e:	2b01      	cmp	r3, #1
 8008f90:	d115      	bne.n	8008fbe <RCCEx_PLLSAI1_Config+0x15a>
      {
        assert_param(IS_RCC_PLLSAI1Q_VALUE(PllSai1->PLLSAI1Q));
#if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
        /* Configure the PLLSAI1 Division factor M, Q and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8008f92:	4b2a      	ldr	r3, [pc, #168]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008f94:	691a      	ldr	r2, [r3, #16]
 8008f96:	4b2b      	ldr	r3, [pc, #172]	; (8009044 <RCCEx_PLLSAI1_Config+0x1e0>)
 8008f98:	4013      	ands	r3, r2
 8008f9a:	687a      	ldr	r2, [r7, #4]
 8008f9c:	6892      	ldr	r2, [r2, #8]
 8008f9e:	0211      	lsls	r1, r2, #8
 8008fa0:	687a      	ldr	r2, [r7, #4]
 8008fa2:	6912      	ldr	r2, [r2, #16]
 8008fa4:	0852      	lsrs	r2, r2, #1
 8008fa6:	3a01      	subs	r2, #1
 8008fa8:	0552      	lsls	r2, r2, #21
 8008faa:	4311      	orrs	r1, r2
 8008fac:	687a      	ldr	r2, [r7, #4]
 8008fae:	6852      	ldr	r2, [r2, #4]
 8008fb0:	3a01      	subs	r2, #1
 8008fb2:	0112      	lsls	r2, r2, #4
 8008fb4:	430a      	orrs	r2, r1
 8008fb6:	4921      	ldr	r1, [pc, #132]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008fb8:	4313      	orrs	r3, r2
 8008fba:	610b      	str	r3, [r1, #16]
 8008fbc:	e014      	b.n	8008fe8 <RCCEx_PLLSAI1_Config+0x184>
      else
      {
        assert_param(IS_RCC_PLLSAI1R_VALUE(PllSai1->PLLSAI1R));
#if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
        /* Configure the PLLSAI1 Division factor M, R and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8008fbe:	4b1f      	ldr	r3, [pc, #124]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008fc0:	691a      	ldr	r2, [r3, #16]
 8008fc2:	4b21      	ldr	r3, [pc, #132]	; (8009048 <RCCEx_PLLSAI1_Config+0x1e4>)
 8008fc4:	4013      	ands	r3, r2
 8008fc6:	687a      	ldr	r2, [r7, #4]
 8008fc8:	6892      	ldr	r2, [r2, #8]
 8008fca:	0211      	lsls	r1, r2, #8
 8008fcc:	687a      	ldr	r2, [r7, #4]
 8008fce:	6952      	ldr	r2, [r2, #20]
 8008fd0:	0852      	lsrs	r2, r2, #1
 8008fd2:	3a01      	subs	r2, #1
 8008fd4:	0652      	lsls	r2, r2, #25
 8008fd6:	4311      	orrs	r1, r2
 8008fd8:	687a      	ldr	r2, [r7, #4]
 8008fda:	6852      	ldr	r2, [r2, #4]
 8008fdc:	3a01      	subs	r2, #1
 8008fde:	0112      	lsls	r2, r2, #4
 8008fe0:	430a      	orrs	r2, r1
 8008fe2:	4916      	ldr	r1, [pc, #88]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008fe4:	4313      	orrs	r3, r2
 8008fe6:	610b      	str	r3, [r1, #16]
                   (((PllSai1->PLLSAI1R >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1R_Pos));
#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }

      /* Enable the PLLSAI1 again by setting PLLSAI1ON to 1*/
      __HAL_RCC_PLLSAI1_ENABLE();
 8008fe8:	4b14      	ldr	r3, [pc, #80]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008fea:	681b      	ldr	r3, [r3, #0]
 8008fec:	4a13      	ldr	r2, [pc, #76]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8008fee:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8008ff2:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8008ff4:	f7fc fe60 	bl	8005cb8 <HAL_GetTick>
 8008ff8:	60b8      	str	r0, [r7, #8]

      /* Wait till PLLSAI1 is ready */
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 8008ffa:	e009      	b.n	8009010 <RCCEx_PLLSAI1_Config+0x1ac>
      {
        if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8008ffc:	f7fc fe5c 	bl	8005cb8 <HAL_GetTick>
 8009000:	4602      	mov	r2, r0
 8009002:	68bb      	ldr	r3, [r7, #8]
 8009004:	1ad3      	subs	r3, r2, r3
 8009006:	2b02      	cmp	r3, #2
 8009008:	d902      	bls.n	8009010 <RCCEx_PLLSAI1_Config+0x1ac>
        {
          status = HAL_TIMEOUT;
 800900a:	2303      	movs	r3, #3
 800900c:	73fb      	strb	r3, [r7, #15]
          break;
 800900e:	e005      	b.n	800901c <RCCEx_PLLSAI1_Config+0x1b8>
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 8009010:	4b0a      	ldr	r3, [pc, #40]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8009012:	681b      	ldr	r3, [r3, #0]
 8009014:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009018:	2b00      	cmp	r3, #0
 800901a:	d0ef      	beq.n	8008ffc <RCCEx_PLLSAI1_Config+0x198>
        }
      }

      if(status == HAL_OK)
 800901c:	7bfb      	ldrb	r3, [r7, #15]
 800901e:	2b00      	cmp	r3, #0
 8009020:	d106      	bne.n	8009030 <RCCEx_PLLSAI1_Config+0x1cc>
      {
        /* Configure the PLLSAI1 Clock output(s) */
        __HAL_RCC_PLLSAI1CLKOUT_ENABLE(PllSai1->PLLSAI1ClockOut);
 8009022:	4b06      	ldr	r3, [pc, #24]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 8009024:	691a      	ldr	r2, [r3, #16]
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	699b      	ldr	r3, [r3, #24]
 800902a:	4904      	ldr	r1, [pc, #16]	; (800903c <RCCEx_PLLSAI1_Config+0x1d8>)
 800902c:	4313      	orrs	r3, r2
 800902e:	610b      	str	r3, [r1, #16]
      }
    }
  }

  return status;
 8009030:	7bfb      	ldrb	r3, [r7, #15]
}
 8009032:	4618      	mov	r0, r3
 8009034:	3710      	adds	r7, #16
 8009036:	46bd      	mov	sp, r7
 8009038:	bd80      	pop	{r7, pc}
 800903a:	bf00      	nop
 800903c:	40021000 	.word	0x40021000
 8009040:	07ff800f 	.word	0x07ff800f
 8009044:	ff9f800f 	.word	0xff9f800f
 8009048:	f9ff800f 	.word	0xf9ff800f

0800904c <RCCEx_PLLSAI2_Config>:
  * @note   PLLSAI2 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI2_Config(RCC_PLLSAI2InitTypeDef *PllSai2, uint32_t Divider)
{
 800904c:	b580      	push	{r7, lr}
 800904e:	b084      	sub	sp, #16
 8009050:	af00      	add	r7, sp, #0
 8009052:	6078      	str	r0, [r7, #4]
 8009054:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 8009056:	2300      	movs	r3, #0
 8009058:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLLSAI2M_VALUE(PllSai2->PLLSAI2M));
  assert_param(IS_RCC_PLLSAI2N_VALUE(PllSai2->PLLSAI2N));
  assert_param(IS_RCC_PLLSAI2CLOCKOUT_VALUE(PllSai2->PLLSAI2ClockOut));

  /* Check that PLLSAI2 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 800905a:	4b72      	ldr	r3, [pc, #456]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 800905c:	68db      	ldr	r3, [r3, #12]
 800905e:	f003 0303 	and.w	r3, r3, #3
 8009062:	2b00      	cmp	r3, #0
 8009064:	d00e      	beq.n	8009084 <RCCEx_PLLSAI2_Config+0x38>
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai2->PLLSAI2Source)
 8009066:	4b6f      	ldr	r3, [pc, #444]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 8009068:	68db      	ldr	r3, [r3, #12]
 800906a:	f003 0203 	and.w	r2, r3, #3
 800906e:	687b      	ldr	r3, [r7, #4]
 8009070:	681b      	ldr	r3, [r3, #0]
 8009072:	429a      	cmp	r2, r3
 8009074:	d103      	bne.n	800907e <RCCEx_PLLSAI2_Config+0x32>
       ||
       (PllSai2->PLLSAI2Source == RCC_PLLSOURCE_NONE)
 8009076:	687b      	ldr	r3, [r7, #4]
 8009078:	681b      	ldr	r3, [r3, #0]
       ||
 800907a:	2b00      	cmp	r3, #0
 800907c:	d142      	bne.n	8009104 <RCCEx_PLLSAI2_Config+0xb8>
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai2->PLLSAI2M)
#endif
      )
    {
      status = HAL_ERROR;
 800907e:	2301      	movs	r3, #1
 8009080:	73fb      	strb	r3, [r7, #15]
 8009082:	e03f      	b.n	8009104 <RCCEx_PLLSAI2_Config+0xb8>
    }
  }
  else
  {
    /* Check PLLSAI2 clock source availability */
    switch(PllSai2->PLLSAI2Source)
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	681b      	ldr	r3, [r3, #0]
 8009088:	2b03      	cmp	r3, #3
 800908a:	d018      	beq.n	80090be <RCCEx_PLLSAI2_Config+0x72>
 800908c:	2b03      	cmp	r3, #3
 800908e:	d825      	bhi.n	80090dc <RCCEx_PLLSAI2_Config+0x90>
 8009090:	2b01      	cmp	r3, #1
 8009092:	d002      	beq.n	800909a <RCCEx_PLLSAI2_Config+0x4e>
 8009094:	2b02      	cmp	r3, #2
 8009096:	d009      	beq.n	80090ac <RCCEx_PLLSAI2_Config+0x60>
 8009098:	e020      	b.n	80090dc <RCCEx_PLLSAI2_Config+0x90>
    {
    case RCC_PLLSOURCE_MSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 800909a:	4b62      	ldr	r3, [pc, #392]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 800909c:	681b      	ldr	r3, [r3, #0]
 800909e:	f003 0302 	and.w	r3, r3, #2
 80090a2:	2b00      	cmp	r3, #0
 80090a4:	d11d      	bne.n	80090e2 <RCCEx_PLLSAI2_Config+0x96>
      {
        status = HAL_ERROR;
 80090a6:	2301      	movs	r3, #1
 80090a8:	73fb      	strb	r3, [r7, #15]
      }
      break;
 80090aa:	e01a      	b.n	80090e2 <RCCEx_PLLSAI2_Config+0x96>
    case RCC_PLLSOURCE_HSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 80090ac:	4b5d      	ldr	r3, [pc, #372]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80090ae:	681b      	ldr	r3, [r3, #0]
 80090b0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80090b4:	2b00      	cmp	r3, #0
 80090b6:	d116      	bne.n	80090e6 <RCCEx_PLLSAI2_Config+0x9a>
      {
        status = HAL_ERROR;
 80090b8:	2301      	movs	r3, #1
 80090ba:	73fb      	strb	r3, [r7, #15]
      }
      break;
 80090bc:	e013      	b.n	80090e6 <RCCEx_PLLSAI2_Config+0x9a>
    case RCC_PLLSOURCE_HSE:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
 80090be:	4b59      	ldr	r3, [pc, #356]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80090c0:	681b      	ldr	r3, [r3, #0]
 80090c2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80090c6:	2b00      	cmp	r3, #0
 80090c8:	d10f      	bne.n	80090ea <RCCEx_PLLSAI2_Config+0x9e>
      {
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 80090ca:	4b56      	ldr	r3, [pc, #344]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80090cc:	681b      	ldr	r3, [r3, #0]
 80090ce:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80090d2:	2b00      	cmp	r3, #0
 80090d4:	d109      	bne.n	80090ea <RCCEx_PLLSAI2_Config+0x9e>
        {
          status = HAL_ERROR;
 80090d6:	2301      	movs	r3, #1
 80090d8:	73fb      	strb	r3, [r7, #15]
        }
      }
      break;
 80090da:	e006      	b.n	80090ea <RCCEx_PLLSAI2_Config+0x9e>
    default:
      status = HAL_ERROR;
 80090dc:	2301      	movs	r3, #1
 80090de:	73fb      	strb	r3, [r7, #15]
      break;
 80090e0:	e004      	b.n	80090ec <RCCEx_PLLSAI2_Config+0xa0>
      break;
 80090e2:	bf00      	nop
 80090e4:	e002      	b.n	80090ec <RCCEx_PLLSAI2_Config+0xa0>
      break;
 80090e6:	bf00      	nop
 80090e8:	e000      	b.n	80090ec <RCCEx_PLLSAI2_Config+0xa0>
      break;
 80090ea:	bf00      	nop
    }

    if(status == HAL_OK)
 80090ec:	7bfb      	ldrb	r3, [r7, #15]
 80090ee:	2b00      	cmp	r3, #0
 80090f0:	d108      	bne.n	8009104 <RCCEx_PLLSAI2_Config+0xb8>
    {
#if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
      /* Set PLLSAI2 clock source */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PllSai2->PLLSAI2Source);
 80090f2:	4b4c      	ldr	r3, [pc, #304]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80090f4:	68db      	ldr	r3, [r3, #12]
 80090f6:	f023 0203 	bic.w	r2, r3, #3
 80090fa:	687b      	ldr	r3, [r7, #4]
 80090fc:	681b      	ldr	r3, [r3, #0]
 80090fe:	4949      	ldr	r1, [pc, #292]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 8009100:	4313      	orrs	r3, r2
 8009102:	60cb      	str	r3, [r1, #12]
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai2->PLLSAI2Source | (PllSai2->PLLSAI2M - 1U) << RCC_PLLCFGR_PLLM_Pos);
#endif
    }
  }

  if(status == HAL_OK)
 8009104:	7bfb      	ldrb	r3, [r7, #15]
 8009106:	2b00      	cmp	r3, #0
 8009108:	f040 8086 	bne.w	8009218 <RCCEx_PLLSAI2_Config+0x1cc>
  {
    /* Disable the PLLSAI2 */
    __HAL_RCC_PLLSAI2_DISABLE();
 800910c:	4b45      	ldr	r3, [pc, #276]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 800910e:	681b      	ldr	r3, [r3, #0]
 8009110:	4a44      	ldr	r2, [pc, #272]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 8009112:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009116:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8009118:	f7fc fdce 	bl	8005cb8 <HAL_GetTick>
 800911c:	60b8      	str	r0, [r7, #8]

    /* Wait till PLLSAI2 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 800911e:	e009      	b.n	8009134 <RCCEx_PLLSAI2_Config+0xe8>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 8009120:	f7fc fdca 	bl	8005cb8 <HAL_GetTick>
 8009124:	4602      	mov	r2, r0
 8009126:	68bb      	ldr	r3, [r7, #8]
 8009128:	1ad3      	subs	r3, r2, r3
 800912a:	2b02      	cmp	r3, #2
 800912c:	d902      	bls.n	8009134 <RCCEx_PLLSAI2_Config+0xe8>
      {
        status = HAL_TIMEOUT;
 800912e:	2303      	movs	r3, #3
 8009130:	73fb      	strb	r3, [r7, #15]
        break;
 8009132:	e005      	b.n	8009140 <RCCEx_PLLSAI2_Config+0xf4>
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 8009134:	4b3b      	ldr	r3, [pc, #236]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 8009136:	681b      	ldr	r3, [r3, #0]
 8009138:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800913c:	2b00      	cmp	r3, #0
 800913e:	d1ef      	bne.n	8009120 <RCCEx_PLLSAI2_Config+0xd4>
      }
    }

    if(status == HAL_OK)
 8009140:	7bfb      	ldrb	r3, [r7, #15]
 8009142:	2b00      	cmp	r3, #0
 8009144:	d168      	bne.n	8009218 <RCCEx_PLLSAI2_Config+0x1cc>
    {
      if(Divider == DIVIDER_P_UPDATE)
 8009146:	683b      	ldr	r3, [r7, #0]
 8009148:	2b00      	cmp	r3, #0
 800914a:	d113      	bne.n	8009174 <RCCEx_PLLSAI2_Config+0x128>
        assert_param(IS_RCC_PLLSAI2P_VALUE(PllSai2->PLLSAI2P));
#if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)

        /* Configure the PLLSAI2 Division factor M, P and Multiplication factor N*/
#if defined(RCC_PLLSAI2P_DIV_2_31_SUPPORT)
        MODIFY_REG(RCC->PLLSAI2CFGR,
 800914c:	4b35      	ldr	r3, [pc, #212]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 800914e:	695a      	ldr	r2, [r3, #20]
 8009150:	4b35      	ldr	r3, [pc, #212]	; (8009228 <RCCEx_PLLSAI2_Config+0x1dc>)
 8009152:	4013      	ands	r3, r2
 8009154:	687a      	ldr	r2, [r7, #4]
 8009156:	6892      	ldr	r2, [r2, #8]
 8009158:	0211      	lsls	r1, r2, #8
 800915a:	687a      	ldr	r2, [r7, #4]
 800915c:	68d2      	ldr	r2, [r2, #12]
 800915e:	06d2      	lsls	r2, r2, #27
 8009160:	4311      	orrs	r1, r2
 8009162:	687a      	ldr	r2, [r7, #4]
 8009164:	6852      	ldr	r2, [r2, #4]
 8009166:	3a01      	subs	r2, #1
 8009168:	0112      	lsls	r2, r2, #4
 800916a:	430a      	orrs	r2, r1
 800916c:	492d      	ldr	r1, [pc, #180]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 800916e:	4313      	orrs	r3, r2
 8009170:	614b      	str	r3, [r1, #20]
 8009172:	e02d      	b.n	80091d0 <RCCEx_PLLSAI2_Config+0x184>
#endif /* RCC_PLLSAI2P_DIV_2_31_SUPPORT */

#endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT */
      }
#if defined(RCC_PLLSAI2Q_DIV_SUPPORT)
      else if(Divider == DIVIDER_Q_UPDATE)
 8009174:	683b      	ldr	r3, [r7, #0]
 8009176:	2b01      	cmp	r3, #1
 8009178:	d115      	bne.n	80091a6 <RCCEx_PLLSAI2_Config+0x15a>
      {
        assert_param(IS_RCC_PLLSAI2Q_VALUE(PllSai2->PLLSAI2Q));
#if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
        /* Configure the PLLSAI2 Division factor M, Q and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI2CFGR,
 800917a:	4b2a      	ldr	r3, [pc, #168]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 800917c:	695a      	ldr	r2, [r3, #20]
 800917e:	4b2b      	ldr	r3, [pc, #172]	; (800922c <RCCEx_PLLSAI2_Config+0x1e0>)
 8009180:	4013      	ands	r3, r2
 8009182:	687a      	ldr	r2, [r7, #4]
 8009184:	6892      	ldr	r2, [r2, #8]
 8009186:	0211      	lsls	r1, r2, #8
 8009188:	687a      	ldr	r2, [r7, #4]
 800918a:	6912      	ldr	r2, [r2, #16]
 800918c:	0852      	lsrs	r2, r2, #1
 800918e:	3a01      	subs	r2, #1
 8009190:	0552      	lsls	r2, r2, #21
 8009192:	4311      	orrs	r1, r2
 8009194:	687a      	ldr	r2, [r7, #4]
 8009196:	6852      	ldr	r2, [r2, #4]
 8009198:	3a01      	subs	r2, #1
 800919a:	0112      	lsls	r2, r2, #4
 800919c:	430a      	orrs	r2, r1
 800919e:	4921      	ldr	r1, [pc, #132]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80091a0:	4313      	orrs	r3, r2
 80091a2:	614b      	str	r3, [r1, #20]
 80091a4:	e014      	b.n	80091d0 <RCCEx_PLLSAI2_Config+0x184>
      else
      {
        assert_param(IS_RCC_PLLSAI2R_VALUE(PllSai2->PLLSAI2R));
#if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
        /* Configure the PLLSAI2 Division factor M, R and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI2CFGR,
 80091a6:	4b1f      	ldr	r3, [pc, #124]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80091a8:	695a      	ldr	r2, [r3, #20]
 80091aa:	4b21      	ldr	r3, [pc, #132]	; (8009230 <RCCEx_PLLSAI2_Config+0x1e4>)
 80091ac:	4013      	ands	r3, r2
 80091ae:	687a      	ldr	r2, [r7, #4]
 80091b0:	6892      	ldr	r2, [r2, #8]
 80091b2:	0211      	lsls	r1, r2, #8
 80091b4:	687a      	ldr	r2, [r7, #4]
 80091b6:	6952      	ldr	r2, [r2, #20]
 80091b8:	0852      	lsrs	r2, r2, #1
 80091ba:	3a01      	subs	r2, #1
 80091bc:	0652      	lsls	r2, r2, #25
 80091be:	4311      	orrs	r1, r2
 80091c0:	687a      	ldr	r2, [r7, #4]
 80091c2:	6852      	ldr	r2, [r2, #4]
 80091c4:	3a01      	subs	r2, #1
 80091c6:	0112      	lsls	r2, r2, #4
 80091c8:	430a      	orrs	r2, r1
 80091ca:	4916      	ldr	r1, [pc, #88]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80091cc:	4313      	orrs	r3, r2
 80091ce:	614b      	str	r3, [r1, #20]
                   (((PllSai2->PLLSAI2R >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2R_Pos));
#endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT */
      }

      /* Enable the PLLSAI2 again by setting PLLSAI2ON to 1*/
      __HAL_RCC_PLLSAI2_ENABLE();
 80091d0:	4b14      	ldr	r3, [pc, #80]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80091d2:	681b      	ldr	r3, [r3, #0]
 80091d4:	4a13      	ldr	r2, [pc, #76]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80091d6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80091da:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80091dc:	f7fc fd6c 	bl	8005cb8 <HAL_GetTick>
 80091e0:	60b8      	str	r0, [r7, #8]

      /* Wait till PLLSAI2 is ready */
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 80091e2:	e009      	b.n	80091f8 <RCCEx_PLLSAI2_Config+0x1ac>
      {
        if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 80091e4:	f7fc fd68 	bl	8005cb8 <HAL_GetTick>
 80091e8:	4602      	mov	r2, r0
 80091ea:	68bb      	ldr	r3, [r7, #8]
 80091ec:	1ad3      	subs	r3, r2, r3
 80091ee:	2b02      	cmp	r3, #2
 80091f0:	d902      	bls.n	80091f8 <RCCEx_PLLSAI2_Config+0x1ac>
        {
          status = HAL_TIMEOUT;
 80091f2:	2303      	movs	r3, #3
 80091f4:	73fb      	strb	r3, [r7, #15]
          break;
 80091f6:	e005      	b.n	8009204 <RCCEx_PLLSAI2_Config+0x1b8>
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 80091f8:	4b0a      	ldr	r3, [pc, #40]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 80091fa:	681b      	ldr	r3, [r3, #0]
 80091fc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009200:	2b00      	cmp	r3, #0
 8009202:	d0ef      	beq.n	80091e4 <RCCEx_PLLSAI2_Config+0x198>
        }
      }

      if(status == HAL_OK)
 8009204:	7bfb      	ldrb	r3, [r7, #15]
 8009206:	2b00      	cmp	r3, #0
 8009208:	d106      	bne.n	8009218 <RCCEx_PLLSAI2_Config+0x1cc>
      {
        /* Configure the PLLSAI2 Clock output(s) */
        __HAL_RCC_PLLSAI2CLKOUT_ENABLE(PllSai2->PLLSAI2ClockOut);
 800920a:	4b06      	ldr	r3, [pc, #24]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 800920c:	695a      	ldr	r2, [r3, #20]
 800920e:	687b      	ldr	r3, [r7, #4]
 8009210:	699b      	ldr	r3, [r3, #24]
 8009212:	4904      	ldr	r1, [pc, #16]	; (8009224 <RCCEx_PLLSAI2_Config+0x1d8>)
 8009214:	4313      	orrs	r3, r2
 8009216:	614b      	str	r3, [r1, #20]
      }
    }
  }

  return status;
 8009218:	7bfb      	ldrb	r3, [r7, #15]
}
 800921a:	4618      	mov	r0, r3
 800921c:	3710      	adds	r7, #16
 800921e:	46bd      	mov	sp, r7
 8009220:	bd80      	pop	{r7, pc}
 8009222:	bf00      	nop
 8009224:	40021000 	.word	0x40021000
 8009228:	07ff800f 	.word	0x07ff800f
 800922c:	ff9f800f 	.word	0xff9f800f
 8009230:	f9ff800f 	.word	0xf9ff800f

08009234 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8009234:	b580      	push	{r7, lr}
 8009236:	b084      	sub	sp, #16
 8009238:	af00      	add	r7, sp, #0
 800923a:	6078      	str	r0, [r7, #4]
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	2b00      	cmp	r3, #0
 8009240:	d101      	bne.n	8009246 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8009242:	2301      	movs	r3, #1
 8009244:	e095      	b.n	8009372 <HAL_SPI_Init+0x13e>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8009246:	687b      	ldr	r3, [r7, #4]
 8009248:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800924a:	2b00      	cmp	r3, #0
 800924c:	d108      	bne.n	8009260 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800924e:	687b      	ldr	r3, [r7, #4]
 8009250:	685b      	ldr	r3, [r3, #4]
 8009252:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009256:	d009      	beq.n	800926c <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8009258:	687b      	ldr	r3, [r7, #4]
 800925a:	2200      	movs	r2, #0
 800925c:	61da      	str	r2, [r3, #28]
 800925e:	e005      	b.n	800926c <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8009260:	687b      	ldr	r3, [r7, #4]
 8009262:	2200      	movs	r2, #0
 8009264:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	2200      	movs	r2, #0
 800926a:	615a      	str	r2, [r3, #20]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800926c:	687b      	ldr	r3, [r7, #4]
 800926e:	2200      	movs	r2, #0
 8009270:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8009272:	687b      	ldr	r3, [r7, #4]
 8009274:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8009278:	b2db      	uxtb	r3, r3
 800927a:	2b00      	cmp	r3, #0
 800927c:	d106      	bne.n	800928c <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	2200      	movs	r2, #0
 8009282:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8009286:	6878      	ldr	r0, [r7, #4]
 8009288:	f7fb fb4e 	bl	8004928 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800928c:	687b      	ldr	r3, [r7, #4]
 800928e:	2202      	movs	r2, #2
 8009290:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8009294:	687b      	ldr	r3, [r7, #4]
 8009296:	681b      	ldr	r3, [r3, #0]
 8009298:	681a      	ldr	r2, [r3, #0]
 800929a:	687b      	ldr	r3, [r7, #4]
 800929c:	681b      	ldr	r3, [r3, #0]
 800929e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80092a2:	601a      	str	r2, [r3, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80092a4:	687b      	ldr	r3, [r7, #4]
 80092a6:	68db      	ldr	r3, [r3, #12]
 80092a8:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80092ac:	d902      	bls.n	80092b4 <HAL_SPI_Init+0x80>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 80092ae:	2300      	movs	r3, #0
 80092b0:	60fb      	str	r3, [r7, #12]
 80092b2:	e002      	b.n	80092ba <HAL_SPI_Init+0x86>
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 80092b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80092b8:	60fb      	str	r3, [r7, #12]
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	68db      	ldr	r3, [r3, #12]
 80092be:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 80092c2:	d007      	beq.n	80092d4 <HAL_SPI_Init+0xa0>
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	68db      	ldr	r3, [r3, #12]
 80092c8:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80092cc:	d002      	beq.n	80092d4 <HAL_SPI_Init+0xa0>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80092ce:	687b      	ldr	r3, [r7, #4]
 80092d0:	2200      	movs	r2, #0
 80092d2:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80092d4:	687b      	ldr	r3, [r7, #4]
 80092d6:	685b      	ldr	r3, [r3, #4]
 80092d8:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80092dc:	687b      	ldr	r3, [r7, #4]
 80092de:	689b      	ldr	r3, [r3, #8]
 80092e0:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80092e4:	431a      	orrs	r2, r3
 80092e6:	687b      	ldr	r3, [r7, #4]
 80092e8:	691b      	ldr	r3, [r3, #16]
 80092ea:	f003 0302 	and.w	r3, r3, #2
 80092ee:	431a      	orrs	r2, r3
 80092f0:	687b      	ldr	r3, [r7, #4]
 80092f2:	695b      	ldr	r3, [r3, #20]
 80092f4:	f003 0301 	and.w	r3, r3, #1
 80092f8:	431a      	orrs	r2, r3
 80092fa:	687b      	ldr	r3, [r7, #4]
 80092fc:	699b      	ldr	r3, [r3, #24]
 80092fe:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8009302:	431a      	orrs	r2, r3
 8009304:	687b      	ldr	r3, [r7, #4]
 8009306:	69db      	ldr	r3, [r3, #28]
 8009308:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800930c:	431a      	orrs	r2, r3
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	6a1b      	ldr	r3, [r3, #32]
 8009312:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009316:	ea42 0103 	orr.w	r1, r2, r3
 800931a:	687b      	ldr	r3, [r7, #4]
 800931c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800931e:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8009322:	687b      	ldr	r3, [r7, #4]
 8009324:	681b      	ldr	r3, [r3, #0]
 8009326:	430a      	orrs	r2, r1
 8009328:	601a      	str	r2, [r3, #0]
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 800932a:	687b      	ldr	r3, [r7, #4]
 800932c:	699b      	ldr	r3, [r3, #24]
 800932e:	0c1b      	lsrs	r3, r3, #16
 8009330:	f003 0204 	and.w	r2, r3, #4
 8009334:	687b      	ldr	r3, [r7, #4]
 8009336:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009338:	f003 0310 	and.w	r3, r3, #16
 800933c:	431a      	orrs	r2, r3
 800933e:	687b      	ldr	r3, [r7, #4]
 8009340:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009342:	f003 0308 	and.w	r3, r3, #8
 8009346:	431a      	orrs	r2, r3
 8009348:	687b      	ldr	r3, [r7, #4]
 800934a:	68db      	ldr	r3, [r3, #12]
 800934c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8009350:	ea42 0103 	orr.w	r1, r2, r3
 8009354:	68fb      	ldr	r3, [r7, #12]
 8009356:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 800935a:	687b      	ldr	r3, [r7, #4]
 800935c:	681b      	ldr	r3, [r3, #0]
 800935e:	430a      	orrs	r2, r1
 8009360:	605a      	str	r2, [r3, #4]
#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8009362:	687b      	ldr	r3, [r7, #4]
 8009364:	2200      	movs	r2, #0
 8009366:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8009368:	687b      	ldr	r3, [r7, #4]
 800936a:	2201      	movs	r2, #1
 800936c:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  return HAL_OK;
 8009370:	2300      	movs	r3, #0
}
 8009372:	4618      	mov	r0, r3
 8009374:	3710      	adds	r7, #16
 8009376:	46bd      	mov	sp, r7
 8009378:	bd80      	pop	{r7, pc}

0800937a <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800937a:	b580      	push	{r7, lr}
 800937c:	b088      	sub	sp, #32
 800937e:	af00      	add	r7, sp, #0
 8009380:	60f8      	str	r0, [r7, #12]
 8009382:	60b9      	str	r1, [r7, #8]
 8009384:	603b      	str	r3, [r7, #0]
 8009386:	4613      	mov	r3, r2
 8009388:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 800938a:	2300      	movs	r3, #0
 800938c:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 800938e:	68fb      	ldr	r3, [r7, #12]
 8009390:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8009394:	2b01      	cmp	r3, #1
 8009396:	d101      	bne.n	800939c <HAL_SPI_Transmit+0x22>
 8009398:	2302      	movs	r3, #2
 800939a:	e15f      	b.n	800965c <HAL_SPI_Transmit+0x2e2>
 800939c:	68fb      	ldr	r3, [r7, #12]
 800939e:	2201      	movs	r2, #1
 80093a0:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80093a4:	f7fc fc88 	bl	8005cb8 <HAL_GetTick>
 80093a8:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 80093aa:	88fb      	ldrh	r3, [r7, #6]
 80093ac:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 80093ae:	68fb      	ldr	r3, [r7, #12]
 80093b0:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80093b4:	b2db      	uxtb	r3, r3
 80093b6:	2b01      	cmp	r3, #1
 80093b8:	d002      	beq.n	80093c0 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 80093ba:	2302      	movs	r3, #2
 80093bc:	77fb      	strb	r3, [r7, #31]
    goto error;
 80093be:	e148      	b.n	8009652 <HAL_SPI_Transmit+0x2d8>
  }

  if ((pData == NULL) || (Size == 0U))
 80093c0:	68bb      	ldr	r3, [r7, #8]
 80093c2:	2b00      	cmp	r3, #0
 80093c4:	d002      	beq.n	80093cc <HAL_SPI_Transmit+0x52>
 80093c6:	88fb      	ldrh	r3, [r7, #6]
 80093c8:	2b00      	cmp	r3, #0
 80093ca:	d102      	bne.n	80093d2 <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 80093cc:	2301      	movs	r3, #1
 80093ce:	77fb      	strb	r3, [r7, #31]
    goto error;
 80093d0:	e13f      	b.n	8009652 <HAL_SPI_Transmit+0x2d8>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80093d2:	68fb      	ldr	r3, [r7, #12]
 80093d4:	2203      	movs	r2, #3
 80093d6:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80093da:	68fb      	ldr	r3, [r7, #12]
 80093dc:	2200      	movs	r2, #0
 80093de:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80093e0:	68fb      	ldr	r3, [r7, #12]
 80093e2:	68ba      	ldr	r2, [r7, #8]
 80093e4:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxXferSize  = Size;
 80093e6:	68fb      	ldr	r3, [r7, #12]
 80093e8:	88fa      	ldrh	r2, [r7, #6]
 80093ea:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->TxXferCount = Size;
 80093ec:	68fb      	ldr	r3, [r7, #12]
 80093ee:	88fa      	ldrh	r2, [r7, #6]
 80093f0:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80093f2:	68fb      	ldr	r3, [r7, #12]
 80093f4:	2200      	movs	r2, #0
 80093f6:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferSize  = 0U;
 80093f8:	68fb      	ldr	r3, [r7, #12]
 80093fa:	2200      	movs	r2, #0
 80093fc:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  hspi->RxXferCount = 0U;
 8009400:	68fb      	ldr	r3, [r7, #12]
 8009402:	2200      	movs	r2, #0
 8009404:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
  hspi->TxISR       = NULL;
 8009408:	68fb      	ldr	r3, [r7, #12]
 800940a:	2200      	movs	r2, #0
 800940c:	651a      	str	r2, [r3, #80]	; 0x50
  hspi->RxISR       = NULL;
 800940e:	68fb      	ldr	r3, [r7, #12]
 8009410:	2200      	movs	r2, #0
 8009412:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009414:	68fb      	ldr	r3, [r7, #12]
 8009416:	689b      	ldr	r3, [r3, #8]
 8009418:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800941c:	d10f      	bne.n	800943e <HAL_SPI_Transmit+0xc4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 800941e:	68fb      	ldr	r3, [r7, #12]
 8009420:	681b      	ldr	r3, [r3, #0]
 8009422:	681a      	ldr	r2, [r3, #0]
 8009424:	68fb      	ldr	r3, [r7, #12]
 8009426:	681b      	ldr	r3, [r3, #0]
 8009428:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800942c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 800942e:	68fb      	ldr	r3, [r7, #12]
 8009430:	681b      	ldr	r3, [r3, #0]
 8009432:	681a      	ldr	r2, [r3, #0]
 8009434:	68fb      	ldr	r3, [r7, #12]
 8009436:	681b      	ldr	r3, [r3, #0]
 8009438:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800943c:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800943e:	68fb      	ldr	r3, [r7, #12]
 8009440:	681b      	ldr	r3, [r3, #0]
 8009442:	681b      	ldr	r3, [r3, #0]
 8009444:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009448:	2b40      	cmp	r3, #64	; 0x40
 800944a:	d007      	beq.n	800945c <HAL_SPI_Transmit+0xe2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800944c:	68fb      	ldr	r3, [r7, #12]
 800944e:	681b      	ldr	r3, [r3, #0]
 8009450:	681a      	ldr	r2, [r3, #0]
 8009452:	68fb      	ldr	r3, [r7, #12]
 8009454:	681b      	ldr	r3, [r3, #0]
 8009456:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800945a:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800945c:	68fb      	ldr	r3, [r7, #12]
 800945e:	68db      	ldr	r3, [r3, #12]
 8009460:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8009464:	d94f      	bls.n	8009506 <HAL_SPI_Transmit+0x18c>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009466:	68fb      	ldr	r3, [r7, #12]
 8009468:	685b      	ldr	r3, [r3, #4]
 800946a:	2b00      	cmp	r3, #0
 800946c:	d002      	beq.n	8009474 <HAL_SPI_Transmit+0xfa>
 800946e:	8afb      	ldrh	r3, [r7, #22]
 8009470:	2b01      	cmp	r3, #1
 8009472:	d142      	bne.n	80094fa <HAL_SPI_Transmit+0x180>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8009474:	68fb      	ldr	r3, [r7, #12]
 8009476:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009478:	881a      	ldrh	r2, [r3, #0]
 800947a:	68fb      	ldr	r3, [r7, #12]
 800947c:	681b      	ldr	r3, [r3, #0]
 800947e:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8009480:	68fb      	ldr	r3, [r7, #12]
 8009482:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009484:	1c9a      	adds	r2, r3, #2
 8009486:	68fb      	ldr	r3, [r7, #12]
 8009488:	639a      	str	r2, [r3, #56]	; 0x38
      hspi->TxXferCount--;
 800948a:	68fb      	ldr	r3, [r7, #12]
 800948c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800948e:	b29b      	uxth	r3, r3
 8009490:	3b01      	subs	r3, #1
 8009492:	b29a      	uxth	r2, r3
 8009494:	68fb      	ldr	r3, [r7, #12]
 8009496:	87da      	strh	r2, [r3, #62]	; 0x3e
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8009498:	e02f      	b.n	80094fa <HAL_SPI_Transmit+0x180>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800949a:	68fb      	ldr	r3, [r7, #12]
 800949c:	681b      	ldr	r3, [r3, #0]
 800949e:	689b      	ldr	r3, [r3, #8]
 80094a0:	f003 0302 	and.w	r3, r3, #2
 80094a4:	2b02      	cmp	r3, #2
 80094a6:	d112      	bne.n	80094ce <HAL_SPI_Transmit+0x154>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80094a8:	68fb      	ldr	r3, [r7, #12]
 80094aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80094ac:	881a      	ldrh	r2, [r3, #0]
 80094ae:	68fb      	ldr	r3, [r7, #12]
 80094b0:	681b      	ldr	r3, [r3, #0]
 80094b2:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80094b4:	68fb      	ldr	r3, [r7, #12]
 80094b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80094b8:	1c9a      	adds	r2, r3, #2
 80094ba:	68fb      	ldr	r3, [r7, #12]
 80094bc:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 80094be:	68fb      	ldr	r3, [r7, #12]
 80094c0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80094c2:	b29b      	uxth	r3, r3
 80094c4:	3b01      	subs	r3, #1
 80094c6:	b29a      	uxth	r2, r3
 80094c8:	68fb      	ldr	r3, [r7, #12]
 80094ca:	87da      	strh	r2, [r3, #62]	; 0x3e
 80094cc:	e015      	b.n	80094fa <HAL_SPI_Transmit+0x180>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80094ce:	f7fc fbf3 	bl	8005cb8 <HAL_GetTick>
 80094d2:	4602      	mov	r2, r0
 80094d4:	69bb      	ldr	r3, [r7, #24]
 80094d6:	1ad3      	subs	r3, r2, r3
 80094d8:	683a      	ldr	r2, [r7, #0]
 80094da:	429a      	cmp	r2, r3
 80094dc:	d803      	bhi.n	80094e6 <HAL_SPI_Transmit+0x16c>
 80094de:	683b      	ldr	r3, [r7, #0]
 80094e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80094e4:	d102      	bne.n	80094ec <HAL_SPI_Transmit+0x172>
 80094e6:	683b      	ldr	r3, [r7, #0]
 80094e8:	2b00      	cmp	r3, #0
 80094ea:	d106      	bne.n	80094fa <HAL_SPI_Transmit+0x180>
        {
          errorcode = HAL_TIMEOUT;
 80094ec:	2303      	movs	r3, #3
 80094ee:	77fb      	strb	r3, [r7, #31]
          hspi->State = HAL_SPI_STATE_READY;
 80094f0:	68fb      	ldr	r3, [r7, #12]
 80094f2:	2201      	movs	r2, #1
 80094f4:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
          goto error;
 80094f8:	e0ab      	b.n	8009652 <HAL_SPI_Transmit+0x2d8>
    while (hspi->TxXferCount > 0U)
 80094fa:	68fb      	ldr	r3, [r7, #12]
 80094fc:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80094fe:	b29b      	uxth	r3, r3
 8009500:	2b00      	cmp	r3, #0
 8009502:	d1ca      	bne.n	800949a <HAL_SPI_Transmit+0x120>
 8009504:	e080      	b.n	8009608 <HAL_SPI_Transmit+0x28e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009506:	68fb      	ldr	r3, [r7, #12]
 8009508:	685b      	ldr	r3, [r3, #4]
 800950a:	2b00      	cmp	r3, #0
 800950c:	d002      	beq.n	8009514 <HAL_SPI_Transmit+0x19a>
 800950e:	8afb      	ldrh	r3, [r7, #22]
 8009510:	2b01      	cmp	r3, #1
 8009512:	d174      	bne.n	80095fe <HAL_SPI_Transmit+0x284>
    {
      if (hspi->TxXferCount > 1U)
 8009514:	68fb      	ldr	r3, [r7, #12]
 8009516:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009518:	b29b      	uxth	r3, r3
 800951a:	2b01      	cmp	r3, #1
 800951c:	d912      	bls.n	8009544 <HAL_SPI_Transmit+0x1ca>
      {
        /* write on the data register in packing mode */
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800951e:	68fb      	ldr	r3, [r7, #12]
 8009520:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009522:	881a      	ldrh	r2, [r3, #0]
 8009524:	68fb      	ldr	r3, [r7, #12]
 8009526:	681b      	ldr	r3, [r3, #0]
 8009528:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800952a:	68fb      	ldr	r3, [r7, #12]
 800952c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800952e:	1c9a      	adds	r2, r3, #2
 8009530:	68fb      	ldr	r3, [r7, #12]
 8009532:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount -= 2U;
 8009534:	68fb      	ldr	r3, [r7, #12]
 8009536:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009538:	b29b      	uxth	r3, r3
 800953a:	3b02      	subs	r3, #2
 800953c:	b29a      	uxth	r2, r3
 800953e:	68fb      	ldr	r3, [r7, #12]
 8009540:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009542:	e05c      	b.n	80095fe <HAL_SPI_Transmit+0x284>
      }
      else
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8009544:	68fb      	ldr	r3, [r7, #12]
 8009546:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009548:	68fb      	ldr	r3, [r7, #12]
 800954a:	681b      	ldr	r3, [r3, #0]
 800954c:	330c      	adds	r3, #12
 800954e:	7812      	ldrb	r2, [r2, #0]
 8009550:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr ++;
 8009552:	68fb      	ldr	r3, [r7, #12]
 8009554:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009556:	1c5a      	adds	r2, r3, #1
 8009558:	68fb      	ldr	r3, [r7, #12]
 800955a:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 800955c:	68fb      	ldr	r3, [r7, #12]
 800955e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009560:	b29b      	uxth	r3, r3
 8009562:	3b01      	subs	r3, #1
 8009564:	b29a      	uxth	r2, r3
 8009566:	68fb      	ldr	r3, [r7, #12]
 8009568:	87da      	strh	r2, [r3, #62]	; 0x3e
      }
    }
    while (hspi->TxXferCount > 0U)
 800956a:	e048      	b.n	80095fe <HAL_SPI_Transmit+0x284>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800956c:	68fb      	ldr	r3, [r7, #12]
 800956e:	681b      	ldr	r3, [r3, #0]
 8009570:	689b      	ldr	r3, [r3, #8]
 8009572:	f003 0302 	and.w	r3, r3, #2
 8009576:	2b02      	cmp	r3, #2
 8009578:	d12b      	bne.n	80095d2 <HAL_SPI_Transmit+0x258>
      {
        if (hspi->TxXferCount > 1U)
 800957a:	68fb      	ldr	r3, [r7, #12]
 800957c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800957e:	b29b      	uxth	r3, r3
 8009580:	2b01      	cmp	r3, #1
 8009582:	d912      	bls.n	80095aa <HAL_SPI_Transmit+0x230>
        {
          /* write on the data register in packing mode */
          hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8009584:	68fb      	ldr	r3, [r7, #12]
 8009586:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009588:	881a      	ldrh	r2, [r3, #0]
 800958a:	68fb      	ldr	r3, [r7, #12]
 800958c:	681b      	ldr	r3, [r3, #0]
 800958e:	60da      	str	r2, [r3, #12]
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8009590:	68fb      	ldr	r3, [r7, #12]
 8009592:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009594:	1c9a      	adds	r2, r3, #2
 8009596:	68fb      	ldr	r3, [r7, #12]
 8009598:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount -= 2U;
 800959a:	68fb      	ldr	r3, [r7, #12]
 800959c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800959e:	b29b      	uxth	r3, r3
 80095a0:	3b02      	subs	r3, #2
 80095a2:	b29a      	uxth	r2, r3
 80095a4:	68fb      	ldr	r3, [r7, #12]
 80095a6:	87da      	strh	r2, [r3, #62]	; 0x3e
 80095a8:	e029      	b.n	80095fe <HAL_SPI_Transmit+0x284>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80095aa:	68fb      	ldr	r3, [r7, #12]
 80095ac:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80095ae:	68fb      	ldr	r3, [r7, #12]
 80095b0:	681b      	ldr	r3, [r3, #0]
 80095b2:	330c      	adds	r3, #12
 80095b4:	7812      	ldrb	r2, [r2, #0]
 80095b6:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr++;
 80095b8:	68fb      	ldr	r3, [r7, #12]
 80095ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80095bc:	1c5a      	adds	r2, r3, #1
 80095be:	68fb      	ldr	r3, [r7, #12]
 80095c0:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount--;
 80095c2:	68fb      	ldr	r3, [r7, #12]
 80095c4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80095c6:	b29b      	uxth	r3, r3
 80095c8:	3b01      	subs	r3, #1
 80095ca:	b29a      	uxth	r2, r3
 80095cc:	68fb      	ldr	r3, [r7, #12]
 80095ce:	87da      	strh	r2, [r3, #62]	; 0x3e
 80095d0:	e015      	b.n	80095fe <HAL_SPI_Transmit+0x284>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80095d2:	f7fc fb71 	bl	8005cb8 <HAL_GetTick>
 80095d6:	4602      	mov	r2, r0
 80095d8:	69bb      	ldr	r3, [r7, #24]
 80095da:	1ad3      	subs	r3, r2, r3
 80095dc:	683a      	ldr	r2, [r7, #0]
 80095de:	429a      	cmp	r2, r3
 80095e0:	d803      	bhi.n	80095ea <HAL_SPI_Transmit+0x270>
 80095e2:	683b      	ldr	r3, [r7, #0]
 80095e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80095e8:	d102      	bne.n	80095f0 <HAL_SPI_Transmit+0x276>
 80095ea:	683b      	ldr	r3, [r7, #0]
 80095ec:	2b00      	cmp	r3, #0
 80095ee:	d106      	bne.n	80095fe <HAL_SPI_Transmit+0x284>
        {
          errorcode = HAL_TIMEOUT;
 80095f0:	2303      	movs	r3, #3
 80095f2:	77fb      	strb	r3, [r7, #31]
          hspi->State = HAL_SPI_STATE_READY;
 80095f4:	68fb      	ldr	r3, [r7, #12]
 80095f6:	2201      	movs	r2, #1
 80095f8:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
          goto error;
 80095fc:	e029      	b.n	8009652 <HAL_SPI_Transmit+0x2d8>
    while (hspi->TxXferCount > 0U)
 80095fe:	68fb      	ldr	r3, [r7, #12]
 8009600:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009602:	b29b      	uxth	r3, r3
 8009604:	2b00      	cmp	r3, #0
 8009606:	d1b1      	bne.n	800956c <HAL_SPI_Transmit+0x1f2>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8009608:	69ba      	ldr	r2, [r7, #24]
 800960a:	6839      	ldr	r1, [r7, #0]
 800960c:	68f8      	ldr	r0, [r7, #12]
 800960e:	f000 ff7d 	bl	800a50c <SPI_EndRxTxTransaction>
 8009612:	4603      	mov	r3, r0
 8009614:	2b00      	cmp	r3, #0
 8009616:	d002      	beq.n	800961e <HAL_SPI_Transmit+0x2a4>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8009618:	68fb      	ldr	r3, [r7, #12]
 800961a:	2220      	movs	r2, #32
 800961c:	661a      	str	r2, [r3, #96]	; 0x60
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800961e:	68fb      	ldr	r3, [r7, #12]
 8009620:	689b      	ldr	r3, [r3, #8]
 8009622:	2b00      	cmp	r3, #0
 8009624:	d10a      	bne.n	800963c <HAL_SPI_Transmit+0x2c2>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8009626:	2300      	movs	r3, #0
 8009628:	613b      	str	r3, [r7, #16]
 800962a:	68fb      	ldr	r3, [r7, #12]
 800962c:	681b      	ldr	r3, [r3, #0]
 800962e:	68db      	ldr	r3, [r3, #12]
 8009630:	613b      	str	r3, [r7, #16]
 8009632:	68fb      	ldr	r3, [r7, #12]
 8009634:	681b      	ldr	r3, [r3, #0]
 8009636:	689b      	ldr	r3, [r3, #8]
 8009638:	613b      	str	r3, [r7, #16]
 800963a:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800963c:	68fb      	ldr	r3, [r7, #12]
 800963e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009640:	2b00      	cmp	r3, #0
 8009642:	d002      	beq.n	800964a <HAL_SPI_Transmit+0x2d0>
  {
    errorcode = HAL_ERROR;
 8009644:	2301      	movs	r3, #1
 8009646:	77fb      	strb	r3, [r7, #31]
 8009648:	e003      	b.n	8009652 <HAL_SPI_Transmit+0x2d8>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 800964a:	68fb      	ldr	r3, [r7, #12]
 800964c:	2201      	movs	r2, #1
 800964e:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  }

error:
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8009652:	68fb      	ldr	r3, [r7, #12]
 8009654:	2200      	movs	r2, #0
 8009656:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  return errorcode;
 800965a:	7ffb      	ldrb	r3, [r7, #31]
}
 800965c:	4618      	mov	r0, r3
 800965e:	3720      	adds	r7, #32
 8009660:	46bd      	mov	sp, r7
 8009662:	bd80      	pop	{r7, pc}

08009664 <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8009664:	b580      	push	{r7, lr}
 8009666:	b088      	sub	sp, #32
 8009668:	af02      	add	r7, sp, #8
 800966a:	60f8      	str	r0, [r7, #12]
 800966c:	60b9      	str	r1, [r7, #8]
 800966e:	603b      	str	r3, [r7, #0]
 8009670:	4613      	mov	r3, r2
 8009672:	80fb      	strh	r3, [r7, #6]
  __IO uint32_t tmpreg = 0U;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8009674:	2300      	movs	r3, #0
 8009676:	75fb      	strb	r3, [r7, #23]

  if (hspi->State != HAL_SPI_STATE_READY)
 8009678:	68fb      	ldr	r3, [r7, #12]
 800967a:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 800967e:	b2db      	uxtb	r3, r3
 8009680:	2b01      	cmp	r3, #1
 8009682:	d002      	beq.n	800968a <HAL_SPI_Receive+0x26>
  {
    errorcode = HAL_BUSY;
 8009684:	2302      	movs	r3, #2
 8009686:	75fb      	strb	r3, [r7, #23]
    goto error;
 8009688:	e11a      	b.n	80098c0 <HAL_SPI_Receive+0x25c>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800968a:	68fb      	ldr	r3, [r7, #12]
 800968c:	685b      	ldr	r3, [r3, #4]
 800968e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009692:	d112      	bne.n	80096ba <HAL_SPI_Receive+0x56>
 8009694:	68fb      	ldr	r3, [r7, #12]
 8009696:	689b      	ldr	r3, [r3, #8]
 8009698:	2b00      	cmp	r3, #0
 800969a:	d10e      	bne.n	80096ba <HAL_SPI_Receive+0x56>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800969c:	68fb      	ldr	r3, [r7, #12]
 800969e:	2204      	movs	r2, #4
 80096a0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80096a4:	88fa      	ldrh	r2, [r7, #6]
 80096a6:	683b      	ldr	r3, [r7, #0]
 80096a8:	9300      	str	r3, [sp, #0]
 80096aa:	4613      	mov	r3, r2
 80096ac:	68ba      	ldr	r2, [r7, #8]
 80096ae:	68b9      	ldr	r1, [r7, #8]
 80096b0:	68f8      	ldr	r0, [r7, #12]
 80096b2:	f000 f90e 	bl	80098d2 <HAL_SPI_TransmitReceive>
 80096b6:	4603      	mov	r3, r0
 80096b8:	e107      	b.n	80098ca <HAL_SPI_Receive+0x266>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80096ba:	68fb      	ldr	r3, [r7, #12]
 80096bc:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80096c0:	2b01      	cmp	r3, #1
 80096c2:	d101      	bne.n	80096c8 <HAL_SPI_Receive+0x64>
 80096c4:	2302      	movs	r3, #2
 80096c6:	e100      	b.n	80098ca <HAL_SPI_Receive+0x266>
 80096c8:	68fb      	ldr	r3, [r7, #12]
 80096ca:	2201      	movs	r2, #1
 80096cc:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80096d0:	f7fc faf2 	bl	8005cb8 <HAL_GetTick>
 80096d4:	6138      	str	r0, [r7, #16]

  if ((pData == NULL) || (Size == 0U))
 80096d6:	68bb      	ldr	r3, [r7, #8]
 80096d8:	2b00      	cmp	r3, #0
 80096da:	d002      	beq.n	80096e2 <HAL_SPI_Receive+0x7e>
 80096dc:	88fb      	ldrh	r3, [r7, #6]
 80096de:	2b00      	cmp	r3, #0
 80096e0:	d102      	bne.n	80096e8 <HAL_SPI_Receive+0x84>
  {
    errorcode = HAL_ERROR;
 80096e2:	2301      	movs	r3, #1
 80096e4:	75fb      	strb	r3, [r7, #23]
    goto error;
 80096e6:	e0eb      	b.n	80098c0 <HAL_SPI_Receive+0x25c>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80096e8:	68fb      	ldr	r3, [r7, #12]
 80096ea:	2204      	movs	r2, #4
 80096ec:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80096f0:	68fb      	ldr	r3, [r7, #12]
 80096f2:	2200      	movs	r2, #0
 80096f4:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80096f6:	68fb      	ldr	r3, [r7, #12]
 80096f8:	68ba      	ldr	r2, [r7, #8]
 80096fa:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferSize  = Size;
 80096fc:	68fb      	ldr	r3, [r7, #12]
 80096fe:	88fa      	ldrh	r2, [r7, #6]
 8009700:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  hspi->RxXferCount = Size;
 8009704:	68fb      	ldr	r3, [r7, #12]
 8009706:	88fa      	ldrh	r2, [r7, #6]
 8009708:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800970c:	68fb      	ldr	r3, [r7, #12]
 800970e:	2200      	movs	r2, #0
 8009710:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxXferSize  = 0U;
 8009712:	68fb      	ldr	r3, [r7, #12]
 8009714:	2200      	movs	r2, #0
 8009716:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->TxXferCount = 0U;
 8009718:	68fb      	ldr	r3, [r7, #12]
 800971a:	2200      	movs	r2, #0
 800971c:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->RxISR       = NULL;
 800971e:	68fb      	ldr	r3, [r7, #12]
 8009720:	2200      	movs	r2, #0
 8009722:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi->TxISR       = NULL;
 8009724:	68fb      	ldr	r3, [r7, #12]
 8009726:	2200      	movs	r2, #0
 8009728:	651a      	str	r2, [r3, #80]	; 0x50
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Set the Rx Fifo threshold */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800972a:	68fb      	ldr	r3, [r7, #12]
 800972c:	68db      	ldr	r3, [r3, #12]
 800972e:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8009732:	d908      	bls.n	8009746 <HAL_SPI_Receive+0xe2>
  {
    /* Set RX Fifo threshold according the reception data length: 16bit */
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8009734:	68fb      	ldr	r3, [r7, #12]
 8009736:	681b      	ldr	r3, [r3, #0]
 8009738:	685a      	ldr	r2, [r3, #4]
 800973a:	68fb      	ldr	r3, [r7, #12]
 800973c:	681b      	ldr	r3, [r3, #0]
 800973e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009742:	605a      	str	r2, [r3, #4]
 8009744:	e007      	b.n	8009756 <HAL_SPI_Receive+0xf2>
  }
  else
  {
    /* Set RX Fifo threshold according the reception data length: 8bit */
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8009746:	68fb      	ldr	r3, [r7, #12]
 8009748:	681b      	ldr	r3, [r3, #0]
 800974a:	685a      	ldr	r2, [r3, #4]
 800974c:	68fb      	ldr	r3, [r7, #12]
 800974e:	681b      	ldr	r3, [r3, #0]
 8009750:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009754:	605a      	str	r2, [r3, #4]
  }

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009756:	68fb      	ldr	r3, [r7, #12]
 8009758:	689b      	ldr	r3, [r3, #8]
 800975a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800975e:	d10f      	bne.n	8009780 <HAL_SPI_Receive+0x11c>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8009760:	68fb      	ldr	r3, [r7, #12]
 8009762:	681b      	ldr	r3, [r3, #0]
 8009764:	681a      	ldr	r2, [r3, #0]
 8009766:	68fb      	ldr	r3, [r7, #12]
 8009768:	681b      	ldr	r3, [r3, #0]
 800976a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800976e:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8009770:	68fb      	ldr	r3, [r7, #12]
 8009772:	681b      	ldr	r3, [r3, #0]
 8009774:	681a      	ldr	r2, [r3, #0]
 8009776:	68fb      	ldr	r3, [r7, #12]
 8009778:	681b      	ldr	r3, [r3, #0]
 800977a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800977e:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009780:	68fb      	ldr	r3, [r7, #12]
 8009782:	681b      	ldr	r3, [r3, #0]
 8009784:	681b      	ldr	r3, [r3, #0]
 8009786:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800978a:	2b40      	cmp	r3, #64	; 0x40
 800978c:	d007      	beq.n	800979e <HAL_SPI_Receive+0x13a>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800978e:	68fb      	ldr	r3, [r7, #12]
 8009790:	681b      	ldr	r3, [r3, #0]
 8009792:	681a      	ldr	r2, [r3, #0]
 8009794:	68fb      	ldr	r3, [r7, #12]
 8009796:	681b      	ldr	r3, [r3, #0]
 8009798:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800979c:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 800979e:	68fb      	ldr	r3, [r7, #12]
 80097a0:	68db      	ldr	r3, [r3, #12]
 80097a2:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80097a6:	d86f      	bhi.n	8009888 <HAL_SPI_Receive+0x224>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 80097a8:	e034      	b.n	8009814 <HAL_SPI_Receive+0x1b0>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80097aa:	68fb      	ldr	r3, [r7, #12]
 80097ac:	681b      	ldr	r3, [r3, #0]
 80097ae:	689b      	ldr	r3, [r3, #8]
 80097b0:	f003 0301 	and.w	r3, r3, #1
 80097b4:	2b01      	cmp	r3, #1
 80097b6:	d117      	bne.n	80097e8 <HAL_SPI_Receive+0x184>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80097b8:	68fb      	ldr	r3, [r7, #12]
 80097ba:	681b      	ldr	r3, [r3, #0]
 80097bc:	f103 020c 	add.w	r2, r3, #12
 80097c0:	68fb      	ldr	r3, [r7, #12]
 80097c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80097c4:	7812      	ldrb	r2, [r2, #0]
 80097c6:	b2d2      	uxtb	r2, r2
 80097c8:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80097ca:	68fb      	ldr	r3, [r7, #12]
 80097cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80097ce:	1c5a      	adds	r2, r3, #1
 80097d0:	68fb      	ldr	r3, [r7, #12]
 80097d2:	641a      	str	r2, [r3, #64]	; 0x40
        hspi->RxXferCount--;
 80097d4:	68fb      	ldr	r3, [r7, #12]
 80097d6:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80097da:	b29b      	uxth	r3, r3
 80097dc:	3b01      	subs	r3, #1
 80097de:	b29a      	uxth	r2, r3
 80097e0:	68fb      	ldr	r3, [r7, #12]
 80097e2:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 80097e6:	e015      	b.n	8009814 <HAL_SPI_Receive+0x1b0>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80097e8:	f7fc fa66 	bl	8005cb8 <HAL_GetTick>
 80097ec:	4602      	mov	r2, r0
 80097ee:	693b      	ldr	r3, [r7, #16]
 80097f0:	1ad3      	subs	r3, r2, r3
 80097f2:	683a      	ldr	r2, [r7, #0]
 80097f4:	429a      	cmp	r2, r3
 80097f6:	d803      	bhi.n	8009800 <HAL_SPI_Receive+0x19c>
 80097f8:	683b      	ldr	r3, [r7, #0]
 80097fa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80097fe:	d102      	bne.n	8009806 <HAL_SPI_Receive+0x1a2>
 8009800:	683b      	ldr	r3, [r7, #0]
 8009802:	2b00      	cmp	r3, #0
 8009804:	d106      	bne.n	8009814 <HAL_SPI_Receive+0x1b0>
        {
          errorcode = HAL_TIMEOUT;
 8009806:	2303      	movs	r3, #3
 8009808:	75fb      	strb	r3, [r7, #23]
          hspi->State = HAL_SPI_STATE_READY;
 800980a:	68fb      	ldr	r3, [r7, #12]
 800980c:	2201      	movs	r2, #1
 800980e:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
          goto error;
 8009812:	e055      	b.n	80098c0 <HAL_SPI_Receive+0x25c>
    while (hspi->RxXferCount > 0U)
 8009814:	68fb      	ldr	r3, [r7, #12]
 8009816:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800981a:	b29b      	uxth	r3, r3
 800981c:	2b00      	cmp	r3, #0
 800981e:	d1c4      	bne.n	80097aa <HAL_SPI_Receive+0x146>
 8009820:	e038      	b.n	8009894 <HAL_SPI_Receive+0x230>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8009822:	68fb      	ldr	r3, [r7, #12]
 8009824:	681b      	ldr	r3, [r3, #0]
 8009826:	689b      	ldr	r3, [r3, #8]
 8009828:	f003 0301 	and.w	r3, r3, #1
 800982c:	2b01      	cmp	r3, #1
 800982e:	d115      	bne.n	800985c <HAL_SPI_Receive+0x1f8>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8009830:	68fb      	ldr	r3, [r7, #12]
 8009832:	681b      	ldr	r3, [r3, #0]
 8009834:	68da      	ldr	r2, [r3, #12]
 8009836:	68fb      	ldr	r3, [r7, #12]
 8009838:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800983a:	b292      	uxth	r2, r2
 800983c:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800983e:	68fb      	ldr	r3, [r7, #12]
 8009840:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009842:	1c9a      	adds	r2, r3, #2
 8009844:	68fb      	ldr	r3, [r7, #12]
 8009846:	641a      	str	r2, [r3, #64]	; 0x40
        hspi->RxXferCount--;
 8009848:	68fb      	ldr	r3, [r7, #12]
 800984a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800984e:	b29b      	uxth	r3, r3
 8009850:	3b01      	subs	r3, #1
 8009852:	b29a      	uxth	r2, r3
 8009854:	68fb      	ldr	r3, [r7, #12]
 8009856:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 800985a:	e015      	b.n	8009888 <HAL_SPI_Receive+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800985c:	f7fc fa2c 	bl	8005cb8 <HAL_GetTick>
 8009860:	4602      	mov	r2, r0
 8009862:	693b      	ldr	r3, [r7, #16]
 8009864:	1ad3      	subs	r3, r2, r3
 8009866:	683a      	ldr	r2, [r7, #0]
 8009868:	429a      	cmp	r2, r3
 800986a:	d803      	bhi.n	8009874 <HAL_SPI_Receive+0x210>
 800986c:	683b      	ldr	r3, [r7, #0]
 800986e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009872:	d102      	bne.n	800987a <HAL_SPI_Receive+0x216>
 8009874:	683b      	ldr	r3, [r7, #0]
 8009876:	2b00      	cmp	r3, #0
 8009878:	d106      	bne.n	8009888 <HAL_SPI_Receive+0x224>
        {
          errorcode = HAL_TIMEOUT;
 800987a:	2303      	movs	r3, #3
 800987c:	75fb      	strb	r3, [r7, #23]
          hspi->State = HAL_SPI_STATE_READY;
 800987e:	68fb      	ldr	r3, [r7, #12]
 8009880:	2201      	movs	r2, #1
 8009882:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
          goto error;
 8009886:	e01b      	b.n	80098c0 <HAL_SPI_Receive+0x25c>
    while (hspi->RxXferCount > 0U)
 8009888:	68fb      	ldr	r3, [r7, #12]
 800988a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800988e:	b29b      	uxth	r3, r3
 8009890:	2b00      	cmp	r3, #0
 8009892:	d1c6      	bne.n	8009822 <HAL_SPI_Receive+0x1be>
    }
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8009894:	693a      	ldr	r2, [r7, #16]
 8009896:	6839      	ldr	r1, [r7, #0]
 8009898:	68f8      	ldr	r0, [r7, #12]
 800989a:	f000 fddf 	bl	800a45c <SPI_EndRxTransaction>
 800989e:	4603      	mov	r3, r0
 80098a0:	2b00      	cmp	r3, #0
 80098a2:	d002      	beq.n	80098aa <HAL_SPI_Receive+0x246>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80098a4:	68fb      	ldr	r3, [r7, #12]
 80098a6:	2220      	movs	r2, #32
 80098a8:	661a      	str	r2, [r3, #96]	; 0x60
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80098aa:	68fb      	ldr	r3, [r7, #12]
 80098ac:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80098ae:	2b00      	cmp	r3, #0
 80098b0:	d002      	beq.n	80098b8 <HAL_SPI_Receive+0x254>
  {
    errorcode = HAL_ERROR;
 80098b2:	2301      	movs	r3, #1
 80098b4:	75fb      	strb	r3, [r7, #23]
 80098b6:	e003      	b.n	80098c0 <HAL_SPI_Receive+0x25c>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 80098b8:	68fb      	ldr	r3, [r7, #12]
 80098ba:	2201      	movs	r2, #1
 80098bc:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  }

error :
  __HAL_UNLOCK(hspi);
 80098c0:	68fb      	ldr	r3, [r7, #12]
 80098c2:	2200      	movs	r2, #0
 80098c4:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  return errorcode;
 80098c8:	7dfb      	ldrb	r3, [r7, #23]
}
 80098ca:	4618      	mov	r0, r3
 80098cc:	3718      	adds	r7, #24
 80098ce:	46bd      	mov	sp, r7
 80098d0:	bd80      	pop	{r7, pc}

080098d2 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 80098d2:	b580      	push	{r7, lr}
 80098d4:	b08a      	sub	sp, #40	; 0x28
 80098d6:	af00      	add	r7, sp, #0
 80098d8:	60f8      	str	r0, [r7, #12]
 80098da:	60b9      	str	r1, [r7, #8]
 80098dc:	607a      	str	r2, [r7, #4]
 80098de:	807b      	strh	r3, [r7, #2]
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 80098e0:	2301      	movs	r3, #1
 80098e2:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_StatusTypeDef    errorcode = HAL_OK;
 80098e4:	2300      	movs	r3, #0
 80098e6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 80098ea:	68fb      	ldr	r3, [r7, #12]
 80098ec:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80098f0:	2b01      	cmp	r3, #1
 80098f2:	d101      	bne.n	80098f8 <HAL_SPI_TransmitReceive+0x26>
 80098f4:	2302      	movs	r3, #2
 80098f6:	e20a      	b.n	8009d0e <HAL_SPI_TransmitReceive+0x43c>
 80098f8:	68fb      	ldr	r3, [r7, #12]
 80098fa:	2201      	movs	r2, #1
 80098fc:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8009900:	f7fc f9da 	bl	8005cb8 <HAL_GetTick>
 8009904:	61f8      	str	r0, [r7, #28]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8009906:	68fb      	ldr	r3, [r7, #12]
 8009908:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 800990c:	76fb      	strb	r3, [r7, #27]
  tmp_mode            = hspi->Init.Mode;
 800990e:	68fb      	ldr	r3, [r7, #12]
 8009910:	685b      	ldr	r3, [r3, #4]
 8009912:	617b      	str	r3, [r7, #20]
  initial_TxXferCount = Size;
 8009914:	887b      	ldrh	r3, [r7, #2]
 8009916:	827b      	strh	r3, [r7, #18]
  initial_RxXferCount = Size;
 8009918:	887b      	ldrh	r3, [r7, #2]
 800991a:	823b      	strh	r3, [r7, #16]
#if (USE_SPI_CRC != 0U)
  spi_cr1             = READ_REG(hspi->Instance->CR1);
  spi_cr2             = READ_REG(hspi->Instance->CR2);
#endif /* USE_SPI_CRC */

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800991c:	7efb      	ldrb	r3, [r7, #27]
 800991e:	2b01      	cmp	r3, #1
 8009920:	d00e      	beq.n	8009940 <HAL_SPI_TransmitReceive+0x6e>
 8009922:	697b      	ldr	r3, [r7, #20]
 8009924:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009928:	d106      	bne.n	8009938 <HAL_SPI_TransmitReceive+0x66>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800992a:	68fb      	ldr	r3, [r7, #12]
 800992c:	689b      	ldr	r3, [r3, #8]
 800992e:	2b00      	cmp	r3, #0
 8009930:	d102      	bne.n	8009938 <HAL_SPI_TransmitReceive+0x66>
 8009932:	7efb      	ldrb	r3, [r7, #27]
 8009934:	2b04      	cmp	r3, #4
 8009936:	d003      	beq.n	8009940 <HAL_SPI_TransmitReceive+0x6e>
  {
    errorcode = HAL_BUSY;
 8009938:	2302      	movs	r3, #2
 800993a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    goto error;
 800993e:	e1e0      	b.n	8009d02 <HAL_SPI_TransmitReceive+0x430>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8009940:	68bb      	ldr	r3, [r7, #8]
 8009942:	2b00      	cmp	r3, #0
 8009944:	d005      	beq.n	8009952 <HAL_SPI_TransmitReceive+0x80>
 8009946:	687b      	ldr	r3, [r7, #4]
 8009948:	2b00      	cmp	r3, #0
 800994a:	d002      	beq.n	8009952 <HAL_SPI_TransmitReceive+0x80>
 800994c:	887b      	ldrh	r3, [r7, #2]
 800994e:	2b00      	cmp	r3, #0
 8009950:	d103      	bne.n	800995a <HAL_SPI_TransmitReceive+0x88>
  {
    errorcode = HAL_ERROR;
 8009952:	2301      	movs	r3, #1
 8009954:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    goto error;
 8009958:	e1d3      	b.n	8009d02 <HAL_SPI_TransmitReceive+0x430>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800995a:	68fb      	ldr	r3, [r7, #12]
 800995c:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8009960:	b2db      	uxtb	r3, r3
 8009962:	2b04      	cmp	r3, #4
 8009964:	d003      	beq.n	800996e <HAL_SPI_TransmitReceive+0x9c>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8009966:	68fb      	ldr	r3, [r7, #12]
 8009968:	2205      	movs	r2, #5
 800996a:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800996e:	68fb      	ldr	r3, [r7, #12]
 8009970:	2200      	movs	r2, #0
 8009972:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8009974:	68fb      	ldr	r3, [r7, #12]
 8009976:	687a      	ldr	r2, [r7, #4]
 8009978:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferCount = Size;
 800997a:	68fb      	ldr	r3, [r7, #12]
 800997c:	887a      	ldrh	r2, [r7, #2]
 800997e:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
  hspi->RxXferSize  = Size;
 8009982:	68fb      	ldr	r3, [r7, #12]
 8009984:	887a      	ldrh	r2, [r7, #2]
 8009986:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800998a:	68fb      	ldr	r3, [r7, #12]
 800998c:	68ba      	ldr	r2, [r7, #8]
 800998e:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxXferCount = Size;
 8009990:	68fb      	ldr	r3, [r7, #12]
 8009992:	887a      	ldrh	r2, [r7, #2]
 8009994:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 8009996:	68fb      	ldr	r3, [r7, #12]
 8009998:	887a      	ldrh	r2, [r7, #2]
 800999a:	879a      	strh	r2, [r3, #60]	; 0x3c

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 800999c:	68fb      	ldr	r3, [r7, #12]
 800999e:	2200      	movs	r2, #0
 80099a0:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi->TxISR       = NULL;
 80099a2:	68fb      	ldr	r3, [r7, #12]
 80099a4:	2200      	movs	r2, #0
 80099a6:	651a      	str	r2, [r3, #80]	; 0x50
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the Rx Fifo threshold */
  if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
 80099a8:	68fb      	ldr	r3, [r7, #12]
 80099aa:	68db      	ldr	r3, [r3, #12]
 80099ac:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80099b0:	d802      	bhi.n	80099b8 <HAL_SPI_TransmitReceive+0xe6>
 80099b2:	8a3b      	ldrh	r3, [r7, #16]
 80099b4:	2b01      	cmp	r3, #1
 80099b6:	d908      	bls.n	80099ca <HAL_SPI_TransmitReceive+0xf8>
  {
    /* Set fiforxthreshold according the reception data length: 16bit */
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 80099b8:	68fb      	ldr	r3, [r7, #12]
 80099ba:	681b      	ldr	r3, [r3, #0]
 80099bc:	685a      	ldr	r2, [r3, #4]
 80099be:	68fb      	ldr	r3, [r7, #12]
 80099c0:	681b      	ldr	r3, [r3, #0]
 80099c2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80099c6:	605a      	str	r2, [r3, #4]
 80099c8:	e007      	b.n	80099da <HAL_SPI_TransmitReceive+0x108>
  }
  else
  {
    /* Set fiforxthreshold according the reception data length: 8bit */
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 80099ca:	68fb      	ldr	r3, [r7, #12]
 80099cc:	681b      	ldr	r3, [r3, #0]
 80099ce:	685a      	ldr	r2, [r3, #4]
 80099d0:	68fb      	ldr	r3, [r7, #12]
 80099d2:	681b      	ldr	r3, [r3, #0]
 80099d4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80099d8:	605a      	str	r2, [r3, #4]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80099da:	68fb      	ldr	r3, [r7, #12]
 80099dc:	681b      	ldr	r3, [r3, #0]
 80099de:	681b      	ldr	r3, [r3, #0]
 80099e0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80099e4:	2b40      	cmp	r3, #64	; 0x40
 80099e6:	d007      	beq.n	80099f8 <HAL_SPI_TransmitReceive+0x126>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80099e8:	68fb      	ldr	r3, [r7, #12]
 80099ea:	681b      	ldr	r3, [r3, #0]
 80099ec:	681a      	ldr	r2, [r3, #0]
 80099ee:	68fb      	ldr	r3, [r7, #12]
 80099f0:	681b      	ldr	r3, [r3, #0]
 80099f2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80099f6:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80099f8:	68fb      	ldr	r3, [r7, #12]
 80099fa:	68db      	ldr	r3, [r3, #12]
 80099fc:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8009a00:	f240 8081 	bls.w	8009b06 <HAL_SPI_TransmitReceive+0x234>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009a04:	68fb      	ldr	r3, [r7, #12]
 8009a06:	685b      	ldr	r3, [r3, #4]
 8009a08:	2b00      	cmp	r3, #0
 8009a0a:	d002      	beq.n	8009a12 <HAL_SPI_TransmitReceive+0x140>
 8009a0c:	8a7b      	ldrh	r3, [r7, #18]
 8009a0e:	2b01      	cmp	r3, #1
 8009a10:	d16d      	bne.n	8009aee <HAL_SPI_TransmitReceive+0x21c>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8009a12:	68fb      	ldr	r3, [r7, #12]
 8009a14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a16:	881a      	ldrh	r2, [r3, #0]
 8009a18:	68fb      	ldr	r3, [r7, #12]
 8009a1a:	681b      	ldr	r3, [r3, #0]
 8009a1c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8009a1e:	68fb      	ldr	r3, [r7, #12]
 8009a20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a22:	1c9a      	adds	r2, r3, #2
 8009a24:	68fb      	ldr	r3, [r7, #12]
 8009a26:	639a      	str	r2, [r3, #56]	; 0x38
      hspi->TxXferCount--;
 8009a28:	68fb      	ldr	r3, [r7, #12]
 8009a2a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009a2c:	b29b      	uxth	r3, r3
 8009a2e:	3b01      	subs	r3, #1
 8009a30:	b29a      	uxth	r2, r3
 8009a32:	68fb      	ldr	r3, [r7, #12]
 8009a34:	87da      	strh	r2, [r3, #62]	; 0x3e
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8009a36:	e05a      	b.n	8009aee <HAL_SPI_TransmitReceive+0x21c>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8009a38:	68fb      	ldr	r3, [r7, #12]
 8009a3a:	681b      	ldr	r3, [r3, #0]
 8009a3c:	689b      	ldr	r3, [r3, #8]
 8009a3e:	f003 0302 	and.w	r3, r3, #2
 8009a42:	2b02      	cmp	r3, #2
 8009a44:	d11b      	bne.n	8009a7e <HAL_SPI_TransmitReceive+0x1ac>
 8009a46:	68fb      	ldr	r3, [r7, #12]
 8009a48:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009a4a:	b29b      	uxth	r3, r3
 8009a4c:	2b00      	cmp	r3, #0
 8009a4e:	d016      	beq.n	8009a7e <HAL_SPI_TransmitReceive+0x1ac>
 8009a50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a52:	2b01      	cmp	r3, #1
 8009a54:	d113      	bne.n	8009a7e <HAL_SPI_TransmitReceive+0x1ac>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8009a56:	68fb      	ldr	r3, [r7, #12]
 8009a58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a5a:	881a      	ldrh	r2, [r3, #0]
 8009a5c:	68fb      	ldr	r3, [r7, #12]
 8009a5e:	681b      	ldr	r3, [r3, #0]
 8009a60:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8009a62:	68fb      	ldr	r3, [r7, #12]
 8009a64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a66:	1c9a      	adds	r2, r3, #2
 8009a68:	68fb      	ldr	r3, [r7, #12]
 8009a6a:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 8009a6c:	68fb      	ldr	r3, [r7, #12]
 8009a6e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009a70:	b29b      	uxth	r3, r3
 8009a72:	3b01      	subs	r3, #1
 8009a74:	b29a      	uxth	r2, r3
 8009a76:	68fb      	ldr	r3, [r7, #12]
 8009a78:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8009a7a:	2300      	movs	r3, #0
 8009a7c:	627b      	str	r3, [r7, #36]	; 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8009a7e:	68fb      	ldr	r3, [r7, #12]
 8009a80:	681b      	ldr	r3, [r3, #0]
 8009a82:	689b      	ldr	r3, [r3, #8]
 8009a84:	f003 0301 	and.w	r3, r3, #1
 8009a88:	2b01      	cmp	r3, #1
 8009a8a:	d11c      	bne.n	8009ac6 <HAL_SPI_TransmitReceive+0x1f4>
 8009a8c:	68fb      	ldr	r3, [r7, #12]
 8009a8e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8009a92:	b29b      	uxth	r3, r3
 8009a94:	2b00      	cmp	r3, #0
 8009a96:	d016      	beq.n	8009ac6 <HAL_SPI_TransmitReceive+0x1f4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8009a98:	68fb      	ldr	r3, [r7, #12]
 8009a9a:	681b      	ldr	r3, [r3, #0]
 8009a9c:	68da      	ldr	r2, [r3, #12]
 8009a9e:	68fb      	ldr	r3, [r7, #12]
 8009aa0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009aa2:	b292      	uxth	r2, r2
 8009aa4:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8009aa6:	68fb      	ldr	r3, [r7, #12]
 8009aa8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009aaa:	1c9a      	adds	r2, r3, #2
 8009aac:	68fb      	ldr	r3, [r7, #12]
 8009aae:	641a      	str	r2, [r3, #64]	; 0x40
        hspi->RxXferCount--;
 8009ab0:	68fb      	ldr	r3, [r7, #12]
 8009ab2:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8009ab6:	b29b      	uxth	r3, r3
 8009ab8:	3b01      	subs	r3, #1
 8009aba:	b29a      	uxth	r2, r3
 8009abc:	68fb      	ldr	r3, [r7, #12]
 8009abe:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8009ac2:	2301      	movs	r3, #1
 8009ac4:	627b      	str	r3, [r7, #36]	; 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8009ac6:	f7fc f8f7 	bl	8005cb8 <HAL_GetTick>
 8009aca:	4602      	mov	r2, r0
 8009acc:	69fb      	ldr	r3, [r7, #28]
 8009ace:	1ad3      	subs	r3, r2, r3
 8009ad0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009ad2:	429a      	cmp	r2, r3
 8009ad4:	d80b      	bhi.n	8009aee <HAL_SPI_TransmitReceive+0x21c>
 8009ad6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009ad8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009adc:	d007      	beq.n	8009aee <HAL_SPI_TransmitReceive+0x21c>
      {
        errorcode = HAL_TIMEOUT;
 8009ade:	2303      	movs	r3, #3
 8009ae0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
        hspi->State = HAL_SPI_STATE_READY;
 8009ae4:	68fb      	ldr	r3, [r7, #12]
 8009ae6:	2201      	movs	r2, #1
 8009ae8:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
        goto error;
 8009aec:	e109      	b.n	8009d02 <HAL_SPI_TransmitReceive+0x430>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8009aee:	68fb      	ldr	r3, [r7, #12]
 8009af0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009af2:	b29b      	uxth	r3, r3
 8009af4:	2b00      	cmp	r3, #0
 8009af6:	d19f      	bne.n	8009a38 <HAL_SPI_TransmitReceive+0x166>
 8009af8:	68fb      	ldr	r3, [r7, #12]
 8009afa:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8009afe:	b29b      	uxth	r3, r3
 8009b00:	2b00      	cmp	r3, #0
 8009b02:	d199      	bne.n	8009a38 <HAL_SPI_TransmitReceive+0x166>
 8009b04:	e0e3      	b.n	8009cce <HAL_SPI_TransmitReceive+0x3fc>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009b06:	68fb      	ldr	r3, [r7, #12]
 8009b08:	685b      	ldr	r3, [r3, #4]
 8009b0a:	2b00      	cmp	r3, #0
 8009b0c:	d003      	beq.n	8009b16 <HAL_SPI_TransmitReceive+0x244>
 8009b0e:	8a7b      	ldrh	r3, [r7, #18]
 8009b10:	2b01      	cmp	r3, #1
 8009b12:	f040 80cf 	bne.w	8009cb4 <HAL_SPI_TransmitReceive+0x3e2>
    {
      if (hspi->TxXferCount > 1U)
 8009b16:	68fb      	ldr	r3, [r7, #12]
 8009b18:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009b1a:	b29b      	uxth	r3, r3
 8009b1c:	2b01      	cmp	r3, #1
 8009b1e:	d912      	bls.n	8009b46 <HAL_SPI_TransmitReceive+0x274>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8009b20:	68fb      	ldr	r3, [r7, #12]
 8009b22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b24:	881a      	ldrh	r2, [r3, #0]
 8009b26:	68fb      	ldr	r3, [r7, #12]
 8009b28:	681b      	ldr	r3, [r3, #0]
 8009b2a:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8009b2c:	68fb      	ldr	r3, [r7, #12]
 8009b2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b30:	1c9a      	adds	r2, r3, #2
 8009b32:	68fb      	ldr	r3, [r7, #12]
 8009b34:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount -= 2U;
 8009b36:	68fb      	ldr	r3, [r7, #12]
 8009b38:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009b3a:	b29b      	uxth	r3, r3
 8009b3c:	3b02      	subs	r3, #2
 8009b3e:	b29a      	uxth	r2, r3
 8009b40:	68fb      	ldr	r3, [r7, #12]
 8009b42:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009b44:	e0b6      	b.n	8009cb4 <HAL_SPI_TransmitReceive+0x3e2>
      }
      else
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8009b46:	68fb      	ldr	r3, [r7, #12]
 8009b48:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009b4a:	68fb      	ldr	r3, [r7, #12]
 8009b4c:	681b      	ldr	r3, [r3, #0]
 8009b4e:	330c      	adds	r3, #12
 8009b50:	7812      	ldrb	r2, [r2, #0]
 8009b52:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 8009b54:	68fb      	ldr	r3, [r7, #12]
 8009b56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b58:	1c5a      	adds	r2, r3, #1
 8009b5a:	68fb      	ldr	r3, [r7, #12]
 8009b5c:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 8009b5e:	68fb      	ldr	r3, [r7, #12]
 8009b60:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009b62:	b29b      	uxth	r3, r3
 8009b64:	3b01      	subs	r3, #1
 8009b66:	b29a      	uxth	r2, r3
 8009b68:	68fb      	ldr	r3, [r7, #12]
 8009b6a:	87da      	strh	r2, [r3, #62]	; 0x3e
          SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
        }
#endif /* USE_SPI_CRC */
      }
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8009b6c:	e0a2      	b.n	8009cb4 <HAL_SPI_TransmitReceive+0x3e2>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8009b6e:	68fb      	ldr	r3, [r7, #12]
 8009b70:	681b      	ldr	r3, [r3, #0]
 8009b72:	689b      	ldr	r3, [r3, #8]
 8009b74:	f003 0302 	and.w	r3, r3, #2
 8009b78:	2b02      	cmp	r3, #2
 8009b7a:	d134      	bne.n	8009be6 <HAL_SPI_TransmitReceive+0x314>
 8009b7c:	68fb      	ldr	r3, [r7, #12]
 8009b7e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009b80:	b29b      	uxth	r3, r3
 8009b82:	2b00      	cmp	r3, #0
 8009b84:	d02f      	beq.n	8009be6 <HAL_SPI_TransmitReceive+0x314>
 8009b86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b88:	2b01      	cmp	r3, #1
 8009b8a:	d12c      	bne.n	8009be6 <HAL_SPI_TransmitReceive+0x314>
      {
        if (hspi->TxXferCount > 1U)
 8009b8c:	68fb      	ldr	r3, [r7, #12]
 8009b8e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009b90:	b29b      	uxth	r3, r3
 8009b92:	2b01      	cmp	r3, #1
 8009b94:	d912      	bls.n	8009bbc <HAL_SPI_TransmitReceive+0x2ea>
        {
          hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8009b96:	68fb      	ldr	r3, [r7, #12]
 8009b98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b9a:	881a      	ldrh	r2, [r3, #0]
 8009b9c:	68fb      	ldr	r3, [r7, #12]
 8009b9e:	681b      	ldr	r3, [r3, #0]
 8009ba0:	60da      	str	r2, [r3, #12]
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8009ba2:	68fb      	ldr	r3, [r7, #12]
 8009ba4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ba6:	1c9a      	adds	r2, r3, #2
 8009ba8:	68fb      	ldr	r3, [r7, #12]
 8009baa:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount -= 2U;
 8009bac:	68fb      	ldr	r3, [r7, #12]
 8009bae:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009bb0:	b29b      	uxth	r3, r3
 8009bb2:	3b02      	subs	r3, #2
 8009bb4:	b29a      	uxth	r2, r3
 8009bb6:	68fb      	ldr	r3, [r7, #12]
 8009bb8:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009bba:	e012      	b.n	8009be2 <HAL_SPI_TransmitReceive+0x310>
        }
        else
        {
          *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8009bbc:	68fb      	ldr	r3, [r7, #12]
 8009bbe:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009bc0:	68fb      	ldr	r3, [r7, #12]
 8009bc2:	681b      	ldr	r3, [r3, #0]
 8009bc4:	330c      	adds	r3, #12
 8009bc6:	7812      	ldrb	r2, [r2, #0]
 8009bc8:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr++;
 8009bca:	68fb      	ldr	r3, [r7, #12]
 8009bcc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009bce:	1c5a      	adds	r2, r3, #1
 8009bd0:	68fb      	ldr	r3, [r7, #12]
 8009bd2:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount--;
 8009bd4:	68fb      	ldr	r3, [r7, #12]
 8009bd6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009bd8:	b29b      	uxth	r3, r3
 8009bda:	3b01      	subs	r3, #1
 8009bdc:	b29a      	uxth	r2, r3
 8009bde:	68fb      	ldr	r3, [r7, #12]
 8009be0:	87da      	strh	r2, [r3, #62]	; 0x3e
        }
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8009be2:	2300      	movs	r3, #0
 8009be4:	627b      	str	r3, [r7, #36]	; 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8009be6:	68fb      	ldr	r3, [r7, #12]
 8009be8:	681b      	ldr	r3, [r3, #0]
 8009bea:	689b      	ldr	r3, [r3, #8]
 8009bec:	f003 0301 	and.w	r3, r3, #1
 8009bf0:	2b01      	cmp	r3, #1
 8009bf2:	d148      	bne.n	8009c86 <HAL_SPI_TransmitReceive+0x3b4>
 8009bf4:	68fb      	ldr	r3, [r7, #12]
 8009bf6:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8009bfa:	b29b      	uxth	r3, r3
 8009bfc:	2b00      	cmp	r3, #0
 8009bfe:	d042      	beq.n	8009c86 <HAL_SPI_TransmitReceive+0x3b4>
      {
        if (hspi->RxXferCount > 1U)
 8009c00:	68fb      	ldr	r3, [r7, #12]
 8009c02:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8009c06:	b29b      	uxth	r3, r3
 8009c08:	2b01      	cmp	r3, #1
 8009c0a:	d923      	bls.n	8009c54 <HAL_SPI_TransmitReceive+0x382>
        {
          *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8009c0c:	68fb      	ldr	r3, [r7, #12]
 8009c0e:	681b      	ldr	r3, [r3, #0]
 8009c10:	68da      	ldr	r2, [r3, #12]
 8009c12:	68fb      	ldr	r3, [r7, #12]
 8009c14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009c16:	b292      	uxth	r2, r2
 8009c18:	801a      	strh	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint16_t);
 8009c1a:	68fb      	ldr	r3, [r7, #12]
 8009c1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009c1e:	1c9a      	adds	r2, r3, #2
 8009c20:	68fb      	ldr	r3, [r7, #12]
 8009c22:	641a      	str	r2, [r3, #64]	; 0x40
          hspi->RxXferCount -= 2U;
 8009c24:	68fb      	ldr	r3, [r7, #12]
 8009c26:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8009c2a:	b29b      	uxth	r3, r3
 8009c2c:	3b02      	subs	r3, #2
 8009c2e:	b29a      	uxth	r2, r3
 8009c30:	68fb      	ldr	r3, [r7, #12]
 8009c32:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
          if (hspi->RxXferCount <= 1U)
 8009c36:	68fb      	ldr	r3, [r7, #12]
 8009c38:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8009c3c:	b29b      	uxth	r3, r3
 8009c3e:	2b01      	cmp	r3, #1
 8009c40:	d81f      	bhi.n	8009c82 <HAL_SPI_TransmitReceive+0x3b0>
          {
            /* Set RX Fifo threshold before to switch on 8 bit data size */
            SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8009c42:	68fb      	ldr	r3, [r7, #12]
 8009c44:	681b      	ldr	r3, [r3, #0]
 8009c46:	685a      	ldr	r2, [r3, #4]
 8009c48:	68fb      	ldr	r3, [r7, #12]
 8009c4a:	681b      	ldr	r3, [r3, #0]
 8009c4c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009c50:	605a      	str	r2, [r3, #4]
 8009c52:	e016      	b.n	8009c82 <HAL_SPI_TransmitReceive+0x3b0>
          }
        }
        else
        {
          (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8009c54:	68fb      	ldr	r3, [r7, #12]
 8009c56:	681b      	ldr	r3, [r3, #0]
 8009c58:	f103 020c 	add.w	r2, r3, #12
 8009c5c:	68fb      	ldr	r3, [r7, #12]
 8009c5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009c60:	7812      	ldrb	r2, [r2, #0]
 8009c62:	b2d2      	uxtb	r2, r2
 8009c64:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr++;
 8009c66:	68fb      	ldr	r3, [r7, #12]
 8009c68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009c6a:	1c5a      	adds	r2, r3, #1
 8009c6c:	68fb      	ldr	r3, [r7, #12]
 8009c6e:	641a      	str	r2, [r3, #64]	; 0x40
          hspi->RxXferCount--;
 8009c70:	68fb      	ldr	r3, [r7, #12]
 8009c72:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8009c76:	b29b      	uxth	r3, r3
 8009c78:	3b01      	subs	r3, #1
 8009c7a:	b29a      	uxth	r2, r3
 8009c7c:	68fb      	ldr	r3, [r7, #12]
 8009c7e:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
        }
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8009c82:	2301      	movs	r3, #1
 8009c84:	627b      	str	r3, [r7, #36]	; 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8009c86:	f7fc f817 	bl	8005cb8 <HAL_GetTick>
 8009c8a:	4602      	mov	r2, r0
 8009c8c:	69fb      	ldr	r3, [r7, #28]
 8009c8e:	1ad3      	subs	r3, r2, r3
 8009c90:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009c92:	429a      	cmp	r2, r3
 8009c94:	d803      	bhi.n	8009c9e <HAL_SPI_TransmitReceive+0x3cc>
 8009c96:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009c98:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009c9c:	d102      	bne.n	8009ca4 <HAL_SPI_TransmitReceive+0x3d2>
 8009c9e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009ca0:	2b00      	cmp	r3, #0
 8009ca2:	d107      	bne.n	8009cb4 <HAL_SPI_TransmitReceive+0x3e2>
      {
        errorcode = HAL_TIMEOUT;
 8009ca4:	2303      	movs	r3, #3
 8009ca6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
        hspi->State = HAL_SPI_STATE_READY;
 8009caa:	68fb      	ldr	r3, [r7, #12]
 8009cac:	2201      	movs	r2, #1
 8009cae:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
        goto error;
 8009cb2:	e026      	b.n	8009d02 <HAL_SPI_TransmitReceive+0x430>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8009cb4:	68fb      	ldr	r3, [r7, #12]
 8009cb6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009cb8:	b29b      	uxth	r3, r3
 8009cba:	2b00      	cmp	r3, #0
 8009cbc:	f47f af57 	bne.w	8009b6e <HAL_SPI_TransmitReceive+0x29c>
 8009cc0:	68fb      	ldr	r3, [r7, #12]
 8009cc2:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8009cc6:	b29b      	uxth	r3, r3
 8009cc8:	2b00      	cmp	r3, #0
 8009cca:	f47f af50 	bne.w	8009b6e <HAL_SPI_TransmitReceive+0x29c>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8009cce:	69fa      	ldr	r2, [r7, #28]
 8009cd0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8009cd2:	68f8      	ldr	r0, [r7, #12]
 8009cd4:	f000 fc1a 	bl	800a50c <SPI_EndRxTxTransaction>
 8009cd8:	4603      	mov	r3, r0
 8009cda:	2b00      	cmp	r3, #0
 8009cdc:	d005      	beq.n	8009cea <HAL_SPI_TransmitReceive+0x418>
  {
    errorcode = HAL_ERROR;
 8009cde:	2301      	movs	r3, #1
 8009ce0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8009ce4:	68fb      	ldr	r3, [r7, #12]
 8009ce6:	2220      	movs	r2, #32
 8009ce8:	661a      	str	r2, [r3, #96]	; 0x60
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009cea:	68fb      	ldr	r3, [r7, #12]
 8009cec:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009cee:	2b00      	cmp	r3, #0
 8009cf0:	d003      	beq.n	8009cfa <HAL_SPI_TransmitReceive+0x428>
  {
    errorcode = HAL_ERROR;
 8009cf2:	2301      	movs	r3, #1
 8009cf4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8009cf8:	e003      	b.n	8009d02 <HAL_SPI_TransmitReceive+0x430>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 8009cfa:	68fb      	ldr	r3, [r7, #12]
 8009cfc:	2201      	movs	r2, #1
 8009cfe:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  }
  
error :
  __HAL_UNLOCK(hspi);
 8009d02:	68fb      	ldr	r3, [r7, #12]
 8009d04:	2200      	movs	r2, #0
 8009d06:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  return errorcode;
 8009d0a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
}
 8009d0e:	4618      	mov	r0, r3
 8009d10:	3728      	adds	r7, #40	; 0x28
 8009d12:	46bd      	mov	sp, r7
 8009d14:	bd80      	pop	{r7, pc}
	...

08009d18 <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
{
 8009d18:	b580      	push	{r7, lr}
 8009d1a:	b086      	sub	sp, #24
 8009d1c:	af00      	add	r7, sp, #0
 8009d1e:	60f8      	str	r0, [r7, #12]
 8009d20:	60b9      	str	r1, [r7, #8]
 8009d22:	4613      	mov	r3, r2
 8009d24:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef errorcode = HAL_OK;
 8009d26:	2300      	movs	r3, #0
 8009d28:	75fb      	strb	r3, [r7, #23]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8009d2a:	68fb      	ldr	r3, [r7, #12]
 8009d2c:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8009d30:	2b01      	cmp	r3, #1
 8009d32:	d101      	bne.n	8009d38 <HAL_SPI_Transmit_DMA+0x20>
 8009d34:	2302      	movs	r3, #2
 8009d36:	e0d4      	b.n	8009ee2 <HAL_SPI_Transmit_DMA+0x1ca>
 8009d38:	68fb      	ldr	r3, [r7, #12]
 8009d3a:	2201      	movs	r2, #1
 8009d3c:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  if (hspi->State != HAL_SPI_STATE_READY)
 8009d40:	68fb      	ldr	r3, [r7, #12]
 8009d42:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8009d46:	b2db      	uxtb	r3, r3
 8009d48:	2b01      	cmp	r3, #1
 8009d4a:	d002      	beq.n	8009d52 <HAL_SPI_Transmit_DMA+0x3a>
  {
    errorcode = HAL_BUSY;
 8009d4c:	2302      	movs	r3, #2
 8009d4e:	75fb      	strb	r3, [r7, #23]
    goto error;
 8009d50:	e0c2      	b.n	8009ed8 <HAL_SPI_Transmit_DMA+0x1c0>
  }

  if ((pData == NULL) || (Size == 0U))
 8009d52:	68bb      	ldr	r3, [r7, #8]
 8009d54:	2b00      	cmp	r3, #0
 8009d56:	d002      	beq.n	8009d5e <HAL_SPI_Transmit_DMA+0x46>
 8009d58:	88fb      	ldrh	r3, [r7, #6]
 8009d5a:	2b00      	cmp	r3, #0
 8009d5c:	d102      	bne.n	8009d64 <HAL_SPI_Transmit_DMA+0x4c>
  {
    errorcode = HAL_ERROR;
 8009d5e:	2301      	movs	r3, #1
 8009d60:	75fb      	strb	r3, [r7, #23]
    goto error;
 8009d62:	e0b9      	b.n	8009ed8 <HAL_SPI_Transmit_DMA+0x1c0>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8009d64:	68fb      	ldr	r3, [r7, #12]
 8009d66:	2203      	movs	r2, #3
 8009d68:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009d6c:	68fb      	ldr	r3, [r7, #12]
 8009d6e:	2200      	movs	r2, #0
 8009d70:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8009d72:	68fb      	ldr	r3, [r7, #12]
 8009d74:	68ba      	ldr	r2, [r7, #8]
 8009d76:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxXferSize  = Size;
 8009d78:	68fb      	ldr	r3, [r7, #12]
 8009d7a:	88fa      	ldrh	r2, [r7, #6]
 8009d7c:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->TxXferCount = Size;
 8009d7e:	68fb      	ldr	r3, [r7, #12]
 8009d80:	88fa      	ldrh	r2, [r7, #6]
 8009d82:	87da      	strh	r2, [r3, #62]	; 0x3e

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8009d84:	68fb      	ldr	r3, [r7, #12]
 8009d86:	2200      	movs	r2, #0
 8009d88:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8009d8a:	68fb      	ldr	r3, [r7, #12]
 8009d8c:	2200      	movs	r2, #0
 8009d8e:	651a      	str	r2, [r3, #80]	; 0x50
  hspi->RxISR       = NULL;
 8009d90:	68fb      	ldr	r3, [r7, #12]
 8009d92:	2200      	movs	r2, #0
 8009d94:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi->RxXferSize  = 0U;
 8009d96:	68fb      	ldr	r3, [r7, #12]
 8009d98:	2200      	movs	r2, #0
 8009d9a:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  hspi->RxXferCount = 0U;
 8009d9e:	68fb      	ldr	r3, [r7, #12]
 8009da0:	2200      	movs	r2, #0
 8009da2:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009da6:	68fb      	ldr	r3, [r7, #12]
 8009da8:	689b      	ldr	r3, [r3, #8]
 8009daa:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009dae:	d10f      	bne.n	8009dd0 <HAL_SPI_Transmit_DMA+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8009db0:	68fb      	ldr	r3, [r7, #12]
 8009db2:	681b      	ldr	r3, [r3, #0]
 8009db4:	681a      	ldr	r2, [r3, #0]
 8009db6:	68fb      	ldr	r3, [r7, #12]
 8009db8:	681b      	ldr	r3, [r3, #0]
 8009dba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009dbe:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8009dc0:	68fb      	ldr	r3, [r7, #12]
 8009dc2:	681b      	ldr	r3, [r3, #0]
 8009dc4:	681a      	ldr	r2, [r3, #0]
 8009dc6:	68fb      	ldr	r3, [r7, #12]
 8009dc8:	681b      	ldr	r3, [r3, #0]
 8009dca:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009dce:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8009dd0:	68fb      	ldr	r3, [r7, #12]
 8009dd2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009dd4:	4a45      	ldr	r2, [pc, #276]	; (8009eec <HAL_SPI_Transmit_DMA+0x1d4>)
 8009dd6:	631a      	str	r2, [r3, #48]	; 0x30

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8009dd8:	68fb      	ldr	r3, [r7, #12]
 8009dda:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009ddc:	4a44      	ldr	r2, [pc, #272]	; (8009ef0 <HAL_SPI_Transmit_DMA+0x1d8>)
 8009dde:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8009de0:	68fb      	ldr	r3, [r7, #12]
 8009de2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009de4:	4a43      	ldr	r2, [pc, #268]	; (8009ef4 <HAL_SPI_Transmit_DMA+0x1dc>)
 8009de6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8009de8:	68fb      	ldr	r3, [r7, #12]
 8009dea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009dec:	2200      	movs	r2, #0
 8009dee:	639a      	str	r2, [r3, #56]	; 0x38

  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 8009df0:	68fb      	ldr	r3, [r7, #12]
 8009df2:	681b      	ldr	r3, [r3, #0]
 8009df4:	685a      	ldr	r2, [r3, #4]
 8009df6:	68fb      	ldr	r3, [r7, #12]
 8009df8:	681b      	ldr	r3, [r3, #0]
 8009dfa:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8009dfe:	605a      	str	r2, [r3, #4]
  /* Packing mode is enabled only if the DMA setting is HALWORD */
  if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD))
 8009e00:	68fb      	ldr	r3, [r7, #12]
 8009e02:	68db      	ldr	r3, [r3, #12]
 8009e04:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8009e08:	d82d      	bhi.n	8009e66 <HAL_SPI_Transmit_DMA+0x14e>
 8009e0a:	68fb      	ldr	r3, [r7, #12]
 8009e0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009e0e:	699b      	ldr	r3, [r3, #24]
 8009e10:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009e14:	d127      	bne.n	8009e66 <HAL_SPI_Transmit_DMA+0x14e>
  {
    /* Check the even/odd of the data size + crc if enabled */
    if ((hspi->TxXferCount & 0x1U) == 0U)
 8009e16:	68fb      	ldr	r3, [r7, #12]
 8009e18:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009e1a:	b29b      	uxth	r3, r3
 8009e1c:	f003 0301 	and.w	r3, r3, #1
 8009e20:	2b00      	cmp	r3, #0
 8009e22:	d10f      	bne.n	8009e44 <HAL_SPI_Transmit_DMA+0x12c>
    {
      CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 8009e24:	68fb      	ldr	r3, [r7, #12]
 8009e26:	681b      	ldr	r3, [r3, #0]
 8009e28:	685a      	ldr	r2, [r3, #4]
 8009e2a:	68fb      	ldr	r3, [r7, #12]
 8009e2c:	681b      	ldr	r3, [r3, #0]
 8009e2e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8009e32:	605a      	str	r2, [r3, #4]
      hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 8009e34:	68fb      	ldr	r3, [r7, #12]
 8009e36:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009e38:	b29b      	uxth	r3, r3
 8009e3a:	085b      	lsrs	r3, r3, #1
 8009e3c:	b29a      	uxth	r2, r3
 8009e3e:	68fb      	ldr	r3, [r7, #12]
 8009e40:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009e42:	e010      	b.n	8009e66 <HAL_SPI_Transmit_DMA+0x14e>
    }
    else
    {
      SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 8009e44:	68fb      	ldr	r3, [r7, #12]
 8009e46:	681b      	ldr	r3, [r3, #0]
 8009e48:	685a      	ldr	r2, [r3, #4]
 8009e4a:	68fb      	ldr	r3, [r7, #12]
 8009e4c:	681b      	ldr	r3, [r3, #0]
 8009e4e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009e52:	605a      	str	r2, [r3, #4]
      hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 8009e54:	68fb      	ldr	r3, [r7, #12]
 8009e56:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009e58:	b29b      	uxth	r3, r3
 8009e5a:	085b      	lsrs	r3, r3, #1
 8009e5c:	b29b      	uxth	r3, r3
 8009e5e:	3301      	adds	r3, #1
 8009e60:	b29a      	uxth	r2, r3
 8009e62:	68fb      	ldr	r3, [r7, #12]
 8009e64:	87da      	strh	r2, [r3, #62]	; 0x3e
    }
  }

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8009e66:	68fb      	ldr	r3, [r7, #12]
 8009e68:	6d58      	ldr	r0, [r3, #84]	; 0x54
 8009e6a:	68fb      	ldr	r3, [r7, #12]
 8009e6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009e6e:	4619      	mov	r1, r3
 8009e70:	68fb      	ldr	r3, [r7, #12]
 8009e72:	681b      	ldr	r3, [r3, #0]
 8009e74:	330c      	adds	r3, #12
 8009e76:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 8009e78:	68fb      	ldr	r3, [r7, #12]
 8009e7a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009e7c:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8009e7e:	f7fc fc57 	bl	8006730 <HAL_DMA_Start_IT>
 8009e82:	4603      	mov	r3, r0
 8009e84:	2b00      	cmp	r3, #0
 8009e86:	d008      	beq.n	8009e9a <HAL_SPI_Transmit_DMA+0x182>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8009e88:	68fb      	ldr	r3, [r7, #12]
 8009e8a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009e8c:	f043 0210 	orr.w	r2, r3, #16
 8009e90:	68fb      	ldr	r3, [r7, #12]
 8009e92:	661a      	str	r2, [r3, #96]	; 0x60
    errorcode = HAL_ERROR;
 8009e94:	2301      	movs	r3, #1
 8009e96:	75fb      	strb	r3, [r7, #23]

    goto error;
 8009e98:	e01e      	b.n	8009ed8 <HAL_SPI_Transmit_DMA+0x1c0>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009e9a:	68fb      	ldr	r3, [r7, #12]
 8009e9c:	681b      	ldr	r3, [r3, #0]
 8009e9e:	681b      	ldr	r3, [r3, #0]
 8009ea0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009ea4:	2b40      	cmp	r3, #64	; 0x40
 8009ea6:	d007      	beq.n	8009eb8 <HAL_SPI_Transmit_DMA+0x1a0>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8009ea8:	68fb      	ldr	r3, [r7, #12]
 8009eaa:	681b      	ldr	r3, [r3, #0]
 8009eac:	681a      	ldr	r2, [r3, #0]
 8009eae:	68fb      	ldr	r3, [r7, #12]
 8009eb0:	681b      	ldr	r3, [r3, #0]
 8009eb2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009eb6:	601a      	str	r2, [r3, #0]
  }

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8009eb8:	68fb      	ldr	r3, [r7, #12]
 8009eba:	681b      	ldr	r3, [r3, #0]
 8009ebc:	685a      	ldr	r2, [r3, #4]
 8009ebe:	68fb      	ldr	r3, [r7, #12]
 8009ec0:	681b      	ldr	r3, [r3, #0]
 8009ec2:	f042 0220 	orr.w	r2, r2, #32
 8009ec6:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8009ec8:	68fb      	ldr	r3, [r7, #12]
 8009eca:	681b      	ldr	r3, [r3, #0]
 8009ecc:	685a      	ldr	r2, [r3, #4]
 8009ece:	68fb      	ldr	r3, [r7, #12]
 8009ed0:	681b      	ldr	r3, [r3, #0]
 8009ed2:	f042 0202 	orr.w	r2, r2, #2
 8009ed6:	605a      	str	r2, [r3, #4]

error :
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8009ed8:	68fb      	ldr	r3, [r7, #12]
 8009eda:	2200      	movs	r2, #0
 8009edc:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  return errorcode;
 8009ee0:	7dfb      	ldrb	r3, [r7, #23]
}
 8009ee2:	4618      	mov	r0, r3
 8009ee4:	3718      	adds	r7, #24
 8009ee6:	46bd      	mov	sp, r7
 8009ee8:	bd80      	pop	{r7, pc}
 8009eea:	bf00      	nop
 8009eec:	0800a19b 	.word	0x0800a19b
 8009ef0:	0800a0f5 	.word	0x0800a0f5
 8009ef4:	0800a1b7 	.word	0x0800a1b7

08009ef8 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8009ef8:	b580      	push	{r7, lr}
 8009efa:	b088      	sub	sp, #32
 8009efc:	af00      	add	r7, sp, #0
 8009efe:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8009f00:	687b      	ldr	r3, [r7, #4]
 8009f02:	681b      	ldr	r3, [r3, #0]
 8009f04:	685b      	ldr	r3, [r3, #4]
 8009f06:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8009f08:	687b      	ldr	r3, [r7, #4]
 8009f0a:	681b      	ldr	r3, [r3, #0]
 8009f0c:	689b      	ldr	r3, [r3, #8]
 8009f0e:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8009f10:	69bb      	ldr	r3, [r7, #24]
 8009f12:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009f16:	2b00      	cmp	r3, #0
 8009f18:	d10e      	bne.n	8009f38 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8009f1a:	69bb      	ldr	r3, [r7, #24]
 8009f1c:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8009f20:	2b00      	cmp	r3, #0
 8009f22:	d009      	beq.n	8009f38 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8009f24:	69fb      	ldr	r3, [r7, #28]
 8009f26:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009f2a:	2b00      	cmp	r3, #0
 8009f2c:	d004      	beq.n	8009f38 <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009f32:	6878      	ldr	r0, [r7, #4]
 8009f34:	4798      	blx	r3
    return;
 8009f36:	e0ce      	b.n	800a0d6 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8009f38:	69bb      	ldr	r3, [r7, #24]
 8009f3a:	f003 0302 	and.w	r3, r3, #2
 8009f3e:	2b00      	cmp	r3, #0
 8009f40:	d009      	beq.n	8009f56 <HAL_SPI_IRQHandler+0x5e>
 8009f42:	69fb      	ldr	r3, [r7, #28]
 8009f44:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009f48:	2b00      	cmp	r3, #0
 8009f4a:	d004      	beq.n	8009f56 <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8009f4c:	687b      	ldr	r3, [r7, #4]
 8009f4e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009f50:	6878      	ldr	r0, [r7, #4]
 8009f52:	4798      	blx	r3
    return;
 8009f54:	e0bf      	b.n	800a0d6 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8009f56:	69bb      	ldr	r3, [r7, #24]
 8009f58:	f003 0320 	and.w	r3, r3, #32
 8009f5c:	2b00      	cmp	r3, #0
 8009f5e:	d10a      	bne.n	8009f76 <HAL_SPI_IRQHandler+0x7e>
 8009f60:	69bb      	ldr	r3, [r7, #24]
 8009f62:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009f66:	2b00      	cmp	r3, #0
 8009f68:	d105      	bne.n	8009f76 <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8009f6a:	69bb      	ldr	r3, [r7, #24]
 8009f6c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009f70:	2b00      	cmp	r3, #0
 8009f72:	f000 80b0 	beq.w	800a0d6 <HAL_SPI_IRQHandler+0x1de>
 8009f76:	69fb      	ldr	r3, [r7, #28]
 8009f78:	f003 0320 	and.w	r3, r3, #32
 8009f7c:	2b00      	cmp	r3, #0
 8009f7e:	f000 80aa 	beq.w	800a0d6 <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8009f82:	69bb      	ldr	r3, [r7, #24]
 8009f84:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009f88:	2b00      	cmp	r3, #0
 8009f8a:	d023      	beq.n	8009fd4 <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8009f8c:	687b      	ldr	r3, [r7, #4]
 8009f8e:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8009f92:	b2db      	uxtb	r3, r3
 8009f94:	2b03      	cmp	r3, #3
 8009f96:	d011      	beq.n	8009fbc <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8009f98:	687b      	ldr	r3, [r7, #4]
 8009f9a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009f9c:	f043 0204 	orr.w	r2, r3, #4
 8009fa0:	687b      	ldr	r3, [r7, #4]
 8009fa2:	661a      	str	r2, [r3, #96]	; 0x60
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8009fa4:	2300      	movs	r3, #0
 8009fa6:	617b      	str	r3, [r7, #20]
 8009fa8:	687b      	ldr	r3, [r7, #4]
 8009faa:	681b      	ldr	r3, [r3, #0]
 8009fac:	68db      	ldr	r3, [r3, #12]
 8009fae:	617b      	str	r3, [r7, #20]
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	681b      	ldr	r3, [r3, #0]
 8009fb4:	689b      	ldr	r3, [r3, #8]
 8009fb6:	617b      	str	r3, [r7, #20]
 8009fb8:	697b      	ldr	r3, [r7, #20]
 8009fba:	e00b      	b.n	8009fd4 <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8009fbc:	2300      	movs	r3, #0
 8009fbe:	613b      	str	r3, [r7, #16]
 8009fc0:	687b      	ldr	r3, [r7, #4]
 8009fc2:	681b      	ldr	r3, [r3, #0]
 8009fc4:	68db      	ldr	r3, [r3, #12]
 8009fc6:	613b      	str	r3, [r7, #16]
 8009fc8:	687b      	ldr	r3, [r7, #4]
 8009fca:	681b      	ldr	r3, [r3, #0]
 8009fcc:	689b      	ldr	r3, [r3, #8]
 8009fce:	613b      	str	r3, [r7, #16]
 8009fd0:	693b      	ldr	r3, [r7, #16]
        return;
 8009fd2:	e080      	b.n	800a0d6 <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8009fd4:	69bb      	ldr	r3, [r7, #24]
 8009fd6:	f003 0320 	and.w	r3, r3, #32
 8009fda:	2b00      	cmp	r3, #0
 8009fdc:	d014      	beq.n	800a008 <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8009fde:	687b      	ldr	r3, [r7, #4]
 8009fe0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009fe2:	f043 0201 	orr.w	r2, r3, #1
 8009fe6:	687b      	ldr	r3, [r7, #4]
 8009fe8:	661a      	str	r2, [r3, #96]	; 0x60
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8009fea:	2300      	movs	r3, #0
 8009fec:	60fb      	str	r3, [r7, #12]
 8009fee:	687b      	ldr	r3, [r7, #4]
 8009ff0:	681b      	ldr	r3, [r3, #0]
 8009ff2:	689b      	ldr	r3, [r3, #8]
 8009ff4:	60fb      	str	r3, [r7, #12]
 8009ff6:	687b      	ldr	r3, [r7, #4]
 8009ff8:	681b      	ldr	r3, [r3, #0]
 8009ffa:	681a      	ldr	r2, [r3, #0]
 8009ffc:	687b      	ldr	r3, [r7, #4]
 8009ffe:	681b      	ldr	r3, [r3, #0]
 800a000:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a004:	601a      	str	r2, [r3, #0]
 800a006:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 800a008:	69bb      	ldr	r3, [r7, #24]
 800a00a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a00e:	2b00      	cmp	r3, #0
 800a010:	d00c      	beq.n	800a02c <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800a012:	687b      	ldr	r3, [r7, #4]
 800a014:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a016:	f043 0208 	orr.w	r2, r3, #8
 800a01a:	687b      	ldr	r3, [r7, #4]
 800a01c:	661a      	str	r2, [r3, #96]	; 0x60
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800a01e:	2300      	movs	r3, #0
 800a020:	60bb      	str	r3, [r7, #8]
 800a022:	687b      	ldr	r3, [r7, #4]
 800a024:	681b      	ldr	r3, [r3, #0]
 800a026:	689b      	ldr	r3, [r3, #8]
 800a028:	60bb      	str	r3, [r7, #8]
 800a02a:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a02c:	687b      	ldr	r3, [r7, #4]
 800a02e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a030:	2b00      	cmp	r3, #0
 800a032:	d04f      	beq.n	800a0d4 <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 800a034:	687b      	ldr	r3, [r7, #4]
 800a036:	681b      	ldr	r3, [r3, #0]
 800a038:	685a      	ldr	r2, [r3, #4]
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	681b      	ldr	r3, [r3, #0]
 800a03e:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800a042:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 800a044:	687b      	ldr	r3, [r7, #4]
 800a046:	2201      	movs	r2, #1
 800a048:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 800a04c:	69fb      	ldr	r3, [r7, #28]
 800a04e:	f003 0302 	and.w	r3, r3, #2
 800a052:	2b00      	cmp	r3, #0
 800a054:	d104      	bne.n	800a060 <HAL_SPI_IRQHandler+0x168>
 800a056:	69fb      	ldr	r3, [r7, #28]
 800a058:	f003 0301 	and.w	r3, r3, #1
 800a05c:	2b00      	cmp	r3, #0
 800a05e:	d034      	beq.n	800a0ca <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 800a060:	687b      	ldr	r3, [r7, #4]
 800a062:	681b      	ldr	r3, [r3, #0]
 800a064:	685a      	ldr	r2, [r3, #4]
 800a066:	687b      	ldr	r3, [r7, #4]
 800a068:	681b      	ldr	r3, [r3, #0]
 800a06a:	f022 0203 	bic.w	r2, r2, #3
 800a06e:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 800a070:	687b      	ldr	r3, [r7, #4]
 800a072:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a074:	2b00      	cmp	r3, #0
 800a076:	d011      	beq.n	800a09c <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800a078:	687b      	ldr	r3, [r7, #4]
 800a07a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a07c:	4a17      	ldr	r2, [pc, #92]	; (800a0dc <HAL_SPI_IRQHandler+0x1e4>)
 800a07e:	639a      	str	r2, [r3, #56]	; 0x38
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 800a080:	687b      	ldr	r3, [r7, #4]
 800a082:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a084:	4618      	mov	r0, r3
 800a086:	f7fc fc2a 	bl	80068de <HAL_DMA_Abort_IT>
 800a08a:	4603      	mov	r3, r0
 800a08c:	2b00      	cmp	r3, #0
 800a08e:	d005      	beq.n	800a09c <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800a090:	687b      	ldr	r3, [r7, #4]
 800a092:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a094:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800a098:	687b      	ldr	r3, [r7, #4]
 800a09a:	661a      	str	r2, [r3, #96]	; 0x60
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 800a09c:	687b      	ldr	r3, [r7, #4]
 800a09e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a0a0:	2b00      	cmp	r3, #0
 800a0a2:	d016      	beq.n	800a0d2 <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 800a0a4:	687b      	ldr	r3, [r7, #4]
 800a0a6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a0a8:	4a0c      	ldr	r2, [pc, #48]	; (800a0dc <HAL_SPI_IRQHandler+0x1e4>)
 800a0aa:	639a      	str	r2, [r3, #56]	; 0x38
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 800a0ac:	687b      	ldr	r3, [r7, #4]
 800a0ae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a0b0:	4618      	mov	r0, r3
 800a0b2:	f7fc fc14 	bl	80068de <HAL_DMA_Abort_IT>
 800a0b6:	4603      	mov	r3, r0
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	d00a      	beq.n	800a0d2 <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800a0bc:	687b      	ldr	r3, [r7, #4]
 800a0be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a0c0:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800a0c4:	687b      	ldr	r3, [r7, #4]
 800a0c6:	661a      	str	r2, [r3, #96]	; 0x60
        if (hspi->hdmatx != NULL)
 800a0c8:	e003      	b.n	800a0d2 <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 800a0ca:	6878      	ldr	r0, [r7, #4]
 800a0cc:	f7fb fa34 	bl	8005538 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 800a0d0:	e000      	b.n	800a0d4 <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 800a0d2:	bf00      	nop
    return;
 800a0d4:	bf00      	nop
  }
}
 800a0d6:	3720      	adds	r7, #32
 800a0d8:	46bd      	mov	sp, r7
 800a0da:	bd80      	pop	{r7, pc}
 800a0dc:	0800a1f7 	.word	0x0800a1f7

0800a0e0 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 800a0e0:	b480      	push	{r7}
 800a0e2:	b083      	sub	sp, #12
 800a0e4:	af00      	add	r7, sp, #0
 800a0e6:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 800a0e8:	bf00      	nop
 800a0ea:	370c      	adds	r7, #12
 800a0ec:	46bd      	mov	sp, r7
 800a0ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0f2:	4770      	bx	lr

0800a0f4 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 800a0f4:	b580      	push	{r7, lr}
 800a0f6:	b086      	sub	sp, #24
 800a0f8:	af00      	add	r7, sp, #0
 800a0fa:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800a0fc:	687b      	ldr	r3, [r7, #4]
 800a0fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a100:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800a102:	f7fb fdd9 	bl	8005cb8 <HAL_GetTick>
 800a106:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 800a108:	687b      	ldr	r3, [r7, #4]
 800a10a:	681b      	ldr	r3, [r3, #0]
 800a10c:	681b      	ldr	r3, [r3, #0]
 800a10e:	f003 0320 	and.w	r3, r3, #32
 800a112:	2b20      	cmp	r3, #32
 800a114:	d03b      	beq.n	800a18e <SPI_DMATransmitCplt+0x9a>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 800a116:	697b      	ldr	r3, [r7, #20]
 800a118:	681b      	ldr	r3, [r3, #0]
 800a11a:	685a      	ldr	r2, [r3, #4]
 800a11c:	697b      	ldr	r3, [r7, #20]
 800a11e:	681b      	ldr	r3, [r3, #0]
 800a120:	f022 0220 	bic.w	r2, r2, #32
 800a124:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 800a126:	697b      	ldr	r3, [r7, #20]
 800a128:	681b      	ldr	r3, [r3, #0]
 800a12a:	685a      	ldr	r2, [r3, #4]
 800a12c:	697b      	ldr	r3, [r7, #20]
 800a12e:	681b      	ldr	r3, [r3, #0]
 800a130:	f022 0202 	bic.w	r2, r2, #2
 800a134:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 800a136:	693a      	ldr	r2, [r7, #16]
 800a138:	2164      	movs	r1, #100	; 0x64
 800a13a:	6978      	ldr	r0, [r7, #20]
 800a13c:	f000 f9e6 	bl	800a50c <SPI_EndRxTxTransaction>
 800a140:	4603      	mov	r3, r0
 800a142:	2b00      	cmp	r3, #0
 800a144:	d005      	beq.n	800a152 <SPI_DMATransmitCplt+0x5e>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a146:	697b      	ldr	r3, [r7, #20]
 800a148:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a14a:	f043 0220 	orr.w	r2, r3, #32
 800a14e:	697b      	ldr	r3, [r7, #20]
 800a150:	661a      	str	r2, [r3, #96]	; 0x60
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800a152:	697b      	ldr	r3, [r7, #20]
 800a154:	689b      	ldr	r3, [r3, #8]
 800a156:	2b00      	cmp	r3, #0
 800a158:	d10a      	bne.n	800a170 <SPI_DMATransmitCplt+0x7c>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a15a:	2300      	movs	r3, #0
 800a15c:	60fb      	str	r3, [r7, #12]
 800a15e:	697b      	ldr	r3, [r7, #20]
 800a160:	681b      	ldr	r3, [r3, #0]
 800a162:	68db      	ldr	r3, [r3, #12]
 800a164:	60fb      	str	r3, [r7, #12]
 800a166:	697b      	ldr	r3, [r7, #20]
 800a168:	681b      	ldr	r3, [r3, #0]
 800a16a:	689b      	ldr	r3, [r3, #8]
 800a16c:	60fb      	str	r3, [r7, #12]
 800a16e:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 800a170:	697b      	ldr	r3, [r7, #20]
 800a172:	2200      	movs	r2, #0
 800a174:	87da      	strh	r2, [r3, #62]	; 0x3e
    hspi->State = HAL_SPI_STATE_READY;
 800a176:	697b      	ldr	r3, [r7, #20]
 800a178:	2201      	movs	r2, #1
 800a17a:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a17e:	697b      	ldr	r3, [r7, #20]
 800a180:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a182:	2b00      	cmp	r3, #0
 800a184:	d003      	beq.n	800a18e <SPI_DMATransmitCplt+0x9a>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 800a186:	6978      	ldr	r0, [r7, #20]
 800a188:	f7fb f9d6 	bl	8005538 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 800a18c:	e002      	b.n	800a194 <SPI_DMATransmitCplt+0xa0>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 800a18e:	6978      	ldr	r0, [r7, #20]
 800a190:	f7fb f9e8 	bl	8005564 <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800a194:	3718      	adds	r7, #24
 800a196:	46bd      	mov	sp, r7
 800a198:	bd80      	pop	{r7, pc}

0800a19a <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 800a19a:	b580      	push	{r7, lr}
 800a19c:	b084      	sub	sp, #16
 800a19e:	af00      	add	r7, sp, #0
 800a1a0:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800a1a2:	687b      	ldr	r3, [r7, #4]
 800a1a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a1a6:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 800a1a8:	68f8      	ldr	r0, [r7, #12]
 800a1aa:	f7ff ff99 	bl	800a0e0 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800a1ae:	bf00      	nop
 800a1b0:	3710      	adds	r7, #16
 800a1b2:	46bd      	mov	sp, r7
 800a1b4:	bd80      	pop	{r7, pc}

0800a1b6 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 800a1b6:	b580      	push	{r7, lr}
 800a1b8:	b084      	sub	sp, #16
 800a1ba:	af00      	add	r7, sp, #0
 800a1bc:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800a1be:	687b      	ldr	r3, [r7, #4]
 800a1c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a1c2:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 800a1c4:	68fb      	ldr	r3, [r7, #12]
 800a1c6:	681b      	ldr	r3, [r3, #0]
 800a1c8:	685a      	ldr	r2, [r3, #4]
 800a1ca:	68fb      	ldr	r3, [r7, #12]
 800a1cc:	681b      	ldr	r3, [r3, #0]
 800a1ce:	f022 0203 	bic.w	r2, r2, #3
 800a1d2:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800a1d4:	68fb      	ldr	r3, [r7, #12]
 800a1d6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a1d8:	f043 0210 	orr.w	r2, r3, #16
 800a1dc:	68fb      	ldr	r3, [r7, #12]
 800a1de:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->State = HAL_SPI_STATE_READY;
 800a1e0:	68fb      	ldr	r3, [r7, #12]
 800a1e2:	2201      	movs	r2, #1
 800a1e4:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 800a1e8:	68f8      	ldr	r0, [r7, #12]
 800a1ea:	f7fb f9a5 	bl	8005538 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800a1ee:	bf00      	nop
 800a1f0:	3710      	adds	r7, #16
 800a1f2:	46bd      	mov	sp, r7
 800a1f4:	bd80      	pop	{r7, pc}

0800a1f6 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800a1f6:	b580      	push	{r7, lr}
 800a1f8:	b084      	sub	sp, #16
 800a1fa:	af00      	add	r7, sp, #0
 800a1fc:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800a1fe:	687b      	ldr	r3, [r7, #4]
 800a200:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a202:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 800a204:	68fb      	ldr	r3, [r7, #12]
 800a206:	2200      	movs	r2, #0
 800a208:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
  hspi->TxXferCount = 0U;
 800a20c:	68fb      	ldr	r3, [r7, #12]
 800a20e:	2200      	movs	r2, #0
 800a210:	87da      	strh	r2, [r3, #62]	; 0x3e

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 800a212:	68f8      	ldr	r0, [r7, #12]
 800a214:	f7fb f990 	bl	8005538 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800a218:	bf00      	nop
 800a21a:	3710      	adds	r7, #16
 800a21c:	46bd      	mov	sp, r7
 800a21e:	bd80      	pop	{r7, pc}

0800a220 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800a220:	b580      	push	{r7, lr}
 800a222:	b088      	sub	sp, #32
 800a224:	af00      	add	r7, sp, #0
 800a226:	60f8      	str	r0, [r7, #12]
 800a228:	60b9      	str	r1, [r7, #8]
 800a22a:	603b      	str	r3, [r7, #0]
 800a22c:	4613      	mov	r3, r2
 800a22e:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800a230:	f7fb fd42 	bl	8005cb8 <HAL_GetTick>
 800a234:	4602      	mov	r2, r0
 800a236:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a238:	1a9b      	subs	r3, r3, r2
 800a23a:	683a      	ldr	r2, [r7, #0]
 800a23c:	4413      	add	r3, r2
 800a23e:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 800a240:	f7fb fd3a 	bl	8005cb8 <HAL_GetTick>
 800a244:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a246:	4b39      	ldr	r3, [pc, #228]	; (800a32c <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800a248:	681b      	ldr	r3, [r3, #0]
 800a24a:	015b      	lsls	r3, r3, #5
 800a24c:	0d1b      	lsrs	r3, r3, #20
 800a24e:	69fa      	ldr	r2, [r7, #28]
 800a250:	fb02 f303 	mul.w	r3, r2, r3
 800a254:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a256:	e054      	b.n	800a302 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 800a258:	683b      	ldr	r3, [r7, #0]
 800a25a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a25e:	d050      	beq.n	800a302 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800a260:	f7fb fd2a 	bl	8005cb8 <HAL_GetTick>
 800a264:	4602      	mov	r2, r0
 800a266:	69bb      	ldr	r3, [r7, #24]
 800a268:	1ad3      	subs	r3, r2, r3
 800a26a:	69fa      	ldr	r2, [r7, #28]
 800a26c:	429a      	cmp	r2, r3
 800a26e:	d902      	bls.n	800a276 <SPI_WaitFlagStateUntilTimeout+0x56>
 800a270:	69fb      	ldr	r3, [r7, #28]
 800a272:	2b00      	cmp	r3, #0
 800a274:	d13d      	bne.n	800a2f2 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a276:	68fb      	ldr	r3, [r7, #12]
 800a278:	681b      	ldr	r3, [r3, #0]
 800a27a:	685a      	ldr	r2, [r3, #4]
 800a27c:	68fb      	ldr	r3, [r7, #12]
 800a27e:	681b      	ldr	r3, [r3, #0]
 800a280:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800a284:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a286:	68fb      	ldr	r3, [r7, #12]
 800a288:	685b      	ldr	r3, [r3, #4]
 800a28a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a28e:	d111      	bne.n	800a2b4 <SPI_WaitFlagStateUntilTimeout+0x94>
 800a290:	68fb      	ldr	r3, [r7, #12]
 800a292:	689b      	ldr	r3, [r3, #8]
 800a294:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a298:	d004      	beq.n	800a2a4 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a29a:	68fb      	ldr	r3, [r7, #12]
 800a29c:	689b      	ldr	r3, [r3, #8]
 800a29e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a2a2:	d107      	bne.n	800a2b4 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 800a2a4:	68fb      	ldr	r3, [r7, #12]
 800a2a6:	681b      	ldr	r3, [r3, #0]
 800a2a8:	681a      	ldr	r2, [r3, #0]
 800a2aa:	68fb      	ldr	r3, [r7, #12]
 800a2ac:	681b      	ldr	r3, [r3, #0]
 800a2ae:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a2b2:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800a2b4:	68fb      	ldr	r3, [r7, #12]
 800a2b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a2b8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800a2bc:	d10f      	bne.n	800a2de <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 800a2be:	68fb      	ldr	r3, [r7, #12]
 800a2c0:	681b      	ldr	r3, [r3, #0]
 800a2c2:	681a      	ldr	r2, [r3, #0]
 800a2c4:	68fb      	ldr	r3, [r7, #12]
 800a2c6:	681b      	ldr	r3, [r3, #0]
 800a2c8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a2cc:	601a      	str	r2, [r3, #0]
 800a2ce:	68fb      	ldr	r3, [r7, #12]
 800a2d0:	681b      	ldr	r3, [r3, #0]
 800a2d2:	681a      	ldr	r2, [r3, #0]
 800a2d4:	68fb      	ldr	r3, [r7, #12]
 800a2d6:	681b      	ldr	r3, [r3, #0]
 800a2d8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a2dc:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 800a2de:	68fb      	ldr	r3, [r7, #12]
 800a2e0:	2201      	movs	r2, #1
 800a2e2:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 800a2e6:	68fb      	ldr	r3, [r7, #12]
 800a2e8:	2200      	movs	r2, #0
 800a2ea:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

        return HAL_TIMEOUT;
 800a2ee:	2303      	movs	r3, #3
 800a2f0:	e017      	b.n	800a322 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 800a2f2:	697b      	ldr	r3, [r7, #20]
 800a2f4:	2b00      	cmp	r3, #0
 800a2f6:	d101      	bne.n	800a2fc <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 800a2f8:	2300      	movs	r3, #0
 800a2fa:	61fb      	str	r3, [r7, #28]
      }
      count--;
 800a2fc:	697b      	ldr	r3, [r7, #20]
 800a2fe:	3b01      	subs	r3, #1
 800a300:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a302:	68fb      	ldr	r3, [r7, #12]
 800a304:	681b      	ldr	r3, [r3, #0]
 800a306:	689a      	ldr	r2, [r3, #8]
 800a308:	68bb      	ldr	r3, [r7, #8]
 800a30a:	4013      	ands	r3, r2
 800a30c:	68ba      	ldr	r2, [r7, #8]
 800a30e:	429a      	cmp	r2, r3
 800a310:	bf0c      	ite	eq
 800a312:	2301      	moveq	r3, #1
 800a314:	2300      	movne	r3, #0
 800a316:	b2db      	uxtb	r3, r3
 800a318:	461a      	mov	r2, r3
 800a31a:	79fb      	ldrb	r3, [r7, #7]
 800a31c:	429a      	cmp	r2, r3
 800a31e:	d19b      	bne.n	800a258 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 800a320:	2300      	movs	r3, #0
}
 800a322:	4618      	mov	r0, r3
 800a324:	3720      	adds	r7, #32
 800a326:	46bd      	mov	sp, r7
 800a328:	bd80      	pop	{r7, pc}
 800a32a:	bf00      	nop
 800a32c:	20000288 	.word	0x20000288

0800a330 <SPI_WaitFifoStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800a330:	b580      	push	{r7, lr}
 800a332:	b08a      	sub	sp, #40	; 0x28
 800a334:	af00      	add	r7, sp, #0
 800a336:	60f8      	str	r0, [r7, #12]
 800a338:	60b9      	str	r1, [r7, #8]
 800a33a:	607a      	str	r2, [r7, #4]
 800a33c:	603b      	str	r3, [r7, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
 800a33e:	2300      	movs	r3, #0
 800a340:	75fb      	strb	r3, [r7, #23]

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 800a342:	f7fb fcb9 	bl	8005cb8 <HAL_GetTick>
 800a346:	4602      	mov	r2, r0
 800a348:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a34a:	1a9b      	subs	r3, r3, r2
 800a34c:	683a      	ldr	r2, [r7, #0]
 800a34e:	4413      	add	r3, r2
 800a350:	627b      	str	r3, [r7, #36]	; 0x24
  tmp_tickstart = HAL_GetTick();
 800a352:	f7fb fcb1 	bl	8005cb8 <HAL_GetTick>
 800a356:	6238      	str	r0, [r7, #32]

  /* Initialize the 8bit temporary pointer */
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 800a358:	68fb      	ldr	r3, [r7, #12]
 800a35a:	681b      	ldr	r3, [r3, #0]
 800a35c:	330c      	adds	r3, #12
 800a35e:	61fb      	str	r3, [r7, #28]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 800a360:	4b3d      	ldr	r3, [pc, #244]	; (800a458 <SPI_WaitFifoStateUntilTimeout+0x128>)
 800a362:	681a      	ldr	r2, [r3, #0]
 800a364:	4613      	mov	r3, r2
 800a366:	009b      	lsls	r3, r3, #2
 800a368:	4413      	add	r3, r2
 800a36a:	00da      	lsls	r2, r3, #3
 800a36c:	1ad3      	subs	r3, r2, r3
 800a36e:	0d1b      	lsrs	r3, r3, #20
 800a370:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a372:	fb02 f303 	mul.w	r3, r2, r3
 800a376:	61bb      	str	r3, [r7, #24]

  while ((hspi->Instance->SR & Fifo) != State)
 800a378:	e060      	b.n	800a43c <SPI_WaitFifoStateUntilTimeout+0x10c>
  {
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 800a37a:	68bb      	ldr	r3, [r7, #8]
 800a37c:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 800a380:	d107      	bne.n	800a392 <SPI_WaitFifoStateUntilTimeout+0x62>
 800a382:	687b      	ldr	r3, [r7, #4]
 800a384:	2b00      	cmp	r3, #0
 800a386:	d104      	bne.n	800a392 <SPI_WaitFifoStateUntilTimeout+0x62>
    {
      /* Flush Data Register by a blank read */
      tmpreg8 = *ptmpreg8;
 800a388:	69fb      	ldr	r3, [r7, #28]
 800a38a:	781b      	ldrb	r3, [r3, #0]
 800a38c:	b2db      	uxtb	r3, r3
 800a38e:	75fb      	strb	r3, [r7, #23]
      /* To avoid GCC warning */
      UNUSED(tmpreg8);
 800a390:	7dfb      	ldrb	r3, [r7, #23]
    }

    if (Timeout != HAL_MAX_DELAY)
 800a392:	683b      	ldr	r3, [r7, #0]
 800a394:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a398:	d050      	beq.n	800a43c <SPI_WaitFifoStateUntilTimeout+0x10c>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800a39a:	f7fb fc8d 	bl	8005cb8 <HAL_GetTick>
 800a39e:	4602      	mov	r2, r0
 800a3a0:	6a3b      	ldr	r3, [r7, #32]
 800a3a2:	1ad3      	subs	r3, r2, r3
 800a3a4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a3a6:	429a      	cmp	r2, r3
 800a3a8:	d902      	bls.n	800a3b0 <SPI_WaitFifoStateUntilTimeout+0x80>
 800a3aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a3ac:	2b00      	cmp	r3, #0
 800a3ae:	d13d      	bne.n	800a42c <SPI_WaitFifoStateUntilTimeout+0xfc>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a3b0:	68fb      	ldr	r3, [r7, #12]
 800a3b2:	681b      	ldr	r3, [r3, #0]
 800a3b4:	685a      	ldr	r2, [r3, #4]
 800a3b6:	68fb      	ldr	r3, [r7, #12]
 800a3b8:	681b      	ldr	r3, [r3, #0]
 800a3ba:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800a3be:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a3c0:	68fb      	ldr	r3, [r7, #12]
 800a3c2:	685b      	ldr	r3, [r3, #4]
 800a3c4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a3c8:	d111      	bne.n	800a3ee <SPI_WaitFifoStateUntilTimeout+0xbe>
 800a3ca:	68fb      	ldr	r3, [r7, #12]
 800a3cc:	689b      	ldr	r3, [r3, #8]
 800a3ce:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a3d2:	d004      	beq.n	800a3de <SPI_WaitFifoStateUntilTimeout+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a3d4:	68fb      	ldr	r3, [r7, #12]
 800a3d6:	689b      	ldr	r3, [r3, #8]
 800a3d8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a3dc:	d107      	bne.n	800a3ee <SPI_WaitFifoStateUntilTimeout+0xbe>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 800a3de:	68fb      	ldr	r3, [r7, #12]
 800a3e0:	681b      	ldr	r3, [r3, #0]
 800a3e2:	681a      	ldr	r2, [r3, #0]
 800a3e4:	68fb      	ldr	r3, [r7, #12]
 800a3e6:	681b      	ldr	r3, [r3, #0]
 800a3e8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a3ec:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800a3ee:	68fb      	ldr	r3, [r7, #12]
 800a3f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a3f2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800a3f6:	d10f      	bne.n	800a418 <SPI_WaitFifoStateUntilTimeout+0xe8>
        {
          SPI_RESET_CRC(hspi);
 800a3f8:	68fb      	ldr	r3, [r7, #12]
 800a3fa:	681b      	ldr	r3, [r3, #0]
 800a3fc:	681a      	ldr	r2, [r3, #0]
 800a3fe:	68fb      	ldr	r3, [r7, #12]
 800a400:	681b      	ldr	r3, [r3, #0]
 800a402:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a406:	601a      	str	r2, [r3, #0]
 800a408:	68fb      	ldr	r3, [r7, #12]
 800a40a:	681b      	ldr	r3, [r3, #0]
 800a40c:	681a      	ldr	r2, [r3, #0]
 800a40e:	68fb      	ldr	r3, [r7, #12]
 800a410:	681b      	ldr	r3, [r3, #0]
 800a412:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a416:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 800a418:	68fb      	ldr	r3, [r7, #12]
 800a41a:	2201      	movs	r2, #1
 800a41c:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 800a420:	68fb      	ldr	r3, [r7, #12]
 800a422:	2200      	movs	r2, #0
 800a424:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

        return HAL_TIMEOUT;
 800a428:	2303      	movs	r3, #3
 800a42a:	e010      	b.n	800a44e <SPI_WaitFifoStateUntilTimeout+0x11e>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 800a42c:	69bb      	ldr	r3, [r7, #24]
 800a42e:	2b00      	cmp	r3, #0
 800a430:	d101      	bne.n	800a436 <SPI_WaitFifoStateUntilTimeout+0x106>
      {
        tmp_timeout = 0U;
 800a432:	2300      	movs	r3, #0
 800a434:	627b      	str	r3, [r7, #36]	; 0x24
      }
      count--;
 800a436:	69bb      	ldr	r3, [r7, #24]
 800a438:	3b01      	subs	r3, #1
 800a43a:	61bb      	str	r3, [r7, #24]
  while ((hspi->Instance->SR & Fifo) != State)
 800a43c:	68fb      	ldr	r3, [r7, #12]
 800a43e:	681b      	ldr	r3, [r3, #0]
 800a440:	689a      	ldr	r2, [r3, #8]
 800a442:	68bb      	ldr	r3, [r7, #8]
 800a444:	4013      	ands	r3, r2
 800a446:	687a      	ldr	r2, [r7, #4]
 800a448:	429a      	cmp	r2, r3
 800a44a:	d196      	bne.n	800a37a <SPI_WaitFifoStateUntilTimeout+0x4a>
    }
  }

  return HAL_OK;
 800a44c:	2300      	movs	r3, #0
}
 800a44e:	4618      	mov	r0, r3
 800a450:	3728      	adds	r7, #40	; 0x28
 800a452:	46bd      	mov	sp, r7
 800a454:	bd80      	pop	{r7, pc}
 800a456:	bf00      	nop
 800a458:	20000288 	.word	0x20000288

0800a45c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800a45c:	b580      	push	{r7, lr}
 800a45e:	b086      	sub	sp, #24
 800a460:	af02      	add	r7, sp, #8
 800a462:	60f8      	str	r0, [r7, #12]
 800a464:	60b9      	str	r1, [r7, #8]
 800a466:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a468:	68fb      	ldr	r3, [r7, #12]
 800a46a:	685b      	ldr	r3, [r3, #4]
 800a46c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a470:	d111      	bne.n	800a496 <SPI_EndRxTransaction+0x3a>
 800a472:	68fb      	ldr	r3, [r7, #12]
 800a474:	689b      	ldr	r3, [r3, #8]
 800a476:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a47a:	d004      	beq.n	800a486 <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a47c:	68fb      	ldr	r3, [r7, #12]
 800a47e:	689b      	ldr	r3, [r3, #8]
 800a480:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a484:	d107      	bne.n	800a496 <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 800a486:	68fb      	ldr	r3, [r7, #12]
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	681a      	ldr	r2, [r3, #0]
 800a48c:	68fb      	ldr	r3, [r7, #12]
 800a48e:	681b      	ldr	r3, [r3, #0]
 800a490:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a494:	601a      	str	r2, [r3, #0]
  }

  /* Control the BSY flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	9300      	str	r3, [sp, #0]
 800a49a:	68bb      	ldr	r3, [r7, #8]
 800a49c:	2200      	movs	r2, #0
 800a49e:	2180      	movs	r1, #128	; 0x80
 800a4a0:	68f8      	ldr	r0, [r7, #12]
 800a4a2:	f7ff febd 	bl	800a220 <SPI_WaitFlagStateUntilTimeout>
 800a4a6:	4603      	mov	r3, r0
 800a4a8:	2b00      	cmp	r3, #0
 800a4aa:	d007      	beq.n	800a4bc <SPI_EndRxTransaction+0x60>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a4ac:	68fb      	ldr	r3, [r7, #12]
 800a4ae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a4b0:	f043 0220 	orr.w	r2, r3, #32
 800a4b4:	68fb      	ldr	r3, [r7, #12]
 800a4b6:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 800a4b8:	2303      	movs	r3, #3
 800a4ba:	e023      	b.n	800a504 <SPI_EndRxTransaction+0xa8>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a4bc:	68fb      	ldr	r3, [r7, #12]
 800a4be:	685b      	ldr	r3, [r3, #4]
 800a4c0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a4c4:	d11d      	bne.n	800a502 <SPI_EndRxTransaction+0xa6>
 800a4c6:	68fb      	ldr	r3, [r7, #12]
 800a4c8:	689b      	ldr	r3, [r3, #8]
 800a4ca:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a4ce:	d004      	beq.n	800a4da <SPI_EndRxTransaction+0x7e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a4d0:	68fb      	ldr	r3, [r7, #12]
 800a4d2:	689b      	ldr	r3, [r3, #8]
 800a4d4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a4d8:	d113      	bne.n	800a502 <SPI_EndRxTransaction+0xa6>
  {
    /* Empty the FRLVL fifo */
    if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 800a4da:	687b      	ldr	r3, [r7, #4]
 800a4dc:	9300      	str	r3, [sp, #0]
 800a4de:	68bb      	ldr	r3, [r7, #8]
 800a4e0:	2200      	movs	r2, #0
 800a4e2:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 800a4e6:	68f8      	ldr	r0, [r7, #12]
 800a4e8:	f7ff ff22 	bl	800a330 <SPI_WaitFifoStateUntilTimeout>
 800a4ec:	4603      	mov	r3, r0
 800a4ee:	2b00      	cmp	r3, #0
 800a4f0:	d007      	beq.n	800a502 <SPI_EndRxTransaction+0xa6>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a4f2:	68fb      	ldr	r3, [r7, #12]
 800a4f4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a4f6:	f043 0220 	orr.w	r2, r3, #32
 800a4fa:	68fb      	ldr	r3, [r7, #12]
 800a4fc:	661a      	str	r2, [r3, #96]	; 0x60
      return HAL_TIMEOUT;
 800a4fe:	2303      	movs	r3, #3
 800a500:	e000      	b.n	800a504 <SPI_EndRxTransaction+0xa8>
    }
  }
  return HAL_OK;
 800a502:	2300      	movs	r3, #0
}
 800a504:	4618      	mov	r0, r3
 800a506:	3710      	adds	r7, #16
 800a508:	46bd      	mov	sp, r7
 800a50a:	bd80      	pop	{r7, pc}

0800a50c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800a50c:	b580      	push	{r7, lr}
 800a50e:	b086      	sub	sp, #24
 800a510:	af02      	add	r7, sp, #8
 800a512:	60f8      	str	r0, [r7, #12]
 800a514:	60b9      	str	r1, [r7, #8]
 800a516:	607a      	str	r2, [r7, #4]
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 800a518:	687b      	ldr	r3, [r7, #4]
 800a51a:	9300      	str	r3, [sp, #0]
 800a51c:	68bb      	ldr	r3, [r7, #8]
 800a51e:	2200      	movs	r2, #0
 800a520:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 800a524:	68f8      	ldr	r0, [r7, #12]
 800a526:	f7ff ff03 	bl	800a330 <SPI_WaitFifoStateUntilTimeout>
 800a52a:	4603      	mov	r3, r0
 800a52c:	2b00      	cmp	r3, #0
 800a52e:	d007      	beq.n	800a540 <SPI_EndRxTxTransaction+0x34>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a530:	68fb      	ldr	r3, [r7, #12]
 800a532:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a534:	f043 0220 	orr.w	r2, r3, #32
 800a538:	68fb      	ldr	r3, [r7, #12]
 800a53a:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 800a53c:	2303      	movs	r3, #3
 800a53e:	e027      	b.n	800a590 <SPI_EndRxTxTransaction+0x84>
  }

  /* Control the BSY flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a540:	687b      	ldr	r3, [r7, #4]
 800a542:	9300      	str	r3, [sp, #0]
 800a544:	68bb      	ldr	r3, [r7, #8]
 800a546:	2200      	movs	r2, #0
 800a548:	2180      	movs	r1, #128	; 0x80
 800a54a:	68f8      	ldr	r0, [r7, #12]
 800a54c:	f7ff fe68 	bl	800a220 <SPI_WaitFlagStateUntilTimeout>
 800a550:	4603      	mov	r3, r0
 800a552:	2b00      	cmp	r3, #0
 800a554:	d007      	beq.n	800a566 <SPI_EndRxTxTransaction+0x5a>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a556:	68fb      	ldr	r3, [r7, #12]
 800a558:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a55a:	f043 0220 	orr.w	r2, r3, #32
 800a55e:	68fb      	ldr	r3, [r7, #12]
 800a560:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 800a562:	2303      	movs	r3, #3
 800a564:	e014      	b.n	800a590 <SPI_EndRxTxTransaction+0x84>
  }

  /* Control if the RX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 800a566:	687b      	ldr	r3, [r7, #4]
 800a568:	9300      	str	r3, [sp, #0]
 800a56a:	68bb      	ldr	r3, [r7, #8]
 800a56c:	2200      	movs	r2, #0
 800a56e:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 800a572:	68f8      	ldr	r0, [r7, #12]
 800a574:	f7ff fedc 	bl	800a330 <SPI_WaitFifoStateUntilTimeout>
 800a578:	4603      	mov	r3, r0
 800a57a:	2b00      	cmp	r3, #0
 800a57c:	d007      	beq.n	800a58e <SPI_EndRxTxTransaction+0x82>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a57e:	68fb      	ldr	r3, [r7, #12]
 800a580:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a582:	f043 0220 	orr.w	r2, r3, #32
 800a586:	68fb      	ldr	r3, [r7, #12]
 800a588:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 800a58a:	2303      	movs	r3, #3
 800a58c:	e000      	b.n	800a590 <SPI_EndRxTxTransaction+0x84>
  }

  return HAL_OK;
 800a58e:	2300      	movs	r3, #0
}
 800a590:	4618      	mov	r0, r3
 800a592:	3710      	adds	r7, #16
 800a594:	46bd      	mov	sp, r7
 800a596:	bd80      	pop	{r7, pc}

0800a598 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 800a598:	b580      	push	{r7, lr}
 800a59a:	b082      	sub	sp, #8
 800a59c:	af00      	add	r7, sp, #0
 800a59e:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800a5a0:	687b      	ldr	r3, [r7, #4]
 800a5a2:	2b00      	cmp	r3, #0
 800a5a4:	d101      	bne.n	800a5aa <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 800a5a6:	2301      	movs	r3, #1
 800a5a8:	e049      	b.n	800a63e <HAL_TIM_Base_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800a5aa:	687b      	ldr	r3, [r7, #4]
 800a5ac:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a5b0:	b2db      	uxtb	r3, r3
 800a5b2:	2b00      	cmp	r3, #0
 800a5b4:	d106      	bne.n	800a5c4 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800a5b6:	687b      	ldr	r3, [r7, #4]
 800a5b8:	2200      	movs	r2, #0
 800a5ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800a5be:	6878      	ldr	r0, [r7, #4]
 800a5c0:	f7fa fab0 	bl	8004b24 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800a5c4:	687b      	ldr	r3, [r7, #4]
 800a5c6:	2202      	movs	r2, #2
 800a5c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	681a      	ldr	r2, [r3, #0]
 800a5d0:	687b      	ldr	r3, [r7, #4]
 800a5d2:	3304      	adds	r3, #4
 800a5d4:	4619      	mov	r1, r3
 800a5d6:	4610      	mov	r0, r2
 800a5d8:	f000 fdca 	bl	800b170 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800a5dc:	687b      	ldr	r3, [r7, #4]
 800a5de:	2201      	movs	r2, #1
 800a5e0:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a5e4:	687b      	ldr	r3, [r7, #4]
 800a5e6:	2201      	movs	r2, #1
 800a5e8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a5ec:	687b      	ldr	r3, [r7, #4]
 800a5ee:	2201      	movs	r2, #1
 800a5f0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a5f4:	687b      	ldr	r3, [r7, #4]
 800a5f6:	2201      	movs	r2, #1
 800a5f8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a5fc:	687b      	ldr	r3, [r7, #4]
 800a5fe:	2201      	movs	r2, #1
 800a600:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a604:	687b      	ldr	r3, [r7, #4]
 800a606:	2201      	movs	r2, #1
 800a608:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a60c:	687b      	ldr	r3, [r7, #4]
 800a60e:	2201      	movs	r2, #1
 800a610:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a614:	687b      	ldr	r3, [r7, #4]
 800a616:	2201      	movs	r2, #1
 800a618:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a61c:	687b      	ldr	r3, [r7, #4]
 800a61e:	2201      	movs	r2, #1
 800a620:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a624:	687b      	ldr	r3, [r7, #4]
 800a626:	2201      	movs	r2, #1
 800a628:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a62c:	687b      	ldr	r3, [r7, #4]
 800a62e:	2201      	movs	r2, #1
 800a630:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800a634:	687b      	ldr	r3, [r7, #4]
 800a636:	2201      	movs	r2, #1
 800a638:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 800a63c:	2300      	movs	r3, #0
}
 800a63e:	4618      	mov	r0, r3
 800a640:	3708      	adds	r7, #8
 800a642:	46bd      	mov	sp, r7
 800a644:	bd80      	pop	{r7, pc}
	...

0800a648 <HAL_TIM_Base_Start>:
  * @brief  Starts the TIM Base generation.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
{
 800a648:	b480      	push	{r7}
 800a64a:	b085      	sub	sp, #20
 800a64c:	af00      	add	r7, sp, #0
 800a64e:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800a650:	687b      	ldr	r3, [r7, #4]
 800a652:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a656:	b2db      	uxtb	r3, r3
 800a658:	2b01      	cmp	r3, #1
 800a65a:	d001      	beq.n	800a660 <HAL_TIM_Base_Start+0x18>
  {
    return HAL_ERROR;
 800a65c:	2301      	movs	r3, #1
 800a65e:	e047      	b.n	800a6f0 <HAL_TIM_Base_Start+0xa8>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800a660:	687b      	ldr	r3, [r7, #4]
 800a662:	2202      	movs	r2, #2
 800a664:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a668:	687b      	ldr	r3, [r7, #4]
 800a66a:	681b      	ldr	r3, [r3, #0]
 800a66c:	4a23      	ldr	r2, [pc, #140]	; (800a6fc <HAL_TIM_Base_Start+0xb4>)
 800a66e:	4293      	cmp	r3, r2
 800a670:	d01d      	beq.n	800a6ae <HAL_TIM_Base_Start+0x66>
 800a672:	687b      	ldr	r3, [r7, #4]
 800a674:	681b      	ldr	r3, [r3, #0]
 800a676:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a67a:	d018      	beq.n	800a6ae <HAL_TIM_Base_Start+0x66>
 800a67c:	687b      	ldr	r3, [r7, #4]
 800a67e:	681b      	ldr	r3, [r3, #0]
 800a680:	4a1f      	ldr	r2, [pc, #124]	; (800a700 <HAL_TIM_Base_Start+0xb8>)
 800a682:	4293      	cmp	r3, r2
 800a684:	d013      	beq.n	800a6ae <HAL_TIM_Base_Start+0x66>
 800a686:	687b      	ldr	r3, [r7, #4]
 800a688:	681b      	ldr	r3, [r3, #0]
 800a68a:	4a1e      	ldr	r2, [pc, #120]	; (800a704 <HAL_TIM_Base_Start+0xbc>)
 800a68c:	4293      	cmp	r3, r2
 800a68e:	d00e      	beq.n	800a6ae <HAL_TIM_Base_Start+0x66>
 800a690:	687b      	ldr	r3, [r7, #4]
 800a692:	681b      	ldr	r3, [r3, #0]
 800a694:	4a1c      	ldr	r2, [pc, #112]	; (800a708 <HAL_TIM_Base_Start+0xc0>)
 800a696:	4293      	cmp	r3, r2
 800a698:	d009      	beq.n	800a6ae <HAL_TIM_Base_Start+0x66>
 800a69a:	687b      	ldr	r3, [r7, #4]
 800a69c:	681b      	ldr	r3, [r3, #0]
 800a69e:	4a1b      	ldr	r2, [pc, #108]	; (800a70c <HAL_TIM_Base_Start+0xc4>)
 800a6a0:	4293      	cmp	r3, r2
 800a6a2:	d004      	beq.n	800a6ae <HAL_TIM_Base_Start+0x66>
 800a6a4:	687b      	ldr	r3, [r7, #4]
 800a6a6:	681b      	ldr	r3, [r3, #0]
 800a6a8:	4a19      	ldr	r2, [pc, #100]	; (800a710 <HAL_TIM_Base_Start+0xc8>)
 800a6aa:	4293      	cmp	r3, r2
 800a6ac:	d115      	bne.n	800a6da <HAL_TIM_Base_Start+0x92>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800a6ae:	687b      	ldr	r3, [r7, #4]
 800a6b0:	681b      	ldr	r3, [r3, #0]
 800a6b2:	689a      	ldr	r2, [r3, #8]
 800a6b4:	4b17      	ldr	r3, [pc, #92]	; (800a714 <HAL_TIM_Base_Start+0xcc>)
 800a6b6:	4013      	ands	r3, r2
 800a6b8:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a6ba:	68fb      	ldr	r3, [r7, #12]
 800a6bc:	2b06      	cmp	r3, #6
 800a6be:	d015      	beq.n	800a6ec <HAL_TIM_Base_Start+0xa4>
 800a6c0:	68fb      	ldr	r3, [r7, #12]
 800a6c2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a6c6:	d011      	beq.n	800a6ec <HAL_TIM_Base_Start+0xa4>
    {
      __HAL_TIM_ENABLE(htim);
 800a6c8:	687b      	ldr	r3, [r7, #4]
 800a6ca:	681b      	ldr	r3, [r3, #0]
 800a6cc:	681a      	ldr	r2, [r3, #0]
 800a6ce:	687b      	ldr	r3, [r7, #4]
 800a6d0:	681b      	ldr	r3, [r3, #0]
 800a6d2:	f042 0201 	orr.w	r2, r2, #1
 800a6d6:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a6d8:	e008      	b.n	800a6ec <HAL_TIM_Base_Start+0xa4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800a6da:	687b      	ldr	r3, [r7, #4]
 800a6dc:	681b      	ldr	r3, [r3, #0]
 800a6de:	681a      	ldr	r2, [r3, #0]
 800a6e0:	687b      	ldr	r3, [r7, #4]
 800a6e2:	681b      	ldr	r3, [r3, #0]
 800a6e4:	f042 0201 	orr.w	r2, r2, #1
 800a6e8:	601a      	str	r2, [r3, #0]
 800a6ea:	e000      	b.n	800a6ee <HAL_TIM_Base_Start+0xa6>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a6ec:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 800a6ee:	2300      	movs	r3, #0
}
 800a6f0:	4618      	mov	r0, r3
 800a6f2:	3714      	adds	r7, #20
 800a6f4:	46bd      	mov	sp, r7
 800a6f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6fa:	4770      	bx	lr
 800a6fc:	40012c00 	.word	0x40012c00
 800a700:	40000400 	.word	0x40000400
 800a704:	40000800 	.word	0x40000800
 800a708:	40000c00 	.word	0x40000c00
 800a70c:	40013400 	.word	0x40013400
 800a710:	40014000 	.word	0x40014000
 800a714:	00010007 	.word	0x00010007

0800a718 <HAL_TIM_Base_Stop>:
  * @brief  Stops the TIM Base generation.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Stop(TIM_HandleTypeDef *htim)
{
 800a718:	b480      	push	{r7}
 800a71a:	b083      	sub	sp, #12
 800a71c:	af00      	add	r7, sp, #0
 800a71e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Disable the Peripheral */
  __HAL_TIM_DISABLE(htim);
 800a720:	687b      	ldr	r3, [r7, #4]
 800a722:	681b      	ldr	r3, [r3, #0]
 800a724:	6a1a      	ldr	r2, [r3, #32]
 800a726:	f241 1311 	movw	r3, #4369	; 0x1111
 800a72a:	4013      	ands	r3, r2
 800a72c:	2b00      	cmp	r3, #0
 800a72e:	d10f      	bne.n	800a750 <HAL_TIM_Base_Stop+0x38>
 800a730:	687b      	ldr	r3, [r7, #4]
 800a732:	681b      	ldr	r3, [r3, #0]
 800a734:	6a1a      	ldr	r2, [r3, #32]
 800a736:	f240 4344 	movw	r3, #1092	; 0x444
 800a73a:	4013      	ands	r3, r2
 800a73c:	2b00      	cmp	r3, #0
 800a73e:	d107      	bne.n	800a750 <HAL_TIM_Base_Stop+0x38>
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	681b      	ldr	r3, [r3, #0]
 800a744:	681a      	ldr	r2, [r3, #0]
 800a746:	687b      	ldr	r3, [r7, #4]
 800a748:	681b      	ldr	r3, [r3, #0]
 800a74a:	f022 0201 	bic.w	r2, r2, #1
 800a74e:	601a      	str	r2, [r3, #0]

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_READY;
 800a750:	687b      	ldr	r3, [r7, #4]
 800a752:	2201      	movs	r2, #1
 800a754:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Return function status */
  return HAL_OK;
 800a758:	2300      	movs	r3, #0
}
 800a75a:	4618      	mov	r0, r3
 800a75c:	370c      	adds	r7, #12
 800a75e:	46bd      	mov	sp, r7
 800a760:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a764:	4770      	bx	lr
	...

0800a768 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 800a768:	b480      	push	{r7}
 800a76a:	b085      	sub	sp, #20
 800a76c:	af00      	add	r7, sp, #0
 800a76e:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800a770:	687b      	ldr	r3, [r7, #4]
 800a772:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a776:	b2db      	uxtb	r3, r3
 800a778:	2b01      	cmp	r3, #1
 800a77a:	d001      	beq.n	800a780 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 800a77c:	2301      	movs	r3, #1
 800a77e:	e04f      	b.n	800a820 <HAL_TIM_Base_Start_IT+0xb8>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800a780:	687b      	ldr	r3, [r7, #4]
 800a782:	2202      	movs	r2, #2
 800a784:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800a788:	687b      	ldr	r3, [r7, #4]
 800a78a:	681b      	ldr	r3, [r3, #0]
 800a78c:	68da      	ldr	r2, [r3, #12]
 800a78e:	687b      	ldr	r3, [r7, #4]
 800a790:	681b      	ldr	r3, [r3, #0]
 800a792:	f042 0201 	orr.w	r2, r2, #1
 800a796:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a798:	687b      	ldr	r3, [r7, #4]
 800a79a:	681b      	ldr	r3, [r3, #0]
 800a79c:	4a23      	ldr	r2, [pc, #140]	; (800a82c <HAL_TIM_Base_Start_IT+0xc4>)
 800a79e:	4293      	cmp	r3, r2
 800a7a0:	d01d      	beq.n	800a7de <HAL_TIM_Base_Start_IT+0x76>
 800a7a2:	687b      	ldr	r3, [r7, #4]
 800a7a4:	681b      	ldr	r3, [r3, #0]
 800a7a6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a7aa:	d018      	beq.n	800a7de <HAL_TIM_Base_Start_IT+0x76>
 800a7ac:	687b      	ldr	r3, [r7, #4]
 800a7ae:	681b      	ldr	r3, [r3, #0]
 800a7b0:	4a1f      	ldr	r2, [pc, #124]	; (800a830 <HAL_TIM_Base_Start_IT+0xc8>)
 800a7b2:	4293      	cmp	r3, r2
 800a7b4:	d013      	beq.n	800a7de <HAL_TIM_Base_Start_IT+0x76>
 800a7b6:	687b      	ldr	r3, [r7, #4]
 800a7b8:	681b      	ldr	r3, [r3, #0]
 800a7ba:	4a1e      	ldr	r2, [pc, #120]	; (800a834 <HAL_TIM_Base_Start_IT+0xcc>)
 800a7bc:	4293      	cmp	r3, r2
 800a7be:	d00e      	beq.n	800a7de <HAL_TIM_Base_Start_IT+0x76>
 800a7c0:	687b      	ldr	r3, [r7, #4]
 800a7c2:	681b      	ldr	r3, [r3, #0]
 800a7c4:	4a1c      	ldr	r2, [pc, #112]	; (800a838 <HAL_TIM_Base_Start_IT+0xd0>)
 800a7c6:	4293      	cmp	r3, r2
 800a7c8:	d009      	beq.n	800a7de <HAL_TIM_Base_Start_IT+0x76>
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	681b      	ldr	r3, [r3, #0]
 800a7ce:	4a1b      	ldr	r2, [pc, #108]	; (800a83c <HAL_TIM_Base_Start_IT+0xd4>)
 800a7d0:	4293      	cmp	r3, r2
 800a7d2:	d004      	beq.n	800a7de <HAL_TIM_Base_Start_IT+0x76>
 800a7d4:	687b      	ldr	r3, [r7, #4]
 800a7d6:	681b      	ldr	r3, [r3, #0]
 800a7d8:	4a19      	ldr	r2, [pc, #100]	; (800a840 <HAL_TIM_Base_Start_IT+0xd8>)
 800a7da:	4293      	cmp	r3, r2
 800a7dc:	d115      	bne.n	800a80a <HAL_TIM_Base_Start_IT+0xa2>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800a7de:	687b      	ldr	r3, [r7, #4]
 800a7e0:	681b      	ldr	r3, [r3, #0]
 800a7e2:	689a      	ldr	r2, [r3, #8]
 800a7e4:	4b17      	ldr	r3, [pc, #92]	; (800a844 <HAL_TIM_Base_Start_IT+0xdc>)
 800a7e6:	4013      	ands	r3, r2
 800a7e8:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a7ea:	68fb      	ldr	r3, [r7, #12]
 800a7ec:	2b06      	cmp	r3, #6
 800a7ee:	d015      	beq.n	800a81c <HAL_TIM_Base_Start_IT+0xb4>
 800a7f0:	68fb      	ldr	r3, [r7, #12]
 800a7f2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a7f6:	d011      	beq.n	800a81c <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	681b      	ldr	r3, [r3, #0]
 800a7fc:	681a      	ldr	r2, [r3, #0]
 800a7fe:	687b      	ldr	r3, [r7, #4]
 800a800:	681b      	ldr	r3, [r3, #0]
 800a802:	f042 0201 	orr.w	r2, r2, #1
 800a806:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a808:	e008      	b.n	800a81c <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800a80a:	687b      	ldr	r3, [r7, #4]
 800a80c:	681b      	ldr	r3, [r3, #0]
 800a80e:	681a      	ldr	r2, [r3, #0]
 800a810:	687b      	ldr	r3, [r7, #4]
 800a812:	681b      	ldr	r3, [r3, #0]
 800a814:	f042 0201 	orr.w	r2, r2, #1
 800a818:	601a      	str	r2, [r3, #0]
 800a81a:	e000      	b.n	800a81e <HAL_TIM_Base_Start_IT+0xb6>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a81c:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 800a81e:	2300      	movs	r3, #0
}
 800a820:	4618      	mov	r0, r3
 800a822:	3714      	adds	r7, #20
 800a824:	46bd      	mov	sp, r7
 800a826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a82a:	4770      	bx	lr
 800a82c:	40012c00 	.word	0x40012c00
 800a830:	40000400 	.word	0x40000400
 800a834:	40000800 	.word	0x40000800
 800a838:	40000c00 	.word	0x40000c00
 800a83c:	40013400 	.word	0x40013400
 800a840:	40014000 	.word	0x40014000
 800a844:	00010007 	.word	0x00010007

0800a848 <HAL_TIM_Base_Stop_IT>:
  * @brief  Stops the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Stop_IT(TIM_HandleTypeDef *htim)
{
 800a848:	b480      	push	{r7}
 800a84a:	b083      	sub	sp, #12
 800a84c:	af00      	add	r7, sp, #0
 800a84e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Disable the TIM Update interrupt */
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 800a850:	687b      	ldr	r3, [r7, #4]
 800a852:	681b      	ldr	r3, [r3, #0]
 800a854:	68da      	ldr	r2, [r3, #12]
 800a856:	687b      	ldr	r3, [r7, #4]
 800a858:	681b      	ldr	r3, [r3, #0]
 800a85a:	f022 0201 	bic.w	r2, r2, #1
 800a85e:	60da      	str	r2, [r3, #12]

  /* Disable the Peripheral */
  __HAL_TIM_DISABLE(htim);
 800a860:	687b      	ldr	r3, [r7, #4]
 800a862:	681b      	ldr	r3, [r3, #0]
 800a864:	6a1a      	ldr	r2, [r3, #32]
 800a866:	f241 1311 	movw	r3, #4369	; 0x1111
 800a86a:	4013      	ands	r3, r2
 800a86c:	2b00      	cmp	r3, #0
 800a86e:	d10f      	bne.n	800a890 <HAL_TIM_Base_Stop_IT+0x48>
 800a870:	687b      	ldr	r3, [r7, #4]
 800a872:	681b      	ldr	r3, [r3, #0]
 800a874:	6a1a      	ldr	r2, [r3, #32]
 800a876:	f240 4344 	movw	r3, #1092	; 0x444
 800a87a:	4013      	ands	r3, r2
 800a87c:	2b00      	cmp	r3, #0
 800a87e:	d107      	bne.n	800a890 <HAL_TIM_Base_Stop_IT+0x48>
 800a880:	687b      	ldr	r3, [r7, #4]
 800a882:	681b      	ldr	r3, [r3, #0]
 800a884:	681a      	ldr	r2, [r3, #0]
 800a886:	687b      	ldr	r3, [r7, #4]
 800a888:	681b      	ldr	r3, [r3, #0]
 800a88a:	f022 0201 	bic.w	r2, r2, #1
 800a88e:	601a      	str	r2, [r3, #0]

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_READY;
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	2201      	movs	r2, #1
 800a894:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Return function status */
  return HAL_OK;
 800a898:	2300      	movs	r3, #0
}
 800a89a:	4618      	mov	r0, r3
 800a89c:	370c      	adds	r7, #12
 800a89e:	46bd      	mov	sp, r7
 800a8a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8a4:	4770      	bx	lr

0800a8a6 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 800a8a6:	b580      	push	{r7, lr}
 800a8a8:	b082      	sub	sp, #8
 800a8aa:	af00      	add	r7, sp, #0
 800a8ac:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800a8ae:	687b      	ldr	r3, [r7, #4]
 800a8b0:	2b00      	cmp	r3, #0
 800a8b2:	d101      	bne.n	800a8b8 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 800a8b4:	2301      	movs	r3, #1
 800a8b6:	e049      	b.n	800a94c <HAL_TIM_PWM_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800a8b8:	687b      	ldr	r3, [r7, #4]
 800a8ba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a8be:	b2db      	uxtb	r3, r3
 800a8c0:	2b00      	cmp	r3, #0
 800a8c2:	d106      	bne.n	800a8d2 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800a8c4:	687b      	ldr	r3, [r7, #4]
 800a8c6:	2200      	movs	r2, #0
 800a8c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 800a8cc:	6878      	ldr	r0, [r7, #4]
 800a8ce:	f7fa f9c1 	bl	8004c54 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800a8d2:	687b      	ldr	r3, [r7, #4]
 800a8d4:	2202      	movs	r2, #2
 800a8d6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800a8da:	687b      	ldr	r3, [r7, #4]
 800a8dc:	681a      	ldr	r2, [r3, #0]
 800a8de:	687b      	ldr	r3, [r7, #4]
 800a8e0:	3304      	adds	r3, #4
 800a8e2:	4619      	mov	r1, r3
 800a8e4:	4610      	mov	r0, r2
 800a8e6:	f000 fc43 	bl	800b170 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800a8ea:	687b      	ldr	r3, [r7, #4]
 800a8ec:	2201      	movs	r2, #1
 800a8ee:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a8f2:	687b      	ldr	r3, [r7, #4]
 800a8f4:	2201      	movs	r2, #1
 800a8f6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a8fa:	687b      	ldr	r3, [r7, #4]
 800a8fc:	2201      	movs	r2, #1
 800a8fe:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a902:	687b      	ldr	r3, [r7, #4]
 800a904:	2201      	movs	r2, #1
 800a906:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a90a:	687b      	ldr	r3, [r7, #4]
 800a90c:	2201      	movs	r2, #1
 800a90e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a912:	687b      	ldr	r3, [r7, #4]
 800a914:	2201      	movs	r2, #1
 800a916:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a91a:	687b      	ldr	r3, [r7, #4]
 800a91c:	2201      	movs	r2, #1
 800a91e:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800a922:	687b      	ldr	r3, [r7, #4]
 800a924:	2201      	movs	r2, #1
 800a926:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a92a:	687b      	ldr	r3, [r7, #4]
 800a92c:	2201      	movs	r2, #1
 800a92e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a932:	687b      	ldr	r3, [r7, #4]
 800a934:	2201      	movs	r2, #1
 800a936:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a93a:	687b      	ldr	r3, [r7, #4]
 800a93c:	2201      	movs	r2, #1
 800a93e:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800a942:	687b      	ldr	r3, [r7, #4]
 800a944:	2201      	movs	r2, #1
 800a946:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 800a94a:	2300      	movs	r3, #0
}
 800a94c:	4618      	mov	r0, r3
 800a94e:	3708      	adds	r7, #8
 800a950:	46bd      	mov	sp, r7
 800a952:	bd80      	pop	{r7, pc}

0800a954 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_5: TIM Channel 5 selected
  *            @arg TIM_CHANNEL_6: TIM Channel 6 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 800a954:	b580      	push	{r7, lr}
 800a956:	b084      	sub	sp, #16
 800a958:	af00      	add	r7, sp, #0
 800a95a:	6078      	str	r0, [r7, #4]
 800a95c:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800a95e:	683b      	ldr	r3, [r7, #0]
 800a960:	2b00      	cmp	r3, #0
 800a962:	d109      	bne.n	800a978 <HAL_TIM_PWM_Start+0x24>
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a96a:	b2db      	uxtb	r3, r3
 800a96c:	2b01      	cmp	r3, #1
 800a96e:	bf14      	ite	ne
 800a970:	2301      	movne	r3, #1
 800a972:	2300      	moveq	r3, #0
 800a974:	b2db      	uxtb	r3, r3
 800a976:	e03c      	b.n	800a9f2 <HAL_TIM_PWM_Start+0x9e>
 800a978:	683b      	ldr	r3, [r7, #0]
 800a97a:	2b04      	cmp	r3, #4
 800a97c:	d109      	bne.n	800a992 <HAL_TIM_PWM_Start+0x3e>
 800a97e:	687b      	ldr	r3, [r7, #4]
 800a980:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a984:	b2db      	uxtb	r3, r3
 800a986:	2b01      	cmp	r3, #1
 800a988:	bf14      	ite	ne
 800a98a:	2301      	movne	r3, #1
 800a98c:	2300      	moveq	r3, #0
 800a98e:	b2db      	uxtb	r3, r3
 800a990:	e02f      	b.n	800a9f2 <HAL_TIM_PWM_Start+0x9e>
 800a992:	683b      	ldr	r3, [r7, #0]
 800a994:	2b08      	cmp	r3, #8
 800a996:	d109      	bne.n	800a9ac <HAL_TIM_PWM_Start+0x58>
 800a998:	687b      	ldr	r3, [r7, #4]
 800a99a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a99e:	b2db      	uxtb	r3, r3
 800a9a0:	2b01      	cmp	r3, #1
 800a9a2:	bf14      	ite	ne
 800a9a4:	2301      	movne	r3, #1
 800a9a6:	2300      	moveq	r3, #0
 800a9a8:	b2db      	uxtb	r3, r3
 800a9aa:	e022      	b.n	800a9f2 <HAL_TIM_PWM_Start+0x9e>
 800a9ac:	683b      	ldr	r3, [r7, #0]
 800a9ae:	2b0c      	cmp	r3, #12
 800a9b0:	d109      	bne.n	800a9c6 <HAL_TIM_PWM_Start+0x72>
 800a9b2:	687b      	ldr	r3, [r7, #4]
 800a9b4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a9b8:	b2db      	uxtb	r3, r3
 800a9ba:	2b01      	cmp	r3, #1
 800a9bc:	bf14      	ite	ne
 800a9be:	2301      	movne	r3, #1
 800a9c0:	2300      	moveq	r3, #0
 800a9c2:	b2db      	uxtb	r3, r3
 800a9c4:	e015      	b.n	800a9f2 <HAL_TIM_PWM_Start+0x9e>
 800a9c6:	683b      	ldr	r3, [r7, #0]
 800a9c8:	2b10      	cmp	r3, #16
 800a9ca:	d109      	bne.n	800a9e0 <HAL_TIM_PWM_Start+0x8c>
 800a9cc:	687b      	ldr	r3, [r7, #4]
 800a9ce:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a9d2:	b2db      	uxtb	r3, r3
 800a9d4:	2b01      	cmp	r3, #1
 800a9d6:	bf14      	ite	ne
 800a9d8:	2301      	movne	r3, #1
 800a9da:	2300      	moveq	r3, #0
 800a9dc:	b2db      	uxtb	r3, r3
 800a9de:	e008      	b.n	800a9f2 <HAL_TIM_PWM_Start+0x9e>
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800a9e6:	b2db      	uxtb	r3, r3
 800a9e8:	2b01      	cmp	r3, #1
 800a9ea:	bf14      	ite	ne
 800a9ec:	2301      	movne	r3, #1
 800a9ee:	2300      	moveq	r3, #0
 800a9f0:	b2db      	uxtb	r3, r3
 800a9f2:	2b00      	cmp	r3, #0
 800a9f4:	d001      	beq.n	800a9fa <HAL_TIM_PWM_Start+0xa6>
  {
    return HAL_ERROR;
 800a9f6:	2301      	movs	r3, #1
 800a9f8:	e09c      	b.n	800ab34 <HAL_TIM_PWM_Start+0x1e0>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800a9fa:	683b      	ldr	r3, [r7, #0]
 800a9fc:	2b00      	cmp	r3, #0
 800a9fe:	d104      	bne.n	800aa0a <HAL_TIM_PWM_Start+0xb6>
 800aa00:	687b      	ldr	r3, [r7, #4]
 800aa02:	2202      	movs	r2, #2
 800aa04:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800aa08:	e023      	b.n	800aa52 <HAL_TIM_PWM_Start+0xfe>
 800aa0a:	683b      	ldr	r3, [r7, #0]
 800aa0c:	2b04      	cmp	r3, #4
 800aa0e:	d104      	bne.n	800aa1a <HAL_TIM_PWM_Start+0xc6>
 800aa10:	687b      	ldr	r3, [r7, #4]
 800aa12:	2202      	movs	r2, #2
 800aa14:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800aa18:	e01b      	b.n	800aa52 <HAL_TIM_PWM_Start+0xfe>
 800aa1a:	683b      	ldr	r3, [r7, #0]
 800aa1c:	2b08      	cmp	r3, #8
 800aa1e:	d104      	bne.n	800aa2a <HAL_TIM_PWM_Start+0xd6>
 800aa20:	687b      	ldr	r3, [r7, #4]
 800aa22:	2202      	movs	r2, #2
 800aa24:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800aa28:	e013      	b.n	800aa52 <HAL_TIM_PWM_Start+0xfe>
 800aa2a:	683b      	ldr	r3, [r7, #0]
 800aa2c:	2b0c      	cmp	r3, #12
 800aa2e:	d104      	bne.n	800aa3a <HAL_TIM_PWM_Start+0xe6>
 800aa30:	687b      	ldr	r3, [r7, #4]
 800aa32:	2202      	movs	r2, #2
 800aa34:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800aa38:	e00b      	b.n	800aa52 <HAL_TIM_PWM_Start+0xfe>
 800aa3a:	683b      	ldr	r3, [r7, #0]
 800aa3c:	2b10      	cmp	r3, #16
 800aa3e:	d104      	bne.n	800aa4a <HAL_TIM_PWM_Start+0xf6>
 800aa40:	687b      	ldr	r3, [r7, #4]
 800aa42:	2202      	movs	r2, #2
 800aa44:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800aa48:	e003      	b.n	800aa52 <HAL_TIM_PWM_Start+0xfe>
 800aa4a:	687b      	ldr	r3, [r7, #4]
 800aa4c:	2202      	movs	r2, #2
 800aa4e:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800aa52:	687b      	ldr	r3, [r7, #4]
 800aa54:	681b      	ldr	r3, [r3, #0]
 800aa56:	2201      	movs	r2, #1
 800aa58:	6839      	ldr	r1, [r7, #0]
 800aa5a:	4618      	mov	r0, r3
 800aa5c:	f000 ff92 	bl	800b984 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800aa60:	687b      	ldr	r3, [r7, #4]
 800aa62:	681b      	ldr	r3, [r3, #0]
 800aa64:	4a35      	ldr	r2, [pc, #212]	; (800ab3c <HAL_TIM_PWM_Start+0x1e8>)
 800aa66:	4293      	cmp	r3, r2
 800aa68:	d013      	beq.n	800aa92 <HAL_TIM_PWM_Start+0x13e>
 800aa6a:	687b      	ldr	r3, [r7, #4]
 800aa6c:	681b      	ldr	r3, [r3, #0]
 800aa6e:	4a34      	ldr	r2, [pc, #208]	; (800ab40 <HAL_TIM_PWM_Start+0x1ec>)
 800aa70:	4293      	cmp	r3, r2
 800aa72:	d00e      	beq.n	800aa92 <HAL_TIM_PWM_Start+0x13e>
 800aa74:	687b      	ldr	r3, [r7, #4]
 800aa76:	681b      	ldr	r3, [r3, #0]
 800aa78:	4a32      	ldr	r2, [pc, #200]	; (800ab44 <HAL_TIM_PWM_Start+0x1f0>)
 800aa7a:	4293      	cmp	r3, r2
 800aa7c:	d009      	beq.n	800aa92 <HAL_TIM_PWM_Start+0x13e>
 800aa7e:	687b      	ldr	r3, [r7, #4]
 800aa80:	681b      	ldr	r3, [r3, #0]
 800aa82:	4a31      	ldr	r2, [pc, #196]	; (800ab48 <HAL_TIM_PWM_Start+0x1f4>)
 800aa84:	4293      	cmp	r3, r2
 800aa86:	d004      	beq.n	800aa92 <HAL_TIM_PWM_Start+0x13e>
 800aa88:	687b      	ldr	r3, [r7, #4]
 800aa8a:	681b      	ldr	r3, [r3, #0]
 800aa8c:	4a2f      	ldr	r2, [pc, #188]	; (800ab4c <HAL_TIM_PWM_Start+0x1f8>)
 800aa8e:	4293      	cmp	r3, r2
 800aa90:	d101      	bne.n	800aa96 <HAL_TIM_PWM_Start+0x142>
 800aa92:	2301      	movs	r3, #1
 800aa94:	e000      	b.n	800aa98 <HAL_TIM_PWM_Start+0x144>
 800aa96:	2300      	movs	r3, #0
 800aa98:	2b00      	cmp	r3, #0
 800aa9a:	d007      	beq.n	800aaac <HAL_TIM_PWM_Start+0x158>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 800aa9c:	687b      	ldr	r3, [r7, #4]
 800aa9e:	681b      	ldr	r3, [r3, #0]
 800aaa0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800aaa2:	687b      	ldr	r3, [r7, #4]
 800aaa4:	681b      	ldr	r3, [r3, #0]
 800aaa6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800aaaa:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800aaac:	687b      	ldr	r3, [r7, #4]
 800aaae:	681b      	ldr	r3, [r3, #0]
 800aab0:	4a22      	ldr	r2, [pc, #136]	; (800ab3c <HAL_TIM_PWM_Start+0x1e8>)
 800aab2:	4293      	cmp	r3, r2
 800aab4:	d01d      	beq.n	800aaf2 <HAL_TIM_PWM_Start+0x19e>
 800aab6:	687b      	ldr	r3, [r7, #4]
 800aab8:	681b      	ldr	r3, [r3, #0]
 800aaba:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800aabe:	d018      	beq.n	800aaf2 <HAL_TIM_PWM_Start+0x19e>
 800aac0:	687b      	ldr	r3, [r7, #4]
 800aac2:	681b      	ldr	r3, [r3, #0]
 800aac4:	4a22      	ldr	r2, [pc, #136]	; (800ab50 <HAL_TIM_PWM_Start+0x1fc>)
 800aac6:	4293      	cmp	r3, r2
 800aac8:	d013      	beq.n	800aaf2 <HAL_TIM_PWM_Start+0x19e>
 800aaca:	687b      	ldr	r3, [r7, #4]
 800aacc:	681b      	ldr	r3, [r3, #0]
 800aace:	4a21      	ldr	r2, [pc, #132]	; (800ab54 <HAL_TIM_PWM_Start+0x200>)
 800aad0:	4293      	cmp	r3, r2
 800aad2:	d00e      	beq.n	800aaf2 <HAL_TIM_PWM_Start+0x19e>
 800aad4:	687b      	ldr	r3, [r7, #4]
 800aad6:	681b      	ldr	r3, [r3, #0]
 800aad8:	4a1f      	ldr	r2, [pc, #124]	; (800ab58 <HAL_TIM_PWM_Start+0x204>)
 800aada:	4293      	cmp	r3, r2
 800aadc:	d009      	beq.n	800aaf2 <HAL_TIM_PWM_Start+0x19e>
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	681b      	ldr	r3, [r3, #0]
 800aae2:	4a17      	ldr	r2, [pc, #92]	; (800ab40 <HAL_TIM_PWM_Start+0x1ec>)
 800aae4:	4293      	cmp	r3, r2
 800aae6:	d004      	beq.n	800aaf2 <HAL_TIM_PWM_Start+0x19e>
 800aae8:	687b      	ldr	r3, [r7, #4]
 800aaea:	681b      	ldr	r3, [r3, #0]
 800aaec:	4a15      	ldr	r2, [pc, #84]	; (800ab44 <HAL_TIM_PWM_Start+0x1f0>)
 800aaee:	4293      	cmp	r3, r2
 800aaf0:	d115      	bne.n	800ab1e <HAL_TIM_PWM_Start+0x1ca>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800aaf2:	687b      	ldr	r3, [r7, #4]
 800aaf4:	681b      	ldr	r3, [r3, #0]
 800aaf6:	689a      	ldr	r2, [r3, #8]
 800aaf8:	4b18      	ldr	r3, [pc, #96]	; (800ab5c <HAL_TIM_PWM_Start+0x208>)
 800aafa:	4013      	ands	r3, r2
 800aafc:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800aafe:	68fb      	ldr	r3, [r7, #12]
 800ab00:	2b06      	cmp	r3, #6
 800ab02:	d015      	beq.n	800ab30 <HAL_TIM_PWM_Start+0x1dc>
 800ab04:	68fb      	ldr	r3, [r7, #12]
 800ab06:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ab0a:	d011      	beq.n	800ab30 <HAL_TIM_PWM_Start+0x1dc>
    {
      __HAL_TIM_ENABLE(htim);
 800ab0c:	687b      	ldr	r3, [r7, #4]
 800ab0e:	681b      	ldr	r3, [r3, #0]
 800ab10:	681a      	ldr	r2, [r3, #0]
 800ab12:	687b      	ldr	r3, [r7, #4]
 800ab14:	681b      	ldr	r3, [r3, #0]
 800ab16:	f042 0201 	orr.w	r2, r2, #1
 800ab1a:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ab1c:	e008      	b.n	800ab30 <HAL_TIM_PWM_Start+0x1dc>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800ab1e:	687b      	ldr	r3, [r7, #4]
 800ab20:	681b      	ldr	r3, [r3, #0]
 800ab22:	681a      	ldr	r2, [r3, #0]
 800ab24:	687b      	ldr	r3, [r7, #4]
 800ab26:	681b      	ldr	r3, [r3, #0]
 800ab28:	f042 0201 	orr.w	r2, r2, #1
 800ab2c:	601a      	str	r2, [r3, #0]
 800ab2e:	e000      	b.n	800ab32 <HAL_TIM_PWM_Start+0x1de>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ab30:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 800ab32:	2300      	movs	r3, #0
}
 800ab34:	4618      	mov	r0, r3
 800ab36:	3710      	adds	r7, #16
 800ab38:	46bd      	mov	sp, r7
 800ab3a:	bd80      	pop	{r7, pc}
 800ab3c:	40012c00 	.word	0x40012c00
 800ab40:	40013400 	.word	0x40013400
 800ab44:	40014000 	.word	0x40014000
 800ab48:	40014400 	.word	0x40014400
 800ab4c:	40014800 	.word	0x40014800
 800ab50:	40000400 	.word	0x40000400
 800ab54:	40000800 	.word	0x40000800
 800ab58:	40000c00 	.word	0x40000c00
 800ab5c:	00010007 	.word	0x00010007

0800ab60 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 800ab60:	b580      	push	{r7, lr}
 800ab62:	b084      	sub	sp, #16
 800ab64:	af00      	add	r7, sp, #0
 800ab66:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 800ab68:	687b      	ldr	r3, [r7, #4]
 800ab6a:	681b      	ldr	r3, [r3, #0]
 800ab6c:	68db      	ldr	r3, [r3, #12]
 800ab6e:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 800ab70:	687b      	ldr	r3, [r7, #4]
 800ab72:	681b      	ldr	r3, [r3, #0]
 800ab74:	691b      	ldr	r3, [r3, #16]
 800ab76:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800ab78:	68bb      	ldr	r3, [r7, #8]
 800ab7a:	f003 0302 	and.w	r3, r3, #2
 800ab7e:	2b00      	cmp	r3, #0
 800ab80:	d020      	beq.n	800abc4 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800ab82:	68fb      	ldr	r3, [r7, #12]
 800ab84:	f003 0302 	and.w	r3, r3, #2
 800ab88:	2b00      	cmp	r3, #0
 800ab8a:	d01b      	beq.n	800abc4 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800ab8c:	687b      	ldr	r3, [r7, #4]
 800ab8e:	681b      	ldr	r3, [r3, #0]
 800ab90:	f06f 0202 	mvn.w	r2, #2
 800ab94:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800ab96:	687b      	ldr	r3, [r7, #4]
 800ab98:	2201      	movs	r2, #1
 800ab9a:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800ab9c:	687b      	ldr	r3, [r7, #4]
 800ab9e:	681b      	ldr	r3, [r3, #0]
 800aba0:	699b      	ldr	r3, [r3, #24]
 800aba2:	f003 0303 	and.w	r3, r3, #3
 800aba6:	2b00      	cmp	r3, #0
 800aba8:	d003      	beq.n	800abb2 <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800abaa:	6878      	ldr	r0, [r7, #4]
 800abac:	f000 fac1 	bl	800b132 <HAL_TIM_IC_CaptureCallback>
 800abb0:	e005      	b.n	800abbe <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800abb2:	6878      	ldr	r0, [r7, #4]
 800abb4:	f000 fab3 	bl	800b11e <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800abb8:	6878      	ldr	r0, [r7, #4]
 800abba:	f000 fac4 	bl	800b146 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800abbe:	687b      	ldr	r3, [r7, #4]
 800abc0:	2200      	movs	r2, #0
 800abc2:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800abc4:	68bb      	ldr	r3, [r7, #8]
 800abc6:	f003 0304 	and.w	r3, r3, #4
 800abca:	2b00      	cmp	r3, #0
 800abcc:	d020      	beq.n	800ac10 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800abce:	68fb      	ldr	r3, [r7, #12]
 800abd0:	f003 0304 	and.w	r3, r3, #4
 800abd4:	2b00      	cmp	r3, #0
 800abd6:	d01b      	beq.n	800ac10 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800abd8:	687b      	ldr	r3, [r7, #4]
 800abda:	681b      	ldr	r3, [r3, #0]
 800abdc:	f06f 0204 	mvn.w	r2, #4
 800abe0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800abe2:	687b      	ldr	r3, [r7, #4]
 800abe4:	2202      	movs	r2, #2
 800abe6:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800abe8:	687b      	ldr	r3, [r7, #4]
 800abea:	681b      	ldr	r3, [r3, #0]
 800abec:	699b      	ldr	r3, [r3, #24]
 800abee:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800abf2:	2b00      	cmp	r3, #0
 800abf4:	d003      	beq.n	800abfe <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800abf6:	6878      	ldr	r0, [r7, #4]
 800abf8:	f000 fa9b 	bl	800b132 <HAL_TIM_IC_CaptureCallback>
 800abfc:	e005      	b.n	800ac0a <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800abfe:	6878      	ldr	r0, [r7, #4]
 800ac00:	f000 fa8d 	bl	800b11e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ac04:	6878      	ldr	r0, [r7, #4]
 800ac06:	f000 fa9e 	bl	800b146 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ac0a:	687b      	ldr	r3, [r7, #4]
 800ac0c:	2200      	movs	r2, #0
 800ac0e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800ac10:	68bb      	ldr	r3, [r7, #8]
 800ac12:	f003 0308 	and.w	r3, r3, #8
 800ac16:	2b00      	cmp	r3, #0
 800ac18:	d020      	beq.n	800ac5c <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800ac1a:	68fb      	ldr	r3, [r7, #12]
 800ac1c:	f003 0308 	and.w	r3, r3, #8
 800ac20:	2b00      	cmp	r3, #0
 800ac22:	d01b      	beq.n	800ac5c <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800ac24:	687b      	ldr	r3, [r7, #4]
 800ac26:	681b      	ldr	r3, [r3, #0]
 800ac28:	f06f 0208 	mvn.w	r2, #8
 800ac2c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	2204      	movs	r2, #4
 800ac32:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800ac34:	687b      	ldr	r3, [r7, #4]
 800ac36:	681b      	ldr	r3, [r3, #0]
 800ac38:	69db      	ldr	r3, [r3, #28]
 800ac3a:	f003 0303 	and.w	r3, r3, #3
 800ac3e:	2b00      	cmp	r3, #0
 800ac40:	d003      	beq.n	800ac4a <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800ac42:	6878      	ldr	r0, [r7, #4]
 800ac44:	f000 fa75 	bl	800b132 <HAL_TIM_IC_CaptureCallback>
 800ac48:	e005      	b.n	800ac56 <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ac4a:	6878      	ldr	r0, [r7, #4]
 800ac4c:	f000 fa67 	bl	800b11e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ac50:	6878      	ldr	r0, [r7, #4]
 800ac52:	f000 fa78 	bl	800b146 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ac56:	687b      	ldr	r3, [r7, #4]
 800ac58:	2200      	movs	r2, #0
 800ac5a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800ac5c:	68bb      	ldr	r3, [r7, #8]
 800ac5e:	f003 0310 	and.w	r3, r3, #16
 800ac62:	2b00      	cmp	r3, #0
 800ac64:	d020      	beq.n	800aca8 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 800ac66:	68fb      	ldr	r3, [r7, #12]
 800ac68:	f003 0310 	and.w	r3, r3, #16
 800ac6c:	2b00      	cmp	r3, #0
 800ac6e:	d01b      	beq.n	800aca8 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800ac70:	687b      	ldr	r3, [r7, #4]
 800ac72:	681b      	ldr	r3, [r3, #0]
 800ac74:	f06f 0210 	mvn.w	r2, #16
 800ac78:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800ac7a:	687b      	ldr	r3, [r7, #4]
 800ac7c:	2208      	movs	r2, #8
 800ac7e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800ac80:	687b      	ldr	r3, [r7, #4]
 800ac82:	681b      	ldr	r3, [r3, #0]
 800ac84:	69db      	ldr	r3, [r3, #28]
 800ac86:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ac8a:	2b00      	cmp	r3, #0
 800ac8c:	d003      	beq.n	800ac96 <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800ac8e:	6878      	ldr	r0, [r7, #4]
 800ac90:	f000 fa4f 	bl	800b132 <HAL_TIM_IC_CaptureCallback>
 800ac94:	e005      	b.n	800aca2 <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ac96:	6878      	ldr	r0, [r7, #4]
 800ac98:	f000 fa41 	bl	800b11e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ac9c:	6878      	ldr	r0, [r7, #4]
 800ac9e:	f000 fa52 	bl	800b146 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800aca2:	687b      	ldr	r3, [r7, #4]
 800aca4:	2200      	movs	r2, #0
 800aca6:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 800aca8:	68bb      	ldr	r3, [r7, #8]
 800acaa:	f003 0301 	and.w	r3, r3, #1
 800acae:	2b00      	cmp	r3, #0
 800acb0:	d00c      	beq.n	800accc <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800acb2:	68fb      	ldr	r3, [r7, #12]
 800acb4:	f003 0301 	and.w	r3, r3, #1
 800acb8:	2b00      	cmp	r3, #0
 800acba:	d007      	beq.n	800accc <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800acbc:	687b      	ldr	r3, [r7, #4]
 800acbe:	681b      	ldr	r3, [r3, #0]
 800acc0:	f06f 0201 	mvn.w	r2, #1
 800acc4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800acc6:	6878      	ldr	r0, [r7, #4]
 800acc8:	f7f7 f85a 	bl	8001d80 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 800accc:	68bb      	ldr	r3, [r7, #8]
 800acce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800acd2:	2b00      	cmp	r3, #0
 800acd4:	d00c      	beq.n	800acf0 <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800acd6:	68fb      	ldr	r3, [r7, #12]
 800acd8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800acdc:	2b00      	cmp	r3, #0
 800acde:	d007      	beq.n	800acf0 <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800ace0:	687b      	ldr	r3, [r7, #4]
 800ace2:	681b      	ldr	r3, [r3, #0]
 800ace4:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ace8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800acea:	6878      	ldr	r0, [r7, #4]
 800acec:	f000 ff02 	bl	800baf4 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 800acf0:	68bb      	ldr	r3, [r7, #8]
 800acf2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800acf6:	2b00      	cmp	r3, #0
 800acf8:	d00c      	beq.n	800ad14 <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800acfa:	68fb      	ldr	r3, [r7, #12]
 800acfc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ad00:	2b00      	cmp	r3, #0
 800ad02:	d007      	beq.n	800ad14 <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800ad04:	687b      	ldr	r3, [r7, #4]
 800ad06:	681b      	ldr	r3, [r3, #0]
 800ad08:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800ad0c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 800ad0e:	6878      	ldr	r0, [r7, #4]
 800ad10:	f000 fefa 	bl	800bb08 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800ad14:	68bb      	ldr	r3, [r7, #8]
 800ad16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad1a:	2b00      	cmp	r3, #0
 800ad1c:	d00c      	beq.n	800ad38 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800ad1e:	68fb      	ldr	r3, [r7, #12]
 800ad20:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad24:	2b00      	cmp	r3, #0
 800ad26:	d007      	beq.n	800ad38 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800ad28:	687b      	ldr	r3, [r7, #4]
 800ad2a:	681b      	ldr	r3, [r3, #0]
 800ad2c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ad30:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800ad32:	6878      	ldr	r0, [r7, #4]
 800ad34:	f000 fa11 	bl	800b15a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800ad38:	68bb      	ldr	r3, [r7, #8]
 800ad3a:	f003 0320 	and.w	r3, r3, #32
 800ad3e:	2b00      	cmp	r3, #0
 800ad40:	d00c      	beq.n	800ad5c <HAL_TIM_IRQHandler+0x1fc>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800ad42:	68fb      	ldr	r3, [r7, #12]
 800ad44:	f003 0320 	and.w	r3, r3, #32
 800ad48:	2b00      	cmp	r3, #0
 800ad4a:	d007      	beq.n	800ad5c <HAL_TIM_IRQHandler+0x1fc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ad4c:	687b      	ldr	r3, [r7, #4]
 800ad4e:	681b      	ldr	r3, [r3, #0]
 800ad50:	f06f 0220 	mvn.w	r2, #32
 800ad54:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800ad56:	6878      	ldr	r0, [r7, #4]
 800ad58:	f000 fec2 	bl	800bae0 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800ad5c:	bf00      	nop
 800ad5e:	3710      	adds	r7, #16
 800ad60:	46bd      	mov	sp, r7
 800ad62:	bd80      	pop	{r7, pc}

0800ad64 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 800ad64:	b580      	push	{r7, lr}
 800ad66:	b086      	sub	sp, #24
 800ad68:	af00      	add	r7, sp, #0
 800ad6a:	60f8      	str	r0, [r7, #12]
 800ad6c:	60b9      	str	r1, [r7, #8]
 800ad6e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800ad70:	2300      	movs	r3, #0
 800ad72:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 800ad74:	68fb      	ldr	r3, [r7, #12]
 800ad76:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ad7a:	2b01      	cmp	r3, #1
 800ad7c:	d101      	bne.n	800ad82 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800ad7e:	2302      	movs	r3, #2
 800ad80:	e0ff      	b.n	800af82 <HAL_TIM_PWM_ConfigChannel+0x21e>
 800ad82:	68fb      	ldr	r3, [r7, #12]
 800ad84:	2201      	movs	r2, #1
 800ad86:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  switch (Channel)
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	2b14      	cmp	r3, #20
 800ad8e:	f200 80f0 	bhi.w	800af72 <HAL_TIM_PWM_ConfigChannel+0x20e>
 800ad92:	a201      	add	r2, pc, #4	; (adr r2, 800ad98 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800ad94:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ad98:	0800aded 	.word	0x0800aded
 800ad9c:	0800af73 	.word	0x0800af73
 800ada0:	0800af73 	.word	0x0800af73
 800ada4:	0800af73 	.word	0x0800af73
 800ada8:	0800ae2d 	.word	0x0800ae2d
 800adac:	0800af73 	.word	0x0800af73
 800adb0:	0800af73 	.word	0x0800af73
 800adb4:	0800af73 	.word	0x0800af73
 800adb8:	0800ae6f 	.word	0x0800ae6f
 800adbc:	0800af73 	.word	0x0800af73
 800adc0:	0800af73 	.word	0x0800af73
 800adc4:	0800af73 	.word	0x0800af73
 800adc8:	0800aeaf 	.word	0x0800aeaf
 800adcc:	0800af73 	.word	0x0800af73
 800add0:	0800af73 	.word	0x0800af73
 800add4:	0800af73 	.word	0x0800af73
 800add8:	0800aef1 	.word	0x0800aef1
 800addc:	0800af73 	.word	0x0800af73
 800ade0:	0800af73 	.word	0x0800af73
 800ade4:	0800af73 	.word	0x0800af73
 800ade8:	0800af31 	.word	0x0800af31
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800adec:	68fb      	ldr	r3, [r7, #12]
 800adee:	681b      	ldr	r3, [r3, #0]
 800adf0:	68b9      	ldr	r1, [r7, #8]
 800adf2:	4618      	mov	r0, r3
 800adf4:	f000 fa56 	bl	800b2a4 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800adf8:	68fb      	ldr	r3, [r7, #12]
 800adfa:	681b      	ldr	r3, [r3, #0]
 800adfc:	699a      	ldr	r2, [r3, #24]
 800adfe:	68fb      	ldr	r3, [r7, #12]
 800ae00:	681b      	ldr	r3, [r3, #0]
 800ae02:	f042 0208 	orr.w	r2, r2, #8
 800ae06:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800ae08:	68fb      	ldr	r3, [r7, #12]
 800ae0a:	681b      	ldr	r3, [r3, #0]
 800ae0c:	699a      	ldr	r2, [r3, #24]
 800ae0e:	68fb      	ldr	r3, [r7, #12]
 800ae10:	681b      	ldr	r3, [r3, #0]
 800ae12:	f022 0204 	bic.w	r2, r2, #4
 800ae16:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800ae18:	68fb      	ldr	r3, [r7, #12]
 800ae1a:	681b      	ldr	r3, [r3, #0]
 800ae1c:	6999      	ldr	r1, [r3, #24]
 800ae1e:	68bb      	ldr	r3, [r7, #8]
 800ae20:	691a      	ldr	r2, [r3, #16]
 800ae22:	68fb      	ldr	r3, [r7, #12]
 800ae24:	681b      	ldr	r3, [r3, #0]
 800ae26:	430a      	orrs	r2, r1
 800ae28:	619a      	str	r2, [r3, #24]
      break;
 800ae2a:	e0a5      	b.n	800af78 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800ae2c:	68fb      	ldr	r3, [r7, #12]
 800ae2e:	681b      	ldr	r3, [r3, #0]
 800ae30:	68b9      	ldr	r1, [r7, #8]
 800ae32:	4618      	mov	r0, r3
 800ae34:	f000 fac6 	bl	800b3c4 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800ae38:	68fb      	ldr	r3, [r7, #12]
 800ae3a:	681b      	ldr	r3, [r3, #0]
 800ae3c:	699a      	ldr	r2, [r3, #24]
 800ae3e:	68fb      	ldr	r3, [r7, #12]
 800ae40:	681b      	ldr	r3, [r3, #0]
 800ae42:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ae46:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800ae48:	68fb      	ldr	r3, [r7, #12]
 800ae4a:	681b      	ldr	r3, [r3, #0]
 800ae4c:	699a      	ldr	r2, [r3, #24]
 800ae4e:	68fb      	ldr	r3, [r7, #12]
 800ae50:	681b      	ldr	r3, [r3, #0]
 800ae52:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae56:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800ae58:	68fb      	ldr	r3, [r7, #12]
 800ae5a:	681b      	ldr	r3, [r3, #0]
 800ae5c:	6999      	ldr	r1, [r3, #24]
 800ae5e:	68bb      	ldr	r3, [r7, #8]
 800ae60:	691b      	ldr	r3, [r3, #16]
 800ae62:	021a      	lsls	r2, r3, #8
 800ae64:	68fb      	ldr	r3, [r7, #12]
 800ae66:	681b      	ldr	r3, [r3, #0]
 800ae68:	430a      	orrs	r2, r1
 800ae6a:	619a      	str	r2, [r3, #24]
      break;
 800ae6c:	e084      	b.n	800af78 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800ae6e:	68fb      	ldr	r3, [r7, #12]
 800ae70:	681b      	ldr	r3, [r3, #0]
 800ae72:	68b9      	ldr	r1, [r7, #8]
 800ae74:	4618      	mov	r0, r3
 800ae76:	f000 fb2f 	bl	800b4d8 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800ae7a:	68fb      	ldr	r3, [r7, #12]
 800ae7c:	681b      	ldr	r3, [r3, #0]
 800ae7e:	69da      	ldr	r2, [r3, #28]
 800ae80:	68fb      	ldr	r3, [r7, #12]
 800ae82:	681b      	ldr	r3, [r3, #0]
 800ae84:	f042 0208 	orr.w	r2, r2, #8
 800ae88:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800ae8a:	68fb      	ldr	r3, [r7, #12]
 800ae8c:	681b      	ldr	r3, [r3, #0]
 800ae8e:	69da      	ldr	r2, [r3, #28]
 800ae90:	68fb      	ldr	r3, [r7, #12]
 800ae92:	681b      	ldr	r3, [r3, #0]
 800ae94:	f022 0204 	bic.w	r2, r2, #4
 800ae98:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800ae9a:	68fb      	ldr	r3, [r7, #12]
 800ae9c:	681b      	ldr	r3, [r3, #0]
 800ae9e:	69d9      	ldr	r1, [r3, #28]
 800aea0:	68bb      	ldr	r3, [r7, #8]
 800aea2:	691a      	ldr	r2, [r3, #16]
 800aea4:	68fb      	ldr	r3, [r7, #12]
 800aea6:	681b      	ldr	r3, [r3, #0]
 800aea8:	430a      	orrs	r2, r1
 800aeaa:	61da      	str	r2, [r3, #28]
      break;
 800aeac:	e064      	b.n	800af78 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800aeae:	68fb      	ldr	r3, [r7, #12]
 800aeb0:	681b      	ldr	r3, [r3, #0]
 800aeb2:	68b9      	ldr	r1, [r7, #8]
 800aeb4:	4618      	mov	r0, r3
 800aeb6:	f000 fb97 	bl	800b5e8 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800aeba:	68fb      	ldr	r3, [r7, #12]
 800aebc:	681b      	ldr	r3, [r3, #0]
 800aebe:	69da      	ldr	r2, [r3, #28]
 800aec0:	68fb      	ldr	r3, [r7, #12]
 800aec2:	681b      	ldr	r3, [r3, #0]
 800aec4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aec8:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800aeca:	68fb      	ldr	r3, [r7, #12]
 800aecc:	681b      	ldr	r3, [r3, #0]
 800aece:	69da      	ldr	r2, [r3, #28]
 800aed0:	68fb      	ldr	r3, [r7, #12]
 800aed2:	681b      	ldr	r3, [r3, #0]
 800aed4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aed8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800aeda:	68fb      	ldr	r3, [r7, #12]
 800aedc:	681b      	ldr	r3, [r3, #0]
 800aede:	69d9      	ldr	r1, [r3, #28]
 800aee0:	68bb      	ldr	r3, [r7, #8]
 800aee2:	691b      	ldr	r3, [r3, #16]
 800aee4:	021a      	lsls	r2, r3, #8
 800aee6:	68fb      	ldr	r3, [r7, #12]
 800aee8:	681b      	ldr	r3, [r3, #0]
 800aeea:	430a      	orrs	r2, r1
 800aeec:	61da      	str	r2, [r3, #28]
      break;
 800aeee:	e043      	b.n	800af78 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));

      /* Configure the Channel 5 in PWM mode */
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 800aef0:	68fb      	ldr	r3, [r7, #12]
 800aef2:	681b      	ldr	r3, [r3, #0]
 800aef4:	68b9      	ldr	r1, [r7, #8]
 800aef6:	4618      	mov	r0, r3
 800aef8:	f000 fbe0 	bl	800b6bc <TIM_OC5_SetConfig>

      /* Set the Preload enable bit for channel5*/
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 800aefc:	68fb      	ldr	r3, [r7, #12]
 800aefe:	681b      	ldr	r3, [r3, #0]
 800af00:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800af02:	68fb      	ldr	r3, [r7, #12]
 800af04:	681b      	ldr	r3, [r3, #0]
 800af06:	f042 0208 	orr.w	r2, r2, #8
 800af0a:	655a      	str	r2, [r3, #84]	; 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 800af0c:	68fb      	ldr	r3, [r7, #12]
 800af0e:	681b      	ldr	r3, [r3, #0]
 800af10:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800af12:	68fb      	ldr	r3, [r7, #12]
 800af14:	681b      	ldr	r3, [r3, #0]
 800af16:	f022 0204 	bic.w	r2, r2, #4
 800af1a:	655a      	str	r2, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 800af1c:	68fb      	ldr	r3, [r7, #12]
 800af1e:	681b      	ldr	r3, [r3, #0]
 800af20:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800af22:	68bb      	ldr	r3, [r7, #8]
 800af24:	691a      	ldr	r2, [r3, #16]
 800af26:	68fb      	ldr	r3, [r7, #12]
 800af28:	681b      	ldr	r3, [r3, #0]
 800af2a:	430a      	orrs	r2, r1
 800af2c:	655a      	str	r2, [r3, #84]	; 0x54
      break;
 800af2e:	e023      	b.n	800af78 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));

      /* Configure the Channel 6 in PWM mode */
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 800af30:	68fb      	ldr	r3, [r7, #12]
 800af32:	681b      	ldr	r3, [r3, #0]
 800af34:	68b9      	ldr	r1, [r7, #8]
 800af36:	4618      	mov	r0, r3
 800af38:	f000 fc24 	bl	800b784 <TIM_OC6_SetConfig>

      /* Set the Preload enable bit for channel6 */
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 800af3c:	68fb      	ldr	r3, [r7, #12]
 800af3e:	681b      	ldr	r3, [r3, #0]
 800af40:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800af42:	68fb      	ldr	r3, [r7, #12]
 800af44:	681b      	ldr	r3, [r3, #0]
 800af46:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800af4a:	655a      	str	r2, [r3, #84]	; 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 800af4c:	68fb      	ldr	r3, [r7, #12]
 800af4e:	681b      	ldr	r3, [r3, #0]
 800af50:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800af52:	68fb      	ldr	r3, [r7, #12]
 800af54:	681b      	ldr	r3, [r3, #0]
 800af56:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af5a:	655a      	str	r2, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 800af5c:	68fb      	ldr	r3, [r7, #12]
 800af5e:	681b      	ldr	r3, [r3, #0]
 800af60:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800af62:	68bb      	ldr	r3, [r7, #8]
 800af64:	691b      	ldr	r3, [r3, #16]
 800af66:	021a      	lsls	r2, r3, #8
 800af68:	68fb      	ldr	r3, [r7, #12]
 800af6a:	681b      	ldr	r3, [r3, #0]
 800af6c:	430a      	orrs	r2, r1
 800af6e:	655a      	str	r2, [r3, #84]	; 0x54
      break;
 800af70:	e002      	b.n	800af78 <HAL_TIM_PWM_ConfigChannel+0x214>
    }

    default:
      status = HAL_ERROR;
 800af72:	2301      	movs	r3, #1
 800af74:	75fb      	strb	r3, [r7, #23]
      break;
 800af76:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800af78:	68fb      	ldr	r3, [r7, #12]
 800af7a:	2200      	movs	r2, #0
 800af7c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 800af80:	7dfb      	ldrb	r3, [r7, #23]
}
 800af82:	4618      	mov	r0, r3
 800af84:	3718      	adds	r7, #24
 800af86:	46bd      	mov	sp, r7
 800af88:	bd80      	pop	{r7, pc}
 800af8a:	bf00      	nop

0800af8c <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800af8c:	b580      	push	{r7, lr}
 800af8e:	b084      	sub	sp, #16
 800af90:	af00      	add	r7, sp, #0
 800af92:	6078      	str	r0, [r7, #4]
 800af94:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800af96:	2300      	movs	r3, #0
 800af98:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800af9a:	687b      	ldr	r3, [r7, #4]
 800af9c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800afa0:	2b01      	cmp	r3, #1
 800afa2:	d101      	bne.n	800afa8 <HAL_TIM_ConfigClockSource+0x1c>
 800afa4:	2302      	movs	r3, #2
 800afa6:	e0b6      	b.n	800b116 <HAL_TIM_ConfigClockSource+0x18a>
 800afa8:	687b      	ldr	r3, [r7, #4]
 800afaa:	2201      	movs	r2, #1
 800afac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 800afb0:	687b      	ldr	r3, [r7, #4]
 800afb2:	2202      	movs	r2, #2
 800afb4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800afb8:	687b      	ldr	r3, [r7, #4]
 800afba:	681b      	ldr	r3, [r3, #0]
 800afbc:	689b      	ldr	r3, [r3, #8]
 800afbe:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 800afc0:	68bb      	ldr	r3, [r7, #8]
 800afc2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800afc6:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800afca:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800afcc:	68bb      	ldr	r3, [r7, #8]
 800afce:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800afd2:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 800afd4:	687b      	ldr	r3, [r7, #4]
 800afd6:	681b      	ldr	r3, [r3, #0]
 800afd8:	68ba      	ldr	r2, [r7, #8]
 800afda:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 800afdc:	683b      	ldr	r3, [r7, #0]
 800afde:	681b      	ldr	r3, [r3, #0]
 800afe0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800afe4:	d03e      	beq.n	800b064 <HAL_TIM_ConfigClockSource+0xd8>
 800afe6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800afea:	f200 8087 	bhi.w	800b0fc <HAL_TIM_ConfigClockSource+0x170>
 800afee:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800aff2:	f000 8086 	beq.w	800b102 <HAL_TIM_ConfigClockSource+0x176>
 800aff6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800affa:	d87f      	bhi.n	800b0fc <HAL_TIM_ConfigClockSource+0x170>
 800affc:	2b70      	cmp	r3, #112	; 0x70
 800affe:	d01a      	beq.n	800b036 <HAL_TIM_ConfigClockSource+0xaa>
 800b000:	2b70      	cmp	r3, #112	; 0x70
 800b002:	d87b      	bhi.n	800b0fc <HAL_TIM_ConfigClockSource+0x170>
 800b004:	2b60      	cmp	r3, #96	; 0x60
 800b006:	d050      	beq.n	800b0aa <HAL_TIM_ConfigClockSource+0x11e>
 800b008:	2b60      	cmp	r3, #96	; 0x60
 800b00a:	d877      	bhi.n	800b0fc <HAL_TIM_ConfigClockSource+0x170>
 800b00c:	2b50      	cmp	r3, #80	; 0x50
 800b00e:	d03c      	beq.n	800b08a <HAL_TIM_ConfigClockSource+0xfe>
 800b010:	2b50      	cmp	r3, #80	; 0x50
 800b012:	d873      	bhi.n	800b0fc <HAL_TIM_ConfigClockSource+0x170>
 800b014:	2b40      	cmp	r3, #64	; 0x40
 800b016:	d058      	beq.n	800b0ca <HAL_TIM_ConfigClockSource+0x13e>
 800b018:	2b40      	cmp	r3, #64	; 0x40
 800b01a:	d86f      	bhi.n	800b0fc <HAL_TIM_ConfigClockSource+0x170>
 800b01c:	2b30      	cmp	r3, #48	; 0x30
 800b01e:	d064      	beq.n	800b0ea <HAL_TIM_ConfigClockSource+0x15e>
 800b020:	2b30      	cmp	r3, #48	; 0x30
 800b022:	d86b      	bhi.n	800b0fc <HAL_TIM_ConfigClockSource+0x170>
 800b024:	2b20      	cmp	r3, #32
 800b026:	d060      	beq.n	800b0ea <HAL_TIM_ConfigClockSource+0x15e>
 800b028:	2b20      	cmp	r3, #32
 800b02a:	d867      	bhi.n	800b0fc <HAL_TIM_ConfigClockSource+0x170>
 800b02c:	2b00      	cmp	r3, #0
 800b02e:	d05c      	beq.n	800b0ea <HAL_TIM_ConfigClockSource+0x15e>
 800b030:	2b10      	cmp	r3, #16
 800b032:	d05a      	beq.n	800b0ea <HAL_TIM_ConfigClockSource+0x15e>
 800b034:	e062      	b.n	800b0fc <HAL_TIM_ConfigClockSource+0x170>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800b036:	687b      	ldr	r3, [r7, #4]
 800b038:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800b03a:	683b      	ldr	r3, [r7, #0]
 800b03c:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800b03e:	683b      	ldr	r3, [r7, #0]
 800b040:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 800b042:	683b      	ldr	r3, [r7, #0]
 800b044:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 800b046:	f000 fc7d 	bl	800b944 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800b04a:	687b      	ldr	r3, [r7, #4]
 800b04c:	681b      	ldr	r3, [r3, #0]
 800b04e:	689b      	ldr	r3, [r3, #8]
 800b050:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800b052:	68bb      	ldr	r3, [r7, #8]
 800b054:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800b058:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800b05a:	687b      	ldr	r3, [r7, #4]
 800b05c:	681b      	ldr	r3, [r3, #0]
 800b05e:	68ba      	ldr	r2, [r7, #8]
 800b060:	609a      	str	r2, [r3, #8]
      break;
 800b062:	e04f      	b.n	800b104 <HAL_TIM_ConfigClockSource+0x178>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800b064:	687b      	ldr	r3, [r7, #4]
 800b066:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800b068:	683b      	ldr	r3, [r7, #0]
 800b06a:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800b06c:	683b      	ldr	r3, [r7, #0]
 800b06e:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 800b070:	683b      	ldr	r3, [r7, #0]
 800b072:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 800b074:	f000 fc66 	bl	800b944 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800b078:	687b      	ldr	r3, [r7, #4]
 800b07a:	681b      	ldr	r3, [r3, #0]
 800b07c:	689a      	ldr	r2, [r3, #8]
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	681b      	ldr	r3, [r3, #0]
 800b082:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b086:	609a      	str	r2, [r3, #8]
      break;
 800b088:	e03c      	b.n	800b104 <HAL_TIM_ConfigClockSource+0x178>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800b08a:	687b      	ldr	r3, [r7, #4]
 800b08c:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800b08e:	683b      	ldr	r3, [r7, #0]
 800b090:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800b092:	683b      	ldr	r3, [r7, #0]
 800b094:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b096:	461a      	mov	r2, r3
 800b098:	f000 fbda 	bl	800b850 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 800b09c:	687b      	ldr	r3, [r7, #4]
 800b09e:	681b      	ldr	r3, [r3, #0]
 800b0a0:	2150      	movs	r1, #80	; 0x50
 800b0a2:	4618      	mov	r0, r3
 800b0a4:	f000 fc33 	bl	800b90e <TIM_ITRx_SetConfig>
      break;
 800b0a8:	e02c      	b.n	800b104 <HAL_TIM_ConfigClockSource+0x178>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 800b0aa:	687b      	ldr	r3, [r7, #4]
 800b0ac:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800b0ae:	683b      	ldr	r3, [r7, #0]
 800b0b0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800b0b2:	683b      	ldr	r3, [r7, #0]
 800b0b4:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800b0b6:	461a      	mov	r2, r3
 800b0b8:	f000 fbf9 	bl	800b8ae <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 800b0bc:	687b      	ldr	r3, [r7, #4]
 800b0be:	681b      	ldr	r3, [r3, #0]
 800b0c0:	2160      	movs	r1, #96	; 0x60
 800b0c2:	4618      	mov	r0, r3
 800b0c4:	f000 fc23 	bl	800b90e <TIM_ITRx_SetConfig>
      break;
 800b0c8:	e01c      	b.n	800b104 <HAL_TIM_ConfigClockSource+0x178>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800b0ca:	687b      	ldr	r3, [r7, #4]
 800b0cc:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800b0ce:	683b      	ldr	r3, [r7, #0]
 800b0d0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800b0d2:	683b      	ldr	r3, [r7, #0]
 800b0d4:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b0d6:	461a      	mov	r2, r3
 800b0d8:	f000 fbba 	bl	800b850 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 800b0dc:	687b      	ldr	r3, [r7, #4]
 800b0de:	681b      	ldr	r3, [r3, #0]
 800b0e0:	2140      	movs	r1, #64	; 0x40
 800b0e2:	4618      	mov	r0, r3
 800b0e4:	f000 fc13 	bl	800b90e <TIM_ITRx_SetConfig>
      break;
 800b0e8:	e00c      	b.n	800b104 <HAL_TIM_ConfigClockSource+0x178>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800b0ea:	687b      	ldr	r3, [r7, #4]
 800b0ec:	681a      	ldr	r2, [r3, #0]
 800b0ee:	683b      	ldr	r3, [r7, #0]
 800b0f0:	681b      	ldr	r3, [r3, #0]
 800b0f2:	4619      	mov	r1, r3
 800b0f4:	4610      	mov	r0, r2
 800b0f6:	f000 fc0a 	bl	800b90e <TIM_ITRx_SetConfig>
      break;
 800b0fa:	e003      	b.n	800b104 <HAL_TIM_ConfigClockSource+0x178>
    }

    default:
      status = HAL_ERROR;
 800b0fc:	2301      	movs	r3, #1
 800b0fe:	73fb      	strb	r3, [r7, #15]
      break;
 800b100:	e000      	b.n	800b104 <HAL_TIM_ConfigClockSource+0x178>
      break;
 800b102:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 800b104:	687b      	ldr	r3, [r7, #4]
 800b106:	2201      	movs	r2, #1
 800b108:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800b10c:	687b      	ldr	r3, [r7, #4]
 800b10e:	2200      	movs	r2, #0
 800b110:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 800b114:	7bfb      	ldrb	r3, [r7, #15]
}
 800b116:	4618      	mov	r0, r3
 800b118:	3710      	adds	r7, #16
 800b11a:	46bd      	mov	sp, r7
 800b11c:	bd80      	pop	{r7, pc}

0800b11e <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800b11e:	b480      	push	{r7}
 800b120:	b083      	sub	sp, #12
 800b122:	af00      	add	r7, sp, #0
 800b124:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800b126:	bf00      	nop
 800b128:	370c      	adds	r7, #12
 800b12a:	46bd      	mov	sp, r7
 800b12c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b130:	4770      	bx	lr

0800b132 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 800b132:	b480      	push	{r7}
 800b134:	b083      	sub	sp, #12
 800b136:	af00      	add	r7, sp, #0
 800b138:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800b13a:	bf00      	nop
 800b13c:	370c      	adds	r7, #12
 800b13e:	46bd      	mov	sp, r7
 800b140:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b144:	4770      	bx	lr

0800b146 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800b146:	b480      	push	{r7}
 800b148:	b083      	sub	sp, #12
 800b14a:	af00      	add	r7, sp, #0
 800b14c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 800b14e:	bf00      	nop
 800b150:	370c      	adds	r7, #12
 800b152:	46bd      	mov	sp, r7
 800b154:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b158:	4770      	bx	lr

0800b15a <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800b15a:	b480      	push	{r7}
 800b15c:	b083      	sub	sp, #12
 800b15e:	af00      	add	r7, sp, #0
 800b160:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 800b162:	bf00      	nop
 800b164:	370c      	adds	r7, #12
 800b166:	46bd      	mov	sp, r7
 800b168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b16c:	4770      	bx	lr
	...

0800b170 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 800b170:	b480      	push	{r7}
 800b172:	b085      	sub	sp, #20
 800b174:	af00      	add	r7, sp, #0
 800b176:	6078      	str	r0, [r7, #4]
 800b178:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800b17a:	687b      	ldr	r3, [r7, #4]
 800b17c:	681b      	ldr	r3, [r3, #0]
 800b17e:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b180:	687b      	ldr	r3, [r7, #4]
 800b182:	4a40      	ldr	r2, [pc, #256]	; (800b284 <TIM_Base_SetConfig+0x114>)
 800b184:	4293      	cmp	r3, r2
 800b186:	d013      	beq.n	800b1b0 <TIM_Base_SetConfig+0x40>
 800b188:	687b      	ldr	r3, [r7, #4]
 800b18a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b18e:	d00f      	beq.n	800b1b0 <TIM_Base_SetConfig+0x40>
 800b190:	687b      	ldr	r3, [r7, #4]
 800b192:	4a3d      	ldr	r2, [pc, #244]	; (800b288 <TIM_Base_SetConfig+0x118>)
 800b194:	4293      	cmp	r3, r2
 800b196:	d00b      	beq.n	800b1b0 <TIM_Base_SetConfig+0x40>
 800b198:	687b      	ldr	r3, [r7, #4]
 800b19a:	4a3c      	ldr	r2, [pc, #240]	; (800b28c <TIM_Base_SetConfig+0x11c>)
 800b19c:	4293      	cmp	r3, r2
 800b19e:	d007      	beq.n	800b1b0 <TIM_Base_SetConfig+0x40>
 800b1a0:	687b      	ldr	r3, [r7, #4]
 800b1a2:	4a3b      	ldr	r2, [pc, #236]	; (800b290 <TIM_Base_SetConfig+0x120>)
 800b1a4:	4293      	cmp	r3, r2
 800b1a6:	d003      	beq.n	800b1b0 <TIM_Base_SetConfig+0x40>
 800b1a8:	687b      	ldr	r3, [r7, #4]
 800b1aa:	4a3a      	ldr	r2, [pc, #232]	; (800b294 <TIM_Base_SetConfig+0x124>)
 800b1ac:	4293      	cmp	r3, r2
 800b1ae:	d108      	bne.n	800b1c2 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b1b0:	68fb      	ldr	r3, [r7, #12]
 800b1b2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b1b6:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800b1b8:	683b      	ldr	r3, [r7, #0]
 800b1ba:	685b      	ldr	r3, [r3, #4]
 800b1bc:	68fa      	ldr	r2, [r7, #12]
 800b1be:	4313      	orrs	r3, r2
 800b1c0:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800b1c2:	687b      	ldr	r3, [r7, #4]
 800b1c4:	4a2f      	ldr	r2, [pc, #188]	; (800b284 <TIM_Base_SetConfig+0x114>)
 800b1c6:	4293      	cmp	r3, r2
 800b1c8:	d01f      	beq.n	800b20a <TIM_Base_SetConfig+0x9a>
 800b1ca:	687b      	ldr	r3, [r7, #4]
 800b1cc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b1d0:	d01b      	beq.n	800b20a <TIM_Base_SetConfig+0x9a>
 800b1d2:	687b      	ldr	r3, [r7, #4]
 800b1d4:	4a2c      	ldr	r2, [pc, #176]	; (800b288 <TIM_Base_SetConfig+0x118>)
 800b1d6:	4293      	cmp	r3, r2
 800b1d8:	d017      	beq.n	800b20a <TIM_Base_SetConfig+0x9a>
 800b1da:	687b      	ldr	r3, [r7, #4]
 800b1dc:	4a2b      	ldr	r2, [pc, #172]	; (800b28c <TIM_Base_SetConfig+0x11c>)
 800b1de:	4293      	cmp	r3, r2
 800b1e0:	d013      	beq.n	800b20a <TIM_Base_SetConfig+0x9a>
 800b1e2:	687b      	ldr	r3, [r7, #4]
 800b1e4:	4a2a      	ldr	r2, [pc, #168]	; (800b290 <TIM_Base_SetConfig+0x120>)
 800b1e6:	4293      	cmp	r3, r2
 800b1e8:	d00f      	beq.n	800b20a <TIM_Base_SetConfig+0x9a>
 800b1ea:	687b      	ldr	r3, [r7, #4]
 800b1ec:	4a29      	ldr	r2, [pc, #164]	; (800b294 <TIM_Base_SetConfig+0x124>)
 800b1ee:	4293      	cmp	r3, r2
 800b1f0:	d00b      	beq.n	800b20a <TIM_Base_SetConfig+0x9a>
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	4a28      	ldr	r2, [pc, #160]	; (800b298 <TIM_Base_SetConfig+0x128>)
 800b1f6:	4293      	cmp	r3, r2
 800b1f8:	d007      	beq.n	800b20a <TIM_Base_SetConfig+0x9a>
 800b1fa:	687b      	ldr	r3, [r7, #4]
 800b1fc:	4a27      	ldr	r2, [pc, #156]	; (800b29c <TIM_Base_SetConfig+0x12c>)
 800b1fe:	4293      	cmp	r3, r2
 800b200:	d003      	beq.n	800b20a <TIM_Base_SetConfig+0x9a>
 800b202:	687b      	ldr	r3, [r7, #4]
 800b204:	4a26      	ldr	r2, [pc, #152]	; (800b2a0 <TIM_Base_SetConfig+0x130>)
 800b206:	4293      	cmp	r3, r2
 800b208:	d108      	bne.n	800b21c <TIM_Base_SetConfig+0xac>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800b20a:	68fb      	ldr	r3, [r7, #12]
 800b20c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b210:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b212:	683b      	ldr	r3, [r7, #0]
 800b214:	68db      	ldr	r3, [r3, #12]
 800b216:	68fa      	ldr	r2, [r7, #12]
 800b218:	4313      	orrs	r3, r2
 800b21a:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b21c:	68fb      	ldr	r3, [r7, #12]
 800b21e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800b222:	683b      	ldr	r3, [r7, #0]
 800b224:	695b      	ldr	r3, [r3, #20]
 800b226:	4313      	orrs	r3, r2
 800b228:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 800b22a:	687b      	ldr	r3, [r7, #4]
 800b22c:	68fa      	ldr	r2, [r7, #12]
 800b22e:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b230:	683b      	ldr	r3, [r7, #0]
 800b232:	689a      	ldr	r2, [r3, #8]
 800b234:	687b      	ldr	r3, [r7, #4]
 800b236:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800b238:	683b      	ldr	r3, [r7, #0]
 800b23a:	681a      	ldr	r2, [r3, #0]
 800b23c:	687b      	ldr	r3, [r7, #4]
 800b23e:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800b240:	687b      	ldr	r3, [r7, #4]
 800b242:	4a10      	ldr	r2, [pc, #64]	; (800b284 <TIM_Base_SetConfig+0x114>)
 800b244:	4293      	cmp	r3, r2
 800b246:	d00f      	beq.n	800b268 <TIM_Base_SetConfig+0xf8>
 800b248:	687b      	ldr	r3, [r7, #4]
 800b24a:	4a12      	ldr	r2, [pc, #72]	; (800b294 <TIM_Base_SetConfig+0x124>)
 800b24c:	4293      	cmp	r3, r2
 800b24e:	d00b      	beq.n	800b268 <TIM_Base_SetConfig+0xf8>
 800b250:	687b      	ldr	r3, [r7, #4]
 800b252:	4a11      	ldr	r2, [pc, #68]	; (800b298 <TIM_Base_SetConfig+0x128>)
 800b254:	4293      	cmp	r3, r2
 800b256:	d007      	beq.n	800b268 <TIM_Base_SetConfig+0xf8>
 800b258:	687b      	ldr	r3, [r7, #4]
 800b25a:	4a10      	ldr	r2, [pc, #64]	; (800b29c <TIM_Base_SetConfig+0x12c>)
 800b25c:	4293      	cmp	r3, r2
 800b25e:	d003      	beq.n	800b268 <TIM_Base_SetConfig+0xf8>
 800b260:	687b      	ldr	r3, [r7, #4]
 800b262:	4a0f      	ldr	r2, [pc, #60]	; (800b2a0 <TIM_Base_SetConfig+0x130>)
 800b264:	4293      	cmp	r3, r2
 800b266:	d103      	bne.n	800b270 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800b268:	683b      	ldr	r3, [r7, #0]
 800b26a:	691a      	ldr	r2, [r3, #16]
 800b26c:	687b      	ldr	r3, [r7, #4]
 800b26e:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800b270:	687b      	ldr	r3, [r7, #4]
 800b272:	2201      	movs	r2, #1
 800b274:	615a      	str	r2, [r3, #20]
}
 800b276:	bf00      	nop
 800b278:	3714      	adds	r7, #20
 800b27a:	46bd      	mov	sp, r7
 800b27c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b280:	4770      	bx	lr
 800b282:	bf00      	nop
 800b284:	40012c00 	.word	0x40012c00
 800b288:	40000400 	.word	0x40000400
 800b28c:	40000800 	.word	0x40000800
 800b290:	40000c00 	.word	0x40000c00
 800b294:	40013400 	.word	0x40013400
 800b298:	40014000 	.word	0x40014000
 800b29c:	40014400 	.word	0x40014400
 800b2a0:	40014800 	.word	0x40014800

0800b2a4 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800b2a4:	b480      	push	{r7}
 800b2a6:	b087      	sub	sp, #28
 800b2a8:	af00      	add	r7, sp, #0
 800b2aa:	6078      	str	r0, [r7, #4]
 800b2ac:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b2ae:	687b      	ldr	r3, [r7, #4]
 800b2b0:	6a1b      	ldr	r3, [r3, #32]
 800b2b2:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b2b4:	687b      	ldr	r3, [r7, #4]
 800b2b6:	6a1b      	ldr	r3, [r3, #32]
 800b2b8:	f023 0201 	bic.w	r2, r3, #1
 800b2bc:	687b      	ldr	r3, [r7, #4]
 800b2be:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b2c0:	687b      	ldr	r3, [r7, #4]
 800b2c2:	685b      	ldr	r3, [r3, #4]
 800b2c4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800b2c6:	687b      	ldr	r3, [r7, #4]
 800b2c8:	699b      	ldr	r3, [r3, #24]
 800b2ca:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 800b2cc:	68fb      	ldr	r3, [r7, #12]
 800b2ce:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b2d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b2d6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800b2d8:	68fb      	ldr	r3, [r7, #12]
 800b2da:	f023 0303 	bic.w	r3, r3, #3
 800b2de:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800b2e0:	683b      	ldr	r3, [r7, #0]
 800b2e2:	681b      	ldr	r3, [r3, #0]
 800b2e4:	68fa      	ldr	r2, [r7, #12]
 800b2e6:	4313      	orrs	r3, r2
 800b2e8:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 800b2ea:	697b      	ldr	r3, [r7, #20]
 800b2ec:	f023 0302 	bic.w	r3, r3, #2
 800b2f0:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800b2f2:	683b      	ldr	r3, [r7, #0]
 800b2f4:	689b      	ldr	r3, [r3, #8]
 800b2f6:	697a      	ldr	r2, [r7, #20]
 800b2f8:	4313      	orrs	r3, r2
 800b2fa:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800b2fc:	687b      	ldr	r3, [r7, #4]
 800b2fe:	4a2c      	ldr	r2, [pc, #176]	; (800b3b0 <TIM_OC1_SetConfig+0x10c>)
 800b300:	4293      	cmp	r3, r2
 800b302:	d00f      	beq.n	800b324 <TIM_OC1_SetConfig+0x80>
 800b304:	687b      	ldr	r3, [r7, #4]
 800b306:	4a2b      	ldr	r2, [pc, #172]	; (800b3b4 <TIM_OC1_SetConfig+0x110>)
 800b308:	4293      	cmp	r3, r2
 800b30a:	d00b      	beq.n	800b324 <TIM_OC1_SetConfig+0x80>
 800b30c:	687b      	ldr	r3, [r7, #4]
 800b30e:	4a2a      	ldr	r2, [pc, #168]	; (800b3b8 <TIM_OC1_SetConfig+0x114>)
 800b310:	4293      	cmp	r3, r2
 800b312:	d007      	beq.n	800b324 <TIM_OC1_SetConfig+0x80>
 800b314:	687b      	ldr	r3, [r7, #4]
 800b316:	4a29      	ldr	r2, [pc, #164]	; (800b3bc <TIM_OC1_SetConfig+0x118>)
 800b318:	4293      	cmp	r3, r2
 800b31a:	d003      	beq.n	800b324 <TIM_OC1_SetConfig+0x80>
 800b31c:	687b      	ldr	r3, [r7, #4]
 800b31e:	4a28      	ldr	r2, [pc, #160]	; (800b3c0 <TIM_OC1_SetConfig+0x11c>)
 800b320:	4293      	cmp	r3, r2
 800b322:	d10c      	bne.n	800b33e <TIM_OC1_SetConfig+0x9a>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 800b324:	697b      	ldr	r3, [r7, #20]
 800b326:	f023 0308 	bic.w	r3, r3, #8
 800b32a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800b32c:	683b      	ldr	r3, [r7, #0]
 800b32e:	68db      	ldr	r3, [r3, #12]
 800b330:	697a      	ldr	r2, [r7, #20]
 800b332:	4313      	orrs	r3, r2
 800b334:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800b336:	697b      	ldr	r3, [r7, #20]
 800b338:	f023 0304 	bic.w	r3, r3, #4
 800b33c:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b33e:	687b      	ldr	r3, [r7, #4]
 800b340:	4a1b      	ldr	r2, [pc, #108]	; (800b3b0 <TIM_OC1_SetConfig+0x10c>)
 800b342:	4293      	cmp	r3, r2
 800b344:	d00f      	beq.n	800b366 <TIM_OC1_SetConfig+0xc2>
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	4a1a      	ldr	r2, [pc, #104]	; (800b3b4 <TIM_OC1_SetConfig+0x110>)
 800b34a:	4293      	cmp	r3, r2
 800b34c:	d00b      	beq.n	800b366 <TIM_OC1_SetConfig+0xc2>
 800b34e:	687b      	ldr	r3, [r7, #4]
 800b350:	4a19      	ldr	r2, [pc, #100]	; (800b3b8 <TIM_OC1_SetConfig+0x114>)
 800b352:	4293      	cmp	r3, r2
 800b354:	d007      	beq.n	800b366 <TIM_OC1_SetConfig+0xc2>
 800b356:	687b      	ldr	r3, [r7, #4]
 800b358:	4a18      	ldr	r2, [pc, #96]	; (800b3bc <TIM_OC1_SetConfig+0x118>)
 800b35a:	4293      	cmp	r3, r2
 800b35c:	d003      	beq.n	800b366 <TIM_OC1_SetConfig+0xc2>
 800b35e:	687b      	ldr	r3, [r7, #4]
 800b360:	4a17      	ldr	r2, [pc, #92]	; (800b3c0 <TIM_OC1_SetConfig+0x11c>)
 800b362:	4293      	cmp	r3, r2
 800b364:	d111      	bne.n	800b38a <TIM_OC1_SetConfig+0xe6>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800b366:	693b      	ldr	r3, [r7, #16]
 800b368:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b36c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800b36e:	693b      	ldr	r3, [r7, #16]
 800b370:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b374:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800b376:	683b      	ldr	r3, [r7, #0]
 800b378:	695b      	ldr	r3, [r3, #20]
 800b37a:	693a      	ldr	r2, [r7, #16]
 800b37c:	4313      	orrs	r3, r2
 800b37e:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800b380:	683b      	ldr	r3, [r7, #0]
 800b382:	699b      	ldr	r3, [r3, #24]
 800b384:	693a      	ldr	r2, [r7, #16]
 800b386:	4313      	orrs	r3, r2
 800b388:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b38a:	687b      	ldr	r3, [r7, #4]
 800b38c:	693a      	ldr	r2, [r7, #16]
 800b38e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800b390:	687b      	ldr	r3, [r7, #4]
 800b392:	68fa      	ldr	r2, [r7, #12]
 800b394:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800b396:	683b      	ldr	r3, [r7, #0]
 800b398:	685a      	ldr	r2, [r3, #4]
 800b39a:	687b      	ldr	r3, [r7, #4]
 800b39c:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b39e:	687b      	ldr	r3, [r7, #4]
 800b3a0:	697a      	ldr	r2, [r7, #20]
 800b3a2:	621a      	str	r2, [r3, #32]
}
 800b3a4:	bf00      	nop
 800b3a6:	371c      	adds	r7, #28
 800b3a8:	46bd      	mov	sp, r7
 800b3aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3ae:	4770      	bx	lr
 800b3b0:	40012c00 	.word	0x40012c00
 800b3b4:	40013400 	.word	0x40013400
 800b3b8:	40014000 	.word	0x40014000
 800b3bc:	40014400 	.word	0x40014400
 800b3c0:	40014800 	.word	0x40014800

0800b3c4 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800b3c4:	b480      	push	{r7}
 800b3c6:	b087      	sub	sp, #28
 800b3c8:	af00      	add	r7, sp, #0
 800b3ca:	6078      	str	r0, [r7, #4]
 800b3cc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b3ce:	687b      	ldr	r3, [r7, #4]
 800b3d0:	6a1b      	ldr	r3, [r3, #32]
 800b3d2:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b3d4:	687b      	ldr	r3, [r7, #4]
 800b3d6:	6a1b      	ldr	r3, [r3, #32]
 800b3d8:	f023 0210 	bic.w	r2, r3, #16
 800b3dc:	687b      	ldr	r3, [r7, #4]
 800b3de:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	685b      	ldr	r3, [r3, #4]
 800b3e4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800b3e6:	687b      	ldr	r3, [r7, #4]
 800b3e8:	699b      	ldr	r3, [r3, #24]
 800b3ea:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 800b3ec:	68fb      	ldr	r3, [r7, #12]
 800b3ee:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800b3f2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b3f6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800b3f8:	68fb      	ldr	r3, [r7, #12]
 800b3fa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b3fe:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800b400:	683b      	ldr	r3, [r7, #0]
 800b402:	681b      	ldr	r3, [r3, #0]
 800b404:	021b      	lsls	r3, r3, #8
 800b406:	68fa      	ldr	r2, [r7, #12]
 800b408:	4313      	orrs	r3, r2
 800b40a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 800b40c:	697b      	ldr	r3, [r7, #20]
 800b40e:	f023 0320 	bic.w	r3, r3, #32
 800b412:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800b414:	683b      	ldr	r3, [r7, #0]
 800b416:	689b      	ldr	r3, [r3, #8]
 800b418:	011b      	lsls	r3, r3, #4
 800b41a:	697a      	ldr	r2, [r7, #20]
 800b41c:	4313      	orrs	r3, r2
 800b41e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800b420:	687b      	ldr	r3, [r7, #4]
 800b422:	4a28      	ldr	r2, [pc, #160]	; (800b4c4 <TIM_OC2_SetConfig+0x100>)
 800b424:	4293      	cmp	r3, r2
 800b426:	d003      	beq.n	800b430 <TIM_OC2_SetConfig+0x6c>
 800b428:	687b      	ldr	r3, [r7, #4]
 800b42a:	4a27      	ldr	r2, [pc, #156]	; (800b4c8 <TIM_OC2_SetConfig+0x104>)
 800b42c:	4293      	cmp	r3, r2
 800b42e:	d10d      	bne.n	800b44c <TIM_OC2_SetConfig+0x88>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 800b430:	697b      	ldr	r3, [r7, #20]
 800b432:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b436:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800b438:	683b      	ldr	r3, [r7, #0]
 800b43a:	68db      	ldr	r3, [r3, #12]
 800b43c:	011b      	lsls	r3, r3, #4
 800b43e:	697a      	ldr	r2, [r7, #20]
 800b440:	4313      	orrs	r3, r2
 800b442:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 800b444:	697b      	ldr	r3, [r7, #20]
 800b446:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b44a:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b44c:	687b      	ldr	r3, [r7, #4]
 800b44e:	4a1d      	ldr	r2, [pc, #116]	; (800b4c4 <TIM_OC2_SetConfig+0x100>)
 800b450:	4293      	cmp	r3, r2
 800b452:	d00f      	beq.n	800b474 <TIM_OC2_SetConfig+0xb0>
 800b454:	687b      	ldr	r3, [r7, #4]
 800b456:	4a1c      	ldr	r2, [pc, #112]	; (800b4c8 <TIM_OC2_SetConfig+0x104>)
 800b458:	4293      	cmp	r3, r2
 800b45a:	d00b      	beq.n	800b474 <TIM_OC2_SetConfig+0xb0>
 800b45c:	687b      	ldr	r3, [r7, #4]
 800b45e:	4a1b      	ldr	r2, [pc, #108]	; (800b4cc <TIM_OC2_SetConfig+0x108>)
 800b460:	4293      	cmp	r3, r2
 800b462:	d007      	beq.n	800b474 <TIM_OC2_SetConfig+0xb0>
 800b464:	687b      	ldr	r3, [r7, #4]
 800b466:	4a1a      	ldr	r2, [pc, #104]	; (800b4d0 <TIM_OC2_SetConfig+0x10c>)
 800b468:	4293      	cmp	r3, r2
 800b46a:	d003      	beq.n	800b474 <TIM_OC2_SetConfig+0xb0>
 800b46c:	687b      	ldr	r3, [r7, #4]
 800b46e:	4a19      	ldr	r2, [pc, #100]	; (800b4d4 <TIM_OC2_SetConfig+0x110>)
 800b470:	4293      	cmp	r3, r2
 800b472:	d113      	bne.n	800b49c <TIM_OC2_SetConfig+0xd8>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 800b474:	693b      	ldr	r3, [r7, #16]
 800b476:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b47a:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800b47c:	693b      	ldr	r3, [r7, #16]
 800b47e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b482:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 800b484:	683b      	ldr	r3, [r7, #0]
 800b486:	695b      	ldr	r3, [r3, #20]
 800b488:	009b      	lsls	r3, r3, #2
 800b48a:	693a      	ldr	r2, [r7, #16]
 800b48c:	4313      	orrs	r3, r2
 800b48e:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800b490:	683b      	ldr	r3, [r7, #0]
 800b492:	699b      	ldr	r3, [r3, #24]
 800b494:	009b      	lsls	r3, r3, #2
 800b496:	693a      	ldr	r2, [r7, #16]
 800b498:	4313      	orrs	r3, r2
 800b49a:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b49c:	687b      	ldr	r3, [r7, #4]
 800b49e:	693a      	ldr	r2, [r7, #16]
 800b4a0:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800b4a2:	687b      	ldr	r3, [r7, #4]
 800b4a4:	68fa      	ldr	r2, [r7, #12]
 800b4a6:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 800b4a8:	683b      	ldr	r3, [r7, #0]
 800b4aa:	685a      	ldr	r2, [r3, #4]
 800b4ac:	687b      	ldr	r3, [r7, #4]
 800b4ae:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b4b0:	687b      	ldr	r3, [r7, #4]
 800b4b2:	697a      	ldr	r2, [r7, #20]
 800b4b4:	621a      	str	r2, [r3, #32]
}
 800b4b6:	bf00      	nop
 800b4b8:	371c      	adds	r7, #28
 800b4ba:	46bd      	mov	sp, r7
 800b4bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4c0:	4770      	bx	lr
 800b4c2:	bf00      	nop
 800b4c4:	40012c00 	.word	0x40012c00
 800b4c8:	40013400 	.word	0x40013400
 800b4cc:	40014000 	.word	0x40014000
 800b4d0:	40014400 	.word	0x40014400
 800b4d4:	40014800 	.word	0x40014800

0800b4d8 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800b4d8:	b480      	push	{r7}
 800b4da:	b087      	sub	sp, #28
 800b4dc:	af00      	add	r7, sp, #0
 800b4de:	6078      	str	r0, [r7, #4]
 800b4e0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b4e2:	687b      	ldr	r3, [r7, #4]
 800b4e4:	6a1b      	ldr	r3, [r3, #32]
 800b4e6:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800b4e8:	687b      	ldr	r3, [r7, #4]
 800b4ea:	6a1b      	ldr	r3, [r3, #32]
 800b4ec:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b4f0:	687b      	ldr	r3, [r7, #4]
 800b4f2:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b4f4:	687b      	ldr	r3, [r7, #4]
 800b4f6:	685b      	ldr	r3, [r3, #4]
 800b4f8:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800b4fa:	687b      	ldr	r3, [r7, #4]
 800b4fc:	69db      	ldr	r3, [r3, #28]
 800b4fe:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 800b500:	68fb      	ldr	r3, [r7, #12]
 800b502:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b506:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b50a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800b50c:	68fb      	ldr	r3, [r7, #12]
 800b50e:	f023 0303 	bic.w	r3, r3, #3
 800b512:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800b514:	683b      	ldr	r3, [r7, #0]
 800b516:	681b      	ldr	r3, [r3, #0]
 800b518:	68fa      	ldr	r2, [r7, #12]
 800b51a:	4313      	orrs	r3, r2
 800b51c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 800b51e:	697b      	ldr	r3, [r7, #20]
 800b520:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b524:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800b526:	683b      	ldr	r3, [r7, #0]
 800b528:	689b      	ldr	r3, [r3, #8]
 800b52a:	021b      	lsls	r3, r3, #8
 800b52c:	697a      	ldr	r2, [r7, #20]
 800b52e:	4313      	orrs	r3, r2
 800b530:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800b532:	687b      	ldr	r3, [r7, #4]
 800b534:	4a27      	ldr	r2, [pc, #156]	; (800b5d4 <TIM_OC3_SetConfig+0xfc>)
 800b536:	4293      	cmp	r3, r2
 800b538:	d003      	beq.n	800b542 <TIM_OC3_SetConfig+0x6a>
 800b53a:	687b      	ldr	r3, [r7, #4]
 800b53c:	4a26      	ldr	r2, [pc, #152]	; (800b5d8 <TIM_OC3_SetConfig+0x100>)
 800b53e:	4293      	cmp	r3, r2
 800b540:	d10d      	bne.n	800b55e <TIM_OC3_SetConfig+0x86>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 800b542:	697b      	ldr	r3, [r7, #20]
 800b544:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b548:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800b54a:	683b      	ldr	r3, [r7, #0]
 800b54c:	68db      	ldr	r3, [r3, #12]
 800b54e:	021b      	lsls	r3, r3, #8
 800b550:	697a      	ldr	r2, [r7, #20]
 800b552:	4313      	orrs	r3, r2
 800b554:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 800b556:	697b      	ldr	r3, [r7, #20]
 800b558:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b55c:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b55e:	687b      	ldr	r3, [r7, #4]
 800b560:	4a1c      	ldr	r2, [pc, #112]	; (800b5d4 <TIM_OC3_SetConfig+0xfc>)
 800b562:	4293      	cmp	r3, r2
 800b564:	d00f      	beq.n	800b586 <TIM_OC3_SetConfig+0xae>
 800b566:	687b      	ldr	r3, [r7, #4]
 800b568:	4a1b      	ldr	r2, [pc, #108]	; (800b5d8 <TIM_OC3_SetConfig+0x100>)
 800b56a:	4293      	cmp	r3, r2
 800b56c:	d00b      	beq.n	800b586 <TIM_OC3_SetConfig+0xae>
 800b56e:	687b      	ldr	r3, [r7, #4]
 800b570:	4a1a      	ldr	r2, [pc, #104]	; (800b5dc <TIM_OC3_SetConfig+0x104>)
 800b572:	4293      	cmp	r3, r2
 800b574:	d007      	beq.n	800b586 <TIM_OC3_SetConfig+0xae>
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	4a19      	ldr	r2, [pc, #100]	; (800b5e0 <TIM_OC3_SetConfig+0x108>)
 800b57a:	4293      	cmp	r3, r2
 800b57c:	d003      	beq.n	800b586 <TIM_OC3_SetConfig+0xae>
 800b57e:	687b      	ldr	r3, [r7, #4]
 800b580:	4a18      	ldr	r2, [pc, #96]	; (800b5e4 <TIM_OC3_SetConfig+0x10c>)
 800b582:	4293      	cmp	r3, r2
 800b584:	d113      	bne.n	800b5ae <TIM_OC3_SetConfig+0xd6>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 800b586:	693b      	ldr	r3, [r7, #16]
 800b588:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b58c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800b58e:	693b      	ldr	r3, [r7, #16]
 800b590:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b594:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 800b596:	683b      	ldr	r3, [r7, #0]
 800b598:	695b      	ldr	r3, [r3, #20]
 800b59a:	011b      	lsls	r3, r3, #4
 800b59c:	693a      	ldr	r2, [r7, #16]
 800b59e:	4313      	orrs	r3, r2
 800b5a0:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800b5a2:	683b      	ldr	r3, [r7, #0]
 800b5a4:	699b      	ldr	r3, [r3, #24]
 800b5a6:	011b      	lsls	r3, r3, #4
 800b5a8:	693a      	ldr	r2, [r7, #16]
 800b5aa:	4313      	orrs	r3, r2
 800b5ac:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	693a      	ldr	r2, [r7, #16]
 800b5b2:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800b5b4:	687b      	ldr	r3, [r7, #4]
 800b5b6:	68fa      	ldr	r2, [r7, #12]
 800b5b8:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800b5ba:	683b      	ldr	r3, [r7, #0]
 800b5bc:	685a      	ldr	r2, [r3, #4]
 800b5be:	687b      	ldr	r3, [r7, #4]
 800b5c0:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b5c2:	687b      	ldr	r3, [r7, #4]
 800b5c4:	697a      	ldr	r2, [r7, #20]
 800b5c6:	621a      	str	r2, [r3, #32]
}
 800b5c8:	bf00      	nop
 800b5ca:	371c      	adds	r7, #28
 800b5cc:	46bd      	mov	sp, r7
 800b5ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5d2:	4770      	bx	lr
 800b5d4:	40012c00 	.word	0x40012c00
 800b5d8:	40013400 	.word	0x40013400
 800b5dc:	40014000 	.word	0x40014000
 800b5e0:	40014400 	.word	0x40014400
 800b5e4:	40014800 	.word	0x40014800

0800b5e8 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800b5e8:	b480      	push	{r7}
 800b5ea:	b087      	sub	sp, #28
 800b5ec:	af00      	add	r7, sp, #0
 800b5ee:	6078      	str	r0, [r7, #4]
 800b5f0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b5f2:	687b      	ldr	r3, [r7, #4]
 800b5f4:	6a1b      	ldr	r3, [r3, #32]
 800b5f6:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800b5f8:	687b      	ldr	r3, [r7, #4]
 800b5fa:	6a1b      	ldr	r3, [r3, #32]
 800b5fc:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b600:	687b      	ldr	r3, [r7, #4]
 800b602:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b604:	687b      	ldr	r3, [r7, #4]
 800b606:	685b      	ldr	r3, [r3, #4]
 800b608:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800b60a:	687b      	ldr	r3, [r7, #4]
 800b60c:	69db      	ldr	r3, [r3, #28]
 800b60e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 800b610:	68fb      	ldr	r3, [r7, #12]
 800b612:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800b616:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b61a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800b61c:	68fb      	ldr	r3, [r7, #12]
 800b61e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b622:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800b624:	683b      	ldr	r3, [r7, #0]
 800b626:	681b      	ldr	r3, [r3, #0]
 800b628:	021b      	lsls	r3, r3, #8
 800b62a:	68fa      	ldr	r2, [r7, #12]
 800b62c:	4313      	orrs	r3, r2
 800b62e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 800b630:	693b      	ldr	r3, [r7, #16]
 800b632:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b636:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800b638:	683b      	ldr	r3, [r7, #0]
 800b63a:	689b      	ldr	r3, [r3, #8]
 800b63c:	031b      	lsls	r3, r3, #12
 800b63e:	693a      	ldr	r2, [r7, #16]
 800b640:	4313      	orrs	r3, r2
 800b642:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b644:	687b      	ldr	r3, [r7, #4]
 800b646:	4a18      	ldr	r2, [pc, #96]	; (800b6a8 <TIM_OC4_SetConfig+0xc0>)
 800b648:	4293      	cmp	r3, r2
 800b64a:	d00f      	beq.n	800b66c <TIM_OC4_SetConfig+0x84>
 800b64c:	687b      	ldr	r3, [r7, #4]
 800b64e:	4a17      	ldr	r2, [pc, #92]	; (800b6ac <TIM_OC4_SetConfig+0xc4>)
 800b650:	4293      	cmp	r3, r2
 800b652:	d00b      	beq.n	800b66c <TIM_OC4_SetConfig+0x84>
 800b654:	687b      	ldr	r3, [r7, #4]
 800b656:	4a16      	ldr	r2, [pc, #88]	; (800b6b0 <TIM_OC4_SetConfig+0xc8>)
 800b658:	4293      	cmp	r3, r2
 800b65a:	d007      	beq.n	800b66c <TIM_OC4_SetConfig+0x84>
 800b65c:	687b      	ldr	r3, [r7, #4]
 800b65e:	4a15      	ldr	r2, [pc, #84]	; (800b6b4 <TIM_OC4_SetConfig+0xcc>)
 800b660:	4293      	cmp	r3, r2
 800b662:	d003      	beq.n	800b66c <TIM_OC4_SetConfig+0x84>
 800b664:	687b      	ldr	r3, [r7, #4]
 800b666:	4a14      	ldr	r2, [pc, #80]	; (800b6b8 <TIM_OC4_SetConfig+0xd0>)
 800b668:	4293      	cmp	r3, r2
 800b66a:	d109      	bne.n	800b680 <TIM_OC4_SetConfig+0x98>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 800b66c:	697b      	ldr	r3, [r7, #20]
 800b66e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b672:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800b674:	683b      	ldr	r3, [r7, #0]
 800b676:	695b      	ldr	r3, [r3, #20]
 800b678:	019b      	lsls	r3, r3, #6
 800b67a:	697a      	ldr	r2, [r7, #20]
 800b67c:	4313      	orrs	r3, r2
 800b67e:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b680:	687b      	ldr	r3, [r7, #4]
 800b682:	697a      	ldr	r2, [r7, #20]
 800b684:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800b686:	687b      	ldr	r3, [r7, #4]
 800b688:	68fa      	ldr	r2, [r7, #12]
 800b68a:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800b68c:	683b      	ldr	r3, [r7, #0]
 800b68e:	685a      	ldr	r2, [r3, #4]
 800b690:	687b      	ldr	r3, [r7, #4]
 800b692:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	693a      	ldr	r2, [r7, #16]
 800b698:	621a      	str	r2, [r3, #32]
}
 800b69a:	bf00      	nop
 800b69c:	371c      	adds	r7, #28
 800b69e:	46bd      	mov	sp, r7
 800b6a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6a4:	4770      	bx	lr
 800b6a6:	bf00      	nop
 800b6a8:	40012c00 	.word	0x40012c00
 800b6ac:	40013400 	.word	0x40013400
 800b6b0:	40014000 	.word	0x40014000
 800b6b4:	40014400 	.word	0x40014400
 800b6b8:	40014800 	.word	0x40014800

0800b6bc <TIM_OC5_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 800b6bc:	b480      	push	{r7}
 800b6be:	b087      	sub	sp, #28
 800b6c0:	af00      	add	r7, sp, #0
 800b6c2:	6078      	str	r0, [r7, #4]
 800b6c4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b6c6:	687b      	ldr	r3, [r7, #4]
 800b6c8:	6a1b      	ldr	r3, [r3, #32]
 800b6ca:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 800b6cc:	687b      	ldr	r3, [r7, #4]
 800b6ce:	6a1b      	ldr	r3, [r3, #32]
 800b6d0:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800b6d4:	687b      	ldr	r3, [r7, #4]
 800b6d6:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b6d8:	687b      	ldr	r3, [r7, #4]
 800b6da:	685b      	ldr	r3, [r3, #4]
 800b6dc:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b6e2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 800b6e4:	68fb      	ldr	r3, [r7, #12]
 800b6e6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b6ea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b6ee:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800b6f0:	683b      	ldr	r3, [r7, #0]
 800b6f2:	681b      	ldr	r3, [r3, #0]
 800b6f4:	68fa      	ldr	r2, [r7, #12]
 800b6f6:	4313      	orrs	r3, r2
 800b6f8:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
 800b6fa:	693b      	ldr	r3, [r7, #16]
 800b6fc:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800b700:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 800b702:	683b      	ldr	r3, [r7, #0]
 800b704:	689b      	ldr	r3, [r3, #8]
 800b706:	041b      	lsls	r3, r3, #16
 800b708:	693a      	ldr	r2, [r7, #16]
 800b70a:	4313      	orrs	r3, r2
 800b70c:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b70e:	687b      	ldr	r3, [r7, #4]
 800b710:	4a17      	ldr	r2, [pc, #92]	; (800b770 <TIM_OC5_SetConfig+0xb4>)
 800b712:	4293      	cmp	r3, r2
 800b714:	d00f      	beq.n	800b736 <TIM_OC5_SetConfig+0x7a>
 800b716:	687b      	ldr	r3, [r7, #4]
 800b718:	4a16      	ldr	r2, [pc, #88]	; (800b774 <TIM_OC5_SetConfig+0xb8>)
 800b71a:	4293      	cmp	r3, r2
 800b71c:	d00b      	beq.n	800b736 <TIM_OC5_SetConfig+0x7a>
 800b71e:	687b      	ldr	r3, [r7, #4]
 800b720:	4a15      	ldr	r2, [pc, #84]	; (800b778 <TIM_OC5_SetConfig+0xbc>)
 800b722:	4293      	cmp	r3, r2
 800b724:	d007      	beq.n	800b736 <TIM_OC5_SetConfig+0x7a>
 800b726:	687b      	ldr	r3, [r7, #4]
 800b728:	4a14      	ldr	r2, [pc, #80]	; (800b77c <TIM_OC5_SetConfig+0xc0>)
 800b72a:	4293      	cmp	r3, r2
 800b72c:	d003      	beq.n	800b736 <TIM_OC5_SetConfig+0x7a>
 800b72e:	687b      	ldr	r3, [r7, #4]
 800b730:	4a13      	ldr	r2, [pc, #76]	; (800b780 <TIM_OC5_SetConfig+0xc4>)
 800b732:	4293      	cmp	r3, r2
 800b734:	d109      	bne.n	800b74a <TIM_OC5_SetConfig+0x8e>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
 800b736:	697b      	ldr	r3, [r7, #20]
 800b738:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b73c:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 800b73e:	683b      	ldr	r3, [r7, #0]
 800b740:	695b      	ldr	r3, [r3, #20]
 800b742:	021b      	lsls	r3, r3, #8
 800b744:	697a      	ldr	r2, [r7, #20]
 800b746:	4313      	orrs	r3, r2
 800b748:	617b      	str	r3, [r7, #20]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b74a:	687b      	ldr	r3, [r7, #4]
 800b74c:	697a      	ldr	r2, [r7, #20]
 800b74e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 800b750:	687b      	ldr	r3, [r7, #4]
 800b752:	68fa      	ldr	r2, [r7, #12]
 800b754:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 800b756:	683b      	ldr	r3, [r7, #0]
 800b758:	685a      	ldr	r2, [r3, #4]
 800b75a:	687b      	ldr	r3, [r7, #4]
 800b75c:	659a      	str	r2, [r3, #88]	; 0x58

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b75e:	687b      	ldr	r3, [r7, #4]
 800b760:	693a      	ldr	r2, [r7, #16]
 800b762:	621a      	str	r2, [r3, #32]
}
 800b764:	bf00      	nop
 800b766:	371c      	adds	r7, #28
 800b768:	46bd      	mov	sp, r7
 800b76a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b76e:	4770      	bx	lr
 800b770:	40012c00 	.word	0x40012c00
 800b774:	40013400 	.word	0x40013400
 800b778:	40014000 	.word	0x40014000
 800b77c:	40014400 	.word	0x40014400
 800b780:	40014800 	.word	0x40014800

0800b784 <TIM_OC6_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 800b784:	b480      	push	{r7}
 800b786:	b087      	sub	sp, #28
 800b788:	af00      	add	r7, sp, #0
 800b78a:	6078      	str	r0, [r7, #4]
 800b78c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800b78e:	687b      	ldr	r3, [r7, #4]
 800b790:	6a1b      	ldr	r3, [r3, #32]
 800b792:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 800b794:	687b      	ldr	r3, [r7, #4]
 800b796:	6a1b      	ldr	r3, [r3, #32]
 800b798:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800b79c:	687b      	ldr	r3, [r7, #4]
 800b79e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800b7a0:	687b      	ldr	r3, [r7, #4]
 800b7a2:	685b      	ldr	r3, [r3, #4]
 800b7a4:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 800b7a6:	687b      	ldr	r3, [r7, #4]
 800b7a8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b7aa:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 800b7ac:	68fb      	ldr	r3, [r7, #12]
 800b7ae:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800b7b2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b7b6:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800b7b8:	683b      	ldr	r3, [r7, #0]
 800b7ba:	681b      	ldr	r3, [r3, #0]
 800b7bc:	021b      	lsls	r3, r3, #8
 800b7be:	68fa      	ldr	r2, [r7, #12]
 800b7c0:	4313      	orrs	r3, r2
 800b7c2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 800b7c4:	693b      	ldr	r3, [r7, #16]
 800b7c6:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800b7ca:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 800b7cc:	683b      	ldr	r3, [r7, #0]
 800b7ce:	689b      	ldr	r3, [r3, #8]
 800b7d0:	051b      	lsls	r3, r3, #20
 800b7d2:	693a      	ldr	r2, [r7, #16]
 800b7d4:	4313      	orrs	r3, r2
 800b7d6:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800b7d8:	687b      	ldr	r3, [r7, #4]
 800b7da:	4a18      	ldr	r2, [pc, #96]	; (800b83c <TIM_OC6_SetConfig+0xb8>)
 800b7dc:	4293      	cmp	r3, r2
 800b7de:	d00f      	beq.n	800b800 <TIM_OC6_SetConfig+0x7c>
 800b7e0:	687b      	ldr	r3, [r7, #4]
 800b7e2:	4a17      	ldr	r2, [pc, #92]	; (800b840 <TIM_OC6_SetConfig+0xbc>)
 800b7e4:	4293      	cmp	r3, r2
 800b7e6:	d00b      	beq.n	800b800 <TIM_OC6_SetConfig+0x7c>
 800b7e8:	687b      	ldr	r3, [r7, #4]
 800b7ea:	4a16      	ldr	r2, [pc, #88]	; (800b844 <TIM_OC6_SetConfig+0xc0>)
 800b7ec:	4293      	cmp	r3, r2
 800b7ee:	d007      	beq.n	800b800 <TIM_OC6_SetConfig+0x7c>
 800b7f0:	687b      	ldr	r3, [r7, #4]
 800b7f2:	4a15      	ldr	r2, [pc, #84]	; (800b848 <TIM_OC6_SetConfig+0xc4>)
 800b7f4:	4293      	cmp	r3, r2
 800b7f6:	d003      	beq.n	800b800 <TIM_OC6_SetConfig+0x7c>
 800b7f8:	687b      	ldr	r3, [r7, #4]
 800b7fa:	4a14      	ldr	r2, [pc, #80]	; (800b84c <TIM_OC6_SetConfig+0xc8>)
 800b7fc:	4293      	cmp	r3, r2
 800b7fe:	d109      	bne.n	800b814 <TIM_OC6_SetConfig+0x90>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
 800b800:	697b      	ldr	r3, [r7, #20]
 800b802:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800b806:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 800b808:	683b      	ldr	r3, [r7, #0]
 800b80a:	695b      	ldr	r3, [r3, #20]
 800b80c:	029b      	lsls	r3, r3, #10
 800b80e:	697a      	ldr	r2, [r7, #20]
 800b810:	4313      	orrs	r3, r2
 800b812:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800b814:	687b      	ldr	r3, [r7, #4]
 800b816:	697a      	ldr	r2, [r7, #20]
 800b818:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 800b81a:	687b      	ldr	r3, [r7, #4]
 800b81c:	68fa      	ldr	r2, [r7, #12]
 800b81e:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 800b820:	683b      	ldr	r3, [r7, #0]
 800b822:	685a      	ldr	r2, [r3, #4]
 800b824:	687b      	ldr	r3, [r7, #4]
 800b826:	65da      	str	r2, [r3, #92]	; 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800b828:	687b      	ldr	r3, [r7, #4]
 800b82a:	693a      	ldr	r2, [r7, #16]
 800b82c:	621a      	str	r2, [r3, #32]
}
 800b82e:	bf00      	nop
 800b830:	371c      	adds	r7, #28
 800b832:	46bd      	mov	sp, r7
 800b834:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b838:	4770      	bx	lr
 800b83a:	bf00      	nop
 800b83c:	40012c00 	.word	0x40012c00
 800b840:	40013400 	.word	0x40013400
 800b844:	40014000 	.word	0x40014000
 800b848:	40014400 	.word	0x40014400
 800b84c:	40014800 	.word	0x40014800

0800b850 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 800b850:	b480      	push	{r7}
 800b852:	b087      	sub	sp, #28
 800b854:	af00      	add	r7, sp, #0
 800b856:	60f8      	str	r0, [r7, #12]
 800b858:	60b9      	str	r1, [r7, #8]
 800b85a:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800b85c:	68fb      	ldr	r3, [r7, #12]
 800b85e:	6a1b      	ldr	r3, [r3, #32]
 800b860:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b862:	68fb      	ldr	r3, [r7, #12]
 800b864:	6a1b      	ldr	r3, [r3, #32]
 800b866:	f023 0201 	bic.w	r2, r3, #1
 800b86a:	68fb      	ldr	r3, [r7, #12]
 800b86c:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b86e:	68fb      	ldr	r3, [r7, #12]
 800b870:	699b      	ldr	r3, [r3, #24]
 800b872:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b874:	693b      	ldr	r3, [r7, #16]
 800b876:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800b87a:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b87c:	687b      	ldr	r3, [r7, #4]
 800b87e:	011b      	lsls	r3, r3, #4
 800b880:	693a      	ldr	r2, [r7, #16]
 800b882:	4313      	orrs	r3, r2
 800b884:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b886:	697b      	ldr	r3, [r7, #20]
 800b888:	f023 030a 	bic.w	r3, r3, #10
 800b88c:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 800b88e:	697a      	ldr	r2, [r7, #20]
 800b890:	68bb      	ldr	r3, [r7, #8]
 800b892:	4313      	orrs	r3, r2
 800b894:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800b896:	68fb      	ldr	r3, [r7, #12]
 800b898:	693a      	ldr	r2, [r7, #16]
 800b89a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800b89c:	68fb      	ldr	r3, [r7, #12]
 800b89e:	697a      	ldr	r2, [r7, #20]
 800b8a0:	621a      	str	r2, [r3, #32]
}
 800b8a2:	bf00      	nop
 800b8a4:	371c      	adds	r7, #28
 800b8a6:	46bd      	mov	sp, r7
 800b8a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ac:	4770      	bx	lr

0800b8ae <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 800b8ae:	b480      	push	{r7}
 800b8b0:	b087      	sub	sp, #28
 800b8b2:	af00      	add	r7, sp, #0
 800b8b4:	60f8      	str	r0, [r7, #12]
 800b8b6:	60b9      	str	r1, [r7, #8]
 800b8b8:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 800b8ba:	68fb      	ldr	r3, [r7, #12]
 800b8bc:	6a1b      	ldr	r3, [r3, #32]
 800b8be:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b8c0:	68fb      	ldr	r3, [r7, #12]
 800b8c2:	6a1b      	ldr	r3, [r3, #32]
 800b8c4:	f023 0210 	bic.w	r2, r3, #16
 800b8c8:	68fb      	ldr	r3, [r7, #12]
 800b8ca:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b8cc:	68fb      	ldr	r3, [r7, #12]
 800b8ce:	699b      	ldr	r3, [r3, #24]
 800b8d0:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800b8d2:	693b      	ldr	r3, [r7, #16]
 800b8d4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b8d8:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800b8da:	687b      	ldr	r3, [r7, #4]
 800b8dc:	031b      	lsls	r3, r3, #12
 800b8de:	693a      	ldr	r2, [r7, #16]
 800b8e0:	4313      	orrs	r3, r2
 800b8e2:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800b8e4:	697b      	ldr	r3, [r7, #20]
 800b8e6:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800b8ea:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 800b8ec:	68bb      	ldr	r3, [r7, #8]
 800b8ee:	011b      	lsls	r3, r3, #4
 800b8f0:	697a      	ldr	r2, [r7, #20]
 800b8f2:	4313      	orrs	r3, r2
 800b8f4:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 800b8f6:	68fb      	ldr	r3, [r7, #12]
 800b8f8:	693a      	ldr	r2, [r7, #16]
 800b8fa:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800b8fc:	68fb      	ldr	r3, [r7, #12]
 800b8fe:	697a      	ldr	r2, [r7, #20]
 800b900:	621a      	str	r2, [r3, #32]
}
 800b902:	bf00      	nop
 800b904:	371c      	adds	r7, #28
 800b906:	46bd      	mov	sp, r7
 800b908:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b90c:	4770      	bx	lr

0800b90e <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 800b90e:	b480      	push	{r7}
 800b910:	b085      	sub	sp, #20
 800b912:	af00      	add	r7, sp, #0
 800b914:	6078      	str	r0, [r7, #4]
 800b916:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800b918:	687b      	ldr	r3, [r7, #4]
 800b91a:	689b      	ldr	r3, [r3, #8]
 800b91c:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800b91e:	68fb      	ldr	r3, [r7, #12]
 800b920:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b924:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b926:	683a      	ldr	r2, [r7, #0]
 800b928:	68fb      	ldr	r3, [r7, #12]
 800b92a:	4313      	orrs	r3, r2
 800b92c:	f043 0307 	orr.w	r3, r3, #7
 800b930:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b932:	687b      	ldr	r3, [r7, #4]
 800b934:	68fa      	ldr	r2, [r7, #12]
 800b936:	609a      	str	r2, [r3, #8]
}
 800b938:	bf00      	nop
 800b93a:	3714      	adds	r7, #20
 800b93c:	46bd      	mov	sp, r7
 800b93e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b942:	4770      	bx	lr

0800b944 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800b944:	b480      	push	{r7}
 800b946:	b087      	sub	sp, #28
 800b948:	af00      	add	r7, sp, #0
 800b94a:	60f8      	str	r0, [r7, #12]
 800b94c:	60b9      	str	r1, [r7, #8]
 800b94e:	607a      	str	r2, [r7, #4]
 800b950:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800b952:	68fb      	ldr	r3, [r7, #12]
 800b954:	689b      	ldr	r3, [r3, #8]
 800b956:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b958:	697b      	ldr	r3, [r7, #20]
 800b95a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b95e:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b960:	683b      	ldr	r3, [r7, #0]
 800b962:	021a      	lsls	r2, r3, #8
 800b964:	687b      	ldr	r3, [r7, #4]
 800b966:	431a      	orrs	r2, r3
 800b968:	68bb      	ldr	r3, [r7, #8]
 800b96a:	4313      	orrs	r3, r2
 800b96c:	697a      	ldr	r2, [r7, #20]
 800b96e:	4313      	orrs	r3, r2
 800b970:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b972:	68fb      	ldr	r3, [r7, #12]
 800b974:	697a      	ldr	r2, [r7, #20]
 800b976:	609a      	str	r2, [r3, #8]
}
 800b978:	bf00      	nop
 800b97a:	371c      	adds	r7, #28
 800b97c:	46bd      	mov	sp, r7
 800b97e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b982:	4770      	bx	lr

0800b984 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 800b984:	b480      	push	{r7}
 800b986:	b087      	sub	sp, #28
 800b988:	af00      	add	r7, sp, #0
 800b98a:	60f8      	str	r0, [r7, #12]
 800b98c:	60b9      	str	r1, [r7, #8]
 800b98e:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800b990:	68bb      	ldr	r3, [r7, #8]
 800b992:	f003 031f 	and.w	r3, r3, #31
 800b996:	2201      	movs	r2, #1
 800b998:	fa02 f303 	lsl.w	r3, r2, r3
 800b99c:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800b99e:	68fb      	ldr	r3, [r7, #12]
 800b9a0:	6a1a      	ldr	r2, [r3, #32]
 800b9a2:	697b      	ldr	r3, [r7, #20]
 800b9a4:	43db      	mvns	r3, r3
 800b9a6:	401a      	ands	r2, r3
 800b9a8:	68fb      	ldr	r3, [r7, #12]
 800b9aa:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800b9ac:	68fb      	ldr	r3, [r7, #12]
 800b9ae:	6a1a      	ldr	r2, [r3, #32]
 800b9b0:	68bb      	ldr	r3, [r7, #8]
 800b9b2:	f003 031f 	and.w	r3, r3, #31
 800b9b6:	6879      	ldr	r1, [r7, #4]
 800b9b8:	fa01 f303 	lsl.w	r3, r1, r3
 800b9bc:	431a      	orrs	r2, r3
 800b9be:	68fb      	ldr	r3, [r7, #12]
 800b9c0:	621a      	str	r2, [r3, #32]
}
 800b9c2:	bf00      	nop
 800b9c4:	371c      	adds	r7, #28
 800b9c6:	46bd      	mov	sp, r7
 800b9c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9cc:	4770      	bx	lr
	...

0800b9d0 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 800b9d0:	b480      	push	{r7}
 800b9d2:	b085      	sub	sp, #20
 800b9d4:	af00      	add	r7, sp, #0
 800b9d6:	6078      	str	r0, [r7, #4]
 800b9d8:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b9e0:	2b01      	cmp	r3, #1
 800b9e2:	d101      	bne.n	800b9e8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800b9e4:	2302      	movs	r3, #2
 800b9e6:	e068      	b.n	800baba <HAL_TIMEx_MasterConfigSynchronization+0xea>
 800b9e8:	687b      	ldr	r3, [r7, #4]
 800b9ea:	2201      	movs	r2, #1
 800b9ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800b9f0:	687b      	ldr	r3, [r7, #4]
 800b9f2:	2202      	movs	r2, #2
 800b9f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800b9f8:	687b      	ldr	r3, [r7, #4]
 800b9fa:	681b      	ldr	r3, [r3, #0]
 800b9fc:	685b      	ldr	r3, [r3, #4]
 800b9fe:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 800ba00:	687b      	ldr	r3, [r7, #4]
 800ba02:	681b      	ldr	r3, [r3, #0]
 800ba04:	689b      	ldr	r3, [r3, #8]
 800ba06:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800ba08:	687b      	ldr	r3, [r7, #4]
 800ba0a:	681b      	ldr	r3, [r3, #0]
 800ba0c:	4a2e      	ldr	r2, [pc, #184]	; (800bac8 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 800ba0e:	4293      	cmp	r3, r2
 800ba10:	d004      	beq.n	800ba1c <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800ba12:	687b      	ldr	r3, [r7, #4]
 800ba14:	681b      	ldr	r3, [r3, #0]
 800ba16:	4a2d      	ldr	r2, [pc, #180]	; (800bacc <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 800ba18:	4293      	cmp	r3, r2
 800ba1a:	d108      	bne.n	800ba2e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 800ba1c:	68fb      	ldr	r3, [r7, #12]
 800ba1e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800ba22:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 800ba24:	683b      	ldr	r3, [r7, #0]
 800ba26:	685b      	ldr	r3, [r3, #4]
 800ba28:	68fa      	ldr	r2, [r7, #12]
 800ba2a:	4313      	orrs	r3, r2
 800ba2c:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800ba2e:	68fb      	ldr	r3, [r7, #12]
 800ba30:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800ba34:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800ba36:	683b      	ldr	r3, [r7, #0]
 800ba38:	681b      	ldr	r3, [r3, #0]
 800ba3a:	68fa      	ldr	r2, [r7, #12]
 800ba3c:	4313      	orrs	r3, r2
 800ba3e:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800ba40:	687b      	ldr	r3, [r7, #4]
 800ba42:	681b      	ldr	r3, [r3, #0]
 800ba44:	68fa      	ldr	r2, [r7, #12]
 800ba46:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ba48:	687b      	ldr	r3, [r7, #4]
 800ba4a:	681b      	ldr	r3, [r3, #0]
 800ba4c:	4a1e      	ldr	r2, [pc, #120]	; (800bac8 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 800ba4e:	4293      	cmp	r3, r2
 800ba50:	d01d      	beq.n	800ba8e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	681b      	ldr	r3, [r3, #0]
 800ba56:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ba5a:	d018      	beq.n	800ba8e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800ba5c:	687b      	ldr	r3, [r7, #4]
 800ba5e:	681b      	ldr	r3, [r3, #0]
 800ba60:	4a1b      	ldr	r2, [pc, #108]	; (800bad0 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800ba62:	4293      	cmp	r3, r2
 800ba64:	d013      	beq.n	800ba8e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800ba66:	687b      	ldr	r3, [r7, #4]
 800ba68:	681b      	ldr	r3, [r3, #0]
 800ba6a:	4a1a      	ldr	r2, [pc, #104]	; (800bad4 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800ba6c:	4293      	cmp	r3, r2
 800ba6e:	d00e      	beq.n	800ba8e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800ba70:	687b      	ldr	r3, [r7, #4]
 800ba72:	681b      	ldr	r3, [r3, #0]
 800ba74:	4a18      	ldr	r2, [pc, #96]	; (800bad8 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800ba76:	4293      	cmp	r3, r2
 800ba78:	d009      	beq.n	800ba8e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800ba7a:	687b      	ldr	r3, [r7, #4]
 800ba7c:	681b      	ldr	r3, [r3, #0]
 800ba7e:	4a13      	ldr	r2, [pc, #76]	; (800bacc <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 800ba80:	4293      	cmp	r3, r2
 800ba82:	d004      	beq.n	800ba8e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800ba84:	687b      	ldr	r3, [r7, #4]
 800ba86:	681b      	ldr	r3, [r3, #0]
 800ba88:	4a14      	ldr	r2, [pc, #80]	; (800badc <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800ba8a:	4293      	cmp	r3, r2
 800ba8c:	d10c      	bne.n	800baa8 <HAL_TIMEx_MasterConfigSynchronization+0xd8>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 800ba8e:	68bb      	ldr	r3, [r7, #8]
 800ba90:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ba94:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800ba96:	683b      	ldr	r3, [r7, #0]
 800ba98:	689b      	ldr	r3, [r3, #8]
 800ba9a:	68ba      	ldr	r2, [r7, #8]
 800ba9c:	4313      	orrs	r3, r2
 800ba9e:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800baa0:	687b      	ldr	r3, [r7, #4]
 800baa2:	681b      	ldr	r3, [r3, #0]
 800baa4:	68ba      	ldr	r2, [r7, #8]
 800baa6:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800baa8:	687b      	ldr	r3, [r7, #4]
 800baaa:	2201      	movs	r2, #1
 800baac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800bab0:	687b      	ldr	r3, [r7, #4]
 800bab2:	2200      	movs	r2, #0
 800bab4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 800bab8:	2300      	movs	r3, #0
}
 800baba:	4618      	mov	r0, r3
 800babc:	3714      	adds	r7, #20
 800babe:	46bd      	mov	sp, r7
 800bac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bac4:	4770      	bx	lr
 800bac6:	bf00      	nop
 800bac8:	40012c00 	.word	0x40012c00
 800bacc:	40013400 	.word	0x40013400
 800bad0:	40000400 	.word	0x40000400
 800bad4:	40000800 	.word	0x40000800
 800bad8:	40000c00 	.word	0x40000c00
 800badc:	40014000 	.word	0x40014000

0800bae0 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 800bae0:	b480      	push	{r7}
 800bae2:	b083      	sub	sp, #12
 800bae4:	af00      	add	r7, sp, #0
 800bae6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 800bae8:	bf00      	nop
 800baea:	370c      	adds	r7, #12
 800baec:	46bd      	mov	sp, r7
 800baee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baf2:	4770      	bx	lr

0800baf4 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 800baf4:	b480      	push	{r7}
 800baf6:	b083      	sub	sp, #12
 800baf8:	af00      	add	r7, sp, #0
 800bafa:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 800bafc:	bf00      	nop
 800bafe:	370c      	adds	r7, #12
 800bb00:	46bd      	mov	sp, r7
 800bb02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb06:	4770      	bx	lr

0800bb08 <HAL_TIMEx_Break2Callback>:
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 800bb08:	b480      	push	{r7}
 800bb0a:	b083      	sub	sp, #12
 800bb0c:	af00      	add	r7, sp, #0
 800bb0e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_TIMEx_Break2Callback could be implemented in the user file
   */
}
 800bb10:	bf00      	nop
 800bb12:	370c      	adds	r7, #12
 800bb14:	46bd      	mov	sp, r7
 800bb16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb1a:	4770      	bx	lr

0800bb1c <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 800bb1c:	b580      	push	{r7, lr}
 800bb1e:	b082      	sub	sp, #8
 800bb20:	af00      	add	r7, sp, #0
 800bb22:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 800bb24:	687b      	ldr	r3, [r7, #4]
 800bb26:	2b00      	cmp	r3, #0
 800bb28:	d101      	bne.n	800bb2e <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 800bb2a:	2301      	movs	r3, #1
 800bb2c:	e042      	b.n	800bbb4 <HAL_UART_Init+0x98>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 800bb2e:	687b      	ldr	r3, [r7, #4]
 800bb30:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800bb34:	2b00      	cmp	r3, #0
 800bb36:	d106      	bne.n	800bb46 <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800bb38:	687b      	ldr	r3, [r7, #4]
 800bb3a:	2200      	movs	r2, #0
 800bb3c:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 800bb40:	6878      	ldr	r0, [r7, #4]
 800bb42:	f7f9 f93d 	bl	8004dc0 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 800bb46:	687b      	ldr	r3, [r7, #4]
 800bb48:	2224      	movs	r2, #36	; 0x24
 800bb4a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  __HAL_UART_DISABLE(huart);
 800bb4e:	687b      	ldr	r3, [r7, #4]
 800bb50:	681b      	ldr	r3, [r3, #0]
 800bb52:	681a      	ldr	r2, [r3, #0]
 800bb54:	687b      	ldr	r3, [r7, #4]
 800bb56:	681b      	ldr	r3, [r3, #0]
 800bb58:	f022 0201 	bic.w	r2, r2, #1
 800bb5c:	601a      	str	r2, [r3, #0]

  /* Perform advanced settings configuration */
  /* For some items, configuration requires to be done prior TE and RE bits are set */
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800bb5e:	687b      	ldr	r3, [r7, #4]
 800bb60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb62:	2b00      	cmp	r3, #0
 800bb64:	d002      	beq.n	800bb6c <HAL_UART_Init+0x50>
  {
    UART_AdvFeatureConfig(huart);
 800bb66:	6878      	ldr	r0, [r7, #4]
 800bb68:	f000 ff48 	bl	800c9fc <UART_AdvFeatureConfig>
  }

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 800bb6c:	6878      	ldr	r0, [r7, #4]
 800bb6e:	f000 fc49 	bl	800c404 <UART_SetConfig>
 800bb72:	4603      	mov	r3, r0
 800bb74:	2b01      	cmp	r3, #1
 800bb76:	d101      	bne.n	800bb7c <HAL_UART_Init+0x60>
  {
    return HAL_ERROR;
 800bb78:	2301      	movs	r3, #1
 800bb7a:	e01b      	b.n	800bbb4 <HAL_UART_Init+0x98>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800bb7c:	687b      	ldr	r3, [r7, #4]
 800bb7e:	681b      	ldr	r3, [r3, #0]
 800bb80:	685a      	ldr	r2, [r3, #4]
 800bb82:	687b      	ldr	r3, [r7, #4]
 800bb84:	681b      	ldr	r3, [r3, #0]
 800bb86:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800bb8a:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800bb8c:	687b      	ldr	r3, [r7, #4]
 800bb8e:	681b      	ldr	r3, [r3, #0]
 800bb90:	689a      	ldr	r2, [r3, #8]
 800bb92:	687b      	ldr	r3, [r7, #4]
 800bb94:	681b      	ldr	r3, [r3, #0]
 800bb96:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800bb9a:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 800bb9c:	687b      	ldr	r3, [r7, #4]
 800bb9e:	681b      	ldr	r3, [r3, #0]
 800bba0:	681a      	ldr	r2, [r3, #0]
 800bba2:	687b      	ldr	r3, [r7, #4]
 800bba4:	681b      	ldr	r3, [r3, #0]
 800bba6:	f042 0201 	orr.w	r2, r2, #1
 800bbaa:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 800bbac:	6878      	ldr	r0, [r7, #4]
 800bbae:	f000 ffc7 	bl	800cb40 <UART_CheckIdleState>
 800bbb2:	4603      	mov	r3, r0
}
 800bbb4:	4618      	mov	r0, r3
 800bbb6:	3708      	adds	r7, #8
 800bbb8:	46bd      	mov	sp, r7
 800bbba:	bd80      	pop	{r7, pc}

0800bbbc <HAL_UART_Transmit_IT>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be sent.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size)
{
 800bbbc:	b480      	push	{r7}
 800bbbe:	b091      	sub	sp, #68	; 0x44
 800bbc0:	af00      	add	r7, sp, #0
 800bbc2:	60f8      	str	r0, [r7, #12]
 800bbc4:	60b9      	str	r1, [r7, #8]
 800bbc6:	4613      	mov	r3, r2
 800bbc8:	80fb      	strh	r3, [r7, #6]
  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 800bbca:	68fb      	ldr	r3, [r7, #12]
 800bbcc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800bbd0:	2b20      	cmp	r3, #32
 800bbd2:	d178      	bne.n	800bcc6 <HAL_UART_Transmit_IT+0x10a>
  {
    if ((pData == NULL) || (Size == 0U))
 800bbd4:	68bb      	ldr	r3, [r7, #8]
 800bbd6:	2b00      	cmp	r3, #0
 800bbd8:	d002      	beq.n	800bbe0 <HAL_UART_Transmit_IT+0x24>
 800bbda:	88fb      	ldrh	r3, [r7, #6]
 800bbdc:	2b00      	cmp	r3, #0
 800bbde:	d101      	bne.n	800bbe4 <HAL_UART_Transmit_IT+0x28>
    {
      return HAL_ERROR;
 800bbe0:	2301      	movs	r3, #1
 800bbe2:	e071      	b.n	800bcc8 <HAL_UART_Transmit_IT+0x10c>
    }

    huart->pTxBuffPtr  = pData;
 800bbe4:	68fb      	ldr	r3, [r7, #12]
 800bbe6:	68ba      	ldr	r2, [r7, #8]
 800bbe8:	651a      	str	r2, [r3, #80]	; 0x50
    huart->TxXferSize  = Size;
 800bbea:	68fb      	ldr	r3, [r7, #12]
 800bbec:	88fa      	ldrh	r2, [r7, #6]
 800bbee:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
    huart->TxXferCount = Size;
 800bbf2:	68fb      	ldr	r3, [r7, #12]
 800bbf4:	88fa      	ldrh	r2, [r7, #6]
 800bbf6:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
    huart->TxISR       = NULL;
 800bbfa:	68fb      	ldr	r3, [r7, #12]
 800bbfc:	2200      	movs	r2, #0
 800bbfe:	679a      	str	r2, [r3, #120]	; 0x78

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800bc00:	68fb      	ldr	r3, [r7, #12]
 800bc02:	2200      	movs	r2, #0
 800bc04:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800bc08:	68fb      	ldr	r3, [r7, #12]
 800bc0a:	2221      	movs	r2, #33	; 0x21
 800bc0c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined(USART_CR1_FIFOEN)
    /* Configure Tx interrupt processing */
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 800bc10:	68fb      	ldr	r3, [r7, #12]
 800bc12:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bc14:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800bc18:	d12a      	bne.n	800bc70 <HAL_UART_Transmit_IT+0xb4>
    {
      /* Set the Tx ISR function pointer according to the data word length */
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800bc1a:	68fb      	ldr	r3, [r7, #12]
 800bc1c:	689b      	ldr	r3, [r3, #8]
 800bc1e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bc22:	d107      	bne.n	800bc34 <HAL_UART_Transmit_IT+0x78>
 800bc24:	68fb      	ldr	r3, [r7, #12]
 800bc26:	691b      	ldr	r3, [r3, #16]
 800bc28:	2b00      	cmp	r3, #0
 800bc2a:	d103      	bne.n	800bc34 <HAL_UART_Transmit_IT+0x78>
      {
        huart->TxISR = UART_TxISR_16BIT_FIFOEN;
 800bc2c:	68fb      	ldr	r3, [r7, #12]
 800bc2e:	4a29      	ldr	r2, [pc, #164]	; (800bcd4 <HAL_UART_Transmit_IT+0x118>)
 800bc30:	679a      	str	r2, [r3, #120]	; 0x78
 800bc32:	e002      	b.n	800bc3a <HAL_UART_Transmit_IT+0x7e>
      }
      else
      {
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
 800bc34:	68fb      	ldr	r3, [r7, #12]
 800bc36:	4a28      	ldr	r2, [pc, #160]	; (800bcd8 <HAL_UART_Transmit_IT+0x11c>)
 800bc38:	679a      	str	r2, [r3, #120]	; 0x78
      }

      /* Enable the TX FIFO threshold interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 800bc3a:	68fb      	ldr	r3, [r7, #12]
 800bc3c:	681b      	ldr	r3, [r3, #0]
 800bc3e:	3308      	adds	r3, #8
 800bc40:	62bb      	str	r3, [r7, #40]	; 0x28
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bc42:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bc44:	e853 3f00 	ldrex	r3, [r3]
 800bc48:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800bc4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bc4c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800bc50:	63bb      	str	r3, [r7, #56]	; 0x38
 800bc52:	68fb      	ldr	r3, [r7, #12]
 800bc54:	681b      	ldr	r3, [r3, #0]
 800bc56:	3308      	adds	r3, #8
 800bc58:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800bc5a:	637a      	str	r2, [r7, #52]	; 0x34
 800bc5c:	633b      	str	r3, [r7, #48]	; 0x30
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bc5e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800bc60:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800bc62:	e841 2300 	strex	r3, r2, [r1]
 800bc66:	62fb      	str	r3, [r7, #44]	; 0x2c
   return(result);
 800bc68:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bc6a:	2b00      	cmp	r3, #0
 800bc6c:	d1e5      	bne.n	800bc3a <HAL_UART_Transmit_IT+0x7e>
 800bc6e:	e028      	b.n	800bcc2 <HAL_UART_Transmit_IT+0x106>
    }
    else
    {
      /* Set the Tx ISR function pointer according to the data word length */
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800bc70:	68fb      	ldr	r3, [r7, #12]
 800bc72:	689b      	ldr	r3, [r3, #8]
 800bc74:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bc78:	d107      	bne.n	800bc8a <HAL_UART_Transmit_IT+0xce>
 800bc7a:	68fb      	ldr	r3, [r7, #12]
 800bc7c:	691b      	ldr	r3, [r3, #16]
 800bc7e:	2b00      	cmp	r3, #0
 800bc80:	d103      	bne.n	800bc8a <HAL_UART_Transmit_IT+0xce>
      {
        huart->TxISR = UART_TxISR_16BIT;
 800bc82:	68fb      	ldr	r3, [r7, #12]
 800bc84:	4a15      	ldr	r2, [pc, #84]	; (800bcdc <HAL_UART_Transmit_IT+0x120>)
 800bc86:	679a      	str	r2, [r3, #120]	; 0x78
 800bc88:	e002      	b.n	800bc90 <HAL_UART_Transmit_IT+0xd4>
      }
      else
      {
        huart->TxISR = UART_TxISR_8BIT;
 800bc8a:	68fb      	ldr	r3, [r7, #12]
 800bc8c:	4a14      	ldr	r2, [pc, #80]	; (800bce0 <HAL_UART_Transmit_IT+0x124>)
 800bc8e:	679a      	str	r2, [r3, #120]	; 0x78
      }

      /* Enable the Transmit Data Register Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 800bc90:	68fb      	ldr	r3, [r7, #12]
 800bc92:	681b      	ldr	r3, [r3, #0]
 800bc94:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bc96:	697b      	ldr	r3, [r7, #20]
 800bc98:	e853 3f00 	ldrex	r3, [r3]
 800bc9c:	613b      	str	r3, [r7, #16]
   return(result);
 800bc9e:	693b      	ldr	r3, [r7, #16]
 800bca0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800bca4:	63fb      	str	r3, [r7, #60]	; 0x3c
 800bca6:	68fb      	ldr	r3, [r7, #12]
 800bca8:	681b      	ldr	r3, [r3, #0]
 800bcaa:	461a      	mov	r2, r3
 800bcac:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800bcae:	623b      	str	r3, [r7, #32]
 800bcb0:	61fa      	str	r2, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bcb2:	69f9      	ldr	r1, [r7, #28]
 800bcb4:	6a3a      	ldr	r2, [r7, #32]
 800bcb6:	e841 2300 	strex	r3, r2, [r1]
 800bcba:	61bb      	str	r3, [r7, #24]
   return(result);
 800bcbc:	69bb      	ldr	r3, [r7, #24]
 800bcbe:	2b00      	cmp	r3, #0
 800bcc0:	d1e6      	bne.n	800bc90 <HAL_UART_Transmit_IT+0xd4>

    /* Enable the Transmit Data Register Empty interrupt */
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
#endif /* USART_CR1_FIFOEN */

    return HAL_OK;
 800bcc2:	2300      	movs	r3, #0
 800bcc4:	e000      	b.n	800bcc8 <HAL_UART_Transmit_IT+0x10c>
  }
  else
  {
    return HAL_BUSY;
 800bcc6:	2302      	movs	r3, #2
  }
}
 800bcc8:	4618      	mov	r0, r3
 800bcca:	3744      	adds	r7, #68	; 0x44
 800bccc:	46bd      	mov	sp, r7
 800bcce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcd2:	4770      	bx	lr
 800bcd4:	0800d2ff 	.word	0x0800d2ff
 800bcd8:	0800d21d 	.word	0x0800d21d
 800bcdc:	0800d15b 	.word	0x0800d15b
 800bce0:	0800d0a1 	.word	0x0800d0a1

0800bce4 <HAL_UART_Receive_IT>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 800bce4:	b580      	push	{r7, lr}
 800bce6:	b08a      	sub	sp, #40	; 0x28
 800bce8:	af00      	add	r7, sp, #0
 800bcea:	60f8      	str	r0, [r7, #12]
 800bcec:	60b9      	str	r1, [r7, #8]
 800bcee:	4613      	mov	r3, r2
 800bcf0:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 800bcf2:	68fb      	ldr	r3, [r7, #12]
 800bcf4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800bcf8:	2b20      	cmp	r3, #32
 800bcfa:	d137      	bne.n	800bd6c <HAL_UART_Receive_IT+0x88>
  {
    if ((pData == NULL) || (Size == 0U))
 800bcfc:	68bb      	ldr	r3, [r7, #8]
 800bcfe:	2b00      	cmp	r3, #0
 800bd00:	d002      	beq.n	800bd08 <HAL_UART_Receive_IT+0x24>
 800bd02:	88fb      	ldrh	r3, [r7, #6]
 800bd04:	2b00      	cmp	r3, #0
 800bd06:	d101      	bne.n	800bd0c <HAL_UART_Receive_IT+0x28>
    {
      return HAL_ERROR;
 800bd08:	2301      	movs	r3, #1
 800bd0a:	e030      	b.n	800bd6e <HAL_UART_Receive_IT+0x8a>
    }

    /* Set Reception type to Standard reception */
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800bd0c:	68fb      	ldr	r3, [r7, #12]
 800bd0e:	2200      	movs	r2, #0
 800bd10:	66da      	str	r2, [r3, #108]	; 0x6c

    if (!(IS_LPUART_INSTANCE(huart->Instance)))
 800bd12:	68fb      	ldr	r3, [r7, #12]
 800bd14:	681b      	ldr	r3, [r3, #0]
 800bd16:	4a18      	ldr	r2, [pc, #96]	; (800bd78 <HAL_UART_Receive_IT+0x94>)
 800bd18:	4293      	cmp	r3, r2
 800bd1a:	d01f      	beq.n	800bd5c <HAL_UART_Receive_IT+0x78>
    {
      /* Check that USART RTOEN bit is set */
      if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 800bd1c:	68fb      	ldr	r3, [r7, #12]
 800bd1e:	681b      	ldr	r3, [r3, #0]
 800bd20:	685b      	ldr	r3, [r3, #4]
 800bd22:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800bd26:	2b00      	cmp	r3, #0
 800bd28:	d018      	beq.n	800bd5c <HAL_UART_Receive_IT+0x78>
      {
        /* Enable the UART Receiver Timeout Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 800bd2a:	68fb      	ldr	r3, [r7, #12]
 800bd2c:	681b      	ldr	r3, [r3, #0]
 800bd2e:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bd30:	697b      	ldr	r3, [r7, #20]
 800bd32:	e853 3f00 	ldrex	r3, [r3]
 800bd36:	613b      	str	r3, [r7, #16]
   return(result);
 800bd38:	693b      	ldr	r3, [r7, #16]
 800bd3a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800bd3e:	627b      	str	r3, [r7, #36]	; 0x24
 800bd40:	68fb      	ldr	r3, [r7, #12]
 800bd42:	681b      	ldr	r3, [r3, #0]
 800bd44:	461a      	mov	r2, r3
 800bd46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bd48:	623b      	str	r3, [r7, #32]
 800bd4a:	61fa      	str	r2, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bd4c:	69f9      	ldr	r1, [r7, #28]
 800bd4e:	6a3a      	ldr	r2, [r7, #32]
 800bd50:	e841 2300 	strex	r3, r2, [r1]
 800bd54:	61bb      	str	r3, [r7, #24]
   return(result);
 800bd56:	69bb      	ldr	r3, [r7, #24]
 800bd58:	2b00      	cmp	r3, #0
 800bd5a:	d1e6      	bne.n	800bd2a <HAL_UART_Receive_IT+0x46>
      }
    }

    return (UART_Start_Receive_IT(huart, pData, Size));
 800bd5c:	88fb      	ldrh	r3, [r7, #6]
 800bd5e:	461a      	mov	r2, r3
 800bd60:	68b9      	ldr	r1, [r7, #8]
 800bd62:	68f8      	ldr	r0, [r7, #12]
 800bd64:	f000 fffe 	bl	800cd64 <UART_Start_Receive_IT>
 800bd68:	4603      	mov	r3, r0
 800bd6a:	e000      	b.n	800bd6e <HAL_UART_Receive_IT+0x8a>
  }
  else
  {
    return HAL_BUSY;
 800bd6c:	2302      	movs	r3, #2
  }
}
 800bd6e:	4618      	mov	r0, r3
 800bd70:	3728      	adds	r7, #40	; 0x28
 800bd72:	46bd      	mov	sp, r7
 800bd74:	bd80      	pop	{r7, pc}
 800bd76:	bf00      	nop
 800bd78:	40008000 	.word	0x40008000

0800bd7c <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 800bd7c:	b580      	push	{r7, lr}
 800bd7e:	b0ba      	sub	sp, #232	; 0xe8
 800bd80:	af00      	add	r7, sp, #0
 800bd82:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 800bd84:	687b      	ldr	r3, [r7, #4]
 800bd86:	681b      	ldr	r3, [r3, #0]
 800bd88:	69db      	ldr	r3, [r3, #28]
 800bd8a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 800bd8e:	687b      	ldr	r3, [r7, #4]
 800bd90:	681b      	ldr	r3, [r3, #0]
 800bd92:	681b      	ldr	r3, [r3, #0]
 800bd94:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 800bd98:	687b      	ldr	r3, [r7, #4]
 800bd9a:	681b      	ldr	r3, [r3, #0]
 800bd9c:	689b      	ldr	r3, [r3, #8]
 800bd9e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 800bda2:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 800bda6:	f640 030f 	movw	r3, #2063	; 0x80f
 800bdaa:	4013      	ands	r3, r2
 800bdac:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  if (errorflags == 0U)
 800bdb0:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800bdb4:	2b00      	cmp	r3, #0
 800bdb6:	d11b      	bne.n	800bdf0 <HAL_UART_IRQHandler+0x74>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
#if defined(USART_CR1_FIFOEN)
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 800bdb8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bdbc:	f003 0320 	and.w	r3, r3, #32
 800bdc0:	2b00      	cmp	r3, #0
 800bdc2:	d015      	beq.n	800bdf0 <HAL_UART_IRQHandler+0x74>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 800bdc4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bdc8:	f003 0320 	and.w	r3, r3, #32
 800bdcc:	2b00      	cmp	r3, #0
 800bdce:	d105      	bne.n	800bddc <HAL_UART_IRQHandler+0x60>
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 800bdd0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800bdd4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bdd8:	2b00      	cmp	r3, #0
 800bdda:	d009      	beq.n	800bdf0 <HAL_UART_IRQHandler+0x74>
#else
    if (((isrflags & USART_ISR_RXNE) != 0U)
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
#endif /* USART_CR1_FIFOEN */
    {
      if (huart->RxISR != NULL)
 800bddc:	687b      	ldr	r3, [r7, #4]
 800bdde:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800bde0:	2b00      	cmp	r3, #0
 800bde2:	f000 82e3 	beq.w	800c3ac <HAL_UART_IRQHandler+0x630>
      {
        huart->RxISR(huart);
 800bde6:	687b      	ldr	r3, [r7, #4]
 800bde8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800bdea:	6878      	ldr	r0, [r7, #4]
 800bdec:	4798      	blx	r3
      }
      return;
 800bdee:	e2dd      	b.n	800c3ac <HAL_UART_IRQHandler+0x630>
    }
  }

  /* If some errors occur */
#if defined(USART_CR1_FIFOEN)
  if ((errorflags != 0U)
 800bdf0:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800bdf4:	2b00      	cmp	r3, #0
 800bdf6:	f000 8123 	beq.w	800c040 <HAL_UART_IRQHandler+0x2c4>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 800bdfa:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800bdfe:	4b8d      	ldr	r3, [pc, #564]	; (800c034 <HAL_UART_IRQHandler+0x2b8>)
 800be00:	4013      	ands	r3, r2
 800be02:	2b00      	cmp	r3, #0
 800be04:	d106      	bne.n	800be14 <HAL_UART_IRQHandler+0x98>
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 800be06:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 800be0a:	4b8b      	ldr	r3, [pc, #556]	; (800c038 <HAL_UART_IRQHandler+0x2bc>)
 800be0c:	4013      	ands	r3, r2
 800be0e:	2b00      	cmp	r3, #0
 800be10:	f000 8116 	beq.w	800c040 <HAL_UART_IRQHandler+0x2c4>
      && (((cr3its & USART_CR3_EIE) != 0U)
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
#endif /* USART_CR1_FIFOEN */
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 800be14:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800be18:	f003 0301 	and.w	r3, r3, #1
 800be1c:	2b00      	cmp	r3, #0
 800be1e:	d011      	beq.n	800be44 <HAL_UART_IRQHandler+0xc8>
 800be20:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800be24:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800be28:	2b00      	cmp	r3, #0
 800be2a:	d00b      	beq.n	800be44 <HAL_UART_IRQHandler+0xc8>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 800be2c:	687b      	ldr	r3, [r7, #4]
 800be2e:	681b      	ldr	r3, [r3, #0]
 800be30:	2201      	movs	r2, #1
 800be32:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800be34:	687b      	ldr	r3, [r7, #4]
 800be36:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800be3a:	f043 0201 	orr.w	r2, r3, #1
 800be3e:	687b      	ldr	r3, [r7, #4]
 800be40:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800be44:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800be48:	f003 0302 	and.w	r3, r3, #2
 800be4c:	2b00      	cmp	r3, #0
 800be4e:	d011      	beq.n	800be74 <HAL_UART_IRQHandler+0xf8>
 800be50:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800be54:	f003 0301 	and.w	r3, r3, #1
 800be58:	2b00      	cmp	r3, #0
 800be5a:	d00b      	beq.n	800be74 <HAL_UART_IRQHandler+0xf8>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800be5c:	687b      	ldr	r3, [r7, #4]
 800be5e:	681b      	ldr	r3, [r3, #0]
 800be60:	2202      	movs	r2, #2
 800be62:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800be64:	687b      	ldr	r3, [r7, #4]
 800be66:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800be6a:	f043 0204 	orr.w	r2, r3, #4
 800be6e:	687b      	ldr	r3, [r7, #4]
 800be70:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800be74:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800be78:	f003 0304 	and.w	r3, r3, #4
 800be7c:	2b00      	cmp	r3, #0
 800be7e:	d011      	beq.n	800bea4 <HAL_UART_IRQHandler+0x128>
 800be80:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800be84:	f003 0301 	and.w	r3, r3, #1
 800be88:	2b00      	cmp	r3, #0
 800be8a:	d00b      	beq.n	800bea4 <HAL_UART_IRQHandler+0x128>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 800be8c:	687b      	ldr	r3, [r7, #4]
 800be8e:	681b      	ldr	r3, [r3, #0]
 800be90:	2204      	movs	r2, #4
 800be92:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 800be94:	687b      	ldr	r3, [r7, #4]
 800be96:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800be9a:	f043 0202 	orr.w	r2, r3, #2
 800be9e:	687b      	ldr	r3, [r7, #4]
 800bea0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
#if defined(USART_CR1_FIFOEN)
    if (((isrflags & USART_ISR_ORE) != 0U)
 800bea4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bea8:	f003 0308 	and.w	r3, r3, #8
 800beac:	2b00      	cmp	r3, #0
 800beae:	d017      	beq.n	800bee0 <HAL_UART_IRQHandler+0x164>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 800beb0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800beb4:	f003 0320 	and.w	r3, r3, #32
 800beb8:	2b00      	cmp	r3, #0
 800beba:	d105      	bne.n	800bec8 <HAL_UART_IRQHandler+0x14c>
            ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 800bebc:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800bec0:	4b5c      	ldr	r3, [pc, #368]	; (800c034 <HAL_UART_IRQHandler+0x2b8>)
 800bec2:	4013      	ands	r3, r2
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 800bec4:	2b00      	cmp	r3, #0
 800bec6:	d00b      	beq.n	800bee0 <HAL_UART_IRQHandler+0x164>
    if (((isrflags & USART_ISR_ORE) != 0U)
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
            ((cr3its & USART_CR3_EIE) != 0U)))
#endif /* USART_CR1_FIFOEN */
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800bec8:	687b      	ldr	r3, [r7, #4]
 800beca:	681b      	ldr	r3, [r3, #0]
 800becc:	2208      	movs	r2, #8
 800bece:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 800bed0:	687b      	ldr	r3, [r7, #4]
 800bed2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bed6:	f043 0208 	orr.w	r2, r3, #8
 800beda:	687b      	ldr	r3, [r7, #4]
 800bedc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 800bee0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bee4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800bee8:	2b00      	cmp	r3, #0
 800beea:	d012      	beq.n	800bf12 <HAL_UART_IRQHandler+0x196>
 800beec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bef0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800bef4:	2b00      	cmp	r3, #0
 800bef6:	d00c      	beq.n	800bf12 <HAL_UART_IRQHandler+0x196>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800bef8:	687b      	ldr	r3, [r7, #4]
 800befa:	681b      	ldr	r3, [r3, #0]
 800befc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800bf00:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 800bf02:	687b      	ldr	r3, [r7, #4]
 800bf04:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bf08:	f043 0220 	orr.w	r2, r3, #32
 800bf0c:	687b      	ldr	r3, [r7, #4]
 800bf0e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 800bf12:	687b      	ldr	r3, [r7, #4]
 800bf14:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bf18:	2b00      	cmp	r3, #0
 800bf1a:	f000 8249 	beq.w	800c3b0 <HAL_UART_IRQHandler+0x634>
    {
      /* UART in mode Receiver --------------------------------------------------*/
#if defined(USART_CR1_FIFOEN)
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 800bf1e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bf22:	f003 0320 	and.w	r3, r3, #32
 800bf26:	2b00      	cmp	r3, #0
 800bf28:	d013      	beq.n	800bf52 <HAL_UART_IRQHandler+0x1d6>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 800bf2a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bf2e:	f003 0320 	and.w	r3, r3, #32
 800bf32:	2b00      	cmp	r3, #0
 800bf34:	d105      	bne.n	800bf42 <HAL_UART_IRQHandler+0x1c6>
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 800bf36:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800bf3a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bf3e:	2b00      	cmp	r3, #0
 800bf40:	d007      	beq.n	800bf52 <HAL_UART_IRQHandler+0x1d6>
#else
      if (((isrflags & USART_ISR_RXNE) != 0U)
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
#endif /* USART_CR1_FIFOEN */
      {
        if (huart->RxISR != NULL)
 800bf42:	687b      	ldr	r3, [r7, #4]
 800bf44:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800bf46:	2b00      	cmp	r3, #0
 800bf48:	d003      	beq.n	800bf52 <HAL_UART_IRQHandler+0x1d6>
        {
          huart->RxISR(huart);
 800bf4a:	687b      	ldr	r3, [r7, #4]
 800bf4c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800bf4e:	6878      	ldr	r0, [r7, #4]
 800bf50:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 800bf52:	687b      	ldr	r3, [r7, #4]
 800bf54:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bf58:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 800bf5c:	687b      	ldr	r3, [r7, #4]
 800bf5e:	681b      	ldr	r3, [r3, #0]
 800bf60:	689b      	ldr	r3, [r3, #8]
 800bf62:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bf66:	2b40      	cmp	r3, #64	; 0x40
 800bf68:	d005      	beq.n	800bf76 <HAL_UART_IRQHandler+0x1fa>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 800bf6a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800bf6e:	f003 0328 	and.w	r3, r3, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 800bf72:	2b00      	cmp	r3, #0
 800bf74:	d054      	beq.n	800c020 <HAL_UART_IRQHandler+0x2a4>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 800bf76:	6878      	ldr	r0, [r7, #4]
 800bf78:	f001 f816 	bl	800cfa8 <UART_EndRxTransfer>

        /* Abort the UART DMA Rx channel if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800bf7c:	687b      	ldr	r3, [r7, #4]
 800bf7e:	681b      	ldr	r3, [r3, #0]
 800bf80:	689b      	ldr	r3, [r3, #8]
 800bf82:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bf86:	2b40      	cmp	r3, #64	; 0x40
 800bf88:	d146      	bne.n	800c018 <HAL_UART_IRQHandler+0x29c>
        {
          /* Disable the UART DMA Rx request if enabled */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800bf8a:	687b      	ldr	r3, [r7, #4]
 800bf8c:	681b      	ldr	r3, [r3, #0]
 800bf8e:	3308      	adds	r3, #8
 800bf90:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bf94:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800bf98:	e853 3f00 	ldrex	r3, [r3]
 800bf9c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
   return(result);
 800bfa0:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800bfa4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bfa8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800bfac:	687b      	ldr	r3, [r7, #4]
 800bfae:	681b      	ldr	r3, [r3, #0]
 800bfb0:	3308      	adds	r3, #8
 800bfb2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800bfb6:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800bfba:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bfbe:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800bfc2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800bfc6:	e841 2300 	strex	r3, r2, [r1]
 800bfca:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
   return(result);
 800bfce:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800bfd2:	2b00      	cmp	r3, #0
 800bfd4:	d1d9      	bne.n	800bf8a <HAL_UART_IRQHandler+0x20e>

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 800bfd6:	687b      	ldr	r3, [r7, #4]
 800bfd8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bfdc:	2b00      	cmp	r3, #0
 800bfde:	d017      	beq.n	800c010 <HAL_UART_IRQHandler+0x294>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800bfe0:	687b      	ldr	r3, [r7, #4]
 800bfe2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bfe6:	4a15      	ldr	r2, [pc, #84]	; (800c03c <HAL_UART_IRQHandler+0x2c0>)
 800bfe8:	639a      	str	r2, [r3, #56]	; 0x38

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 800bfea:	687b      	ldr	r3, [r7, #4]
 800bfec:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bff0:	4618      	mov	r0, r3
 800bff2:	f7fa fc74 	bl	80068de <HAL_DMA_Abort_IT>
 800bff6:	4603      	mov	r3, r0
 800bff8:	2b00      	cmp	r3, #0
 800bffa:	d019      	beq.n	800c030 <HAL_UART_IRQHandler+0x2b4>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800bffc:	687b      	ldr	r3, [r7, #4]
 800bffe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c002:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c004:	687a      	ldr	r2, [r7, #4]
 800c006:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800c00a:	4610      	mov	r0, r2
 800c00c:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800c00e:	e00f      	b.n	800c030 <HAL_UART_IRQHandler+0x2b4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 800c010:	6878      	ldr	r0, [r7, #4]
 800c012:	f000 f9e1 	bl	800c3d8 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800c016:	e00b      	b.n	800c030 <HAL_UART_IRQHandler+0x2b4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 800c018:	6878      	ldr	r0, [r7, #4]
 800c01a:	f000 f9dd 	bl	800c3d8 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800c01e:	e007      	b.n	800c030 <HAL_UART_IRQHandler+0x2b4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 800c020:	6878      	ldr	r0, [r7, #4]
 800c022:	f000 f9d9 	bl	800c3d8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 800c026:	687b      	ldr	r3, [r7, #4]
 800c028:	2200      	movs	r2, #0
 800c02a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
      }
    }
    return;
 800c02e:	e1bf      	b.n	800c3b0 <HAL_UART_IRQHandler+0x634>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800c030:	bf00      	nop
    return;
 800c032:	e1bd      	b.n	800c3b0 <HAL_UART_IRQHandler+0x634>
 800c034:	10000001 	.word	0x10000001
 800c038:	04000120 	.word	0x04000120
 800c03c:	0800d075 	.word	0x0800d075

  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800c040:	687b      	ldr	r3, [r7, #4]
 800c042:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c044:	2b01      	cmp	r3, #1
 800c046:	f040 8153 	bne.w	800c2f0 <HAL_UART_IRQHandler+0x574>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 800c04a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c04e:	f003 0310 	and.w	r3, r3, #16
 800c052:	2b00      	cmp	r3, #0
 800c054:	f000 814c 	beq.w	800c2f0 <HAL_UART_IRQHandler+0x574>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 800c058:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c05c:	f003 0310 	and.w	r3, r3, #16
 800c060:	2b00      	cmp	r3, #0
 800c062:	f000 8145 	beq.w	800c2f0 <HAL_UART_IRQHandler+0x574>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800c066:	687b      	ldr	r3, [r7, #4]
 800c068:	681b      	ldr	r3, [r3, #0]
 800c06a:	2210      	movs	r2, #16
 800c06c:	621a      	str	r2, [r3, #32]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800c06e:	687b      	ldr	r3, [r7, #4]
 800c070:	681b      	ldr	r3, [r3, #0]
 800c072:	689b      	ldr	r3, [r3, #8]
 800c074:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c078:	2b40      	cmp	r3, #64	; 0x40
 800c07a:	f040 80bb 	bne.w	800c1f4 <HAL_UART_IRQHandler+0x478>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 800c07e:	687b      	ldr	r3, [r7, #4]
 800c080:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c084:	681b      	ldr	r3, [r3, #0]
 800c086:	685b      	ldr	r3, [r3, #4]
 800c088:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
      if ((nb_remaining_rx_data > 0U)
 800c08c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800c090:	2b00      	cmp	r3, #0
 800c092:	f000 818f 	beq.w	800c3b4 <HAL_UART_IRQHandler+0x638>
          && (nb_remaining_rx_data < huart->RxXferSize))
 800c096:	687b      	ldr	r3, [r7, #4]
 800c098:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800c09c:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c0a0:	429a      	cmp	r2, r3
 800c0a2:	f080 8187 	bcs.w	800c3b4 <HAL_UART_IRQHandler+0x638>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 800c0a6:	687b      	ldr	r3, [r7, #4]
 800c0a8:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c0ac:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (HAL_IS_BIT_CLR(huart->hdmarx->Instance->CCR, DMA_CCR_CIRC))
 800c0b0:	687b      	ldr	r3, [r7, #4]
 800c0b2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c0b6:	681b      	ldr	r3, [r3, #0]
 800c0b8:	681b      	ldr	r3, [r3, #0]
 800c0ba:	f003 0320 	and.w	r3, r3, #32
 800c0be:	2b00      	cmp	r3, #0
 800c0c0:	f040 8087 	bne.w	800c1d2 <HAL_UART_IRQHandler+0x456>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800c0c4:	687b      	ldr	r3, [r7, #4]
 800c0c6:	681b      	ldr	r3, [r3, #0]
 800c0c8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c0cc:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800c0d0:	e853 3f00 	ldrex	r3, [r3]
 800c0d4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
   return(result);
 800c0d8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800c0dc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800c0e0:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800c0e4:	687b      	ldr	r3, [r7, #4]
 800c0e6:	681b      	ldr	r3, [r3, #0]
 800c0e8:	461a      	mov	r2, r3
 800c0ea:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800c0ee:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800c0f2:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c0f6:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800c0fa:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800c0fe:	e841 2300 	strex	r3, r2, [r1]
 800c102:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
   return(result);
 800c106:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800c10a:	2b00      	cmp	r3, #0
 800c10c:	d1da      	bne.n	800c0c4 <HAL_UART_IRQHandler+0x348>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800c10e:	687b      	ldr	r3, [r7, #4]
 800c110:	681b      	ldr	r3, [r3, #0]
 800c112:	3308      	adds	r3, #8
 800c114:	677b      	str	r3, [r7, #116]	; 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c116:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800c118:	e853 3f00 	ldrex	r3, [r3]
 800c11c:	673b      	str	r3, [r7, #112]	; 0x70
   return(result);
 800c11e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c120:	f023 0301 	bic.w	r3, r3, #1
 800c124:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800c128:	687b      	ldr	r3, [r7, #4]
 800c12a:	681b      	ldr	r3, [r3, #0]
 800c12c:	3308      	adds	r3, #8
 800c12e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800c132:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800c136:	67fb      	str	r3, [r7, #124]	; 0x7c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c138:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800c13a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800c13e:	e841 2300 	strex	r3, r2, [r1]
 800c142:	67bb      	str	r3, [r7, #120]	; 0x78
   return(result);
 800c144:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800c146:	2b00      	cmp	r3, #0
 800c148:	d1e1      	bne.n	800c10e <HAL_UART_IRQHandler+0x392>

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800c14a:	687b      	ldr	r3, [r7, #4]
 800c14c:	681b      	ldr	r3, [r3, #0]
 800c14e:	3308      	adds	r3, #8
 800c150:	663b      	str	r3, [r7, #96]	; 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c152:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c154:	e853 3f00 	ldrex	r3, [r3]
 800c158:	65fb      	str	r3, [r7, #92]	; 0x5c
   return(result);
 800c15a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800c15c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c160:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800c164:	687b      	ldr	r3, [r7, #4]
 800c166:	681b      	ldr	r3, [r3, #0]
 800c168:	3308      	adds	r3, #8
 800c16a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800c16e:	66fa      	str	r2, [r7, #108]	; 0x6c
 800c170:	66bb      	str	r3, [r7, #104]	; 0x68
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c172:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800c174:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800c176:	e841 2300 	strex	r3, r2, [r1]
 800c17a:	667b      	str	r3, [r7, #100]	; 0x64
   return(result);
 800c17c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c17e:	2b00      	cmp	r3, #0
 800c180:	d1e3      	bne.n	800c14a <HAL_UART_IRQHandler+0x3ce>

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 800c182:	687b      	ldr	r3, [r7, #4]
 800c184:	2220      	movs	r2, #32
 800c186:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800c18a:	687b      	ldr	r3, [r7, #4]
 800c18c:	2200      	movs	r2, #0
 800c18e:	66da      	str	r2, [r3, #108]	; 0x6c

          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800c190:	687b      	ldr	r3, [r7, #4]
 800c192:	681b      	ldr	r3, [r3, #0]
 800c194:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c196:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c198:	e853 3f00 	ldrex	r3, [r3]
 800c19c:	64bb      	str	r3, [r7, #72]	; 0x48
   return(result);
 800c19e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c1a0:	f023 0310 	bic.w	r3, r3, #16
 800c1a4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800c1a8:	687b      	ldr	r3, [r7, #4]
 800c1aa:	681b      	ldr	r3, [r3, #0]
 800c1ac:	461a      	mov	r2, r3
 800c1ae:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800c1b2:	65bb      	str	r3, [r7, #88]	; 0x58
 800c1b4:	657a      	str	r2, [r7, #84]	; 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c1b6:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800c1b8:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c1ba:	e841 2300 	strex	r3, r2, [r1]
 800c1be:	653b      	str	r3, [r7, #80]	; 0x50
   return(result);
 800c1c0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c1c2:	2b00      	cmp	r3, #0
 800c1c4:	d1e4      	bne.n	800c190 <HAL_UART_IRQHandler+0x414>

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 800c1c6:	687b      	ldr	r3, [r7, #4]
 800c1c8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c1cc:	4618      	mov	r0, r3
 800c1ce:	f7fa fb2a 	bl	8006826 <HAL_DMA_Abort>
        }

        /* Initialize type of RxEvent that correspond to RxEvent callback execution;
           In this case, Rx Event type is Idle Event */
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800c1d2:	687b      	ldr	r3, [r7, #4]
 800c1d4:	2202      	movs	r2, #2
 800c1d6:	671a      	str	r2, [r3, #112]	; 0x70
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 800c1d8:	687b      	ldr	r3, [r7, #4]
 800c1da:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800c1de:	687b      	ldr	r3, [r7, #4]
 800c1e0:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800c1e4:	b29b      	uxth	r3, r3
 800c1e6:	1ad3      	subs	r3, r2, r3
 800c1e8:	b29b      	uxth	r3, r3
 800c1ea:	4619      	mov	r1, r3
 800c1ec:	6878      	ldr	r0, [r7, #4]
 800c1ee:	f000 f8fd 	bl	800c3ec <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 800c1f2:	e0df      	b.n	800c3b4 <HAL_UART_IRQHandler+0x638>
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800c1f4:	687b      	ldr	r3, [r7, #4]
 800c1f6:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800c1fa:	687b      	ldr	r3, [r7, #4]
 800c1fc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800c200:	b29b      	uxth	r3, r3
 800c202:	1ad3      	subs	r3, r2, r3
 800c204:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
      if ((huart->RxXferCount > 0U)
 800c208:	687b      	ldr	r3, [r7, #4]
 800c20a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800c20e:	b29b      	uxth	r3, r3
 800c210:	2b00      	cmp	r3, #0
 800c212:	f000 80d1 	beq.w	800c3b8 <HAL_UART_IRQHandler+0x63c>
          && (nb_rx_data > 0U))
 800c216:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c21a:	2b00      	cmp	r3, #0
 800c21c:	f000 80cc 	beq.w	800c3b8 <HAL_UART_IRQHandler+0x63c>
      {
#if defined(USART_CR1_FIFOEN)
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800c220:	687b      	ldr	r3, [r7, #4]
 800c222:	681b      	ldr	r3, [r3, #0]
 800c224:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c226:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c228:	e853 3f00 	ldrex	r3, [r3]
 800c22c:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 800c22e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c230:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c234:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800c238:	687b      	ldr	r3, [r7, #4]
 800c23a:	681b      	ldr	r3, [r3, #0]
 800c23c:	461a      	mov	r2, r3
 800c23e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800c242:	647b      	str	r3, [r7, #68]	; 0x44
 800c244:	643a      	str	r2, [r7, #64]	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c246:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800c248:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c24a:	e841 2300 	strex	r3, r2, [r1]
 800c24e:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 800c250:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c252:	2b00      	cmp	r3, #0
 800c254:	d1e4      	bne.n	800c220 <HAL_UART_IRQHandler+0x4a4>

        /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO Threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800c256:	687b      	ldr	r3, [r7, #4]
 800c258:	681b      	ldr	r3, [r3, #0]
 800c25a:	3308      	adds	r3, #8
 800c25c:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c25e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c260:	e853 3f00 	ldrex	r3, [r3]
 800c264:	623b      	str	r3, [r7, #32]
   return(result);
 800c266:	6a3b      	ldr	r3, [r7, #32]
 800c268:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c26c:	f023 0301 	bic.w	r3, r3, #1
 800c270:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800c274:	687b      	ldr	r3, [r7, #4]
 800c276:	681b      	ldr	r3, [r3, #0]
 800c278:	3308      	adds	r3, #8
 800c27a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800c27e:	633a      	str	r2, [r7, #48]	; 0x30
 800c280:	62fb      	str	r3, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c282:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c284:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c286:	e841 2300 	strex	r3, r2, [r1]
 800c28a:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 800c28c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c28e:	2b00      	cmp	r3, #0
 800c290:	d1e1      	bne.n	800c256 <HAL_UART_IRQHandler+0x4da>
        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
#endif /* USART_CR1_FIFOEN */

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 800c292:	687b      	ldr	r3, [r7, #4]
 800c294:	2220      	movs	r2, #32
 800c296:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800c29a:	687b      	ldr	r3, [r7, #4]
 800c29c:	2200      	movs	r2, #0
 800c29e:	66da      	str	r2, [r3, #108]	; 0x6c

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 800c2a0:	687b      	ldr	r3, [r7, #4]
 800c2a2:	2200      	movs	r2, #0
 800c2a4:	675a      	str	r2, [r3, #116]	; 0x74

        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800c2a6:	687b      	ldr	r3, [r7, #4]
 800c2a8:	681b      	ldr	r3, [r3, #0]
 800c2aa:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800c2ac:	693b      	ldr	r3, [r7, #16]
 800c2ae:	e853 3f00 	ldrex	r3, [r3]
 800c2b2:	60fb      	str	r3, [r7, #12]
   return(result);
 800c2b4:	68fb      	ldr	r3, [r7, #12]
 800c2b6:	f023 0310 	bic.w	r3, r3, #16
 800c2ba:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800c2be:	687b      	ldr	r3, [r7, #4]
 800c2c0:	681b      	ldr	r3, [r3, #0]
 800c2c2:	461a      	mov	r2, r3
 800c2c4:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800c2c8:	61fb      	str	r3, [r7, #28]
 800c2ca:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800c2cc:	69b9      	ldr	r1, [r7, #24]
 800c2ce:	69fa      	ldr	r2, [r7, #28]
 800c2d0:	e841 2300 	strex	r3, r2, [r1]
 800c2d4:	617b      	str	r3, [r7, #20]
   return(result);
 800c2d6:	697b      	ldr	r3, [r7, #20]
 800c2d8:	2b00      	cmp	r3, #0
 800c2da:	d1e4      	bne.n	800c2a6 <HAL_UART_IRQHandler+0x52a>

        /* Initialize type of RxEvent that correspond to RxEvent callback execution;
           In this case, Rx Event type is Idle Event */
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800c2dc:	687b      	ldr	r3, [r7, #4]
 800c2de:	2202      	movs	r2, #2
 800c2e0:	671a      	str	r2, [r3, #112]	; 0x70
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 800c2e2:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c2e6:	4619      	mov	r1, r3
 800c2e8:	6878      	ldr	r0, [r7, #4]
 800c2ea:	f000 f87f 	bl	800c3ec <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 800c2ee:	e063      	b.n	800c3b8 <HAL_UART_IRQHandler+0x63c>
    }
  }

  /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 800c2f0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c2f4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800c2f8:	2b00      	cmp	r3, #0
 800c2fa:	d00e      	beq.n	800c31a <HAL_UART_IRQHandler+0x59e>
 800c2fc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c300:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800c304:	2b00      	cmp	r3, #0
 800c306:	d008      	beq.n	800c31a <HAL_UART_IRQHandler+0x59e>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 800c308:	687b      	ldr	r3, [r7, #4]
 800c30a:	681b      	ldr	r3, [r3, #0]
 800c30c:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 800c310:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /* Call registered Wakeup Callback */
    huart->WakeupCallback(huart);
#else
    /* Call legacy weak Wakeup Callback */
    HAL_UARTEx_WakeupCallback(huart);
 800c312:	6878      	ldr	r0, [r7, #4]
 800c314:	f001 fdb8 	bl	800de88 <HAL_UARTEx_WakeupCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
    return;
 800c318:	e051      	b.n	800c3be <HAL_UART_IRQHandler+0x642>
  }

  /* UART in mode Transmitter ------------------------------------------------*/
#if defined(USART_CR1_FIFOEN)
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 800c31a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c31e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c322:	2b00      	cmp	r3, #0
 800c324:	d014      	beq.n	800c350 <HAL_UART_IRQHandler+0x5d4>
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 800c326:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c32a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c32e:	2b00      	cmp	r3, #0
 800c330:	d105      	bne.n	800c33e <HAL_UART_IRQHandler+0x5c2>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 800c332:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c336:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800c33a:	2b00      	cmp	r3, #0
 800c33c:	d008      	beq.n	800c350 <HAL_UART_IRQHandler+0x5d4>
#else
  if (((isrflags & USART_ISR_TXE) != 0U)
      && ((cr1its & USART_CR1_TXEIE) != 0U))
#endif /* USART_CR1_FIFOEN */
  {
    if (huart->TxISR != NULL)
 800c33e:	687b      	ldr	r3, [r7, #4]
 800c340:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c342:	2b00      	cmp	r3, #0
 800c344:	d03a      	beq.n	800c3bc <HAL_UART_IRQHandler+0x640>
    {
      huart->TxISR(huart);
 800c346:	687b      	ldr	r3, [r7, #4]
 800c348:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c34a:	6878      	ldr	r0, [r7, #4]
 800c34c:	4798      	blx	r3
    }
    return;
 800c34e:	e035      	b.n	800c3bc <HAL_UART_IRQHandler+0x640>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 800c350:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c354:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c358:	2b00      	cmp	r3, #0
 800c35a:	d009      	beq.n	800c370 <HAL_UART_IRQHandler+0x5f4>
 800c35c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c360:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c364:	2b00      	cmp	r3, #0
 800c366:	d003      	beq.n	800c370 <HAL_UART_IRQHandler+0x5f4>
  {
    UART_EndTransmit_IT(huart);
 800c368:	6878      	ldr	r0, [r7, #4]
 800c36a:	f001 f83d 	bl	800d3e8 <UART_EndTransmit_IT>
    return;
 800c36e:	e026      	b.n	800c3be <HAL_UART_IRQHandler+0x642>
  }

#if defined(USART_CR1_FIFOEN)
  /* UART TX Fifo Empty occurred ----------------------------------------------*/
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 800c370:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c374:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800c378:	2b00      	cmp	r3, #0
 800c37a:	d009      	beq.n	800c390 <HAL_UART_IRQHandler+0x614>
 800c37c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c380:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800c384:	2b00      	cmp	r3, #0
 800c386:	d003      	beq.n	800c390 <HAL_UART_IRQHandler+0x614>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /* Call registered Tx Fifo Empty Callback */
    huart->TxFifoEmptyCallback(huart);
#else
    /* Call legacy weak Tx Fifo Empty Callback */
    HAL_UARTEx_TxFifoEmptyCallback(huart);
 800c388:	6878      	ldr	r0, [r7, #4]
 800c38a:	f001 fd91 	bl	800deb0 <HAL_UARTEx_TxFifoEmptyCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
    return;
 800c38e:	e016      	b.n	800c3be <HAL_UART_IRQHandler+0x642>
  }

  /* UART RX Fifo Full occurred ----------------------------------------------*/
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 800c390:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c394:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800c398:	2b00      	cmp	r3, #0
 800c39a:	d010      	beq.n	800c3be <HAL_UART_IRQHandler+0x642>
 800c39c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c3a0:	2b00      	cmp	r3, #0
 800c3a2:	da0c      	bge.n	800c3be <HAL_UART_IRQHandler+0x642>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /* Call registered Rx Fifo Full Callback */
    huart->RxFifoFullCallback(huart);
#else
    /* Call legacy weak Rx Fifo Full Callback */
    HAL_UARTEx_RxFifoFullCallback(huart);
 800c3a4:	6878      	ldr	r0, [r7, #4]
 800c3a6:	f001 fd79 	bl	800de9c <HAL_UARTEx_RxFifoFullCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
    return;
 800c3aa:	e008      	b.n	800c3be <HAL_UART_IRQHandler+0x642>
      return;
 800c3ac:	bf00      	nop
 800c3ae:	e006      	b.n	800c3be <HAL_UART_IRQHandler+0x642>
    return;
 800c3b0:	bf00      	nop
 800c3b2:	e004      	b.n	800c3be <HAL_UART_IRQHandler+0x642>
      return;
 800c3b4:	bf00      	nop
 800c3b6:	e002      	b.n	800c3be <HAL_UART_IRQHandler+0x642>
      return;
 800c3b8:	bf00      	nop
 800c3ba:	e000      	b.n	800c3be <HAL_UART_IRQHandler+0x642>
    return;
 800c3bc:	bf00      	nop
  }
#endif /* USART_CR1_FIFOEN */
}
 800c3be:	37e8      	adds	r7, #232	; 0xe8
 800c3c0:	46bd      	mov	sp, r7
 800c3c2:	bd80      	pop	{r7, pc}

0800c3c4 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 800c3c4:	b480      	push	{r7}
 800c3c6:	b083      	sub	sp, #12
 800c3c8:	af00      	add	r7, sp, #0
 800c3ca:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 800c3cc:	bf00      	nop
 800c3ce:	370c      	adds	r7, #12
 800c3d0:	46bd      	mov	sp, r7
 800c3d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3d6:	4770      	bx	lr

0800c3d8 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 800c3d8:	b480      	push	{r7}
 800c3da:	b083      	sub	sp, #12
 800c3dc:	af00      	add	r7, sp, #0
 800c3de:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 800c3e0:	bf00      	nop
 800c3e2:	370c      	adds	r7, #12
 800c3e4:	46bd      	mov	sp, r7
 800c3e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3ea:	4770      	bx	lr

0800c3ec <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 800c3ec:	b480      	push	{r7}
 800c3ee:	b083      	sub	sp, #12
 800c3f0:	af00      	add	r7, sp, #0
 800c3f2:	6078      	str	r0, [r7, #4]
 800c3f4:	460b      	mov	r3, r1
 800c3f6:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 800c3f8:	bf00      	nop
 800c3fa:	370c      	adds	r7, #12
 800c3fc:	46bd      	mov	sp, r7
 800c3fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c402:	4770      	bx	lr

0800c404 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 800c404:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800c408:	b08c      	sub	sp, #48	; 0x30
 800c40a:	af00      	add	r7, sp, #0
 800c40c:	6178      	str	r0, [r7, #20]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 800c40e:	2300      	movs	r3, #0
 800c410:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800c414:	697b      	ldr	r3, [r7, #20]
 800c416:	689a      	ldr	r2, [r3, #8]
 800c418:	697b      	ldr	r3, [r7, #20]
 800c41a:	691b      	ldr	r3, [r3, #16]
 800c41c:	431a      	orrs	r2, r3
 800c41e:	697b      	ldr	r3, [r7, #20]
 800c420:	695b      	ldr	r3, [r3, #20]
 800c422:	431a      	orrs	r2, r3
 800c424:	697b      	ldr	r3, [r7, #20]
 800c426:	69db      	ldr	r3, [r3, #28]
 800c428:	4313      	orrs	r3, r2
 800c42a:	62fb      	str	r3, [r7, #44]	; 0x2c
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800c42c:	697b      	ldr	r3, [r7, #20]
 800c42e:	681b      	ldr	r3, [r3, #0]
 800c430:	681a      	ldr	r2, [r3, #0]
 800c432:	4baa      	ldr	r3, [pc, #680]	; (800c6dc <UART_SetConfig+0x2d8>)
 800c434:	4013      	ands	r3, r2
 800c436:	697a      	ldr	r2, [r7, #20]
 800c438:	6812      	ldr	r2, [r2, #0]
 800c43a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c43c:	430b      	orrs	r3, r1
 800c43e:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800c440:	697b      	ldr	r3, [r7, #20]
 800c442:	681b      	ldr	r3, [r3, #0]
 800c444:	685b      	ldr	r3, [r3, #4]
 800c446:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800c44a:	697b      	ldr	r3, [r7, #20]
 800c44c:	68da      	ldr	r2, [r3, #12]
 800c44e:	697b      	ldr	r3, [r7, #20]
 800c450:	681b      	ldr	r3, [r3, #0]
 800c452:	430a      	orrs	r2, r1
 800c454:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 800c456:	697b      	ldr	r3, [r7, #20]
 800c458:	699b      	ldr	r3, [r3, #24]
 800c45a:	62fb      	str	r3, [r7, #44]	; 0x2c

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 800c45c:	697b      	ldr	r3, [r7, #20]
 800c45e:	681b      	ldr	r3, [r3, #0]
 800c460:	4a9f      	ldr	r2, [pc, #636]	; (800c6e0 <UART_SetConfig+0x2dc>)
 800c462:	4293      	cmp	r3, r2
 800c464:	d004      	beq.n	800c470 <UART_SetConfig+0x6c>
  {
    tmpreg |= huart->Init.OneBitSampling;
 800c466:	697b      	ldr	r3, [r7, #20]
 800c468:	6a1b      	ldr	r3, [r3, #32]
 800c46a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c46c:	4313      	orrs	r3, r2
 800c46e:	62fb      	str	r3, [r7, #44]	; 0x2c
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800c470:	697b      	ldr	r3, [r7, #20]
 800c472:	681b      	ldr	r3, [r3, #0]
 800c474:	689b      	ldr	r3, [r3, #8]
 800c476:	f023 436e 	bic.w	r3, r3, #3992977408	; 0xee000000
 800c47a:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 800c47e:	697a      	ldr	r2, [r7, #20]
 800c480:	6812      	ldr	r2, [r2, #0]
 800c482:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c484:	430b      	orrs	r3, r1
 800c486:	6093      	str	r3, [r2, #8]

#if defined(USART_PRESC_PRESCALER)
  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 800c488:	697b      	ldr	r3, [r7, #20]
 800c48a:	681b      	ldr	r3, [r3, #0]
 800c48c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c48e:	f023 010f 	bic.w	r1, r3, #15
 800c492:	697b      	ldr	r3, [r7, #20]
 800c494:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800c496:	697b      	ldr	r3, [r7, #20]
 800c498:	681b      	ldr	r3, [r3, #0]
 800c49a:	430a      	orrs	r2, r1
 800c49c:	62da      	str	r2, [r3, #44]	; 0x2c
#endif /* USART_PRESC_PRESCALER */

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 800c49e:	697b      	ldr	r3, [r7, #20]
 800c4a0:	681b      	ldr	r3, [r3, #0]
 800c4a2:	4a90      	ldr	r2, [pc, #576]	; (800c6e4 <UART_SetConfig+0x2e0>)
 800c4a4:	4293      	cmp	r3, r2
 800c4a6:	d125      	bne.n	800c4f4 <UART_SetConfig+0xf0>
 800c4a8:	4b8f      	ldr	r3, [pc, #572]	; (800c6e8 <UART_SetConfig+0x2e4>)
 800c4aa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c4ae:	f003 0303 	and.w	r3, r3, #3
 800c4b2:	2b03      	cmp	r3, #3
 800c4b4:	d81a      	bhi.n	800c4ec <UART_SetConfig+0xe8>
 800c4b6:	a201      	add	r2, pc, #4	; (adr r2, 800c4bc <UART_SetConfig+0xb8>)
 800c4b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c4bc:	0800c4cd 	.word	0x0800c4cd
 800c4c0:	0800c4dd 	.word	0x0800c4dd
 800c4c4:	0800c4d5 	.word	0x0800c4d5
 800c4c8:	0800c4e5 	.word	0x0800c4e5
 800c4cc:	2301      	movs	r3, #1
 800c4ce:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c4d2:	e116      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c4d4:	2302      	movs	r3, #2
 800c4d6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c4da:	e112      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c4dc:	2304      	movs	r3, #4
 800c4de:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c4e2:	e10e      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c4e4:	2308      	movs	r3, #8
 800c4e6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c4ea:	e10a      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c4ec:	2310      	movs	r3, #16
 800c4ee:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c4f2:	e106      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c4f4:	697b      	ldr	r3, [r7, #20]
 800c4f6:	681b      	ldr	r3, [r3, #0]
 800c4f8:	4a7c      	ldr	r2, [pc, #496]	; (800c6ec <UART_SetConfig+0x2e8>)
 800c4fa:	4293      	cmp	r3, r2
 800c4fc:	d138      	bne.n	800c570 <UART_SetConfig+0x16c>
 800c4fe:	4b7a      	ldr	r3, [pc, #488]	; (800c6e8 <UART_SetConfig+0x2e4>)
 800c500:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c504:	f003 030c 	and.w	r3, r3, #12
 800c508:	2b0c      	cmp	r3, #12
 800c50a:	d82d      	bhi.n	800c568 <UART_SetConfig+0x164>
 800c50c:	a201      	add	r2, pc, #4	; (adr r2, 800c514 <UART_SetConfig+0x110>)
 800c50e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c512:	bf00      	nop
 800c514:	0800c549 	.word	0x0800c549
 800c518:	0800c569 	.word	0x0800c569
 800c51c:	0800c569 	.word	0x0800c569
 800c520:	0800c569 	.word	0x0800c569
 800c524:	0800c559 	.word	0x0800c559
 800c528:	0800c569 	.word	0x0800c569
 800c52c:	0800c569 	.word	0x0800c569
 800c530:	0800c569 	.word	0x0800c569
 800c534:	0800c551 	.word	0x0800c551
 800c538:	0800c569 	.word	0x0800c569
 800c53c:	0800c569 	.word	0x0800c569
 800c540:	0800c569 	.word	0x0800c569
 800c544:	0800c561 	.word	0x0800c561
 800c548:	2300      	movs	r3, #0
 800c54a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c54e:	e0d8      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c550:	2302      	movs	r3, #2
 800c552:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c556:	e0d4      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c558:	2304      	movs	r3, #4
 800c55a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c55e:	e0d0      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c560:	2308      	movs	r3, #8
 800c562:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c566:	e0cc      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c568:	2310      	movs	r3, #16
 800c56a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c56e:	e0c8      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c570:	697b      	ldr	r3, [r7, #20]
 800c572:	681b      	ldr	r3, [r3, #0]
 800c574:	4a5e      	ldr	r2, [pc, #376]	; (800c6f0 <UART_SetConfig+0x2ec>)
 800c576:	4293      	cmp	r3, r2
 800c578:	d125      	bne.n	800c5c6 <UART_SetConfig+0x1c2>
 800c57a:	4b5b      	ldr	r3, [pc, #364]	; (800c6e8 <UART_SetConfig+0x2e4>)
 800c57c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c580:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800c584:	2b30      	cmp	r3, #48	; 0x30
 800c586:	d016      	beq.n	800c5b6 <UART_SetConfig+0x1b2>
 800c588:	2b30      	cmp	r3, #48	; 0x30
 800c58a:	d818      	bhi.n	800c5be <UART_SetConfig+0x1ba>
 800c58c:	2b20      	cmp	r3, #32
 800c58e:	d00a      	beq.n	800c5a6 <UART_SetConfig+0x1a2>
 800c590:	2b20      	cmp	r3, #32
 800c592:	d814      	bhi.n	800c5be <UART_SetConfig+0x1ba>
 800c594:	2b00      	cmp	r3, #0
 800c596:	d002      	beq.n	800c59e <UART_SetConfig+0x19a>
 800c598:	2b10      	cmp	r3, #16
 800c59a:	d008      	beq.n	800c5ae <UART_SetConfig+0x1aa>
 800c59c:	e00f      	b.n	800c5be <UART_SetConfig+0x1ba>
 800c59e:	2300      	movs	r3, #0
 800c5a0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c5a4:	e0ad      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c5a6:	2302      	movs	r3, #2
 800c5a8:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c5ac:	e0a9      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c5ae:	2304      	movs	r3, #4
 800c5b0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c5b4:	e0a5      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c5b6:	2308      	movs	r3, #8
 800c5b8:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c5bc:	e0a1      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c5be:	2310      	movs	r3, #16
 800c5c0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c5c4:	e09d      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c5c6:	697b      	ldr	r3, [r7, #20]
 800c5c8:	681b      	ldr	r3, [r3, #0]
 800c5ca:	4a4a      	ldr	r2, [pc, #296]	; (800c6f4 <UART_SetConfig+0x2f0>)
 800c5cc:	4293      	cmp	r3, r2
 800c5ce:	d125      	bne.n	800c61c <UART_SetConfig+0x218>
 800c5d0:	4b45      	ldr	r3, [pc, #276]	; (800c6e8 <UART_SetConfig+0x2e4>)
 800c5d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c5d6:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800c5da:	2bc0      	cmp	r3, #192	; 0xc0
 800c5dc:	d016      	beq.n	800c60c <UART_SetConfig+0x208>
 800c5de:	2bc0      	cmp	r3, #192	; 0xc0
 800c5e0:	d818      	bhi.n	800c614 <UART_SetConfig+0x210>
 800c5e2:	2b80      	cmp	r3, #128	; 0x80
 800c5e4:	d00a      	beq.n	800c5fc <UART_SetConfig+0x1f8>
 800c5e6:	2b80      	cmp	r3, #128	; 0x80
 800c5e8:	d814      	bhi.n	800c614 <UART_SetConfig+0x210>
 800c5ea:	2b00      	cmp	r3, #0
 800c5ec:	d002      	beq.n	800c5f4 <UART_SetConfig+0x1f0>
 800c5ee:	2b40      	cmp	r3, #64	; 0x40
 800c5f0:	d008      	beq.n	800c604 <UART_SetConfig+0x200>
 800c5f2:	e00f      	b.n	800c614 <UART_SetConfig+0x210>
 800c5f4:	2300      	movs	r3, #0
 800c5f6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c5fa:	e082      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c5fc:	2302      	movs	r3, #2
 800c5fe:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c602:	e07e      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c604:	2304      	movs	r3, #4
 800c606:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c60a:	e07a      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c60c:	2308      	movs	r3, #8
 800c60e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c612:	e076      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c614:	2310      	movs	r3, #16
 800c616:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c61a:	e072      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c61c:	697b      	ldr	r3, [r7, #20]
 800c61e:	681b      	ldr	r3, [r3, #0]
 800c620:	4a35      	ldr	r2, [pc, #212]	; (800c6f8 <UART_SetConfig+0x2f4>)
 800c622:	4293      	cmp	r3, r2
 800c624:	d12a      	bne.n	800c67c <UART_SetConfig+0x278>
 800c626:	4b30      	ldr	r3, [pc, #192]	; (800c6e8 <UART_SetConfig+0x2e4>)
 800c628:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c62c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800c630:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800c634:	d01a      	beq.n	800c66c <UART_SetConfig+0x268>
 800c636:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800c63a:	d81b      	bhi.n	800c674 <UART_SetConfig+0x270>
 800c63c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c640:	d00c      	beq.n	800c65c <UART_SetConfig+0x258>
 800c642:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c646:	d815      	bhi.n	800c674 <UART_SetConfig+0x270>
 800c648:	2b00      	cmp	r3, #0
 800c64a:	d003      	beq.n	800c654 <UART_SetConfig+0x250>
 800c64c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c650:	d008      	beq.n	800c664 <UART_SetConfig+0x260>
 800c652:	e00f      	b.n	800c674 <UART_SetConfig+0x270>
 800c654:	2300      	movs	r3, #0
 800c656:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c65a:	e052      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c65c:	2302      	movs	r3, #2
 800c65e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c662:	e04e      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c664:	2304      	movs	r3, #4
 800c666:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c66a:	e04a      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c66c:	2308      	movs	r3, #8
 800c66e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c672:	e046      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c674:	2310      	movs	r3, #16
 800c676:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c67a:	e042      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c67c:	697b      	ldr	r3, [r7, #20]
 800c67e:	681b      	ldr	r3, [r3, #0]
 800c680:	4a17      	ldr	r2, [pc, #92]	; (800c6e0 <UART_SetConfig+0x2dc>)
 800c682:	4293      	cmp	r3, r2
 800c684:	d13a      	bne.n	800c6fc <UART_SetConfig+0x2f8>
 800c686:	4b18      	ldr	r3, [pc, #96]	; (800c6e8 <UART_SetConfig+0x2e4>)
 800c688:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c68c:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800c690:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800c694:	d01a      	beq.n	800c6cc <UART_SetConfig+0x2c8>
 800c696:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800c69a:	d81b      	bhi.n	800c6d4 <UART_SetConfig+0x2d0>
 800c69c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c6a0:	d00c      	beq.n	800c6bc <UART_SetConfig+0x2b8>
 800c6a2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c6a6:	d815      	bhi.n	800c6d4 <UART_SetConfig+0x2d0>
 800c6a8:	2b00      	cmp	r3, #0
 800c6aa:	d003      	beq.n	800c6b4 <UART_SetConfig+0x2b0>
 800c6ac:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800c6b0:	d008      	beq.n	800c6c4 <UART_SetConfig+0x2c0>
 800c6b2:	e00f      	b.n	800c6d4 <UART_SetConfig+0x2d0>
 800c6b4:	2300      	movs	r3, #0
 800c6b6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c6ba:	e022      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c6bc:	2302      	movs	r3, #2
 800c6be:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c6c2:	e01e      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c6c4:	2304      	movs	r3, #4
 800c6c6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c6ca:	e01a      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c6cc:	2308      	movs	r3, #8
 800c6ce:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c6d2:	e016      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c6d4:	2310      	movs	r3, #16
 800c6d6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800c6da:	e012      	b.n	800c702 <UART_SetConfig+0x2fe>
 800c6dc:	cfff69f3 	.word	0xcfff69f3
 800c6e0:	40008000 	.word	0x40008000
 800c6e4:	40013800 	.word	0x40013800
 800c6e8:	40021000 	.word	0x40021000
 800c6ec:	40004400 	.word	0x40004400
 800c6f0:	40004800 	.word	0x40004800
 800c6f4:	40004c00 	.word	0x40004c00
 800c6f8:	40005000 	.word	0x40005000
 800c6fc:	2310      	movs	r3, #16
 800c6fe:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
 800c702:	697b      	ldr	r3, [r7, #20]
 800c704:	681b      	ldr	r3, [r3, #0]
 800c706:	4aae      	ldr	r2, [pc, #696]	; (800c9c0 <UART_SetConfig+0x5bc>)
 800c708:	4293      	cmp	r3, r2
 800c70a:	f040 8097 	bne.w	800c83c <UART_SetConfig+0x438>
  {
    /* Retrieve frequency clock */
    switch (clocksource)
 800c70e:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800c712:	2b08      	cmp	r3, #8
 800c714:	d823      	bhi.n	800c75e <UART_SetConfig+0x35a>
 800c716:	a201      	add	r2, pc, #4	; (adr r2, 800c71c <UART_SetConfig+0x318>)
 800c718:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c71c:	0800c741 	.word	0x0800c741
 800c720:	0800c75f 	.word	0x0800c75f
 800c724:	0800c749 	.word	0x0800c749
 800c728:	0800c75f 	.word	0x0800c75f
 800c72c:	0800c74f 	.word	0x0800c74f
 800c730:	0800c75f 	.word	0x0800c75f
 800c734:	0800c75f 	.word	0x0800c75f
 800c738:	0800c75f 	.word	0x0800c75f
 800c73c:	0800c757 	.word	0x0800c757
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800c740:	f7fb ff74 	bl	800862c <HAL_RCC_GetPCLK1Freq>
 800c744:	6278      	str	r0, [r7, #36]	; 0x24
        break;
 800c746:	e010      	b.n	800c76a <UART_SetConfig+0x366>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 800c748:	4b9e      	ldr	r3, [pc, #632]	; (800c9c4 <UART_SetConfig+0x5c0>)
 800c74a:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800c74c:	e00d      	b.n	800c76a <UART_SetConfig+0x366>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800c74e:	f7fb fed5 	bl	80084fc <HAL_RCC_GetSysClockFreq>
 800c752:	6278      	str	r0, [r7, #36]	; 0x24
        break;
 800c754:	e009      	b.n	800c76a <UART_SetConfig+0x366>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800c756:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800c75a:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800c75c:	e005      	b.n	800c76a <UART_SetConfig+0x366>
      default:
        pclk = 0U;
 800c75e:	2300      	movs	r3, #0
 800c760:	627b      	str	r3, [r7, #36]	; 0x24
        ret = HAL_ERROR;
 800c762:	2301      	movs	r3, #1
 800c764:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
        break;
 800c768:	bf00      	nop
    }

    /* If proper clock source reported */
    if (pclk != 0U)
 800c76a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c76c:	2b00      	cmp	r3, #0
 800c76e:	f000 8130 	beq.w	800c9d2 <UART_SetConfig+0x5ce>
    {
#if defined(USART_PRESC_PRESCALER)
      /* Compute clock after Prescaler */
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 800c772:	697b      	ldr	r3, [r7, #20]
 800c774:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c776:	4a94      	ldr	r2, [pc, #592]	; (800c9c8 <UART_SetConfig+0x5c4>)
 800c778:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c77c:	461a      	mov	r2, r3
 800c77e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c780:	fbb3 f3f2 	udiv	r3, r3, r2
 800c784:	61bb      	str	r3, [r7, #24]

      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 800c786:	697b      	ldr	r3, [r7, #20]
 800c788:	685a      	ldr	r2, [r3, #4]
 800c78a:	4613      	mov	r3, r2
 800c78c:	005b      	lsls	r3, r3, #1
 800c78e:	4413      	add	r3, r2
 800c790:	69ba      	ldr	r2, [r7, #24]
 800c792:	429a      	cmp	r2, r3
 800c794:	d305      	bcc.n	800c7a2 <UART_SetConfig+0x39e>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 800c796:	697b      	ldr	r3, [r7, #20]
 800c798:	685b      	ldr	r3, [r3, #4]
 800c79a:	031b      	lsls	r3, r3, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 800c79c:	69ba      	ldr	r2, [r7, #24]
 800c79e:	429a      	cmp	r2, r3
 800c7a0:	d903      	bls.n	800c7aa <UART_SetConfig+0x3a6>
      {
        ret = HAL_ERROR;
 800c7a2:	2301      	movs	r3, #1
 800c7a4:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 800c7a8:	e113      	b.n	800c9d2 <UART_SetConfig+0x5ce>
      }
      else
      {
        /* Check computed UsartDiv value is in allocated range
           (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800c7aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c7ac:	2200      	movs	r2, #0
 800c7ae:	60bb      	str	r3, [r7, #8]
 800c7b0:	60fa      	str	r2, [r7, #12]
 800c7b2:	697b      	ldr	r3, [r7, #20]
 800c7b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c7b6:	4a84      	ldr	r2, [pc, #528]	; (800c9c8 <UART_SetConfig+0x5c4>)
 800c7b8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c7bc:	b29b      	uxth	r3, r3
 800c7be:	2200      	movs	r2, #0
 800c7c0:	603b      	str	r3, [r7, #0]
 800c7c2:	607a      	str	r2, [r7, #4]
 800c7c4:	e9d7 2300 	ldrd	r2, r3, [r7]
 800c7c8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800c7cc:	f7f4 fa6c 	bl	8000ca8 <__aeabi_uldivmod>
 800c7d0:	4602      	mov	r2, r0
 800c7d2:	460b      	mov	r3, r1
 800c7d4:	4610      	mov	r0, r2
 800c7d6:	4619      	mov	r1, r3
 800c7d8:	f04f 0200 	mov.w	r2, #0
 800c7dc:	f04f 0300 	mov.w	r3, #0
 800c7e0:	020b      	lsls	r3, r1, #8
 800c7e2:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800c7e6:	0202      	lsls	r2, r0, #8
 800c7e8:	6979      	ldr	r1, [r7, #20]
 800c7ea:	6849      	ldr	r1, [r1, #4]
 800c7ec:	0849      	lsrs	r1, r1, #1
 800c7ee:	2000      	movs	r0, #0
 800c7f0:	460c      	mov	r4, r1
 800c7f2:	4605      	mov	r5, r0
 800c7f4:	eb12 0804 	adds.w	r8, r2, r4
 800c7f8:	eb43 0905 	adc.w	r9, r3, r5
 800c7fc:	697b      	ldr	r3, [r7, #20]
 800c7fe:	685b      	ldr	r3, [r3, #4]
 800c800:	2200      	movs	r2, #0
 800c802:	469a      	mov	sl, r3
 800c804:	4693      	mov	fp, r2
 800c806:	4652      	mov	r2, sl
 800c808:	465b      	mov	r3, fp
 800c80a:	4640      	mov	r0, r8
 800c80c:	4649      	mov	r1, r9
 800c80e:	f7f4 fa4b 	bl	8000ca8 <__aeabi_uldivmod>
 800c812:	4602      	mov	r2, r0
 800c814:	460b      	mov	r3, r1
 800c816:	4613      	mov	r3, r2
 800c818:	623b      	str	r3, [r7, #32]
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 800c81a:	6a3b      	ldr	r3, [r7, #32]
 800c81c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800c820:	d308      	bcc.n	800c834 <UART_SetConfig+0x430>
 800c822:	6a3b      	ldr	r3, [r7, #32]
 800c824:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800c828:	d204      	bcs.n	800c834 <UART_SetConfig+0x430>
        {
          huart->Instance->BRR = usartdiv;
 800c82a:	697b      	ldr	r3, [r7, #20]
 800c82c:	681b      	ldr	r3, [r3, #0]
 800c82e:	6a3a      	ldr	r2, [r7, #32]
 800c830:	60da      	str	r2, [r3, #12]
 800c832:	e0ce      	b.n	800c9d2 <UART_SetConfig+0x5ce>
        }
        else
        {
          ret = HAL_ERROR;
 800c834:	2301      	movs	r3, #1
 800c836:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 800c83a:	e0ca      	b.n	800c9d2 <UART_SetConfig+0x5ce>
      } /* if ( (pclk < (3 * huart->Init.BaudRate) ) || (pclk > (4096 * huart->Init.BaudRate) )) */
#endif /* USART_PRESC_PRESCALER */
    } /* if (pclk != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800c83c:	697b      	ldr	r3, [r7, #20]
 800c83e:	69db      	ldr	r3, [r3, #28]
 800c840:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800c844:	d166      	bne.n	800c914 <UART_SetConfig+0x510>
  {
    switch (clocksource)
 800c846:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800c84a:	2b08      	cmp	r3, #8
 800c84c:	d827      	bhi.n	800c89e <UART_SetConfig+0x49a>
 800c84e:	a201      	add	r2, pc, #4	; (adr r2, 800c854 <UART_SetConfig+0x450>)
 800c850:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c854:	0800c879 	.word	0x0800c879
 800c858:	0800c881 	.word	0x0800c881
 800c85c:	0800c889 	.word	0x0800c889
 800c860:	0800c89f 	.word	0x0800c89f
 800c864:	0800c88f 	.word	0x0800c88f
 800c868:	0800c89f 	.word	0x0800c89f
 800c86c:	0800c89f 	.word	0x0800c89f
 800c870:	0800c89f 	.word	0x0800c89f
 800c874:	0800c897 	.word	0x0800c897
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800c878:	f7fb fed8 	bl	800862c <HAL_RCC_GetPCLK1Freq>
 800c87c:	6278      	str	r0, [r7, #36]	; 0x24
        break;
 800c87e:	e014      	b.n	800c8aa <UART_SetConfig+0x4a6>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 800c880:	f7fb feea 	bl	8008658 <HAL_RCC_GetPCLK2Freq>
 800c884:	6278      	str	r0, [r7, #36]	; 0x24
        break;
 800c886:	e010      	b.n	800c8aa <UART_SetConfig+0x4a6>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 800c888:	4b4e      	ldr	r3, [pc, #312]	; (800c9c4 <UART_SetConfig+0x5c0>)
 800c88a:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800c88c:	e00d      	b.n	800c8aa <UART_SetConfig+0x4a6>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800c88e:	f7fb fe35 	bl	80084fc <HAL_RCC_GetSysClockFreq>
 800c892:	6278      	str	r0, [r7, #36]	; 0x24
        break;
 800c894:	e009      	b.n	800c8aa <UART_SetConfig+0x4a6>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800c896:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800c89a:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800c89c:	e005      	b.n	800c8aa <UART_SetConfig+0x4a6>
      default:
        pclk = 0U;
 800c89e:	2300      	movs	r3, #0
 800c8a0:	627b      	str	r3, [r7, #36]	; 0x24
        ret = HAL_ERROR;
 800c8a2:	2301      	movs	r3, #1
 800c8a4:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
        break;
 800c8a8:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 800c8aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c8ac:	2b00      	cmp	r3, #0
 800c8ae:	f000 8090 	beq.w	800c9d2 <UART_SetConfig+0x5ce>
    {
#if defined(USART_PRESC_PRESCALER)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800c8b2:	697b      	ldr	r3, [r7, #20]
 800c8b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c8b6:	4a44      	ldr	r2, [pc, #272]	; (800c9c8 <UART_SetConfig+0x5c4>)
 800c8b8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c8bc:	461a      	mov	r2, r3
 800c8be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c8c0:	fbb3 f3f2 	udiv	r3, r3, r2
 800c8c4:	005a      	lsls	r2, r3, #1
 800c8c6:	697b      	ldr	r3, [r7, #20]
 800c8c8:	685b      	ldr	r3, [r3, #4]
 800c8ca:	085b      	lsrs	r3, r3, #1
 800c8cc:	441a      	add	r2, r3
 800c8ce:	697b      	ldr	r3, [r7, #20]
 800c8d0:	685b      	ldr	r3, [r3, #4]
 800c8d2:	fbb2 f3f3 	udiv	r3, r2, r3
 800c8d6:	623b      	str	r3, [r7, #32]
#else
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
#endif /* USART_PRESC_PRESCALER */
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800c8d8:	6a3b      	ldr	r3, [r7, #32]
 800c8da:	2b0f      	cmp	r3, #15
 800c8dc:	d916      	bls.n	800c90c <UART_SetConfig+0x508>
 800c8de:	6a3b      	ldr	r3, [r7, #32]
 800c8e0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c8e4:	d212      	bcs.n	800c90c <UART_SetConfig+0x508>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800c8e6:	6a3b      	ldr	r3, [r7, #32]
 800c8e8:	b29b      	uxth	r3, r3
 800c8ea:	f023 030f 	bic.w	r3, r3, #15
 800c8ee:	83fb      	strh	r3, [r7, #30]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800c8f0:	6a3b      	ldr	r3, [r7, #32]
 800c8f2:	085b      	lsrs	r3, r3, #1
 800c8f4:	b29b      	uxth	r3, r3
 800c8f6:	f003 0307 	and.w	r3, r3, #7
 800c8fa:	b29a      	uxth	r2, r3
 800c8fc:	8bfb      	ldrh	r3, [r7, #30]
 800c8fe:	4313      	orrs	r3, r2
 800c900:	83fb      	strh	r3, [r7, #30]
        huart->Instance->BRR = brrtemp;
 800c902:	697b      	ldr	r3, [r7, #20]
 800c904:	681b      	ldr	r3, [r3, #0]
 800c906:	8bfa      	ldrh	r2, [r7, #30]
 800c908:	60da      	str	r2, [r3, #12]
 800c90a:	e062      	b.n	800c9d2 <UART_SetConfig+0x5ce>
      }
      else
      {
        ret = HAL_ERROR;
 800c90c:	2301      	movs	r3, #1
 800c90e:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 800c912:	e05e      	b.n	800c9d2 <UART_SetConfig+0x5ce>
      }
    }
  }
  else
  {
    switch (clocksource)
 800c914:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800c918:	2b08      	cmp	r3, #8
 800c91a:	d828      	bhi.n	800c96e <UART_SetConfig+0x56a>
 800c91c:	a201      	add	r2, pc, #4	; (adr r2, 800c924 <UART_SetConfig+0x520>)
 800c91e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c922:	bf00      	nop
 800c924:	0800c949 	.word	0x0800c949
 800c928:	0800c951 	.word	0x0800c951
 800c92c:	0800c959 	.word	0x0800c959
 800c930:	0800c96f 	.word	0x0800c96f
 800c934:	0800c95f 	.word	0x0800c95f
 800c938:	0800c96f 	.word	0x0800c96f
 800c93c:	0800c96f 	.word	0x0800c96f
 800c940:	0800c96f 	.word	0x0800c96f
 800c944:	0800c967 	.word	0x0800c967
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800c948:	f7fb fe70 	bl	800862c <HAL_RCC_GetPCLK1Freq>
 800c94c:	6278      	str	r0, [r7, #36]	; 0x24
        break;
 800c94e:	e014      	b.n	800c97a <UART_SetConfig+0x576>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 800c950:	f7fb fe82 	bl	8008658 <HAL_RCC_GetPCLK2Freq>
 800c954:	6278      	str	r0, [r7, #36]	; 0x24
        break;
 800c956:	e010      	b.n	800c97a <UART_SetConfig+0x576>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 800c958:	4b1a      	ldr	r3, [pc, #104]	; (800c9c4 <UART_SetConfig+0x5c0>)
 800c95a:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800c95c:	e00d      	b.n	800c97a <UART_SetConfig+0x576>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800c95e:	f7fb fdcd 	bl	80084fc <HAL_RCC_GetSysClockFreq>
 800c962:	6278      	str	r0, [r7, #36]	; 0x24
        break;
 800c964:	e009      	b.n	800c97a <UART_SetConfig+0x576>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800c966:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800c96a:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800c96c:	e005      	b.n	800c97a <UART_SetConfig+0x576>
      default:
        pclk = 0U;
 800c96e:	2300      	movs	r3, #0
 800c970:	627b      	str	r3, [r7, #36]	; 0x24
        ret = HAL_ERROR;
 800c972:	2301      	movs	r3, #1
 800c974:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
        break;
 800c978:	bf00      	nop
    }

    if (pclk != 0U)
 800c97a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c97c:	2b00      	cmp	r3, #0
 800c97e:	d028      	beq.n	800c9d2 <UART_SetConfig+0x5ce>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
#if defined(USART_PRESC_PRESCALER)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800c980:	697b      	ldr	r3, [r7, #20]
 800c982:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c984:	4a10      	ldr	r2, [pc, #64]	; (800c9c8 <UART_SetConfig+0x5c4>)
 800c986:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c98a:	461a      	mov	r2, r3
 800c98c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c98e:	fbb3 f2f2 	udiv	r2, r3, r2
 800c992:	697b      	ldr	r3, [r7, #20]
 800c994:	685b      	ldr	r3, [r3, #4]
 800c996:	085b      	lsrs	r3, r3, #1
 800c998:	441a      	add	r2, r3
 800c99a:	697b      	ldr	r3, [r7, #20]
 800c99c:	685b      	ldr	r3, [r3, #4]
 800c99e:	fbb2 f3f3 	udiv	r3, r2, r3
 800c9a2:	623b      	str	r3, [r7, #32]
#else
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
#endif /* USART_PRESC_PRESCALER */
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800c9a4:	6a3b      	ldr	r3, [r7, #32]
 800c9a6:	2b0f      	cmp	r3, #15
 800c9a8:	d910      	bls.n	800c9cc <UART_SetConfig+0x5c8>
 800c9aa:	6a3b      	ldr	r3, [r7, #32]
 800c9ac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c9b0:	d20c      	bcs.n	800c9cc <UART_SetConfig+0x5c8>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 800c9b2:	6a3b      	ldr	r3, [r7, #32]
 800c9b4:	b29a      	uxth	r2, r3
 800c9b6:	697b      	ldr	r3, [r7, #20]
 800c9b8:	681b      	ldr	r3, [r3, #0]
 800c9ba:	60da      	str	r2, [r3, #12]
 800c9bc:	e009      	b.n	800c9d2 <UART_SetConfig+0x5ce>
 800c9be:	bf00      	nop
 800c9c0:	40008000 	.word	0x40008000
 800c9c4:	00f42400 	.word	0x00f42400
 800c9c8:	0802b0f0 	.word	0x0802b0f0
      }
      else
      {
        ret = HAL_ERROR;
 800c9cc:	2301      	movs	r3, #1
 800c9ce:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
    }
  }

#if defined(USART_CR1_FIFOEN)
  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
 800c9d2:	697b      	ldr	r3, [r7, #20]
 800c9d4:	2201      	movs	r2, #1
 800c9d6:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  huart->NbRxDataToProcess = 1;
 800c9da:	697b      	ldr	r3, [r7, #20]
 800c9dc:	2201      	movs	r2, #1
 800c9de:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
#endif /* USART_CR1_FIFOEN */

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 800c9e2:	697b      	ldr	r3, [r7, #20]
 800c9e4:	2200      	movs	r2, #0
 800c9e6:	675a      	str	r2, [r3, #116]	; 0x74
  huart->TxISR = NULL;
 800c9e8:	697b      	ldr	r3, [r7, #20]
 800c9ea:	2200      	movs	r2, #0
 800c9ec:	679a      	str	r2, [r3, #120]	; 0x78

  return ret;
 800c9ee:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
}
 800c9f2:	4618      	mov	r0, r3
 800c9f4:	3730      	adds	r7, #48	; 0x30
 800c9f6:	46bd      	mov	sp, r7
 800c9f8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}

0800c9fc <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 800c9fc:	b480      	push	{r7}
 800c9fe:	b083      	sub	sp, #12
 800ca00:	af00      	add	r7, sp, #0
 800ca02:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800ca04:	687b      	ldr	r3, [r7, #4]
 800ca06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca08:	f003 0308 	and.w	r3, r3, #8
 800ca0c:	2b00      	cmp	r3, #0
 800ca0e:	d00a      	beq.n	800ca26 <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800ca10:	687b      	ldr	r3, [r7, #4]
 800ca12:	681b      	ldr	r3, [r3, #0]
 800ca14:	685b      	ldr	r3, [r3, #4]
 800ca16:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800ca1a:	687b      	ldr	r3, [r7, #4]
 800ca1c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ca1e:	687b      	ldr	r3, [r7, #4]
 800ca20:	681b      	ldr	r3, [r3, #0]
 800ca22:	430a      	orrs	r2, r1
 800ca24:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800ca26:	687b      	ldr	r3, [r7, #4]
 800ca28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca2a:	f003 0301 	and.w	r3, r3, #1
 800ca2e:	2b00      	cmp	r3, #0
 800ca30:	d00a      	beq.n	800ca48 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 800ca32:	687b      	ldr	r3, [r7, #4]
 800ca34:	681b      	ldr	r3, [r3, #0]
 800ca36:	685b      	ldr	r3, [r3, #4]
 800ca38:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800ca3c:	687b      	ldr	r3, [r7, #4]
 800ca3e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ca40:	687b      	ldr	r3, [r7, #4]
 800ca42:	681b      	ldr	r3, [r3, #0]
 800ca44:	430a      	orrs	r2, r1
 800ca46:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800ca48:	687b      	ldr	r3, [r7, #4]
 800ca4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca4c:	f003 0302 	and.w	r3, r3, #2
 800ca50:	2b00      	cmp	r3, #0
 800ca52:	d00a      	beq.n	800ca6a <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800ca54:	687b      	ldr	r3, [r7, #4]
 800ca56:	681b      	ldr	r3, [r3, #0]
 800ca58:	685b      	ldr	r3, [r3, #4]
 800ca5a:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800ca5e:	687b      	ldr	r3, [r7, #4]
 800ca60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ca62:	687b      	ldr	r3, [r7, #4]
 800ca64:	681b      	ldr	r3, [r3, #0]
 800ca66:	430a      	orrs	r2, r1
 800ca68:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800ca6a:	687b      	ldr	r3, [r7, #4]
 800ca6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca6e:	f003 0304 	and.w	r3, r3, #4
 800ca72:	2b00      	cmp	r3, #0
 800ca74:	d00a      	beq.n	800ca8c <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800ca76:	687b      	ldr	r3, [r7, #4]
 800ca78:	681b      	ldr	r3, [r3, #0]
 800ca7a:	685b      	ldr	r3, [r3, #4]
 800ca7c:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800ca80:	687b      	ldr	r3, [r7, #4]
 800ca82:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ca84:	687b      	ldr	r3, [r7, #4]
 800ca86:	681b      	ldr	r3, [r3, #0]
 800ca88:	430a      	orrs	r2, r1
 800ca8a:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 800ca8c:	687b      	ldr	r3, [r7, #4]
 800ca8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca90:	f003 0310 	and.w	r3, r3, #16
 800ca94:	2b00      	cmp	r3, #0
 800ca96:	d00a      	beq.n	800caae <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800ca98:	687b      	ldr	r3, [r7, #4]
 800ca9a:	681b      	ldr	r3, [r3, #0]
 800ca9c:	689b      	ldr	r3, [r3, #8]
 800ca9e:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800caa2:	687b      	ldr	r3, [r7, #4]
 800caa4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800caa6:	687b      	ldr	r3, [r7, #4]
 800caa8:	681b      	ldr	r3, [r3, #0]
 800caaa:	430a      	orrs	r2, r1
 800caac:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800caae:	687b      	ldr	r3, [r7, #4]
 800cab0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cab2:	f003 0320 	and.w	r3, r3, #32
 800cab6:	2b00      	cmp	r3, #0
 800cab8:	d00a      	beq.n	800cad0 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800caba:	687b      	ldr	r3, [r7, #4]
 800cabc:	681b      	ldr	r3, [r3, #0]
 800cabe:	689b      	ldr	r3, [r3, #8]
 800cac0:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800cac4:	687b      	ldr	r3, [r7, #4]
 800cac6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800cac8:	687b      	ldr	r3, [r7, #4]
 800caca:	681b      	ldr	r3, [r3, #0]
 800cacc:	430a      	orrs	r2, r1
 800cace:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 800cad0:	687b      	ldr	r3, [r7, #4]
 800cad2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cad4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cad8:	2b00      	cmp	r3, #0
 800cada:	d01a      	beq.n	800cb12 <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800cadc:	687b      	ldr	r3, [r7, #4]
 800cade:	681b      	ldr	r3, [r3, #0]
 800cae0:	685b      	ldr	r3, [r3, #4]
 800cae2:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800cae6:	687b      	ldr	r3, [r7, #4]
 800cae8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800caea:	687b      	ldr	r3, [r7, #4]
 800caec:	681b      	ldr	r3, [r3, #0]
 800caee:	430a      	orrs	r2, r1
 800caf0:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800caf2:	687b      	ldr	r3, [r7, #4]
 800caf4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800caf6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800cafa:	d10a      	bne.n	800cb12 <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800cafc:	687b      	ldr	r3, [r7, #4]
 800cafe:	681b      	ldr	r3, [r3, #0]
 800cb00:	685b      	ldr	r3, [r3, #4]
 800cb02:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800cb06:	687b      	ldr	r3, [r7, #4]
 800cb08:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800cb0a:	687b      	ldr	r3, [r7, #4]
 800cb0c:	681b      	ldr	r3, [r3, #0]
 800cb0e:	430a      	orrs	r2, r1
 800cb10:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800cb12:	687b      	ldr	r3, [r7, #4]
 800cb14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cb16:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800cb1a:	2b00      	cmp	r3, #0
 800cb1c:	d00a      	beq.n	800cb34 <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800cb1e:	687b      	ldr	r3, [r7, #4]
 800cb20:	681b      	ldr	r3, [r3, #0]
 800cb22:	685b      	ldr	r3, [r3, #4]
 800cb24:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800cb28:	687b      	ldr	r3, [r7, #4]
 800cb2a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800cb2c:	687b      	ldr	r3, [r7, #4]
 800cb2e:	681b      	ldr	r3, [r3, #0]
 800cb30:	430a      	orrs	r2, r1
 800cb32:	605a      	str	r2, [r3, #4]
  }
}
 800cb34:	bf00      	nop
 800cb36:	370c      	adds	r7, #12
 800cb38:	46bd      	mov	sp, r7
 800cb3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb3e:	4770      	bx	lr

0800cb40 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 800cb40:	b580      	push	{r7, lr}
 800cb42:	b098      	sub	sp, #96	; 0x60
 800cb44:	af02      	add	r7, sp, #8
 800cb46:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800cb48:	687b      	ldr	r3, [r7, #4]
 800cb4a:	2200      	movs	r2, #0
 800cb4c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 800cb50:	f7f9 f8b2 	bl	8005cb8 <HAL_GetTick>
 800cb54:	6578      	str	r0, [r7, #84]	; 0x54

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800cb56:	687b      	ldr	r3, [r7, #4]
 800cb58:	681b      	ldr	r3, [r3, #0]
 800cb5a:	681b      	ldr	r3, [r3, #0]
 800cb5c:	f003 0308 	and.w	r3, r3, #8
 800cb60:	2b08      	cmp	r3, #8
 800cb62:	d12f      	bne.n	800cbc4 <UART_CheckIdleState+0x84>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800cb64:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800cb68:	9300      	str	r3, [sp, #0]
 800cb6a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800cb6c:	2200      	movs	r2, #0
 800cb6e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800cb72:	6878      	ldr	r0, [r7, #4]
 800cb74:	f000 f88e 	bl	800cc94 <UART_WaitOnFlagUntilTimeout>
 800cb78:	4603      	mov	r3, r0
 800cb7a:	2b00      	cmp	r3, #0
 800cb7c:	d022      	beq.n	800cbc4 <UART_CheckIdleState+0x84>
    {
      /* Disable TXE interrupt for the interrupt process */
#if defined(USART_CR1_FIFOEN)
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
 800cb7e:	687b      	ldr	r3, [r7, #4]
 800cb80:	681b      	ldr	r3, [r3, #0]
 800cb82:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800cb84:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cb86:	e853 3f00 	ldrex	r3, [r3]
 800cb8a:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 800cb8c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cb8e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cb92:	653b      	str	r3, [r7, #80]	; 0x50
 800cb94:	687b      	ldr	r3, [r7, #4]
 800cb96:	681b      	ldr	r3, [r3, #0]
 800cb98:	461a      	mov	r2, r3
 800cb9a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800cb9c:	647b      	str	r3, [r7, #68]	; 0x44
 800cb9e:	643a      	str	r2, [r7, #64]	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800cba0:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800cba2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800cba4:	e841 2300 	strex	r3, r2, [r1]
 800cba8:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 800cbaa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cbac:	2b00      	cmp	r3, #0
 800cbae:	d1e6      	bne.n	800cb7e <UART_CheckIdleState+0x3e>
#else
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
#endif /* USART_CR1_FIFOEN */

      huart->gState = HAL_UART_STATE_READY;
 800cbb0:	687b      	ldr	r3, [r7, #4]
 800cbb2:	2220      	movs	r2, #32
 800cbb4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

      __HAL_UNLOCK(huart);
 800cbb8:	687b      	ldr	r3, [r7, #4]
 800cbba:	2200      	movs	r2, #0
 800cbbc:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

      /* Timeout occurred */
      return HAL_TIMEOUT;
 800cbc0:	2303      	movs	r3, #3
 800cbc2:	e063      	b.n	800cc8c <UART_CheckIdleState+0x14c>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800cbc4:	687b      	ldr	r3, [r7, #4]
 800cbc6:	681b      	ldr	r3, [r3, #0]
 800cbc8:	681b      	ldr	r3, [r3, #0]
 800cbca:	f003 0304 	and.w	r3, r3, #4
 800cbce:	2b04      	cmp	r3, #4
 800cbd0:	d149      	bne.n	800cc66 <UART_CheckIdleState+0x126>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800cbd2:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800cbd6:	9300      	str	r3, [sp, #0]
 800cbd8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800cbda:	2200      	movs	r2, #0
 800cbdc:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800cbe0:	6878      	ldr	r0, [r7, #4]
 800cbe2:	f000 f857 	bl	800cc94 <UART_WaitOnFlagUntilTimeout>
 800cbe6:	4603      	mov	r3, r0
 800cbe8:	2b00      	cmp	r3, #0
 800cbea:	d03c      	beq.n	800cc66 <UART_CheckIdleState+0x126>
    {
      /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
      interrupts for the interrupt process */
#if defined(USART_CR1_FIFOEN)
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800cbec:	687b      	ldr	r3, [r7, #4]
 800cbee:	681b      	ldr	r3, [r3, #0]
 800cbf0:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800cbf2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cbf4:	e853 3f00 	ldrex	r3, [r3]
 800cbf8:	623b      	str	r3, [r7, #32]
   return(result);
 800cbfa:	6a3b      	ldr	r3, [r7, #32]
 800cbfc:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800cc00:	64fb      	str	r3, [r7, #76]	; 0x4c
 800cc02:	687b      	ldr	r3, [r7, #4]
 800cc04:	681b      	ldr	r3, [r3, #0]
 800cc06:	461a      	mov	r2, r3
 800cc08:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800cc0a:	633b      	str	r3, [r7, #48]	; 0x30
 800cc0c:	62fa      	str	r2, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800cc0e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800cc10:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800cc12:	e841 2300 	strex	r3, r2, [r1]
 800cc16:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 800cc18:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cc1a:	2b00      	cmp	r3, #0
 800cc1c:	d1e6      	bne.n	800cbec <UART_CheckIdleState+0xac>
#else
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
#endif /* USART_CR1_FIFOEN */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800cc1e:	687b      	ldr	r3, [r7, #4]
 800cc20:	681b      	ldr	r3, [r3, #0]
 800cc22:	3308      	adds	r3, #8
 800cc24:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800cc26:	693b      	ldr	r3, [r7, #16]
 800cc28:	e853 3f00 	ldrex	r3, [r3]
 800cc2c:	60fb      	str	r3, [r7, #12]
   return(result);
 800cc2e:	68fb      	ldr	r3, [r7, #12]
 800cc30:	f023 0301 	bic.w	r3, r3, #1
 800cc34:	64bb      	str	r3, [r7, #72]	; 0x48
 800cc36:	687b      	ldr	r3, [r7, #4]
 800cc38:	681b      	ldr	r3, [r3, #0]
 800cc3a:	3308      	adds	r3, #8
 800cc3c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800cc3e:	61fa      	str	r2, [r7, #28]
 800cc40:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800cc42:	69b9      	ldr	r1, [r7, #24]
 800cc44:	69fa      	ldr	r2, [r7, #28]
 800cc46:	e841 2300 	strex	r3, r2, [r1]
 800cc4a:	617b      	str	r3, [r7, #20]
   return(result);
 800cc4c:	697b      	ldr	r3, [r7, #20]
 800cc4e:	2b00      	cmp	r3, #0
 800cc50:	d1e5      	bne.n	800cc1e <UART_CheckIdleState+0xde>

      huart->RxState = HAL_UART_STATE_READY;
 800cc52:	687b      	ldr	r3, [r7, #4]
 800cc54:	2220      	movs	r2, #32
 800cc56:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

      __HAL_UNLOCK(huart);
 800cc5a:	687b      	ldr	r3, [r7, #4]
 800cc5c:	2200      	movs	r2, #0
 800cc5e:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

      /* Timeout occurred */
      return HAL_TIMEOUT;
 800cc62:	2303      	movs	r3, #3
 800cc64:	e012      	b.n	800cc8c <UART_CheckIdleState+0x14c>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 800cc66:	687b      	ldr	r3, [r7, #4]
 800cc68:	2220      	movs	r2, #32
 800cc6a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  huart->RxState = HAL_UART_STATE_READY;
 800cc6e:	687b      	ldr	r3, [r7, #4]
 800cc70:	2220      	movs	r2, #32
 800cc72:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800cc76:	687b      	ldr	r3, [r7, #4]
 800cc78:	2200      	movs	r2, #0
 800cc7a:	66da      	str	r2, [r3, #108]	; 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800cc7c:	687b      	ldr	r3, [r7, #4]
 800cc7e:	2200      	movs	r2, #0
 800cc80:	671a      	str	r2, [r3, #112]	; 0x70

  __HAL_UNLOCK(huart);
 800cc82:	687b      	ldr	r3, [r7, #4]
 800cc84:	2200      	movs	r2, #0
 800cc86:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  return HAL_OK;
 800cc8a:	2300      	movs	r3, #0
}
 800cc8c:	4618      	mov	r0, r3
 800cc8e:	3758      	adds	r7, #88	; 0x58
 800cc90:	46bd      	mov	sp, r7
 800cc92:	bd80      	pop	{r7, pc}

0800cc94 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 800cc94:	b580      	push	{r7, lr}
 800cc96:	b084      	sub	sp, #16
 800cc98:	af00      	add	r7, sp, #0
 800cc9a:	60f8      	str	r0, [r7, #12]
 800cc9c:	60b9      	str	r1, [r7, #8]
 800cc9e:	603b      	str	r3, [r7, #0]
 800cca0:	4613      	mov	r3, r2
 800cca2:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800cca4:	e049      	b.n	800cd3a <UART_WaitOnFlagUntilTimeout+0xa6>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800cca6:	69bb      	ldr	r3, [r7, #24]
 800cca8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ccac:	d045      	beq.n	800cd3a <UART_WaitOnFlagUntilTimeout+0xa6>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ccae:	f7f9 f803 	bl	8005cb8 <HAL_GetTick>
 800ccb2:	4602      	mov	r2, r0
 800ccb4:	683b      	ldr	r3, [r7, #0]
 800ccb6:	1ad3      	subs	r3, r2, r3
 800ccb8:	69ba      	ldr	r2, [r7, #24]
 800ccba:	429a      	cmp	r2, r3
 800ccbc:	d302      	bcc.n	800ccc4 <UART_WaitOnFlagUntilTimeout+0x30>
 800ccbe:	69bb      	ldr	r3, [r7, #24]
 800ccc0:	2b00      	cmp	r3, #0
 800ccc2:	d101      	bne.n	800ccc8 <UART_WaitOnFlagUntilTimeout+0x34>
      {

        return HAL_TIMEOUT;
 800ccc4:	2303      	movs	r3, #3
 800ccc6:	e048      	b.n	800cd5a <UART_WaitOnFlagUntilTimeout+0xc6>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 800ccc8:	68fb      	ldr	r3, [r7, #12]
 800ccca:	681b      	ldr	r3, [r3, #0]
 800cccc:	681b      	ldr	r3, [r3, #0]
 800ccce:	f003 0304 	and.w	r3, r3, #4
 800ccd2:	2b00      	cmp	r3, #0
 800ccd4:	d031      	beq.n	800cd3a <UART_WaitOnFlagUntilTimeout+0xa6>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 800ccd6:	68fb      	ldr	r3, [r7, #12]
 800ccd8:	681b      	ldr	r3, [r3, #0]
 800ccda:	69db      	ldr	r3, [r3, #28]
 800ccdc:	f003 0308 	and.w	r3, r3, #8
 800cce0:	2b08      	cmp	r3, #8
 800cce2:	d110      	bne.n	800cd06 <UART_WaitOnFlagUntilTimeout+0x72>
        {
          /* Clear Overrun Error flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800cce4:	68fb      	ldr	r3, [r7, #12]
 800cce6:	681b      	ldr	r3, [r3, #0]
 800cce8:	2208      	movs	r2, #8
 800ccea:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 800ccec:	68f8      	ldr	r0, [r7, #12]
 800ccee:	f000 f95b 	bl	800cfa8 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_ORE;
 800ccf2:	68fb      	ldr	r3, [r7, #12]
 800ccf4:	2208      	movs	r2, #8
 800ccf6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800ccfa:	68fb      	ldr	r3, [r7, #12]
 800ccfc:	2200      	movs	r2, #0
 800ccfe:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

          return HAL_ERROR;
 800cd02:	2301      	movs	r3, #1
 800cd04:	e029      	b.n	800cd5a <UART_WaitOnFlagUntilTimeout+0xc6>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800cd06:	68fb      	ldr	r3, [r7, #12]
 800cd08:	681b      	ldr	r3, [r3, #0]
 800cd0a:	69db      	ldr	r3, [r3, #28]
 800cd0c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800cd10:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cd14:	d111      	bne.n	800cd3a <UART_WaitOnFlagUntilTimeout+0xa6>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800cd16:	68fb      	ldr	r3, [r7, #12]
 800cd18:	681b      	ldr	r3, [r3, #0]
 800cd1a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800cd1e:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 800cd20:	68f8      	ldr	r0, [r7, #12]
 800cd22:	f000 f941 	bl	800cfa8 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
 800cd26:	68fb      	ldr	r3, [r7, #12]
 800cd28:	2220      	movs	r2, #32
 800cd2a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800cd2e:	68fb      	ldr	r3, [r7, #12]
 800cd30:	2200      	movs	r2, #0
 800cd32:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

          return HAL_TIMEOUT;
 800cd36:	2303      	movs	r3, #3
 800cd38:	e00f      	b.n	800cd5a <UART_WaitOnFlagUntilTimeout+0xc6>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800cd3a:	68fb      	ldr	r3, [r7, #12]
 800cd3c:	681b      	ldr	r3, [r3, #0]
 800cd3e:	69da      	ldr	r2, [r3, #28]
 800cd40:	68bb      	ldr	r3, [r7, #8]
 800cd42:	4013      	ands	r3, r2
 800cd44:	68ba      	ldr	r2, [r7, #8]
 800cd46:	429a      	cmp	r2, r3
 800cd48:	bf0c      	ite	eq
 800cd4a:	2301      	moveq	r3, #1
 800cd4c:	2300      	movne	r3, #0
 800cd4e:	b2db      	uxtb	r3, r3
 800cd50:	461a      	mov	r2, r3
 800cd52:	79fb      	ldrb	r3, [r7, #7]
 800cd54:	429a      	cmp	r2, r3
 800cd56:	d0a6      	beq.n	800cca6 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 800cd58:	2300      	movs	r3, #0
}
 800cd5a:	4618      	mov	r0, r3
 800cd5c:	3710      	adds	r7, #16
 800cd5e:	46bd      	mov	sp, r7
 800cd60:	bd80      	pop	{r7, pc}
	...

0800cd64 <UART_Start_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 800cd64:	b480      	push	{r7}
 800cd66:	b0a3      	sub	sp, #140	; 0x8c
 800cd68:	af00      	add	r7, sp, #0
 800cd6a:	60f8      	str	r0, [r7, #12]
 800cd6c:	60b9      	str	r1, [r7, #8]
 800cd6e:	4613      	mov	r3, r2
 800cd70:	80fb      	strh	r3, [r7, #6]
  huart->pRxBuffPtr  = pData;
 800cd72:	68fb      	ldr	r3, [r7, #12]
 800cd74:	68ba      	ldr	r2, [r7, #8]
 800cd76:	659a      	str	r2, [r3, #88]	; 0x58
  huart->RxXferSize  = Size;
 800cd78:	68fb      	ldr	r3, [r7, #12]
 800cd7a:	88fa      	ldrh	r2, [r7, #6]
 800cd7c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
  huart->RxXferCount = Size;
 800cd80:	68fb      	ldr	r3, [r7, #12]
 800cd82:	88fa      	ldrh	r2, [r7, #6]
 800cd84:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
  huart->RxISR       = NULL;
 800cd88:	68fb      	ldr	r3, [r7, #12]
 800cd8a:	2200      	movs	r2, #0
 800cd8c:	675a      	str	r2, [r3, #116]	; 0x74

  /* Computation of UART mask to apply to RDR register */
  UART_MASK_COMPUTATION(huart);
 800cd8e:	68fb      	ldr	r3, [r7, #12]
 800cd90:	689b      	ldr	r3, [r3, #8]
 800cd92:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800cd96:	d10e      	bne.n	800cdb6 <UART_Start_Receive_IT+0x52>
 800cd98:	68fb      	ldr	r3, [r7, #12]
 800cd9a:	691b      	ldr	r3, [r3, #16]
 800cd9c:	2b00      	cmp	r3, #0
 800cd9e:	d105      	bne.n	800cdac <UART_Start_Receive_IT+0x48>
 800cda0:	68fb      	ldr	r3, [r7, #12]
 800cda2:	f240 12ff 	movw	r2, #511	; 0x1ff
 800cda6:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800cdaa:	e02d      	b.n	800ce08 <UART_Start_Receive_IT+0xa4>
 800cdac:	68fb      	ldr	r3, [r7, #12]
 800cdae:	22ff      	movs	r2, #255	; 0xff
 800cdb0:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800cdb4:	e028      	b.n	800ce08 <UART_Start_Receive_IT+0xa4>
 800cdb6:	68fb      	ldr	r3, [r7, #12]
 800cdb8:	689b      	ldr	r3, [r3, #8]
 800cdba:	2b00      	cmp	r3, #0
 800cdbc:	d10d      	bne.n	800cdda <UART_Start_Receive_IT+0x76>
 800cdbe:	68fb      	ldr	r3, [r7, #12]
 800cdc0:	691b      	ldr	r3, [r3, #16]
 800cdc2:	2b00      	cmp	r3, #0
 800cdc4:	d104      	bne.n	800cdd0 <UART_Start_Receive_IT+0x6c>
 800cdc6:	68fb      	ldr	r3, [r7, #12]
 800cdc8:	22ff      	movs	r2, #255	; 0xff
 800cdca:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800cdce:	e01b      	b.n	800ce08 <UART_Start_Receive_IT+0xa4>
 800cdd0:	68fb      	ldr	r3, [r7, #12]
 800cdd2:	227f      	movs	r2, #127	; 0x7f
 800cdd4:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800cdd8:	e016      	b.n	800ce08 <UART_Start_Receive_IT+0xa4>
 800cdda:	68fb      	ldr	r3, [r7, #12]
 800cddc:	689b      	ldr	r3, [r3, #8]
 800cdde:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800cde2:	d10d      	bne.n	800ce00 <UART_Start_Receive_IT+0x9c>
 800cde4:	68fb      	ldr	r3, [r7, #12]
 800cde6:	691b      	ldr	r3, [r3, #16]
 800cde8:	2b00      	cmp	r3, #0
 800cdea:	d104      	bne.n	800cdf6 <UART_Start_Receive_IT+0x92>
 800cdec:	68fb      	ldr	r3, [r7, #12]
 800cdee:	227f      	movs	r2, #127	; 0x7f
 800cdf0:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800cdf4:	e008      	b.n	800ce08 <UART_Start_Receive_IT+0xa4>
 800cdf6:	68fb      	ldr	r3, [r7, #12]
 800cdf8:	223f      	movs	r2, #63	; 0x3f
 800cdfa:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800cdfe:	e003      	b.n	800ce08 <UART_Start_Receive_IT+0xa4>
 800ce00:	68fb      	ldr	r3, [r7, #12]
 800ce02:	2200      	movs	r2, #0
 800ce04:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60

  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ce08:	68fb      	ldr	r3, [r7, #12]
 800ce0a:	2200      	movs	r2, #0
 800ce0c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 800ce10:	68fb      	ldr	r3, [r7, #12]
 800ce12:	2222      	movs	r2, #34	; 0x22
 800ce14:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800ce18:	68fb      	ldr	r3, [r7, #12]
 800ce1a:	681b      	ldr	r3, [r3, #0]
 800ce1c:	3308      	adds	r3, #8
 800ce1e:	667b      	str	r3, [r7, #100]	; 0x64
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800ce20:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800ce22:	e853 3f00 	ldrex	r3, [r3]
 800ce26:	663b      	str	r3, [r7, #96]	; 0x60
   return(result);
 800ce28:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800ce2a:	f043 0301 	orr.w	r3, r3, #1
 800ce2e:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800ce32:	68fb      	ldr	r3, [r7, #12]
 800ce34:	681b      	ldr	r3, [r3, #0]
 800ce36:	3308      	adds	r3, #8
 800ce38:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 800ce3c:	673a      	str	r2, [r7, #112]	; 0x70
 800ce3e:	66fb      	str	r3, [r7, #108]	; 0x6c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800ce40:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 800ce42:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 800ce44:	e841 2300 	strex	r3, r2, [r1]
 800ce48:	66bb      	str	r3, [r7, #104]	; 0x68
   return(result);
 800ce4a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800ce4c:	2b00      	cmp	r3, #0
 800ce4e:	d1e3      	bne.n	800ce18 <UART_Start_Receive_IT+0xb4>

#if defined(USART_CR1_FIFOEN)
  /* Configure Rx interrupt processing */
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 800ce50:	68fb      	ldr	r3, [r7, #12]
 800ce52:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ce54:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800ce58:	d14f      	bne.n	800cefa <UART_Start_Receive_IT+0x196>
 800ce5a:	68fb      	ldr	r3, [r7, #12]
 800ce5c:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800ce60:	88fa      	ldrh	r2, [r7, #6]
 800ce62:	429a      	cmp	r2, r3
 800ce64:	d349      	bcc.n	800cefa <UART_Start_Receive_IT+0x196>
  {
    /* Set the Rx ISR function pointer according to the data word length */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800ce66:	68fb      	ldr	r3, [r7, #12]
 800ce68:	689b      	ldr	r3, [r3, #8]
 800ce6a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ce6e:	d107      	bne.n	800ce80 <UART_Start_Receive_IT+0x11c>
 800ce70:	68fb      	ldr	r3, [r7, #12]
 800ce72:	691b      	ldr	r3, [r3, #16]
 800ce74:	2b00      	cmp	r3, #0
 800ce76:	d103      	bne.n	800ce80 <UART_Start_Receive_IT+0x11c>
    {
      huart->RxISR = UART_RxISR_16BIT_FIFOEN;
 800ce78:	68fb      	ldr	r3, [r7, #12]
 800ce7a:	4a47      	ldr	r2, [pc, #284]	; (800cf98 <UART_Start_Receive_IT+0x234>)
 800ce7c:	675a      	str	r2, [r3, #116]	; 0x74
 800ce7e:	e002      	b.n	800ce86 <UART_Start_Receive_IT+0x122>
    }
    else
    {
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 800ce80:	68fb      	ldr	r3, [r7, #12]
 800ce82:	4a46      	ldr	r2, [pc, #280]	; (800cf9c <UART_Start_Receive_IT+0x238>)
 800ce84:	675a      	str	r2, [r3, #116]	; 0x74
    }

    /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
    if (huart->Init.Parity != UART_PARITY_NONE)
 800ce86:	68fb      	ldr	r3, [r7, #12]
 800ce88:	691b      	ldr	r3, [r3, #16]
 800ce8a:	2b00      	cmp	r3, #0
 800ce8c:	d01a      	beq.n	800cec4 <UART_Start_Receive_IT+0x160>
    {
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800ce8e:	68fb      	ldr	r3, [r7, #12]
 800ce90:	681b      	ldr	r3, [r3, #0]
 800ce92:	653b      	str	r3, [r7, #80]	; 0x50
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800ce94:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800ce96:	e853 3f00 	ldrex	r3, [r3]
 800ce9a:	64fb      	str	r3, [r7, #76]	; 0x4c
   return(result);
 800ce9c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800ce9e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800cea2:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800cea6:	68fb      	ldr	r3, [r7, #12]
 800cea8:	681b      	ldr	r3, [r3, #0]
 800ceaa:	461a      	mov	r2, r3
 800ceac:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800ceb0:	65fb      	str	r3, [r7, #92]	; 0x5c
 800ceb2:	65ba      	str	r2, [r7, #88]	; 0x58
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800ceb4:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800ceb6:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800ceb8:	e841 2300 	strex	r3, r2, [r1]
 800cebc:	657b      	str	r3, [r7, #84]	; 0x54
   return(result);
 800cebe:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800cec0:	2b00      	cmp	r3, #0
 800cec2:	d1e4      	bne.n	800ce8e <UART_Start_Receive_IT+0x12a>
    }
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 800cec4:	68fb      	ldr	r3, [r7, #12]
 800cec6:	681b      	ldr	r3, [r3, #0]
 800cec8:	3308      	adds	r3, #8
 800ceca:	63fb      	str	r3, [r7, #60]	; 0x3c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800cecc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cece:	e853 3f00 	ldrex	r3, [r3]
 800ced2:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 800ced4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ced6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800ceda:	67fb      	str	r3, [r7, #124]	; 0x7c
 800cedc:	68fb      	ldr	r3, [r7, #12]
 800cede:	681b      	ldr	r3, [r3, #0]
 800cee0:	3308      	adds	r3, #8
 800cee2:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800cee4:	64ba      	str	r2, [r7, #72]	; 0x48
 800cee6:	647b      	str	r3, [r7, #68]	; 0x44
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800cee8:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800ceea:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800ceec:	e841 2300 	strex	r3, r2, [r1]
 800cef0:	643b      	str	r3, [r7, #64]	; 0x40
   return(result);
 800cef2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800cef4:	2b00      	cmp	r3, #0
 800cef6:	d1e5      	bne.n	800cec4 <UART_Start_Receive_IT+0x160>
 800cef8:	e046      	b.n	800cf88 <UART_Start_Receive_IT+0x224>
  }
  else
  {
    /* Set the Rx ISR function pointer according to the data word length */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800cefa:	68fb      	ldr	r3, [r7, #12]
 800cefc:	689b      	ldr	r3, [r3, #8]
 800cefe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800cf02:	d107      	bne.n	800cf14 <UART_Start_Receive_IT+0x1b0>
 800cf04:	68fb      	ldr	r3, [r7, #12]
 800cf06:	691b      	ldr	r3, [r3, #16]
 800cf08:	2b00      	cmp	r3, #0
 800cf0a:	d103      	bne.n	800cf14 <UART_Start_Receive_IT+0x1b0>
    {
      huart->RxISR = UART_RxISR_16BIT;
 800cf0c:	68fb      	ldr	r3, [r7, #12]
 800cf0e:	4a24      	ldr	r2, [pc, #144]	; (800cfa0 <UART_Start_Receive_IT+0x23c>)
 800cf10:	675a      	str	r2, [r3, #116]	; 0x74
 800cf12:	e002      	b.n	800cf1a <UART_Start_Receive_IT+0x1b6>
    }
    else
    {
      huart->RxISR = UART_RxISR_8BIT;
 800cf14:	68fb      	ldr	r3, [r7, #12]
 800cf16:	4a23      	ldr	r2, [pc, #140]	; (800cfa4 <UART_Start_Receive_IT+0x240>)
 800cf18:	675a      	str	r2, [r3, #116]	; 0x74
    }

    /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
    if (huart->Init.Parity != UART_PARITY_NONE)
 800cf1a:	68fb      	ldr	r3, [r7, #12]
 800cf1c:	691b      	ldr	r3, [r3, #16]
 800cf1e:	2b00      	cmp	r3, #0
 800cf20:	d019      	beq.n	800cf56 <UART_Start_Receive_IT+0x1f2>
    {
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 800cf22:	68fb      	ldr	r3, [r7, #12]
 800cf24:	681b      	ldr	r3, [r3, #0]
 800cf26:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800cf28:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cf2a:	e853 3f00 	ldrex	r3, [r3]
 800cf2e:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800cf30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cf32:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 800cf36:	677b      	str	r3, [r7, #116]	; 0x74
 800cf38:	68fb      	ldr	r3, [r7, #12]
 800cf3a:	681b      	ldr	r3, [r3, #0]
 800cf3c:	461a      	mov	r2, r3
 800cf3e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800cf40:	637b      	str	r3, [r7, #52]	; 0x34
 800cf42:	633a      	str	r2, [r7, #48]	; 0x30
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800cf44:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800cf46:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800cf48:	e841 2300 	strex	r3, r2, [r1]
 800cf4c:	62fb      	str	r3, [r7, #44]	; 0x2c
   return(result);
 800cf4e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cf50:	2b00      	cmp	r3, #0
 800cf52:	d1e6      	bne.n	800cf22 <UART_Start_Receive_IT+0x1be>
 800cf54:	e018      	b.n	800cf88 <UART_Start_Receive_IT+0x224>
    }
    else
    {
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 800cf56:	68fb      	ldr	r3, [r7, #12]
 800cf58:	681b      	ldr	r3, [r3, #0]
 800cf5a:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800cf5c:	697b      	ldr	r3, [r7, #20]
 800cf5e:	e853 3f00 	ldrex	r3, [r3]
 800cf62:	613b      	str	r3, [r7, #16]
   return(result);
 800cf64:	693b      	ldr	r3, [r7, #16]
 800cf66:	f043 0320 	orr.w	r3, r3, #32
 800cf6a:	67bb      	str	r3, [r7, #120]	; 0x78
 800cf6c:	68fb      	ldr	r3, [r7, #12]
 800cf6e:	681b      	ldr	r3, [r3, #0]
 800cf70:	461a      	mov	r2, r3
 800cf72:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800cf74:	623b      	str	r3, [r7, #32]
 800cf76:	61fa      	str	r2, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800cf78:	69f9      	ldr	r1, [r7, #28]
 800cf7a:	6a3a      	ldr	r2, [r7, #32]
 800cf7c:	e841 2300 	strex	r3, r2, [r1]
 800cf80:	61bb      	str	r3, [r7, #24]
   return(result);
 800cf82:	69bb      	ldr	r3, [r7, #24]
 800cf84:	2b00      	cmp	r3, #0
 800cf86:	d1e6      	bne.n	800cf56 <UART_Start_Receive_IT+0x1f2>
  else
  {
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
  }
#endif /* USART_CR1_FIFOEN */
  return HAL_OK;
 800cf88:	2300      	movs	r3, #0
}
 800cf8a:	4618      	mov	r0, r3
 800cf8c:	378c      	adds	r7, #140	; 0x8c
 800cf8e:	46bd      	mov	sp, r7
 800cf90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf94:	4770      	bx	lr
 800cf96:	bf00      	nop
 800cf98:	0800db1d 	.word	0x0800db1d
 800cf9c:	0800d7b9 	.word	0x0800d7b9
 800cfa0:	0800d5fd 	.word	0x0800d5fd
 800cfa4:	0800d441 	.word	0x0800d441

0800cfa8 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 800cfa8:	b480      	push	{r7}
 800cfaa:	b095      	sub	sp, #84	; 0x54
 800cfac:	af00      	add	r7, sp, #0
 800cfae:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
#if defined(USART_CR1_FIFOEN)
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800cfb0:	687b      	ldr	r3, [r7, #4]
 800cfb2:	681b      	ldr	r3, [r3, #0]
 800cfb4:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800cfb6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cfb8:	e853 3f00 	ldrex	r3, [r3]
 800cfbc:	633b      	str	r3, [r7, #48]	; 0x30
   return(result);
 800cfbe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800cfc0:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800cfc4:	64fb      	str	r3, [r7, #76]	; 0x4c
 800cfc6:	687b      	ldr	r3, [r7, #4]
 800cfc8:	681b      	ldr	r3, [r3, #0]
 800cfca:	461a      	mov	r2, r3
 800cfcc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800cfce:	643b      	str	r3, [r7, #64]	; 0x40
 800cfd0:	63fa      	str	r2, [r7, #60]	; 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800cfd2:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800cfd4:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800cfd6:	e841 2300 	strex	r3, r2, [r1]
 800cfda:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 800cfdc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cfde:	2b00      	cmp	r3, #0
 800cfe0:	d1e6      	bne.n	800cfb0 <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800cfe2:	687b      	ldr	r3, [r7, #4]
 800cfe4:	681b      	ldr	r3, [r3, #0]
 800cfe6:	3308      	adds	r3, #8
 800cfe8:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800cfea:	6a3b      	ldr	r3, [r7, #32]
 800cfec:	e853 3f00 	ldrex	r3, [r3]
 800cff0:	61fb      	str	r3, [r7, #28]
   return(result);
 800cff2:	69fb      	ldr	r3, [r7, #28]
 800cff4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800cff8:	f023 0301 	bic.w	r3, r3, #1
 800cffc:	64bb      	str	r3, [r7, #72]	; 0x48
 800cffe:	687b      	ldr	r3, [r7, #4]
 800d000:	681b      	ldr	r3, [r3, #0]
 800d002:	3308      	adds	r3, #8
 800d004:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800d006:	62fa      	str	r2, [r7, #44]	; 0x2c
 800d008:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d00a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800d00c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800d00e:	e841 2300 	strex	r3, r2, [r1]
 800d012:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800d014:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d016:	2b00      	cmp	r3, #0
 800d018:	d1e3      	bne.n	800cfe2 <UART_EndRxTransfer+0x3a>
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
#endif /* USART_CR1_FIFOEN */

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800d01a:	687b      	ldr	r3, [r7, #4]
 800d01c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d01e:	2b01      	cmp	r3, #1
 800d020:	d118      	bne.n	800d054 <UART_EndRxTransfer+0xac>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800d022:	687b      	ldr	r3, [r7, #4]
 800d024:	681b      	ldr	r3, [r3, #0]
 800d026:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d028:	68fb      	ldr	r3, [r7, #12]
 800d02a:	e853 3f00 	ldrex	r3, [r3]
 800d02e:	60bb      	str	r3, [r7, #8]
   return(result);
 800d030:	68bb      	ldr	r3, [r7, #8]
 800d032:	f023 0310 	bic.w	r3, r3, #16
 800d036:	647b      	str	r3, [r7, #68]	; 0x44
 800d038:	687b      	ldr	r3, [r7, #4]
 800d03a:	681b      	ldr	r3, [r3, #0]
 800d03c:	461a      	mov	r2, r3
 800d03e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800d040:	61bb      	str	r3, [r7, #24]
 800d042:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d044:	6979      	ldr	r1, [r7, #20]
 800d046:	69ba      	ldr	r2, [r7, #24]
 800d048:	e841 2300 	strex	r3, r2, [r1]
 800d04c:	613b      	str	r3, [r7, #16]
   return(result);
 800d04e:	693b      	ldr	r3, [r7, #16]
 800d050:	2b00      	cmp	r3, #0
 800d052:	d1e6      	bne.n	800d022 <UART_EndRxTransfer+0x7a>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800d054:	687b      	ldr	r3, [r7, #4]
 800d056:	2220      	movs	r2, #32
 800d058:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800d05c:	687b      	ldr	r3, [r7, #4]
 800d05e:	2200      	movs	r2, #0
 800d060:	66da      	str	r2, [r3, #108]	; 0x6c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 800d062:	687b      	ldr	r3, [r7, #4]
 800d064:	2200      	movs	r2, #0
 800d066:	675a      	str	r2, [r3, #116]	; 0x74
}
 800d068:	bf00      	nop
 800d06a:	3754      	adds	r7, #84	; 0x54
 800d06c:	46bd      	mov	sp, r7
 800d06e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d072:	4770      	bx	lr

0800d074 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800d074:	b580      	push	{r7, lr}
 800d076:	b084      	sub	sp, #16
 800d078:	af00      	add	r7, sp, #0
 800d07a:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 800d07c:	687b      	ldr	r3, [r7, #4]
 800d07e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d080:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 800d082:	68fb      	ldr	r3, [r7, #12]
 800d084:	2200      	movs	r2, #0
 800d086:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
  huart->TxXferCount = 0U;
 800d08a:	68fb      	ldr	r3, [r7, #12]
 800d08c:	2200      	movs	r2, #0
 800d08e:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 800d092:	68f8      	ldr	r0, [r7, #12]
 800d094:	f7ff f9a0 	bl	800c3d8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800d098:	bf00      	nop
 800d09a:	3710      	adds	r7, #16
 800d09c:	46bd      	mov	sp, r7
 800d09e:	bd80      	pop	{r7, pc}

0800d0a0 <UART_TxISR_8BIT>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
{
 800d0a0:	b480      	push	{r7}
 800d0a2:	b08f      	sub	sp, #60	; 0x3c
 800d0a4:	af00      	add	r7, sp, #0
 800d0a6:	6078      	str	r0, [r7, #4]
  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800d0a8:	687b      	ldr	r3, [r7, #4]
 800d0aa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800d0ae:	2b21      	cmp	r3, #33	; 0x21
 800d0b0:	d14d      	bne.n	800d14e <UART_TxISR_8BIT+0xae>
  {
    if (huart->TxXferCount == 0U)
 800d0b2:	687b      	ldr	r3, [r7, #4]
 800d0b4:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800d0b8:	b29b      	uxth	r3, r3
 800d0ba:	2b00      	cmp	r3, #0
 800d0bc:	d132      	bne.n	800d124 <UART_TxISR_8BIT+0x84>
    {
      /* Disable the UART Transmit Data Register Empty Interrupt */
#if defined(USART_CR1_FIFOEN)
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 800d0be:	687b      	ldr	r3, [r7, #4]
 800d0c0:	681b      	ldr	r3, [r3, #0]
 800d0c2:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d0c4:	6a3b      	ldr	r3, [r7, #32]
 800d0c6:	e853 3f00 	ldrex	r3, [r3]
 800d0ca:	61fb      	str	r3, [r7, #28]
   return(result);
 800d0cc:	69fb      	ldr	r3, [r7, #28]
 800d0ce:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d0d2:	637b      	str	r3, [r7, #52]	; 0x34
 800d0d4:	687b      	ldr	r3, [r7, #4]
 800d0d6:	681b      	ldr	r3, [r3, #0]
 800d0d8:	461a      	mov	r2, r3
 800d0da:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d0dc:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d0de:	62ba      	str	r2, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d0e0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800d0e2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800d0e4:	e841 2300 	strex	r3, r2, [r1]
 800d0e8:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800d0ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d0ec:	2b00      	cmp	r3, #0
 800d0ee:	d1e6      	bne.n	800d0be <UART_TxISR_8BIT+0x1e>
#else
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
#endif /* USART_CR1_FIFOEN */

      /* Enable the UART Transmit Complete Interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800d0f0:	687b      	ldr	r3, [r7, #4]
 800d0f2:	681b      	ldr	r3, [r3, #0]
 800d0f4:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d0f6:	68fb      	ldr	r3, [r7, #12]
 800d0f8:	e853 3f00 	ldrex	r3, [r3]
 800d0fc:	60bb      	str	r3, [r7, #8]
   return(result);
 800d0fe:	68bb      	ldr	r3, [r7, #8]
 800d100:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d104:	633b      	str	r3, [r7, #48]	; 0x30
 800d106:	687b      	ldr	r3, [r7, #4]
 800d108:	681b      	ldr	r3, [r3, #0]
 800d10a:	461a      	mov	r2, r3
 800d10c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d10e:	61bb      	str	r3, [r7, #24]
 800d110:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d112:	6979      	ldr	r1, [r7, #20]
 800d114:	69ba      	ldr	r2, [r7, #24]
 800d116:	e841 2300 	strex	r3, r2, [r1]
 800d11a:	613b      	str	r3, [r7, #16]
   return(result);
 800d11c:	693b      	ldr	r3, [r7, #16]
 800d11e:	2b00      	cmp	r3, #0
 800d120:	d1e6      	bne.n	800d0f0 <UART_TxISR_8BIT+0x50>
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
      huart->pTxBuffPtr++;
      huart->TxXferCount--;
    }
  }
}
 800d122:	e014      	b.n	800d14e <UART_TxISR_8BIT+0xae>
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 800d124:	687b      	ldr	r3, [r7, #4]
 800d126:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d128:	781a      	ldrb	r2, [r3, #0]
 800d12a:	687b      	ldr	r3, [r7, #4]
 800d12c:	681b      	ldr	r3, [r3, #0]
 800d12e:	b292      	uxth	r2, r2
 800d130:	851a      	strh	r2, [r3, #40]	; 0x28
      huart->pTxBuffPtr++;
 800d132:	687b      	ldr	r3, [r7, #4]
 800d134:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d136:	1c5a      	adds	r2, r3, #1
 800d138:	687b      	ldr	r3, [r7, #4]
 800d13a:	651a      	str	r2, [r3, #80]	; 0x50
      huart->TxXferCount--;
 800d13c:	687b      	ldr	r3, [r7, #4]
 800d13e:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800d142:	b29b      	uxth	r3, r3
 800d144:	3b01      	subs	r3, #1
 800d146:	b29a      	uxth	r2, r3
 800d148:	687b      	ldr	r3, [r7, #4]
 800d14a:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
}
 800d14e:	bf00      	nop
 800d150:	373c      	adds	r7, #60	; 0x3c
 800d152:	46bd      	mov	sp, r7
 800d154:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d158:	4770      	bx	lr

0800d15a <UART_TxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
{
 800d15a:	b480      	push	{r7}
 800d15c:	b091      	sub	sp, #68	; 0x44
 800d15e:	af00      	add	r7, sp, #0
 800d160:	6078      	str	r0, [r7, #4]
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800d162:	687b      	ldr	r3, [r7, #4]
 800d164:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800d168:	2b21      	cmp	r3, #33	; 0x21
 800d16a:	d151      	bne.n	800d210 <UART_TxISR_16BIT+0xb6>
  {
    if (huart->TxXferCount == 0U)
 800d16c:	687b      	ldr	r3, [r7, #4]
 800d16e:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800d172:	b29b      	uxth	r3, r3
 800d174:	2b00      	cmp	r3, #0
 800d176:	d132      	bne.n	800d1de <UART_TxISR_16BIT+0x84>
    {
      /* Disable the UART Transmit Data Register Empty Interrupt */
#if defined(USART_CR1_FIFOEN)
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 800d178:	687b      	ldr	r3, [r7, #4]
 800d17a:	681b      	ldr	r3, [r3, #0]
 800d17c:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d17e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d180:	e853 3f00 	ldrex	r3, [r3]
 800d184:	623b      	str	r3, [r7, #32]
   return(result);
 800d186:	6a3b      	ldr	r3, [r7, #32]
 800d188:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d18c:	63bb      	str	r3, [r7, #56]	; 0x38
 800d18e:	687b      	ldr	r3, [r7, #4]
 800d190:	681b      	ldr	r3, [r3, #0]
 800d192:	461a      	mov	r2, r3
 800d194:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d196:	633b      	str	r3, [r7, #48]	; 0x30
 800d198:	62fa      	str	r2, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d19a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d19c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d19e:	e841 2300 	strex	r3, r2, [r1]
 800d1a2:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 800d1a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d1a6:	2b00      	cmp	r3, #0
 800d1a8:	d1e6      	bne.n	800d178 <UART_TxISR_16BIT+0x1e>
#else
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
#endif /* USART_CR1_FIFOEN */

      /* Enable the UART Transmit Complete Interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800d1aa:	687b      	ldr	r3, [r7, #4]
 800d1ac:	681b      	ldr	r3, [r3, #0]
 800d1ae:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d1b0:	693b      	ldr	r3, [r7, #16]
 800d1b2:	e853 3f00 	ldrex	r3, [r3]
 800d1b6:	60fb      	str	r3, [r7, #12]
   return(result);
 800d1b8:	68fb      	ldr	r3, [r7, #12]
 800d1ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d1be:	637b      	str	r3, [r7, #52]	; 0x34
 800d1c0:	687b      	ldr	r3, [r7, #4]
 800d1c2:	681b      	ldr	r3, [r3, #0]
 800d1c4:	461a      	mov	r2, r3
 800d1c6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d1c8:	61fb      	str	r3, [r7, #28]
 800d1ca:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d1cc:	69b9      	ldr	r1, [r7, #24]
 800d1ce:	69fa      	ldr	r2, [r7, #28]
 800d1d0:	e841 2300 	strex	r3, r2, [r1]
 800d1d4:	617b      	str	r3, [r7, #20]
   return(result);
 800d1d6:	697b      	ldr	r3, [r7, #20]
 800d1d8:	2b00      	cmp	r3, #0
 800d1da:	d1e6      	bne.n	800d1aa <UART_TxISR_16BIT+0x50>
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
      huart->pTxBuffPtr += 2U;
      huart->TxXferCount--;
    }
  }
}
 800d1dc:	e018      	b.n	800d210 <UART_TxISR_16BIT+0xb6>
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 800d1de:	687b      	ldr	r3, [r7, #4]
 800d1e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d1e2:	63fb      	str	r3, [r7, #60]	; 0x3c
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 800d1e4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d1e6:	881a      	ldrh	r2, [r3, #0]
 800d1e8:	687b      	ldr	r3, [r7, #4]
 800d1ea:	681b      	ldr	r3, [r3, #0]
 800d1ec:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800d1f0:	b292      	uxth	r2, r2
 800d1f2:	851a      	strh	r2, [r3, #40]	; 0x28
      huart->pTxBuffPtr += 2U;
 800d1f4:	687b      	ldr	r3, [r7, #4]
 800d1f6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d1f8:	1c9a      	adds	r2, r3, #2
 800d1fa:	687b      	ldr	r3, [r7, #4]
 800d1fc:	651a      	str	r2, [r3, #80]	; 0x50
      huart->TxXferCount--;
 800d1fe:	687b      	ldr	r3, [r7, #4]
 800d200:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800d204:	b29b      	uxth	r3, r3
 800d206:	3b01      	subs	r3, #1
 800d208:	b29a      	uxth	r2, r3
 800d20a:	687b      	ldr	r3, [r7, #4]
 800d20c:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
}
 800d210:	bf00      	nop
 800d212:	3744      	adds	r7, #68	; 0x44
 800d214:	46bd      	mov	sp, r7
 800d216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d21a:	4770      	bx	lr

0800d21c <UART_TxISR_8BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 800d21c:	b480      	push	{r7}
 800d21e:	b091      	sub	sp, #68	; 0x44
 800d220:	af00      	add	r7, sp, #0
 800d222:	6078      	str	r0, [r7, #4]
  uint16_t  nb_tx_data;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800d224:	687b      	ldr	r3, [r7, #4]
 800d226:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800d22a:	2b21      	cmp	r3, #33	; 0x21
 800d22c:	d161      	bne.n	800d2f2 <UART_TxISR_8BIT_FIFOEN+0xd6>
  {
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 800d22e:	687b      	ldr	r3, [r7, #4]
 800d230:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800d234:	87fb      	strh	r3, [r7, #62]	; 0x3e
 800d236:	e058      	b.n	800d2ea <UART_TxISR_8BIT_FIFOEN+0xce>
    {
      if (huart->TxXferCount == 0U)
 800d238:	687b      	ldr	r3, [r7, #4]
 800d23a:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800d23e:	b29b      	uxth	r3, r3
 800d240:	2b00      	cmp	r3, #0
 800d242:	d133      	bne.n	800d2ac <UART_TxISR_8BIT_FIFOEN+0x90>
      {
        /* Disable the TX FIFO threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 800d244:	687b      	ldr	r3, [r7, #4]
 800d246:	681b      	ldr	r3, [r3, #0]
 800d248:	3308      	adds	r3, #8
 800d24a:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d24c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d24e:	e853 3f00 	ldrex	r3, [r3]
 800d252:	623b      	str	r3, [r7, #32]
   return(result);
 800d254:	6a3b      	ldr	r3, [r7, #32]
 800d256:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800d25a:	63bb      	str	r3, [r7, #56]	; 0x38
 800d25c:	687b      	ldr	r3, [r7, #4]
 800d25e:	681b      	ldr	r3, [r3, #0]
 800d260:	3308      	adds	r3, #8
 800d262:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800d264:	633a      	str	r2, [r7, #48]	; 0x30
 800d266:	62fb      	str	r3, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d268:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d26a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d26c:	e841 2300 	strex	r3, r2, [r1]
 800d270:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 800d272:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d274:	2b00      	cmp	r3, #0
 800d276:	d1e5      	bne.n	800d244 <UART_TxISR_8BIT_FIFOEN+0x28>

        /* Enable the UART Transmit Complete Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800d278:	687b      	ldr	r3, [r7, #4]
 800d27a:	681b      	ldr	r3, [r3, #0]
 800d27c:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d27e:	693b      	ldr	r3, [r7, #16]
 800d280:	e853 3f00 	ldrex	r3, [r3]
 800d284:	60fb      	str	r3, [r7, #12]
   return(result);
 800d286:	68fb      	ldr	r3, [r7, #12]
 800d288:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d28c:	637b      	str	r3, [r7, #52]	; 0x34
 800d28e:	687b      	ldr	r3, [r7, #4]
 800d290:	681b      	ldr	r3, [r3, #0]
 800d292:	461a      	mov	r2, r3
 800d294:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d296:	61fb      	str	r3, [r7, #28]
 800d298:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d29a:	69b9      	ldr	r1, [r7, #24]
 800d29c:	69fa      	ldr	r2, [r7, #28]
 800d29e:	e841 2300 	strex	r3, r2, [r1]
 800d2a2:	617b      	str	r3, [r7, #20]
   return(result);
 800d2a4:	697b      	ldr	r3, [r7, #20]
 800d2a6:	2b00      	cmp	r3, #0
 800d2a8:	d1e6      	bne.n	800d278 <UART_TxISR_8BIT_FIFOEN+0x5c>

        break; /* force exit loop */
 800d2aa:	e022      	b.n	800d2f2 <UART_TxISR_8BIT_FIFOEN+0xd6>
      }
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 800d2ac:	687b      	ldr	r3, [r7, #4]
 800d2ae:	681b      	ldr	r3, [r3, #0]
 800d2b0:	69db      	ldr	r3, [r3, #28]
 800d2b2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800d2b6:	2b00      	cmp	r3, #0
 800d2b8:	d014      	beq.n	800d2e4 <UART_TxISR_8BIT_FIFOEN+0xc8>
      {
        huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 800d2ba:	687b      	ldr	r3, [r7, #4]
 800d2bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d2be:	781a      	ldrb	r2, [r3, #0]
 800d2c0:	687b      	ldr	r3, [r7, #4]
 800d2c2:	681b      	ldr	r3, [r3, #0]
 800d2c4:	b292      	uxth	r2, r2
 800d2c6:	851a      	strh	r2, [r3, #40]	; 0x28
        huart->pTxBuffPtr++;
 800d2c8:	687b      	ldr	r3, [r7, #4]
 800d2ca:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d2cc:	1c5a      	adds	r2, r3, #1
 800d2ce:	687b      	ldr	r3, [r7, #4]
 800d2d0:	651a      	str	r2, [r3, #80]	; 0x50
        huart->TxXferCount--;
 800d2d2:	687b      	ldr	r3, [r7, #4]
 800d2d4:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800d2d8:	b29b      	uxth	r3, r3
 800d2da:	3b01      	subs	r3, #1
 800d2dc:	b29a      	uxth	r2, r3
 800d2de:	687b      	ldr	r3, [r7, #4]
 800d2e0:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 800d2e4:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 800d2e6:	3b01      	subs	r3, #1
 800d2e8:	87fb      	strh	r3, [r7, #62]	; 0x3e
 800d2ea:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 800d2ec:	2b00      	cmp	r3, #0
 800d2ee:	d1a3      	bne.n	800d238 <UART_TxISR_8BIT_FIFOEN+0x1c>
      {
        /* Nothing to do */
      }
    }
  }
}
 800d2f0:	e7ff      	b.n	800d2f2 <UART_TxISR_8BIT_FIFOEN+0xd6>
 800d2f2:	bf00      	nop
 800d2f4:	3744      	adds	r7, #68	; 0x44
 800d2f6:	46bd      	mov	sp, r7
 800d2f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2fc:	4770      	bx	lr

0800d2fe <UART_TxISR_16BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Transmit_IT().
  * @param huart UART handle.
  * @retval None
  */
static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 800d2fe:	b480      	push	{r7}
 800d300:	b091      	sub	sp, #68	; 0x44
 800d302:	af00      	add	r7, sp, #0
 800d304:	6078      	str	r0, [r7, #4]
  const uint16_t *tmp;
  uint16_t  nb_tx_data;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800d306:	687b      	ldr	r3, [r7, #4]
 800d308:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800d30c:	2b21      	cmp	r3, #33	; 0x21
 800d30e:	d165      	bne.n	800d3dc <UART_TxISR_16BIT_FIFOEN+0xde>
  {
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 800d310:	687b      	ldr	r3, [r7, #4]
 800d312:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800d316:	87fb      	strh	r3, [r7, #62]	; 0x3e
 800d318:	e05c      	b.n	800d3d4 <UART_TxISR_16BIT_FIFOEN+0xd6>
    {
      if (huart->TxXferCount == 0U)
 800d31a:	687b      	ldr	r3, [r7, #4]
 800d31c:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800d320:	b29b      	uxth	r3, r3
 800d322:	2b00      	cmp	r3, #0
 800d324:	d133      	bne.n	800d38e <UART_TxISR_16BIT_FIFOEN+0x90>
      {
        /* Disable the TX FIFO threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 800d326:	687b      	ldr	r3, [r7, #4]
 800d328:	681b      	ldr	r3, [r3, #0]
 800d32a:	3308      	adds	r3, #8
 800d32c:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d32e:	6a3b      	ldr	r3, [r7, #32]
 800d330:	e853 3f00 	ldrex	r3, [r3]
 800d334:	61fb      	str	r3, [r7, #28]
   return(result);
 800d336:	69fb      	ldr	r3, [r7, #28]
 800d338:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800d33c:	637b      	str	r3, [r7, #52]	; 0x34
 800d33e:	687b      	ldr	r3, [r7, #4]
 800d340:	681b      	ldr	r3, [r3, #0]
 800d342:	3308      	adds	r3, #8
 800d344:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800d346:	62fa      	str	r2, [r7, #44]	; 0x2c
 800d348:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d34a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800d34c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800d34e:	e841 2300 	strex	r3, r2, [r1]
 800d352:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800d354:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d356:	2b00      	cmp	r3, #0
 800d358:	d1e5      	bne.n	800d326 <UART_TxISR_16BIT_FIFOEN+0x28>

        /* Enable the UART Transmit Complete Interrupt */
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800d35a:	687b      	ldr	r3, [r7, #4]
 800d35c:	681b      	ldr	r3, [r3, #0]
 800d35e:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d360:	68fb      	ldr	r3, [r7, #12]
 800d362:	e853 3f00 	ldrex	r3, [r3]
 800d366:	60bb      	str	r3, [r7, #8]
   return(result);
 800d368:	68bb      	ldr	r3, [r7, #8]
 800d36a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d36e:	633b      	str	r3, [r7, #48]	; 0x30
 800d370:	687b      	ldr	r3, [r7, #4]
 800d372:	681b      	ldr	r3, [r3, #0]
 800d374:	461a      	mov	r2, r3
 800d376:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d378:	61bb      	str	r3, [r7, #24]
 800d37a:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d37c:	6979      	ldr	r1, [r7, #20]
 800d37e:	69ba      	ldr	r2, [r7, #24]
 800d380:	e841 2300 	strex	r3, r2, [r1]
 800d384:	613b      	str	r3, [r7, #16]
   return(result);
 800d386:	693b      	ldr	r3, [r7, #16]
 800d388:	2b00      	cmp	r3, #0
 800d38a:	d1e6      	bne.n	800d35a <UART_TxISR_16BIT_FIFOEN+0x5c>

        break; /* force exit loop */
 800d38c:	e026      	b.n	800d3dc <UART_TxISR_16BIT_FIFOEN+0xde>
      }
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 800d38e:	687b      	ldr	r3, [r7, #4]
 800d390:	681b      	ldr	r3, [r3, #0]
 800d392:	69db      	ldr	r3, [r3, #28]
 800d394:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800d398:	2b00      	cmp	r3, #0
 800d39a:	d018      	beq.n	800d3ce <UART_TxISR_16BIT_FIFOEN+0xd0>
      {
        tmp = (const uint16_t *) huart->pTxBuffPtr;
 800d39c:	687b      	ldr	r3, [r7, #4]
 800d39e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d3a0:	63bb      	str	r3, [r7, #56]	; 0x38
        huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 800d3a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d3a4:	881a      	ldrh	r2, [r3, #0]
 800d3a6:	687b      	ldr	r3, [r7, #4]
 800d3a8:	681b      	ldr	r3, [r3, #0]
 800d3aa:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800d3ae:	b292      	uxth	r2, r2
 800d3b0:	851a      	strh	r2, [r3, #40]	; 0x28
        huart->pTxBuffPtr += 2U;
 800d3b2:	687b      	ldr	r3, [r7, #4]
 800d3b4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d3b6:	1c9a      	adds	r2, r3, #2
 800d3b8:	687b      	ldr	r3, [r7, #4]
 800d3ba:	651a      	str	r2, [r3, #80]	; 0x50
        huart->TxXferCount--;
 800d3bc:	687b      	ldr	r3, [r7, #4]
 800d3be:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800d3c2:	b29b      	uxth	r3, r3
 800d3c4:	3b01      	subs	r3, #1
 800d3c6:	b29a      	uxth	r2, r3
 800d3c8:	687b      	ldr	r3, [r7, #4]
 800d3ca:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 800d3ce:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 800d3d0:	3b01      	subs	r3, #1
 800d3d2:	87fb      	strh	r3, [r7, #62]	; 0x3e
 800d3d4:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 800d3d6:	2b00      	cmp	r3, #0
 800d3d8:	d19f      	bne.n	800d31a <UART_TxISR_16BIT_FIFOEN+0x1c>
      {
        /* Nothing to do */
      }
    }
  }
}
 800d3da:	e7ff      	b.n	800d3dc <UART_TxISR_16BIT_FIFOEN+0xde>
 800d3dc:	bf00      	nop
 800d3de:	3744      	adds	r7, #68	; 0x44
 800d3e0:	46bd      	mov	sp, r7
 800d3e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3e6:	4770      	bx	lr

0800d3e8 <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 800d3e8:	b580      	push	{r7, lr}
 800d3ea:	b088      	sub	sp, #32
 800d3ec:	af00      	add	r7, sp, #0
 800d3ee:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800d3f0:	687b      	ldr	r3, [r7, #4]
 800d3f2:	681b      	ldr	r3, [r3, #0]
 800d3f4:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d3f6:	68fb      	ldr	r3, [r7, #12]
 800d3f8:	e853 3f00 	ldrex	r3, [r3]
 800d3fc:	60bb      	str	r3, [r7, #8]
   return(result);
 800d3fe:	68bb      	ldr	r3, [r7, #8]
 800d400:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d404:	61fb      	str	r3, [r7, #28]
 800d406:	687b      	ldr	r3, [r7, #4]
 800d408:	681b      	ldr	r3, [r3, #0]
 800d40a:	461a      	mov	r2, r3
 800d40c:	69fb      	ldr	r3, [r7, #28]
 800d40e:	61bb      	str	r3, [r7, #24]
 800d410:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d412:	6979      	ldr	r1, [r7, #20]
 800d414:	69ba      	ldr	r2, [r7, #24]
 800d416:	e841 2300 	strex	r3, r2, [r1]
 800d41a:	613b      	str	r3, [r7, #16]
   return(result);
 800d41c:	693b      	ldr	r3, [r7, #16]
 800d41e:	2b00      	cmp	r3, #0
 800d420:	d1e6      	bne.n	800d3f0 <UART_EndTransmit_IT+0x8>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 800d422:	687b      	ldr	r3, [r7, #4]
 800d424:	2220      	movs	r2, #32
 800d426:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 800d42a:	687b      	ldr	r3, [r7, #4]
 800d42c:	2200      	movs	r2, #0
 800d42e:	679a      	str	r2, [r3, #120]	; 0x78
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 800d430:	6878      	ldr	r0, [r7, #4]
 800d432:	f7fe ffc7 	bl	800c3c4 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800d436:	bf00      	nop
 800d438:	3720      	adds	r7, #32
 800d43a:	46bd      	mov	sp, r7
 800d43c:	bd80      	pop	{r7, pc}
	...

0800d440 <UART_RxISR_8BIT>:
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
{
 800d440:	b580      	push	{r7, lr}
 800d442:	b09c      	sub	sp, #112	; 0x70
 800d444:	af00      	add	r7, sp, #0
 800d446:	6078      	str	r0, [r7, #4]
  uint16_t uhMask = huart->Mask;
 800d448:	687b      	ldr	r3, [r7, #4]
 800d44a:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800d44e:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800d452:	687b      	ldr	r3, [r7, #4]
 800d454:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d458:	2b22      	cmp	r3, #34	; 0x22
 800d45a:	f040 80be 	bne.w	800d5da <UART_RxISR_8BIT+0x19a>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800d45e:	687b      	ldr	r3, [r7, #4]
 800d460:	681b      	ldr	r3, [r3, #0]
 800d462:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800d464:	f8a7 306c 	strh.w	r3, [r7, #108]	; 0x6c
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 800d468:	f8b7 306c 	ldrh.w	r3, [r7, #108]	; 0x6c
 800d46c:	b2d9      	uxtb	r1, r3
 800d46e:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 800d472:	b2da      	uxtb	r2, r3
 800d474:	687b      	ldr	r3, [r7, #4]
 800d476:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800d478:	400a      	ands	r2, r1
 800d47a:	b2d2      	uxtb	r2, r2
 800d47c:	701a      	strb	r2, [r3, #0]
    huart->pRxBuffPtr++;
 800d47e:	687b      	ldr	r3, [r7, #4]
 800d480:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800d482:	1c5a      	adds	r2, r3, #1
 800d484:	687b      	ldr	r3, [r7, #4]
 800d486:	659a      	str	r2, [r3, #88]	; 0x58
    huart->RxXferCount--;
 800d488:	687b      	ldr	r3, [r7, #4]
 800d48a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800d48e:	b29b      	uxth	r3, r3
 800d490:	3b01      	subs	r3, #1
 800d492:	b29a      	uxth	r2, r3
 800d494:	687b      	ldr	r3, [r7, #4]
 800d496:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e

    if (huart->RxXferCount == 0U)
 800d49a:	687b      	ldr	r3, [r7, #4]
 800d49c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800d4a0:	b29b      	uxth	r3, r3
 800d4a2:	2b00      	cmp	r3, #0
 800d4a4:	f040 80a3 	bne.w	800d5ee <UART_RxISR_8BIT+0x1ae>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
#if defined(USART_CR1_FIFOEN)
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800d4a8:	687b      	ldr	r3, [r7, #4]
 800d4aa:	681b      	ldr	r3, [r3, #0]
 800d4ac:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d4ae:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d4b0:	e853 3f00 	ldrex	r3, [r3]
 800d4b4:	64bb      	str	r3, [r7, #72]	; 0x48
   return(result);
 800d4b6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800d4b8:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800d4bc:	66bb      	str	r3, [r7, #104]	; 0x68
 800d4be:	687b      	ldr	r3, [r7, #4]
 800d4c0:	681b      	ldr	r3, [r3, #0]
 800d4c2:	461a      	mov	r2, r3
 800d4c4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800d4c6:	65bb      	str	r3, [r7, #88]	; 0x58
 800d4c8:	657a      	str	r2, [r7, #84]	; 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d4ca:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800d4cc:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800d4ce:	e841 2300 	strex	r3, r2, [r1]
 800d4d2:	653b      	str	r3, [r7, #80]	; 0x50
   return(result);
 800d4d4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800d4d6:	2b00      	cmp	r3, #0
 800d4d8:	d1e6      	bne.n	800d4a8 <UART_RxISR_8BIT+0x68>
#else
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
#endif /* USART_CR1_FIFOEN */

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800d4da:	687b      	ldr	r3, [r7, #4]
 800d4dc:	681b      	ldr	r3, [r3, #0]
 800d4de:	3308      	adds	r3, #8
 800d4e0:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d4e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d4e4:	e853 3f00 	ldrex	r3, [r3]
 800d4e8:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 800d4ea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d4ec:	f023 0301 	bic.w	r3, r3, #1
 800d4f0:	667b      	str	r3, [r7, #100]	; 0x64
 800d4f2:	687b      	ldr	r3, [r7, #4]
 800d4f4:	681b      	ldr	r3, [r3, #0]
 800d4f6:	3308      	adds	r3, #8
 800d4f8:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800d4fa:	647a      	str	r2, [r7, #68]	; 0x44
 800d4fc:	643b      	str	r3, [r7, #64]	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d4fe:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800d500:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800d502:	e841 2300 	strex	r3, r2, [r1]
 800d506:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 800d508:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d50a:	2b00      	cmp	r3, #0
 800d50c:	d1e5      	bne.n	800d4da <UART_RxISR_8BIT+0x9a>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 800d50e:	687b      	ldr	r3, [r7, #4]
 800d510:	2220      	movs	r2, #32
 800d512:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 800d516:	687b      	ldr	r3, [r7, #4]
 800d518:	2200      	movs	r2, #0
 800d51a:	675a      	str	r2, [r3, #116]	; 0x74

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 800d51c:	687b      	ldr	r3, [r7, #4]
 800d51e:	2200      	movs	r2, #0
 800d520:	671a      	str	r2, [r3, #112]	; 0x70

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 800d522:	687b      	ldr	r3, [r7, #4]
 800d524:	681b      	ldr	r3, [r3, #0]
 800d526:	4a34      	ldr	r2, [pc, #208]	; (800d5f8 <UART_RxISR_8BIT+0x1b8>)
 800d528:	4293      	cmp	r3, r2
 800d52a:	d01f      	beq.n	800d56c <UART_RxISR_8BIT+0x12c>
      {
        /* Check that USART RTOEN bit is set */
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 800d52c:	687b      	ldr	r3, [r7, #4]
 800d52e:	681b      	ldr	r3, [r3, #0]
 800d530:	685b      	ldr	r3, [r3, #4]
 800d532:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800d536:	2b00      	cmp	r3, #0
 800d538:	d018      	beq.n	800d56c <UART_RxISR_8BIT+0x12c>
        {
          /* Enable the UART Receiver Timeout Interrupt */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 800d53a:	687b      	ldr	r3, [r7, #4]
 800d53c:	681b      	ldr	r3, [r3, #0]
 800d53e:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d540:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d542:	e853 3f00 	ldrex	r3, [r3]
 800d546:	623b      	str	r3, [r7, #32]
   return(result);
 800d548:	6a3b      	ldr	r3, [r7, #32]
 800d54a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800d54e:	663b      	str	r3, [r7, #96]	; 0x60
 800d550:	687b      	ldr	r3, [r7, #4]
 800d552:	681b      	ldr	r3, [r3, #0]
 800d554:	461a      	mov	r2, r3
 800d556:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800d558:	633b      	str	r3, [r7, #48]	; 0x30
 800d55a:	62fa      	str	r2, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d55c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d55e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d560:	e841 2300 	strex	r3, r2, [r1]
 800d564:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 800d566:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d568:	2b00      	cmp	r3, #0
 800d56a:	d1e6      	bne.n	800d53a <UART_RxISR_8BIT+0xfa>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800d56c:	687b      	ldr	r3, [r7, #4]
 800d56e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d570:	2b01      	cmp	r3, #1
 800d572:	d12e      	bne.n	800d5d2 <UART_RxISR_8BIT+0x192>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800d574:	687b      	ldr	r3, [r7, #4]
 800d576:	2200      	movs	r2, #0
 800d578:	66da      	str	r2, [r3, #108]	; 0x6c

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800d57a:	687b      	ldr	r3, [r7, #4]
 800d57c:	681b      	ldr	r3, [r3, #0]
 800d57e:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d580:	693b      	ldr	r3, [r7, #16]
 800d582:	e853 3f00 	ldrex	r3, [r3]
 800d586:	60fb      	str	r3, [r7, #12]
   return(result);
 800d588:	68fb      	ldr	r3, [r7, #12]
 800d58a:	f023 0310 	bic.w	r3, r3, #16
 800d58e:	65fb      	str	r3, [r7, #92]	; 0x5c
 800d590:	687b      	ldr	r3, [r7, #4]
 800d592:	681b      	ldr	r3, [r3, #0]
 800d594:	461a      	mov	r2, r3
 800d596:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800d598:	61fb      	str	r3, [r7, #28]
 800d59a:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d59c:	69b9      	ldr	r1, [r7, #24]
 800d59e:	69fa      	ldr	r2, [r7, #28]
 800d5a0:	e841 2300 	strex	r3, r2, [r1]
 800d5a4:	617b      	str	r3, [r7, #20]
   return(result);
 800d5a6:	697b      	ldr	r3, [r7, #20]
 800d5a8:	2b00      	cmp	r3, #0
 800d5aa:	d1e6      	bne.n	800d57a <UART_RxISR_8BIT+0x13a>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 800d5ac:	687b      	ldr	r3, [r7, #4]
 800d5ae:	681b      	ldr	r3, [r3, #0]
 800d5b0:	69db      	ldr	r3, [r3, #28]
 800d5b2:	f003 0310 	and.w	r3, r3, #16
 800d5b6:	2b10      	cmp	r3, #16
 800d5b8:	d103      	bne.n	800d5c2 <UART_RxISR_8BIT+0x182>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800d5ba:	687b      	ldr	r3, [r7, #4]
 800d5bc:	681b      	ldr	r3, [r3, #0]
 800d5be:	2210      	movs	r2, #16
 800d5c0:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 800d5c2:	687b      	ldr	r3, [r7, #4]
 800d5c4:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800d5c8:	4619      	mov	r1, r3
 800d5ca:	6878      	ldr	r0, [r7, #4]
 800d5cc:	f7fe ff0e 	bl	800c3ec <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 800d5d0:	e00d      	b.n	800d5ee <UART_RxISR_8BIT+0x1ae>
        HAL_UART_RxCpltCallback(huart);
 800d5d2:	6878      	ldr	r0, [r7, #4]
 800d5d4:	f7f6 fe26 	bl	8004224 <HAL_UART_RxCpltCallback>
}
 800d5d8:	e009      	b.n	800d5ee <UART_RxISR_8BIT+0x1ae>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 800d5da:	687b      	ldr	r3, [r7, #4]
 800d5dc:	681b      	ldr	r3, [r3, #0]
 800d5de:	8b1b      	ldrh	r3, [r3, #24]
 800d5e0:	b29a      	uxth	r2, r3
 800d5e2:	687b      	ldr	r3, [r7, #4]
 800d5e4:	681b      	ldr	r3, [r3, #0]
 800d5e6:	f042 0208 	orr.w	r2, r2, #8
 800d5ea:	b292      	uxth	r2, r2
 800d5ec:	831a      	strh	r2, [r3, #24]
}
 800d5ee:	bf00      	nop
 800d5f0:	3770      	adds	r7, #112	; 0x70
 800d5f2:	46bd      	mov	sp, r7
 800d5f4:	bd80      	pop	{r7, pc}
 800d5f6:	bf00      	nop
 800d5f8:	40008000 	.word	0x40008000

0800d5fc <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
 800d5fc:	b580      	push	{r7, lr}
 800d5fe:	b09c      	sub	sp, #112	; 0x70
 800d600:	af00      	add	r7, sp, #0
 800d602:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
 800d604:	687b      	ldr	r3, [r7, #4]
 800d606:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800d60a:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800d60e:	687b      	ldr	r3, [r7, #4]
 800d610:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d614:	2b22      	cmp	r3, #34	; 0x22
 800d616:	f040 80be 	bne.w	800d796 <UART_RxISR_16BIT+0x19a>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800d61a:	687b      	ldr	r3, [r7, #4]
 800d61c:	681b      	ldr	r3, [r3, #0]
 800d61e:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800d620:	f8a7 306c 	strh.w	r3, [r7, #108]	; 0x6c
    tmp = (uint16_t *) huart->pRxBuffPtr ;
 800d624:	687b      	ldr	r3, [r7, #4]
 800d626:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800d628:	66bb      	str	r3, [r7, #104]	; 0x68
    *tmp = (uint16_t)(uhdata & uhMask);
 800d62a:	f8b7 206c 	ldrh.w	r2, [r7, #108]	; 0x6c
 800d62e:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 800d632:	4013      	ands	r3, r2
 800d634:	b29a      	uxth	r2, r3
 800d636:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800d638:	801a      	strh	r2, [r3, #0]
    huart->pRxBuffPtr += 2U;
 800d63a:	687b      	ldr	r3, [r7, #4]
 800d63c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800d63e:	1c9a      	adds	r2, r3, #2
 800d640:	687b      	ldr	r3, [r7, #4]
 800d642:	659a      	str	r2, [r3, #88]	; 0x58
    huart->RxXferCount--;
 800d644:	687b      	ldr	r3, [r7, #4]
 800d646:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800d64a:	b29b      	uxth	r3, r3
 800d64c:	3b01      	subs	r3, #1
 800d64e:	b29a      	uxth	r2, r3
 800d650:	687b      	ldr	r3, [r7, #4]
 800d652:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e

    if (huart->RxXferCount == 0U)
 800d656:	687b      	ldr	r3, [r7, #4]
 800d658:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800d65c:	b29b      	uxth	r3, r3
 800d65e:	2b00      	cmp	r3, #0
 800d660:	f040 80a3 	bne.w	800d7aa <UART_RxISR_16BIT+0x1ae>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
#if defined(USART_CR1_FIFOEN)
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800d664:	687b      	ldr	r3, [r7, #4]
 800d666:	681b      	ldr	r3, [r3, #0]
 800d668:	64bb      	str	r3, [r7, #72]	; 0x48
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d66a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800d66c:	e853 3f00 	ldrex	r3, [r3]
 800d670:	647b      	str	r3, [r7, #68]	; 0x44
   return(result);
 800d672:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800d674:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800d678:	667b      	str	r3, [r7, #100]	; 0x64
 800d67a:	687b      	ldr	r3, [r7, #4]
 800d67c:	681b      	ldr	r3, [r3, #0]
 800d67e:	461a      	mov	r2, r3
 800d680:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800d682:	657b      	str	r3, [r7, #84]	; 0x54
 800d684:	653a      	str	r2, [r7, #80]	; 0x50
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d686:	6d39      	ldr	r1, [r7, #80]	; 0x50
 800d688:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800d68a:	e841 2300 	strex	r3, r2, [r1]
 800d68e:	64fb      	str	r3, [r7, #76]	; 0x4c
   return(result);
 800d690:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d692:	2b00      	cmp	r3, #0
 800d694:	d1e6      	bne.n	800d664 <UART_RxISR_16BIT+0x68>
#else
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
#endif /* USART_CR1_FIFOEN */

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800d696:	687b      	ldr	r3, [r7, #4]
 800d698:	681b      	ldr	r3, [r3, #0]
 800d69a:	3308      	adds	r3, #8
 800d69c:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d69e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d6a0:	e853 3f00 	ldrex	r3, [r3]
 800d6a4:	633b      	str	r3, [r7, #48]	; 0x30
   return(result);
 800d6a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d6a8:	f023 0301 	bic.w	r3, r3, #1
 800d6ac:	663b      	str	r3, [r7, #96]	; 0x60
 800d6ae:	687b      	ldr	r3, [r7, #4]
 800d6b0:	681b      	ldr	r3, [r3, #0]
 800d6b2:	3308      	adds	r3, #8
 800d6b4:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800d6b6:	643a      	str	r2, [r7, #64]	; 0x40
 800d6b8:	63fb      	str	r3, [r7, #60]	; 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d6ba:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800d6bc:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800d6be:	e841 2300 	strex	r3, r2, [r1]
 800d6c2:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 800d6c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d6c6:	2b00      	cmp	r3, #0
 800d6c8:	d1e5      	bne.n	800d696 <UART_RxISR_16BIT+0x9a>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 800d6ca:	687b      	ldr	r3, [r7, #4]
 800d6cc:	2220      	movs	r2, #32
 800d6ce:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 800d6d2:	687b      	ldr	r3, [r7, #4]
 800d6d4:	2200      	movs	r2, #0
 800d6d6:	675a      	str	r2, [r3, #116]	; 0x74

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 800d6d8:	687b      	ldr	r3, [r7, #4]
 800d6da:	2200      	movs	r2, #0
 800d6dc:	671a      	str	r2, [r3, #112]	; 0x70

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 800d6de:	687b      	ldr	r3, [r7, #4]
 800d6e0:	681b      	ldr	r3, [r3, #0]
 800d6e2:	4a34      	ldr	r2, [pc, #208]	; (800d7b4 <UART_RxISR_16BIT+0x1b8>)
 800d6e4:	4293      	cmp	r3, r2
 800d6e6:	d01f      	beq.n	800d728 <UART_RxISR_16BIT+0x12c>
      {
        /* Check that USART RTOEN bit is set */
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 800d6e8:	687b      	ldr	r3, [r7, #4]
 800d6ea:	681b      	ldr	r3, [r3, #0]
 800d6ec:	685b      	ldr	r3, [r3, #4]
 800d6ee:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800d6f2:	2b00      	cmp	r3, #0
 800d6f4:	d018      	beq.n	800d728 <UART_RxISR_16BIT+0x12c>
        {
          /* Enable the UART Receiver Timeout Interrupt */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 800d6f6:	687b      	ldr	r3, [r7, #4]
 800d6f8:	681b      	ldr	r3, [r3, #0]
 800d6fa:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d6fc:	6a3b      	ldr	r3, [r7, #32]
 800d6fe:	e853 3f00 	ldrex	r3, [r3]
 800d702:	61fb      	str	r3, [r7, #28]
   return(result);
 800d704:	69fb      	ldr	r3, [r7, #28]
 800d706:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800d70a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800d70c:	687b      	ldr	r3, [r7, #4]
 800d70e:	681b      	ldr	r3, [r3, #0]
 800d710:	461a      	mov	r2, r3
 800d712:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800d714:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d716:	62ba      	str	r2, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d718:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800d71a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800d71c:	e841 2300 	strex	r3, r2, [r1]
 800d720:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800d722:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d724:	2b00      	cmp	r3, #0
 800d726:	d1e6      	bne.n	800d6f6 <UART_RxISR_16BIT+0xfa>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800d728:	687b      	ldr	r3, [r7, #4]
 800d72a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d72c:	2b01      	cmp	r3, #1
 800d72e:	d12e      	bne.n	800d78e <UART_RxISR_16BIT+0x192>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800d730:	687b      	ldr	r3, [r7, #4]
 800d732:	2200      	movs	r2, #0
 800d734:	66da      	str	r2, [r3, #108]	; 0x6c

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800d736:	687b      	ldr	r3, [r7, #4]
 800d738:	681b      	ldr	r3, [r3, #0]
 800d73a:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d73c:	68fb      	ldr	r3, [r7, #12]
 800d73e:	e853 3f00 	ldrex	r3, [r3]
 800d742:	60bb      	str	r3, [r7, #8]
   return(result);
 800d744:	68bb      	ldr	r3, [r7, #8]
 800d746:	f023 0310 	bic.w	r3, r3, #16
 800d74a:	65bb      	str	r3, [r7, #88]	; 0x58
 800d74c:	687b      	ldr	r3, [r7, #4]
 800d74e:	681b      	ldr	r3, [r3, #0]
 800d750:	461a      	mov	r2, r3
 800d752:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800d754:	61bb      	str	r3, [r7, #24]
 800d756:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d758:	6979      	ldr	r1, [r7, #20]
 800d75a:	69ba      	ldr	r2, [r7, #24]
 800d75c:	e841 2300 	strex	r3, r2, [r1]
 800d760:	613b      	str	r3, [r7, #16]
   return(result);
 800d762:	693b      	ldr	r3, [r7, #16]
 800d764:	2b00      	cmp	r3, #0
 800d766:	d1e6      	bne.n	800d736 <UART_RxISR_16BIT+0x13a>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 800d768:	687b      	ldr	r3, [r7, #4]
 800d76a:	681b      	ldr	r3, [r3, #0]
 800d76c:	69db      	ldr	r3, [r3, #28]
 800d76e:	f003 0310 	and.w	r3, r3, #16
 800d772:	2b10      	cmp	r3, #16
 800d774:	d103      	bne.n	800d77e <UART_RxISR_16BIT+0x182>
        {
          /* Clear IDLE Flag */
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800d776:	687b      	ldr	r3, [r7, #4]
 800d778:	681b      	ldr	r3, [r3, #0]
 800d77a:	2210      	movs	r2, #16
 800d77c:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 800d77e:	687b      	ldr	r3, [r7, #4]
 800d780:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800d784:	4619      	mov	r1, r3
 800d786:	6878      	ldr	r0, [r7, #4]
 800d788:	f7fe fe30 	bl	800c3ec <HAL_UARTEx_RxEventCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 800d78c:	e00d      	b.n	800d7aa <UART_RxISR_16BIT+0x1ae>
        HAL_UART_RxCpltCallback(huart);
 800d78e:	6878      	ldr	r0, [r7, #4]
 800d790:	f7f6 fd48 	bl	8004224 <HAL_UART_RxCpltCallback>
}
 800d794:	e009      	b.n	800d7aa <UART_RxISR_16BIT+0x1ae>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 800d796:	687b      	ldr	r3, [r7, #4]
 800d798:	681b      	ldr	r3, [r3, #0]
 800d79a:	8b1b      	ldrh	r3, [r3, #24]
 800d79c:	b29a      	uxth	r2, r3
 800d79e:	687b      	ldr	r3, [r7, #4]
 800d7a0:	681b      	ldr	r3, [r3, #0]
 800d7a2:	f042 0208 	orr.w	r2, r2, #8
 800d7a6:	b292      	uxth	r2, r2
 800d7a8:	831a      	strh	r2, [r3, #24]
}
 800d7aa:	bf00      	nop
 800d7ac:	3770      	adds	r7, #112	; 0x70
 800d7ae:	46bd      	mov	sp, r7
 800d7b0:	bd80      	pop	{r7, pc}
 800d7b2:	bf00      	nop
 800d7b4:	40008000 	.word	0x40008000

0800d7b8 <UART_RxISR_8BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 800d7b8:	b580      	push	{r7, lr}
 800d7ba:	b0ac      	sub	sp, #176	; 0xb0
 800d7bc:	af00      	add	r7, sp, #0
 800d7be:	6078      	str	r0, [r7, #4]
  uint16_t  uhMask = huart->Mask;
 800d7c0:	687b      	ldr	r3, [r7, #4]
 800d7c2:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800d7c6:	f8a7 30aa 	strh.w	r3, [r7, #170]	; 0xaa
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 800d7ca:	687b      	ldr	r3, [r7, #4]
 800d7cc:	681b      	ldr	r3, [r3, #0]
 800d7ce:	69db      	ldr	r3, [r3, #28]
 800d7d0:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 800d7d4:	687b      	ldr	r3, [r7, #4]
 800d7d6:	681b      	ldr	r3, [r3, #0]
 800d7d8:	681b      	ldr	r3, [r3, #0]
 800d7da:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 800d7de:	687b      	ldr	r3, [r7, #4]
 800d7e0:	681b      	ldr	r3, [r3, #0]
 800d7e2:	689b      	ldr	r3, [r3, #8]
 800d7e4:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800d7e8:	687b      	ldr	r3, [r7, #4]
 800d7ea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d7ee:	2b22      	cmp	r3, #34	; 0x22
 800d7f0:	f040 8182 	bne.w	800daf8 <UART_RxISR_8BIT_FIFOEN+0x340>
  {
    nb_rx_data = huart->NbRxDataToProcess;
 800d7f4:	687b      	ldr	r3, [r7, #4]
 800d7f6:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800d7fa:	f8a7 309e 	strh.w	r3, [r7, #158]	; 0x9e
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 800d7fe:	e125      	b.n	800da4c <UART_RxISR_8BIT_FIFOEN+0x294>
    {
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800d800:	687b      	ldr	r3, [r7, #4]
 800d802:	681b      	ldr	r3, [r3, #0]
 800d804:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800d806:	f8a7 309c 	strh.w	r3, [r7, #156]	; 0x9c
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 800d80a:	f8b7 309c 	ldrh.w	r3, [r7, #156]	; 0x9c
 800d80e:	b2d9      	uxtb	r1, r3
 800d810:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	; 0xaa
 800d814:	b2da      	uxtb	r2, r3
 800d816:	687b      	ldr	r3, [r7, #4]
 800d818:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800d81a:	400a      	ands	r2, r1
 800d81c:	b2d2      	uxtb	r2, r2
 800d81e:	701a      	strb	r2, [r3, #0]
      huart->pRxBuffPtr++;
 800d820:	687b      	ldr	r3, [r7, #4]
 800d822:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800d824:	1c5a      	adds	r2, r3, #1
 800d826:	687b      	ldr	r3, [r7, #4]
 800d828:	659a      	str	r2, [r3, #88]	; 0x58
      huart->RxXferCount--;
 800d82a:	687b      	ldr	r3, [r7, #4]
 800d82c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800d830:	b29b      	uxth	r3, r3
 800d832:	3b01      	subs	r3, #1
 800d834:	b29a      	uxth	r2, r3
 800d836:	687b      	ldr	r3, [r7, #4]
 800d838:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
 800d83c:	687b      	ldr	r3, [r7, #4]
 800d83e:	681b      	ldr	r3, [r3, #0]
 800d840:	69db      	ldr	r3, [r3, #28]
 800d842:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac

      /* If some non blocking errors occurred */
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 800d846:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800d84a:	f003 0307 	and.w	r3, r3, #7
 800d84e:	2b00      	cmp	r3, #0
 800d850:	d053      	beq.n	800d8fa <UART_RxISR_8BIT_FIFOEN+0x142>
      {
        /* UART parity error interrupt occurred -------------------------------------*/
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 800d852:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800d856:	f003 0301 	and.w	r3, r3, #1
 800d85a:	2b00      	cmp	r3, #0
 800d85c:	d011      	beq.n	800d882 <UART_RxISR_8BIT_FIFOEN+0xca>
 800d85e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800d862:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d866:	2b00      	cmp	r3, #0
 800d868:	d00b      	beq.n	800d882 <UART_RxISR_8BIT_FIFOEN+0xca>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 800d86a:	687b      	ldr	r3, [r7, #4]
 800d86c:	681b      	ldr	r3, [r3, #0]
 800d86e:	2201      	movs	r2, #1
 800d870:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_PE;
 800d872:	687b      	ldr	r3, [r7, #4]
 800d874:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d878:	f043 0201 	orr.w	r2, r3, #1
 800d87c:	687b      	ldr	r3, [r7, #4]
 800d87e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* UART frame error interrupt occurred --------------------------------------*/
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800d882:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800d886:	f003 0302 	and.w	r3, r3, #2
 800d88a:	2b00      	cmp	r3, #0
 800d88c:	d011      	beq.n	800d8b2 <UART_RxISR_8BIT_FIFOEN+0xfa>
 800d88e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800d892:	f003 0301 	and.w	r3, r3, #1
 800d896:	2b00      	cmp	r3, #0
 800d898:	d00b      	beq.n	800d8b2 <UART_RxISR_8BIT_FIFOEN+0xfa>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800d89a:	687b      	ldr	r3, [r7, #4]
 800d89c:	681b      	ldr	r3, [r3, #0]
 800d89e:	2202      	movs	r2, #2
 800d8a0:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_FE;
 800d8a2:	687b      	ldr	r3, [r7, #4]
 800d8a4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d8a8:	f043 0204 	orr.w	r2, r3, #4
 800d8ac:	687b      	ldr	r3, [r7, #4]
 800d8ae:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* UART noise error interrupt occurred --------------------------------------*/
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800d8b2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800d8b6:	f003 0304 	and.w	r3, r3, #4
 800d8ba:	2b00      	cmp	r3, #0
 800d8bc:	d011      	beq.n	800d8e2 <UART_RxISR_8BIT_FIFOEN+0x12a>
 800d8be:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800d8c2:	f003 0301 	and.w	r3, r3, #1
 800d8c6:	2b00      	cmp	r3, #0
 800d8c8:	d00b      	beq.n	800d8e2 <UART_RxISR_8BIT_FIFOEN+0x12a>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 800d8ca:	687b      	ldr	r3, [r7, #4]
 800d8cc:	681b      	ldr	r3, [r3, #0]
 800d8ce:	2204      	movs	r2, #4
 800d8d0:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_NE;
 800d8d2:	687b      	ldr	r3, [r7, #4]
 800d8d4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d8d8:	f043 0202 	orr.w	r2, r3, #2
 800d8dc:	687b      	ldr	r3, [r7, #4]
 800d8de:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* Call UART Error Call back function if need be ----------------------------*/
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 800d8e2:	687b      	ldr	r3, [r7, #4]
 800d8e4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d8e8:	2b00      	cmp	r3, #0
 800d8ea:	d006      	beq.n	800d8fa <UART_RxISR_8BIT_FIFOEN+0x142>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 800d8ec:	6878      	ldr	r0, [r7, #4]
 800d8ee:	f7fe fd73 	bl	800c3d8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 800d8f2:	687b      	ldr	r3, [r7, #4]
 800d8f4:	2200      	movs	r2, #0
 800d8f6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }
      }

      if (huart->RxXferCount == 0U)
 800d8fa:	687b      	ldr	r3, [r7, #4]
 800d8fc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800d900:	b29b      	uxth	r3, r3
 800d902:	2b00      	cmp	r3, #0
 800d904:	f040 80a2 	bne.w	800da4c <UART_RxISR_8BIT_FIFOEN+0x294>
      {
        /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800d908:	687b      	ldr	r3, [r7, #4]
 800d90a:	681b      	ldr	r3, [r3, #0]
 800d90c:	673b      	str	r3, [r7, #112]	; 0x70
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d90e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800d910:	e853 3f00 	ldrex	r3, [r3]
 800d914:	66fb      	str	r3, [r7, #108]	; 0x6c
   return(result);
 800d916:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d918:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800d91c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800d920:	687b      	ldr	r3, [r7, #4]
 800d922:	681b      	ldr	r3, [r3, #0]
 800d924:	461a      	mov	r2, r3
 800d926:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800d92a:	67fb      	str	r3, [r7, #124]	; 0x7c
 800d92c:	67ba      	str	r2, [r7, #120]	; 0x78
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d92e:	6fb9      	ldr	r1, [r7, #120]	; 0x78
 800d930:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800d932:	e841 2300 	strex	r3, r2, [r1]
 800d936:	677b      	str	r3, [r7, #116]	; 0x74
   return(result);
 800d938:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800d93a:	2b00      	cmp	r3, #0
 800d93c:	d1e4      	bne.n	800d908 <UART_RxISR_8BIT_FIFOEN+0x150>

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
           and RX FIFO Threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800d93e:	687b      	ldr	r3, [r7, #4]
 800d940:	681b      	ldr	r3, [r3, #0]
 800d942:	3308      	adds	r3, #8
 800d944:	65fb      	str	r3, [r7, #92]	; 0x5c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d946:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800d948:	e853 3f00 	ldrex	r3, [r3]
 800d94c:	65bb      	str	r3, [r7, #88]	; 0x58
   return(result);
 800d94e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800d950:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800d954:	f023 0301 	bic.w	r3, r3, #1
 800d958:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800d95c:	687b      	ldr	r3, [r7, #4]
 800d95e:	681b      	ldr	r3, [r3, #0]
 800d960:	3308      	adds	r3, #8
 800d962:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800d966:	66ba      	str	r2, [r7, #104]	; 0x68
 800d968:	667b      	str	r3, [r7, #100]	; 0x64
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d96a:	6e79      	ldr	r1, [r7, #100]	; 0x64
 800d96c:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800d96e:	e841 2300 	strex	r3, r2, [r1]
 800d972:	663b      	str	r3, [r7, #96]	; 0x60
   return(result);
 800d974:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800d976:	2b00      	cmp	r3, #0
 800d978:	d1e1      	bne.n	800d93e <UART_RxISR_8BIT_FIFOEN+0x186>

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 800d97a:	687b      	ldr	r3, [r7, #4]
 800d97c:	2220      	movs	r2, #32
 800d97e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 800d982:	687b      	ldr	r3, [r7, #4]
 800d984:	2200      	movs	r2, #0
 800d986:	675a      	str	r2, [r3, #116]	; 0x74

        /* Initialize type of RxEvent to Transfer Complete */
        huart->RxEventType = HAL_UART_RXEVENT_TC;
 800d988:	687b      	ldr	r3, [r7, #4]
 800d98a:	2200      	movs	r2, #0
 800d98c:	671a      	str	r2, [r3, #112]	; 0x70

        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 800d98e:	687b      	ldr	r3, [r7, #4]
 800d990:	681b      	ldr	r3, [r3, #0]
 800d992:	4a60      	ldr	r2, [pc, #384]	; (800db14 <UART_RxISR_8BIT_FIFOEN+0x35c>)
 800d994:	4293      	cmp	r3, r2
 800d996:	d021      	beq.n	800d9dc <UART_RxISR_8BIT_FIFOEN+0x224>
        {
          /* Check that USART RTOEN bit is set */
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 800d998:	687b      	ldr	r3, [r7, #4]
 800d99a:	681b      	ldr	r3, [r3, #0]
 800d99c:	685b      	ldr	r3, [r3, #4]
 800d99e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800d9a2:	2b00      	cmp	r3, #0
 800d9a4:	d01a      	beq.n	800d9dc <UART_RxISR_8BIT_FIFOEN+0x224>
          {
            /* Enable the UART Receiver Timeout Interrupt */
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 800d9a6:	687b      	ldr	r3, [r7, #4]
 800d9a8:	681b      	ldr	r3, [r3, #0]
 800d9aa:	64bb      	str	r3, [r7, #72]	; 0x48
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d9ac:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800d9ae:	e853 3f00 	ldrex	r3, [r3]
 800d9b2:	647b      	str	r3, [r7, #68]	; 0x44
   return(result);
 800d9b4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800d9b6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800d9ba:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800d9be:	687b      	ldr	r3, [r7, #4]
 800d9c0:	681b      	ldr	r3, [r3, #0]
 800d9c2:	461a      	mov	r2, r3
 800d9c4:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800d9c8:	657b      	str	r3, [r7, #84]	; 0x54
 800d9ca:	653a      	str	r2, [r7, #80]	; 0x50
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800d9cc:	6d39      	ldr	r1, [r7, #80]	; 0x50
 800d9ce:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800d9d0:	e841 2300 	strex	r3, r2, [r1]
 800d9d4:	64fb      	str	r3, [r7, #76]	; 0x4c
   return(result);
 800d9d6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d9d8:	2b00      	cmp	r3, #0
 800d9da:	d1e4      	bne.n	800d9a6 <UART_RxISR_8BIT_FIFOEN+0x1ee>
          }
        }

        /* Check current reception Mode :
           If Reception till IDLE event has been selected : */
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800d9dc:	687b      	ldr	r3, [r7, #4]
 800d9de:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d9e0:	2b01      	cmp	r3, #1
 800d9e2:	d130      	bne.n	800da46 <UART_RxISR_8BIT_FIFOEN+0x28e>
        {
          /* Set reception type to Standard */
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800d9e4:	687b      	ldr	r3, [r7, #4]
 800d9e6:	2200      	movs	r2, #0
 800d9e8:	66da      	str	r2, [r3, #108]	; 0x6c

          /* Disable IDLE interrupt */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800d9ea:	687b      	ldr	r3, [r7, #4]
 800d9ec:	681b      	ldr	r3, [r3, #0]
 800d9ee:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800d9f0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d9f2:	e853 3f00 	ldrex	r3, [r3]
 800d9f6:	633b      	str	r3, [r7, #48]	; 0x30
   return(result);
 800d9f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d9fa:	f023 0310 	bic.w	r3, r3, #16
 800d9fe:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800da02:	687b      	ldr	r3, [r7, #4]
 800da04:	681b      	ldr	r3, [r3, #0]
 800da06:	461a      	mov	r2, r3
 800da08:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800da0c:	643b      	str	r3, [r7, #64]	; 0x40
 800da0e:	63fa      	str	r2, [r7, #60]	; 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800da10:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800da12:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800da14:	e841 2300 	strex	r3, r2, [r1]
 800da18:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 800da1a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800da1c:	2b00      	cmp	r3, #0
 800da1e:	d1e4      	bne.n	800d9ea <UART_RxISR_8BIT_FIFOEN+0x232>

          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 800da20:	687b      	ldr	r3, [r7, #4]
 800da22:	681b      	ldr	r3, [r3, #0]
 800da24:	69db      	ldr	r3, [r3, #28]
 800da26:	f003 0310 	and.w	r3, r3, #16
 800da2a:	2b10      	cmp	r3, #16
 800da2c:	d103      	bne.n	800da36 <UART_RxISR_8BIT_FIFOEN+0x27e>
          {
            /* Clear IDLE Flag */
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800da2e:	687b      	ldr	r3, [r7, #4]
 800da30:	681b      	ldr	r3, [r3, #0]
 800da32:	2210      	movs	r2, #16
 800da34:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered Rx Event callback*/
          huart->RxEventCallback(huart, huart->RxXferSize);
#else
          /*Call legacy weak Rx Event callback*/
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 800da36:	687b      	ldr	r3, [r7, #4]
 800da38:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800da3c:	4619      	mov	r1, r3
 800da3e:	6878      	ldr	r0, [r7, #4]
 800da40:	f7fe fcd4 	bl	800c3ec <HAL_UARTEx_RxEventCallback>
 800da44:	e002      	b.n	800da4c <UART_RxISR_8BIT_FIFOEN+0x294>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered Rx complete callback*/
          huart->RxCpltCallback(huart);
#else
          /*Call legacy weak Rx complete callback*/
          HAL_UART_RxCpltCallback(huart);
 800da46:	6878      	ldr	r0, [r7, #4]
 800da48:	f7f6 fbec 	bl	8004224 <HAL_UART_RxCpltCallback>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 800da4c:	f8b7 309e 	ldrh.w	r3, [r7, #158]	; 0x9e
 800da50:	2b00      	cmp	r3, #0
 800da52:	d006      	beq.n	800da62 <UART_RxISR_8BIT_FIFOEN+0x2aa>
 800da54:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800da58:	f003 0320 	and.w	r3, r3, #32
 800da5c:	2b00      	cmp	r3, #0
 800da5e:	f47f aecf 	bne.w	800d800 <UART_RxISR_8BIT_FIFOEN+0x48>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
 800da62:	687b      	ldr	r3, [r7, #4]
 800da64:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800da68:	f8a7 308a 	strh.w	r3, [r7, #138]	; 0x8a
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 800da6c:	f8b7 308a 	ldrh.w	r3, [r7, #138]	; 0x8a
 800da70:	2b00      	cmp	r3, #0
 800da72:	d04b      	beq.n	800db0c <UART_RxISR_8BIT_FIFOEN+0x354>
 800da74:	687b      	ldr	r3, [r7, #4]
 800da76:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800da7a:	f8b7 208a 	ldrh.w	r2, [r7, #138]	; 0x8a
 800da7e:	429a      	cmp	r2, r3
 800da80:	d244      	bcs.n	800db0c <UART_RxISR_8BIT_FIFOEN+0x354>
    {
      /* Disable the UART RXFT interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 800da82:	687b      	ldr	r3, [r7, #4]
 800da84:	681b      	ldr	r3, [r3, #0]
 800da86:	3308      	adds	r3, #8
 800da88:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800da8a:	6a3b      	ldr	r3, [r7, #32]
 800da8c:	e853 3f00 	ldrex	r3, [r3]
 800da90:	61fb      	str	r3, [r7, #28]
   return(result);
 800da92:	69fb      	ldr	r3, [r7, #28]
 800da94:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800da98:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800da9c:	687b      	ldr	r3, [r7, #4]
 800da9e:	681b      	ldr	r3, [r3, #0]
 800daa0:	3308      	adds	r3, #8
 800daa2:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 800daa6:	62fa      	str	r2, [r7, #44]	; 0x2c
 800daa8:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800daaa:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800daac:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800daae:	e841 2300 	strex	r3, r2, [r1]
 800dab2:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800dab4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dab6:	2b00      	cmp	r3, #0
 800dab8:	d1e3      	bne.n	800da82 <UART_RxISR_8BIT_FIFOEN+0x2ca>

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_8BIT;
 800daba:	687b      	ldr	r3, [r7, #4]
 800dabc:	4a16      	ldr	r2, [pc, #88]	; (800db18 <UART_RxISR_8BIT_FIFOEN+0x360>)
 800dabe:	675a      	str	r2, [r3, #116]	; 0x74

      /* Enable the UART Data Register Not Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 800dac0:	687b      	ldr	r3, [r7, #4]
 800dac2:	681b      	ldr	r3, [r3, #0]
 800dac4:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800dac6:	68fb      	ldr	r3, [r7, #12]
 800dac8:	e853 3f00 	ldrex	r3, [r3]
 800dacc:	60bb      	str	r3, [r7, #8]
   return(result);
 800dace:	68bb      	ldr	r3, [r7, #8]
 800dad0:	f043 0320 	orr.w	r3, r3, #32
 800dad4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800dad8:	687b      	ldr	r3, [r7, #4]
 800dada:	681b      	ldr	r3, [r3, #0]
 800dadc:	461a      	mov	r2, r3
 800dade:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800dae2:	61bb      	str	r3, [r7, #24]
 800dae4:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800dae6:	6979      	ldr	r1, [r7, #20]
 800dae8:	69ba      	ldr	r2, [r7, #24]
 800daea:	e841 2300 	strex	r3, r2, [r1]
 800daee:	613b      	str	r3, [r7, #16]
   return(result);
 800daf0:	693b      	ldr	r3, [r7, #16]
 800daf2:	2b00      	cmp	r3, #0
 800daf4:	d1e4      	bne.n	800dac0 <UART_RxISR_8BIT_FIFOEN+0x308>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 800daf6:	e009      	b.n	800db0c <UART_RxISR_8BIT_FIFOEN+0x354>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 800daf8:	687b      	ldr	r3, [r7, #4]
 800dafa:	681b      	ldr	r3, [r3, #0]
 800dafc:	8b1b      	ldrh	r3, [r3, #24]
 800dafe:	b29a      	uxth	r2, r3
 800db00:	687b      	ldr	r3, [r7, #4]
 800db02:	681b      	ldr	r3, [r3, #0]
 800db04:	f042 0208 	orr.w	r2, r2, #8
 800db08:	b292      	uxth	r2, r2
 800db0a:	831a      	strh	r2, [r3, #24]
}
 800db0c:	bf00      	nop
 800db0e:	37b0      	adds	r7, #176	; 0xb0
 800db10:	46bd      	mov	sp, r7
 800db12:	bd80      	pop	{r7, pc}
 800db14:	40008000 	.word	0x40008000
 800db18:	0800d441 	.word	0x0800d441

0800db1c <UART_RxISR_16BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 800db1c:	b580      	push	{r7, lr}
 800db1e:	b0ae      	sub	sp, #184	; 0xb8
 800db20:	af00      	add	r7, sp, #0
 800db22:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;
  uint16_t  uhMask = huart->Mask;
 800db24:	687b      	ldr	r3, [r7, #4]
 800db26:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800db2a:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 800db2e:	687b      	ldr	r3, [r7, #4]
 800db30:	681b      	ldr	r3, [r3, #0]
 800db32:	69db      	ldr	r3, [r3, #28]
 800db34:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 800db38:	687b      	ldr	r3, [r7, #4]
 800db3a:	681b      	ldr	r3, [r3, #0]
 800db3c:	681b      	ldr	r3, [r3, #0]
 800db3e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 800db42:	687b      	ldr	r3, [r7, #4]
 800db44:	681b      	ldr	r3, [r3, #0]
 800db46:	689b      	ldr	r3, [r3, #8]
 800db48:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800db4c:	687b      	ldr	r3, [r7, #4]
 800db4e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800db52:	2b22      	cmp	r3, #34	; 0x22
 800db54:	f040 8186 	bne.w	800de64 <UART_RxISR_16BIT_FIFOEN+0x348>
  {
    nb_rx_data = huart->NbRxDataToProcess;
 800db58:	687b      	ldr	r3, [r7, #4]
 800db5a:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800db5e:	f8a7 30a6 	strh.w	r3, [r7, #166]	; 0xa6
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 800db62:	e129      	b.n	800ddb8 <UART_RxISR_16BIT_FIFOEN+0x29c>
    {
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 800db64:	687b      	ldr	r3, [r7, #4]
 800db66:	681b      	ldr	r3, [r3, #0]
 800db68:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800db6a:	f8a7 30a4 	strh.w	r3, [r7, #164]	; 0xa4
      tmp = (uint16_t *) huart->pRxBuffPtr ;
 800db6e:	687b      	ldr	r3, [r7, #4]
 800db70:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800db72:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
      *tmp = (uint16_t)(uhdata & uhMask);
 800db76:	f8b7 20a4 	ldrh.w	r2, [r7, #164]	; 0xa4
 800db7a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 800db7e:	4013      	ands	r3, r2
 800db80:	b29a      	uxth	r2, r3
 800db82:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800db86:	801a      	strh	r2, [r3, #0]
      huart->pRxBuffPtr += 2U;
 800db88:	687b      	ldr	r3, [r7, #4]
 800db8a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800db8c:	1c9a      	adds	r2, r3, #2
 800db8e:	687b      	ldr	r3, [r7, #4]
 800db90:	659a      	str	r2, [r3, #88]	; 0x58
      huart->RxXferCount--;
 800db92:	687b      	ldr	r3, [r7, #4]
 800db94:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800db98:	b29b      	uxth	r3, r3
 800db9a:	3b01      	subs	r3, #1
 800db9c:	b29a      	uxth	r2, r3
 800db9e:	687b      	ldr	r3, [r7, #4]
 800dba0:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
 800dba4:	687b      	ldr	r3, [r7, #4]
 800dba6:	681b      	ldr	r3, [r3, #0]
 800dba8:	69db      	ldr	r3, [r3, #28]
 800dbaa:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4

      /* If some non blocking errors occurred */
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 800dbae:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800dbb2:	f003 0307 	and.w	r3, r3, #7
 800dbb6:	2b00      	cmp	r3, #0
 800dbb8:	d053      	beq.n	800dc62 <UART_RxISR_16BIT_FIFOEN+0x146>
      {
        /* UART parity error interrupt occurred -------------------------------------*/
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 800dbba:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800dbbe:	f003 0301 	and.w	r3, r3, #1
 800dbc2:	2b00      	cmp	r3, #0
 800dbc4:	d011      	beq.n	800dbea <UART_RxISR_16BIT_FIFOEN+0xce>
 800dbc6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800dbca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dbce:	2b00      	cmp	r3, #0
 800dbd0:	d00b      	beq.n	800dbea <UART_RxISR_16BIT_FIFOEN+0xce>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 800dbd2:	687b      	ldr	r3, [r7, #4]
 800dbd4:	681b      	ldr	r3, [r3, #0]
 800dbd6:	2201      	movs	r2, #1
 800dbd8:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_PE;
 800dbda:	687b      	ldr	r3, [r7, #4]
 800dbdc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800dbe0:	f043 0201 	orr.w	r2, r3, #1
 800dbe4:	687b      	ldr	r3, [r7, #4]
 800dbe6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* UART frame error interrupt occurred --------------------------------------*/
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800dbea:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800dbee:	f003 0302 	and.w	r3, r3, #2
 800dbf2:	2b00      	cmp	r3, #0
 800dbf4:	d011      	beq.n	800dc1a <UART_RxISR_16BIT_FIFOEN+0xfe>
 800dbf6:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800dbfa:	f003 0301 	and.w	r3, r3, #1
 800dbfe:	2b00      	cmp	r3, #0
 800dc00:	d00b      	beq.n	800dc1a <UART_RxISR_16BIT_FIFOEN+0xfe>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800dc02:	687b      	ldr	r3, [r7, #4]
 800dc04:	681b      	ldr	r3, [r3, #0]
 800dc06:	2202      	movs	r2, #2
 800dc08:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_FE;
 800dc0a:	687b      	ldr	r3, [r7, #4]
 800dc0c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800dc10:	f043 0204 	orr.w	r2, r3, #4
 800dc14:	687b      	ldr	r3, [r7, #4]
 800dc16:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* UART noise error interrupt occurred --------------------------------------*/
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 800dc1a:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800dc1e:	f003 0304 	and.w	r3, r3, #4
 800dc22:	2b00      	cmp	r3, #0
 800dc24:	d011      	beq.n	800dc4a <UART_RxISR_16BIT_FIFOEN+0x12e>
 800dc26:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800dc2a:	f003 0301 	and.w	r3, r3, #1
 800dc2e:	2b00      	cmp	r3, #0
 800dc30:	d00b      	beq.n	800dc4a <UART_RxISR_16BIT_FIFOEN+0x12e>
        {
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 800dc32:	687b      	ldr	r3, [r7, #4]
 800dc34:	681b      	ldr	r3, [r3, #0]
 800dc36:	2204      	movs	r2, #4
 800dc38:	621a      	str	r2, [r3, #32]

          huart->ErrorCode |= HAL_UART_ERROR_NE;
 800dc3a:	687b      	ldr	r3, [r7, #4]
 800dc3c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800dc40:	f043 0202 	orr.w	r2, r3, #2
 800dc44:	687b      	ldr	r3, [r7, #4]
 800dc46:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }

        /* Call UART Error Call back function if need be ----------------------------*/
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 800dc4a:	687b      	ldr	r3, [r7, #4]
 800dc4c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800dc50:	2b00      	cmp	r3, #0
 800dc52:	d006      	beq.n	800dc62 <UART_RxISR_16BIT_FIFOEN+0x146>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 800dc54:	6878      	ldr	r0, [r7, #4]
 800dc56:	f7fe fbbf 	bl	800c3d8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 800dc5a:	687b      	ldr	r3, [r7, #4]
 800dc5c:	2200      	movs	r2, #0
 800dc5e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
        }
      }

      if (huart->RxXferCount == 0U)
 800dc62:	687b      	ldr	r3, [r7, #4]
 800dc64:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800dc68:	b29b      	uxth	r3, r3
 800dc6a:	2b00      	cmp	r3, #0
 800dc6c:	f040 80a4 	bne.w	800ddb8 <UART_RxISR_16BIT_FIFOEN+0x29c>
      {
        /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800dc70:	687b      	ldr	r3, [r7, #4]
 800dc72:	681b      	ldr	r3, [r3, #0]
 800dc74:	677b      	str	r3, [r7, #116]	; 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800dc76:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800dc78:	e853 3f00 	ldrex	r3, [r3]
 800dc7c:	673b      	str	r3, [r7, #112]	; 0x70
   return(result);
 800dc7e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800dc80:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800dc84:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800dc88:	687b      	ldr	r3, [r7, #4]
 800dc8a:	681b      	ldr	r3, [r3, #0]
 800dc8c:	461a      	mov	r2, r3
 800dc8e:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800dc92:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800dc96:	67fa      	str	r2, [r7, #124]	; 0x7c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800dc98:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800dc9a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800dc9e:	e841 2300 	strex	r3, r2, [r1]
 800dca2:	67bb      	str	r3, [r7, #120]	; 0x78
   return(result);
 800dca4:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800dca6:	2b00      	cmp	r3, #0
 800dca8:	d1e2      	bne.n	800dc70 <UART_RxISR_16BIT_FIFOEN+0x154>

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
           and RX FIFO Threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800dcaa:	687b      	ldr	r3, [r7, #4]
 800dcac:	681b      	ldr	r3, [r3, #0]
 800dcae:	3308      	adds	r3, #8
 800dcb0:	663b      	str	r3, [r7, #96]	; 0x60
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800dcb2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800dcb4:	e853 3f00 	ldrex	r3, [r3]
 800dcb8:	65fb      	str	r3, [r7, #92]	; 0x5c
   return(result);
 800dcba:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800dcbc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800dcc0:	f023 0301 	bic.w	r3, r3, #1
 800dcc4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800dcc8:	687b      	ldr	r3, [r7, #4]
 800dcca:	681b      	ldr	r3, [r3, #0]
 800dccc:	3308      	adds	r3, #8
 800dcce:	f8d7 2098 	ldr.w	r2, [r7, #152]	; 0x98
 800dcd2:	66fa      	str	r2, [r7, #108]	; 0x6c
 800dcd4:	66bb      	str	r3, [r7, #104]	; 0x68
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800dcd6:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800dcd8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800dcda:	e841 2300 	strex	r3, r2, [r1]
 800dcde:	667b      	str	r3, [r7, #100]	; 0x64
   return(result);
 800dce0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800dce2:	2b00      	cmp	r3, #0
 800dce4:	d1e1      	bne.n	800dcaa <UART_RxISR_16BIT_FIFOEN+0x18e>

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 800dce6:	687b      	ldr	r3, [r7, #4]
 800dce8:	2220      	movs	r2, #32
 800dcea:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 800dcee:	687b      	ldr	r3, [r7, #4]
 800dcf0:	2200      	movs	r2, #0
 800dcf2:	675a      	str	r2, [r3, #116]	; 0x74

        /* Initialize type of RxEvent to Transfer Complete */
        huart->RxEventType = HAL_UART_RXEVENT_TC;
 800dcf4:	687b      	ldr	r3, [r7, #4]
 800dcf6:	2200      	movs	r2, #0
 800dcf8:	671a      	str	r2, [r3, #112]	; 0x70

        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 800dcfa:	687b      	ldr	r3, [r7, #4]
 800dcfc:	681b      	ldr	r3, [r3, #0]
 800dcfe:	4a60      	ldr	r2, [pc, #384]	; (800de80 <UART_RxISR_16BIT_FIFOEN+0x364>)
 800dd00:	4293      	cmp	r3, r2
 800dd02:	d021      	beq.n	800dd48 <UART_RxISR_16BIT_FIFOEN+0x22c>
        {
          /* Check that USART RTOEN bit is set */
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 800dd04:	687b      	ldr	r3, [r7, #4]
 800dd06:	681b      	ldr	r3, [r3, #0]
 800dd08:	685b      	ldr	r3, [r3, #4]
 800dd0a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800dd0e:	2b00      	cmp	r3, #0
 800dd10:	d01a      	beq.n	800dd48 <UART_RxISR_16BIT_FIFOEN+0x22c>
          {
            /* Enable the UART Receiver Timeout Interrupt */
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 800dd12:	687b      	ldr	r3, [r7, #4]
 800dd14:	681b      	ldr	r3, [r3, #0]
 800dd16:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800dd18:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800dd1a:	e853 3f00 	ldrex	r3, [r3]
 800dd1e:	64bb      	str	r3, [r7, #72]	; 0x48
   return(result);
 800dd20:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800dd22:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800dd26:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800dd2a:	687b      	ldr	r3, [r7, #4]
 800dd2c:	681b      	ldr	r3, [r3, #0]
 800dd2e:	461a      	mov	r2, r3
 800dd30:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800dd34:	65bb      	str	r3, [r7, #88]	; 0x58
 800dd36:	657a      	str	r2, [r7, #84]	; 0x54
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800dd38:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800dd3a:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800dd3c:	e841 2300 	strex	r3, r2, [r1]
 800dd40:	653b      	str	r3, [r7, #80]	; 0x50
   return(result);
 800dd42:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800dd44:	2b00      	cmp	r3, #0
 800dd46:	d1e4      	bne.n	800dd12 <UART_RxISR_16BIT_FIFOEN+0x1f6>
          }
        }

        /* Check current reception Mode :
           If Reception till IDLE event has been selected : */
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800dd48:	687b      	ldr	r3, [r7, #4]
 800dd4a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800dd4c:	2b01      	cmp	r3, #1
 800dd4e:	d130      	bne.n	800ddb2 <UART_RxISR_16BIT_FIFOEN+0x296>
        {
          /* Set reception type to Standard */
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800dd50:	687b      	ldr	r3, [r7, #4]
 800dd52:	2200      	movs	r2, #0
 800dd54:	66da      	str	r2, [r3, #108]	; 0x6c

          /* Disable IDLE interrupt */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800dd56:	687b      	ldr	r3, [r7, #4]
 800dd58:	681b      	ldr	r3, [r3, #0]
 800dd5a:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800dd5c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800dd5e:	e853 3f00 	ldrex	r3, [r3]
 800dd62:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 800dd64:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800dd66:	f023 0310 	bic.w	r3, r3, #16
 800dd6a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800dd6e:	687b      	ldr	r3, [r7, #4]
 800dd70:	681b      	ldr	r3, [r3, #0]
 800dd72:	461a      	mov	r2, r3
 800dd74:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800dd78:	647b      	str	r3, [r7, #68]	; 0x44
 800dd7a:	643a      	str	r2, [r7, #64]	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800dd7c:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800dd7e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800dd80:	e841 2300 	strex	r3, r2, [r1]
 800dd84:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 800dd86:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800dd88:	2b00      	cmp	r3, #0
 800dd8a:	d1e4      	bne.n	800dd56 <UART_RxISR_16BIT_FIFOEN+0x23a>

          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 800dd8c:	687b      	ldr	r3, [r7, #4]
 800dd8e:	681b      	ldr	r3, [r3, #0]
 800dd90:	69db      	ldr	r3, [r3, #28]
 800dd92:	f003 0310 	and.w	r3, r3, #16
 800dd96:	2b10      	cmp	r3, #16
 800dd98:	d103      	bne.n	800dda2 <UART_RxISR_16BIT_FIFOEN+0x286>
          {
            /* Clear IDLE Flag */
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800dd9a:	687b      	ldr	r3, [r7, #4]
 800dd9c:	681b      	ldr	r3, [r3, #0]
 800dd9e:	2210      	movs	r2, #16
 800dda0:	621a      	str	r2, [r3, #32]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered Rx Event callback*/
          huart->RxEventCallback(huart, huart->RxXferSize);
#else
          /*Call legacy weak Rx Event callback*/
          HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 800dda2:	687b      	ldr	r3, [r7, #4]
 800dda4:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800dda8:	4619      	mov	r1, r3
 800ddaa:	6878      	ldr	r0, [r7, #4]
 800ddac:	f7fe fb1e 	bl	800c3ec <HAL_UARTEx_RxEventCallback>
 800ddb0:	e002      	b.n	800ddb8 <UART_RxISR_16BIT_FIFOEN+0x29c>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered Rx complete callback*/
          huart->RxCpltCallback(huart);
#else
          /*Call legacy weak Rx complete callback*/
          HAL_UART_RxCpltCallback(huart);
 800ddb2:	6878      	ldr	r0, [r7, #4]
 800ddb4:	f7f6 fa36 	bl	8004224 <HAL_UART_RxCpltCallback>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 800ddb8:	f8b7 30a6 	ldrh.w	r3, [r7, #166]	; 0xa6
 800ddbc:	2b00      	cmp	r3, #0
 800ddbe:	d006      	beq.n	800ddce <UART_RxISR_16BIT_FIFOEN+0x2b2>
 800ddc0:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800ddc4:	f003 0320 	and.w	r3, r3, #32
 800ddc8:	2b00      	cmp	r3, #0
 800ddca:	f47f aecb 	bne.w	800db64 <UART_RxISR_16BIT_FIFOEN+0x48>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
 800ddce:	687b      	ldr	r3, [r7, #4]
 800ddd0:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800ddd4:	f8a7 308e 	strh.w	r3, [r7, #142]	; 0x8e
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 800ddd8:	f8b7 308e 	ldrh.w	r3, [r7, #142]	; 0x8e
 800dddc:	2b00      	cmp	r3, #0
 800ddde:	d04b      	beq.n	800de78 <UART_RxISR_16BIT_FIFOEN+0x35c>
 800dde0:	687b      	ldr	r3, [r7, #4]
 800dde2:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800dde6:	f8b7 208e 	ldrh.w	r2, [r7, #142]	; 0x8e
 800ddea:	429a      	cmp	r2, r3
 800ddec:	d244      	bcs.n	800de78 <UART_RxISR_16BIT_FIFOEN+0x35c>
    {
      /* Disable the UART RXFT interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 800ddee:	687b      	ldr	r3, [r7, #4]
 800ddf0:	681b      	ldr	r3, [r3, #0]
 800ddf2:	3308      	adds	r3, #8
 800ddf4:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800ddf6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ddf8:	e853 3f00 	ldrex	r3, [r3]
 800ddfc:	623b      	str	r3, [r7, #32]
   return(result);
 800ddfe:	6a3b      	ldr	r3, [r7, #32]
 800de00:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800de04:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800de08:	687b      	ldr	r3, [r7, #4]
 800de0a:	681b      	ldr	r3, [r3, #0]
 800de0c:	3308      	adds	r3, #8
 800de0e:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 800de12:	633a      	str	r2, [r7, #48]	; 0x30
 800de14:	62fb      	str	r3, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800de16:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800de18:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800de1a:	e841 2300 	strex	r3, r2, [r1]
 800de1e:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 800de20:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800de22:	2b00      	cmp	r3, #0
 800de24:	d1e3      	bne.n	800ddee <UART_RxISR_16BIT_FIFOEN+0x2d2>

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_16BIT;
 800de26:	687b      	ldr	r3, [r7, #4]
 800de28:	4a16      	ldr	r2, [pc, #88]	; (800de84 <UART_RxISR_16BIT_FIFOEN+0x368>)
 800de2a:	675a      	str	r2, [r3, #116]	; 0x74

      /* Enable the UART Data Register Not Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 800de2c:	687b      	ldr	r3, [r7, #4]
 800de2e:	681b      	ldr	r3, [r3, #0]
 800de30:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800de32:	693b      	ldr	r3, [r7, #16]
 800de34:	e853 3f00 	ldrex	r3, [r3]
 800de38:	60fb      	str	r3, [r7, #12]
   return(result);
 800de3a:	68fb      	ldr	r3, [r7, #12]
 800de3c:	f043 0320 	orr.w	r3, r3, #32
 800de40:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800de44:	687b      	ldr	r3, [r7, #4]
 800de46:	681b      	ldr	r3, [r3, #0]
 800de48:	461a      	mov	r2, r3
 800de4a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800de4e:	61fb      	str	r3, [r7, #28]
 800de50:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800de52:	69b9      	ldr	r1, [r7, #24]
 800de54:	69fa      	ldr	r2, [r7, #28]
 800de56:	e841 2300 	strex	r3, r2, [r1]
 800de5a:	617b      	str	r3, [r7, #20]
   return(result);
 800de5c:	697b      	ldr	r3, [r7, #20]
 800de5e:	2b00      	cmp	r3, #0
 800de60:	d1e4      	bne.n	800de2c <UART_RxISR_16BIT_FIFOEN+0x310>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 800de62:	e009      	b.n	800de78 <UART_RxISR_16BIT_FIFOEN+0x35c>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 800de64:	687b      	ldr	r3, [r7, #4]
 800de66:	681b      	ldr	r3, [r3, #0]
 800de68:	8b1b      	ldrh	r3, [r3, #24]
 800de6a:	b29a      	uxth	r2, r3
 800de6c:	687b      	ldr	r3, [r7, #4]
 800de6e:	681b      	ldr	r3, [r3, #0]
 800de70:	f042 0208 	orr.w	r2, r2, #8
 800de74:	b292      	uxth	r2, r2
 800de76:	831a      	strh	r2, [r3, #24]
}
 800de78:	bf00      	nop
 800de7a:	37b8      	adds	r7, #184	; 0xb8
 800de7c:	46bd      	mov	sp, r7
 800de7e:	bd80      	pop	{r7, pc}
 800de80:	40008000 	.word	0x40008000
 800de84:	0800d5fd 	.word	0x0800d5fd

0800de88 <HAL_UARTEx_WakeupCallback>:
  * @brief UART wakeup from Stop mode callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_WakeupCallback(UART_HandleTypeDef *huart)
{
 800de88:	b480      	push	{r7}
 800de8a:	b083      	sub	sp, #12
 800de8c:	af00      	add	r7, sp, #0
 800de8e:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_WakeupCallback can be implemented in the user file.
   */
}
 800de90:	bf00      	nop
 800de92:	370c      	adds	r7, #12
 800de94:	46bd      	mov	sp, r7
 800de96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de9a:	4770      	bx	lr

0800de9c <HAL_UARTEx_RxFifoFullCallback>:
  * @brief  UART RX Fifo full callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
{
 800de9c:	b480      	push	{r7}
 800de9e:	b083      	sub	sp, #12
 800dea0:	af00      	add	r7, sp, #0
 800dea2:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxFifoFullCallback can be implemented in the user file.
   */
}
 800dea4:	bf00      	nop
 800dea6:	370c      	adds	r7, #12
 800dea8:	46bd      	mov	sp, r7
 800deaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800deae:	4770      	bx	lr

0800deb0 <HAL_UARTEx_TxFifoEmptyCallback>:
  * @brief  UART TX Fifo empty callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
{
 800deb0:	b480      	push	{r7}
 800deb2:	b083      	sub	sp, #12
 800deb4:	af00      	add	r7, sp, #0
 800deb6:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_TxFifoEmptyCallback can be implemented in the user file.
   */
}
 800deb8:	bf00      	nop
 800deba:	370c      	adds	r7, #12
 800debc:	46bd      	mov	sp, r7
 800debe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dec2:	4770      	bx	lr

0800dec4 <HAL_UARTEx_EnableFifoMode>:
  * @brief  Enable the FIFO mode.
  * @param huart      UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_EnableFifoMode(UART_HandleTypeDef *huart)
{
 800dec4:	b580      	push	{r7, lr}
 800dec6:	b084      	sub	sp, #16
 800dec8:	af00      	add	r7, sp, #0
 800deca:	6078      	str	r0, [r7, #4]

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
 800decc:	687b      	ldr	r3, [r7, #4]
 800dece:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800ded2:	2b01      	cmp	r3, #1
 800ded4:	d101      	bne.n	800deda <HAL_UARTEx_EnableFifoMode+0x16>
 800ded6:	2302      	movs	r3, #2
 800ded8:	e02b      	b.n	800df32 <HAL_UARTEx_EnableFifoMode+0x6e>
 800deda:	687b      	ldr	r3, [r7, #4]
 800dedc:	2201      	movs	r2, #1
 800dede:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800dee2:	687b      	ldr	r3, [r7, #4]
 800dee4:	2224      	movs	r2, #36	; 0x24
 800dee6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800deea:	687b      	ldr	r3, [r7, #4]
 800deec:	681b      	ldr	r3, [r3, #0]
 800deee:	681b      	ldr	r3, [r3, #0]
 800def0:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800def2:	687b      	ldr	r3, [r7, #4]
 800def4:	681b      	ldr	r3, [r3, #0]
 800def6:	681a      	ldr	r2, [r3, #0]
 800def8:	687b      	ldr	r3, [r7, #4]
 800defa:	681b      	ldr	r3, [r3, #0]
 800defc:	f022 0201 	bic.w	r2, r2, #1
 800df00:	601a      	str	r2, [r3, #0]

  /* Enable FIFO mode */
  SET_BIT(tmpcr1, USART_CR1_FIFOEN);
 800df02:	68fb      	ldr	r3, [r7, #12]
 800df04:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800df08:	60fb      	str	r3, [r7, #12]
  huart->FifoMode = UART_FIFOMODE_ENABLE;
 800df0a:	687b      	ldr	r3, [r7, #4]
 800df0c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 800df10:	665a      	str	r2, [r3, #100]	; 0x64

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800df12:	687b      	ldr	r3, [r7, #4]
 800df14:	681b      	ldr	r3, [r3, #0]
 800df16:	68fa      	ldr	r2, [r7, #12]
 800df18:	601a      	str	r2, [r3, #0]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
 800df1a:	6878      	ldr	r0, [r7, #4]
 800df1c:	f000 f8c2 	bl	800e0a4 <UARTEx_SetNbDataToProcess>

  huart->gState = HAL_UART_STATE_READY;
 800df20:	687b      	ldr	r3, [r7, #4]
 800df22:	2220      	movs	r2, #32
 800df24:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800df28:	687b      	ldr	r3, [r7, #4]
 800df2a:	2200      	movs	r2, #0
 800df2c:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  return HAL_OK;
 800df30:	2300      	movs	r3, #0
}
 800df32:	4618      	mov	r0, r3
 800df34:	3710      	adds	r7, #16
 800df36:	46bd      	mov	sp, r7
 800df38:	bd80      	pop	{r7, pc}

0800df3a <HAL_UARTEx_DisableFifoMode>:
  * @brief  Disable the FIFO mode.
  * @param huart      UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
{
 800df3a:	b480      	push	{r7}
 800df3c:	b085      	sub	sp, #20
 800df3e:	af00      	add	r7, sp, #0
 800df40:	6078      	str	r0, [r7, #4]

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
 800df42:	687b      	ldr	r3, [r7, #4]
 800df44:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800df48:	2b01      	cmp	r3, #1
 800df4a:	d101      	bne.n	800df50 <HAL_UARTEx_DisableFifoMode+0x16>
 800df4c:	2302      	movs	r3, #2
 800df4e:	e027      	b.n	800dfa0 <HAL_UARTEx_DisableFifoMode+0x66>
 800df50:	687b      	ldr	r3, [r7, #4]
 800df52:	2201      	movs	r2, #1
 800df54:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800df58:	687b      	ldr	r3, [r7, #4]
 800df5a:	2224      	movs	r2, #36	; 0x24
 800df5c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800df60:	687b      	ldr	r3, [r7, #4]
 800df62:	681b      	ldr	r3, [r3, #0]
 800df64:	681b      	ldr	r3, [r3, #0]
 800df66:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800df68:	687b      	ldr	r3, [r7, #4]
 800df6a:	681b      	ldr	r3, [r3, #0]
 800df6c:	681a      	ldr	r2, [r3, #0]
 800df6e:	687b      	ldr	r3, [r7, #4]
 800df70:	681b      	ldr	r3, [r3, #0]
 800df72:	f022 0201 	bic.w	r2, r2, #1
 800df76:	601a      	str	r2, [r3, #0]

  /* Enable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 800df78:	68fb      	ldr	r3, [r7, #12]
 800df7a:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800df7e:	60fb      	str	r3, [r7, #12]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
 800df80:	687b      	ldr	r3, [r7, #4]
 800df82:	2200      	movs	r2, #0
 800df84:	665a      	str	r2, [r3, #100]	; 0x64

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800df86:	687b      	ldr	r3, [r7, #4]
 800df88:	681b      	ldr	r3, [r3, #0]
 800df8a:	68fa      	ldr	r2, [r7, #12]
 800df8c:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800df8e:	687b      	ldr	r3, [r7, #4]
 800df90:	2220      	movs	r2, #32
 800df92:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800df96:	687b      	ldr	r3, [r7, #4]
 800df98:	2200      	movs	r2, #0
 800df9a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  return HAL_OK;
 800df9e:	2300      	movs	r3, #0
}
 800dfa0:	4618      	mov	r0, r3
 800dfa2:	3714      	adds	r7, #20
 800dfa4:	46bd      	mov	sp, r7
 800dfa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfaa:	4770      	bx	lr

0800dfac <HAL_UARTEx_SetTxFifoThreshold>:
  *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
 800dfac:	b580      	push	{r7, lr}
 800dfae:	b084      	sub	sp, #16
 800dfb0:	af00      	add	r7, sp, #0
 800dfb2:	6078      	str	r0, [r7, #4]
 800dfb4:	6039      	str	r1, [r7, #0]
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
 800dfb6:	687b      	ldr	r3, [r7, #4]
 800dfb8:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800dfbc:	2b01      	cmp	r3, #1
 800dfbe:	d101      	bne.n	800dfc4 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800dfc0:	2302      	movs	r3, #2
 800dfc2:	e02d      	b.n	800e020 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800dfc4:	687b      	ldr	r3, [r7, #4]
 800dfc6:	2201      	movs	r2, #1
 800dfc8:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800dfcc:	687b      	ldr	r3, [r7, #4]
 800dfce:	2224      	movs	r2, #36	; 0x24
 800dfd0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800dfd4:	687b      	ldr	r3, [r7, #4]
 800dfd6:	681b      	ldr	r3, [r3, #0]
 800dfd8:	681b      	ldr	r3, [r3, #0]
 800dfda:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800dfdc:	687b      	ldr	r3, [r7, #4]
 800dfde:	681b      	ldr	r3, [r3, #0]
 800dfe0:	681a      	ldr	r2, [r3, #0]
 800dfe2:	687b      	ldr	r3, [r7, #4]
 800dfe4:	681b      	ldr	r3, [r3, #0]
 800dfe6:	f022 0201 	bic.w	r2, r2, #1
 800dfea:	601a      	str	r2, [r3, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 800dfec:	687b      	ldr	r3, [r7, #4]
 800dfee:	681b      	ldr	r3, [r3, #0]
 800dff0:	689b      	ldr	r3, [r3, #8]
 800dff2:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 800dff6:	687b      	ldr	r3, [r7, #4]
 800dff8:	681b      	ldr	r3, [r3, #0]
 800dffa:	683a      	ldr	r2, [r7, #0]
 800dffc:	430a      	orrs	r2, r1
 800dffe:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
 800e000:	6878      	ldr	r0, [r7, #4]
 800e002:	f000 f84f 	bl	800e0a4 <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800e006:	687b      	ldr	r3, [r7, #4]
 800e008:	681b      	ldr	r3, [r3, #0]
 800e00a:	68fa      	ldr	r2, [r7, #12]
 800e00c:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800e00e:	687b      	ldr	r3, [r7, #4]
 800e010:	2220      	movs	r2, #32
 800e012:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800e016:	687b      	ldr	r3, [r7, #4]
 800e018:	2200      	movs	r2, #0
 800e01a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  return HAL_OK;
 800e01e:	2300      	movs	r3, #0
}
 800e020:	4618      	mov	r0, r3
 800e022:	3710      	adds	r7, #16
 800e024:	46bd      	mov	sp, r7
 800e026:	bd80      	pop	{r7, pc}

0800e028 <HAL_UARTEx_SetRxFifoThreshold>:
  *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
 800e028:	b580      	push	{r7, lr}
 800e02a:	b084      	sub	sp, #16
 800e02c:	af00      	add	r7, sp, #0
 800e02e:	6078      	str	r0, [r7, #4]
 800e030:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
 800e032:	687b      	ldr	r3, [r7, #4]
 800e034:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800e038:	2b01      	cmp	r3, #1
 800e03a:	d101      	bne.n	800e040 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800e03c:	2302      	movs	r3, #2
 800e03e:	e02d      	b.n	800e09c <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800e040:	687b      	ldr	r3, [r7, #4]
 800e042:	2201      	movs	r2, #1
 800e044:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800e048:	687b      	ldr	r3, [r7, #4]
 800e04a:	2224      	movs	r2, #36	; 0x24
 800e04c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800e050:	687b      	ldr	r3, [r7, #4]
 800e052:	681b      	ldr	r3, [r3, #0]
 800e054:	681b      	ldr	r3, [r3, #0]
 800e056:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800e058:	687b      	ldr	r3, [r7, #4]
 800e05a:	681b      	ldr	r3, [r3, #0]
 800e05c:	681a      	ldr	r2, [r3, #0]
 800e05e:	687b      	ldr	r3, [r7, #4]
 800e060:	681b      	ldr	r3, [r3, #0]
 800e062:	f022 0201 	bic.w	r2, r2, #1
 800e066:	601a      	str	r2, [r3, #0]

  /* Update RX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 800e068:	687b      	ldr	r3, [r7, #4]
 800e06a:	681b      	ldr	r3, [r3, #0]
 800e06c:	689b      	ldr	r3, [r3, #8]
 800e06e:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 800e072:	687b      	ldr	r3, [r7, #4]
 800e074:	681b      	ldr	r3, [r3, #0]
 800e076:	683a      	ldr	r2, [r7, #0]
 800e078:	430a      	orrs	r2, r1
 800e07a:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
 800e07c:	6878      	ldr	r0, [r7, #4]
 800e07e:	f000 f811 	bl	800e0a4 <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800e082:	687b      	ldr	r3, [r7, #4]
 800e084:	681b      	ldr	r3, [r3, #0]
 800e086:	68fa      	ldr	r2, [r7, #12]
 800e088:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800e08a:	687b      	ldr	r3, [r7, #4]
 800e08c:	2220      	movs	r2, #32
 800e08e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800e092:	687b      	ldr	r3, [r7, #4]
 800e094:	2200      	movs	r2, #0
 800e096:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84

  return HAL_OK;
 800e09a:	2300      	movs	r3, #0
}
 800e09c:	4618      	mov	r0, r3
 800e09e:	3710      	adds	r7, #16
 800e0a0:	46bd      	mov	sp, r7
 800e0a2:	bd80      	pop	{r7, pc}

0800e0a4 <UARTEx_SetNbDataToProcess>:
  *       the UART configuration registers.
  * @param huart UART handle.
  * @retval None
  */
static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
{
 800e0a4:	b480      	push	{r7}
 800e0a6:	b085      	sub	sp, #20
 800e0a8:	af00      	add	r7, sp, #0
 800e0aa:	6078      	str	r0, [r7, #4]
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 800e0ac:	687b      	ldr	r3, [r7, #4]
 800e0ae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e0b0:	2b00      	cmp	r3, #0
 800e0b2:	d108      	bne.n	800e0c6 <UARTEx_SetNbDataToProcess+0x22>
  {
    huart->NbTxDataToProcess = 1U;
 800e0b4:	687b      	ldr	r3, [r7, #4]
 800e0b6:	2201      	movs	r2, #1
 800e0b8:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    huart->NbRxDataToProcess = 1U;
 800e0bc:	687b      	ldr	r3, [r7, #4]
 800e0be:	2201      	movs	r2, #1
 800e0c0:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
                               (uint16_t)denominator[rx_fifo_threshold];
  }
}
 800e0c4:	e031      	b.n	800e12a <UARTEx_SetNbDataToProcess+0x86>
    rx_fifo_depth = RX_FIFO_DEPTH;
 800e0c6:	2308      	movs	r3, #8
 800e0c8:	73fb      	strb	r3, [r7, #15]
    tx_fifo_depth = TX_FIFO_DEPTH;
 800e0ca:	2308      	movs	r3, #8
 800e0cc:	73bb      	strb	r3, [r7, #14]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800e0ce:	687b      	ldr	r3, [r7, #4]
 800e0d0:	681b      	ldr	r3, [r3, #0]
 800e0d2:	689b      	ldr	r3, [r3, #8]
 800e0d4:	0e5b      	lsrs	r3, r3, #25
 800e0d6:	b2db      	uxtb	r3, r3
 800e0d8:	f003 0307 	and.w	r3, r3, #7
 800e0dc:	737b      	strb	r3, [r7, #13]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 800e0de:	687b      	ldr	r3, [r7, #4]
 800e0e0:	681b      	ldr	r3, [r3, #0]
 800e0e2:	689b      	ldr	r3, [r3, #8]
 800e0e4:	0f5b      	lsrs	r3, r3, #29
 800e0e6:	b2db      	uxtb	r3, r3
 800e0e8:	f003 0307 	and.w	r3, r3, #7
 800e0ec:	733b      	strb	r3, [r7, #12]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800e0ee:	7bbb      	ldrb	r3, [r7, #14]
 800e0f0:	7b3a      	ldrb	r2, [r7, #12]
 800e0f2:	4911      	ldr	r1, [pc, #68]	; (800e138 <UARTEx_SetNbDataToProcess+0x94>)
 800e0f4:	5c8a      	ldrb	r2, [r1, r2]
 800e0f6:	fb02 f303 	mul.w	r3, r2, r3
                               (uint16_t)denominator[tx_fifo_threshold];
 800e0fa:	7b3a      	ldrb	r2, [r7, #12]
 800e0fc:	490f      	ldr	r1, [pc, #60]	; (800e13c <UARTEx_SetNbDataToProcess+0x98>)
 800e0fe:	5c8a      	ldrb	r2, [r1, r2]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800e100:	fb93 f3f2 	sdiv	r3, r3, r2
 800e104:	b29a      	uxth	r2, r3
 800e106:	687b      	ldr	r3, [r7, #4]
 800e108:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800e10c:	7bfb      	ldrb	r3, [r7, #15]
 800e10e:	7b7a      	ldrb	r2, [r7, #13]
 800e110:	4909      	ldr	r1, [pc, #36]	; (800e138 <UARTEx_SetNbDataToProcess+0x94>)
 800e112:	5c8a      	ldrb	r2, [r1, r2]
 800e114:	fb02 f303 	mul.w	r3, r2, r3
                               (uint16_t)denominator[rx_fifo_threshold];
 800e118:	7b7a      	ldrb	r2, [r7, #13]
 800e11a:	4908      	ldr	r1, [pc, #32]	; (800e13c <UARTEx_SetNbDataToProcess+0x98>)
 800e11c:	5c8a      	ldrb	r2, [r1, r2]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800e11e:	fb93 f3f2 	sdiv	r3, r3, r2
 800e122:	b29a      	uxth	r2, r3
 800e124:	687b      	ldr	r3, [r7, #4]
 800e126:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
}
 800e12a:	bf00      	nop
 800e12c:	3714      	adds	r7, #20
 800e12e:	46bd      	mov	sp, r7
 800e130:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e134:	4770      	bx	lr
 800e136:	bf00      	nop
 800e138:	0802b108 	.word	0x0802b108
 800e13c:	0802b110 	.word	0x0802b110

0800e140 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800e140:	b580      	push	{r7, lr}
 800e142:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800e144:	f003 ff70 	bl	8012028 <touchgfx_components_init>
  touchgfx_init();
 800e148:	f003 ff44 	bl	8011fd4 <touchgfx_init>
}
 800e14c:	bf00      	nop
 800e14e:	bd80      	pop	{r7, pc}

0800e150 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800e150:	b580      	push	{r7, lr}
 800e152:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800e154:	f003 ff70 	bl	8012038 <touchgfx_taskEntry>
}
 800e158:	bf00      	nop
 800e15a:	bd80      	pop	{r7, pc}

0800e15c <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800e15c:	b480      	push	{r7}
 800e15e:	b083      	sub	sp, #12
 800e160:	af00      	add	r7, sp, #0
 800e162:	6078      	str	r0, [r7, #4]
    {
 800e164:	4a04      	ldr	r2, [pc, #16]	; (800e178 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800e166:	687b      	ldr	r3, [r7, #4]
 800e168:	601a      	str	r2, [r3, #0]
    }
 800e16a:	687b      	ldr	r3, [r7, #4]
 800e16c:	4618      	mov	r0, r3
 800e16e:	370c      	adds	r7, #12
 800e170:	46bd      	mov	sp, r7
 800e172:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e176:	4770      	bx	lr
 800e178:	0802b134 	.word	0x0802b134

0800e17c <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800e17c:	b580      	push	{r7, lr}
 800e17e:	b082      	sub	sp, #8
 800e180:	af00      	add	r7, sp, #0
 800e182:	6078      	str	r0, [r7, #4]
    }
 800e184:	6878      	ldr	r0, [r7, #4]
 800e186:	f7ff ffe9 	bl	800e15c <_ZN8touchgfx12FontProviderD1Ev>
 800e18a:	2104      	movs	r1, #4
 800e18c:	6878      	ldr	r0, [r7, #4]
 800e18e:	f018 ff48 	bl	8027022 <_ZdlPvj>
 800e192:	687b      	ldr	r3, [r7, #4]
 800e194:	4618      	mov	r0, r3
 800e196:	3708      	adds	r7, #8
 800e198:	46bd      	mov	sp, r7
 800e19a:	bd80      	pop	{r7, pc}

0800e19c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800e19c:	b580      	push	{r7, lr}
 800e19e:	b082      	sub	sp, #8
 800e1a0:	af00      	add	r7, sp, #0
 800e1a2:	6078      	str	r0, [r7, #4]
 800e1a4:	460b      	mov	r3, r1
 800e1a6:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800e1a8:	887b      	ldrh	r3, [r7, #2]
 800e1aa:	2b02      	cmp	r3, #2
 800e1ac:	d010      	beq.n	800e1d0 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800e1ae:	2b02      	cmp	r3, #2
 800e1b0:	dc13      	bgt.n	800e1da <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 800e1b2:	2b00      	cmp	r3, #0
 800e1b4:	d002      	beq.n	800e1bc <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800e1b6:	2b01      	cmp	r3, #1
 800e1b8:	d005      	beq.n	800e1c6 <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800e1ba:	e00e      	b.n	800e1da <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800e1bc:	f002 fd32 	bl	8010c24 <_ZN17TypedTextDatabase8getFontsEv>
 800e1c0:	4603      	mov	r3, r0
 800e1c2:	681b      	ldr	r3, [r3, #0]
 800e1c4:	e00a      	b.n	800e1dc <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800e1c6:	f002 fd2d 	bl	8010c24 <_ZN17TypedTextDatabase8getFontsEv>
 800e1ca:	4603      	mov	r3, r0
 800e1cc:	685b      	ldr	r3, [r3, #4]
 800e1ce:	e005      	b.n	800e1dc <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800e1d0:	f002 fd28 	bl	8010c24 <_ZN17TypedTextDatabase8getFontsEv>
 800e1d4:	4603      	mov	r3, r0
 800e1d6:	689b      	ldr	r3, [r3, #8]
 800e1d8:	e000      	b.n	800e1dc <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800e1da:	2300      	movs	r3, #0
    }
}
 800e1dc:	4618      	mov	r0, r3
 800e1de:	3708      	adds	r7, #8
 800e1e0:	46bd      	mov	sp, r7
 800e1e2:	bd80      	pop	{r7, pc}

0800e1e4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800e1e4:	b580      	push	{r7, lr}
 800e1e6:	b082      	sub	sp, #8
 800e1e8:	af00      	add	r7, sp, #0
 800e1ea:	6078      	str	r0, [r7, #4]
 800e1ec:	4a05      	ldr	r2, [pc, #20]	; (800e204 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800e1ee:	687b      	ldr	r3, [r7, #4]
 800e1f0:	601a      	str	r2, [r3, #0]
 800e1f2:	687b      	ldr	r3, [r7, #4]
 800e1f4:	4618      	mov	r0, r3
 800e1f6:	f7ff ffb1 	bl	800e15c <_ZN8touchgfx12FontProviderD1Ev>
 800e1fa:	687b      	ldr	r3, [r7, #4]
 800e1fc:	4618      	mov	r0, r3
 800e1fe:	3708      	adds	r7, #8
 800e200:	46bd      	mov	sp, r7
 800e202:	bd80      	pop	{r7, pc}
 800e204:	0802b120 	.word	0x0802b120

0800e208 <_ZN23ApplicationFontProviderD0Ev>:
 800e208:	b580      	push	{r7, lr}
 800e20a:	b082      	sub	sp, #8
 800e20c:	af00      	add	r7, sp, #0
 800e20e:	6078      	str	r0, [r7, #4]
 800e210:	6878      	ldr	r0, [r7, #4]
 800e212:	f7ff ffe7 	bl	800e1e4 <_ZN23ApplicationFontProviderD1Ev>
 800e216:	2104      	movs	r1, #4
 800e218:	6878      	ldr	r0, [r7, #4]
 800e21a:	f018 ff02 	bl	8027022 <_ZdlPvj>
 800e21e:	687b      	ldr	r3, [r7, #4]
 800e220:	4618      	mov	r0, r3
 800e222:	3708      	adds	r7, #8
 800e224:	46bd      	mov	sp, r7
 800e226:	bd80      	pop	{r7, pc}

0800e228 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800e228:	b480      	push	{r7}
 800e22a:	b083      	sub	sp, #12
 800e22c:	af00      	add	r7, sp, #0
 800e22e:	6078      	str	r0, [r7, #4]
    {
 800e230:	4a04      	ldr	r2, [pc, #16]	; (800e244 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800e232:	687b      	ldr	r3, [r7, #4]
 800e234:	601a      	str	r2, [r3, #0]
    }
 800e236:	687b      	ldr	r3, [r7, #4]
 800e238:	4618      	mov	r0, r3
 800e23a:	370c      	adds	r7, #12
 800e23c:	46bd      	mov	sp, r7
 800e23e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e242:	4770      	bx	lr
 800e244:	0802b548 	.word	0x0802b548

0800e248 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800e248:	b580      	push	{r7, lr}
 800e24a:	b082      	sub	sp, #8
 800e24c:	af00      	add	r7, sp, #0
 800e24e:	6078      	str	r0, [r7, #4]
    }
 800e250:	6878      	ldr	r0, [r7, #4]
 800e252:	f7ff ffe9 	bl	800e228 <_ZN8touchgfx4FontD1Ev>
 800e256:	2114      	movs	r1, #20
 800e258:	6878      	ldr	r0, [r7, #4]
 800e25a:	f018 fee2 	bl	8027022 <_ZdlPvj>
 800e25e:	687b      	ldr	r3, [r7, #4]
 800e260:	4618      	mov	r0, r3
 800e262:	3708      	adds	r7, #8
 800e264:	46bd      	mov	sp, r7
 800e266:	bd80      	pop	{r7, pc}

0800e268 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800e268:	b590      	push	{r4, r7, lr}
 800e26a:	b087      	sub	sp, #28
 800e26c:	af00      	add	r7, sp, #0
 800e26e:	6078      	str	r0, [r7, #4]
 800e270:	460b      	mov	r3, r1
 800e272:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800e274:	887b      	ldrh	r3, [r7, #2]
 800e276:	2b00      	cmp	r3, #0
 800e278:	d101      	bne.n	800e27e <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800e27a:	2300      	movs	r3, #0
 800e27c:	e010      	b.n	800e2a0 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800e27e:	2300      	movs	r3, #0
 800e280:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800e282:	2300      	movs	r3, #0
 800e284:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800e286:	687b      	ldr	r3, [r7, #4]
 800e288:	681b      	ldr	r3, [r3, #0]
 800e28a:	3308      	adds	r3, #8
 800e28c:	681c      	ldr	r4, [r3, #0]
 800e28e:	f107 030f 	add.w	r3, r7, #15
 800e292:	f107 0210 	add.w	r2, r7, #16
 800e296:	8879      	ldrh	r1, [r7, #2]
 800e298:	6878      	ldr	r0, [r7, #4]
 800e29a:	47a0      	blx	r4
 800e29c:	6178      	str	r0, [r7, #20]
        return glyph;
 800e29e:	697b      	ldr	r3, [r7, #20]
    }
 800e2a0:	4618      	mov	r0, r3
 800e2a2:	371c      	adds	r7, #28
 800e2a4:	46bd      	mov	sp, r7
 800e2a6:	bd90      	pop	{r4, r7, pc}

0800e2a8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800e2a8:	b480      	push	{r7}
 800e2aa:	b083      	sub	sp, #12
 800e2ac:	af00      	add	r7, sp, #0
 800e2ae:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800e2b0:	687b      	ldr	r3, [r7, #4]
 800e2b2:	89db      	ldrh	r3, [r3, #14]
    }
 800e2b4:	4618      	mov	r0, r3
 800e2b6:	370c      	adds	r7, #12
 800e2b8:	46bd      	mov	sp, r7
 800e2ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2be:	4770      	bx	lr

0800e2c0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800e2c0:	b480      	push	{r7}
 800e2c2:	b083      	sub	sp, #12
 800e2c4:	af00      	add	r7, sp, #0
 800e2c6:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800e2c8:	687b      	ldr	r3, [r7, #4]
 800e2ca:	8a1b      	ldrh	r3, [r3, #16]
    }
 800e2cc:	4618      	mov	r0, r3
 800e2ce:	370c      	adds	r7, #12
 800e2d0:	46bd      	mov	sp, r7
 800e2d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2d6:	4770      	bx	lr

0800e2d8 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800e2d8:	b480      	push	{r7}
 800e2da:	b083      	sub	sp, #12
 800e2dc:	af00      	add	r7, sp, #0
 800e2de:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800e2e0:	687b      	ldr	r3, [r7, #4]
 800e2e2:	88db      	ldrh	r3, [r3, #6]
    }
 800e2e4:	4618      	mov	r0, r3
 800e2e6:	370c      	adds	r7, #12
 800e2e8:	46bd      	mov	sp, r7
 800e2ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2ee:	4770      	bx	lr

0800e2f0 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800e2f0:	b480      	push	{r7}
 800e2f2:	b083      	sub	sp, #12
 800e2f4:	af00      	add	r7, sp, #0
 800e2f6:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800e2f8:	687b      	ldr	r3, [r7, #4]
 800e2fa:	889b      	ldrh	r3, [r3, #4]
    }
 800e2fc:	4618      	mov	r0, r3
 800e2fe:	370c      	adds	r7, #12
 800e300:	46bd      	mov	sp, r7
 800e302:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e306:	4770      	bx	lr

0800e308 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800e308:	b480      	push	{r7}
 800e30a:	b083      	sub	sp, #12
 800e30c:	af00      	add	r7, sp, #0
 800e30e:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800e310:	687b      	ldr	r3, [r7, #4]
 800e312:	7a9b      	ldrb	r3, [r3, #10]
 800e314:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800e318:	b2db      	uxtb	r3, r3
    }
 800e31a:	4618      	mov	r0, r3
 800e31c:	370c      	adds	r7, #12
 800e31e:	46bd      	mov	sp, r7
 800e320:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e324:	4770      	bx	lr

0800e326 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800e326:	b480      	push	{r7}
 800e328:	b083      	sub	sp, #12
 800e32a:	af00      	add	r7, sp, #0
 800e32c:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800e32e:	687b      	ldr	r3, [r7, #4]
 800e330:	7a9b      	ldrb	r3, [r3, #10]
 800e332:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800e336:	b2db      	uxtb	r3, r3
    }
 800e338:	4618      	mov	r0, r3
 800e33a:	370c      	adds	r7, #12
 800e33c:	46bd      	mov	sp, r7
 800e33e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e342:	4770      	bx	lr

0800e344 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800e344:	b580      	push	{r7, lr}
 800e346:	b082      	sub	sp, #8
 800e348:	af00      	add	r7, sp, #0
 800e34a:	6078      	str	r0, [r7, #4]
 800e34c:	4a05      	ldr	r2, [pc, #20]	; (800e364 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800e34e:	687b      	ldr	r3, [r7, #4]
 800e350:	601a      	str	r2, [r3, #0]
 800e352:	687b      	ldr	r3, [r7, #4]
 800e354:	4618      	mov	r0, r3
 800e356:	f7ff ff67 	bl	800e228 <_ZN8touchgfx4FontD1Ev>
 800e35a:	687b      	ldr	r3, [r7, #4]
 800e35c:	4618      	mov	r0, r3
 800e35e:	3708      	adds	r7, #8
 800e360:	46bd      	mov	sp, r7
 800e362:	bd80      	pop	{r7, pc}
 800e364:	0802c07c 	.word	0x0802c07c

0800e368 <_ZN8touchgfx9ConstFontD0Ev>:
 800e368:	b580      	push	{r7, lr}
 800e36a:	b082      	sub	sp, #8
 800e36c:	af00      	add	r7, sp, #0
 800e36e:	6078      	str	r0, [r7, #4]
 800e370:	6878      	ldr	r0, [r7, #4]
 800e372:	f7ff ffe7 	bl	800e344 <_ZN8touchgfx9ConstFontD1Ev>
 800e376:	211c      	movs	r1, #28
 800e378:	6878      	ldr	r0, [r7, #4]
 800e37a:	f018 fe52 	bl	8027022 <_ZdlPvj>
 800e37e:	687b      	ldr	r3, [r7, #4]
 800e380:	4618      	mov	r0, r3
 800e382:	3708      	adds	r7, #8
 800e384:	46bd      	mov	sp, r7
 800e386:	bd80      	pop	{r7, pc}

0800e388 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800e388:	b580      	push	{r7, lr}
 800e38a:	b082      	sub	sp, #8
 800e38c:	af00      	add	r7, sp, #0
 800e38e:	6078      	str	r0, [r7, #4]
 800e390:	4a05      	ldr	r2, [pc, #20]	; (800e3a8 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800e392:	687b      	ldr	r3, [r7, #4]
 800e394:	601a      	str	r2, [r3, #0]
 800e396:	687b      	ldr	r3, [r7, #4]
 800e398:	4618      	mov	r0, r3
 800e39a:	f7ff ffd3 	bl	800e344 <_ZN8touchgfx9ConstFontD1Ev>
 800e39e:	687b      	ldr	r3, [r7, #4]
 800e3a0:	4618      	mov	r0, r3
 800e3a2:	3708      	adds	r7, #8
 800e3a4:	46bd      	mov	sp, r7
 800e3a6:	bd80      	pop	{r7, pc}
 800e3a8:	0802b158 	.word	0x0802b158

0800e3ac <_ZN8touchgfx13GeneratedFontD0Ev>:
 800e3ac:	b580      	push	{r7, lr}
 800e3ae:	b082      	sub	sp, #8
 800e3b0:	af00      	add	r7, sp, #0
 800e3b2:	6078      	str	r0, [r7, #4]
 800e3b4:	6878      	ldr	r0, [r7, #4]
 800e3b6:	f7ff ffe7 	bl	800e388 <_ZN8touchgfx13GeneratedFontD1Ev>
 800e3ba:	212c      	movs	r1, #44	; 0x2c
 800e3bc:	6878      	ldr	r0, [r7, #4]
 800e3be:	f018 fe30 	bl	8027022 <_ZdlPvj>
 800e3c2:	687b      	ldr	r3, [r7, #4]
 800e3c4:	4618      	mov	r0, r3
 800e3c6:	3708      	adds	r7, #8
 800e3c8:	46bd      	mov	sp, r7
 800e3ca:	bd80      	pop	{r7, pc}

0800e3cc <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800e3cc:	b480      	push	{r7}
 800e3ce:	b083      	sub	sp, #12
 800e3d0:	af00      	add	r7, sp, #0
 800e3d2:	6078      	str	r0, [r7, #4]
    {
 800e3d4:	4a04      	ldr	r2, [pc, #16]	; (800e3e8 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800e3d6:	687b      	ldr	r3, [r7, #4]
 800e3d8:	601a      	str	r2, [r3, #0]
    }
 800e3da:	687b      	ldr	r3, [r7, #4]
 800e3dc:	4618      	mov	r0, r3
 800e3de:	370c      	adds	r7, #12
 800e3e0:	46bd      	mov	sp, r7
 800e3e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3e6:	4770      	bx	lr
 800e3e8:	0802b148 	.word	0x0802b148

0800e3ec <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800e3ec:	b580      	push	{r7, lr}
 800e3ee:	b082      	sub	sp, #8
 800e3f0:	af00      	add	r7, sp, #0
 800e3f2:	6078      	str	r0, [r7, #4]
    }
 800e3f4:	6878      	ldr	r0, [r7, #4]
 800e3f6:	f7ff ffe9 	bl	800e3cc <_ZN8touchgfx9TypedTextD1Ev>
 800e3fa:	2108      	movs	r1, #8
 800e3fc:	6878      	ldr	r0, [r7, #4]
 800e3fe:	f018 fe10 	bl	8027022 <_ZdlPvj>
 800e402:	687b      	ldr	r3, [r7, #4]
 800e404:	4618      	mov	r0, r3
 800e406:	3708      	adds	r7, #8
 800e408:	46bd      	mov	sp, r7
 800e40a:	bd80      	pop	{r7, pc}

0800e40c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800e40c:	b480      	push	{r7}
 800e40e:	b083      	sub	sp, #12
 800e410:	af00      	add	r7, sp, #0
 800e412:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800e414:	687b      	ldr	r3, [r7, #4]
 800e416:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 800e418:	4618      	mov	r0, r3
 800e41a:	370c      	adds	r7, #12
 800e41c:	46bd      	mov	sp, r7
 800e41e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e422:	4770      	bx	lr

0800e424 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800e424:	b480      	push	{r7}
 800e426:	b083      	sub	sp, #12
 800e428:	af00      	add	r7, sp, #0
 800e42a:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800e42c:	687b      	ldr	r3, [r7, #4]
 800e42e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800e430:	4618      	mov	r0, r3
 800e432:	370c      	adds	r7, #12
 800e434:	46bd      	mov	sp, r7
 800e436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e43a:	4770      	bx	lr

0800e43c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800e43c:	b580      	push	{r7, lr}
 800e43e:	b08e      	sub	sp, #56	; 0x38
 800e440:	af0a      	add	r7, sp, #40	; 0x28
 800e442:	60f8      	str	r0, [r7, #12]
 800e444:	60b9      	str	r1, [r7, #8]
 800e446:	4611      	mov	r1, r2
 800e448:	461a      	mov	r2, r3
 800e44a:	460b      	mov	r3, r1
 800e44c:	80fb      	strh	r3, [r7, #6]
 800e44e:	4613      	mov	r3, r2
 800e450:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800e452:	68f8      	ldr	r0, [r7, #12]
 800e454:	88b9      	ldrh	r1, [r7, #4]
 800e456:	88fa      	ldrh	r2, [r7, #6]
 800e458:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800e45c:	9308      	str	r3, [sp, #32]
 800e45e:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800e460:	9307      	str	r3, [sp, #28]
 800e462:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800e466:	9306      	str	r3, [sp, #24]
 800e468:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800e46c:	9305      	str	r3, [sp, #20]
 800e46e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e472:	9304      	str	r3, [sp, #16]
 800e474:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800e478:	9303      	str	r3, [sp, #12]
 800e47a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800e47e:	9302      	str	r3, [sp, #8]
 800e480:	7f3b      	ldrb	r3, [r7, #28]
 800e482:	9301      	str	r3, [sp, #4]
 800e484:	8b3b      	ldrh	r3, [r7, #24]
 800e486:	9300      	str	r3, [sp, #0]
 800e488:	460b      	mov	r3, r1
 800e48a:	68b9      	ldr	r1, [r7, #8]
 800e48c:	f009 fa08 	bl	80178a0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800e490:	4a09      	ldr	r2, [pc, #36]	; (800e4b8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800e492:	68fb      	ldr	r3, [r7, #12]
 800e494:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800e496:	68fb      	ldr	r3, [r7, #12]
 800e498:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800e49a:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800e49c:	68fb      	ldr	r3, [r7, #12]
 800e49e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e4a0:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800e4a2:	68fb      	ldr	r3, [r7, #12]
 800e4a4:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800e4a6:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800e4a8:	68fb      	ldr	r3, [r7, #12]
 800e4aa:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800e4ac:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800e4ae:	68fb      	ldr	r3, [r7, #12]
 800e4b0:	4618      	mov	r0, r3
 800e4b2:	3710      	adds	r7, #16
 800e4b4:	46bd      	mov	sp, r7
 800e4b6:	bd80      	pop	{r7, pc}
 800e4b8:	0802b158 	.word	0x0802b158

0800e4bc <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800e4bc:	b480      	push	{r7}
 800e4be:	b085      	sub	sp, #20
 800e4c0:	af00      	add	r7, sp, #0
 800e4c2:	6078      	str	r0, [r7, #4]
 800e4c4:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800e4c6:	687b      	ldr	r3, [r7, #4]
 800e4c8:	69db      	ldr	r3, [r3, #28]
 800e4ca:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800e4cc:	683b      	ldr	r3, [r7, #0]
 800e4ce:	889b      	ldrh	r3, [r3, #4]
 800e4d0:	0adb      	lsrs	r3, r3, #11
 800e4d2:	b29b      	uxth	r3, r3
 800e4d4:	009b      	lsls	r3, r3, #2
 800e4d6:	68fa      	ldr	r2, [r7, #12]
 800e4d8:	4413      	add	r3, r2
 800e4da:	681a      	ldr	r2, [r3, #0]
 800e4dc:	683b      	ldr	r3, [r7, #0]
 800e4de:	681b      	ldr	r3, [r3, #0]
 800e4e0:	4413      	add	r3, r2
}
 800e4e2:	4618      	mov	r0, r3
 800e4e4:	3714      	adds	r7, #20
 800e4e6:	46bd      	mov	sp, r7
 800e4e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4ec:	4770      	bx	lr

0800e4ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800e4ee:	b480      	push	{r7}
 800e4f0:	b089      	sub	sp, #36	; 0x24
 800e4f2:	af00      	add	r7, sp, #0
 800e4f4:	60f8      	str	r0, [r7, #12]
 800e4f6:	460b      	mov	r3, r1
 800e4f8:	607a      	str	r2, [r7, #4]
 800e4fa:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800e4fc:	687b      	ldr	r3, [r7, #4]
 800e4fe:	2b00      	cmp	r3, #0
 800e500:	d003      	beq.n	800e50a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800e502:	687b      	ldr	r3, [r7, #4]
 800e504:	7b1b      	ldrb	r3, [r3, #12]
 800e506:	2b00      	cmp	r3, #0
 800e508:	d101      	bne.n	800e50e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800e50a:	2300      	movs	r3, #0
 800e50c:	e031      	b.n	800e572 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800e50e:	68fb      	ldr	r3, [r7, #12]
 800e510:	6a1a      	ldr	r2, [r3, #32]
 800e512:	687b      	ldr	r3, [r7, #4]
 800e514:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800e516:	697b      	ldr	r3, [r7, #20]
 800e518:	7b5b      	ldrb	r3, [r3, #13]
 800e51a:	021b      	lsls	r3, r3, #8
 800e51c:	b21b      	sxth	r3, r3
 800e51e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e522:	b219      	sxth	r1, r3
 800e524:	697b      	ldr	r3, [r7, #20]
 800e526:	7adb      	ldrb	r3, [r3, #11]
 800e528:	b21b      	sxth	r3, r3
 800e52a:	430b      	orrs	r3, r1
 800e52c:	b21b      	sxth	r3, r3
 800e52e:	b29b      	uxth	r3, r3
 800e530:	009b      	lsls	r3, r3, #2
 800e532:	4413      	add	r3, r2
 800e534:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800e536:	687b      	ldr	r3, [r7, #4]
 800e538:	7b1b      	ldrb	r3, [r3, #12]
 800e53a:	837b      	strh	r3, [r7, #26]
 800e53c:	e013      	b.n	800e566 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800e53e:	69fb      	ldr	r3, [r7, #28]
 800e540:	881b      	ldrh	r3, [r3, #0]
 800e542:	897a      	ldrh	r2, [r7, #10]
 800e544:	429a      	cmp	r2, r3
 800e546:	d103      	bne.n	800e550 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800e548:	69fb      	ldr	r3, [r7, #28]
 800e54a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800e54e:	e010      	b.n	800e572 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800e550:	69fb      	ldr	r3, [r7, #28]
 800e552:	881b      	ldrh	r3, [r3, #0]
 800e554:	897a      	ldrh	r2, [r7, #10]
 800e556:	429a      	cmp	r2, r3
 800e558:	d309      	bcc.n	800e56e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800e55a:	8b7b      	ldrh	r3, [r7, #26]
 800e55c:	3b01      	subs	r3, #1
 800e55e:	837b      	strh	r3, [r7, #26]
 800e560:	69fb      	ldr	r3, [r7, #28]
 800e562:	3304      	adds	r3, #4
 800e564:	61fb      	str	r3, [r7, #28]
 800e566:	8b7b      	ldrh	r3, [r7, #26]
 800e568:	2b00      	cmp	r3, #0
 800e56a:	d1e8      	bne.n	800e53e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800e56c:	e000      	b.n	800e570 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800e56e:	bf00      	nop
        }
    }
    return 0;
 800e570:	2300      	movs	r3, #0
}
 800e572:	4618      	mov	r0, r3
 800e574:	3724      	adds	r7, #36	; 0x24
 800e576:	46bd      	mov	sp, r7
 800e578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e57c:	4770      	bx	lr
	...

0800e580 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800e580:	b580      	push	{r7, lr}
 800e582:	af00      	add	r7, sp, #0
 800e584:	4801      	ldr	r0, [pc, #4]	; (800e58c <__tcf_0+0xc>)
 800e586:	f7ff feff 	bl	800e388 <_ZN8touchgfx13GeneratedFontD1Ev>
 800e58a:	bd80      	pop	{r7, pc}
 800e58c:	20023d34 	.word	0x20023d34

0800e590 <_Z23getFont_verdana_10_4bppv>:
{
 800e590:	b580      	push	{r7, lr}
 800e592:	b08e      	sub	sp, #56	; 0x38
 800e594:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800e596:	4b21      	ldr	r3, [pc, #132]	; (800e61c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800e598:	681b      	ldr	r3, [r3, #0]
 800e59a:	f3bf 8f5b 	dmb	ish
 800e59e:	f003 0301 	and.w	r3, r3, #1
 800e5a2:	2b00      	cmp	r3, #0
 800e5a4:	bf0c      	ite	eq
 800e5a6:	2301      	moveq	r3, #1
 800e5a8:	2300      	movne	r3, #0
 800e5aa:	b2db      	uxtb	r3, r3
 800e5ac:	2b00      	cmp	r3, #0
 800e5ae:	d030      	beq.n	800e612 <_Z23getFont_verdana_10_4bppv+0x82>
 800e5b0:	481a      	ldr	r0, [pc, #104]	; (800e61c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800e5b2:	f018 fd38 	bl	8027026 <__cxa_guard_acquire>
 800e5b6:	4603      	mov	r3, r0
 800e5b8:	2b00      	cmp	r3, #0
 800e5ba:	bf14      	ite	ne
 800e5bc:	2301      	movne	r3, #1
 800e5be:	2300      	moveq	r3, #0
 800e5c0:	b2db      	uxtb	r3, r3
 800e5c2:	2b00      	cmp	r3, #0
 800e5c4:	d025      	beq.n	800e612 <_Z23getFont_verdana_10_4bppv+0x82>
 800e5c6:	2300      	movs	r3, #0
 800e5c8:	930c      	str	r3, [sp, #48]	; 0x30
 800e5ca:	2300      	movs	r3, #0
 800e5cc:	930b      	str	r3, [sp, #44]	; 0x2c
 800e5ce:	2300      	movs	r3, #0
 800e5d0:	930a      	str	r3, [sp, #40]	; 0x28
 800e5d2:	233f      	movs	r3, #63	; 0x3f
 800e5d4:	9309      	str	r3, [sp, #36]	; 0x24
 800e5d6:	4b12      	ldr	r3, [pc, #72]	; (800e620 <_Z23getFont_verdana_10_4bppv+0x90>)
 800e5d8:	9308      	str	r3, [sp, #32]
 800e5da:	4b12      	ldr	r3, [pc, #72]	; (800e624 <_Z23getFont_verdana_10_4bppv+0x94>)
 800e5dc:	9307      	str	r3, [sp, #28]
 800e5de:	2300      	movs	r3, #0
 800e5e0:	9306      	str	r3, [sp, #24]
 800e5e2:	2300      	movs	r3, #0
 800e5e4:	9305      	str	r3, [sp, #20]
 800e5e6:	2301      	movs	r3, #1
 800e5e8:	9304      	str	r3, [sp, #16]
 800e5ea:	2304      	movs	r3, #4
 800e5ec:	9303      	str	r3, [sp, #12]
 800e5ee:	2300      	movs	r3, #0
 800e5f0:	9302      	str	r3, [sp, #8]
 800e5f2:	2300      	movs	r3, #0
 800e5f4:	9301      	str	r3, [sp, #4]
 800e5f6:	230a      	movs	r3, #10
 800e5f8:	9300      	str	r3, [sp, #0]
 800e5fa:	230a      	movs	r3, #10
 800e5fc:	2201      	movs	r2, #1
 800e5fe:	490a      	ldr	r1, [pc, #40]	; (800e628 <_Z23getFont_verdana_10_4bppv+0x98>)
 800e600:	480a      	ldr	r0, [pc, #40]	; (800e62c <_Z23getFont_verdana_10_4bppv+0x9c>)
 800e602:	f7ff ff1b 	bl	800e43c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800e606:	480a      	ldr	r0, [pc, #40]	; (800e630 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800e608:	f01a fc4c 	bl	8028ea4 <atexit>
 800e60c:	4803      	ldr	r0, [pc, #12]	; (800e61c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800e60e:	f018 fd16 	bl	802703e <__cxa_guard_release>
    return verdana_10_4bpp;
 800e612:	4b06      	ldr	r3, [pc, #24]	; (800e62c <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800e614:	4618      	mov	r0, r3
 800e616:	46bd      	mov	sp, r7
 800e618:	bd80      	pop	{r7, pc}
 800e61a:	bf00      	nop
 800e61c:	20023d60 	.word	0x20023d60
 800e620:	0802df1c 	.word	0x0802df1c
 800e624:	0802e004 	.word	0x0802e004
 800e628:	0802db6c 	.word	0x0802db6c
 800e62c:	20023d34 	.word	0x20023d34
 800e630:	0800e581 	.word	0x0800e581

0800e634 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800e634:	b580      	push	{r7, lr}
 800e636:	af00      	add	r7, sp, #0
 800e638:	4801      	ldr	r0, [pc, #4]	; (800e640 <__tcf_0+0xc>)
 800e63a:	f7ff fea5 	bl	800e388 <_ZN8touchgfx13GeneratedFontD1Ev>
 800e63e:	bd80      	pop	{r7, pc}
 800e640:	20023d64 	.word	0x20023d64

0800e644 <_Z23getFont_verdana_20_4bppv>:
{
 800e644:	b580      	push	{r7, lr}
 800e646:	b08e      	sub	sp, #56	; 0x38
 800e648:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800e64a:	4b21      	ldr	r3, [pc, #132]	; (800e6d0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800e64c:	681b      	ldr	r3, [r3, #0]
 800e64e:	f3bf 8f5b 	dmb	ish
 800e652:	f003 0301 	and.w	r3, r3, #1
 800e656:	2b00      	cmp	r3, #0
 800e658:	bf0c      	ite	eq
 800e65a:	2301      	moveq	r3, #1
 800e65c:	2300      	movne	r3, #0
 800e65e:	b2db      	uxtb	r3, r3
 800e660:	2b00      	cmp	r3, #0
 800e662:	d030      	beq.n	800e6c6 <_Z23getFont_verdana_20_4bppv+0x82>
 800e664:	481a      	ldr	r0, [pc, #104]	; (800e6d0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800e666:	f018 fcde 	bl	8027026 <__cxa_guard_acquire>
 800e66a:	4603      	mov	r3, r0
 800e66c:	2b00      	cmp	r3, #0
 800e66e:	bf14      	ite	ne
 800e670:	2301      	movne	r3, #1
 800e672:	2300      	moveq	r3, #0
 800e674:	b2db      	uxtb	r3, r3
 800e676:	2b00      	cmp	r3, #0
 800e678:	d025      	beq.n	800e6c6 <_Z23getFont_verdana_20_4bppv+0x82>
 800e67a:	2300      	movs	r3, #0
 800e67c:	930c      	str	r3, [sp, #48]	; 0x30
 800e67e:	2300      	movs	r3, #0
 800e680:	930b      	str	r3, [sp, #44]	; 0x2c
 800e682:	2300      	movs	r3, #0
 800e684:	930a      	str	r3, [sp, #40]	; 0x28
 800e686:	233f      	movs	r3, #63	; 0x3f
 800e688:	9309      	str	r3, [sp, #36]	; 0x24
 800e68a:	4b12      	ldr	r3, [pc, #72]	; (800e6d4 <_Z23getFont_verdana_20_4bppv+0x90>)
 800e68c:	9308      	str	r3, [sp, #32]
 800e68e:	4b12      	ldr	r3, [pc, #72]	; (800e6d8 <_Z23getFont_verdana_20_4bppv+0x94>)
 800e690:	9307      	str	r3, [sp, #28]
 800e692:	2301      	movs	r3, #1
 800e694:	9306      	str	r3, [sp, #24]
 800e696:	2301      	movs	r3, #1
 800e698:	9305      	str	r3, [sp, #20]
 800e69a:	2301      	movs	r3, #1
 800e69c:	9304      	str	r3, [sp, #16]
 800e69e:	2304      	movs	r3, #4
 800e6a0:	9303      	str	r3, [sp, #12]
 800e6a2:	2300      	movs	r3, #0
 800e6a4:	9302      	str	r3, [sp, #8]
 800e6a6:	2300      	movs	r3, #0
 800e6a8:	9301      	str	r3, [sp, #4]
 800e6aa:	2314      	movs	r3, #20
 800e6ac:	9300      	str	r3, [sp, #0]
 800e6ae:	2318      	movs	r3, #24
 800e6b0:	2241      	movs	r2, #65	; 0x41
 800e6b2:	490a      	ldr	r1, [pc, #40]	; (800e6dc <_Z23getFont_verdana_20_4bppv+0x98>)
 800e6b4:	480a      	ldr	r0, [pc, #40]	; (800e6e0 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800e6b6:	f7ff fec1 	bl	800e43c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800e6ba:	480a      	ldr	r0, [pc, #40]	; (800e6e4 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800e6bc:	f01a fbf2 	bl	8028ea4 <atexit>
 800e6c0:	4803      	ldr	r0, [pc, #12]	; (800e6d0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800e6c2:	f018 fcbc 	bl	802703e <__cxa_guard_release>
    return verdana_20_4bpp;
 800e6c6:	4b06      	ldr	r3, [pc, #24]	; (800e6e0 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800e6c8:	4618      	mov	r0, r3
 800e6ca:	46bd      	mov	sp, r7
 800e6cc:	bd80      	pop	{r7, pc}
 800e6ce:	bf00      	nop
 800e6d0:	20023d90 	.word	0x20023d90
 800e6d4:	0802df20 	.word	0x0802df20
 800e6d8:	0802e008 	.word	0x0802e008
 800e6dc:	0802db7c 	.word	0x0802db7c
 800e6e0:	20023d64 	.word	0x20023d64
 800e6e4:	0800e635 	.word	0x0800e635

0800e6e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800e6e8:	b580      	push	{r7, lr}
 800e6ea:	af00      	add	r7, sp, #0
 800e6ec:	4801      	ldr	r0, [pc, #4]	; (800e6f4 <__tcf_0+0xc>)
 800e6ee:	f7ff fe4b 	bl	800e388 <_ZN8touchgfx13GeneratedFontD1Ev>
 800e6f2:	bd80      	pop	{r7, pc}
 800e6f4:	20023d94 	.word	0x20023d94

0800e6f8 <_Z23getFont_verdana_40_4bppv>:
{
 800e6f8:	b580      	push	{r7, lr}
 800e6fa:	b08e      	sub	sp, #56	; 0x38
 800e6fc:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800e6fe:	4b21      	ldr	r3, [pc, #132]	; (800e784 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800e700:	681b      	ldr	r3, [r3, #0]
 800e702:	f3bf 8f5b 	dmb	ish
 800e706:	f003 0301 	and.w	r3, r3, #1
 800e70a:	2b00      	cmp	r3, #0
 800e70c:	bf0c      	ite	eq
 800e70e:	2301      	moveq	r3, #1
 800e710:	2300      	movne	r3, #0
 800e712:	b2db      	uxtb	r3, r3
 800e714:	2b00      	cmp	r3, #0
 800e716:	d030      	beq.n	800e77a <_Z23getFont_verdana_40_4bppv+0x82>
 800e718:	481a      	ldr	r0, [pc, #104]	; (800e784 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800e71a:	f018 fc84 	bl	8027026 <__cxa_guard_acquire>
 800e71e:	4603      	mov	r3, r0
 800e720:	2b00      	cmp	r3, #0
 800e722:	bf14      	ite	ne
 800e724:	2301      	movne	r3, #1
 800e726:	2300      	moveq	r3, #0
 800e728:	b2db      	uxtb	r3, r3
 800e72a:	2b00      	cmp	r3, #0
 800e72c:	d025      	beq.n	800e77a <_Z23getFont_verdana_40_4bppv+0x82>
 800e72e:	2300      	movs	r3, #0
 800e730:	930c      	str	r3, [sp, #48]	; 0x30
 800e732:	2300      	movs	r3, #0
 800e734:	930b      	str	r3, [sp, #44]	; 0x2c
 800e736:	2300      	movs	r3, #0
 800e738:	930a      	str	r3, [sp, #40]	; 0x28
 800e73a:	233f      	movs	r3, #63	; 0x3f
 800e73c:	9309      	str	r3, [sp, #36]	; 0x24
 800e73e:	4b12      	ldr	r3, [pc, #72]	; (800e788 <_Z23getFont_verdana_40_4bppv+0x90>)
 800e740:	9308      	str	r3, [sp, #32]
 800e742:	4b12      	ldr	r3, [pc, #72]	; (800e78c <_Z23getFont_verdana_40_4bppv+0x94>)
 800e744:	9307      	str	r3, [sp, #28]
 800e746:	2300      	movs	r3, #0
 800e748:	9306      	str	r3, [sp, #24]
 800e74a:	2300      	movs	r3, #0
 800e74c:	9305      	str	r3, [sp, #20]
 800e74e:	2301      	movs	r3, #1
 800e750:	9304      	str	r3, [sp, #16]
 800e752:	2304      	movs	r3, #4
 800e754:	9303      	str	r3, [sp, #12]
 800e756:	2300      	movs	r3, #0
 800e758:	9302      	str	r3, [sp, #8]
 800e75a:	2300      	movs	r3, #0
 800e75c:	9301      	str	r3, [sp, #4]
 800e75e:	2328      	movs	r3, #40	; 0x28
 800e760:	9300      	str	r3, [sp, #0]
 800e762:	2328      	movs	r3, #40	; 0x28
 800e764:	2201      	movs	r2, #1
 800e766:	490a      	ldr	r1, [pc, #40]	; (800e790 <_Z23getFont_verdana_40_4bppv+0x98>)
 800e768:	480a      	ldr	r0, [pc, #40]	; (800e794 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800e76a:	f7ff fe67 	bl	800e43c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800e76e:	480a      	ldr	r0, [pc, #40]	; (800e798 <_Z23getFont_verdana_40_4bppv+0xa0>)
 800e770:	f01a fb98 	bl	8028ea4 <atexit>
 800e774:	4803      	ldr	r0, [pc, #12]	; (800e784 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800e776:	f018 fc62 	bl	802703e <__cxa_guard_release>
    return verdana_40_4bpp;
 800e77a:	4b06      	ldr	r3, [pc, #24]	; (800e794 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800e77c:	4618      	mov	r0, r3
 800e77e:	46bd      	mov	sp, r7
 800e780:	bd80      	pop	{r7, pc}
 800e782:	bf00      	nop
 800e784:	20023dc0 	.word	0x20023dc0
 800e788:	0802e000 	.word	0x0802e000
 800e78c:	0802e00c 	.word	0x0802e00c
 800e790:	0802df0c 	.word	0x0802df0c
 800e794:	20023d94 	.word	0x20023d94
 800e798:	0800e6e9 	.word	0x0800e6e9

0800e79c <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800e79c:	b480      	push	{r7}
 800e79e:	b083      	sub	sp, #12
 800e7a0:	af00      	add	r7, sp, #0
 800e7a2:	6078      	str	r0, [r7, #4]
 800e7a4:	6039      	str	r1, [r7, #0]
 800e7a6:	683b      	ldr	r3, [r7, #0]
 800e7a8:	4618      	mov	r0, r3
 800e7aa:	370c      	adds	r7, #12
 800e7ac:	46bd      	mov	sp, r7
 800e7ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7b2:	4770      	bx	lr

0800e7b4 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800e7b4:	b480      	push	{r7}
 800e7b6:	b083      	sub	sp, #12
 800e7b8:	af00      	add	r7, sp, #0
 800e7ba:	6078      	str	r0, [r7, #4]
 800e7bc:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800e7be:	bf00      	nop
 800e7c0:	370c      	adds	r7, #12
 800e7c2:	46bd      	mov	sp, r7
 800e7c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7c8:	4770      	bx	lr

0800e7ca <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800e7ca:	b480      	push	{r7}
 800e7cc:	b083      	sub	sp, #12
 800e7ce:	af00      	add	r7, sp, #0
 800e7d0:	6078      	str	r0, [r7, #4]
 800e7d2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800e7d4:	bf00      	nop
 800e7d6:	370c      	adds	r7, #12
 800e7d8:	46bd      	mov	sp, r7
 800e7da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7de:	4770      	bx	lr

0800e7e0 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800e7e0:	b480      	push	{r7}
 800e7e2:	b083      	sub	sp, #12
 800e7e4:	af00      	add	r7, sp, #0
 800e7e6:	6078      	str	r0, [r7, #4]
 800e7e8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800e7ea:	bf00      	nop
 800e7ec:	370c      	adds	r7, #12
 800e7ee:	46bd      	mov	sp, r7
 800e7f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7f4:	4770      	bx	lr

0800e7f6 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800e7f6:	b480      	push	{r7}
 800e7f8:	b083      	sub	sp, #12
 800e7fa:	af00      	add	r7, sp, #0
 800e7fc:	6078      	str	r0, [r7, #4]
 800e7fe:	460b      	mov	r3, r1
 800e800:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800e802:	bf00      	nop
 800e804:	370c      	adds	r7, #12
 800e806:	46bd      	mov	sp, r7
 800e808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e80c:	4770      	bx	lr

0800e80e <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800e80e:	b480      	push	{r7}
 800e810:	b083      	sub	sp, #12
 800e812:	af00      	add	r7, sp, #0
 800e814:	6078      	str	r0, [r7, #4]
    {
    }
 800e816:	bf00      	nop
 800e818:	370c      	adds	r7, #12
 800e81a:	46bd      	mov	sp, r7
 800e81c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e820:	4770      	bx	lr

0800e822 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800e822:	b480      	push	{r7}
 800e824:	b083      	sub	sp, #12
 800e826:	af00      	add	r7, sp, #0
 800e828:	6078      	str	r0, [r7, #4]
    {
    }
 800e82a:	bf00      	nop
 800e82c:	370c      	adds	r7, #12
 800e82e:	46bd      	mov	sp, r7
 800e830:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e834:	4770      	bx	lr
	...

0800e838 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800e838:	b480      	push	{r7}
 800e83a:	b083      	sub	sp, #12
 800e83c:	af00      	add	r7, sp, #0
 800e83e:	6078      	str	r0, [r7, #4]
    {
 800e840:	4a04      	ldr	r2, [pc, #16]	; (800e854 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800e842:	687b      	ldr	r3, [r7, #4]
 800e844:	601a      	str	r2, [r3, #0]
    }
 800e846:	687b      	ldr	r3, [r7, #4]
 800e848:	4618      	mov	r0, r3
 800e84a:	370c      	adds	r7, #12
 800e84c:	46bd      	mov	sp, r7
 800e84e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e852:	4770      	bx	lr
 800e854:	0802b2d8 	.word	0x0802b2d8

0800e858 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800e858:	b580      	push	{r7, lr}
 800e85a:	b082      	sub	sp, #8
 800e85c:	af00      	add	r7, sp, #0
 800e85e:	6078      	str	r0, [r7, #4]
    }
 800e860:	6878      	ldr	r0, [r7, #4]
 800e862:	f7ff ffe9 	bl	800e838 <_ZN8touchgfx15UIEventListenerD1Ev>
 800e866:	2104      	movs	r1, #4
 800e868:	6878      	ldr	r0, [r7, #4]
 800e86a:	f018 fbda 	bl	8027022 <_ZdlPvj>
 800e86e:	687b      	ldr	r3, [r7, #4]
 800e870:	4618      	mov	r0, r3
 800e872:	3708      	adds	r7, #8
 800e874:	46bd      	mov	sp, r7
 800e876:	bd80      	pop	{r7, pc}

0800e878 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800e878:	b480      	push	{r7}
 800e87a:	b083      	sub	sp, #12
 800e87c:	af00      	add	r7, sp, #0
 800e87e:	6078      	str	r0, [r7, #4]
    {
    }
 800e880:	bf00      	nop
 800e882:	370c      	adds	r7, #12
 800e884:	46bd      	mov	sp, r7
 800e886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e88a:	4770      	bx	lr

0800e88c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800e88c:	b480      	push	{r7}
 800e88e:	b083      	sub	sp, #12
 800e890:	af00      	add	r7, sp, #0
 800e892:	6078      	str	r0, [r7, #4]
 800e894:	460b      	mov	r3, r1
 800e896:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800e898:	bf00      	nop
 800e89a:	370c      	adds	r7, #12
 800e89c:	46bd      	mov	sp, r7
 800e89e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8a2:	4770      	bx	lr

0800e8a4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800e8a4:	b480      	push	{r7}
 800e8a6:	b083      	sub	sp, #12
 800e8a8:	af00      	add	r7, sp, #0
 800e8aa:	6078      	str	r0, [r7, #4]
 800e8ac:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800e8ae:	687b      	ldr	r3, [r7, #4]
 800e8b0:	683a      	ldr	r2, [r7, #0]
 800e8b2:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800e8b6:	6810      	ldr	r0, [r2, #0]
 800e8b8:	6851      	ldr	r1, [r2, #4]
 800e8ba:	c303      	stmia	r3!, {r0, r1}
    }
 800e8bc:	bf00      	nop
 800e8be:	370c      	adds	r7, #12
 800e8c0:	46bd      	mov	sp, r7
 800e8c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8c6:	4770      	bx	lr

0800e8c8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800e8c8:	b580      	push	{r7, lr}
 800e8ca:	b082      	sub	sp, #8
 800e8cc:	af00      	add	r7, sp, #0
 800e8ce:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800e8d0:	687b      	ldr	r3, [r7, #4]
 800e8d2:	3304      	adds	r3, #4
 800e8d4:	4618      	mov	r0, r3
 800e8d6:	f007 feb3 	bl	8016640 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800e8da:	bf00      	nop
 800e8dc:	3708      	adds	r7, #8
 800e8de:	46bd      	mov	sp, r7
 800e8e0:	bd80      	pop	{r7, pc}
	...

0800e8e4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800e8e4:	b480      	push	{r7}
 800e8e6:	b083      	sub	sp, #12
 800e8e8:	af00      	add	r7, sp, #0
 800e8ea:	6078      	str	r0, [r7, #4]
    {
 800e8ec:	4a04      	ldr	r2, [pc, #16]	; (800e900 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800e8ee:	687b      	ldr	r3, [r7, #4]
 800e8f0:	601a      	str	r2, [r3, #0]
    }
 800e8f2:	687b      	ldr	r3, [r7, #4]
 800e8f4:	4618      	mov	r0, r3
 800e8f6:	370c      	adds	r7, #12
 800e8f8:	46bd      	mov	sp, r7
 800e8fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8fe:	4770      	bx	lr
 800e900:	0802b2c0 	.word	0x0802b2c0

0800e904 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800e904:	b580      	push	{r7, lr}
 800e906:	b082      	sub	sp, #8
 800e908:	af00      	add	r7, sp, #0
 800e90a:	6078      	str	r0, [r7, #4]
    }
 800e90c:	6878      	ldr	r0, [r7, #4]
 800e90e:	f7ff ffe9 	bl	800e8e4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800e912:	2104      	movs	r1, #4
 800e914:	6878      	ldr	r0, [r7, #4]
 800e916:	f018 fb84 	bl	8027022 <_ZdlPvj>
 800e91a:	687b      	ldr	r3, [r7, #4]
 800e91c:	4618      	mov	r0, r3
 800e91e:	3708      	adds	r7, #8
 800e920:	46bd      	mov	sp, r7
 800e922:	bd80      	pop	{r7, pc}

0800e924 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800e924:	b480      	push	{r7}
 800e926:	af00      	add	r7, sp, #0
    {
        return instance;
 800e928:	4b03      	ldr	r3, [pc, #12]	; (800e938 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800e92a:	681b      	ldr	r3, [r3, #0]
    }
 800e92c:	4618      	mov	r0, r3
 800e92e:	46bd      	mov	sp, r7
 800e930:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e934:	4770      	bx	lr
 800e936:	bf00      	nop
 800e938:	20025998 	.word	0x20025998

0800e93c <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800e93c:	b480      	push	{r7}
 800e93e:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800e940:	4b0b      	ldr	r3, [pc, #44]	; (800e970 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800e942:	681b      	ldr	r3, [r3, #0]
 800e944:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800e948:	2b00      	cmp	r3, #0
 800e94a:	d008      	beq.n	800e95e <_ZN8touchgfx3HAL3lcdEv+0x22>
 800e94c:	4b08      	ldr	r3, [pc, #32]	; (800e970 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800e94e:	681b      	ldr	r3, [r3, #0]
 800e950:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e952:	2b00      	cmp	r3, #0
 800e954:	d003      	beq.n	800e95e <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800e956:	4b06      	ldr	r3, [pc, #24]	; (800e970 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800e958:	681b      	ldr	r3, [r3, #0]
 800e95a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e95c:	e002      	b.n	800e964 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800e95e:	4b04      	ldr	r3, [pc, #16]	; (800e970 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800e960:	681b      	ldr	r3, [r3, #0]
 800e962:	689b      	ldr	r3, [r3, #8]
    }
 800e964:	4618      	mov	r0, r3
 800e966:	46bd      	mov	sp, r7
 800e968:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e96c:	4770      	bx	lr
 800e96e:	bf00      	nop
 800e970:	20025998 	.word	0x20025998

0800e974 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800e974:	b480      	push	{r7}
 800e976:	b083      	sub	sp, #12
 800e978:	af00      	add	r7, sp, #0
 800e97a:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800e97c:	4a07      	ldr	r2, [pc, #28]	; (800e99c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	601a      	str	r2, [r3, #0]
 800e982:	687b      	ldr	r3, [r7, #4]
 800e984:	2200      	movs	r2, #0
 800e986:	605a      	str	r2, [r3, #4]
 800e988:	687b      	ldr	r3, [r7, #4]
 800e98a:	2200      	movs	r2, #0
 800e98c:	721a      	strb	r2, [r3, #8]
    {
    }
 800e98e:	687b      	ldr	r3, [r7, #4]
 800e990:	4618      	mov	r0, r3
 800e992:	370c      	adds	r7, #12
 800e994:	46bd      	mov	sp, r7
 800e996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e99a:	4770      	bx	lr
 800e99c:	0802b29c 	.word	0x0802b29c

0800e9a0 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800e9a0:	b480      	push	{r7}
 800e9a2:	b083      	sub	sp, #12
 800e9a4:	af00      	add	r7, sp, #0
 800e9a6:	6078      	str	r0, [r7, #4]
    {
 800e9a8:	4a04      	ldr	r2, [pc, #16]	; (800e9bc <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800e9aa:	687b      	ldr	r3, [r7, #4]
 800e9ac:	601a      	str	r2, [r3, #0]
    }
 800e9ae:	687b      	ldr	r3, [r7, #4]
 800e9b0:	4618      	mov	r0, r3
 800e9b2:	370c      	adds	r7, #12
 800e9b4:	46bd      	mov	sp, r7
 800e9b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9ba:	4770      	bx	lr
 800e9bc:	0802b29c 	.word	0x0802b29c

0800e9c0 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800e9c0:	b580      	push	{r7, lr}
 800e9c2:	b082      	sub	sp, #8
 800e9c4:	af00      	add	r7, sp, #0
 800e9c6:	6078      	str	r0, [r7, #4]
    }
 800e9c8:	6878      	ldr	r0, [r7, #4]
 800e9ca:	f7ff ffe9 	bl	800e9a0 <_ZN8touchgfx10TransitionD1Ev>
 800e9ce:	210c      	movs	r1, #12
 800e9d0:	6878      	ldr	r0, [r7, #4]
 800e9d2:	f018 fb26 	bl	8027022 <_ZdlPvj>
 800e9d6:	687b      	ldr	r3, [r7, #4]
 800e9d8:	4618      	mov	r0, r3
 800e9da:	3708      	adds	r7, #8
 800e9dc:	46bd      	mov	sp, r7
 800e9de:	bd80      	pop	{r7, pc}

0800e9e0 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800e9e0:	b480      	push	{r7}
 800e9e2:	b083      	sub	sp, #12
 800e9e4:	af00      	add	r7, sp, #0
 800e9e6:	6078      	str	r0, [r7, #4]
    {
    }
 800e9e8:	bf00      	nop
 800e9ea:	370c      	adds	r7, #12
 800e9ec:	46bd      	mov	sp, r7
 800e9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9f2:	4770      	bx	lr

0800e9f4 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800e9f4:	b480      	push	{r7}
 800e9f6:	b083      	sub	sp, #12
 800e9f8:	af00      	add	r7, sp, #0
 800e9fa:	6078      	str	r0, [r7, #4]
    {
    }
 800e9fc:	bf00      	nop
 800e9fe:	370c      	adds	r7, #12
 800ea00:	46bd      	mov	sp, r7
 800ea02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea06:	4770      	bx	lr

0800ea08 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800ea08:	b480      	push	{r7}
 800ea0a:	b083      	sub	sp, #12
 800ea0c:	af00      	add	r7, sp, #0
 800ea0e:	6078      	str	r0, [r7, #4]
    {
    }
 800ea10:	bf00      	nop
 800ea12:	370c      	adds	r7, #12
 800ea14:	46bd      	mov	sp, r7
 800ea16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea1a:	4770      	bx	lr

0800ea1c <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800ea1c:	b580      	push	{r7, lr}
 800ea1e:	b082      	sub	sp, #8
 800ea20:	af00      	add	r7, sp, #0
 800ea22:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800ea24:	f007 fdce 	bl	80165c4 <_ZN8touchgfx11Application11getInstanceEv>
 800ea28:	4603      	mov	r3, r0
 800ea2a:	681a      	ldr	r2, [r3, #0]
 800ea2c:	323c      	adds	r2, #60	; 0x3c
 800ea2e:	6812      	ldr	r2, [r2, #0]
 800ea30:	4618      	mov	r0, r3
 800ea32:	4790      	blx	r2
    }
 800ea34:	bf00      	nop
 800ea36:	3708      	adds	r7, #8
 800ea38:	46bd      	mov	sp, r7
 800ea3a:	bd80      	pop	{r7, pc}

0800ea3c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800ea3c:	b480      	push	{r7}
 800ea3e:	b083      	sub	sp, #12
 800ea40:	af00      	add	r7, sp, #0
 800ea42:	6078      	str	r0, [r7, #4]
 800ea44:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800ea46:	687b      	ldr	r3, [r7, #4]
 800ea48:	683a      	ldr	r2, [r7, #0]
 800ea4a:	605a      	str	r2, [r3, #4]
    }
 800ea4c:	bf00      	nop
 800ea4e:	370c      	adds	r7, #12
 800ea50:	46bd      	mov	sp, r7
 800ea52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea56:	4770      	bx	lr

0800ea58 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800ea58:	b580      	push	{r7, lr}
 800ea5a:	b082      	sub	sp, #8
 800ea5c:	af00      	add	r7, sp, #0
 800ea5e:	6078      	str	r0, [r7, #4]
 800ea60:	4a05      	ldr	r2, [pc, #20]	; (800ea78 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800ea62:	687b      	ldr	r3, [r7, #4]
 800ea64:	601a      	str	r2, [r3, #0]
 800ea66:	687b      	ldr	r3, [r7, #4]
 800ea68:	4618      	mov	r0, r3
 800ea6a:	f7ff fee5 	bl	800e838 <_ZN8touchgfx15UIEventListenerD1Ev>
 800ea6e:	687b      	ldr	r3, [r7, #4]
 800ea70:	4618      	mov	r0, r3
 800ea72:	3708      	adds	r7, #8
 800ea74:	46bd      	mov	sp, r7
 800ea76:	bd80      	pop	{r7, pc}
 800ea78:	0802bfc0 	.word	0x0802bfc0

0800ea7c <_ZN8touchgfx11ApplicationD0Ev>:
 800ea7c:	b580      	push	{r7, lr}
 800ea7e:	b082      	sub	sp, #8
 800ea80:	af00      	add	r7, sp, #0
 800ea82:	6078      	str	r0, [r7, #4]
 800ea84:	6878      	ldr	r0, [r7, #4]
 800ea86:	f7ff ffe7 	bl	800ea58 <_ZN8touchgfx11ApplicationD1Ev>
 800ea8a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800ea8e:	6878      	ldr	r0, [r7, #4]
 800ea90:	f018 fac7 	bl	8027022 <_ZdlPvj>
 800ea94:	687b      	ldr	r3, [r7, #4]
 800ea96:	4618      	mov	r0, r3
 800ea98:	3708      	adds	r7, #8
 800ea9a:	46bd      	mov	sp, r7
 800ea9c:	bd80      	pop	{r7, pc}
	...

0800eaa0 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800eaa0:	b580      	push	{r7, lr}
 800eaa2:	b082      	sub	sp, #8
 800eaa4:	af00      	add	r7, sp, #0
 800eaa6:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800eaa8:	687b      	ldr	r3, [r7, #4]
 800eaaa:	4618      	mov	r0, r3
 800eaac:	f007 fe96 	bl	80167dc <_ZN8touchgfx11ApplicationC1Ev>
 800eab0:	4a09      	ldr	r2, [pc, #36]	; (800ead8 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800eab2:	687b      	ldr	r3, [r7, #4]
 800eab4:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800eab6:	687b      	ldr	r3, [r7, #4]
 800eab8:	2200      	movs	r2, #0
 800eaba:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800eabe:	687b      	ldr	r3, [r7, #4]
 800eac0:	2200      	movs	r2, #0
 800eac2:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800eac6:	687b      	ldr	r3, [r7, #4]
 800eac8:	4a04      	ldr	r2, [pc, #16]	; (800eadc <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800eaca:	6013      	str	r3, [r2, #0]
    }
 800eacc:	687b      	ldr	r3, [r7, #4]
 800eace:	4618      	mov	r0, r3
 800ead0:	3708      	adds	r7, #8
 800ead2:	46bd      	mov	sp, r7
 800ead4:	bd80      	pop	{r7, pc}
 800ead6:	bf00      	nop
 800ead8:	0802b248 	.word	0x0802b248
 800eadc:	200259e4 	.word	0x200259e4

0800eae0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800eae0:	b580      	push	{r7, lr}
 800eae2:	b082      	sub	sp, #8
 800eae4:	af00      	add	r7, sp, #0
 800eae6:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800eae8:	6878      	ldr	r0, [r7, #4]
 800eaea:	f000 f804 	bl	800eaf6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800eaee:	bf00      	nop
 800eaf0:	3708      	adds	r7, #8
 800eaf2:	46bd      	mov	sp, r7
 800eaf4:	bd80      	pop	{r7, pc}

0800eaf6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800eaf6:	b580      	push	{r7, lr}
 800eaf8:	b082      	sub	sp, #8
 800eafa:	af00      	add	r7, sp, #0
 800eafc:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800eafe:	687b      	ldr	r3, [r7, #4]
 800eb00:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800eb04:	2b00      	cmp	r3, #0
 800eb06:	d00f      	beq.n	800eb28 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800eb08:	687b      	ldr	r3, [r7, #4]
 800eb0a:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800eb0e:	687b      	ldr	r3, [r7, #4]
 800eb10:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800eb14:	681b      	ldr	r3, [r3, #0]
 800eb16:	330c      	adds	r3, #12
 800eb18:	681b      	ldr	r3, [r3, #0]
 800eb1a:	4610      	mov	r0, r2
 800eb1c:	4798      	blx	r3
 800eb1e:	4603      	mov	r3, r0
 800eb20:	2b00      	cmp	r3, #0
 800eb22:	d001      	beq.n	800eb28 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800eb24:	2301      	movs	r3, #1
 800eb26:	e000      	b.n	800eb2a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800eb28:	2300      	movs	r3, #0
 800eb2a:	2b00      	cmp	r3, #0
 800eb2c:	d00e      	beq.n	800eb4c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800eb2e:	687b      	ldr	r3, [r7, #4]
 800eb30:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800eb34:	687b      	ldr	r3, [r7, #4]
 800eb36:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800eb3a:	681b      	ldr	r3, [r3, #0]
 800eb3c:	3308      	adds	r3, #8
 800eb3e:	681b      	ldr	r3, [r3, #0]
 800eb40:	4610      	mov	r0, r2
 800eb42:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800eb44:	687b      	ldr	r3, [r7, #4]
 800eb46:	2200      	movs	r2, #0
 800eb48:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800eb4c:	bf00      	nop
 800eb4e:	3708      	adds	r7, #8
 800eb50:	46bd      	mov	sp, r7
 800eb52:	bd80      	pop	{r7, pc}

0800eb54 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800eb54:	b480      	push	{r7}
 800eb56:	b083      	sub	sp, #12
 800eb58:	af00      	add	r7, sp, #0
 800eb5a:	6078      	str	r0, [r7, #4]
 800eb5c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800eb5e:	687b      	ldr	r3, [r7, #4]
 800eb60:	683a      	ldr	r2, [r7, #0]
 800eb62:	601a      	str	r2, [r3, #0]
    }
 800eb64:	bf00      	nop
 800eb66:	370c      	adds	r7, #12
 800eb68:	46bd      	mov	sp, r7
 800eb6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb6e:	4770      	bx	lr

0800eb70 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800eb70:	b580      	push	{r7, lr}
 800eb72:	b082      	sub	sp, #8
 800eb74:	af00      	add	r7, sp, #0
 800eb76:	6078      	str	r0, [r7, #4]
 800eb78:	4a05      	ldr	r2, [pc, #20]	; (800eb90 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800eb7a:	687b      	ldr	r3, [r7, #4]
 800eb7c:	601a      	str	r2, [r3, #0]
 800eb7e:	687b      	ldr	r3, [r7, #4]
 800eb80:	4618      	mov	r0, r3
 800eb82:	f7ff ff69 	bl	800ea58 <_ZN8touchgfx11ApplicationD1Ev>
 800eb86:	687b      	ldr	r3, [r7, #4]
 800eb88:	4618      	mov	r0, r3
 800eb8a:	3708      	adds	r7, #8
 800eb8c:	46bd      	mov	sp, r7
 800eb8e:	bd80      	pop	{r7, pc}
 800eb90:	0802b248 	.word	0x0802b248

0800eb94 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800eb94:	b580      	push	{r7, lr}
 800eb96:	b082      	sub	sp, #8
 800eb98:	af00      	add	r7, sp, #0
 800eb9a:	6078      	str	r0, [r7, #4]
 800eb9c:	6878      	ldr	r0, [r7, #4]
 800eb9e:	f7ff ffe7 	bl	800eb70 <_ZN8touchgfx14MVPApplicationD1Ev>
 800eba2:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800eba6:	6878      	ldr	r0, [r7, #4]
 800eba8:	f018 fa3b 	bl	8027022 <_ZdlPvj>
 800ebac:	687b      	ldr	r3, [r7, #4]
 800ebae:	4618      	mov	r0, r3
 800ebb0:	3708      	adds	r7, #8
 800ebb2:	46bd      	mov	sp, r7
 800ebb4:	bd80      	pop	{r7, pc}
	...

0800ebb8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800ebb8:	b580      	push	{r7, lr}
 800ebba:	b082      	sub	sp, #8
 800ebbc:	af00      	add	r7, sp, #0
 800ebbe:	6078      	str	r0, [r7, #4]
 800ebc0:	4a08      	ldr	r2, [pc, #32]	; (800ebe4 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800ebc2:	687b      	ldr	r3, [r7, #4]
 800ebc4:	601a      	str	r2, [r3, #0]
 800ebc6:	687b      	ldr	r3, [r7, #4]
 800ebc8:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ebcc:	4618      	mov	r0, r3
 800ebce:	f000 facd 	bl	800f16c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800ebd2:	687b      	ldr	r3, [r7, #4]
 800ebd4:	4618      	mov	r0, r3
 800ebd6:	f7ff ffcb 	bl	800eb70 <_ZN8touchgfx14MVPApplicationD1Ev>
 800ebda:	687b      	ldr	r3, [r7, #4]
 800ebdc:	4618      	mov	r0, r3
 800ebde:	3708      	adds	r7, #8
 800ebe0:	46bd      	mov	sp, r7
 800ebe2:	bd80      	pop	{r7, pc}
 800ebe4:	0802b1dc 	.word	0x0802b1dc

0800ebe8 <_ZN23FrontendApplicationBaseD0Ev>:
 800ebe8:	b580      	push	{r7, lr}
 800ebea:	b082      	sub	sp, #8
 800ebec:	af00      	add	r7, sp, #0
 800ebee:	6078      	str	r0, [r7, #4]
 800ebf0:	6878      	ldr	r0, [r7, #4]
 800ebf2:	f7ff ffe1 	bl	800ebb8 <_ZN23FrontendApplicationBaseD1Ev>
 800ebf6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800ebfa:	6878      	ldr	r0, [r7, #4]
 800ebfc:	f018 fa11 	bl	8027022 <_ZdlPvj>
 800ec00:	687b      	ldr	r3, [r7, #4]
 800ec02:	4618      	mov	r0, r3
 800ec04:	3708      	adds	r7, #8
 800ec06:	46bd      	mov	sp, r7
 800ec08:	bd80      	pop	{r7, pc}

0800ec0a <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800ec0a:	b580      	push	{r7, lr}
 800ec0c:	b082      	sub	sp, #8
 800ec0e:	af00      	add	r7, sp, #0
 800ec10:	6078      	str	r0, [r7, #4]
    {
        gotoScreen1ScreenNoTransition();
 800ec12:	6878      	ldr	r0, [r7, #4]
 800ec14:	f000 f882 	bl	800ed1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800ec18:	bf00      	nop
 800ec1a:	3708      	adds	r7, #8
 800ec1c:	46bd      	mov	sp, r7
 800ec1e:	bd80      	pop	{r7, pc}

0800ec20 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800ec20:	b480      	push	{r7}
 800ec22:	b083      	sub	sp, #12
 800ec24:	af00      	add	r7, sp, #0
 800ec26:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800ec28:	687b      	ldr	r3, [r7, #4]
 800ec2a:	2201      	movs	r2, #1
 800ec2c:	721a      	strb	r2, [r3, #8]
    }
 800ec2e:	bf00      	nop
 800ec30:	370c      	adds	r7, #12
 800ec32:	46bd      	mov	sp, r7
 800ec34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec38:	4770      	bx	lr

0800ec3a <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800ec3a:	b480      	push	{r7}
 800ec3c:	b083      	sub	sp, #12
 800ec3e:	af00      	add	r7, sp, #0
 800ec40:	6078      	str	r0, [r7, #4]
 800ec42:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800ec44:	687b      	ldr	r3, [r7, #4]
 800ec46:	683a      	ldr	r2, [r7, #0]
 800ec48:	605a      	str	r2, [r3, #4]
    }
 800ec4a:	bf00      	nop
 800ec4c:	370c      	adds	r7, #12
 800ec4e:	46bd      	mov	sp, r7
 800ec50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec54:	4770      	bx	lr
	...

0800ec58 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800ec58:	b580      	push	{r7, lr}
 800ec5a:	b084      	sub	sp, #16
 800ec5c:	af00      	add	r7, sp, #0
 800ec5e:	60f8      	str	r0, [r7, #12]
 800ec60:	60b9      	str	r1, [r7, #8]
 800ec62:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800ec64:	68fb      	ldr	r3, [r7, #12]
 800ec66:	4618      	mov	r0, r3
 800ec68:	f7ff ff1a 	bl	800eaa0 <_ZN8touchgfx14MVPApplicationC1Ev>
 800ec6c:	4a16      	ldr	r2, [pc, #88]	; (800ecc8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800ec6e:	68fb      	ldr	r3, [r7, #12]
 800ec70:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800ec72:	68fb      	ldr	r3, [r7, #12]
 800ec74:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ec78:	4618      	mov	r0, r3
 800ec7a:	f000 f8a5 	bl	800edc8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800ec7e:	68fb      	ldr	r3, [r7, #12]
 800ec80:	687a      	ldr	r2, [r7, #4]
 800ec82:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800ec86:	68fb      	ldr	r3, [r7, #12]
 800ec88:	68ba      	ldr	r2, [r7, #8]
 800ec8a:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800ec8e:	f7ff fe49 	bl	800e924 <_ZN8touchgfx3HAL11getInstanceEv>
 800ec92:	4603      	mov	r3, r0
 800ec94:	681a      	ldr	r2, [r3, #0]
 800ec96:	3208      	adds	r2, #8
 800ec98:	6812      	ldr	r2, [r2, #0]
 800ec9a:	2100      	movs	r1, #0
 800ec9c:	4618      	mov	r0, r3
 800ec9e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800eca0:	2000      	movs	r0, #0
 800eca2:	f001 ff47 	bl	8010b34 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800eca6:	f7ff fe49 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 800ecaa:	4603      	mov	r3, r0
 800ecac:	4618      	mov	r0, r3
 800ecae:	f010 fe66 	bl	801f97e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800ecb2:	f7ff fe43 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 800ecb6:	4603      	mov	r3, r0
 800ecb8:	4618      	mov	r0, r3
 800ecba:	f010 fedb 	bl	801fa74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800ecbe:	68fb      	ldr	r3, [r7, #12]
 800ecc0:	4618      	mov	r0, r3
 800ecc2:	3710      	adds	r7, #16
 800ecc4:	46bd      	mov	sp, r7
 800ecc6:	bd80      	pop	{r7, pc}
 800ecc8:	0802b1dc 	.word	0x0802b1dc

0800eccc <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800eccc:	b480      	push	{r7}
 800ecce:	b083      	sub	sp, #12
 800ecd0:	af00      	add	r7, sp, #0
 800ecd2:	6078      	str	r0, [r7, #4]
 800ecd4:	6039      	str	r1, [r7, #0]
 800ecd6:	687b      	ldr	r3, [r7, #4]
 800ecd8:	4618      	mov	r0, r3
 800ecda:	370c      	adds	r7, #12
 800ecdc:	46bd      	mov	sp, r7
 800ecde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ece2:	4770      	bx	lr

0800ece4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800ece4:	b580      	push	{r7, lr}
 800ece6:	b082      	sub	sp, #8
 800ece8:	af00      	add	r7, sp, #0
 800ecea:	6078      	str	r0, [r7, #4]
 800ecec:	6039      	str	r1, [r7, #0]
 800ecee:	687b      	ldr	r3, [r7, #4]
 800ecf0:	683a      	ldr	r2, [r7, #0]
 800ecf2:	4611      	mov	r1, r2
 800ecf4:	4618      	mov	r0, r3
 800ecf6:	f7ff ffe9 	bl	800eccc <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800ecfa:	683b      	ldr	r3, [r7, #0]
 800ecfc:	685a      	ldr	r2, [r3, #4]
 800ecfe:	687b      	ldr	r3, [r7, #4]
 800ed00:	605a      	str	r2, [r3, #4]
 800ed02:	687b      	ldr	r3, [r7, #4]
 800ed04:	683a      	ldr	r2, [r7, #0]
 800ed06:	3308      	adds	r3, #8
 800ed08:	3208      	adds	r2, #8
 800ed0a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ed0e:	e883 0003 	stmia.w	r3, {r0, r1}
 800ed12:	687b      	ldr	r3, [r7, #4]
 800ed14:	4618      	mov	r0, r3
 800ed16:	3708      	adds	r7, #8
 800ed18:	46bd      	mov	sp, r7
 800ed1a:	bd80      	pop	{r7, pc}

0800ed1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 800ed1c:	b590      	push	{r4, r7, lr}
 800ed1e:	b089      	sub	sp, #36	; 0x24
 800ed20:	af00      	add	r7, sp, #0
 800ed22:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
 800ed24:	687b      	ldr	r3, [r7, #4]
 800ed26:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800ed2a:	4b10      	ldr	r3, [pc, #64]	; (800ed6c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 800ed2c:	61bb      	str	r3, [r7, #24]
 800ed2e:	2300      	movs	r3, #0
 800ed30:	61fb      	str	r3, [r7, #28]
 800ed32:	f107 0008 	add.w	r0, r7, #8
 800ed36:	f107 0318 	add.w	r3, r7, #24
 800ed3a:	cb0c      	ldmia	r3, {r2, r3}
 800ed3c:	6879      	ldr	r1, [r7, #4]
 800ed3e:	f000 f85f 	bl	800ee00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800ed42:	f107 0308 	add.w	r3, r7, #8
 800ed46:	4619      	mov	r1, r3
 800ed48:	4620      	mov	r0, r4
 800ed4a:	f7ff ffcb 	bl	800ece4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800ed4e:	f107 0308 	add.w	r3, r7, #8
 800ed52:	4618      	mov	r0, r3
 800ed54:	f000 fa0a 	bl	800f16c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800ed58:	687b      	ldr	r3, [r7, #4]
 800ed5a:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800ed5e:	687b      	ldr	r3, [r7, #4]
 800ed60:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800ed64:	bf00      	nop
 800ed66:	3724      	adds	r7, #36	; 0x24
 800ed68:	46bd      	mov	sp, r7
 800ed6a:	bd90      	pop	{r4, r7, pc}
 800ed6c:	0800ed71 	.word	0x0800ed71

0800ed70 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800ed70:	b580      	push	{r7, lr}
 800ed72:	b084      	sub	sp, #16
 800ed74:	af02      	add	r7, sp, #8
 800ed76:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800ed78:	687b      	ldr	r3, [r7, #4]
 800ed7a:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800ed7e:	687b      	ldr	r3, [r7, #4]
 800ed80:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800ed84:	461a      	mov	r2, r3
 800ed86:	687b      	ldr	r3, [r7, #4]
 800ed88:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800ed8c:	9300      	str	r3, [sp, #0]
 800ed8e:	4b04      	ldr	r3, [pc, #16]	; (800eda0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 800ed90:	4804      	ldr	r0, [pc, #16]	; (800eda4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 800ed92:	f000 f867 	bl	800ee64 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800ed96:	bf00      	nop
 800ed98:	3708      	adds	r7, #8
 800ed9a:	46bd      	mov	sp, r7
 800ed9c:	bd80      	pop	{r7, pc}
 800ed9e:	bf00      	nop
 800eda0:	200259d8 	.word	0x200259d8
 800eda4:	200259d4 	.word	0x200259d4

0800eda8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800eda8:	b480      	push	{r7}
 800edaa:	b083      	sub	sp, #12
 800edac:	af00      	add	r7, sp, #0
 800edae:	6078      	str	r0, [r7, #4]
 800edb0:	4a04      	ldr	r2, [pc, #16]	; (800edc4 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800edb2:	687b      	ldr	r3, [r7, #4]
 800edb4:	601a      	str	r2, [r3, #0]
 800edb6:	687b      	ldr	r3, [r7, #4]
 800edb8:	4618      	mov	r0, r3
 800edba:	370c      	adds	r7, #12
 800edbc:	46bd      	mov	sp, r7
 800edbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edc2:	4770      	bx	lr
 800edc4:	0802b2c0 	.word	0x0802b2c0

0800edc8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800edc8:	b580      	push	{r7, lr}
 800edca:	b082      	sub	sp, #8
 800edcc:	af00      	add	r7, sp, #0
 800edce:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800edd0:	687b      	ldr	r3, [r7, #4]
 800edd2:	4618      	mov	r0, r3
 800edd4:	f7ff ffe8 	bl	800eda8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800edd8:	4a08      	ldr	r2, [pc, #32]	; (800edfc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800edda:	687b      	ldr	r3, [r7, #4]
 800eddc:	601a      	str	r2, [r3, #0]
 800edde:	687b      	ldr	r3, [r7, #4]
 800ede0:	2200      	movs	r2, #0
 800ede2:	605a      	str	r2, [r3, #4]
 800ede4:	687b      	ldr	r3, [r7, #4]
 800ede6:	2200      	movs	r2, #0
 800ede8:	609a      	str	r2, [r3, #8]
 800edea:	687b      	ldr	r3, [r7, #4]
 800edec:	2200      	movs	r2, #0
 800edee:	60da      	str	r2, [r3, #12]
    {
    }
 800edf0:	687b      	ldr	r3, [r7, #4]
 800edf2:	4618      	mov	r0, r3
 800edf4:	3708      	adds	r7, #8
 800edf6:	46bd      	mov	sp, r7
 800edf8:	bd80      	pop	{r7, pc}
 800edfa:	bf00      	nop
 800edfc:	0802b230 	.word	0x0802b230

0800ee00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800ee00:	b580      	push	{r7, lr}
 800ee02:	b084      	sub	sp, #16
 800ee04:	af00      	add	r7, sp, #0
 800ee06:	60f8      	str	r0, [r7, #12]
 800ee08:	60b9      	str	r1, [r7, #8]
 800ee0a:	4639      	mov	r1, r7
 800ee0c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800ee10:	68fb      	ldr	r3, [r7, #12]
 800ee12:	4618      	mov	r0, r3
 800ee14:	f7ff ffc8 	bl	800eda8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800ee18:	4a08      	ldr	r2, [pc, #32]	; (800ee3c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800ee1a:	68fb      	ldr	r3, [r7, #12]
 800ee1c:	601a      	str	r2, [r3, #0]
 800ee1e:	68fb      	ldr	r3, [r7, #12]
 800ee20:	68ba      	ldr	r2, [r7, #8]
 800ee22:	605a      	str	r2, [r3, #4]
 800ee24:	68fb      	ldr	r3, [r7, #12]
 800ee26:	3308      	adds	r3, #8
 800ee28:	463a      	mov	r2, r7
 800ee2a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ee2e:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800ee32:	68fb      	ldr	r3, [r7, #12]
 800ee34:	4618      	mov	r0, r3
 800ee36:	3710      	adds	r7, #16
 800ee38:	46bd      	mov	sp, r7
 800ee3a:	bd80      	pop	{r7, pc}
 800ee3c:	0802b230 	.word	0x0802b230

0800ee40 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800ee40:	b580      	push	{r7, lr}
 800ee42:	b082      	sub	sp, #8
 800ee44:	af00      	add	r7, sp, #0
 800ee46:	6078      	str	r0, [r7, #4]
 800ee48:	687b      	ldr	r3, [r7, #4]
 800ee4a:	4618      	mov	r0, r3
 800ee4c:	f7ff fd92 	bl	800e974 <_ZN8touchgfx10TransitionC1Ev>
 800ee50:	4a03      	ldr	r2, [pc, #12]	; (800ee60 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800ee52:	687b      	ldr	r3, [r7, #4]
 800ee54:	601a      	str	r2, [r3, #0]
 800ee56:	687b      	ldr	r3, [r7, #4]
 800ee58:	4618      	mov	r0, r3
 800ee5a:	3708      	adds	r7, #8
 800ee5c:	46bd      	mov	sp, r7
 800ee5e:	bd80      	pop	{r7, pc}
 800ee60:	0802b1b8 	.word	0x0802b1b8

0800ee64 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800ee64:	b590      	push	{r4, r7, lr}
 800ee66:	b08f      	sub	sp, #60	; 0x3c
 800ee68:	af00      	add	r7, sp, #0
 800ee6a:	60f8      	str	r0, [r7, #12]
 800ee6c:	60b9      	str	r1, [r7, #8]
 800ee6e:	607a      	str	r2, [r7, #4]
 800ee70:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800ee72:	687b      	ldr	r3, [r7, #4]
 800ee74:	689a      	ldr	r2, [r3, #8]
 800ee76:	687b      	ldr	r3, [r7, #4]
 800ee78:	689b      	ldr	r3, [r3, #8]
 800ee7a:	681b      	ldr	r3, [r3, #0]
 800ee7c:	3320      	adds	r3, #32
 800ee7e:	681b      	ldr	r3, [r3, #0]
 800ee80:	4610      	mov	r0, r2
 800ee82:	4798      	blx	r3
 800ee84:	4603      	mov	r3, r0
 800ee86:	f5b3 7f01 	cmp.w	r3, #516	; 0x204
 800ee8a:	d205      	bcs.n	800ee98 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800ee8c:	4b7d      	ldr	r3, [pc, #500]	; (800f084 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800ee8e:	4a7e      	ldr	r2, [pc, #504]	; (800f088 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800ee90:	21a3      	movs	r1, #163	; 0xa3
 800ee92:	487e      	ldr	r0, [pc, #504]	; (800f08c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800ee94:	f019 ffe8 	bl	8028e68 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800ee98:	687b      	ldr	r3, [r7, #4]
 800ee9a:	685a      	ldr	r2, [r3, #4]
 800ee9c:	687b      	ldr	r3, [r7, #4]
 800ee9e:	685b      	ldr	r3, [r3, #4]
 800eea0:	681b      	ldr	r3, [r3, #0]
 800eea2:	3320      	adds	r3, #32
 800eea4:	681b      	ldr	r3, [r3, #0]
 800eea6:	4610      	mov	r0, r2
 800eea8:	4798      	blx	r3
 800eeaa:	4603      	mov	r3, r0
 800eeac:	2b0f      	cmp	r3, #15
 800eeae:	d805      	bhi.n	800eebc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800eeb0:	4b77      	ldr	r3, [pc, #476]	; (800f090 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800eeb2:	4a75      	ldr	r2, [pc, #468]	; (800f088 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800eeb4:	21a4      	movs	r1, #164	; 0xa4
 800eeb6:	4875      	ldr	r0, [pc, #468]	; (800f08c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800eeb8:	f019 ffd6 	bl	8028e68 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800eebc:	687b      	ldr	r3, [r7, #4]
 800eebe:	68da      	ldr	r2, [r3, #12]
 800eec0:	687b      	ldr	r3, [r7, #4]
 800eec2:	68db      	ldr	r3, [r3, #12]
 800eec4:	681b      	ldr	r3, [r3, #0]
 800eec6:	3320      	adds	r3, #32
 800eec8:	681b      	ldr	r3, [r3, #0]
 800eeca:	4610      	mov	r0, r2
 800eecc:	4798      	blx	r3
 800eece:	4603      	mov	r3, r0
 800eed0:	2b0b      	cmp	r3, #11
 800eed2:	d805      	bhi.n	800eee0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800eed4:	4b6f      	ldr	r3, [pc, #444]	; (800f094 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800eed6:	4a6c      	ldr	r2, [pc, #432]	; (800f088 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800eed8:	21a5      	movs	r1, #165	; 0xa5
 800eeda:	486c      	ldr	r0, [pc, #432]	; (800f08c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800eedc:	f019 ffc4 	bl	8028e68 <__assert_func>
 800eee0:	68fb      	ldr	r3, [r7, #12]
 800eee2:	62bb      	str	r3, [r7, #40]	; 0x28
 800eee4:	68bb      	ldr	r3, [r7, #8]
 800eee6:	627b      	str	r3, [r7, #36]	; 0x24
 800eee8:	683b      	ldr	r3, [r7, #0]
 800eeea:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800eeec:	f007 fb6a 	bl	80165c4 <_ZN8touchgfx11Application11getInstanceEv>
 800eef0:	4603      	mov	r3, r0
 800eef2:	4618      	mov	r0, r3
 800eef4:	f7ff fce8 	bl	800e8c8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800eef8:	6a3b      	ldr	r3, [r7, #32]
 800eefa:	681b      	ldr	r3, [r3, #0]
 800eefc:	2b00      	cmp	r3, #0
 800eefe:	d008      	beq.n	800ef12 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800ef00:	6a3b      	ldr	r3, [r7, #32]
 800ef02:	681a      	ldr	r2, [r3, #0]
 800ef04:	6a3b      	ldr	r3, [r7, #32]
 800ef06:	681b      	ldr	r3, [r3, #0]
 800ef08:	681b      	ldr	r3, [r3, #0]
 800ef0a:	330c      	adds	r3, #12
 800ef0c:	681b      	ldr	r3, [r3, #0]
 800ef0e:	4610      	mov	r0, r2
 800ef10:	4798      	blx	r3
    if (*currentTrans)
 800ef12:	6a3b      	ldr	r3, [r7, #32]
 800ef14:	681b      	ldr	r3, [r3, #0]
 800ef16:	2b00      	cmp	r3, #0
 800ef18:	d007      	beq.n	800ef2a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800ef1a:	6a3b      	ldr	r3, [r7, #32]
 800ef1c:	681a      	ldr	r2, [r3, #0]
 800ef1e:	6a3b      	ldr	r3, [r7, #32]
 800ef20:	681b      	ldr	r3, [r3, #0]
 800ef22:	681b      	ldr	r3, [r3, #0]
 800ef24:	681b      	ldr	r3, [r3, #0]
 800ef26:	4610      	mov	r0, r2
 800ef28:	4798      	blx	r3
    if (*currentScreen)
 800ef2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ef2c:	681b      	ldr	r3, [r3, #0]
 800ef2e:	2b00      	cmp	r3, #0
 800ef30:	d008      	beq.n	800ef44 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800ef32:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ef34:	681a      	ldr	r2, [r3, #0]
 800ef36:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ef38:	681b      	ldr	r3, [r3, #0]
 800ef3a:	681b      	ldr	r3, [r3, #0]
 800ef3c:	3314      	adds	r3, #20
 800ef3e:	681b      	ldr	r3, [r3, #0]
 800ef40:	4610      	mov	r0, r2
 800ef42:	4798      	blx	r3
    if (*currentPresenter)
 800ef44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ef46:	681b      	ldr	r3, [r3, #0]
 800ef48:	2b00      	cmp	r3, #0
 800ef4a:	d008      	beq.n	800ef5e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800ef4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ef4e:	681a      	ldr	r2, [r3, #0]
 800ef50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ef52:	681b      	ldr	r3, [r3, #0]
 800ef54:	681b      	ldr	r3, [r3, #0]
 800ef56:	3304      	adds	r3, #4
 800ef58:	681b      	ldr	r3, [r3, #0]
 800ef5a:	4610      	mov	r0, r2
 800ef5c:	4798      	blx	r3
    if (*currentScreen)
 800ef5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ef60:	681b      	ldr	r3, [r3, #0]
 800ef62:	2b00      	cmp	r3, #0
 800ef64:	d007      	beq.n	800ef76 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800ef66:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ef68:	681a      	ldr	r2, [r3, #0]
 800ef6a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ef6c:	681b      	ldr	r3, [r3, #0]
 800ef6e:	681b      	ldr	r3, [r3, #0]
 800ef70:	681b      	ldr	r3, [r3, #0]
 800ef72:	4610      	mov	r0, r2
 800ef74:	4798      	blx	r3
    if (*currentPresenter)
 800ef76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ef78:	681b      	ldr	r3, [r3, #0]
 800ef7a:	2b00      	cmp	r3, #0
 800ef7c:	d008      	beq.n	800ef90 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800ef7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ef80:	681a      	ldr	r2, [r3, #0]
 800ef82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ef84:	681b      	ldr	r3, [r3, #0]
 800ef86:	681b      	ldr	r3, [r3, #0]
 800ef88:	3308      	adds	r3, #8
 800ef8a:	681b      	ldr	r3, [r3, #0]
 800ef8c:	4610      	mov	r0, r2
 800ef8e:	4798      	blx	r3
}
 800ef90:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800ef92:	687b      	ldr	r3, [r7, #4]
 800ef94:	68db      	ldr	r3, [r3, #12]
 800ef96:	2100      	movs	r1, #0
 800ef98:	4618      	mov	r0, r3
 800ef9a:	f000 f87d 	bl	800f098 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800ef9e:	4603      	mov	r3, r0
 800efa0:	4619      	mov	r1, r3
 800efa2:	200c      	movs	r0, #12
 800efa4:	f7ff fbfa 	bl	800e79c <_ZnwjPv>
 800efa8:	4604      	mov	r4, r0
 800efaa:	4620      	mov	r0, r4
 800efac:	f7ff ff48 	bl	800ee40 <_ZN8touchgfx12NoTransitionC1Ev>
 800efb0:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800efb2:	687b      	ldr	r3, [r7, #4]
 800efb4:	689b      	ldr	r3, [r3, #8]
 800efb6:	2100      	movs	r1, #0
 800efb8:	4618      	mov	r0, r3
 800efba:	f000 f880 	bl	800f0be <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 800efbe:	4603      	mov	r3, r0
 800efc0:	4619      	mov	r1, r3
 800efc2:	f44f 7001 	mov.w	r0, #516	; 0x204
 800efc6:	f7ff fbe9 	bl	800e79c <_ZnwjPv>
 800efca:	4604      	mov	r4, r0
 800efcc:	4620      	mov	r0, r4
 800efce:	f002 f807 	bl	8010fe0 <_ZN11Screen1ViewC1Ev>
 800efd2:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800efd4:	687b      	ldr	r3, [r7, #4]
 800efd6:	685b      	ldr	r3, [r3, #4]
 800efd8:	2100      	movs	r1, #0
 800efda:	4618      	mov	r0, r3
 800efdc:	f000 f882 	bl	800f0e4 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 800efe0:	4603      	mov	r3, r0
 800efe2:	4619      	mov	r1, r3
 800efe4:	2010      	movs	r0, #16
 800efe6:	f7ff fbd9 	bl	800e79c <_ZnwjPv>
 800efea:	4604      	mov	r4, r0
 800efec:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800efee:	4620      	mov	r0, r4
 800eff0:	f001 ff86 	bl	8010f00 <_ZN16Screen1PresenterC1ER11Screen1View>
 800eff4:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800eff6:	683b      	ldr	r3, [r7, #0]
 800eff8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800effa:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800effc:	68bb      	ldr	r3, [r7, #8]
 800effe:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800f000:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800f002:	68fb      	ldr	r3, [r7, #12]
 800f004:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800f006:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800f008:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800f00a:	2b00      	cmp	r3, #0
 800f00c:	d002      	beq.n	800f014 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800f00e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800f010:	3304      	adds	r3, #4
 800f012:	e000      	b.n	800f016 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800f014:	2300      	movs	r3, #0
 800f016:	4619      	mov	r1, r3
 800f018:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800f01a:	f7ff fd9b 	bl	800eb54 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800f01e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800f020:	3304      	adds	r3, #4
 800f022:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800f024:	4618      	mov	r0, r3
 800f026:	f7ff fe08 	bl	800ec3a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800f02a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800f02c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800f02e:	4618      	mov	r0, r3
 800f030:	f000 f86b 	bl	800f10a <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>
 800f034:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800f036:	61fb      	str	r3, [r7, #28]
 800f038:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800f03a:	61bb      	str	r3, [r7, #24]
 800f03c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800f03e:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800f040:	69fb      	ldr	r3, [r7, #28]
 800f042:	681b      	ldr	r3, [r3, #0]
 800f044:	330c      	adds	r3, #12
 800f046:	681b      	ldr	r3, [r3, #0]
 800f048:	69f8      	ldr	r0, [r7, #28]
 800f04a:	4798      	blx	r3
    newPresenter->activate();
 800f04c:	69bb      	ldr	r3, [r7, #24]
 800f04e:	681b      	ldr	r3, [r3, #0]
 800f050:	681b      	ldr	r3, [r3, #0]
 800f052:	69b8      	ldr	r0, [r7, #24]
 800f054:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800f056:	6979      	ldr	r1, [r7, #20]
 800f058:	69f8      	ldr	r0, [r7, #28]
 800f05a:	f008 ffbf 	bl	8017fdc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800f05e:	697b      	ldr	r3, [r7, #20]
 800f060:	681b      	ldr	r3, [r3, #0]
 800f062:	3310      	adds	r3, #16
 800f064:	681b      	ldr	r3, [r3, #0]
 800f066:	6978      	ldr	r0, [r7, #20]
 800f068:	4798      	blx	r3
    newTransition->invalidate();
 800f06a:	697b      	ldr	r3, [r7, #20]
 800f06c:	681b      	ldr	r3, [r3, #0]
 800f06e:	3314      	adds	r3, #20
 800f070:	681b      	ldr	r3, [r3, #0]
 800f072:	6978      	ldr	r0, [r7, #20]
 800f074:	4798      	blx	r3
}
 800f076:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800f078:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800f07a:	4618      	mov	r0, r3
 800f07c:	373c      	adds	r7, #60	; 0x3c
 800f07e:	46bd      	mov	sp, r7
 800f080:	bd90      	pop	{r4, r7, pc}
 800f082:	bf00      	nop
 800f084:	08029ee0 	.word	0x08029ee0
 800f088:	08029f70 	.word	0x08029f70
 800f08c:	0802a074 	.word	0x0802a074
 800f090:	0802a0b8 	.word	0x0802a0b8
 800f094:	0802a15c 	.word	0x0802a15c

0800f098 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800f098:	b580      	push	{r7, lr}
 800f09a:	b082      	sub	sp, #8
 800f09c:	af00      	add	r7, sp, #0
 800f09e:	6078      	str	r0, [r7, #4]
 800f0a0:	460b      	mov	r3, r1
 800f0a2:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800f0a4:	687b      	ldr	r3, [r7, #4]
 800f0a6:	681b      	ldr	r3, [r3, #0]
 800f0a8:	3324      	adds	r3, #36	; 0x24
 800f0aa:	681b      	ldr	r3, [r3, #0]
 800f0ac:	887a      	ldrh	r2, [r7, #2]
 800f0ae:	4611      	mov	r1, r2
 800f0b0:	6878      	ldr	r0, [r7, #4]
 800f0b2:	4798      	blx	r3
 800f0b4:	4603      	mov	r3, r0
    }
 800f0b6:	4618      	mov	r0, r3
 800f0b8:	3708      	adds	r7, #8
 800f0ba:	46bd      	mov	sp, r7
 800f0bc:	bd80      	pop	{r7, pc}

0800f0be <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 800f0be:	b580      	push	{r7, lr}
 800f0c0:	b082      	sub	sp, #8
 800f0c2:	af00      	add	r7, sp, #0
 800f0c4:	6078      	str	r0, [r7, #4]
 800f0c6:	460b      	mov	r3, r1
 800f0c8:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800f0ca:	687b      	ldr	r3, [r7, #4]
 800f0cc:	681b      	ldr	r3, [r3, #0]
 800f0ce:	3324      	adds	r3, #36	; 0x24
 800f0d0:	681b      	ldr	r3, [r3, #0]
 800f0d2:	887a      	ldrh	r2, [r7, #2]
 800f0d4:	4611      	mov	r1, r2
 800f0d6:	6878      	ldr	r0, [r7, #4]
 800f0d8:	4798      	blx	r3
 800f0da:	4603      	mov	r3, r0
    }
 800f0dc:	4618      	mov	r0, r3
 800f0de:	3708      	adds	r7, #8
 800f0e0:	46bd      	mov	sp, r7
 800f0e2:	bd80      	pop	{r7, pc}

0800f0e4 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 800f0e4:	b580      	push	{r7, lr}
 800f0e6:	b082      	sub	sp, #8
 800f0e8:	af00      	add	r7, sp, #0
 800f0ea:	6078      	str	r0, [r7, #4]
 800f0ec:	460b      	mov	r3, r1
 800f0ee:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800f0f0:	687b      	ldr	r3, [r7, #4]
 800f0f2:	681b      	ldr	r3, [r3, #0]
 800f0f4:	3324      	adds	r3, #36	; 0x24
 800f0f6:	681b      	ldr	r3, [r3, #0]
 800f0f8:	887a      	ldrh	r2, [r7, #2]
 800f0fa:	4611      	mov	r1, r2
 800f0fc:	6878      	ldr	r0, [r7, #4]
 800f0fe:	4798      	blx	r3
 800f100:	4603      	mov	r3, r0
    }
 800f102:	4618      	mov	r0, r3
 800f104:	3708      	adds	r7, #8
 800f106:	46bd      	mov	sp, r7
 800f108:	bd80      	pop	{r7, pc}

0800f10a <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800f10a:	b480      	push	{r7}
 800f10c:	b083      	sub	sp, #12
 800f10e:	af00      	add	r7, sp, #0
 800f110:	6078      	str	r0, [r7, #4]
 800f112:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800f114:	687b      	ldr	r3, [r7, #4]
 800f116:	683a      	ldr	r2, [r7, #0]
 800f118:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800f11a:	bf00      	nop
 800f11c:	370c      	adds	r7, #12
 800f11e:	46bd      	mov	sp, r7
 800f120:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f124:	4770      	bx	lr
	...

0800f128 <_ZN8touchgfx12NoTransitionD1Ev>:
 800f128:	b580      	push	{r7, lr}
 800f12a:	b082      	sub	sp, #8
 800f12c:	af00      	add	r7, sp, #0
 800f12e:	6078      	str	r0, [r7, #4]
 800f130:	4a05      	ldr	r2, [pc, #20]	; (800f148 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800f132:	687b      	ldr	r3, [r7, #4]
 800f134:	601a      	str	r2, [r3, #0]
 800f136:	687b      	ldr	r3, [r7, #4]
 800f138:	4618      	mov	r0, r3
 800f13a:	f7ff fc31 	bl	800e9a0 <_ZN8touchgfx10TransitionD1Ev>
 800f13e:	687b      	ldr	r3, [r7, #4]
 800f140:	4618      	mov	r0, r3
 800f142:	3708      	adds	r7, #8
 800f144:	46bd      	mov	sp, r7
 800f146:	bd80      	pop	{r7, pc}
 800f148:	0802b1b8 	.word	0x0802b1b8

0800f14c <_ZN8touchgfx12NoTransitionD0Ev>:
 800f14c:	b580      	push	{r7, lr}
 800f14e:	b082      	sub	sp, #8
 800f150:	af00      	add	r7, sp, #0
 800f152:	6078      	str	r0, [r7, #4]
 800f154:	6878      	ldr	r0, [r7, #4]
 800f156:	f7ff ffe7 	bl	800f128 <_ZN8touchgfx12NoTransitionD1Ev>
 800f15a:	210c      	movs	r1, #12
 800f15c:	6878      	ldr	r0, [r7, #4]
 800f15e:	f017 ff60 	bl	8027022 <_ZdlPvj>
 800f162:	687b      	ldr	r3, [r7, #4]
 800f164:	4618      	mov	r0, r3
 800f166:	3708      	adds	r7, #8
 800f168:	46bd      	mov	sp, r7
 800f16a:	bd80      	pop	{r7, pc}

0800f16c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800f16c:	b580      	push	{r7, lr}
 800f16e:	b082      	sub	sp, #8
 800f170:	af00      	add	r7, sp, #0
 800f172:	6078      	str	r0, [r7, #4]
 800f174:	4a05      	ldr	r2, [pc, #20]	; (800f18c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800f176:	687b      	ldr	r3, [r7, #4]
 800f178:	601a      	str	r2, [r3, #0]
 800f17a:	687b      	ldr	r3, [r7, #4]
 800f17c:	4618      	mov	r0, r3
 800f17e:	f7ff fbb1 	bl	800e8e4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800f182:	687b      	ldr	r3, [r7, #4]
 800f184:	4618      	mov	r0, r3
 800f186:	3708      	adds	r7, #8
 800f188:	46bd      	mov	sp, r7
 800f18a:	bd80      	pop	{r7, pc}
 800f18c:	0802b230 	.word	0x0802b230

0800f190 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800f190:	b580      	push	{r7, lr}
 800f192:	b082      	sub	sp, #8
 800f194:	af00      	add	r7, sp, #0
 800f196:	6078      	str	r0, [r7, #4]
 800f198:	6878      	ldr	r0, [r7, #4]
 800f19a:	f7ff ffe7 	bl	800f16c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800f19e:	2110      	movs	r1, #16
 800f1a0:	6878      	ldr	r0, [r7, #4]
 800f1a2:	f017 ff3e 	bl	8027022 <_ZdlPvj>
 800f1a6:	687b      	ldr	r3, [r7, #4]
 800f1a8:	4618      	mov	r0, r3
 800f1aa:	3708      	adds	r7, #8
 800f1ac:	46bd      	mov	sp, r7
 800f1ae:	bd80      	pop	{r7, pc}

0800f1b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800f1b0:	b580      	push	{r7, lr}
 800f1b2:	b082      	sub	sp, #8
 800f1b4:	af00      	add	r7, sp, #0
 800f1b6:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800f1b8:	687b      	ldr	r3, [r7, #4]
 800f1ba:	685b      	ldr	r3, [r3, #4]
 800f1bc:	687a      	ldr	r2, [r7, #4]
 800f1be:	68d2      	ldr	r2, [r2, #12]
 800f1c0:	1052      	asrs	r2, r2, #1
 800f1c2:	1899      	adds	r1, r3, r2
 800f1c4:	687b      	ldr	r3, [r7, #4]
 800f1c6:	68db      	ldr	r3, [r3, #12]
 800f1c8:	f003 0301 	and.w	r3, r3, #1
 800f1cc:	2b00      	cmp	r3, #0
 800f1ce:	d102      	bne.n	800f1d6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800f1d0:	687b      	ldr	r3, [r7, #4]
 800f1d2:	689b      	ldr	r3, [r3, #8]
 800f1d4:	e00a      	b.n	800f1ec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800f1d6:	687b      	ldr	r3, [r7, #4]
 800f1d8:	685b      	ldr	r3, [r3, #4]
 800f1da:	687a      	ldr	r2, [r7, #4]
 800f1dc:	68d2      	ldr	r2, [r2, #12]
 800f1de:	1052      	asrs	r2, r2, #1
 800f1e0:	4413      	add	r3, r2
 800f1e2:	681b      	ldr	r3, [r3, #0]
 800f1e4:	687a      	ldr	r2, [r7, #4]
 800f1e6:	6892      	ldr	r2, [r2, #8]
 800f1e8:	4413      	add	r3, r2
 800f1ea:	681b      	ldr	r3, [r3, #0]
 800f1ec:	4608      	mov	r0, r1
 800f1ee:	4798      	blx	r3
    }
 800f1f0:	bf00      	nop
 800f1f2:	3708      	adds	r7, #8
 800f1f4:	46bd      	mov	sp, r7
 800f1f6:	bd80      	pop	{r7, pc}

0800f1f8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800f1f8:	b480      	push	{r7}
 800f1fa:	b083      	sub	sp, #12
 800f1fc:	af00      	add	r7, sp, #0
 800f1fe:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800f200:	687b      	ldr	r3, [r7, #4]
 800f202:	685b      	ldr	r3, [r3, #4]
 800f204:	2b00      	cmp	r3, #0
 800f206:	d010      	beq.n	800f22a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800f208:	687b      	ldr	r3, [r7, #4]
 800f20a:	689b      	ldr	r3, [r3, #8]
 800f20c:	2b00      	cmp	r3, #0
 800f20e:	d107      	bne.n	800f220 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800f210:	687b      	ldr	r3, [r7, #4]
 800f212:	68db      	ldr	r3, [r3, #12]
 800f214:	f003 0301 	and.w	r3, r3, #1
 800f218:	2b00      	cmp	r3, #0
 800f21a:	d101      	bne.n	800f220 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800f21c:	2301      	movs	r3, #1
 800f21e:	e000      	b.n	800f222 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800f220:	2300      	movs	r3, #0
 800f222:	2b01      	cmp	r3, #1
 800f224:	d001      	beq.n	800f22a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800f226:	2301      	movs	r3, #1
 800f228:	e000      	b.n	800f22c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800f22a:	2300      	movs	r3, #0
    }
 800f22c:	4618      	mov	r0, r3
 800f22e:	370c      	adds	r7, #12
 800f230:	46bd      	mov	sp, r7
 800f232:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f236:	4770      	bx	lr

0800f238 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800f238:	b480      	push	{r7}
 800f23a:	b083      	sub	sp, #12
 800f23c:	af00      	add	r7, sp, #0
 800f23e:	6078      	str	r0, [r7, #4]
 800f240:	6039      	str	r1, [r7, #0]
        : color(col)
 800f242:	687b      	ldr	r3, [r7, #4]
 800f244:	683a      	ldr	r2, [r7, #0]
 800f246:	601a      	str	r2, [r3, #0]
    {
    }
 800f248:	687b      	ldr	r3, [r7, #4]
 800f24a:	4618      	mov	r0, r3
 800f24c:	370c      	adds	r7, #12
 800f24e:	46bd      	mov	sp, r7
 800f250:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f254:	4770      	bx	lr

0800f256 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800f256:	b480      	push	{r7}
 800f258:	b083      	sub	sp, #12
 800f25a:	af00      	add	r7, sp, #0
 800f25c:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800f25e:	687b      	ldr	r3, [r7, #4]
 800f260:	2200      	movs	r2, #0
 800f262:	801a      	strh	r2, [r3, #0]
 800f264:	687b      	ldr	r3, [r7, #4]
 800f266:	2200      	movs	r2, #0
 800f268:	805a      	strh	r2, [r3, #2]
 800f26a:	687b      	ldr	r3, [r7, #4]
 800f26c:	2200      	movs	r2, #0
 800f26e:	809a      	strh	r2, [r3, #4]
 800f270:	687b      	ldr	r3, [r7, #4]
 800f272:	2200      	movs	r2, #0
 800f274:	80da      	strh	r2, [r3, #6]
    {
    }
 800f276:	687b      	ldr	r3, [r7, #4]
 800f278:	4618      	mov	r0, r3
 800f27a:	370c      	adds	r7, #12
 800f27c:	46bd      	mov	sp, r7
 800f27e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f282:	4770      	bx	lr

0800f284 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800f284:	b480      	push	{r7}
 800f286:	b085      	sub	sp, #20
 800f288:	af00      	add	r7, sp, #0
 800f28a:	60f8      	str	r0, [r7, #12]
 800f28c:	4608      	mov	r0, r1
 800f28e:	4611      	mov	r1, r2
 800f290:	461a      	mov	r2, r3
 800f292:	4603      	mov	r3, r0
 800f294:	817b      	strh	r3, [r7, #10]
 800f296:	460b      	mov	r3, r1
 800f298:	813b      	strh	r3, [r7, #8]
 800f29a:	4613      	mov	r3, r2
 800f29c:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800f29e:	68fb      	ldr	r3, [r7, #12]
 800f2a0:	897a      	ldrh	r2, [r7, #10]
 800f2a2:	801a      	strh	r2, [r3, #0]
 800f2a4:	68fb      	ldr	r3, [r7, #12]
 800f2a6:	893a      	ldrh	r2, [r7, #8]
 800f2a8:	805a      	strh	r2, [r3, #2]
 800f2aa:	68fb      	ldr	r3, [r7, #12]
 800f2ac:	88fa      	ldrh	r2, [r7, #6]
 800f2ae:	809a      	strh	r2, [r3, #4]
 800f2b0:	68fb      	ldr	r3, [r7, #12]
 800f2b2:	8b3a      	ldrh	r2, [r7, #24]
 800f2b4:	80da      	strh	r2, [r3, #6]
    {
    }
 800f2b6:	68fb      	ldr	r3, [r7, #12]
 800f2b8:	4618      	mov	r0, r3
 800f2ba:	3714      	adds	r7, #20
 800f2bc:	46bd      	mov	sp, r7
 800f2be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2c2:	4770      	bx	lr

0800f2c4 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800f2c4:	b480      	push	{r7}
 800f2c6:	b083      	sub	sp, #12
 800f2c8:	af00      	add	r7, sp, #0
 800f2ca:	6078      	str	r0, [r7, #4]
 800f2cc:	460b      	mov	r3, r1
 800f2ce:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800f2d0:	687b      	ldr	r3, [r7, #4]
 800f2d2:	887a      	ldrh	r2, [r7, #2]
 800f2d4:	801a      	strh	r2, [r3, #0]
    {
    }
 800f2d6:	687b      	ldr	r3, [r7, #4]
 800f2d8:	4618      	mov	r0, r3
 800f2da:	370c      	adds	r7, #12
 800f2dc:	46bd      	mov	sp, r7
 800f2de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2e2:	4770      	bx	lr

0800f2e4 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800f2e4:	b580      	push	{r7, lr}
 800f2e6:	b082      	sub	sp, #8
 800f2e8:	af00      	add	r7, sp, #0
 800f2ea:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800f2ec:	4a14      	ldr	r2, [pc, #80]	; (800f340 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800f2ee:	687b      	ldr	r3, [r7, #4]
 800f2f0:	601a      	str	r2, [r3, #0]
        : rect(),
 800f2f2:	687b      	ldr	r3, [r7, #4]
 800f2f4:	3304      	adds	r3, #4
 800f2f6:	4618      	mov	r0, r3
 800f2f8:	f7ff ffad 	bl	800f256 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800f2fc:	687b      	ldr	r3, [r7, #4]
 800f2fe:	330c      	adds	r3, #12
 800f300:	4618      	mov	r0, r3
 800f302:	f7ff ffa8 	bl	800f256 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800f306:	687b      	ldr	r3, [r7, #4]
 800f308:	2200      	movs	r2, #0
 800f30a:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800f30c:	687b      	ldr	r3, [r7, #4]
 800f30e:	2200      	movs	r2, #0
 800f310:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800f312:	687b      	ldr	r3, [r7, #4]
 800f314:	2200      	movs	r2, #0
 800f316:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800f318:	687b      	ldr	r3, [r7, #4]
 800f31a:	2200      	movs	r2, #0
 800f31c:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800f31e:	687b      	ldr	r3, [r7, #4]
 800f320:	2200      	movs	r2, #0
 800f322:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 800f324:	687b      	ldr	r3, [r7, #4]
 800f326:	2200      	movs	r2, #0
 800f328:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 800f32c:	687b      	ldr	r3, [r7, #4]
 800f32e:	2201      	movs	r2, #1
 800f330:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800f334:	687b      	ldr	r3, [r7, #4]
 800f336:	4618      	mov	r0, r3
 800f338:	3708      	adds	r7, #8
 800f33a:	46bd      	mov	sp, r7
 800f33c:	bd80      	pop	{r7, pc}
 800f33e:	bf00      	nop
 800f340:	0802c014 	.word	0x0802c014

0800f344 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800f344:	b480      	push	{r7}
 800f346:	b083      	sub	sp, #12
 800f348:	af00      	add	r7, sp, #0
 800f34a:	6078      	str	r0, [r7, #4]
    {
 800f34c:	4a04      	ldr	r2, [pc, #16]	; (800f360 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800f34e:	687b      	ldr	r3, [r7, #4]
 800f350:	601a      	str	r2, [r3, #0]
    }
 800f352:	687b      	ldr	r3, [r7, #4]
 800f354:	4618      	mov	r0, r3
 800f356:	370c      	adds	r7, #12
 800f358:	46bd      	mov	sp, r7
 800f35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f35e:	4770      	bx	lr
 800f360:	0802c014 	.word	0x0802c014

0800f364 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800f364:	b580      	push	{r7, lr}
 800f366:	b082      	sub	sp, #8
 800f368:	af00      	add	r7, sp, #0
 800f36a:	6078      	str	r0, [r7, #4]
    }
 800f36c:	6878      	ldr	r0, [r7, #4]
 800f36e:	f7ff ffe9 	bl	800f344 <_ZN8touchgfx8DrawableD1Ev>
 800f372:	2128      	movs	r1, #40	; 0x28
 800f374:	6878      	ldr	r0, [r7, #4]
 800f376:	f017 fe54 	bl	8027022 <_ZdlPvj>
 800f37a:	687b      	ldr	r3, [r7, #4]
 800f37c:	4618      	mov	r0, r3
 800f37e:	3708      	adds	r7, #8
 800f380:	46bd      	mov	sp, r7
 800f382:	bd80      	pop	{r7, pc}

0800f384 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800f384:	b580      	push	{r7, lr}
 800f386:	b082      	sub	sp, #8
 800f388:	af00      	add	r7, sp, #0
 800f38a:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800f38c:	687b      	ldr	r3, [r7, #4]
 800f38e:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800f392:	2b00      	cmp	r3, #0
 800f394:	d005      	beq.n	800f3a2 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800f396:	687b      	ldr	r3, [r7, #4]
 800f398:	681b      	ldr	r3, [r3, #0]
 800f39a:	3314      	adds	r3, #20
 800f39c:	681b      	ldr	r3, [r3, #0]
 800f39e:	6878      	ldr	r0, [r7, #4]
 800f3a0:	4798      	blx	r3
        }
    }
 800f3a2:	bf00      	nop
 800f3a4:	3708      	adds	r7, #8
 800f3a6:	46bd      	mov	sp, r7
 800f3a8:	bd80      	pop	{r7, pc}

0800f3aa <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800f3aa:	b480      	push	{r7}
 800f3ac:	b083      	sub	sp, #12
 800f3ae:	af00      	add	r7, sp, #0
 800f3b0:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800f3b2:	2300      	movs	r3, #0
    }
 800f3b4:	4618      	mov	r0, r3
 800f3b6:	370c      	adds	r7, #12
 800f3b8:	46bd      	mov	sp, r7
 800f3ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3be:	4770      	bx	lr

0800f3c0 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800f3c0:	b580      	push	{r7, lr}
 800f3c2:	b084      	sub	sp, #16
 800f3c4:	af00      	add	r7, sp, #0
 800f3c6:	60f8      	str	r0, [r7, #12]
 800f3c8:	4608      	mov	r0, r1
 800f3ca:	4611      	mov	r1, r2
 800f3cc:	461a      	mov	r2, r3
 800f3ce:	4603      	mov	r3, r0
 800f3d0:	817b      	strh	r3, [r7, #10]
 800f3d2:	460b      	mov	r3, r1
 800f3d4:	813b      	strh	r3, [r7, #8]
 800f3d6:	4613      	mov	r3, r2
 800f3d8:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800f3da:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800f3de:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800f3e2:	4619      	mov	r1, r3
 800f3e4:	68f8      	ldr	r0, [r7, #12]
 800f3e6:	f000 f844 	bl	800f472 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800f3ea:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800f3ee:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800f3f2:	4619      	mov	r1, r3
 800f3f4:	68f8      	ldr	r0, [r7, #12]
 800f3f6:	f000 f898 	bl	800f52a <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800f3fa:	bf00      	nop
 800f3fc:	3710      	adds	r7, #16
 800f3fe:	46bd      	mov	sp, r7
 800f400:	bd80      	pop	{r7, pc}

0800f402 <_ZNK8touchgfx8Drawable4getXEv>:
    /**
     * Gets the x coordinate of this Drawable, relative to its parent.
     *
     * @return The x value, relative to the parent.
     */
    int16_t getX() const
 800f402:	b480      	push	{r7}
 800f404:	b083      	sub	sp, #12
 800f406:	af00      	add	r7, sp, #0
 800f408:	6078      	str	r0, [r7, #4]
    {
        return rect.x;
 800f40a:	687b      	ldr	r3, [r7, #4]
 800f40c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
    }
 800f410:	4618      	mov	r0, r3
 800f412:	370c      	adds	r7, #12
 800f414:	46bd      	mov	sp, r7
 800f416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f41a:	4770      	bx	lr

0800f41c <_ZNK8touchgfx8Drawable4getYEv>:
    /**
     * Gets the y coordinate of this Drawable, relative to its parent.
     *
     * @return The y value, relative to the parent.
     */
    int16_t getY() const
 800f41c:	b480      	push	{r7}
 800f41e:	b083      	sub	sp, #12
 800f420:	af00      	add	r7, sp, #0
 800f422:	6078      	str	r0, [r7, #4]
    {
        return rect.y;
 800f424:	687b      	ldr	r3, [r7, #4]
 800f426:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
    }
 800f42a:	4618      	mov	r0, r3
 800f42c:	370c      	adds	r7, #12
 800f42e:	46bd      	mov	sp, r7
 800f430:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f434:	4770      	bx	lr

0800f436 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800f436:	b480      	push	{r7}
 800f438:	b083      	sub	sp, #12
 800f43a:	af00      	add	r7, sp, #0
 800f43c:	6078      	str	r0, [r7, #4]
 800f43e:	460b      	mov	r3, r1
 800f440:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800f442:	687b      	ldr	r3, [r7, #4]
 800f444:	887a      	ldrh	r2, [r7, #2]
 800f446:	809a      	strh	r2, [r3, #4]
    }
 800f448:	bf00      	nop
 800f44a:	370c      	adds	r7, #12
 800f44c:	46bd      	mov	sp, r7
 800f44e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f452:	4770      	bx	lr

0800f454 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800f454:	b480      	push	{r7}
 800f456:	b083      	sub	sp, #12
 800f458:	af00      	add	r7, sp, #0
 800f45a:	6078      	str	r0, [r7, #4]
 800f45c:	460b      	mov	r3, r1
 800f45e:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800f460:	687b      	ldr	r3, [r7, #4]
 800f462:	887a      	ldrh	r2, [r7, #2]
 800f464:	80da      	strh	r2, [r3, #6]
    }
 800f466:	bf00      	nop
 800f468:	370c      	adds	r7, #12
 800f46a:	46bd      	mov	sp, r7
 800f46c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f470:	4770      	bx	lr

0800f472 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800f472:	b580      	push	{r7, lr}
 800f474:	b082      	sub	sp, #8
 800f476:	af00      	add	r7, sp, #0
 800f478:	6078      	str	r0, [r7, #4]
 800f47a:	460b      	mov	r3, r1
 800f47c:	807b      	strh	r3, [r7, #2]
 800f47e:	4613      	mov	r3, r2
 800f480:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800f482:	687b      	ldr	r3, [r7, #4]
 800f484:	681b      	ldr	r3, [r3, #0]
 800f486:	3330      	adds	r3, #48	; 0x30
 800f488:	681b      	ldr	r3, [r3, #0]
 800f48a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f48e:	4611      	mov	r1, r2
 800f490:	6878      	ldr	r0, [r7, #4]
 800f492:	4798      	blx	r3
        setY(y);
 800f494:	687b      	ldr	r3, [r7, #4]
 800f496:	681b      	ldr	r3, [r3, #0]
 800f498:	3334      	adds	r3, #52	; 0x34
 800f49a:	681b      	ldr	r3, [r3, #0]
 800f49c:	f9b7 2000 	ldrsh.w	r2, [r7]
 800f4a0:	4611      	mov	r1, r2
 800f4a2:	6878      	ldr	r0, [r7, #4]
 800f4a4:	4798      	blx	r3
    }
 800f4a6:	bf00      	nop
 800f4a8:	3708      	adds	r7, #8
 800f4aa:	46bd      	mov	sp, r7
 800f4ac:	bd80      	pop	{r7, pc}

0800f4ae <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800f4ae:	b480      	push	{r7}
 800f4b0:	b083      	sub	sp, #12
 800f4b2:	af00      	add	r7, sp, #0
 800f4b4:	6078      	str	r0, [r7, #4]
 800f4b6:	460b      	mov	r3, r1
 800f4b8:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800f4ba:	687b      	ldr	r3, [r7, #4]
 800f4bc:	887a      	ldrh	r2, [r7, #2]
 800f4be:	811a      	strh	r2, [r3, #8]
    }
 800f4c0:	bf00      	nop
 800f4c2:	370c      	adds	r7, #12
 800f4c4:	46bd      	mov	sp, r7
 800f4c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4ca:	4770      	bx	lr

0800f4cc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800f4cc:	b480      	push	{r7}
 800f4ce:	b083      	sub	sp, #12
 800f4d0:	af00      	add	r7, sp, #0
 800f4d2:	6078      	str	r0, [r7, #4]
 800f4d4:	460b      	mov	r3, r1
 800f4d6:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800f4d8:	687b      	ldr	r3, [r7, #4]
 800f4da:	887a      	ldrh	r2, [r7, #2]
 800f4dc:	815a      	strh	r2, [r3, #10]
    }
 800f4de:	bf00      	nop
 800f4e0:	370c      	adds	r7, #12
 800f4e2:	46bd      	mov	sp, r7
 800f4e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4e8:	4770      	bx	lr

0800f4ea <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800f4ea:	b480      	push	{r7}
 800f4ec:	b083      	sub	sp, #12
 800f4ee:	af00      	add	r7, sp, #0
 800f4f0:	6078      	str	r0, [r7, #4]
    {
    }
 800f4f2:	bf00      	nop
 800f4f4:	370c      	adds	r7, #12
 800f4f6:	46bd      	mov	sp, r7
 800f4f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4fc:	4770      	bx	lr

0800f4fe <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800f4fe:	b480      	push	{r7}
 800f500:	b083      	sub	sp, #12
 800f502:	af00      	add	r7, sp, #0
 800f504:	6078      	str	r0, [r7, #4]
 800f506:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800f508:	bf00      	nop
 800f50a:	370c      	adds	r7, #12
 800f50c:	46bd      	mov	sp, r7
 800f50e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f512:	4770      	bx	lr

0800f514 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800f514:	b480      	push	{r7}
 800f516:	b083      	sub	sp, #12
 800f518:	af00      	add	r7, sp, #0
 800f51a:	6078      	str	r0, [r7, #4]
 800f51c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800f51e:	bf00      	nop
 800f520:	370c      	adds	r7, #12
 800f522:	46bd      	mov	sp, r7
 800f524:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f528:	4770      	bx	lr

0800f52a <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800f52a:	b580      	push	{r7, lr}
 800f52c:	b082      	sub	sp, #8
 800f52e:	af00      	add	r7, sp, #0
 800f530:	6078      	str	r0, [r7, #4]
 800f532:	460b      	mov	r3, r1
 800f534:	807b      	strh	r3, [r7, #2]
 800f536:	4613      	mov	r3, r2
 800f538:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800f53a:	687b      	ldr	r3, [r7, #4]
 800f53c:	681b      	ldr	r3, [r3, #0]
 800f53e:	3338      	adds	r3, #56	; 0x38
 800f540:	681b      	ldr	r3, [r3, #0]
 800f542:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f546:	4611      	mov	r1, r2
 800f548:	6878      	ldr	r0, [r7, #4]
 800f54a:	4798      	blx	r3
        setHeight(height);
 800f54c:	687b      	ldr	r3, [r7, #4]
 800f54e:	681b      	ldr	r3, [r3, #0]
 800f550:	333c      	adds	r3, #60	; 0x3c
 800f552:	681b      	ldr	r3, [r3, #0]
 800f554:	f9b7 2000 	ldrsh.w	r2, [r7]
 800f558:	4611      	mov	r1, r2
 800f55a:	6878      	ldr	r0, [r7, #4]
 800f55c:	4798      	blx	r3
    }
 800f55e:	bf00      	nop
 800f560:	3708      	adds	r7, #8
 800f562:	46bd      	mov	sp, r7
 800f564:	bd80      	pop	{r7, pc}

0800f566 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800f566:	b480      	push	{r7}
 800f568:	b083      	sub	sp, #12
 800f56a:	af00      	add	r7, sp, #0
 800f56c:	6078      	str	r0, [r7, #4]
 800f56e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800f570:	bf00      	nop
 800f572:	370c      	adds	r7, #12
 800f574:	46bd      	mov	sp, r7
 800f576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f57a:	4770      	bx	lr

0800f57c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800f57c:	b480      	push	{r7}
 800f57e:	b083      	sub	sp, #12
 800f580:	af00      	add	r7, sp, #0
 800f582:	6078      	str	r0, [r7, #4]
    {
    }
 800f584:	bf00      	nop
 800f586:	370c      	adds	r7, #12
 800f588:	46bd      	mov	sp, r7
 800f58a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f58e:	4770      	bx	lr

0800f590 <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 800f590:	b480      	push	{r7}
 800f592:	b083      	sub	sp, #12
 800f594:	af00      	add	r7, sp, #0
 800f596:	6078      	str	r0, [r7, #4]
 800f598:	460b      	mov	r3, r1
 800f59a:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800f59c:	687b      	ldr	r3, [r7, #4]
 800f59e:	78fa      	ldrb	r2, [r7, #3]
 800f5a0:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 800f5a4:	bf00      	nop
 800f5a6:	370c      	adds	r7, #12
 800f5a8:	46bd      	mov	sp, r7
 800f5aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5ae:	4770      	bx	lr

0800f5b0 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800f5b0:	b480      	push	{r7}
 800f5b2:	b083      	sub	sp, #12
 800f5b4:	af00      	add	r7, sp, #0
 800f5b6:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800f5b8:	687b      	ldr	r3, [r7, #4]
 800f5ba:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800f5be:	4618      	mov	r0, r3
 800f5c0:	370c      	adds	r7, #12
 800f5c2:	46bd      	mov	sp, r7
 800f5c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5c8:	4770      	bx	lr

0800f5ca <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800f5ca:	b480      	push	{r7}
 800f5cc:	b083      	sub	sp, #12
 800f5ce:	af00      	add	r7, sp, #0
 800f5d0:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800f5d2:	687b      	ldr	r3, [r7, #4]
 800f5d4:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800f5d8:	4618      	mov	r0, r3
 800f5da:	370c      	adds	r7, #12
 800f5dc:	46bd      	mov	sp, r7
 800f5de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5e2:	4770      	bx	lr

0800f5e4 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800f5e4:	b580      	push	{r7, lr}
 800f5e6:	b082      	sub	sp, #8
 800f5e8:	af00      	add	r7, sp, #0
 800f5ea:	6078      	str	r0, [r7, #4]
 800f5ec:	460b      	mov	r3, r1
 800f5ee:	807b      	strh	r3, [r7, #2]
 800f5f0:	4613      	mov	r3, r2
 800f5f2:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800f5f4:	687b      	ldr	r3, [r7, #4]
 800f5f6:	681b      	ldr	r3, [r3, #0]
 800f5f8:	3354      	adds	r3, #84	; 0x54
 800f5fa:	681b      	ldr	r3, [r3, #0]
 800f5fc:	8879      	ldrh	r1, [r7, #2]
 800f5fe:	687a      	ldr	r2, [r7, #4]
 800f600:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800f604:	b292      	uxth	r2, r2
 800f606:	1a8a      	subs	r2, r1, r2
 800f608:	b292      	uxth	r2, r2
 800f60a:	b210      	sxth	r0, r2
 800f60c:	8839      	ldrh	r1, [r7, #0]
 800f60e:	687a      	ldr	r2, [r7, #4]
 800f610:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800f614:	b292      	uxth	r2, r2
 800f616:	1a8a      	subs	r2, r1, r2
 800f618:	b292      	uxth	r2, r2
 800f61a:	b212      	sxth	r2, r2
 800f61c:	4601      	mov	r1, r0
 800f61e:	6878      	ldr	r0, [r7, #4]
 800f620:	4798      	blx	r3
    }
 800f622:	bf00      	nop
 800f624:	3708      	adds	r7, #8
 800f626:	46bd      	mov	sp, r7
 800f628:	bd80      	pop	{r7, pc}

0800f62a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800f62a:	b480      	push	{r7}
 800f62c:	b083      	sub	sp, #12
 800f62e:	af00      	add	r7, sp, #0
 800f630:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800f632:	687b      	ldr	r3, [r7, #4]
 800f634:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f638:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800f63a:	687b      	ldr	r3, [r7, #4]
 800f63c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f640:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800f642:	687b      	ldr	r3, [r7, #4]
 800f644:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f648:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800f64a:	bf00      	nop
 800f64c:	370c      	adds	r7, #12
 800f64e:	46bd      	mov	sp, r7
 800f650:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f654:	4770      	bx	lr

0800f656 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800f656:	b580      	push	{r7, lr}
 800f658:	b084      	sub	sp, #16
 800f65a:	af00      	add	r7, sp, #0
 800f65c:	60f8      	str	r0, [r7, #12]
 800f65e:	60b9      	str	r1, [r7, #8]
 800f660:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800f662:	68f8      	ldr	r0, [r7, #12]
 800f664:	f7ff ffe1 	bl	800f62a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800f668:	687b      	ldr	r3, [r7, #4]
 800f66a:	681a      	ldr	r2, [r3, #0]
 800f66c:	68fb      	ldr	r3, [r7, #12]
 800f66e:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800f670:	687b      	ldr	r3, [r7, #4]
 800f672:	68fa      	ldr	r2, [r7, #12]
 800f674:	601a      	str	r2, [r3, #0]
    }
 800f676:	bf00      	nop
 800f678:	3710      	adds	r7, #16
 800f67a:	46bd      	mov	sp, r7
 800f67c:	bd80      	pop	{r7, pc}

0800f67e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
    void registerTimerWidget(Drawable* w)
 800f67e:	b580      	push	{r7, lr}
 800f680:	b082      	sub	sp, #8
 800f682:	af00      	add	r7, sp, #0
 800f684:	6078      	str	r0, [r7, #4]
 800f686:	6039      	str	r1, [r7, #0]
        timerWidgets.add(w);
 800f688:	687b      	ldr	r3, [r7, #4]
 800f68a:	3304      	adds	r3, #4
 800f68c:	6839      	ldr	r1, [r7, #0]
 800f68e:	4618      	mov	r0, r3
 800f690:	f007 f866 	bl	8016760 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
    }
 800f694:	bf00      	nop
 800f696:	3708      	adds	r7, #8
 800f698:	46bd      	mov	sp, r7
 800f69a:	bd80      	pop	{r7, pc}

0800f69c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
     * @param [in] w The widget to remove.
     *
     * @note If widget has been registered multiple times, an equal number of calls to unregister
     *       are required to stop widget from receiving tick events.
     */
    void unregisterTimerWidget(const Drawable* w)
 800f69c:	b580      	push	{r7, lr}
 800f69e:	b082      	sub	sp, #8
 800f6a0:	af00      	add	r7, sp, #0
 800f6a2:	6078      	str	r0, [r7, #4]
 800f6a4:	6039      	str	r1, [r7, #0]
    {
        timerWidgets.remove(w);
 800f6a6:	687b      	ldr	r3, [r7, #4]
 800f6a8:	3304      	adds	r3, #4
 800f6aa:	6839      	ldr	r1, [r7, #0]
 800f6ac:	4618      	mov	r0, r3
 800f6ae:	f006 ffae 	bl	801660e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
    }
 800f6b2:	bf00      	nop
 800f6b4:	3708      	adds	r7, #8
 800f6b6:	46bd      	mov	sp, r7
 800f6b8:	bd80      	pop	{r7, pc}
	...

0800f6bc <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800f6bc:	b580      	push	{r7, lr}
 800f6be:	b082      	sub	sp, #8
 800f6c0:	af00      	add	r7, sp, #0
 800f6c2:	6078      	str	r0, [r7, #4]
    {
 800f6c4:	4a06      	ldr	r2, [pc, #24]	; (800f6e0 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800f6c6:	687b      	ldr	r3, [r7, #4]
 800f6c8:	601a      	str	r2, [r3, #0]
 800f6ca:	687b      	ldr	r3, [r7, #4]
 800f6cc:	3304      	adds	r3, #4
 800f6ce:	4618      	mov	r0, r3
 800f6d0:	f001 f82e 	bl	8010730 <_ZN8touchgfx9ContainerD1Ev>
    }
 800f6d4:	687b      	ldr	r3, [r7, #4]
 800f6d6:	4618      	mov	r0, r3
 800f6d8:	3708      	adds	r7, #8
 800f6da:	46bd      	mov	sp, r7
 800f6dc:	bd80      	pop	{r7, pc}
 800f6de:	bf00      	nop
 800f6e0:	0802c118 	.word	0x0802c118

0800f6e4 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800f6e4:	b580      	push	{r7, lr}
 800f6e6:	b082      	sub	sp, #8
 800f6e8:	af00      	add	r7, sp, #0
 800f6ea:	6078      	str	r0, [r7, #4]
    }
 800f6ec:	6878      	ldr	r0, [r7, #4]
 800f6ee:	f7ff ffe5 	bl	800f6bc <_ZN8touchgfx6ScreenD1Ev>
 800f6f2:	213c      	movs	r1, #60	; 0x3c
 800f6f4:	6878      	ldr	r0, [r7, #4]
 800f6f6:	f017 fc94 	bl	8027022 <_ZdlPvj>
 800f6fa:	687b      	ldr	r3, [r7, #4]
 800f6fc:	4618      	mov	r0, r3
 800f6fe:	3708      	adds	r7, #8
 800f700:	46bd      	mov	sp, r7
 800f702:	bd80      	pop	{r7, pc}

0800f704 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800f704:	b480      	push	{r7}
 800f706:	b083      	sub	sp, #12
 800f708:	af00      	add	r7, sp, #0
 800f70a:	6078      	str	r0, [r7, #4]
    {
    }
 800f70c:	bf00      	nop
 800f70e:	370c      	adds	r7, #12
 800f710:	46bd      	mov	sp, r7
 800f712:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f716:	4770      	bx	lr

0800f718 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800f718:	b480      	push	{r7}
 800f71a:	b083      	sub	sp, #12
 800f71c:	af00      	add	r7, sp, #0
 800f71e:	6078      	str	r0, [r7, #4]
    {
    }
 800f720:	bf00      	nop
 800f722:	370c      	adds	r7, #12
 800f724:	46bd      	mov	sp, r7
 800f726:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f72a:	4770      	bx	lr

0800f72c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800f72c:	b480      	push	{r7}
 800f72e:	b083      	sub	sp, #12
 800f730:	af00      	add	r7, sp, #0
 800f732:	6078      	str	r0, [r7, #4]
    {
    }
 800f734:	bf00      	nop
 800f736:	370c      	adds	r7, #12
 800f738:	46bd      	mov	sp, r7
 800f73a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f73e:	4770      	bx	lr

0800f740 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800f740:	b480      	push	{r7}
 800f742:	b083      	sub	sp, #12
 800f744:	af00      	add	r7, sp, #0
 800f746:	6078      	str	r0, [r7, #4]
    {
    }
 800f748:	bf00      	nop
 800f74a:	370c      	adds	r7, #12
 800f74c:	46bd      	mov	sp, r7
 800f74e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f752:	4770      	bx	lr

0800f754 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800f754:	b480      	push	{r7}
 800f756:	b083      	sub	sp, #12
 800f758:	af00      	add	r7, sp, #0
 800f75a:	6078      	str	r0, [r7, #4]
 800f75c:	460b      	mov	r3, r1
 800f75e:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800f760:	bf00      	nop
 800f762:	370c      	adds	r7, #12
 800f764:	46bd      	mov	sp, r7
 800f766:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f76a:	4770      	bx	lr

0800f76c <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800f76c:	b580      	push	{r7, lr}
 800f76e:	b082      	sub	sp, #8
 800f770:	af00      	add	r7, sp, #0
 800f772:	6078      	str	r0, [r7, #4]
 800f774:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800f776:	687b      	ldr	r3, [r7, #4]
 800f778:	3304      	adds	r3, #4
 800f77a:	6839      	ldr	r1, [r7, #0]
 800f77c:	4618      	mov	r0, r3
 800f77e:	f003 fac5 	bl	8012d0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800f782:	bf00      	nop
 800f784:	3708      	adds	r7, #8
 800f786:	46bd      	mov	sp, r7
 800f788:	bd80      	pop	{r7, pc}

0800f78a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800f78a:	b580      	push	{r7, lr}
 800f78c:	b084      	sub	sp, #16
 800f78e:	af00      	add	r7, sp, #0
 800f790:	60f8      	str	r0, [r7, #12]
 800f792:	607b      	str	r3, [r7, #4]
 800f794:	460b      	mov	r3, r1
 800f796:	817b      	strh	r3, [r7, #10]
 800f798:	4613      	mov	r3, r2
 800f79a:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800f79c:	68fb      	ldr	r3, [r7, #12]
 800f79e:	4618      	mov	r0, r3
 800f7a0:	f7ff ff06 	bl	800f5b0 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800f7a4:	4603      	mov	r3, r0
 800f7a6:	2b00      	cmp	r3, #0
 800f7a8:	d008      	beq.n	800f7bc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800f7aa:	68fb      	ldr	r3, [r7, #12]
 800f7ac:	4618      	mov	r0, r3
 800f7ae:	f7ff ff0c 	bl	800f5ca <_ZNK8touchgfx8Drawable11isTouchableEv>
 800f7b2:	4603      	mov	r3, r0
 800f7b4:	2b00      	cmp	r3, #0
 800f7b6:	d001      	beq.n	800f7bc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800f7b8:	2301      	movs	r3, #1
 800f7ba:	e000      	b.n	800f7be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800f7bc:	2300      	movs	r3, #0
 800f7be:	2b00      	cmp	r3, #0
 800f7c0:	d002      	beq.n	800f7c8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800f7c2:	68fa      	ldr	r2, [r7, #12]
 800f7c4:	687b      	ldr	r3, [r7, #4]
 800f7c6:	601a      	str	r2, [r3, #0]
        }
    }
 800f7c8:	bf00      	nop
 800f7ca:	3710      	adds	r7, #16
 800f7cc:	46bd      	mov	sp, r7
 800f7ce:	bd80      	pop	{r7, pc}

0800f7d0 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800f7d0:	b580      	push	{r7, lr}
 800f7d2:	b082      	sub	sp, #8
 800f7d4:	af00      	add	r7, sp, #0
 800f7d6:	6078      	str	r0, [r7, #4]
 800f7d8:	687b      	ldr	r3, [r7, #4]
 800f7da:	4618      	mov	r0, r3
 800f7dc:	f7ff fd82 	bl	800f2e4 <_ZN8touchgfx8DrawableC1Ev>
 800f7e0:	4a03      	ldr	r2, [pc, #12]	; (800f7f0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800f7e2:	687b      	ldr	r3, [r7, #4]
 800f7e4:	601a      	str	r2, [r3, #0]
 800f7e6:	687b      	ldr	r3, [r7, #4]
 800f7e8:	4618      	mov	r0, r3
 800f7ea:	3708      	adds	r7, #8
 800f7ec:	46bd      	mov	sp, r7
 800f7ee:	bd80      	pop	{r7, pc}
 800f7f0:	0802b490 	.word	0x0802b490

0800f7f4 <_ZN8touchgfx6WidgetD1Ev>:
 800f7f4:	b580      	push	{r7, lr}
 800f7f6:	b082      	sub	sp, #8
 800f7f8:	af00      	add	r7, sp, #0
 800f7fa:	6078      	str	r0, [r7, #4]
 800f7fc:	4a05      	ldr	r2, [pc, #20]	; (800f814 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800f7fe:	687b      	ldr	r3, [r7, #4]
 800f800:	601a      	str	r2, [r3, #0]
 800f802:	687b      	ldr	r3, [r7, #4]
 800f804:	4618      	mov	r0, r3
 800f806:	f7ff fd9d 	bl	800f344 <_ZN8touchgfx8DrawableD1Ev>
 800f80a:	687b      	ldr	r3, [r7, #4]
 800f80c:	4618      	mov	r0, r3
 800f80e:	3708      	adds	r7, #8
 800f810:	46bd      	mov	sp, r7
 800f812:	bd80      	pop	{r7, pc}
 800f814:	0802b490 	.word	0x0802b490

0800f818 <_ZN8touchgfx6WidgetD0Ev>:
 800f818:	b580      	push	{r7, lr}
 800f81a:	b082      	sub	sp, #8
 800f81c:	af00      	add	r7, sp, #0
 800f81e:	6078      	str	r0, [r7, #4]
 800f820:	6878      	ldr	r0, [r7, #4]
 800f822:	f7ff ffe7 	bl	800f7f4 <_ZN8touchgfx6WidgetD1Ev>
 800f826:	2128      	movs	r1, #40	; 0x28
 800f828:	6878      	ldr	r0, [r7, #4]
 800f82a:	f017 fbfa 	bl	8027022 <_ZdlPvj>
 800f82e:	687b      	ldr	r3, [r7, #4]
 800f830:	4618      	mov	r0, r3
 800f832:	3708      	adds	r7, #8
 800f834:	46bd      	mov	sp, r7
 800f836:	bd80      	pop	{r7, pc}

0800f838 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800f838:	b580      	push	{r7, lr}
 800f83a:	b082      	sub	sp, #8
 800f83c:	af00      	add	r7, sp, #0
 800f83e:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800f840:	687b      	ldr	r3, [r7, #4]
 800f842:	4618      	mov	r0, r3
 800f844:	2326      	movs	r3, #38	; 0x26
 800f846:	461a      	mov	r2, r3
 800f848:	2100      	movs	r1, #0
 800f84a:	f019 fd12 	bl	8029272 <memset>
 800f84e:	687b      	ldr	r3, [r7, #4]
 800f850:	4618      	mov	r0, r3
 800f852:	f7ff ffbd 	bl	800f7d0 <_ZN8touchgfx6WidgetC1Ev>
 800f856:	4a09      	ldr	r2, [pc, #36]	; (800f87c <_ZN8touchgfx3BoxC1Ev+0x44>)
 800f858:	687b      	ldr	r3, [r7, #4]
 800f85a:	601a      	str	r2, [r3, #0]
 800f85c:	687b      	ldr	r3, [r7, #4]
 800f85e:	22ff      	movs	r2, #255	; 0xff
 800f860:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800f864:	687b      	ldr	r3, [r7, #4]
 800f866:	3328      	adds	r3, #40	; 0x28
 800f868:	2100      	movs	r1, #0
 800f86a:	4618      	mov	r0, r3
 800f86c:	f7ff fce4 	bl	800f238 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800f870:	687b      	ldr	r3, [r7, #4]
 800f872:	4618      	mov	r0, r3
 800f874:	3708      	adds	r7, #8
 800f876:	46bd      	mov	sp, r7
 800f878:	bd80      	pop	{r7, pc}
 800f87a:	bf00      	nop
 800f87c:	0802bd28 	.word	0x0802bd28

0800f880 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800f880:	b480      	push	{r7}
 800f882:	b083      	sub	sp, #12
 800f884:	af00      	add	r7, sp, #0
 800f886:	6078      	str	r0, [r7, #4]
 800f888:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800f88a:	687b      	ldr	r3, [r7, #4]
 800f88c:	683a      	ldr	r2, [r7, #0]
 800f88e:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800f890:	bf00      	nop
 800f892:	370c      	adds	r7, #12
 800f894:	46bd      	mov	sp, r7
 800f896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f89a:	4770      	bx	lr

0800f89c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 800f89c:	b580      	push	{r7, lr}
 800f89e:	b082      	sub	sp, #8
 800f8a0:	af00      	add	r7, sp, #0
 800f8a2:	6078      	str	r0, [r7, #4]
 800f8a4:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 800f8a6:	687b      	ldr	r3, [r7, #4]
 800f8a8:	4618      	mov	r0, r3
 800f8aa:	2326      	movs	r3, #38	; 0x26
 800f8ac:	461a      	mov	r2, r3
 800f8ae:	2100      	movs	r1, #0
 800f8b0:	f019 fcdf 	bl	8029272 <memset>
 800f8b4:	687b      	ldr	r3, [r7, #4]
 800f8b6:	4618      	mov	r0, r3
 800f8b8:	f7ff ff8a 	bl	800f7d0 <_ZN8touchgfx6WidgetC1Ev>
 800f8bc:	4a09      	ldr	r2, [pc, #36]	; (800f8e4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 800f8be:	687b      	ldr	r3, [r7, #4]
 800f8c0:	601a      	str	r2, [r3, #0]
 800f8c2:	687b      	ldr	r3, [r7, #4]
 800f8c4:	683a      	ldr	r2, [r7, #0]
 800f8c6:	8812      	ldrh	r2, [r2, #0]
 800f8c8:	84da      	strh	r2, [r3, #38]	; 0x26
 800f8ca:	687b      	ldr	r3, [r7, #4]
 800f8cc:	22ff      	movs	r2, #255	; 0xff
 800f8ce:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    {
        Image::setBitmap(bmp);
 800f8d2:	6839      	ldr	r1, [r7, #0]
 800f8d4:	6878      	ldr	r0, [r7, #4]
 800f8d6:	f005 f936 	bl	8014b46 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800f8da:	687b      	ldr	r3, [r7, #4]
 800f8dc:	4618      	mov	r0, r3
 800f8de:	3708      	adds	r7, #8
 800f8e0:	46bd      	mov	sp, r7
 800f8e2:	bd80      	pop	{r7, pc}
 800f8e4:	0802befc 	.word	0x0802befc

0800f8e8 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800f8e8:	b580      	push	{r7, lr}
 800f8ea:	b082      	sub	sp, #8
 800f8ec:	af00      	add	r7, sp, #0
 800f8ee:	6078      	str	r0, [r7, #4]
 800f8f0:	4a05      	ldr	r2, [pc, #20]	; (800f908 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800f8f2:	687b      	ldr	r3, [r7, #4]
 800f8f4:	601a      	str	r2, [r3, #0]
 800f8f6:	687b      	ldr	r3, [r7, #4]
 800f8f8:	4618      	mov	r0, r3
 800f8fa:	f7ff ff7b 	bl	800f7f4 <_ZN8touchgfx6WidgetD1Ev>
 800f8fe:	687b      	ldr	r3, [r7, #4]
 800f900:	4618      	mov	r0, r3
 800f902:	3708      	adds	r7, #8
 800f904:	46bd      	mov	sp, r7
 800f906:	bd80      	pop	{r7, pc}
 800f908:	0802bd28 	.word	0x0802bd28

0800f90c <_ZN8touchgfx3BoxD0Ev>:
 800f90c:	b580      	push	{r7, lr}
 800f90e:	b082      	sub	sp, #8
 800f910:	af00      	add	r7, sp, #0
 800f912:	6078      	str	r0, [r7, #4]
 800f914:	6878      	ldr	r0, [r7, #4]
 800f916:	f7ff ffe7 	bl	800f8e8 <_ZN8touchgfx3BoxD1Ev>
 800f91a:	212c      	movs	r1, #44	; 0x2c
 800f91c:	6878      	ldr	r0, [r7, #4]
 800f91e:	f017 fb80 	bl	8027022 <_ZdlPvj>
 800f922:	687b      	ldr	r3, [r7, #4]
 800f924:	4618      	mov	r0, r3
 800f926:	3708      	adds	r7, #8
 800f928:	46bd      	mov	sp, r7
 800f92a:	bd80      	pop	{r7, pc}

0800f92c <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800f92c:	b580      	push	{r7, lr}
 800f92e:	b082      	sub	sp, #8
 800f930:	af00      	add	r7, sp, #0
 800f932:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800f934:	687b      	ldr	r3, [r7, #4]
 800f936:	4618      	mov	r0, r3
 800f938:	f7ff ff7e 	bl	800f838 <_ZN8touchgfx3BoxC1Ev>
 800f93c:	4a08      	ldr	r2, [pc, #32]	; (800f960 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800f93e:	687b      	ldr	r3, [r7, #4]
 800f940:	601a      	str	r2, [r3, #0]
 800f942:	687b      	ldr	r3, [r7, #4]
 800f944:	332c      	adds	r3, #44	; 0x2c
 800f946:	2100      	movs	r1, #0
 800f948:	4618      	mov	r0, r3
 800f94a:	f7ff fc75 	bl	800f238 <_ZN8touchgfx9colortypeC1Em>
 800f94e:	687b      	ldr	r3, [r7, #4]
 800f950:	2200      	movs	r2, #0
 800f952:	861a      	strh	r2, [r3, #48]	; 0x30
    {
    }
 800f954:	687b      	ldr	r3, [r7, #4]
 800f956:	4618      	mov	r0, r3
 800f958:	3708      	adds	r7, #8
 800f95a:	46bd      	mov	sp, r7
 800f95c:	bd80      	pop	{r7, pc}
 800f95e:	bf00      	nop
 800f960:	0802be94 	.word	0x0802be94

0800f964 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800f964:	b480      	push	{r7}
 800f966:	b083      	sub	sp, #12
 800f968:	af00      	add	r7, sp, #0
 800f96a:	6078      	str	r0, [r7, #4]
 800f96c:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800f96e:	687b      	ldr	r3, [r7, #4]
 800f970:	683a      	ldr	r2, [r7, #0]
 800f972:	62da      	str	r2, [r3, #44]	; 0x2c
    }
 800f974:	bf00      	nop
 800f976:	370c      	adds	r7, #12
 800f978:	46bd      	mov	sp, r7
 800f97a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f97e:	4770      	bx	lr

0800f980 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800f980:	b480      	push	{r7}
 800f982:	b083      	sub	sp, #12
 800f984:	af00      	add	r7, sp, #0
 800f986:	6078      	str	r0, [r7, #4]
 800f988:	460b      	mov	r3, r1
 800f98a:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800f98c:	687b      	ldr	r3, [r7, #4]
 800f98e:	887a      	ldrh	r2, [r7, #2]
 800f990:	861a      	strh	r2, [r3, #48]	; 0x30
    }
 800f992:	bf00      	nop
 800f994:	370c      	adds	r7, #12
 800f996:	46bd      	mov	sp, r7
 800f998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f99c:	4770      	bx	lr
	...

0800f9a0 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800f9a0:	b480      	push	{r7}
 800f9a2:	b083      	sub	sp, #12
 800f9a4:	af00      	add	r7, sp, #0
 800f9a6:	6078      	str	r0, [r7, #4]
 800f9a8:	460b      	mov	r3, r1
 800f9aa:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800f9ac:	4a06      	ldr	r2, [pc, #24]	; (800f9c8 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800f9ae:	687b      	ldr	r3, [r7, #4]
 800f9b0:	601a      	str	r2, [r3, #0]
 800f9b2:	687b      	ldr	r3, [r7, #4]
 800f9b4:	887a      	ldrh	r2, [r7, #2]
 800f9b6:	809a      	strh	r2, [r3, #4]
    }
 800f9b8:	687b      	ldr	r3, [r7, #4]
 800f9ba:	4618      	mov	r0, r3
 800f9bc:	370c      	adds	r7, #12
 800f9be:	46bd      	mov	sp, r7
 800f9c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9c4:	4770      	bx	lr
 800f9c6:	bf00      	nop
 800f9c8:	0802b148 	.word	0x0802b148

0800f9cc <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800f9cc:	b580      	push	{r7, lr}
 800f9ce:	b082      	sub	sp, #8
 800f9d0:	af00      	add	r7, sp, #0
 800f9d2:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800f9d4:	687b      	ldr	r3, [r7, #4]
 800f9d6:	4618      	mov	r0, r3
 800f9d8:	2326      	movs	r3, #38	; 0x26
 800f9da:	461a      	mov	r2, r3
 800f9dc:	2100      	movs	r1, #0
 800f9de:	f019 fc48 	bl	8029272 <memset>
 800f9e2:	687b      	ldr	r3, [r7, #4]
 800f9e4:	4618      	mov	r0, r3
 800f9e6:	f7ff fef3 	bl	800f7d0 <_ZN8touchgfx6WidgetC1Ev>
 800f9ea:	4a16      	ldr	r2, [pc, #88]	; (800fa44 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800f9ec:	687b      	ldr	r3, [r7, #4]
 800f9ee:	601a      	str	r2, [r3, #0]
 800f9f0:	687b      	ldr	r3, [r7, #4]
 800f9f2:	3328      	adds	r3, #40	; 0x28
 800f9f4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f9f8:	4618      	mov	r0, r3
 800f9fa:	f7ff ffd1 	bl	800f9a0 <_ZN8touchgfx9TypedTextC1Et>
 800f9fe:	687b      	ldr	r3, [r7, #4]
 800fa00:	3330      	adds	r3, #48	; 0x30
 800fa02:	2100      	movs	r1, #0
 800fa04:	4618      	mov	r0, r3
 800fa06:	f7ff fc17 	bl	800f238 <_ZN8touchgfx9colortypeC1Em>
 800fa0a:	687b      	ldr	r3, [r7, #4]
 800fa0c:	2200      	movs	r2, #0
 800fa0e:	869a      	strh	r2, [r3, #52]	; 0x34
 800fa10:	687b      	ldr	r3, [r7, #4]
 800fa12:	22ff      	movs	r2, #255	; 0xff
 800fa14:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800fa18:	687b      	ldr	r3, [r7, #4]
 800fa1a:	2200      	movs	r2, #0
 800fa1c:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800fa20:	687b      	ldr	r3, [r7, #4]
 800fa22:	2200      	movs	r2, #0
 800fa24:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800fa28:	687b      	ldr	r3, [r7, #4]
 800fa2a:	2200      	movs	r2, #0
 800fa2c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800fa30:	687b      	ldr	r3, [r7, #4]
 800fa32:	333c      	adds	r3, #60	; 0x3c
 800fa34:	4618      	mov	r0, r3
 800fa36:	f000 f8f0 	bl	800fc1a <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800fa3a:	687b      	ldr	r3, [r7, #4]
 800fa3c:	4618      	mov	r0, r3
 800fa3e:	3708      	adds	r7, #8
 800fa40:	46bd      	mov	sp, r7
 800fa42:	bd80      	pop	{r7, pc}
 800fa44:	0802bc98 	.word	0x0802bc98

0800fa48 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 800fa48:	b590      	push	{r4, r7, lr}
 800fa4a:	b087      	sub	sp, #28
 800fa4c:	af00      	add	r7, sp, #0
 800fa4e:	6178      	str	r0, [r7, #20]
 800fa50:	460b      	mov	r3, r1
 800fa52:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 800fa54:	697b      	ldr	r3, [r7, #20]
 800fa56:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800fa5a:	4611      	mov	r1, r2
 800fa5c:	4618      	mov	r0, r3
 800fa5e:	f7ff fd26 	bl	800f4ae <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800fa62:	697b      	ldr	r3, [r7, #20]
 800fa64:	681b      	ldr	r3, [r3, #0]
 800fa66:	3384      	adds	r3, #132	; 0x84
 800fa68:	681b      	ldr	r3, [r3, #0]
 800fa6a:	697c      	ldr	r4, [r7, #20]
 800fa6c:	463a      	mov	r2, r7
 800fa6e:	6979      	ldr	r1, [r7, #20]
 800fa70:	4610      	mov	r0, r2
 800fa72:	4798      	blx	r3
 800fa74:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800fa78:	463a      	mov	r2, r7
 800fa7a:	ca07      	ldmia	r2, {r0, r1, r2}
 800fa7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800fa80:	bf00      	nop
 800fa82:	371c      	adds	r7, #28
 800fa84:	46bd      	mov	sp, r7
 800fa86:	bd90      	pop	{r4, r7, pc}

0800fa88 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800fa88:	b590      	push	{r4, r7, lr}
 800fa8a:	b087      	sub	sp, #28
 800fa8c:	af00      	add	r7, sp, #0
 800fa8e:	6178      	str	r0, [r7, #20]
 800fa90:	460b      	mov	r3, r1
 800fa92:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 800fa94:	697b      	ldr	r3, [r7, #20]
 800fa96:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800fa9a:	4611      	mov	r1, r2
 800fa9c:	4618      	mov	r0, r3
 800fa9e:	f7ff fd15 	bl	800f4cc <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800faa2:	697b      	ldr	r3, [r7, #20]
 800faa4:	681b      	ldr	r3, [r3, #0]
 800faa6:	3384      	adds	r3, #132	; 0x84
 800faa8:	681b      	ldr	r3, [r3, #0]
 800faaa:	697c      	ldr	r4, [r7, #20]
 800faac:	463a      	mov	r2, r7
 800faae:	6979      	ldr	r1, [r7, #20]
 800fab0:	4610      	mov	r0, r2
 800fab2:	4798      	blx	r3
 800fab4:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800fab8:	463a      	mov	r2, r7
 800faba:	ca07      	ldmia	r2, {r0, r1, r2}
 800fabc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800fac0:	bf00      	nop
 800fac2:	371c      	adds	r7, #28
 800fac4:	46bd      	mov	sp, r7
 800fac6:	bd90      	pop	{r4, r7, pc}

0800fac8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800fac8:	b580      	push	{r7, lr}
 800faca:	b082      	sub	sp, #8
 800facc:	af00      	add	r7, sp, #0
 800face:	6078      	str	r0, [r7, #4]
 800fad0:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800fad2:	6878      	ldr	r0, [r7, #4]
 800fad4:	f7ff fbbf 	bl	800f256 <_ZN8touchgfx4RectC1Ev>
    }
 800fad8:	6878      	ldr	r0, [r7, #4]
 800fada:	3708      	adds	r7, #8
 800fadc:	46bd      	mov	sp, r7
 800fade:	bd80      	pop	{r7, pc}

0800fae0 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800fae0:	b480      	push	{r7}
 800fae2:	b083      	sub	sp, #12
 800fae4:	af00      	add	r7, sp, #0
 800fae6:	6078      	str	r0, [r7, #4]
 800fae8:	460b      	mov	r3, r1
 800faea:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800faec:	687b      	ldr	r3, [r7, #4]
 800faee:	78fa      	ldrb	r2, [r7, #3]
 800faf0:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    }
 800faf4:	bf00      	nop
 800faf6:	370c      	adds	r7, #12
 800faf8:	46bd      	mov	sp, r7
 800fafa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fafe:	4770      	bx	lr

0800fb00 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800fb00:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fb02:	b085      	sub	sp, #20
 800fb04:	af00      	add	r7, sp, #0
 800fb06:	6078      	str	r0, [r7, #4]
 800fb08:	460b      	mov	r3, r1
 800fb0a:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800fb0c:	687e      	ldr	r6, [r7, #4]
 800fb0e:	687b      	ldr	r3, [r7, #4]
 800fb10:	681b      	ldr	r3, [r3, #0]
 800fb12:	3334      	adds	r3, #52	; 0x34
 800fb14:	681c      	ldr	r4, [r3, #0]
 800fb16:	887d      	ldrh	r5, [r7, #2]
 800fb18:	6878      	ldr	r0, [r7, #4]
 800fb1a:	f000 f867 	bl	800fbec <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800fb1e:	4603      	mov	r3, r0
 800fb20:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800fb22:	4b1c      	ldr	r3, [pc, #112]	; (800fb94 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800fb24:	681b      	ldr	r3, [r3, #0]
 800fb26:	2b00      	cmp	r3, #0
 800fb28:	d105      	bne.n	800fb36 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800fb2a:	4b1b      	ldr	r3, [pc, #108]	; (800fb98 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800fb2c:	4a1b      	ldr	r2, [pc, #108]	; (800fb9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800fb2e:	216c      	movs	r1, #108	; 0x6c
 800fb30:	481b      	ldr	r0, [pc, #108]	; (800fba0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800fb32:	f019 f999 	bl	8028e68 <__assert_func>
 800fb36:	68fb      	ldr	r3, [r7, #12]
 800fb38:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800fb3a:	68bb      	ldr	r3, [r7, #8]
 800fb3c:	889a      	ldrh	r2, [r3, #4]
 800fb3e:	4b19      	ldr	r3, [pc, #100]	; (800fba4 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800fb40:	881b      	ldrh	r3, [r3, #0]
 800fb42:	429a      	cmp	r2, r3
 800fb44:	bf34      	ite	cc
 800fb46:	2301      	movcc	r3, #1
 800fb48:	2300      	movcs	r3, #0
 800fb4a:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800fb4c:	2b00      	cmp	r3, #0
 800fb4e:	d105      	bne.n	800fb5c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800fb50:	4b15      	ldr	r3, [pc, #84]	; (800fba8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800fb52:	4a12      	ldr	r2, [pc, #72]	; (800fb9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800fb54:	216d      	movs	r1, #109	; 0x6d
 800fb56:	4812      	ldr	r0, [pc, #72]	; (800fba0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800fb58:	f019 f986 	bl	8028e68 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800fb5c:	4b13      	ldr	r3, [pc, #76]	; (800fbac <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800fb5e:	681a      	ldr	r2, [r3, #0]
 800fb60:	4b0c      	ldr	r3, [pc, #48]	; (800fb94 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800fb62:	6819      	ldr	r1, [r3, #0]
 800fb64:	68fb      	ldr	r3, [r7, #12]
 800fb66:	889b      	ldrh	r3, [r3, #4]
 800fb68:	005b      	lsls	r3, r3, #1
 800fb6a:	440b      	add	r3, r1
 800fb6c:	781b      	ldrb	r3, [r3, #0]
 800fb6e:	009b      	lsls	r3, r3, #2
 800fb70:	4413      	add	r3, r2
 800fb72:	681b      	ldr	r3, [r3, #0]
 800fb74:	681a      	ldr	r2, [r3, #0]
 800fb76:	3230      	adds	r2, #48	; 0x30
 800fb78:	6812      	ldr	r2, [r2, #0]
 800fb7a:	4618      	mov	r0, r3
 800fb7c:	4790      	blx	r2
 800fb7e:	4603      	mov	r3, r0
 800fb80:	1aeb      	subs	r3, r5, r3
 800fb82:	b29b      	uxth	r3, r3
 800fb84:	b21b      	sxth	r3, r3
 800fb86:	4619      	mov	r1, r3
 800fb88:	4630      	mov	r0, r6
 800fb8a:	47a0      	blx	r4
    }
 800fb8c:	bf00      	nop
 800fb8e:	3714      	adds	r7, #20
 800fb90:	46bd      	mov	sp, r7
 800fb92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fb94:	200259e8 	.word	0x200259e8
 800fb98:	0802a200 	.word	0x0802a200
 800fb9c:	0802a244 	.word	0x0802a244
 800fba0:	0802a280 	.word	0x0802a280
 800fba4:	200259ec 	.word	0x200259ec
 800fba8:	0802a2c4 	.word	0x0802a2c4
 800fbac:	200259f0 	.word	0x200259f0

0800fbb0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800fbb0:	b580      	push	{r7, lr}
 800fbb2:	b082      	sub	sp, #8
 800fbb4:	af00      	add	r7, sp, #0
 800fbb6:	6078      	str	r0, [r7, #4]
 800fbb8:	460b      	mov	r3, r1
 800fbba:	807b      	strh	r3, [r7, #2]
 800fbbc:	4613      	mov	r3, r2
 800fbbe:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800fbc0:	687a      	ldr	r2, [r7, #4]
 800fbc2:	687b      	ldr	r3, [r7, #4]
 800fbc4:	681b      	ldr	r3, [r3, #0]
 800fbc6:	3330      	adds	r3, #48	; 0x30
 800fbc8:	681b      	ldr	r3, [r3, #0]
 800fbca:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800fbce:	4610      	mov	r0, r2
 800fbd0:	4798      	blx	r3
        setBaselineY(baselineY);
 800fbd2:	687b      	ldr	r3, [r7, #4]
 800fbd4:	681b      	ldr	r3, [r3, #0]
 800fbd6:	3364      	adds	r3, #100	; 0x64
 800fbd8:	681b      	ldr	r3, [r3, #0]
 800fbda:	f9b7 2000 	ldrsh.w	r2, [r7]
 800fbde:	4611      	mov	r1, r2
 800fbe0:	6878      	ldr	r0, [r7, #4]
 800fbe2:	4798      	blx	r3
    }
 800fbe4:	bf00      	nop
 800fbe6:	3708      	adds	r7, #8
 800fbe8:	46bd      	mov	sp, r7
 800fbea:	bd80      	pop	{r7, pc}

0800fbec <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800fbec:	b480      	push	{r7}
 800fbee:	b083      	sub	sp, #12
 800fbf0:	af00      	add	r7, sp, #0
 800fbf2:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800fbf4:	687b      	ldr	r3, [r7, #4]
 800fbf6:	3328      	adds	r3, #40	; 0x28
    }
 800fbf8:	4618      	mov	r0, r3
 800fbfa:	370c      	adds	r7, #12
 800fbfc:	46bd      	mov	sp, r7
 800fbfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc02:	4770      	bx	lr

0800fc04 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800fc04:	b480      	push	{r7}
 800fc06:	b083      	sub	sp, #12
 800fc08:	af00      	add	r7, sp, #0
 800fc0a:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800fc0c:	2300      	movs	r3, #0
    }
 800fc0e:	4618      	mov	r0, r3
 800fc10:	370c      	adds	r7, #12
 800fc12:	46bd      	mov	sp, r7
 800fc14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc18:	4770      	bx	lr

0800fc1a <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800fc1a:	b580      	push	{r7, lr}
 800fc1c:	b084      	sub	sp, #16
 800fc1e:	af02      	add	r7, sp, #8
 800fc20:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800fc22:	6878      	ldr	r0, [r7, #4]
 800fc24:	f04f 33ff 	mov.w	r3, #4294967295
 800fc28:	9300      	str	r3, [sp, #0]
 800fc2a:	f04f 33ff 	mov.w	r3, #4294967295
 800fc2e:	2200      	movs	r2, #0
 800fc30:	2100      	movs	r1, #0
 800fc32:	f7ff fb27 	bl	800f284 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800fc36:	687b      	ldr	r3, [r7, #4]
 800fc38:	2200      	movs	r2, #0
 800fc3a:	609a      	str	r2, [r3, #8]
        {
        }
 800fc3c:	687b      	ldr	r3, [r7, #4]
 800fc3e:	4618      	mov	r0, r3
 800fc40:	3708      	adds	r7, #8
 800fc42:	46bd      	mov	sp, r7
 800fc44:	bd80      	pop	{r7, pc}
	...

0800fc48 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800fc48:	b580      	push	{r7, lr}
 800fc4a:	b082      	sub	sp, #8
 800fc4c:	af00      	add	r7, sp, #0
 800fc4e:	6078      	str	r0, [r7, #4]
 800fc50:	4a08      	ldr	r2, [pc, #32]	; (800fc74 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800fc52:	687b      	ldr	r3, [r7, #4]
 800fc54:	601a      	str	r2, [r3, #0]
 800fc56:	687b      	ldr	r3, [r7, #4]
 800fc58:	3328      	adds	r3, #40	; 0x28
 800fc5a:	4618      	mov	r0, r3
 800fc5c:	f7fe fbb6 	bl	800e3cc <_ZN8touchgfx9TypedTextD1Ev>
 800fc60:	687b      	ldr	r3, [r7, #4]
 800fc62:	4618      	mov	r0, r3
 800fc64:	f7ff fdc6 	bl	800f7f4 <_ZN8touchgfx6WidgetD1Ev>
 800fc68:	687b      	ldr	r3, [r7, #4]
 800fc6a:	4618      	mov	r0, r3
 800fc6c:	3708      	adds	r7, #8
 800fc6e:	46bd      	mov	sp, r7
 800fc70:	bd80      	pop	{r7, pc}
 800fc72:	bf00      	nop
 800fc74:	0802bc98 	.word	0x0802bc98

0800fc78 <_ZN8touchgfx8TextAreaD0Ev>:
 800fc78:	b580      	push	{r7, lr}
 800fc7a:	b082      	sub	sp, #8
 800fc7c:	af00      	add	r7, sp, #0
 800fc7e:	6078      	str	r0, [r7, #4]
 800fc80:	6878      	ldr	r0, [r7, #4]
 800fc82:	f7ff ffe1 	bl	800fc48 <_ZN8touchgfx8TextAreaD1Ev>
 800fc86:	2148      	movs	r1, #72	; 0x48
 800fc88:	6878      	ldr	r0, [r7, #4]
 800fc8a:	f017 f9ca 	bl	8027022 <_ZdlPvj>
 800fc8e:	687b      	ldr	r3, [r7, #4]
 800fc90:	4618      	mov	r0, r3
 800fc92:	3708      	adds	r7, #8
 800fc94:	46bd      	mov	sp, r7
 800fc96:	bd80      	pop	{r7, pc}

0800fc98 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800fc98:	b580      	push	{r7, lr}
 800fc9a:	b082      	sub	sp, #8
 800fc9c:	af00      	add	r7, sp, #0
 800fc9e:	6078      	str	r0, [r7, #4]
        : TextArea()
 800fca0:	687b      	ldr	r3, [r7, #4]
 800fca2:	4618      	mov	r0, r3
 800fca4:	f7ff fe92 	bl	800f9cc <_ZN8touchgfx8TextAreaC1Ev>
 800fca8:	4a03      	ldr	r2, [pc, #12]	; (800fcb8 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800fcaa:	687b      	ldr	r3, [r7, #4]
 800fcac:	601a      	str	r2, [r3, #0]
    {
    }
 800fcae:	687b      	ldr	r3, [r7, #4]
 800fcb0:	4618      	mov	r0, r3
 800fcb2:	3708      	adds	r7, #8
 800fcb4:	46bd      	mov	sp, r7
 800fcb6:	bd80      	pop	{r7, pc}
 800fcb8:	0802be04 	.word	0x0802be04

0800fcbc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800fcbc:	b580      	push	{r7, lr}
 800fcbe:	b082      	sub	sp, #8
 800fcc0:	af00      	add	r7, sp, #0
 800fcc2:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800fcc4:	687b      	ldr	r3, [r7, #4]
 800fcc6:	4618      	mov	r0, r3
 800fcc8:	f7ff fb5c 	bl	800f384 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800fccc:	bf00      	nop
 800fcce:	3708      	adds	r7, #8
 800fcd0:	46bd      	mov	sp, r7
 800fcd2:	bd80      	pop	{r7, pc}

0800fcd4 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800fcd4:	b580      	push	{r7, lr}
 800fcd6:	b082      	sub	sp, #8
 800fcd8:	af00      	add	r7, sp, #0
 800fcda:	6078      	str	r0, [r7, #4]
 800fcdc:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800fcde:	6878      	ldr	r0, [r7, #4]
 800fce0:	f7ff ff9b 	bl	800fc1a <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800fce4:	6878      	ldr	r0, [r7, #4]
 800fce6:	3708      	adds	r7, #8
 800fce8:	46bd      	mov	sp, r7
 800fcea:	bd80      	pop	{r7, pc}

0800fcec <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800fcec:	b580      	push	{r7, lr}
 800fcee:	b082      	sub	sp, #8
 800fcf0:	af00      	add	r7, sp, #0
 800fcf2:	6078      	str	r0, [r7, #4]
 800fcf4:	4a05      	ldr	r2, [pc, #20]	; (800fd0c <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800fcf6:	687b      	ldr	r3, [r7, #4]
 800fcf8:	601a      	str	r2, [r3, #0]
 800fcfa:	687b      	ldr	r3, [r7, #4]
 800fcfc:	4618      	mov	r0, r3
 800fcfe:	f7ff ffa3 	bl	800fc48 <_ZN8touchgfx8TextAreaD1Ev>
 800fd02:	687b      	ldr	r3, [r7, #4]
 800fd04:	4618      	mov	r0, r3
 800fd06:	3708      	adds	r7, #8
 800fd08:	46bd      	mov	sp, r7
 800fd0a:	bd80      	pop	{r7, pc}
 800fd0c:	0802be04 	.word	0x0802be04

0800fd10 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800fd10:	b580      	push	{r7, lr}
 800fd12:	b082      	sub	sp, #8
 800fd14:	af00      	add	r7, sp, #0
 800fd16:	6078      	str	r0, [r7, #4]
 800fd18:	6878      	ldr	r0, [r7, #4]
 800fd1a:	f7ff ffe7 	bl	800fcec <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800fd1e:	2148      	movs	r1, #72	; 0x48
 800fd20:	6878      	ldr	r0, [r7, #4]
 800fd22:	f017 f97e 	bl	8027022 <_ZdlPvj>
 800fd26:	687b      	ldr	r3, [r7, #4]
 800fd28:	4618      	mov	r0, r3
 800fd2a:	3708      	adds	r7, #8
 800fd2c:	46bd      	mov	sp, r7
 800fd2e:	bd80      	pop	{r7, pc}

0800fd30 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800fd30:	b580      	push	{r7, lr}
 800fd32:	b082      	sub	sp, #8
 800fd34:	af00      	add	r7, sp, #0
 800fd36:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800fd38:	687b      	ldr	r3, [r7, #4]
 800fd3a:	4618      	mov	r0, r3
 800fd3c:	f7ff ffac 	bl	800fc98 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800fd40:	4a05      	ldr	r2, [pc, #20]	; (800fd58 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800fd42:	687b      	ldr	r3, [r7, #4]
 800fd44:	601a      	str	r2, [r3, #0]
 800fd46:	687b      	ldr	r3, [r7, #4]
 800fd48:	2200      	movs	r2, #0
 800fd4a:	649a      	str	r2, [r3, #72]	; 0x48
    {
    }
 800fd4c:	687b      	ldr	r3, [r7, #4]
 800fd4e:	4618      	mov	r0, r3
 800fd50:	3708      	adds	r7, #8
 800fd52:	46bd      	mov	sp, r7
 800fd54:	bd80      	pop	{r7, pc}
 800fd56:	bf00      	nop
 800fd58:	0802b400 	.word	0x0802b400

0800fd5c <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800fd5c:	b480      	push	{r7}
 800fd5e:	b083      	sub	sp, #12
 800fd60:	af00      	add	r7, sp, #0
 800fd62:	6078      	str	r0, [r7, #4]
 800fd64:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800fd66:	687b      	ldr	r3, [r7, #4]
 800fd68:	683a      	ldr	r2, [r7, #0]
 800fd6a:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800fd6c:	bf00      	nop
 800fd6e:	370c      	adds	r7, #12
 800fd70:	46bd      	mov	sp, r7
 800fd72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd76:	4770      	bx	lr

0800fd78 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800fd78:	b480      	push	{r7}
 800fd7a:	b083      	sub	sp, #12
 800fd7c:	af00      	add	r7, sp, #0
 800fd7e:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800fd80:	687b      	ldr	r3, [r7, #4]
 800fd82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    }
 800fd84:	4618      	mov	r0, r3
 800fd86:	370c      	adds	r7, #12
 800fd88:	46bd      	mov	sp, r7
 800fd8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd8e:	4770      	bx	lr

0800fd90 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800fd90:	b580      	push	{r7, lr}
 800fd92:	b082      	sub	sp, #8
 800fd94:	af00      	add	r7, sp, #0
 800fd96:	6078      	str	r0, [r7, #4]
 800fd98:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800fd9a:	6839      	ldr	r1, [r7, #0]
 800fd9c:	6878      	ldr	r0, [r7, #4]
 800fd9e:	f7ff ffdd 	bl	800fd5c <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800fda2:	bf00      	nop
 800fda4:	3708      	adds	r7, #8
 800fda6:	46bd      	mov	sp, r7
 800fda8:	bd80      	pop	{r7, pc}
	...

0800fdac <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 800fdac:	b580      	push	{r7, lr}
 800fdae:	b082      	sub	sp, #8
 800fdb0:	af00      	add	r7, sp, #0
 800fdb2:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 800fdb4:	687b      	ldr	r3, [r7, #4]
 800fdb6:	4618      	mov	r0, r3
 800fdb8:	2326      	movs	r3, #38	; 0x26
 800fdba:	461a      	mov	r2, r3
 800fdbc:	2100      	movs	r1, #0
 800fdbe:	f019 fa58 	bl	8029272 <memset>
 800fdc2:	687b      	ldr	r3, [r7, #4]
 800fdc4:	4618      	mov	r0, r3
 800fdc6:	f7ff fd03 	bl	800f7d0 <_ZN8touchgfx6WidgetC1Ev>
 800fdca:	4a0a      	ldr	r2, [pc, #40]	; (800fdf4 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 800fdcc:	687b      	ldr	r3, [r7, #4]
 800fdce:	601a      	str	r2, [r3, #0]
 800fdd0:	687b      	ldr	r3, [r7, #4]
 800fdd2:	2200      	movs	r2, #0
 800fdd4:	629a      	str	r2, [r3, #40]	; 0x28
 800fdd6:	687b      	ldr	r3, [r7, #4]
 800fdd8:	2200      	movs	r2, #0
 800fdda:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
        setTouchable(true);
 800fdde:	687b      	ldr	r3, [r7, #4]
 800fde0:	2101      	movs	r1, #1
 800fde2:	4618      	mov	r0, r3
 800fde4:	f7ff fbd4 	bl	800f590 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800fde8:	687b      	ldr	r3, [r7, #4]
 800fdea:	4618      	mov	r0, r3
 800fdec:	3708      	adds	r7, #8
 800fdee:	46bd      	mov	sp, r7
 800fdf0:	bd80      	pop	{r7, pc}
 800fdf2:	bf00      	nop
 800fdf4:	0802bc28 	.word	0x0802bc28

0800fdf8 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800fdf8:	b580      	push	{r7, lr}
 800fdfa:	b082      	sub	sp, #8
 800fdfc:	af00      	add	r7, sp, #0
 800fdfe:	6078      	str	r0, [r7, #4]
 800fe00:	4a05      	ldr	r2, [pc, #20]	; (800fe18 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800fe02:	687b      	ldr	r3, [r7, #4]
 800fe04:	601a      	str	r2, [r3, #0]
 800fe06:	687b      	ldr	r3, [r7, #4]
 800fe08:	4618      	mov	r0, r3
 800fe0a:	f7ff fcf3 	bl	800f7f4 <_ZN8touchgfx6WidgetD1Ev>
 800fe0e:	687b      	ldr	r3, [r7, #4]
 800fe10:	4618      	mov	r0, r3
 800fe12:	3708      	adds	r7, #8
 800fe14:	46bd      	mov	sp, r7
 800fe16:	bd80      	pop	{r7, pc}
 800fe18:	0802bc28 	.word	0x0802bc28

0800fe1c <_ZN8touchgfx14AbstractButtonD0Ev>:
 800fe1c:	b580      	push	{r7, lr}
 800fe1e:	b082      	sub	sp, #8
 800fe20:	af00      	add	r7, sp, #0
 800fe22:	6078      	str	r0, [r7, #4]
 800fe24:	6878      	ldr	r0, [r7, #4]
 800fe26:	f7ff ffe7 	bl	800fdf8 <_ZN8touchgfx14AbstractButtonD1Ev>
 800fe2a:	2130      	movs	r1, #48	; 0x30
 800fe2c:	6878      	ldr	r0, [r7, #4]
 800fe2e:	f017 f8f8 	bl	8027022 <_ZdlPvj>
 800fe32:	687b      	ldr	r3, [r7, #4]
 800fe34:	4618      	mov	r0, r3
 800fe36:	3708      	adds	r7, #8
 800fe38:	46bd      	mov	sp, r7
 800fe3a:	bd80      	pop	{r7, pc}

0800fe3c <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 800fe3c:	b580      	push	{r7, lr}
 800fe3e:	b082      	sub	sp, #8
 800fe40:	af00      	add	r7, sp, #0
 800fe42:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 800fe44:	687b      	ldr	r3, [r7, #4]
 800fe46:	4618      	mov	r0, r3
 800fe48:	f7ff ffb0 	bl	800fdac <_ZN8touchgfx14AbstractButtonC1Ev>
 800fe4c:	4a0c      	ldr	r2, [pc, #48]	; (800fe80 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 800fe4e:	687b      	ldr	r3, [r7, #4]
 800fe50:	601a      	str	r2, [r3, #0]
 800fe52:	687b      	ldr	r3, [r7, #4]
 800fe54:	332e      	adds	r3, #46	; 0x2e
 800fe56:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fe5a:	4618      	mov	r0, r3
 800fe5c:	f7ff fa32 	bl	800f2c4 <_ZN8touchgfx6BitmapC1Et>
 800fe60:	687b      	ldr	r3, [r7, #4]
 800fe62:	3330      	adds	r3, #48	; 0x30
 800fe64:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fe68:	4618      	mov	r0, r3
 800fe6a:	f7ff fa2b 	bl	800f2c4 <_ZN8touchgfx6BitmapC1Et>
 800fe6e:	687b      	ldr	r3, [r7, #4]
 800fe70:	22ff      	movs	r2, #255	; 0xff
 800fe72:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
    {
    }
 800fe76:	687b      	ldr	r3, [r7, #4]
 800fe78:	4618      	mov	r0, r3
 800fe7a:	3708      	adds	r7, #8
 800fe7c:	46bd      	mov	sp, r7
 800fe7e:	bd80      	pop	{r7, pc}
 800fe80:	0802bd90 	.word	0x0802bd90

0800fe84 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 800fe84:	b580      	push	{r7, lr}
 800fe86:	b082      	sub	sp, #8
 800fe88:	af00      	add	r7, sp, #0
 800fe8a:	6078      	str	r0, [r7, #4]
 800fe8c:	4a05      	ldr	r2, [pc, #20]	; (800fea4 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 800fe8e:	687b      	ldr	r3, [r7, #4]
 800fe90:	601a      	str	r2, [r3, #0]
 800fe92:	687b      	ldr	r3, [r7, #4]
 800fe94:	4618      	mov	r0, r3
 800fe96:	f7ff fc11 	bl	800f6bc <_ZN8touchgfx6ScreenD1Ev>
 800fe9a:	687b      	ldr	r3, [r7, #4]
 800fe9c:	4618      	mov	r0, r3
 800fe9e:	3708      	adds	r7, #8
 800fea0:	46bd      	mov	sp, r7
 800fea2:	bd80      	pop	{r7, pc}
 800fea4:	0802b3cc 	.word	0x0802b3cc

0800fea8 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800fea8:	b580      	push	{r7, lr}
 800feaa:	b082      	sub	sp, #8
 800feac:	af00      	add	r7, sp, #0
 800feae:	6078      	str	r0, [r7, #4]
 800feb0:	6878      	ldr	r0, [r7, #4]
 800feb2:	f7ff ffe7 	bl	800fe84 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800feb6:	2140      	movs	r1, #64	; 0x40
 800feb8:	6878      	ldr	r0, [r7, #4]
 800feba:	f017 f8b2 	bl	8027022 <_ZdlPvj>
 800febe:	687b      	ldr	r3, [r7, #4]
 800fec0:	4618      	mov	r0, r3
 800fec2:	3708      	adds	r7, #8
 800fec4:	46bd      	mov	sp, r7
 800fec6:	bd80      	pop	{r7, pc}

0800fec8 <_ZN15Screen1ViewBaseC1Ev>:
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
 800fec8:	b590      	push	{r4, r7, lr}
 800feca:	b09f      	sub	sp, #124	; 0x7c
 800fecc:	af02      	add	r7, sp, #8
 800fece:	6178      	str	r0, [r7, #20]
    frameCountInteraction2Interval(0)
 800fed0:	697b      	ldr	r3, [r7, #20]
 800fed2:	4618      	mov	r0, r3
 800fed4:	f000 fa8a 	bl	80103ec <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 800fed8:	4ab0      	ldr	r2, [pc, #704]	; (801019c <_ZN15Screen1ViewBaseC1Ev+0x2d4>)
 800feda:	697b      	ldr	r3, [r7, #20]
 800fedc:	601a      	str	r2, [r3, #0]
 800fede:	697b      	ldr	r3, [r7, #20]
 800fee0:	3340      	adds	r3, #64	; 0x40
 800fee2:	4618      	mov	r0, r3
 800fee4:	f7ff fca8 	bl	800f838 <_ZN8touchgfx3BoxC1Ev>
 800fee8:	697b      	ldr	r3, [r7, #20]
 800feea:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800feee:	f107 031c 	add.w	r3, r7, #28
 800fef2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fef6:	4618      	mov	r0, r3
 800fef8:	f7ff f9e4 	bl	800f2c4 <_ZN8touchgfx6BitmapC1Et>
 800fefc:	f107 031c 	add.w	r3, r7, #28
 800ff00:	4619      	mov	r1, r3
 800ff02:	4620      	mov	r0, r4
 800ff04:	f7ff fcca 	bl	800f89c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800ff08:	697b      	ldr	r3, [r7, #20]
 800ff0a:	3398      	adds	r3, #152	; 0x98
 800ff0c:	4618      	mov	r0, r3
 800ff0e:	f7ff fd0d 	bl	800f92c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800ff12:	697b      	ldr	r3, [r7, #20]
 800ff14:	33cc      	adds	r3, #204	; 0xcc
 800ff16:	4618      	mov	r0, r3
 800ff18:	f000 faa0 	bl	801045c <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEEC1Ev>
 800ff1c:	697b      	ldr	r3, [r7, #20]
 800ff1e:	f503 739a 	add.w	r3, r3, #308	; 0x134
 800ff22:	4618      	mov	r0, r3
 800ff24:	f7ff ff8a 	bl	800fe3c <_ZN8touchgfx6ButtonC1Ev>
 800ff28:	697b      	ldr	r3, [r7, #20]
 800ff2a:	f503 74b4 	add.w	r4, r3, #360	; 0x168
 800ff2e:	f107 0320 	add.w	r3, r7, #32
 800ff32:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ff36:	4618      	mov	r0, r3
 800ff38:	f7ff f9c4 	bl	800f2c4 <_ZN8touchgfx6BitmapC1Et>
 800ff3c:	f107 0320 	add.w	r3, r7, #32
 800ff40:	4619      	mov	r1, r3
 800ff42:	4620      	mov	r0, r4
 800ff44:	f7ff fcaa 	bl	800f89c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800ff48:	697b      	ldr	r3, [r7, #20]
 800ff4a:	2200      	movs	r2, #0
 800ff4c:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
{
    __background.setPosition(0, 0, 320, 240);
 800ff50:	697b      	ldr	r3, [r7, #20]
 800ff52:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800ff56:	23f0      	movs	r3, #240	; 0xf0
 800ff58:	9300      	str	r3, [sp, #0]
 800ff5a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800ff5e:	2200      	movs	r2, #0
 800ff60:	2100      	movs	r1, #0
 800ff62:	f7ff fa2d 	bl	800f3c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800ff66:	697b      	ldr	r3, [r7, #20]
 800ff68:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800ff6c:	2300      	movs	r3, #0
 800ff6e:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 800ff72:	2300      	movs	r3, #0
 800ff74:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
 800ff78:	2300      	movs	r3, #0
 800ff7a:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800ff7e:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 800ff82:	041b      	lsls	r3, r3, #16
 800ff84:	461a      	mov	r2, r3
 800ff86:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 800ff8a:	021b      	lsls	r3, r3, #8
 800ff8c:	431a      	orrs	r2, r3
 800ff8e:	f897 3054 	ldrb.w	r3, [r7, #84]	; 0x54
 800ff92:	4313      	orrs	r3, r2
 800ff94:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ff98:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800ff9c:	4611      	mov	r1, r2
 800ff9e:	4618      	mov	r0, r3
 800ffa0:	f7ff f94a 	bl	800f238 <_ZN8touchgfx9colortypeC1Em>
 800ffa4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800ffa6:	4619      	mov	r1, r3
 800ffa8:	4620      	mov	r0, r4
 800ffaa:	f7ff fc69 	bl	800f880 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800ffae:	697a      	ldr	r2, [r7, #20]
 800ffb0:	697b      	ldr	r3, [r7, #20]
 800ffb2:	3340      	adds	r3, #64	; 0x40
 800ffb4:	4619      	mov	r1, r3
 800ffb6:	4610      	mov	r0, r2
 800ffb8:	f7ff fbd8 	bl	800f76c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    image1.setXY(0, 0);
 800ffbc:	697b      	ldr	r3, [r7, #20]
 800ffbe:	336c      	adds	r3, #108	; 0x6c
 800ffc0:	2200      	movs	r2, #0
 800ffc2:	2100      	movs	r1, #0
 800ffc4:	4618      	mov	r0, r3
 800ffc6:	f7ff fa54 	bl	800f472 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_320X240_POLY_ID));
 800ffca:	697b      	ldr	r3, [r7, #20]
 800ffcc:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800ffd0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800ffd4:	2100      	movs	r1, #0
 800ffd6:	4618      	mov	r0, r3
 800ffd8:	f7ff f974 	bl	800f2c4 <_ZN8touchgfx6BitmapC1Et>
 800ffdc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800ffe0:	4619      	mov	r1, r3
 800ffe2:	4620      	mov	r0, r4
 800ffe4:	f004 fdaf 	bl	8014b46 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image1);
 800ffe8:	697a      	ldr	r2, [r7, #20]
 800ffea:	697b      	ldr	r3, [r7, #20]
 800ffec:	336c      	adds	r3, #108	; 0x6c
 800ffee:	4619      	mov	r1, r3
 800fff0:	4610      	mov	r0, r2
 800fff2:	f7ff fbbb 	bl	800f76c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    boxWithBorder1.setPosition(0, 15, 320, 95);
 800fff6:	697b      	ldr	r3, [r7, #20]
 800fff8:	f103 0098 	add.w	r0, r3, #152	; 0x98
 800fffc:	235f      	movs	r3, #95	; 0x5f
 800fffe:	9300      	str	r3, [sp, #0]
 8010000:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8010004:	220f      	movs	r2, #15
 8010006:	2100      	movs	r1, #0
 8010008:	f7ff f9da 	bl	800f3c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 801000c:	697b      	ldr	r3, [r7, #20]
 801000e:	f103 0498 	add.w	r4, r3, #152	; 0x98
 8010012:	23ff      	movs	r3, #255	; 0xff
 8010014:	f887 3059 	strb.w	r3, [r7, #89]	; 0x59
 8010018:	23ff      	movs	r3, #255	; 0xff
 801001a:	f887 3058 	strb.w	r3, [r7, #88]	; 0x58
 801001e:	23ff      	movs	r3, #255	; 0xff
 8010020:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 8010024:	f897 3059 	ldrb.w	r3, [r7, #89]	; 0x59
 8010028:	041b      	lsls	r3, r3, #16
 801002a:	461a      	mov	r2, r3
 801002c:	f897 3058 	ldrb.w	r3, [r7, #88]	; 0x58
 8010030:	021b      	lsls	r3, r3, #8
 8010032:	431a      	orrs	r2, r3
 8010034:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8010038:	4313      	orrs	r3, r2
 801003a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 801003e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8010042:	4611      	mov	r1, r2
 8010044:	4618      	mov	r0, r3
 8010046:	f7ff f8f7 	bl	800f238 <_ZN8touchgfx9colortypeC1Em>
 801004a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801004c:	4619      	mov	r1, r3
 801004e:	4620      	mov	r0, r4
 8010050:	f7ff fc16 	bl	800f880 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(107, 104, 104));
 8010054:	697b      	ldr	r3, [r7, #20]
 8010056:	f103 0498 	add.w	r4, r3, #152	; 0x98
 801005a:	236b      	movs	r3, #107	; 0x6b
 801005c:	f887 305c 	strb.w	r3, [r7, #92]	; 0x5c
 8010060:	2368      	movs	r3, #104	; 0x68
 8010062:	f887 305b 	strb.w	r3, [r7, #91]	; 0x5b
 8010066:	2368      	movs	r3, #104	; 0x68
 8010068:	f887 305a 	strb.w	r3, [r7, #90]	; 0x5a
 801006c:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 8010070:	041b      	lsls	r3, r3, #16
 8010072:	461a      	mov	r2, r3
 8010074:	f897 305b 	ldrb.w	r3, [r7, #91]	; 0x5b
 8010078:	021b      	lsls	r3, r3, #8
 801007a:	431a      	orrs	r2, r3
 801007c:	f897 305a 	ldrb.w	r3, [r7, #90]	; 0x5a
 8010080:	4313      	orrs	r3, r2
 8010082:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 8010086:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801008a:	4611      	mov	r1, r2
 801008c:	4618      	mov	r0, r3
 801008e:	f7ff f8d3 	bl	800f238 <_ZN8touchgfx9colortypeC1Em>
 8010092:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8010094:	4619      	mov	r1, r3
 8010096:	4620      	mov	r0, r4
 8010098:	f7ff fc64 	bl	800f964 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
    boxWithBorder1.setBorderSize(1);
 801009c:	697b      	ldr	r3, [r7, #20]
 801009e:	3398      	adds	r3, #152	; 0x98
 80100a0:	2101      	movs	r1, #1
 80100a2:	4618      	mov	r0, r3
 80100a4:	f7ff fc6c 	bl	800f980 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    add(boxWithBorder1);
 80100a8:	697a      	ldr	r2, [r7, #20]
 80100aa:	697b      	ldr	r3, [r7, #20]
 80100ac:	3398      	adds	r3, #152	; 0x98
 80100ae:	4619      	mov	r1, r3
 80100b0:	4610      	mov	r0, r2
 80100b2:	f7ff fb5b 	bl	800f76c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setPosition(30, 52, 516, 20);
 80100b6:	697b      	ldr	r3, [r7, #20]
 80100b8:	f103 00cc 	add.w	r0, r3, #204	; 0xcc
 80100bc:	2314      	movs	r3, #20
 80100be:	9300      	str	r3, [sp, #0]
 80100c0:	f44f 7301 	mov.w	r3, #516	; 0x204
 80100c4:	2234      	movs	r2, #52	; 0x34
 80100c6:	211e      	movs	r1, #30
 80100c8:	f7ff f97a 	bl	800f3c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 80100cc:	697b      	ldr	r3, [r7, #20]
 80100ce:	f103 04cc 	add.w	r4, r3, #204	; 0xcc
 80100d2:	2300      	movs	r3, #0
 80100d4:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 80100d8:	2300      	movs	r3, #0
 80100da:	f887 305e 	strb.w	r3, [r7, #94]	; 0x5e
 80100de:	2300      	movs	r3, #0
 80100e0:	f887 305d 	strb.w	r3, [r7, #93]	; 0x5d
 80100e4:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 80100e8:	041b      	lsls	r3, r3, #16
 80100ea:	461a      	mov	r2, r3
 80100ec:	f897 305e 	ldrb.w	r3, [r7, #94]	; 0x5e
 80100f0:	021b      	lsls	r3, r3, #8
 80100f2:	431a      	orrs	r2, r3
 80100f4:	f897 305d 	ldrb.w	r3, [r7, #93]	; 0x5d
 80100f8:	4313      	orrs	r3, r2
 80100fa:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 80100fe:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8010102:	4611      	mov	r1, r2
 8010104:	4618      	mov	r0, r3
 8010106:	f7ff f897 	bl	800f238 <_ZN8touchgfx9colortypeC1Em>
 801010a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801010c:	663c      	str	r4, [r7, #96]	; 0x60
 801010e:	61bb      	str	r3, [r7, #24]
        color = newColor;
 8010110:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8010112:	69ba      	ldr	r2, [r7, #24]
 8010114:	631a      	str	r2, [r3, #48]	; 0x30
    }
 8010116:	bf00      	nop
    textArea1.setLinespacing(0);
 8010118:	697b      	ldr	r3, [r7, #20]
 801011a:	33cc      	adds	r3, #204	; 0xcc
 801011c:	66bb      	str	r3, [r7, #104]	; 0x68
 801011e:	2300      	movs	r3, #0
 8010120:	f8a7 3066 	strh.w	r3, [r7, #102]	; 0x66
        linespace = space;
 8010124:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8010126:	f8b7 2066 	ldrh.w	r2, [r7, #102]	; 0x66
 801012a:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 801012c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 801012e:	681b      	ldr	r3, [r3, #0]
 8010130:	3384      	adds	r3, #132	; 0x84
 8010132:	681b      	ldr	r3, [r3, #0]
 8010134:	6ebc      	ldr	r4, [r7, #104]	; 0x68
 8010136:	463a      	mov	r2, r7
 8010138:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 801013a:	4610      	mov	r0, r2
 801013c:	4798      	blx	r3
 801013e:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 8010142:	463a      	mov	r2, r7
 8010144:	ca07      	ldmia	r2, {r0, r1, r2}
 8010146:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 801014a:	bf00      	nop
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3WQK).getText());
 801014c:	697b      	ldr	r3, [r7, #20]
 801014e:	f503 74ca 	add.w	r4, r3, #404	; 0x194
 8010152:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8010156:	2100      	movs	r1, #0
 8010158:	4618      	mov	r0, r3
 801015a:	f7ff fc21 	bl	800f9a0 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 801015e:	4b10      	ldr	r3, [pc, #64]	; (80101a0 <_ZN15Screen1ViewBaseC1Ev+0x2d8>)
 8010160:	681b      	ldr	r3, [r3, #0]
 8010162:	2b00      	cmp	r3, #0
 8010164:	d105      	bne.n	8010172 <_ZN15Screen1ViewBaseC1Ev+0x2aa>
 8010166:	4b0f      	ldr	r3, [pc, #60]	; (80101a4 <_ZN15Screen1ViewBaseC1Ev+0x2dc>)
 8010168:	4a0f      	ldr	r2, [pc, #60]	; (80101a8 <_ZN15Screen1ViewBaseC1Ev+0x2e0>)
 801016a:	2160      	movs	r1, #96	; 0x60
 801016c:	480f      	ldr	r0, [pc, #60]	; (80101ac <_ZN15Screen1ViewBaseC1Ev+0x2e4>)
 801016e:	f018 fe7b 	bl	8028e68 <__assert_func>
 8010172:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8010176:	66fb      	str	r3, [r7, #108]	; 0x6c
        return typedTextId < numberOfTypedTexts;
 8010178:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801017a:	889a      	ldrh	r2, [r3, #4]
 801017c:	4b0c      	ldr	r3, [pc, #48]	; (80101b0 <_ZN15Screen1ViewBaseC1Ev+0x2e8>)
 801017e:	881b      	ldrh	r3, [r3, #0]
 8010180:	429a      	cmp	r2, r3
 8010182:	bf34      	ite	cc
 8010184:	2301      	movcc	r3, #1
 8010186:	2300      	movcs	r3, #0
 8010188:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 801018a:	2b00      	cmp	r3, #0
 801018c:	d114      	bne.n	80101b8 <_ZN15Screen1ViewBaseC1Ev+0x2f0>
 801018e:	4b09      	ldr	r3, [pc, #36]	; (80101b4 <_ZN15Screen1ViewBaseC1Ev+0x2ec>)
 8010190:	4a05      	ldr	r2, [pc, #20]	; (80101a8 <_ZN15Screen1ViewBaseC1Ev+0x2e0>)
 8010192:	2161      	movs	r1, #97	; 0x61
 8010194:	4805      	ldr	r0, [pc, #20]	; (80101ac <_ZN15Screen1ViewBaseC1Ev+0x2e4>)
 8010196:	f018 fe67 	bl	8028e68 <__assert_func>
 801019a:	bf00      	nop
 801019c:	0802b300 	.word	0x0802b300
 80101a0:	200259e8 	.word	0x200259e8
 80101a4:	0802a200 	.word	0x0802a200
 80101a8:	0802a304 	.word	0x0802a304
 80101ac:	0802a280 	.word	0x0802a280
 80101b0:	200259ec 	.word	0x200259ec
 80101b4:	0802a2c4 	.word	0x0802a2c4
        return texts->getText(typedTextId);
 80101b8:	4b41      	ldr	r3, [pc, #260]	; (80102c0 <_ZN15Screen1ViewBaseC1Ev+0x3f8>)
 80101ba:	681b      	ldr	r3, [r3, #0]
 80101bc:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 80101be:	4611      	mov	r1, r2
 80101c0:	4618      	mov	r0, r3
 80101c2:	f000 fd0d 	bl	8010be0 <_ZNK8touchgfx5Texts7getTextEt>
 80101c6:	4603      	mov	r3, r0
 80101c8:	bf00      	nop
 80101ca:	4a3e      	ldr	r2, [pc, #248]	; (80102c4 <_ZN15Screen1ViewBaseC1Ev+0x3fc>)
 80101cc:	2135      	movs	r1, #53	; 0x35
 80101ce:	4620      	mov	r0, r4
 80101d0:	f009 fa3c 	bl	801964c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80101d4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80101d8:	4618      	mov	r0, r3
 80101da:	f7fe f8f7 	bl	800e3cc <_ZN8touchgfx9TypedTextD1Ev>
    textArea1.setWildcard(textArea1Buffer);
 80101de:	697b      	ldr	r3, [r7, #20]
 80101e0:	f103 02cc 	add.w	r2, r3, #204	; 0xcc
 80101e4:	697b      	ldr	r3, [r7, #20]
 80101e6:	f503 73ca 	add.w	r3, r3, #404	; 0x194
 80101ea:	4619      	mov	r1, r3
 80101ec:	4610      	mov	r0, r2
 80101ee:	f7ff fdcf 	bl	800fd90 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G9G3));
 80101f2:	697b      	ldr	r3, [r7, #20]
 80101f4:	f103 04cc 	add.w	r4, r3, #204	; 0xcc
 80101f8:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80101fc:	2101      	movs	r1, #1
 80101fe:	4618      	mov	r0, r3
 8010200:	f7ff fbce 	bl	800f9a0 <_ZN8touchgfx9TypedTextC1Et>
 8010204:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8010208:	4619      	mov	r1, r3
 801020a:	4620      	mov	r0, r4
 801020c:	f004 fa9c 	bl	8014748 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8010210:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8010214:	4618      	mov	r0, r3
 8010216:	f7fe f8d9 	bl	800e3cc <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 801021a:	697a      	ldr	r2, [r7, #20]
 801021c:	697b      	ldr	r3, [r7, #20]
 801021e:	33cc      	adds	r3, #204	; 0xcc
 8010220:	4619      	mov	r1, r3
 8010222:	4610      	mov	r0, r2
 8010224:	f7ff faa2 	bl	800f76c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    button1.setXY(130, 147);
 8010228:	697b      	ldr	r3, [r7, #20]
 801022a:	f503 739a 	add.w	r3, r3, #308	; 0x134
 801022e:	2293      	movs	r2, #147	; 0x93
 8010230:	2182      	movs	r1, #130	; 0x82
 8010232:	4618      	mov	r0, r3
 8010234:	f7ff f91d 	bl	800f472 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID));
 8010238:	697b      	ldr	r3, [r7, #20]
 801023a:	f503 749a 	add.w	r4, r3, #308	; 0x134
 801023e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8010242:	2101      	movs	r1, #1
 8010244:	4618      	mov	r0, r3
 8010246:	f7ff f83d 	bl	800f2c4 <_ZN8touchgfx6BitmapC1Et>
 801024a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801024e:	2102      	movs	r1, #2
 8010250:	4618      	mov	r0, r3
 8010252:	f7ff f837 	bl	800f2c4 <_ZN8touchgfx6BitmapC1Et>
 8010256:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801025a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801025e:	4619      	mov	r1, r3
 8010260:	4620      	mov	r0, r4
 8010262:	f004 fac3 	bl	80147ec <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    add(button1);
 8010266:	697a      	ldr	r2, [r7, #20]
 8010268:	697b      	ldr	r3, [r7, #20]
 801026a:	f503 739a 	add.w	r3, r3, #308	; 0x134
 801026e:	4619      	mov	r1, r3
 8010270:	4610      	mov	r0, r2
 8010272:	f7ff fa7b 	bl	800f76c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    image2.setXY(135, 152);
 8010276:	697b      	ldr	r3, [r7, #20]
 8010278:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801027c:	2298      	movs	r2, #152	; 0x98
 801027e:	2187      	movs	r1, #135	; 0x87
 8010280:	4618      	mov	r0, r3
 8010282:	f7ff f8f6 	bl	800f472 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_PLAY_CIRCLE_OUTLINE_50_50_000000_SVG_ID));
 8010286:	697b      	ldr	r3, [r7, #20]
 8010288:	f503 74b4 	add.w	r4, r3, #360	; 0x168
 801028c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8010290:	2103      	movs	r1, #3
 8010292:	4618      	mov	r0, r3
 8010294:	f7ff f816 	bl	800f2c4 <_ZN8touchgfx6BitmapC1Et>
 8010298:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801029c:	4619      	mov	r1, r3
 801029e:	4620      	mov	r0, r4
 80102a0:	f004 fc51 	bl	8014b46 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image2);
 80102a4:	697a      	ldr	r2, [r7, #20]
 80102a6:	697b      	ldr	r3, [r7, #20]
 80102a8:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 80102ac:	4619      	mov	r1, r3
 80102ae:	4610      	mov	r0, r2
 80102b0:	f7ff fa5c 	bl	800f76c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 80102b4:	697b      	ldr	r3, [r7, #20]
 80102b6:	4618      	mov	r0, r3
 80102b8:	3774      	adds	r7, #116	; 0x74
 80102ba:	46bd      	mov	sp, r7
 80102bc:	bd90      	pop	{r4, r7, pc}
 80102be:	bf00      	nop
 80102c0:	200259f4 	.word	0x200259f4
 80102c4:	0802a33c 	.word	0x0802a33c

080102c8 <_ZN15Screen1ViewBaseD1Ev>:

Screen1ViewBase::~Screen1ViewBase()
 80102c8:	b580      	push	{r7, lr}
 80102ca:	b082      	sub	sp, #8
 80102cc:	af00      	add	r7, sp, #0
 80102ce:	6078      	str	r0, [r7, #4]
 80102d0:	4a15      	ldr	r2, [pc, #84]	; (8010328 <_ZN15Screen1ViewBaseD1Ev+0x60>)
 80102d2:	687b      	ldr	r3, [r7, #4]
 80102d4:	601a      	str	r2, [r3, #0]
 80102d6:	687b      	ldr	r3, [r7, #4]
 80102d8:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 80102dc:	4618      	mov	r0, r3
 80102de:	f000 fa49 	bl	8010774 <_ZN8touchgfx5ImageD1Ev>
 80102e2:	687b      	ldr	r3, [r7, #4]
 80102e4:	f503 739a 	add.w	r3, r3, #308	; 0x134
 80102e8:	4618      	mov	r0, r3
 80102ea:	f000 fa87 	bl	80107fc <_ZN8touchgfx6ButtonD1Ev>
 80102ee:	687b      	ldr	r3, [r7, #4]
 80102f0:	33cc      	adds	r3, #204	; 0xcc
 80102f2:	4618      	mov	r0, r3
 80102f4:	f000 f9fa 	bl	80106ec <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEED1Ev>
 80102f8:	687b      	ldr	r3, [r7, #4]
 80102fa:	3398      	adds	r3, #152	; 0x98
 80102fc:	4618      	mov	r0, r3
 80102fe:	f000 fa5b 	bl	80107b8 <_ZN8touchgfx13BoxWithBorderD1Ev>
 8010302:	687b      	ldr	r3, [r7, #4]
 8010304:	336c      	adds	r3, #108	; 0x6c
 8010306:	4618      	mov	r0, r3
 8010308:	f000 fa34 	bl	8010774 <_ZN8touchgfx5ImageD1Ev>
 801030c:	687b      	ldr	r3, [r7, #4]
 801030e:	3340      	adds	r3, #64	; 0x40
 8010310:	4618      	mov	r0, r3
 8010312:	f7ff fae9 	bl	800f8e8 <_ZN8touchgfx3BoxD1Ev>
 8010316:	687b      	ldr	r3, [r7, #4]
 8010318:	4618      	mov	r0, r3
 801031a:	f7ff fdb3 	bl	800fe84 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
{

}
 801031e:	687b      	ldr	r3, [r7, #4]
 8010320:	4618      	mov	r0, r3
 8010322:	3708      	adds	r7, #8
 8010324:	46bd      	mov	sp, r7
 8010326:	bd80      	pop	{r7, pc}
 8010328:	0802b300 	.word	0x0802b300

0801032c <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 801032c:	b580      	push	{r7, lr}
 801032e:	b082      	sub	sp, #8
 8010330:	af00      	add	r7, sp, #0
 8010332:	6078      	str	r0, [r7, #4]
}
 8010334:	6878      	ldr	r0, [r7, #4]
 8010336:	f7ff ffc7 	bl	80102c8 <_ZN15Screen1ViewBaseD1Ev>
 801033a:	f44f 7101 	mov.w	r1, #516	; 0x204
 801033e:	6878      	ldr	r0, [r7, #4]
 8010340:	f016 fe6f 	bl	8027022 <_ZdlPvj>
 8010344:	687b      	ldr	r3, [r7, #4]
 8010346:	4618      	mov	r0, r3
 8010348:	3708      	adds	r7, #8
 801034a:	46bd      	mov	sp, r7
 801034c:	bd80      	pop	{r7, pc}

0801034e <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 801034e:	b480      	push	{r7}
 8010350:	b083      	sub	sp, #12
 8010352:	af00      	add	r7, sp, #0
 8010354:	6078      	str	r0, [r7, #4]

}
 8010356:	bf00      	nop
 8010358:	370c      	adds	r7, #12
 801035a:	46bd      	mov	sp, r7
 801035c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010360:	4770      	bx	lr
	...

08010364 <_ZN15Screen1ViewBase15handleTickEventEv>:

void Screen1ViewBase::handleTickEvent()
{
 8010364:	b580      	push	{r7, lr}
 8010366:	b084      	sub	sp, #16
 8010368:	af02      	add	r7, sp, #8
 801036a:	6078      	str	r0, [r7, #4]
    //Interaction1
    //When every N tick move textArea1
    //Move textArea1 to x:-550, y:52 with QuadOut easing in 10000 ms (600 Ticks)
    textArea1.clearMoveAnimationEndedAction();
 801036c:	687b      	ldr	r3, [r7, #4]
 801036e:	33cc      	adds	r3, #204	; 0xcc
 8010370:	4618      	mov	r0, r3
 8010372:	f000 f8af 	bl	80104d4 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE29clearMoveAnimationEndedActionEv>
    textArea1.startMoveAnimation(-550, 52, 600, touchgfx::EasingEquations::quadEaseOut, touchgfx::EasingEquations::quadEaseOut);
 8010376:	687b      	ldr	r3, [r7, #4]
 8010378:	f103 00cc 	add.w	r0, r3, #204	; 0xcc
 801037c:	4b18      	ldr	r3, [pc, #96]	; (80103e0 <_ZN15Screen1ViewBase15handleTickEventEv+0x7c>)
 801037e:	9301      	str	r3, [sp, #4]
 8010380:	4b17      	ldr	r3, [pc, #92]	; (80103e0 <_ZN15Screen1ViewBase15handleTickEventEv+0x7c>)
 8010382:	9300      	str	r3, [sp, #0]
 8010384:	f44f 7316 	mov.w	r3, #600	; 0x258
 8010388:	2234      	movs	r2, #52	; 0x34
 801038a:	4916      	ldr	r1, [pc, #88]	; (80103e4 <_ZN15Screen1ViewBase15handleTickEventEv+0x80>)
 801038c:	f000 f8af 	bl	80104ee <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE18startMoveAnimationEsstPFstsstES4_>

    frameCountInteraction2Interval++;
 8010390:	687b      	ldr	r3, [r7, #4]
 8010392:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8010396:	1c5a      	adds	r2, r3, #1
 8010398:	687b      	ldr	r3, [r7, #4]
 801039a:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 801039e:	687b      	ldr	r3, [r7, #4]
 80103a0:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 80103a4:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
 80103a8:	d115      	bne.n	80103d6 <_ZN15Screen1ViewBase15handleTickEventEv+0x72>
    {
        //Interaction2
        //When every N tick move textArea1
        //Move textArea1 to x:270, y:52 with LinearOut easing in 1 ms (1 Ticks)
        textArea1.clearMoveAnimationEndedAction();
 80103aa:	687b      	ldr	r3, [r7, #4]
 80103ac:	33cc      	adds	r3, #204	; 0xcc
 80103ae:	4618      	mov	r0, r3
 80103b0:	f000 f890 	bl	80104d4 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE29clearMoveAnimationEndedActionEv>
        textArea1.startMoveAnimation(270, 52, 1, touchgfx::EasingEquations::linearEaseOut, touchgfx::EasingEquations::linearEaseOut);
 80103b4:	687b      	ldr	r3, [r7, #4]
 80103b6:	f103 00cc 	add.w	r0, r3, #204	; 0xcc
 80103ba:	4b0b      	ldr	r3, [pc, #44]	; (80103e8 <_ZN15Screen1ViewBase15handleTickEventEv+0x84>)
 80103bc:	9301      	str	r3, [sp, #4]
 80103be:	4b0a      	ldr	r3, [pc, #40]	; (80103e8 <_ZN15Screen1ViewBase15handleTickEventEv+0x84>)
 80103c0:	9300      	str	r3, [sp, #0]
 80103c2:	2301      	movs	r3, #1
 80103c4:	2234      	movs	r2, #52	; 0x34
 80103c6:	f44f 7187 	mov.w	r1, #270	; 0x10e
 80103ca:	f000 f890 	bl	80104ee <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE18startMoveAnimationEsstPFstsstES4_>
        frameCountInteraction2Interval = 0;
 80103ce:	687b      	ldr	r3, [r7, #4]
 80103d0:	2200      	movs	r2, #0
 80103d2:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
    }
}
 80103d6:	bf00      	nop
 80103d8:	3708      	adds	r7, #8
 80103da:	46bd      	mov	sp, r7
 80103dc:	bd80      	pop	{r7, pc}
 80103de:	bf00      	nop
 80103e0:	08018047 	.word	0x08018047
 80103e4:	fffffdda 	.word	0xfffffdda
 80103e8:	08018043 	.word	0x08018043

080103ec <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View()
 80103ec:	b580      	push	{r7, lr}
 80103ee:	b082      	sub	sp, #8
 80103f0:	af00      	add	r7, sp, #0
 80103f2:	6078      	str	r0, [r7, #4]
        : presenter(0)
 80103f4:	687b      	ldr	r3, [r7, #4]
 80103f6:	4618      	mov	r0, r3
 80103f8:	f007 fc44 	bl	8017c84 <_ZN8touchgfx6ScreenC1Ev>
 80103fc:	4a05      	ldr	r2, [pc, #20]	; (8010414 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 80103fe:	687b      	ldr	r3, [r7, #4]
 8010400:	601a      	str	r2, [r3, #0]
 8010402:	687b      	ldr	r3, [r7, #4]
 8010404:	2200      	movs	r2, #0
 8010406:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8010408:	687b      	ldr	r3, [r7, #4]
 801040a:	4618      	mov	r0, r3
 801040c:	3708      	adds	r7, #8
 801040e:	46bd      	mov	sp, r7
 8010410:	bd80      	pop	{r7, pc}
 8010412:	bf00      	nop
 8010414:	0802b3cc 	.word	0x0802b3cc

08010418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8010418:	b580      	push	{r7, lr}
 801041a:	b082      	sub	sp, #8
 801041c:	af00      	add	r7, sp, #0
 801041e:	6078      	str	r0, [r7, #4]
 8010420:	4a05      	ldr	r2, [pc, #20]	; (8010438 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 8010422:	687b      	ldr	r3, [r7, #4]
 8010424:	601a      	str	r2, [r3, #0]
 8010426:	687b      	ldr	r3, [r7, #4]
 8010428:	4618      	mov	r0, r3
 801042a:	f7ff fc5f 	bl	800fcec <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 801042e:	687b      	ldr	r3, [r7, #4]
 8010430:	4618      	mov	r0, r3
 8010432:	3708      	adds	r7, #8
 8010434:	46bd      	mov	sp, r7
 8010436:	bd80      	pop	{r7, pc}
 8010438:	0802b400 	.word	0x0802b400

0801043c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 801043c:	b580      	push	{r7, lr}
 801043e:	b082      	sub	sp, #8
 8010440:	af00      	add	r7, sp, #0
 8010442:	6078      	str	r0, [r7, #4]
 8010444:	6878      	ldr	r0, [r7, #4]
 8010446:	f7ff ffe7 	bl	8010418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 801044a:	214c      	movs	r1, #76	; 0x4c
 801044c:	6878      	ldr	r0, [r7, #4]
 801044e:	f016 fde8 	bl	8027022 <_ZdlPvj>
 8010452:	687b      	ldr	r3, [r7, #4]
 8010454:	4618      	mov	r0, r3
 8010456:	3708      	adds	r7, #8
 8010458:	46bd      	mov	sp, r7
 801045a:	bd80      	pop	{r7, pc}

0801045c <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEEC1Ev>:
 */
template <class T>
class MoveAnimator : public T
{
public:
    MoveAnimator()
 801045c:	b580      	push	{r7, lr}
 801045e:	b082      	sub	sp, #8
 8010460:	af00      	add	r7, sp, #0
 8010462:	6078      	str	r0, [r7, #4]
          moveAnimationStartY(0),
          moveAnimationEndX(0),
          moveAnimationEndY(0),
          moveAnimationXEquation(),
          moveAnimationYEquation(),
          moveAnimationEndedCallback(0)
 8010464:	687b      	ldr	r3, [r7, #4]
 8010466:	4618      	mov	r0, r3
 8010468:	f7ff fc62 	bl	800fd30 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 801046c:	4a18      	ldr	r2, [pc, #96]	; (80104d0 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEEC1Ev+0x74>)
 801046e:	687b      	ldr	r3, [r7, #4]
 8010470:	601a      	str	r2, [r3, #0]
          moveAnimationRunning(false),
 8010472:	687b      	ldr	r3, [r7, #4]
 8010474:	2200      	movs	r2, #0
 8010476:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
          moveAnimationCounter(0),
 801047a:	687b      	ldr	r3, [r7, #4]
 801047c:	2200      	movs	r2, #0
 801047e:	f8a3 204e 	strh.w	r2, [r3, #78]	; 0x4e
          moveAnimationDelay(0),
 8010482:	687b      	ldr	r3, [r7, #4]
 8010484:	2200      	movs	r2, #0
 8010486:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
          moveAnimationDuration(0),
 801048a:	687b      	ldr	r3, [r7, #4]
 801048c:	2200      	movs	r2, #0
 801048e:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
          moveAnimationStartX(0),
 8010492:	687b      	ldr	r3, [r7, #4]
 8010494:	2200      	movs	r2, #0
 8010496:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
          moveAnimationStartY(0),
 801049a:	687b      	ldr	r3, [r7, #4]
 801049c:	2200      	movs	r2, #0
 801049e:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
          moveAnimationEndX(0),
 80104a2:	687b      	ldr	r3, [r7, #4]
 80104a4:	2200      	movs	r2, #0
 80104a6:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
          moveAnimationEndY(0),
 80104aa:	687b      	ldr	r3, [r7, #4]
 80104ac:	2200      	movs	r2, #0
 80104ae:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
          moveAnimationXEquation(),
 80104b2:	687b      	ldr	r3, [r7, #4]
 80104b4:	2200      	movs	r2, #0
 80104b6:	65da      	str	r2, [r3, #92]	; 0x5c
          moveAnimationYEquation(),
 80104b8:	687b      	ldr	r3, [r7, #4]
 80104ba:	2200      	movs	r2, #0
 80104bc:	661a      	str	r2, [r3, #96]	; 0x60
          moveAnimationEndedCallback(0)
 80104be:	687b      	ldr	r3, [r7, #4]
 80104c0:	2200      	movs	r2, #0
 80104c2:	665a      	str	r2, [r3, #100]	; 0x64
    {
    }
 80104c4:	687b      	ldr	r3, [r7, #4]
 80104c6:	4618      	mov	r0, r3
 80104c8:	3708      	adds	r7, #8
 80104ca:	46bd      	mov	sp, r7
 80104cc:	bd80      	pop	{r7, pc}
 80104ce:	bf00      	nop
 80104d0:	0802b334 	.word	0x0802b334

080104d4 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE29clearMoveAnimationEndedActionEv>:
     * The effect is that any action set using setMoveAnimationEndedAction() will not be
     * executed.
     *
     * @see setMoveAnimationEndedAction
     */
    void clearMoveAnimationEndedAction()
 80104d4:	b480      	push	{r7}
 80104d6:	b083      	sub	sp, #12
 80104d8:	af00      	add	r7, sp, #0
 80104da:	6078      	str	r0, [r7, #4]
    {
        moveAnimationEndedCallback = 0;
 80104dc:	687b      	ldr	r3, [r7, #4]
 80104de:	2200      	movs	r2, #0
 80104e0:	665a      	str	r2, [r3, #100]	; 0x64
    }
 80104e2:	bf00      	nop
 80104e4:	370c      	adds	r7, #12
 80104e6:	46bd      	mov	sp, r7
 80104e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104ec:	4770      	bx	lr

080104ee <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE18startMoveAnimationEsstPFstsstES4_>:
     *                              EasingEquations::linearEaseNone.
     * @param  yProgressionEquation (Optional) The equation that describes the development of the
     *                              Y position during the animation. Default is
     *                              EasingEquations::linearEaseNone.
     */
    void startMoveAnimation(int16_t endX, int16_t endY, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
 80104ee:	b580      	push	{r7, lr}
 80104f0:	b084      	sub	sp, #16
 80104f2:	af00      	add	r7, sp, #0
 80104f4:	60f8      	str	r0, [r7, #12]
 80104f6:	4608      	mov	r0, r1
 80104f8:	4611      	mov	r1, r2
 80104fa:	461a      	mov	r2, r3
 80104fc:	4603      	mov	r3, r0
 80104fe:	817b      	strh	r3, [r7, #10]
 8010500:	460b      	mov	r3, r1
 8010502:	813b      	strh	r3, [r7, #8]
 8010504:	4613      	mov	r3, r2
 8010506:	80fb      	strh	r3, [r7, #6]
    {
        if (!moveAnimationRunning)
 8010508:	68fb      	ldr	r3, [r7, #12]
 801050a:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 801050e:	f083 0301 	eor.w	r3, r3, #1
 8010512:	b2db      	uxtb	r3, r3
 8010514:	2b00      	cmp	r3, #0
 8010516:	d007      	beq.n	8010528 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE18startMoveAnimationEsstPFstsstES4_+0x3a>
        {
            Application::getInstance()->registerTimerWidget(this);
 8010518:	f006 f854 	bl	80165c4 <_ZN8touchgfx11Application11getInstanceEv>
 801051c:	4602      	mov	r2, r0
 801051e:	68fb      	ldr	r3, [r7, #12]
 8010520:	4619      	mov	r1, r3
 8010522:	4610      	mov	r0, r2
 8010524:	f7ff f8ab 	bl	800f67e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        }

        moveAnimationCounter = 0;
 8010528:	68fb      	ldr	r3, [r7, #12]
 801052a:	2200      	movs	r2, #0
 801052c:	f8a3 204e 	strh.w	r2, [r3, #78]	; 0x4e
        moveAnimationStartX = T::getX();
 8010530:	68fb      	ldr	r3, [r7, #12]
 8010532:	4618      	mov	r0, r3
 8010534:	f7fe ff65 	bl	800f402 <_ZNK8touchgfx8Drawable4getXEv>
 8010538:	4603      	mov	r3, r0
 801053a:	461a      	mov	r2, r3
 801053c:	68fb      	ldr	r3, [r7, #12]
 801053e:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
        moveAnimationStartY = T::getY();
 8010542:	68fb      	ldr	r3, [r7, #12]
 8010544:	4618      	mov	r0, r3
 8010546:	f7fe ff69 	bl	800f41c <_ZNK8touchgfx8Drawable4getYEv>
 801054a:	4603      	mov	r3, r0
 801054c:	461a      	mov	r2, r3
 801054e:	68fb      	ldr	r3, [r7, #12]
 8010550:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
        moveAnimationEndX = endX;
 8010554:	68fb      	ldr	r3, [r7, #12]
 8010556:	897a      	ldrh	r2, [r7, #10]
 8010558:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
        moveAnimationEndY = endY;
 801055c:	68fb      	ldr	r3, [r7, #12]
 801055e:	893a      	ldrh	r2, [r7, #8]
 8010560:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
        moveAnimationDuration = duration;
 8010564:	68fb      	ldr	r3, [r7, #12]
 8010566:	88fa      	ldrh	r2, [r7, #6]
 8010568:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
        moveAnimationXEquation = xProgressionEquation;
 801056c:	68fb      	ldr	r3, [r7, #12]
 801056e:	69ba      	ldr	r2, [r7, #24]
 8010570:	65da      	str	r2, [r3, #92]	; 0x5c
        moveAnimationYEquation = yProgressionEquation;
 8010572:	68fb      	ldr	r3, [r7, #12]
 8010574:	69fa      	ldr	r2, [r7, #28]
 8010576:	661a      	str	r2, [r3, #96]	; 0x60

        moveAnimationRunning = true;
 8010578:	68fb      	ldr	r3, [r7, #12]
 801057a:	2201      	movs	r2, #1
 801057c:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c

        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 8010580:	68fb      	ldr	r3, [r7, #12]
 8010582:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8010586:	2b00      	cmp	r3, #0
 8010588:	d107      	bne.n	801059a <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE18startMoveAnimationEsstPFstsstES4_+0xac>
 801058a:	68fb      	ldr	r3, [r7, #12]
 801058c:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8010590:	2b00      	cmp	r3, #0
 8010592:	d102      	bne.n	801059a <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE18startMoveAnimationEsstPFstsstES4_+0xac>
        {
            nextMoveAnimationStep(); // Set end position and shut down
 8010594:	68f8      	ldr	r0, [r7, #12]
 8010596:	f000 f804 	bl	80105a2 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv>
        }
    }
 801059a:	bf00      	nop
 801059c:	3710      	adds	r7, #16
 801059e:	46bd      	mov	sp, r7
 80105a0:	bd80      	pop	{r7, pc}

080105a2 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv>:
        nextMoveAnimationStep();
    }

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
 80105a2:	b590      	push	{r4, r7, lr}
 80105a4:	b085      	sub	sp, #20
 80105a6:	af00      	add	r7, sp, #0
 80105a8:	6078      	str	r0, [r7, #4]
    {
        if (moveAnimationRunning)
 80105aa:	687b      	ldr	r3, [r7, #4]
 80105ac:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 80105b0:	2b00      	cmp	r3, #0
 80105b2:	f000 8097 	beq.w	80106e4 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv+0x142>
        {
            moveAnimationCounter++;
 80105b6:	687b      	ldr	r3, [r7, #4]
 80105b8:	f8b3 304e 	ldrh.w	r3, [r3, #78]	; 0x4e
 80105bc:	3301      	adds	r3, #1
 80105be:	b29a      	uxth	r2, r3
 80105c0:	687b      	ldr	r3, [r7, #4]
 80105c2:	f8a3 204e 	strh.w	r2, [r3, #78]	; 0x4e
            if (moveAnimationCounter >= moveAnimationDelay)
 80105c6:	687b      	ldr	r3, [r7, #4]
 80105c8:	f8b3 204e 	ldrh.w	r2, [r3, #78]	; 0x4e
 80105cc:	687b      	ldr	r3, [r7, #4]
 80105ce:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80105d2:	429a      	cmp	r2, r3
 80105d4:	f0c0 8086 	bcc.w	80106e4 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv+0x142>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;
 80105d8:	687b      	ldr	r3, [r7, #4]
 80105da:	f8b3 304e 	ldrh.w	r3, [r3, #78]	; 0x4e
 80105de:	461a      	mov	r2, r3
 80105e0:	687b      	ldr	r3, [r7, #4]
 80105e2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80105e6:	1ad3      	subs	r3, r2, r3
 80105e8:	60fb      	str	r3, [r7, #12]

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 80105ea:	687b      	ldr	r3, [r7, #4]
 80105ec:	6ddc      	ldr	r4, [r3, #92]	; 0x5c
 80105ee:	68fb      	ldr	r3, [r7, #12]
 80105f0:	b298      	uxth	r0, r3
 80105f2:	687b      	ldr	r3, [r7, #4]
 80105f4:	f9b3 3058 	ldrsh.w	r3, [r3, #88]	; 0x58
 80105f8:	b29a      	uxth	r2, r3
 80105fa:	687b      	ldr	r3, [r7, #4]
 80105fc:	f9b3 3054 	ldrsh.w	r3, [r3, #84]	; 0x54
 8010600:	b29b      	uxth	r3, r3
 8010602:	1ad3      	subs	r3, r2, r3
 8010604:	b29b      	uxth	r3, r3
 8010606:	b21a      	sxth	r2, r3
 8010608:	687b      	ldr	r3, [r7, #4]
 801060a:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 801060e:	2100      	movs	r1, #0
 8010610:	47a0      	blx	r4
 8010612:	4603      	mov	r3, r0
 8010614:	817b      	strh	r3, [r7, #10]
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8010616:	687b      	ldr	r3, [r7, #4]
 8010618:	6e1c      	ldr	r4, [r3, #96]	; 0x60
 801061a:	68fb      	ldr	r3, [r7, #12]
 801061c:	b298      	uxth	r0, r3
 801061e:	687b      	ldr	r3, [r7, #4]
 8010620:	f9b3 305a 	ldrsh.w	r3, [r3, #90]	; 0x5a
 8010624:	b29a      	uxth	r2, r3
 8010626:	687b      	ldr	r3, [r7, #4]
 8010628:	f9b3 3056 	ldrsh.w	r3, [r3, #86]	; 0x56
 801062c:	b29b      	uxth	r3, r3
 801062e:	1ad3      	subs	r3, r2, r3
 8010630:	b29b      	uxth	r3, r3
 8010632:	b21a      	sxth	r2, r3
 8010634:	687b      	ldr	r3, [r7, #4]
 8010636:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 801063a:	2100      	movs	r1, #0
 801063c:	47a0      	blx	r4
 801063e:	4603      	mov	r3, r0
 8010640:	813b      	strh	r3, [r7, #8]

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8010642:	6878      	ldr	r0, [r7, #4]
 8010644:	687b      	ldr	r3, [r7, #4]
 8010646:	f9b3 3054 	ldrsh.w	r3, [r3, #84]	; 0x54
 801064a:	b29a      	uxth	r2, r3
 801064c:	897b      	ldrh	r3, [r7, #10]
 801064e:	4413      	add	r3, r2
 8010650:	b29b      	uxth	r3, r3
 8010652:	b219      	sxth	r1, r3
 8010654:	687b      	ldr	r3, [r7, #4]
 8010656:	f9b3 3056 	ldrsh.w	r3, [r3, #86]	; 0x56
 801065a:	b29a      	uxth	r2, r3
 801065c:	893b      	ldrh	r3, [r7, #8]
 801065e:	4413      	add	r3, r2
 8010660:	b29b      	uxth	r3, r3
 8010662:	b21b      	sxth	r3, r3
 8010664:	461a      	mov	r2, r3
 8010666:	f7fe ffbd 	bl	800f5e4 <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 801066a:	687b      	ldr	r3, [r7, #4]
 801066c:	f8b3 304e 	ldrh.w	r3, [r3, #78]	; 0x4e
 8010670:	461a      	mov	r2, r3
 8010672:	687b      	ldr	r3, [r7, #4]
 8010674:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8010678:	4619      	mov	r1, r3
 801067a:	687b      	ldr	r3, [r7, #4]
 801067c:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8010680:	440b      	add	r3, r1
 8010682:	429a      	cmp	r2, r3
 8010684:	d32e      	bcc.n	80106e4 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv+0x142>
                {
                    // End of animation
                    moveAnimationRunning = false;
 8010686:	687b      	ldr	r3, [r7, #4]
 8010688:	2200      	movs	r2, #0
 801068a:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
                    moveAnimationCounter = 0;
 801068e:	687b      	ldr	r3, [r7, #4]
 8010690:	2200      	movs	r2, #0
 8010692:	f8a3 204e 	strh.w	r2, [r3, #78]	; 0x4e
                    Application::getInstance()->unregisterTimerWidget(this);
 8010696:	f005 ff95 	bl	80165c4 <_ZN8touchgfx11Application11getInstanceEv>
 801069a:	4602      	mov	r2, r0
 801069c:	687b      	ldr	r3, [r7, #4]
 801069e:	4619      	mov	r1, r3
 80106a0:	4610      	mov	r0, r2
 80106a2:	f7fe fffb 	bl	800f69c <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 80106a6:	687b      	ldr	r3, [r7, #4]
 80106a8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80106aa:	2b00      	cmp	r3, #0
 80106ac:	d00d      	beq.n	80106ca <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv+0x128>
 80106ae:	687b      	ldr	r3, [r7, #4]
 80106b0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80106b2:	687b      	ldr	r3, [r7, #4]
 80106b4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80106b6:	681b      	ldr	r3, [r3, #0]
 80106b8:	330c      	adds	r3, #12
 80106ba:	681b      	ldr	r3, [r3, #0]
 80106bc:	4610      	mov	r0, r2
 80106be:	4798      	blx	r3
 80106c0:	4603      	mov	r3, r0
 80106c2:	2b00      	cmp	r3, #0
 80106c4:	d001      	beq.n	80106ca <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv+0x128>
 80106c6:	2301      	movs	r3, #1
 80106c8:	e000      	b.n	80106cc <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv+0x12a>
 80106ca:	2300      	movs	r3, #0
 80106cc:	2b00      	cmp	r3, #0
 80106ce:	d009      	beq.n	80106e4 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv+0x142>
                    {
                        moveAnimationEndedCallback->execute(*this);
 80106d0:	687b      	ldr	r3, [r7, #4]
 80106d2:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80106d4:	687b      	ldr	r3, [r7, #4]
 80106d6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80106d8:	681b      	ldr	r3, [r3, #0]
 80106da:	3308      	adds	r3, #8
 80106dc:	681b      	ldr	r3, [r3, #0]
 80106de:	6879      	ldr	r1, [r7, #4]
 80106e0:	4610      	mov	r0, r2
 80106e2:	4798      	blx	r3
                    }
                }
            }
        }
    }
 80106e4:	bf00      	nop
 80106e6:	3714      	adds	r7, #20
 80106e8:	46bd      	mov	sp, r7
 80106ea:	bd90      	pop	{r4, r7, pc}

080106ec <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEED1Ev>:
class MoveAnimator : public T
 80106ec:	b580      	push	{r7, lr}
 80106ee:	b082      	sub	sp, #8
 80106f0:	af00      	add	r7, sp, #0
 80106f2:	6078      	str	r0, [r7, #4]
 80106f4:	4a05      	ldr	r2, [pc, #20]	; (801070c <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEED1Ev+0x20>)
 80106f6:	687b      	ldr	r3, [r7, #4]
 80106f8:	601a      	str	r2, [r3, #0]
 80106fa:	687b      	ldr	r3, [r7, #4]
 80106fc:	4618      	mov	r0, r3
 80106fe:	f7ff fe8b 	bl	8010418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 8010702:	687b      	ldr	r3, [r7, #4]
 8010704:	4618      	mov	r0, r3
 8010706:	3708      	adds	r7, #8
 8010708:	46bd      	mov	sp, r7
 801070a:	bd80      	pop	{r7, pc}
 801070c:	0802b334 	.word	0x0802b334

08010710 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEED0Ev>:
 8010710:	b580      	push	{r7, lr}
 8010712:	b082      	sub	sp, #8
 8010714:	af00      	add	r7, sp, #0
 8010716:	6078      	str	r0, [r7, #4]
 8010718:	6878      	ldr	r0, [r7, #4]
 801071a:	f7ff ffe7 	bl	80106ec <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEED1Ev>
 801071e:	2168      	movs	r1, #104	; 0x68
 8010720:	6878      	ldr	r0, [r7, #4]
 8010722:	f016 fc7e 	bl	8027022 <_ZdlPvj>
 8010726:	687b      	ldr	r3, [r7, #4]
 8010728:	4618      	mov	r0, r3
 801072a:	3708      	adds	r7, #8
 801072c:	46bd      	mov	sp, r7
 801072e:	bd80      	pop	{r7, pc}

08010730 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 8010730:	b580      	push	{r7, lr}
 8010732:	b082      	sub	sp, #8
 8010734:	af00      	add	r7, sp, #0
 8010736:	6078      	str	r0, [r7, #4]
 8010738:	4a05      	ldr	r2, [pc, #20]	; (8010750 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 801073a:	687b      	ldr	r3, [r7, #4]
 801073c:	601a      	str	r2, [r3, #0]
 801073e:	687b      	ldr	r3, [r7, #4]
 8010740:	4618      	mov	r0, r3
 8010742:	f7fe fdff 	bl	800f344 <_ZN8touchgfx8DrawableD1Ev>
 8010746:	687b      	ldr	r3, [r7, #4]
 8010748:	4618      	mov	r0, r3
 801074a:	3708      	adds	r7, #8
 801074c:	46bd      	mov	sp, r7
 801074e:	bd80      	pop	{r7, pc}
 8010750:	0802ba40 	.word	0x0802ba40

08010754 <_ZN8touchgfx9ContainerD0Ev>:
 8010754:	b580      	push	{r7, lr}
 8010756:	b082      	sub	sp, #8
 8010758:	af00      	add	r7, sp, #0
 801075a:	6078      	str	r0, [r7, #4]
 801075c:	6878      	ldr	r0, [r7, #4]
 801075e:	f7ff ffe7 	bl	8010730 <_ZN8touchgfx9ContainerD1Ev>
 8010762:	212c      	movs	r1, #44	; 0x2c
 8010764:	6878      	ldr	r0, [r7, #4]
 8010766:	f016 fc5c 	bl	8027022 <_ZdlPvj>
 801076a:	687b      	ldr	r3, [r7, #4]
 801076c:	4618      	mov	r0, r3
 801076e:	3708      	adds	r7, #8
 8010770:	46bd      	mov	sp, r7
 8010772:	bd80      	pop	{r7, pc}

08010774 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 8010774:	b580      	push	{r7, lr}
 8010776:	b082      	sub	sp, #8
 8010778:	af00      	add	r7, sp, #0
 801077a:	6078      	str	r0, [r7, #4]
 801077c:	4a05      	ldr	r2, [pc, #20]	; (8010794 <_ZN8touchgfx5ImageD1Ev+0x20>)
 801077e:	687b      	ldr	r3, [r7, #4]
 8010780:	601a      	str	r2, [r3, #0]
 8010782:	687b      	ldr	r3, [r7, #4]
 8010784:	4618      	mov	r0, r3
 8010786:	f7ff f835 	bl	800f7f4 <_ZN8touchgfx6WidgetD1Ev>
 801078a:	687b      	ldr	r3, [r7, #4]
 801078c:	4618      	mov	r0, r3
 801078e:	3708      	adds	r7, #8
 8010790:	46bd      	mov	sp, r7
 8010792:	bd80      	pop	{r7, pc}
 8010794:	0802befc 	.word	0x0802befc

08010798 <_ZN8touchgfx5ImageD0Ev>:
 8010798:	b580      	push	{r7, lr}
 801079a:	b082      	sub	sp, #8
 801079c:	af00      	add	r7, sp, #0
 801079e:	6078      	str	r0, [r7, #4]
 80107a0:	6878      	ldr	r0, [r7, #4]
 80107a2:	f7ff ffe7 	bl	8010774 <_ZN8touchgfx5ImageD1Ev>
 80107a6:	212c      	movs	r1, #44	; 0x2c
 80107a8:	6878      	ldr	r0, [r7, #4]
 80107aa:	f016 fc3a 	bl	8027022 <_ZdlPvj>
 80107ae:	687b      	ldr	r3, [r7, #4]
 80107b0:	4618      	mov	r0, r3
 80107b2:	3708      	adds	r7, #8
 80107b4:	46bd      	mov	sp, r7
 80107b6:	bd80      	pop	{r7, pc}

080107b8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 80107b8:	b580      	push	{r7, lr}
 80107ba:	b082      	sub	sp, #8
 80107bc:	af00      	add	r7, sp, #0
 80107be:	6078      	str	r0, [r7, #4]
 80107c0:	4a05      	ldr	r2, [pc, #20]	; (80107d8 <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 80107c2:	687b      	ldr	r3, [r7, #4]
 80107c4:	601a      	str	r2, [r3, #0]
 80107c6:	687b      	ldr	r3, [r7, #4]
 80107c8:	4618      	mov	r0, r3
 80107ca:	f7ff f88d 	bl	800f8e8 <_ZN8touchgfx3BoxD1Ev>
 80107ce:	687b      	ldr	r3, [r7, #4]
 80107d0:	4618      	mov	r0, r3
 80107d2:	3708      	adds	r7, #8
 80107d4:	46bd      	mov	sp, r7
 80107d6:	bd80      	pop	{r7, pc}
 80107d8:	0802be94 	.word	0x0802be94

080107dc <_ZN8touchgfx13BoxWithBorderD0Ev>:
 80107dc:	b580      	push	{r7, lr}
 80107de:	b082      	sub	sp, #8
 80107e0:	af00      	add	r7, sp, #0
 80107e2:	6078      	str	r0, [r7, #4]
 80107e4:	6878      	ldr	r0, [r7, #4]
 80107e6:	f7ff ffe7 	bl	80107b8 <_ZN8touchgfx13BoxWithBorderD1Ev>
 80107ea:	2134      	movs	r1, #52	; 0x34
 80107ec:	6878      	ldr	r0, [r7, #4]
 80107ee:	f016 fc18 	bl	8027022 <_ZdlPvj>
 80107f2:	687b      	ldr	r3, [r7, #4]
 80107f4:	4618      	mov	r0, r3
 80107f6:	3708      	adds	r7, #8
 80107f8:	46bd      	mov	sp, r7
 80107fa:	bd80      	pop	{r7, pc}

080107fc <_ZN8touchgfx6ButtonD1Ev>:
class Button : public AbstractButton
 80107fc:	b580      	push	{r7, lr}
 80107fe:	b082      	sub	sp, #8
 8010800:	af00      	add	r7, sp, #0
 8010802:	6078      	str	r0, [r7, #4]
 8010804:	4a05      	ldr	r2, [pc, #20]	; (801081c <_ZN8touchgfx6ButtonD1Ev+0x20>)
 8010806:	687b      	ldr	r3, [r7, #4]
 8010808:	601a      	str	r2, [r3, #0]
 801080a:	687b      	ldr	r3, [r7, #4]
 801080c:	4618      	mov	r0, r3
 801080e:	f7ff faf3 	bl	800fdf8 <_ZN8touchgfx14AbstractButtonD1Ev>
 8010812:	687b      	ldr	r3, [r7, #4]
 8010814:	4618      	mov	r0, r3
 8010816:	3708      	adds	r7, #8
 8010818:	46bd      	mov	sp, r7
 801081a:	bd80      	pop	{r7, pc}
 801081c:	0802bd90 	.word	0x0802bd90

08010820 <_ZN8touchgfx6ButtonD0Ev>:
 8010820:	b580      	push	{r7, lr}
 8010822:	b082      	sub	sp, #8
 8010824:	af00      	add	r7, sp, #0
 8010826:	6078      	str	r0, [r7, #4]
 8010828:	6878      	ldr	r0, [r7, #4]
 801082a:	f7ff ffe7 	bl	80107fc <_ZN8touchgfx6ButtonD1Ev>
 801082e:	2134      	movs	r1, #52	; 0x34
 8010830:	6878      	ldr	r0, [r7, #4]
 8010832:	f016 fbf6 	bl	8027022 <_ZdlPvj>
 8010836:	687b      	ldr	r3, [r7, #4]
 8010838:	4618      	mov	r0, r3
 801083a:	3708      	adds	r7, #8
 801083c:	46bd      	mov	sp, r7
 801083e:	bd80      	pop	{r7, pc}

08010840 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8010840:	b580      	push	{r7, lr}
 8010842:	b082      	sub	sp, #8
 8010844:	af00      	add	r7, sp, #0
 8010846:	6078      	str	r0, [r7, #4]
        T::handleTickEvent();
 8010848:	687b      	ldr	r3, [r7, #4]
 801084a:	4618      	mov	r0, r3
 801084c:	f7fe fe96 	bl	800f57c <_ZN8touchgfx8Drawable15handleTickEventEv>
        nextMoveAnimationStep();
 8010850:	6878      	ldr	r0, [r7, #4]
 8010852:	f7ff fea6 	bl	80105a2 <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21nextMoveAnimationStepEv>
    }
 8010856:	bf00      	nop
 8010858:	3708      	adds	r7, #8
 801085a:	46bd      	mov	sp, r7
 801085c:	bd80      	pop	{r7, pc}

0801085e <_ZN8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21setMoveAnimationDelayEt>:
    virtual void setMoveAnimationDelay(uint16_t delay)
 801085e:	b480      	push	{r7}
 8010860:	b083      	sub	sp, #12
 8010862:	af00      	add	r7, sp, #0
 8010864:	6078      	str	r0, [r7, #4]
 8010866:	460b      	mov	r3, r1
 8010868:	807b      	strh	r3, [r7, #2]
        moveAnimationDelay = delay;
 801086a:	687b      	ldr	r3, [r7, #4]
 801086c:	887a      	ldrh	r2, [r7, #2]
 801086e:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    }
 8010872:	bf00      	nop
 8010874:	370c      	adds	r7, #12
 8010876:	46bd      	mov	sp, r7
 8010878:	f85d 7b04 	ldr.w	r7, [sp], #4
 801087c:	4770      	bx	lr

0801087e <_ZNK8touchgfx12MoveAnimatorINS_23TextAreaWithOneWildcardEE21getMoveAnimationDelayEv>:
    virtual uint16_t getMoveAnimationDelay() const
 801087e:	b480      	push	{r7}
 8010880:	b083      	sub	sp, #12
 8010882:	af00      	add	r7, sp, #0
 8010884:	6078      	str	r0, [r7, #4]
        return moveAnimationDelay;
 8010886:	687b      	ldr	r3, [r7, #4]
 8010888:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
    }
 801088c:	4618      	mov	r0, r3
 801088e:	370c      	adds	r7, #12
 8010890:	46bd      	mov	sp, r7
 8010892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010896:	4770      	bx	lr

08010898 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 8010898:	b480      	push	{r7}
 801089a:	af00      	add	r7, sp, #0
    return bitmap_database;
 801089c:	4b02      	ldr	r3, [pc, #8]	; (80108a8 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 801089e:	4618      	mov	r0, r3
 80108a0:	46bd      	mov	sp, r7
 80108a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108a6:	4770      	bx	lr
 80108a8:	0802b4f0 	.word	0x0802b4f0

080108ac <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 80108ac:	b480      	push	{r7}
 80108ae:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 80108b0:	2304      	movs	r3, #4
}
 80108b2:	4618      	mov	r0, r3
 80108b4:	46bd      	mov	sp, r7
 80108b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108ba:	4770      	bx	lr

080108bc <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 80108bc:	b480      	push	{r7}
 80108be:	b085      	sub	sp, #20
 80108c0:	af00      	add	r7, sp, #0
 80108c2:	60f8      	str	r0, [r7, #12]
 80108c4:	460b      	mov	r3, r1
 80108c6:	607a      	str	r2, [r7, #4]
 80108c8:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 80108ca:	2300      	movs	r3, #0
    }
 80108cc:	4618      	mov	r0, r3
 80108ce:	3714      	adds	r7, #20
 80108d0:	46bd      	mov	sp, r7
 80108d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108d6:	4770      	bx	lr

080108d8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 80108d8:	b480      	push	{r7}
 80108da:	b083      	sub	sp, #12
 80108dc:	af00      	add	r7, sp, #0
 80108de:	6078      	str	r0, [r7, #4]
    {
        return 0;
 80108e0:	2300      	movs	r3, #0
    }
 80108e2:	4618      	mov	r0, r3
 80108e4:	370c      	adds	r7, #12
 80108e6:	46bd      	mov	sp, r7
 80108e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108ec:	4770      	bx	lr

080108ee <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 80108ee:	b480      	push	{r7}
 80108f0:	b083      	sub	sp, #12
 80108f2:	af00      	add	r7, sp, #0
 80108f4:	6078      	str	r0, [r7, #4]
    {
        return 0;
 80108f6:	2300      	movs	r3, #0
    }
 80108f8:	4618      	mov	r0, r3
 80108fa:	370c      	adds	r7, #12
 80108fc:	46bd      	mov	sp, r7
 80108fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010902:	4770      	bx	lr

08010904 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8010904:	b480      	push	{r7}
 8010906:	b085      	sub	sp, #20
 8010908:	af00      	add	r7, sp, #0
 801090a:	60f8      	str	r0, [r7, #12]
 801090c:	60b9      	str	r1, [r7, #8]
 801090e:	4613      	mov	r3, r2
 8010910:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 8010912:	4a07      	ldr	r2, [pc, #28]	; (8010930 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8010914:	68fb      	ldr	r3, [r7, #12]
 8010916:	6013      	str	r3, [r2, #0]
        fonts = f;
 8010918:	4a06      	ldr	r2, [pc, #24]	; (8010934 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 801091a:	68bb      	ldr	r3, [r7, #8]
 801091c:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 801091e:	4a06      	ldr	r2, [pc, #24]	; (8010938 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 8010920:	88fb      	ldrh	r3, [r7, #6]
 8010922:	8013      	strh	r3, [r2, #0]
    }
 8010924:	bf00      	nop
 8010926:	3714      	adds	r7, #20
 8010928:	46bd      	mov	sp, r7
 801092a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801092e:	4770      	bx	lr
 8010930:	200259e8 	.word	0x200259e8
 8010934:	200259f0 	.word	0x200259f0
 8010938:	200259ec 	.word	0x200259ec

0801093c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 801093c:	b40e      	push	{r1, r2, r3}
 801093e:	b580      	push	{r7, lr}
 8010940:	b085      	sub	sp, #20
 8010942:	af00      	add	r7, sp, #0
 8010944:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 8010946:	f107 0320 	add.w	r3, r7, #32
 801094a:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 801094c:	68bb      	ldr	r3, [r7, #8]
 801094e:	69fa      	ldr	r2, [r7, #28]
 8010950:	2100      	movs	r1, #0
 8010952:	6878      	ldr	r0, [r7, #4]
 8010954:	f006 fdcc 	bl	80174f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 8010958:	4603      	mov	r3, r0
 801095a:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 801095c:	89fb      	ldrh	r3, [r7, #14]
}
 801095e:	4618      	mov	r0, r3
 8010960:	3714      	adds	r7, #20
 8010962:	46bd      	mov	sp, r7
 8010964:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8010968:	b003      	add	sp, #12
 801096a:	4770      	bx	lr

0801096c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 801096c:	b40c      	push	{r2, r3}
 801096e:	b580      	push	{r7, lr}
 8010970:	b084      	sub	sp, #16
 8010972:	af00      	add	r7, sp, #0
 8010974:	6078      	str	r0, [r7, #4]
 8010976:	460b      	mov	r3, r1
 8010978:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 801097a:	f107 031c 	add.w	r3, r7, #28
 801097e:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8010980:	78f9      	ldrb	r1, [r7, #3]
 8010982:	68bb      	ldr	r3, [r7, #8]
 8010984:	69ba      	ldr	r2, [r7, #24]
 8010986:	6878      	ldr	r0, [r7, #4]
 8010988:	f006 fdb2 	bl	80174f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 801098c:	4603      	mov	r3, r0
 801098e:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 8010990:	89fb      	ldrh	r3, [r7, #14]
}
 8010992:	4618      	mov	r0, r3
 8010994:	3710      	adds	r7, #16
 8010996:	46bd      	mov	sp, r7
 8010998:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801099c:	b002      	add	sp, #8
 801099e:	4770      	bx	lr

080109a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 80109a0:	b580      	push	{r7, lr}
 80109a2:	b08a      	sub	sp, #40	; 0x28
 80109a4:	af00      	add	r7, sp, #0
 80109a6:	6078      	str	r0, [r7, #4]
 80109a8:	460b      	mov	r3, r1
 80109aa:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 80109ac:	687b      	ldr	r3, [r7, #4]
 80109ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80109b0:	2b00      	cmp	r3, #0
 80109b2:	d016      	beq.n	80109e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 80109b4:	687b      	ldr	r3, [r7, #4]
 80109b6:	3322      	adds	r3, #34	; 0x22
 80109b8:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80109ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80109bc:	8adb      	ldrh	r3, [r3, #22]
 80109be:	2b00      	cmp	r3, #0
 80109c0:	d105      	bne.n	80109ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 80109c2:	4b43      	ldr	r3, [pc, #268]	; (8010ad0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 80109c4:	4a43      	ldr	r2, [pc, #268]	; (8010ad4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 80109c6:	21c5      	movs	r1, #197	; 0xc5
 80109c8:	4843      	ldr	r0, [pc, #268]	; (8010ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 80109ca:	f018 fa4d 	bl	8028e68 <__assert_func>
            return buffer[pos];
 80109ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80109d0:	8a9b      	ldrh	r3, [r3, #20]
 80109d2:	461a      	mov	r2, r3
 80109d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80109d6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80109da:	2b00      	cmp	r3, #0
 80109dc:	d001      	beq.n	80109e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 80109de:	2301      	movs	r3, #1
 80109e0:	e000      	b.n	80109e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 80109e2:	2300      	movs	r3, #0
 80109e4:	2b00      	cmp	r3, #0
 80109e6:	d06a      	beq.n	8010abe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 80109e8:	6878      	ldr	r0, [r7, #4]
 80109ea:	f008 f886 	bl	8018afa <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80109ee:	687b      	ldr	r3, [r7, #4]
 80109f0:	3322      	adds	r3, #34	; 0x22
 80109f2:	623b      	str	r3, [r7, #32]
 80109f4:	2301      	movs	r3, #1
 80109f6:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80109f8:	6a3b      	ldr	r3, [r7, #32]
 80109fa:	8adb      	ldrh	r3, [r3, #22]
 80109fc:	8bfa      	ldrh	r2, [r7, #30]
 80109fe:	429a      	cmp	r2, r3
 8010a00:	d305      	bcc.n	8010a0e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 8010a02:	4b36      	ldr	r3, [pc, #216]	; (8010adc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 8010a04:	4a36      	ldr	r2, [pc, #216]	; (8010ae0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 8010a06:	21cb      	movs	r1, #203	; 0xcb
 8010a08:	4833      	ldr	r0, [pc, #204]	; (8010ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 8010a0a:	f018 fa2d 	bl	8028e68 <__assert_func>
            const uint16_t index = pos + offset;
 8010a0e:	6a3b      	ldr	r3, [r7, #32]
 8010a10:	8a9a      	ldrh	r2, [r3, #20]
 8010a12:	8bfb      	ldrh	r3, [r7, #30]
 8010a14:	4413      	add	r3, r2
 8010a16:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 8010a18:	8bbb      	ldrh	r3, [r7, #28]
 8010a1a:	2b09      	cmp	r3, #9
 8010a1c:	d801      	bhi.n	8010a22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 8010a1e:	8bbb      	ldrh	r3, [r7, #28]
 8010a20:	e001      	b.n	8010a26 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 8010a22:	8bbb      	ldrh	r3, [r7, #28]
 8010a24:	3b0a      	subs	r3, #10
 8010a26:	6a3a      	ldr	r2, [r7, #32]
 8010a28:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8010a2c:	f640 123f 	movw	r2, #2367	; 0x93f
 8010a30:	4293      	cmp	r3, r2
 8010a32:	bf0c      	ite	eq
 8010a34:	2301      	moveq	r3, #1
 8010a36:	2300      	movne	r3, #0
 8010a38:	b2db      	uxtb	r3, r3
 8010a3a:	2b00      	cmp	r3, #0
 8010a3c:	d03f      	beq.n	8010abe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 8010a3e:	687b      	ldr	r3, [r7, #4]
 8010a40:	3322      	adds	r3, #34	; 0x22
 8010a42:	687a      	ldr	r2, [r7, #4]
 8010a44:	3222      	adds	r2, #34	; 0x22
 8010a46:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 8010a48:	68ba      	ldr	r2, [r7, #8]
 8010a4a:	8ad2      	ldrh	r2, [r2, #22]
 8010a4c:	2a00      	cmp	r2, #0
 8010a4e:	d105      	bne.n	8010a5c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 8010a50:	4b1f      	ldr	r3, [pc, #124]	; (8010ad0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 8010a52:	4a20      	ldr	r2, [pc, #128]	; (8010ad4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 8010a54:	21c5      	movs	r1, #197	; 0xc5
 8010a56:	4820      	ldr	r0, [pc, #128]	; (8010ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 8010a58:	f018 fa06 	bl	8028e68 <__assert_func>
            return buffer[pos];
 8010a5c:	68ba      	ldr	r2, [r7, #8]
 8010a5e:	8a92      	ldrh	r2, [r2, #20]
 8010a60:	4611      	mov	r1, r2
 8010a62:	68ba      	ldr	r2, [r7, #8]
 8010a64:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 8010a68:	613b      	str	r3, [r7, #16]
 8010a6a:	4613      	mov	r3, r2
 8010a6c:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 8010a6e:	693b      	ldr	r3, [r7, #16]
 8010a70:	8adb      	ldrh	r3, [r3, #22]
 8010a72:	2b01      	cmp	r3, #1
 8010a74:	d806      	bhi.n	8010a84 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 8010a76:	4b1b      	ldr	r3, [pc, #108]	; (8010ae4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 8010a78:	4a1b      	ldr	r2, [pc, #108]	; (8010ae8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 8010a7a:	f44f 718e 	mov.w	r1, #284	; 0x11c
 8010a7e:	4816      	ldr	r0, [pc, #88]	; (8010ad8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 8010a80:	f018 f9f2 	bl	8028e68 <__assert_func>
            const uint16_t index = pos + 1;
 8010a84:	693b      	ldr	r3, [r7, #16]
 8010a86:	8a9b      	ldrh	r3, [r3, #20]
 8010a88:	3301      	adds	r3, #1
 8010a8a:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 8010a8c:	89bb      	ldrh	r3, [r7, #12]
 8010a8e:	2b09      	cmp	r3, #9
 8010a90:	d801      	bhi.n	8010a96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 8010a92:	89bb      	ldrh	r3, [r7, #12]
 8010a94:	e000      	b.n	8010a98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 8010a96:	2300      	movs	r3, #0
 8010a98:	693a      	ldr	r2, [r7, #16]
 8010a9a:	89f9      	ldrh	r1, [r7, #14]
 8010a9c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 8010aa0:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 8010aa2:	687b      	ldr	r3, [r7, #4]
 8010aa4:	3322      	adds	r3, #34	; 0x22
 8010aa6:	61bb      	str	r3, [r7, #24]
 8010aa8:	f640 133f 	movw	r3, #2367	; 0x93f
 8010aac:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 8010aae:	69bb      	ldr	r3, [r7, #24]
 8010ab0:	8a9b      	ldrh	r3, [r3, #20]
 8010ab2:	4619      	mov	r1, r3
 8010ab4:	69bb      	ldr	r3, [r7, #24]
 8010ab6:	8afa      	ldrh	r2, [r7, #22]
 8010ab8:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 8010abc:	bf00      	nop
        }
    }
    return getNextChar();
 8010abe:	6878      	ldr	r0, [r7, #4]
 8010ac0:	f007 ff1e 	bl	8018900 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010ac4:	4603      	mov	r3, r0
}
 8010ac6:	4618      	mov	r0, r3
 8010ac8:	3728      	adds	r7, #40	; 0x28
 8010aca:	46bd      	mov	sp, r7
 8010acc:	bd80      	pop	{r7, pc}
 8010ace:	bf00      	nop
 8010ad0:	0802a340 	.word	0x0802a340
 8010ad4:	0802a34c 	.word	0x0802a34c
 8010ad8:	0802a3f8 	.word	0x0802a3f8
 8010adc:	0802a440 	.word	0x0802a440
 8010ae0:	0802a450 	.word	0x0802a450
 8010ae4:	0802a524 	.word	0x0802a524
 8010ae8:	0802a530 	.word	0x0802a530

08010aec <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 8010aec:	b580      	push	{r7, lr}
 8010aee:	b082      	sub	sp, #8
 8010af0:	af00      	add	r7, sp, #0
 8010af2:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 8010af4:	6878      	ldr	r0, [r7, #4]
 8010af6:	f007 feca 	bl	801888e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 8010afa:	bf00      	nop
 8010afc:	3708      	adds	r7, #8
 8010afe:	46bd      	mov	sp, r7
 8010b00:	bd80      	pop	{r7, pc}

08010b02 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8010b02:	b580      	push	{r7, lr}
 8010b04:	b088      	sub	sp, #32
 8010b06:	af02      	add	r7, sp, #8
 8010b08:	60f8      	str	r0, [r7, #12]
 8010b0a:	1d38      	adds	r0, r7, #4
 8010b0c:	e880 0006 	stmia.w	r0, {r1, r2}
 8010b10:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 8010b12:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8010b16:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8010b18:	1d39      	adds	r1, r7, #4
 8010b1a:	697b      	ldr	r3, [r7, #20]
 8010b1c:	9301      	str	r3, [sp, #4]
 8010b1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010b20:	9300      	str	r3, [sp, #0]
 8010b22:	6a3b      	ldr	r3, [r7, #32]
 8010b24:	683a      	ldr	r2, [r7, #0]
 8010b26:	68f8      	ldr	r0, [r7, #12]
 8010b28:	f005 f8f4 	bl	8015d14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8010b2c:	bf00      	nop
 8010b2e:	3718      	adds	r7, #24
 8010b30:	46bd      	mov	sp, r7
 8010b32:	bd80      	pop	{r7, pc}

08010b34 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8010b34:	b590      	push	{r4, r7, lr}
 8010b36:	b085      	sub	sp, #20
 8010b38:	af00      	add	r7, sp, #0
 8010b3a:	4603      	mov	r3, r0
 8010b3c:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 8010b3e:	2300      	movs	r3, #0
 8010b40:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8010b42:	88fb      	ldrh	r3, [r7, #6]
 8010b44:	2b00      	cmp	r3, #0
 8010b46:	d127      	bne.n	8010b98 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 8010b48:	88fb      	ldrh	r3, [r7, #6]
 8010b4a:	4a1e      	ldr	r2, [pc, #120]	; (8010bc4 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8010b4c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8010b50:	2b00      	cmp	r3, #0
 8010b52:	d016      	beq.n	8010b82 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8010b54:	88fb      	ldrh	r3, [r7, #6]
 8010b56:	4a1b      	ldr	r2, [pc, #108]	; (8010bc4 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8010b58:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8010b5c:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8010b5e:	68bb      	ldr	r3, [r7, #8]
 8010b60:	681b      	ldr	r3, [r3, #0]
 8010b62:	68ba      	ldr	r2, [r7, #8]
 8010b64:	4413      	add	r3, r2
 8010b66:	4a18      	ldr	r2, [pc, #96]	; (8010bc8 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8010b68:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8010b6a:	68bb      	ldr	r3, [r7, #8]
 8010b6c:	685b      	ldr	r3, [r3, #4]
 8010b6e:	68ba      	ldr	r2, [r7, #8]
 8010b70:	4413      	add	r3, r2
 8010b72:	4a16      	ldr	r2, [pc, #88]	; (8010bcc <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8010b74:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8010b76:	68bb      	ldr	r3, [r7, #8]
 8010b78:	689b      	ldr	r3, [r3, #8]
 8010b7a:	68ba      	ldr	r2, [r7, #8]
 8010b7c:	4413      	add	r3, r2
 8010b7e:	60fb      	str	r3, [r7, #12]
 8010b80:	e00a      	b.n	8010b98 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 8010b82:	4b11      	ldr	r3, [pc, #68]	; (8010bc8 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8010b84:	4a12      	ldr	r2, [pc, #72]	; (8010bd0 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 8010b86:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8010b88:	4a12      	ldr	r2, [pc, #72]	; (8010bd4 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 8010b8a:	4b10      	ldr	r3, [pc, #64]	; (8010bcc <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8010b8c:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8010b8e:	88fb      	ldrh	r3, [r7, #6]
 8010b90:	4a11      	ldr	r2, [pc, #68]	; (8010bd8 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 8010b92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8010b96:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8010b98:	68fb      	ldr	r3, [r7, #12]
 8010b9a:	2b00      	cmp	r3, #0
 8010b9c:	d00d      	beq.n	8010bba <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 8010b9e:	4a0f      	ldr	r2, [pc, #60]	; (8010bdc <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 8010ba0:	88fb      	ldrh	r3, [r7, #6]
 8010ba2:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8010ba4:	f000 f83e 	bl	8010c24 <_ZN17TypedTextDatabase8getFontsEv>
 8010ba8:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8010baa:	f000 f833 	bl	8010c14 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 8010bae:	4603      	mov	r3, r0
 8010bb0:	461a      	mov	r2, r3
 8010bb2:	4621      	mov	r1, r4
 8010bb4:	68f8      	ldr	r0, [r7, #12]
 8010bb6:	f7ff fea5 	bl	8010904 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 8010bba:	bf00      	nop
 8010bbc:	3714      	adds	r7, #20
 8010bbe:	46bd      	mov	sp, r7
 8010bc0:	bd90      	pop	{r4, r7, pc}
 8010bc2:	bf00      	nop
 8010bc4:	20023dc4 	.word	0x20023dc4
 8010bc8:	20023dcc 	.word	0x20023dcc
 8010bcc:	20023dd0 	.word	0x20023dd0
 8010bd0:	0805cfa8 	.word	0x0805cfa8
 8010bd4:	0805cfa0 	.word	0x0805cfa0
 8010bd8:	0805d014 	.word	0x0805d014
 8010bdc:	20023dc8 	.word	0x20023dc8

08010be0 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 8010be0:	b480      	push	{r7}
 8010be2:	b083      	sub	sp, #12
 8010be4:	af00      	add	r7, sp, #0
 8010be6:	6078      	str	r0, [r7, #4]
 8010be8:	460b      	mov	r3, r1
 8010bea:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8010bec:	4b07      	ldr	r3, [pc, #28]	; (8010c0c <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 8010bee:	681a      	ldr	r2, [r3, #0]
 8010bf0:	4b07      	ldr	r3, [pc, #28]	; (8010c10 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 8010bf2:	6819      	ldr	r1, [r3, #0]
 8010bf4:	887b      	ldrh	r3, [r7, #2]
 8010bf6:	009b      	lsls	r3, r3, #2
 8010bf8:	440b      	add	r3, r1
 8010bfa:	681b      	ldr	r3, [r3, #0]
 8010bfc:	005b      	lsls	r3, r3, #1
 8010bfe:	4413      	add	r3, r2
}
 8010c00:	4618      	mov	r0, r3
 8010c02:	370c      	adds	r7, #12
 8010c04:	46bd      	mov	sp, r7
 8010c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c0a:	4770      	bx	lr
 8010c0c:	20023dcc 	.word	0x20023dcc
 8010c10:	20023dd0 	.word	0x20023dd0

08010c14 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8010c14:	b480      	push	{r7}
 8010c16:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8010c18:	2302      	movs	r3, #2
}
 8010c1a:	4618      	mov	r0, r3
 8010c1c:	46bd      	mov	sp, r7
 8010c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c22:	4770      	bx	lr

08010c24 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8010c24:	b480      	push	{r7}
 8010c26:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 8010c28:	4b02      	ldr	r3, [pc, #8]	; (8010c34 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 8010c2a:	4618      	mov	r0, r3
 8010c2c:	46bd      	mov	sp, r7
 8010c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c32:	4770      	bx	lr
 8010c34:	20023dd4 	.word	0x20023dd4

08010c38 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8010c38:	b580      	push	{r7, lr}
 8010c3a:	b082      	sub	sp, #8
 8010c3c:	af00      	add	r7, sp, #0
 8010c3e:	6078      	str	r0, [r7, #4]
 8010c40:	6039      	str	r1, [r7, #0]
 8010c42:	687b      	ldr	r3, [r7, #4]
 8010c44:	2b01      	cmp	r3, #1
 8010c46:	d113      	bne.n	8010c70 <_Z41__static_initialization_and_destruction_0ii+0x38>
 8010c48:	683b      	ldr	r3, [r7, #0]
 8010c4a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010c4e:	4293      	cmp	r3, r2
 8010c50:	d10e      	bne.n	8010c70 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 8010c52:	f7fd fcf7 	bl	800e644 <_Z23getFont_verdana_20_4bppv>
 8010c56:	4603      	mov	r3, r0
};
 8010c58:	4a07      	ldr	r2, [pc, #28]	; (8010c78 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8010c5a:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 8010c5c:	f7fd fd4c 	bl	800e6f8 <_Z23getFont_verdana_40_4bppv>
 8010c60:	4603      	mov	r3, r0
};
 8010c62:	4a05      	ldr	r2, [pc, #20]	; (8010c78 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8010c64:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 8010c66:	f7fd fc93 	bl	800e590 <_Z23getFont_verdana_10_4bppv>
 8010c6a:	4603      	mov	r3, r0
};
 8010c6c:	4a02      	ldr	r2, [pc, #8]	; (8010c78 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8010c6e:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 8010c70:	bf00      	nop
 8010c72:	3708      	adds	r7, #8
 8010c74:	46bd      	mov	sp, r7
 8010c76:	bd80      	pop	{r7, pc}
 8010c78:	20023dd4 	.word	0x20023dd4

08010c7c <_GLOBAL__sub_I_touchgfx_fonts>:
 8010c7c:	b580      	push	{r7, lr}
 8010c7e:	af00      	add	r7, sp, #0
 8010c80:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010c84:	2001      	movs	r0, #1
 8010c86:	f7ff ffd7 	bl	8010c38 <_Z41__static_initialization_and_destruction_0ii>
 8010c8a:	bd80      	pop	{r7, pc}

08010c8c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8010c8c:	b580      	push	{r7, lr}
 8010c8e:	b082      	sub	sp, #8
 8010c90:	af00      	add	r7, sp, #0
 8010c92:	6078      	str	r0, [r7, #4]
 8010c94:	4a05      	ldr	r2, [pc, #20]	; (8010cac <_ZN19FrontendApplicationD1Ev+0x20>)
 8010c96:	687b      	ldr	r3, [r7, #4]
 8010c98:	601a      	str	r2, [r3, #0]
 8010c9a:	687b      	ldr	r3, [r7, #4]
 8010c9c:	4618      	mov	r0, r3
 8010c9e:	f7fd ff8b 	bl	800ebb8 <_ZN23FrontendApplicationBaseD1Ev>
 8010ca2:	687b      	ldr	r3, [r7, #4]
 8010ca4:	4618      	mov	r0, r3
 8010ca6:	3708      	adds	r7, #8
 8010ca8:	46bd      	mov	sp, r7
 8010caa:	bd80      	pop	{r7, pc}
 8010cac:	0802b5a4 	.word	0x0802b5a4

08010cb0 <_ZN19FrontendApplicationD0Ev>:
 8010cb0:	b580      	push	{r7, lr}
 8010cb2:	b082      	sub	sp, #8
 8010cb4:	af00      	add	r7, sp, #0
 8010cb6:	6078      	str	r0, [r7, #4]
 8010cb8:	6878      	ldr	r0, [r7, #4]
 8010cba:	f7ff ffe7 	bl	8010c8c <_ZN19FrontendApplicationD1Ev>
 8010cbe:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8010cc2:	6878      	ldr	r0, [r7, #4]
 8010cc4:	f016 f9ad 	bl	8027022 <_ZdlPvj>
 8010cc8:	687b      	ldr	r3, [r7, #4]
 8010cca:	4618      	mov	r0, r3
 8010ccc:	3708      	adds	r7, #8
 8010cce:	46bd      	mov	sp, r7
 8010cd0:	bd80      	pop	{r7, pc}

08010cd2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8010cd2:	b580      	push	{r7, lr}
 8010cd4:	b082      	sub	sp, #8
 8010cd6:	af00      	add	r7, sp, #0
 8010cd8:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 8010cda:	687b      	ldr	r3, [r7, #4]
 8010cdc:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8010ce0:	4618      	mov	r0, r3
 8010ce2:	f000 f82d 	bl	8010d40 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8010ce6:	687b      	ldr	r3, [r7, #4]
 8010ce8:	4618      	mov	r0, r3
 8010cea:	f005 fd07 	bl	80166fc <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8010cee:	bf00      	nop
 8010cf0:	3708      	adds	r7, #8
 8010cf2:	46bd      	mov	sp, r7
 8010cf4:	bd80      	pop	{r7, pc}
	...

08010cf8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8010cf8:	b580      	push	{r7, lr}
 8010cfa:	b084      	sub	sp, #16
 8010cfc:	af00      	add	r7, sp, #0
 8010cfe:	60f8      	str	r0, [r7, #12]
 8010d00:	60b9      	str	r1, [r7, #8]
 8010d02:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8010d04:	68fb      	ldr	r3, [r7, #12]
 8010d06:	687a      	ldr	r2, [r7, #4]
 8010d08:	68b9      	ldr	r1, [r7, #8]
 8010d0a:	4618      	mov	r0, r3
 8010d0c:	f7fd ffa4 	bl	800ec58 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8010d10:	4a03      	ldr	r2, [pc, #12]	; (8010d20 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8010d12:	68fb      	ldr	r3, [r7, #12]
 8010d14:	601a      	str	r2, [r3, #0]
{

}
 8010d16:	68fb      	ldr	r3, [r7, #12]
 8010d18:	4618      	mov	r0, r3
 8010d1a:	3710      	adds	r7, #16
 8010d1c:	46bd      	mov	sp, r7
 8010d1e:	bd80      	pop	{r7, pc}
 8010d20:	0802b5a4 	.word	0x0802b5a4

08010d24 <_ZN5ModelC1Ev>:

extern __IO uint8_t rx_counter;
extern __IO uint8_t midiTitleReady;


Model::Model() : modelListener(0)
 8010d24:	b480      	push	{r7}
 8010d26:	b083      	sub	sp, #12
 8010d28:	af00      	add	r7, sp, #0
 8010d2a:	6078      	str	r0, [r7, #4]
 8010d2c:	687b      	ldr	r3, [r7, #4]
 8010d2e:	2200      	movs	r2, #0
 8010d30:	601a      	str	r2, [r3, #0]
{

}
 8010d32:	687b      	ldr	r3, [r7, #4]
 8010d34:	4618      	mov	r0, r3
 8010d36:	370c      	adds	r7, #12
 8010d38:	46bd      	mov	sp, r7
 8010d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d3e:	4770      	bx	lr

08010d40 <_ZN5Model4tickEv>:

void Model::tick()
{
 8010d40:	b580      	push	{r7, lr}
 8010d42:	b082      	sub	sp, #8
 8010d44:	af00      	add	r7, sp, #0
 8010d46:	6078      	str	r0, [r7, #4]
	if(midiTitleReady){
 8010d48:	4b0f      	ldr	r3, [pc, #60]	; (8010d88 <_ZN5Model4tickEv+0x48>)
 8010d4a:	781b      	ldrb	r3, [r3, #0]
 8010d4c:	b2db      	uxtb	r3, r3
 8010d4e:	2b00      	cmp	r3, #0
 8010d50:	bf14      	ite	ne
 8010d52:	2301      	movne	r3, #1
 8010d54:	2300      	moveq	r3, #0
 8010d56:	b2db      	uxtb	r3, r3
 8010d58:	2b00      	cmp	r3, #0
 8010d5a:	d011      	beq.n	8010d80 <_ZN5Model4tickEv+0x40>
		midiTitleReady = 0;
 8010d5c:	4b0a      	ldr	r3, [pc, #40]	; (8010d88 <_ZN5Model4tickEv+0x48>)
 8010d5e:	2200      	movs	r2, #0
 8010d60:	701a      	strb	r2, [r3, #0]
		modelListener -> midiTitleReady((uint8_t)rx_counter);
 8010d62:	687b      	ldr	r3, [r7, #4]
 8010d64:	681a      	ldr	r2, [r3, #0]
 8010d66:	687b      	ldr	r3, [r7, #4]
 8010d68:	681b      	ldr	r3, [r3, #0]
 8010d6a:	681b      	ldr	r3, [r3, #0]
 8010d6c:	3308      	adds	r3, #8
 8010d6e:	681b      	ldr	r3, [r3, #0]
 8010d70:	4906      	ldr	r1, [pc, #24]	; (8010d8c <_ZN5Model4tickEv+0x4c>)
 8010d72:	7809      	ldrb	r1, [r1, #0]
 8010d74:	b2c9      	uxtb	r1, r1
 8010d76:	4610      	mov	r0, r2
 8010d78:	4798      	blx	r3
		rx_counter = 0;
 8010d7a:	4b04      	ldr	r3, [pc, #16]	; (8010d8c <_ZN5Model4tickEv+0x4c>)
 8010d7c:	2200      	movs	r2, #0
 8010d7e:	701a      	strb	r2, [r3, #0]

	}
}
 8010d80:	bf00      	nop
 8010d82:	3708      	adds	r7, #8
 8010d84:	46bd      	mov	sp, r7
 8010d86:	bd80      	pop	{r7, pc}
 8010d88:	20000047 	.word	0x20000047
 8010d8c:	20000046 	.word	0x20000046

08010d90 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8010d90:	b480      	push	{r7}
 8010d92:	b083      	sub	sp, #12
 8010d94:	af00      	add	r7, sp, #0
 8010d96:	6078      	str	r0, [r7, #4]
    {
    }
 8010d98:	bf00      	nop
 8010d9a:	370c      	adds	r7, #12
 8010d9c:	46bd      	mov	sp, r7
 8010d9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010da2:	4770      	bx	lr

08010da4 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8010da4:	b480      	push	{r7}
 8010da6:	b083      	sub	sp, #12
 8010da8:	af00      	add	r7, sp, #0
 8010daa:	6078      	str	r0, [r7, #4]
    {
    }
 8010dac:	bf00      	nop
 8010dae:	370c      	adds	r7, #12
 8010db0:	46bd      	mov	sp, r7
 8010db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010db6:	4770      	bx	lr

08010db8 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 8010db8:	b480      	push	{r7}
 8010dba:	b083      	sub	sp, #12
 8010dbc:	af00      	add	r7, sp, #0
 8010dbe:	6078      	str	r0, [r7, #4]
    {
 8010dc0:	4a04      	ldr	r2, [pc, #16]	; (8010dd4 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 8010dc2:	687b      	ldr	r3, [r7, #4]
 8010dc4:	601a      	str	r2, [r3, #0]
    }
 8010dc6:	687b      	ldr	r3, [r7, #4]
 8010dc8:	4618      	mov	r0, r3
 8010dca:	370c      	adds	r7, #12
 8010dcc:	46bd      	mov	sp, r7
 8010dce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dd2:	4770      	bx	lr
 8010dd4:	0802b63c 	.word	0x0802b63c

08010dd8 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 8010dd8:	b580      	push	{r7, lr}
 8010dda:	b082      	sub	sp, #8
 8010ddc:	af00      	add	r7, sp, #0
 8010dde:	6078      	str	r0, [r7, #4]
    }
 8010de0:	6878      	ldr	r0, [r7, #4]
 8010de2:	f7ff ffe9 	bl	8010db8 <_ZN8touchgfx9PresenterD1Ev>
 8010de6:	2104      	movs	r1, #4
 8010de8:	6878      	ldr	r0, [r7, #4]
 8010dea:	f016 f91a 	bl	8027022 <_ZdlPvj>
 8010dee:	687b      	ldr	r3, [r7, #4]
 8010df0:	4618      	mov	r0, r3
 8010df2:	3708      	adds	r7, #8
 8010df4:	46bd      	mov	sp, r7
 8010df6:	bd80      	pop	{r7, pc}

08010df8 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 8010df8:	b480      	push	{r7}
 8010dfa:	b083      	sub	sp, #12
 8010dfc:	af00      	add	r7, sp, #0
 8010dfe:	6078      	str	r0, [r7, #4]
    {
 8010e00:	4a04      	ldr	r2, [pc, #16]	; (8010e14 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8010e02:	687b      	ldr	r3, [r7, #4]
 8010e04:	601a      	str	r2, [r3, #0]
    }
 8010e06:	687b      	ldr	r3, [r7, #4]
 8010e08:	4618      	mov	r0, r3
 8010e0a:	370c      	adds	r7, #12
 8010e0c:	46bd      	mov	sp, r7
 8010e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e12:	4770      	bx	lr
 8010e14:	0802b63c 	.word	0x0802b63c

08010e18 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 8010e18:	b480      	push	{r7}
 8010e1a:	b083      	sub	sp, #12
 8010e1c:	af00      	add	r7, sp, #0
 8010e1e:	6078      	str	r0, [r7, #4]
 8010e20:	4a06      	ldr	r2, [pc, #24]	; (8010e3c <_ZN13ModelListenerC1Ev+0x24>)
 8010e22:	687b      	ldr	r3, [r7, #4]
 8010e24:	601a      	str	r2, [r3, #0]
 8010e26:	687b      	ldr	r3, [r7, #4]
 8010e28:	2200      	movs	r2, #0
 8010e2a:	605a      	str	r2, [r3, #4]
 8010e2c:	687b      	ldr	r3, [r7, #4]
 8010e2e:	4618      	mov	r0, r3
 8010e30:	370c      	adds	r7, #12
 8010e32:	46bd      	mov	sp, r7
 8010e34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e38:	4770      	bx	lr
 8010e3a:	bf00      	nop
 8010e3c:	0802b628 	.word	0x0802b628

08010e40 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 8010e40:	b480      	push	{r7}
 8010e42:	b083      	sub	sp, #12
 8010e44:	af00      	add	r7, sp, #0
 8010e46:	6078      	str	r0, [r7, #4]
 8010e48:	4a04      	ldr	r2, [pc, #16]	; (8010e5c <_ZN13ModelListenerD1Ev+0x1c>)
 8010e4a:	687b      	ldr	r3, [r7, #4]
 8010e4c:	601a      	str	r2, [r3, #0]
 8010e4e:	687b      	ldr	r3, [r7, #4]
 8010e50:	4618      	mov	r0, r3
 8010e52:	370c      	adds	r7, #12
 8010e54:	46bd      	mov	sp, r7
 8010e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e5a:	4770      	bx	lr
 8010e5c:	0802b628 	.word	0x0802b628

08010e60 <_ZN13ModelListenerD0Ev>:
 8010e60:	b580      	push	{r7, lr}
 8010e62:	b082      	sub	sp, #8
 8010e64:	af00      	add	r7, sp, #0
 8010e66:	6078      	str	r0, [r7, #4]
 8010e68:	6878      	ldr	r0, [r7, #4]
 8010e6a:	f7ff ffe9 	bl	8010e40 <_ZN13ModelListenerD1Ev>
 8010e6e:	2108      	movs	r1, #8
 8010e70:	6878      	ldr	r0, [r7, #4]
 8010e72:	f016 f8d6 	bl	8027022 <_ZdlPvj>
 8010e76:	687b      	ldr	r3, [r7, #4]
 8010e78:	4618      	mov	r0, r3
 8010e7a:	3708      	adds	r7, #8
 8010e7c:	46bd      	mov	sp, r7
 8010e7e:	bd80      	pop	{r7, pc}

08010e80 <_ZN13ModelListener14midiTitleReadyEh>:

    virtual void midiTitleReady(uint8_t value){};
 8010e80:	b480      	push	{r7}
 8010e82:	b083      	sub	sp, #12
 8010e84:	af00      	add	r7, sp, #0
 8010e86:	6078      	str	r0, [r7, #4]
 8010e88:	460b      	mov	r3, r1
 8010e8a:	70fb      	strb	r3, [r7, #3]
 8010e8c:	bf00      	nop
 8010e8e:	370c      	adds	r7, #12
 8010e90:	46bd      	mov	sp, r7
 8010e92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e96:	4770      	bx	lr

08010e98 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8010e98:	b580      	push	{r7, lr}
 8010e9a:	b082      	sub	sp, #8
 8010e9c:	af00      	add	r7, sp, #0
 8010e9e:	6078      	str	r0, [r7, #4]
 8010ea0:	4a09      	ldr	r2, [pc, #36]	; (8010ec8 <_ZN16Screen1PresenterD1Ev+0x30>)
 8010ea2:	687b      	ldr	r3, [r7, #4]
 8010ea4:	601a      	str	r2, [r3, #0]
 8010ea6:	4a09      	ldr	r2, [pc, #36]	; (8010ecc <_ZN16Screen1PresenterD1Ev+0x34>)
 8010ea8:	687b      	ldr	r3, [r7, #4]
 8010eaa:	605a      	str	r2, [r3, #4]
 8010eac:	687b      	ldr	r3, [r7, #4]
 8010eae:	3304      	adds	r3, #4
 8010eb0:	4618      	mov	r0, r3
 8010eb2:	f7ff ffc5 	bl	8010e40 <_ZN13ModelListenerD1Ev>
 8010eb6:	687b      	ldr	r3, [r7, #4]
 8010eb8:	4618      	mov	r0, r3
 8010eba:	f7ff ff7d 	bl	8010db8 <_ZN8touchgfx9PresenterD1Ev>
 8010ebe:	687b      	ldr	r3, [r7, #4]
 8010ec0:	4618      	mov	r0, r3
 8010ec2:	3708      	adds	r7, #8
 8010ec4:	46bd      	mov	sp, r7
 8010ec6:	bd80      	pop	{r7, pc}
 8010ec8:	0802b5f8 	.word	0x0802b5f8
 8010ecc:	0802b614 	.word	0x0802b614

08010ed0 <_ZThn4_N16Screen1PresenterD1Ev>:
 8010ed0:	f1a0 0004 	sub.w	r0, r0, #4
 8010ed4:	e7e0      	b.n	8010e98 <_ZN16Screen1PresenterD1Ev>
 8010ed6:	bf00      	nop

08010ed8 <_ZN16Screen1PresenterD0Ev>:
 8010ed8:	b580      	push	{r7, lr}
 8010eda:	b082      	sub	sp, #8
 8010edc:	af00      	add	r7, sp, #0
 8010ede:	6078      	str	r0, [r7, #4]
 8010ee0:	6878      	ldr	r0, [r7, #4]
 8010ee2:	f7ff ffd9 	bl	8010e98 <_ZN16Screen1PresenterD1Ev>
 8010ee6:	2110      	movs	r1, #16
 8010ee8:	6878      	ldr	r0, [r7, #4]
 8010eea:	f016 f89a 	bl	8027022 <_ZdlPvj>
 8010eee:	687b      	ldr	r3, [r7, #4]
 8010ef0:	4618      	mov	r0, r3
 8010ef2:	3708      	adds	r7, #8
 8010ef4:	46bd      	mov	sp, r7
 8010ef6:	bd80      	pop	{r7, pc}

08010ef8 <_ZThn4_N16Screen1PresenterD0Ev>:
 8010ef8:	f1a0 0004 	sub.w	r0, r0, #4
 8010efc:	e7ec      	b.n	8010ed8 <_ZN16Screen1PresenterD0Ev>
	...

08010f00 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>



Screen1Presenter::Screen1Presenter(Screen1View& v)
 8010f00:	b580      	push	{r7, lr}
 8010f02:	b082      	sub	sp, #8
 8010f04:	af00      	add	r7, sp, #0
 8010f06:	6078      	str	r0, [r7, #4]
 8010f08:	6039      	str	r1, [r7, #0]
    : view(v)
 8010f0a:	687b      	ldr	r3, [r7, #4]
 8010f0c:	4618      	mov	r0, r3
 8010f0e:	f7ff ff73 	bl	8010df8 <_ZN8touchgfx9PresenterC1Ev>
 8010f12:	687b      	ldr	r3, [r7, #4]
 8010f14:	3304      	adds	r3, #4
 8010f16:	4618      	mov	r0, r3
 8010f18:	f7ff ff7e 	bl	8010e18 <_ZN13ModelListenerC1Ev>
 8010f1c:	4a06      	ldr	r2, [pc, #24]	; (8010f38 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 8010f1e:	687b      	ldr	r3, [r7, #4]
 8010f20:	601a      	str	r2, [r3, #0]
 8010f22:	4a06      	ldr	r2, [pc, #24]	; (8010f3c <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 8010f24:	687b      	ldr	r3, [r7, #4]
 8010f26:	605a      	str	r2, [r3, #4]
 8010f28:	687b      	ldr	r3, [r7, #4]
 8010f2a:	683a      	ldr	r2, [r7, #0]
 8010f2c:	60da      	str	r2, [r3, #12]
{

}
 8010f2e:	687b      	ldr	r3, [r7, #4]
 8010f30:	4618      	mov	r0, r3
 8010f32:	3708      	adds	r7, #8
 8010f34:	46bd      	mov	sp, r7
 8010f36:	bd80      	pop	{r7, pc}
 8010f38:	0802b5f8 	.word	0x0802b5f8
 8010f3c:	0802b614 	.word	0x0802b614

08010f40 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 8010f40:	b480      	push	{r7}
 8010f42:	b083      	sub	sp, #12
 8010f44:	af00      	add	r7, sp, #0
 8010f46:	6078      	str	r0, [r7, #4]

}
 8010f48:	bf00      	nop
 8010f4a:	370c      	adds	r7, #12
 8010f4c:	46bd      	mov	sp, r7
 8010f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f52:	4770      	bx	lr

08010f54 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 8010f54:	b480      	push	{r7}
 8010f56:	b083      	sub	sp, #12
 8010f58:	af00      	add	r7, sp, #0
 8010f5a:	6078      	str	r0, [r7, #4]

}
 8010f5c:	bf00      	nop
 8010f5e:	370c      	adds	r7, #12
 8010f60:	46bd      	mov	sp, r7
 8010f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f66:	4770      	bx	lr

08010f68 <_ZN16Screen1Presenter14midiTitleReadyEh>:

void Screen1Presenter::midiTitleReady(uint8_t value){
 8010f68:	b580      	push	{r7, lr}
 8010f6a:	b082      	sub	sp, #8
 8010f6c:	af00      	add	r7, sp, #0
 8010f6e:	6078      	str	r0, [r7, #4]
 8010f70:	460b      	mov	r3, r1
 8010f72:	70fb      	strb	r3, [r7, #3]
	view.midiTitleReady(value);
 8010f74:	687b      	ldr	r3, [r7, #4]
 8010f76:	68da      	ldr	r2, [r3, #12]
 8010f78:	687b      	ldr	r3, [r7, #4]
 8010f7a:	68db      	ldr	r3, [r3, #12]
 8010f7c:	681b      	ldr	r3, [r3, #0]
 8010f7e:	332c      	adds	r3, #44	; 0x2c
 8010f80:	681b      	ldr	r3, [r3, #0]
 8010f82:	78f9      	ldrb	r1, [r7, #3]
 8010f84:	4610      	mov	r0, r2
 8010f86:	4798      	blx	r3
}
 8010f88:	bf00      	nop
 8010f8a:	3708      	adds	r7, #8
 8010f8c:	46bd      	mov	sp, r7
 8010f8e:	bd80      	pop	{r7, pc}

08010f90 <_ZThn4_N16Screen1Presenter14midiTitleReadyEh>:

    virtual void midiTitleReady(uint8_t value);
 8010f90:	f1a0 0004 	sub.w	r0, r0, #4
 8010f94:	f7ff bfe8 	b.w	8010f68 <_ZN16Screen1Presenter14midiTitleReadyEh>

08010f98 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8010f98:	b580      	push	{r7, lr}
 8010f9a:	b082      	sub	sp, #8
 8010f9c:	af00      	add	r7, sp, #0
 8010f9e:	6078      	str	r0, [r7, #4]
 8010fa0:	4a05      	ldr	r2, [pc, #20]	; (8010fb8 <_ZN11Screen1ViewD1Ev+0x20>)
 8010fa2:	687b      	ldr	r3, [r7, #4]
 8010fa4:	601a      	str	r2, [r3, #0]
 8010fa6:	687b      	ldr	r3, [r7, #4]
 8010fa8:	4618      	mov	r0, r3
 8010faa:	f7ff f98d 	bl	80102c8 <_ZN15Screen1ViewBaseD1Ev>
 8010fae:	687b      	ldr	r3, [r7, #4]
 8010fb0:	4618      	mov	r0, r3
 8010fb2:	3708      	adds	r7, #8
 8010fb4:	46bd      	mov	sp, r7
 8010fb6:	bd80      	pop	{r7, pc}
 8010fb8:	0802b654 	.word	0x0802b654

08010fbc <_ZN11Screen1ViewD0Ev>:
 8010fbc:	b580      	push	{r7, lr}
 8010fbe:	b082      	sub	sp, #8
 8010fc0:	af00      	add	r7, sp, #0
 8010fc2:	6078      	str	r0, [r7, #4]
 8010fc4:	6878      	ldr	r0, [r7, #4]
 8010fc6:	f7ff ffe7 	bl	8010f98 <_ZN11Screen1ViewD1Ev>
 8010fca:	f44f 7101 	mov.w	r1, #516	; 0x204
 8010fce:	6878      	ldr	r0, [r7, #4]
 8010fd0:	f016 f827 	bl	8027022 <_ZdlPvj>
 8010fd4:	687b      	ldr	r3, [r7, #4]
 8010fd6:	4618      	mov	r0, r3
 8010fd8:	3708      	adds	r7, #8
 8010fda:	46bd      	mov	sp, r7
 8010fdc:	bd80      	pop	{r7, pc}
	...

08010fe0 <_ZN11Screen1ViewC1Ev>:
#include <string.h>
#include <stm32l4xx_hal.h>

extern __IO uint8_t midi_titleBuffer[50];

Screen1View::Screen1View()
 8010fe0:	b580      	push	{r7, lr}
 8010fe2:	b082      	sub	sp, #8
 8010fe4:	af00      	add	r7, sp, #0
 8010fe6:	6078      	str	r0, [r7, #4]
 8010fe8:	687b      	ldr	r3, [r7, #4]
 8010fea:	4618      	mov	r0, r3
 8010fec:	f7fe ff6c 	bl	800fec8 <_ZN15Screen1ViewBaseC1Ev>
 8010ff0:	4a03      	ldr	r2, [pc, #12]	; (8011000 <_ZN11Screen1ViewC1Ev+0x20>)
 8010ff2:	687b      	ldr	r3, [r7, #4]
 8010ff4:	601a      	str	r2, [r3, #0]
{

}
 8010ff6:	687b      	ldr	r3, [r7, #4]
 8010ff8:	4618      	mov	r0, r3
 8010ffa:	3708      	adds	r7, #8
 8010ffc:	46bd      	mov	sp, r7
 8010ffe:	bd80      	pop	{r7, pc}
 8011000:	0802b654 	.word	0x0802b654

08011004 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 8011004:	b580      	push	{r7, lr}
 8011006:	b082      	sub	sp, #8
 8011008:	af00      	add	r7, sp, #0
 801100a:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 801100c:	687b      	ldr	r3, [r7, #4]
 801100e:	4618      	mov	r0, r3
 8011010:	f7ff f99d 	bl	801034e <_ZN15Screen1ViewBase11setupScreenEv>
}
 8011014:	bf00      	nop
 8011016:	3708      	adds	r7, #8
 8011018:	46bd      	mov	sp, r7
 801101a:	bd80      	pop	{r7, pc}

0801101c <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 801101c:	b580      	push	{r7, lr}
 801101e:	b082      	sub	sp, #8
 8011020:	af00      	add	r7, sp, #0
 8011022:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 8011024:	687b      	ldr	r3, [r7, #4]
 8011026:	4618      	mov	r0, r3
 8011028:	f7fe fb80 	bl	800f72c <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 801102c:	bf00      	nop
 801102e:	3708      	adds	r7, #8
 8011030:	46bd      	mov	sp, r7
 8011032:	bd80      	pop	{r7, pc}

08011034 <_ZN11Screen1View14midiTitleReadyEh>:

void Screen1View::midiTitleReady(uint8_t value){
 8011034:	b580      	push	{r7, lr}
 8011036:	b082      	sub	sp, #8
 8011038:	af00      	add	r7, sp, #0
 801103a:	6078      	str	r0, [r7, #4]
 801103c:	460b      	mov	r3, r1
 801103e:	70fb      	strb	r3, [r7, #3]

	while(value){
 8011040:	e00e      	b.n	8011060 <_ZN11Screen1View14midiTitleReadyEh+0x2c>
		textArea1Buffer[value] = midi_titleBuffer[value];
 8011042:	78fb      	ldrb	r3, [r7, #3]
 8011044:	4a12      	ldr	r2, [pc, #72]	; (8011090 <_ZN11Screen1View14midiTitleReadyEh+0x5c>)
 8011046:	5cd3      	ldrb	r3, [r2, r3]
 8011048:	b2da      	uxtb	r2, r3
 801104a:	78fb      	ldrb	r3, [r7, #3]
 801104c:	b291      	uxth	r1, r2
 801104e:	687a      	ldr	r2, [r7, #4]
 8011050:	33c8      	adds	r3, #200	; 0xc8
 8011052:	005b      	lsls	r3, r3, #1
 8011054:	4413      	add	r3, r2
 8011056:	460a      	mov	r2, r1
 8011058:	809a      	strh	r2, [r3, #4]
		value--;
 801105a:	78fb      	ldrb	r3, [r7, #3]
 801105c:	3b01      	subs	r3, #1
 801105e:	70fb      	strb	r3, [r7, #3]
	while(value){
 8011060:	78fb      	ldrb	r3, [r7, #3]
 8011062:	2b00      	cmp	r3, #0
 8011064:	d1ed      	bne.n	8011042 <_ZN11Screen1View14midiTitleReadyEh+0xe>
	}
	textArea1Buffer[value] = midi_titleBuffer[value];
 8011066:	78fb      	ldrb	r3, [r7, #3]
 8011068:	4a09      	ldr	r2, [pc, #36]	; (8011090 <_ZN11Screen1View14midiTitleReadyEh+0x5c>)
 801106a:	5cd3      	ldrb	r3, [r2, r3]
 801106c:	b2da      	uxtb	r2, r3
 801106e:	78fb      	ldrb	r3, [r7, #3]
 8011070:	b291      	uxth	r1, r2
 8011072:	687a      	ldr	r2, [r7, #4]
 8011074:	33c8      	adds	r3, #200	; 0xc8
 8011076:	005b      	lsls	r3, r3, #1
 8011078:	4413      	add	r3, r2
 801107a:	460a      	mov	r2, r1
 801107c:	809a      	strh	r2, [r3, #4]
	textArea1.invalidate();
 801107e:	687b      	ldr	r3, [r7, #4]
 8011080:	33cc      	adds	r3, #204	; 0xcc
 8011082:	4618      	mov	r0, r3
 8011084:	f006 fb5e 	bl	8017744 <_ZNK8touchgfx8Drawable10invalidateEv>

}
 8011088:	bf00      	nop
 801108a:	3708      	adds	r7, #8
 801108c:	46bd      	mov	sp, r7
 801108e:	bd80      	pop	{r7, pc}
 8011090:	20000014 	.word	0x20000014

08011094 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 8011094:	b480      	push	{r7}
 8011096:	b083      	sub	sp, #12
 8011098:	af00      	add	r7, sp, #0
 801109a:	6078      	str	r0, [r7, #4]
    {
 801109c:	4a04      	ldr	r2, [pc, #16]	; (80110b0 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 801109e:	687b      	ldr	r3, [r7, #4]
 80110a0:	601a      	str	r2, [r3, #0]
    }
 80110a2:	687b      	ldr	r3, [r7, #4]
 80110a4:	4618      	mov	r0, r3
 80110a6:	370c      	adds	r7, #12
 80110a8:	46bd      	mov	sp, r7
 80110aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110ae:	4770      	bx	lr
 80110b0:	0802b6a4 	.word	0x0802b6a4

080110b4 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 80110b4:	b580      	push	{r7, lr}
 80110b6:	b082      	sub	sp, #8
 80110b8:	af00      	add	r7, sp, #0
 80110ba:	6078      	str	r0, [r7, #4]
    }
 80110bc:	6878      	ldr	r0, [r7, #4]
 80110be:	f7ff ffe9 	bl	8011094 <_ZN8touchgfx15TouchControllerD1Ev>
 80110c2:	2104      	movs	r1, #4
 80110c4:	6878      	ldr	r0, [r7, #4]
 80110c6:	f015 ffac 	bl	8027022 <_ZdlPvj>
 80110ca:	687b      	ldr	r3, [r7, #4]
 80110cc:	4618      	mov	r0, r3
 80110ce:	3708      	adds	r7, #8
 80110d0:	46bd      	mov	sp, r7
 80110d2:	bd80      	pop	{r7, pc}

080110d4 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "main.h"

void STM32TouchController::init()
{
 80110d4:	b480      	push	{r7}
 80110d6:	b083      	sub	sp, #12
 80110d8:	af00      	add	r7, sp, #0
 80110da:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 80110dc:	bf00      	nop
 80110de:	370c      	adds	r7, #12
 80110e0:	46bd      	mov	sp, r7
 80110e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110e6:	4770      	bx	lr

080110e8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80110e8:	b580      	push	{r7, lr}
 80110ea:	b084      	sub	sp, #16
 80110ec:	af00      	add	r7, sp, #0
 80110ee:	60f8      	str	r0, [r7, #12]
 80110f0:	60b9      	str	r1, [r7, #8]
 80110f2:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
     return ((bool) Touch_TouchGFXSampleTouch(&x, &y));;
 80110f4:	6879      	ldr	r1, [r7, #4]
 80110f6:	68b8      	ldr	r0, [r7, #8]
 80110f8:	f7f4 fcba 	bl	8005a70 <Touch_TouchGFXSampleTouch>
 80110fc:	4603      	mov	r3, r0
 80110fe:	2b00      	cmp	r3, #0
 8011100:	bf14      	ite	ne
 8011102:	2301      	movne	r3, #1
 8011104:	2300      	moveq	r3, #0
 8011106:	b2db      	uxtb	r3, r3
}
 8011108:	4618      	mov	r0, r3
 801110a:	3710      	adds	r7, #16
 801110c:	46bd      	mov	sp, r7
 801110e:	bd80      	pop	{r7, pc}

08011110 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8011110:	b580      	push	{r7, lr}
 8011112:	b082      	sub	sp, #8
 8011114:	af00      	add	r7, sp, #0
 8011116:	6078      	str	r0, [r7, #4]
 8011118:	4a05      	ldr	r2, [pc, #20]	; (8011130 <_ZN20STM32TouchControllerD1Ev+0x20>)
 801111a:	687b      	ldr	r3, [r7, #4]
 801111c:	601a      	str	r2, [r3, #0]
 801111e:	687b      	ldr	r3, [r7, #4]
 8011120:	4618      	mov	r0, r3
 8011122:	f7ff ffb7 	bl	8011094 <_ZN8touchgfx15TouchControllerD1Ev>
 8011126:	687b      	ldr	r3, [r7, #4]
 8011128:	4618      	mov	r0, r3
 801112a:	3708      	adds	r7, #8
 801112c:	46bd      	mov	sp, r7
 801112e:	bd80      	pop	{r7, pc}
 8011130:	0802b68c 	.word	0x0802b68c

08011134 <_ZN20STM32TouchControllerD0Ev>:
 8011134:	b580      	push	{r7, lr}
 8011136:	b082      	sub	sp, #8
 8011138:	af00      	add	r7, sp, #0
 801113a:	6078      	str	r0, [r7, #4]
 801113c:	6878      	ldr	r0, [r7, #4]
 801113e:	f7ff ffe7 	bl	8011110 <_ZN20STM32TouchControllerD1Ev>
 8011142:	2104      	movs	r1, #4
 8011144:	6878      	ldr	r0, [r7, #4]
 8011146:	f015 ff6c 	bl	8027022 <_ZdlPvj>
 801114a:	687b      	ldr	r3, [r7, #4]
 801114c:	4618      	mov	r0, r3
 801114e:	3708      	adds	r7, #8
 8011150:	46bd      	mov	sp, r7
 8011152:	bd80      	pop	{r7, pc}

08011154 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 8011154:	b480      	push	{r7}
 8011156:	af00      	add	r7, sp, #0

}
 8011158:	bf00      	nop
 801115a:	46bd      	mov	sp, r7
 801115c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011160:	4770      	bx	lr
	...

08011164 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8011164:	b480      	push	{r7}
 8011166:	b083      	sub	sp, #12
 8011168:	af00      	add	r7, sp, #0
 801116a:	4603      	mov	r3, r0
 801116c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 801116e:	79fb      	ldrb	r3, [r7, #7]
 8011170:	2b03      	cmp	r3, #3
 8011172:	d80c      	bhi.n	801118e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8011174:	a201      	add	r2, pc, #4	; (adr r2, 801117c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 8011176:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801117a:	bf00      	nop
 801117c:	0801118d 	.word	0x0801118d
 8011180:	0801118d 	.word	0x0801118d
 8011184:	0801118d 	.word	0x0801118d
 8011188:	0801118d 	.word	0x0801118d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 801118c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 801118e:	bf00      	nop
 8011190:	370c      	adds	r7, #12
 8011192:	46bd      	mov	sp, r7
 8011194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011198:	4770      	bx	lr
 801119a:	bf00      	nop

0801119c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 801119c:	b480      	push	{r7}
 801119e:	b083      	sub	sp, #12
 80111a0:	af00      	add	r7, sp, #0
 80111a2:	4603      	mov	r3, r0
 80111a4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 80111a6:	79fb      	ldrb	r3, [r7, #7]
 80111a8:	2b03      	cmp	r3, #3
 80111aa:	d80c      	bhi.n	80111c6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 80111ac:	a201      	add	r2, pc, #4	; (adr r2, 80111b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 80111ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80111b2:	bf00      	nop
 80111b4:	080111c5 	.word	0x080111c5
 80111b8:	080111c5 	.word	0x080111c5
 80111bc:	080111c5 	.word	0x080111c5
 80111c0:	080111c5 	.word	0x080111c5
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 80111c4:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 80111c6:	bf00      	nop
 80111c8:	370c      	adds	r7, #12
 80111ca:	46bd      	mov	sp, r7
 80111cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111d0:	4770      	bx	lr
 80111d2:	bf00      	nop

080111d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 80111d4:	b480      	push	{r7}
 80111d6:	b083      	sub	sp, #12
 80111d8:	af00      	add	r7, sp, #0
 80111da:	4603      	mov	r3, r0
 80111dc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 80111de:	79fb      	ldrb	r3, [r7, #7]
 80111e0:	2b03      	cmp	r3, #3
 80111e2:	d80c      	bhi.n	80111fe <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 80111e4:	a201      	add	r2, pc, #4	; (adr r2, 80111ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80111e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80111ea:	bf00      	nop
 80111ec:	080111fd 	.word	0x080111fd
 80111f0:	080111fd 	.word	0x080111fd
 80111f4:	080111fd 	.word	0x080111fd
 80111f8:	080111fd 	.word	0x080111fd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 80111fc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 80111fe:	bf00      	nop
 8011200:	370c      	adds	r7, #12
 8011202:	46bd      	mov	sp, r7
 8011204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011208:	4770      	bx	lr
 801120a:	bf00      	nop

0801120c <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 801120c:	b480      	push	{r7}
 801120e:	b083      	sub	sp, #12
 8011210:	af00      	add	r7, sp, #0
 8011212:	6078      	str	r0, [r7, #4]
    {
 8011214:	4a04      	ldr	r2, [pc, #16]	; (8011228 <_ZN8touchgfx3HALD1Ev+0x1c>)
 8011216:	687b      	ldr	r3, [r7, #4]
 8011218:	601a      	str	r2, [r3, #0]
    }
 801121a:	687b      	ldr	r3, [r7, #4]
 801121c:	4618      	mov	r0, r3
 801121e:	370c      	adds	r7, #12
 8011220:	46bd      	mov	sp, r7
 8011222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011226:	4770      	bx	lr
 8011228:	0802badc 	.word	0x0802badc

0801122c <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 801122c:	b580      	push	{r7, lr}
 801122e:	b082      	sub	sp, #8
 8011230:	af00      	add	r7, sp, #0
 8011232:	6078      	str	r0, [r7, #4]
    }
 8011234:	6878      	ldr	r0, [r7, #4]
 8011236:	f7ff ffe9 	bl	801120c <_ZN8touchgfx3HALD1Ev>
 801123a:	217c      	movs	r1, #124	; 0x7c
 801123c:	6878      	ldr	r0, [r7, #4]
 801123e:	f015 fef0 	bl	8027022 <_ZdlPvj>
 8011242:	687b      	ldr	r3, [r7, #4]
 8011244:	4618      	mov	r0, r3
 8011246:	3708      	adds	r7, #8
 8011248:	46bd      	mov	sp, r7
 801124a:	bd80      	pop	{r7, pc}

0801124c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 801124c:	b480      	push	{r7}
 801124e:	b083      	sub	sp, #12
 8011250:	af00      	add	r7, sp, #0
 8011252:	6078      	str	r0, [r7, #4]
 8011254:	460b      	mov	r3, r1
 8011256:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 8011258:	687b      	ldr	r3, [r7, #4]
 801125a:	78fa      	ldrb	r2, [r7, #3]
 801125c:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8011260:	687b      	ldr	r3, [r7, #4]
 8011262:	2201      	movs	r2, #1
 8011264:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 8011268:	bf00      	nop
 801126a:	370c      	adds	r7, #12
 801126c:	46bd      	mov	sp, r7
 801126e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011272:	4770      	bx	lr

08011274 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8011274:	b580      	push	{r7, lr}
 8011276:	b082      	sub	sp, #8
 8011278:	af00      	add	r7, sp, #0
 801127a:	6078      	str	r0, [r7, #4]
 801127c:	460b      	mov	r3, r1
 801127e:	807b      	strh	r3, [r7, #2]
 8011280:	4613      	mov	r3, r2
 8011282:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8011284:	4b0c      	ldr	r3, [pc, #48]	; (80112b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 8011286:	881b      	ldrh	r3, [r3, #0]
 8011288:	887a      	ldrh	r2, [r7, #2]
 801128a:	429a      	cmp	r2, r3
 801128c:	d304      	bcc.n	8011298 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 801128e:	4b0b      	ldr	r3, [pc, #44]	; (80112bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 8011290:	881b      	ldrh	r3, [r3, #0]
 8011292:	883a      	ldrh	r2, [r7, #0]
 8011294:	429a      	cmp	r2, r3
 8011296:	d205      	bcs.n	80112a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 8011298:	4b09      	ldr	r3, [pc, #36]	; (80112c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 801129a:	4a0a      	ldr	r2, [pc, #40]	; (80112c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 801129c:	219e      	movs	r1, #158	; 0x9e
 801129e:	480a      	ldr	r0, [pc, #40]	; (80112c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 80112a0:	f017 fde2 	bl	8028e68 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80112a4:	4a09      	ldr	r2, [pc, #36]	; (80112cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 80112a6:	887b      	ldrh	r3, [r7, #2]
 80112a8:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 80112aa:	4a09      	ldr	r2, [pc, #36]	; (80112d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 80112ac:	883b      	ldrh	r3, [r7, #0]
 80112ae:	8013      	strh	r3, [r2, #0]
    }
 80112b0:	bf00      	nop
 80112b2:	3708      	adds	r7, #8
 80112b4:	46bd      	mov	sp, r7
 80112b6:	bd80      	pop	{r7, pc}
 80112b8:	2002598c 	.word	0x2002598c
 80112bc:	2002598e 	.word	0x2002598e
 80112c0:	0802a5e4 	.word	0x0802a5e4
 80112c4:	0802a648 	.word	0x0802a648
 80112c8:	0802a68c 	.word	0x0802a68c
 80112cc:	20025992 	.word	0x20025992
 80112d0:	20025994 	.word	0x20025994

080112d4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 80112d4:	b580      	push	{r7, lr}
 80112d6:	b082      	sub	sp, #8
 80112d8:	af00      	add	r7, sp, #0
 80112da:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 80112dc:	687b      	ldr	r3, [r7, #4]
 80112de:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 80112e2:	2b00      	cmp	r3, #0
 80112e4:	d009      	beq.n	80112fa <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 80112e6:	687b      	ldr	r3, [r7, #4]
 80112e8:	685a      	ldr	r2, [r3, #4]
 80112ea:	687b      	ldr	r3, [r7, #4]
 80112ec:	685b      	ldr	r3, [r3, #4]
 80112ee:	681b      	ldr	r3, [r3, #0]
 80112f0:	681b      	ldr	r3, [r3, #0]
 80112f2:	4610      	mov	r0, r2
 80112f4:	4798      	blx	r3
 80112f6:	4603      	mov	r3, r0
 80112f8:	e000      	b.n	80112fc <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 80112fa:	2300      	movs	r3, #0
    }
 80112fc:	4618      	mov	r0, r3
 80112fe:	3708      	adds	r7, #8
 8011300:	46bd      	mov	sp, r7
 8011302:	bd80      	pop	{r7, pc}

08011304 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 8011304:	b580      	push	{r7, lr}
 8011306:	b082      	sub	sp, #8
 8011308:	af00      	add	r7, sp, #0
 801130a:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 801130c:	6878      	ldr	r0, [r7, #4]
 801130e:	f002 fd2d 	bl	8013d6c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8011312:	687b      	ldr	r3, [r7, #4]
 8011314:	681b      	ldr	r3, [r3, #0]
 8011316:	33ac      	adds	r3, #172	; 0xac
 8011318:	681b      	ldr	r3, [r3, #0]
 801131a:	6878      	ldr	r0, [r7, #4]
 801131c:	4798      	blx	r3
    }
 801131e:	bf00      	nop
 8011320:	3708      	adds	r7, #8
 8011322:	46bd      	mov	sp, r7
 8011324:	bd80      	pop	{r7, pc}

08011326 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 8011326:	b480      	push	{r7}
 8011328:	b083      	sub	sp, #12
 801132a:	af00      	add	r7, sp, #0
 801132c:	6078      	str	r0, [r7, #4]
 801132e:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 8011330:	2300      	movs	r3, #0
    }
 8011332:	4618      	mov	r0, r3
 8011334:	370c      	adds	r7, #12
 8011336:	46bd      	mov	sp, r7
 8011338:	f85d 7b04 	ldr.w	r7, [sp], #4
 801133c:	4770      	bx	lr
	...

08011340 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8011340:	b580      	push	{r7, lr}
 8011342:	b084      	sub	sp, #16
 8011344:	af00      	add	r7, sp, #0
 8011346:	60f8      	str	r0, [r7, #12]
 8011348:	60b9      	str	r1, [r7, #8]
 801134a:	607a      	str	r2, [r7, #4]
 801134c:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 801134e:	68bb      	ldr	r3, [r7, #8]
 8011350:	2b00      	cmp	r3, #0
 8011352:	d106      	bne.n	8011362 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 8011354:	4b0f      	ldr	r3, [pc, #60]	; (8011394 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 8011356:	4a10      	ldr	r2, [pc, #64]	; (8011398 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 8011358:	f240 21d2 	movw	r1, #722	; 0x2d2
 801135c:	480f      	ldr	r0, [pc, #60]	; (801139c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 801135e:	f017 fd83 	bl	8028e68 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8011362:	68fb      	ldr	r3, [r7, #12]
 8011364:	68ba      	ldr	r2, [r7, #8]
 8011366:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8011368:	68fb      	ldr	r3, [r7, #12]
 801136a:	687a      	ldr	r2, [r7, #4]
 801136c:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 801136e:	687b      	ldr	r3, [r7, #4]
 8011370:	2b00      	cmp	r3, #0
 8011372:	bf14      	ite	ne
 8011374:	2301      	movne	r3, #1
 8011376:	2300      	moveq	r3, #0
 8011378:	b2da      	uxtb	r2, r3
 801137a:	4b09      	ldr	r3, [pc, #36]	; (80113a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 801137c:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 801137e:	68fb      	ldr	r3, [r7, #12]
 8011380:	681b      	ldr	r3, [r3, #0]
 8011382:	338c      	adds	r3, #140	; 0x8c
 8011384:	681b      	ldr	r3, [r3, #0]
 8011386:	6839      	ldr	r1, [r7, #0]
 8011388:	68f8      	ldr	r0, [r7, #12]
 801138a:	4798      	blx	r3
    }
 801138c:	bf00      	nop
 801138e:	3710      	adds	r7, #16
 8011390:	46bd      	mov	sp, r7
 8011392:	bd80      	pop	{r7, pc}
 8011394:	0802a6d0 	.word	0x0802a6d0
 8011398:	0802a708 	.word	0x0802a708
 801139c:	0802a68c 	.word	0x0802a68c
 80113a0:	20025996 	.word	0x20025996

080113a4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 80113a4:	b480      	push	{r7}
 80113a6:	b083      	sub	sp, #12
 80113a8:	af00      	add	r7, sp, #0
 80113aa:	6078      	str	r0, [r7, #4]
 80113ac:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80113ae:	687b      	ldr	r3, [r7, #4]
 80113b0:	683a      	ldr	r2, [r7, #0]
 80113b2:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80113b4:	683b      	ldr	r3, [r7, #0]
 80113b6:	2b00      	cmp	r3, #0
 80113b8:	bf14      	ite	ne
 80113ba:	2301      	movne	r3, #1
 80113bc:	2300      	moveq	r3, #0
 80113be:	b2da      	uxtb	r2, r3
 80113c0:	4b03      	ldr	r3, [pc, #12]	; (80113d0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 80113c2:	701a      	strb	r2, [r3, #0]
    }
 80113c4:	bf00      	nop
 80113c6:	370c      	adds	r7, #12
 80113c8:	46bd      	mov	sp, r7
 80113ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113ce:	4770      	bx	lr
 80113d0:	20025997 	.word	0x20025997

080113d4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 80113d4:	b480      	push	{r7}
 80113d6:	b083      	sub	sp, #12
 80113d8:	af00      	add	r7, sp, #0
 80113da:	6078      	str	r0, [r7, #4]
    {
        return 0;
 80113dc:	2300      	movs	r3, #0
    }
 80113de:	4618      	mov	r0, r3
 80113e0:	370c      	adds	r7, #12
 80113e2:	46bd      	mov	sp, r7
 80113e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113e8:	4770      	bx	lr

080113ea <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 80113ea:	b580      	push	{r7, lr}
 80113ec:	b082      	sub	sp, #8
 80113ee:	af00      	add	r7, sp, #0
 80113f0:	6078      	str	r0, [r7, #4]
 80113f2:	460b      	mov	r3, r1
 80113f4:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 80113f6:	687b      	ldr	r3, [r7, #4]
 80113f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80113fa:	2b00      	cmp	r3, #0
 80113fc:	d004      	beq.n	8011408 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 80113fe:	687b      	ldr	r3, [r7, #4]
 8011400:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011402:	887a      	ldrh	r2, [r7, #2]
 8011404:	4610      	mov	r0, r2
 8011406:	4798      	blx	r3
        }
    }
 8011408:	bf00      	nop
 801140a:	3708      	adds	r7, #8
 801140c:	46bd      	mov	sp, r7
 801140e:	bd80      	pop	{r7, pc}

08011410 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 8011410:	b480      	push	{r7}
 8011412:	b083      	sub	sp, #12
 8011414:	af00      	add	r7, sp, #0
 8011416:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 8011418:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 801141c:	4618      	mov	r0, r3
 801141e:	370c      	adds	r7, #12
 8011420:	46bd      	mov	sp, r7
 8011422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011426:	4770      	bx	lr

08011428 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 8011428:	b580      	push	{r7, lr}
 801142a:	b082      	sub	sp, #8
 801142c:	af00      	add	r7, sp, #0
 801142e:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 8011430:	687b      	ldr	r3, [r7, #4]
 8011432:	685a      	ldr	r2, [r3, #4]
 8011434:	687b      	ldr	r3, [r7, #4]
 8011436:	685b      	ldr	r3, [r3, #4]
 8011438:	681b      	ldr	r3, [r3, #0]
 801143a:	3318      	adds	r3, #24
 801143c:	681b      	ldr	r3, [r3, #0]
 801143e:	4610      	mov	r0, r2
 8011440:	4798      	blx	r3
 8011442:	4603      	mov	r3, r0
    }
 8011444:	4618      	mov	r0, r3
 8011446:	3708      	adds	r7, #8
 8011448:	46bd      	mov	sp, r7
 801144a:	bd80      	pop	{r7, pc}

0801144c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 801144c:	b480      	push	{r7}
 801144e:	b085      	sub	sp, #20
 8011450:	af00      	add	r7, sp, #0
 8011452:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8011454:	687b      	ldr	r3, [r7, #4]
 8011456:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 801145a:	687b      	ldr	r3, [r7, #4]
 801145c:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8011460:	429a      	cmp	r2, r3
 8011462:	d011      	beq.n	8011488 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 8011464:	4b14      	ldr	r3, [pc, #80]	; (80114b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8011466:	781b      	ldrb	r3, [r3, #0]
 8011468:	2b00      	cmp	r3, #0
 801146a:	d11e      	bne.n	80114aa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 801146c:	4b13      	ldr	r3, [pc, #76]	; (80114bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 801146e:	881b      	ldrh	r3, [r3, #0]
 8011470:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8011472:	4b13      	ldr	r3, [pc, #76]	; (80114c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8011474:	881a      	ldrh	r2, [r3, #0]
 8011476:	4b11      	ldr	r3, [pc, #68]	; (80114bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8011478:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 801147a:	4a11      	ldr	r2, [pc, #68]	; (80114c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 801147c:	89bb      	ldrh	r3, [r7, #12]
 801147e:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8011480:	4b0d      	ldr	r3, [pc, #52]	; (80114b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8011482:	2201      	movs	r2, #1
 8011484:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 8011486:	e010      	b.n	80114aa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 8011488:	4b0b      	ldr	r3, [pc, #44]	; (80114b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 801148a:	781b      	ldrb	r3, [r3, #0]
 801148c:	2b00      	cmp	r3, #0
 801148e:	d00c      	beq.n	80114aa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 8011490:	4b0a      	ldr	r3, [pc, #40]	; (80114bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8011492:	881b      	ldrh	r3, [r3, #0]
 8011494:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8011496:	4b0a      	ldr	r3, [pc, #40]	; (80114c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8011498:	881a      	ldrh	r2, [r3, #0]
 801149a:	4b08      	ldr	r3, [pc, #32]	; (80114bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 801149c:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 801149e:	4a08      	ldr	r2, [pc, #32]	; (80114c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 80114a0:	89fb      	ldrh	r3, [r7, #14]
 80114a2:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80114a4:	4b04      	ldr	r3, [pc, #16]	; (80114b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 80114a6:	2200      	movs	r2, #0
 80114a8:	701a      	strb	r2, [r3, #0]
    }
 80114aa:	bf00      	nop
 80114ac:	3714      	adds	r7, #20
 80114ae:	46bd      	mov	sp, r7
 80114b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114b4:	4770      	bx	lr
 80114b6:	bf00      	nop
 80114b8:	20025990 	.word	0x20025990
 80114bc:	2002598e 	.word	0x2002598e
 80114c0:	2002598c 	.word	0x2002598c

080114c4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 80114c4:	b480      	push	{r7}
 80114c6:	b083      	sub	sp, #12
 80114c8:	af00      	add	r7, sp, #0
 80114ca:	6078      	str	r0, [r7, #4]
    {
    }
 80114cc:	bf00      	nop
 80114ce:	370c      	adds	r7, #12
 80114d0:	46bd      	mov	sp, r7
 80114d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114d6:	4770      	bx	lr

080114d8 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 80114d8:	b480      	push	{r7}
 80114da:	b083      	sub	sp, #12
 80114dc:	af00      	add	r7, sp, #0
 80114de:	6078      	str	r0, [r7, #4]
    {
    }
 80114e0:	bf00      	nop
 80114e2:	370c      	adds	r7, #12
 80114e4:	46bd      	mov	sp, r7
 80114e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114ea:	4770      	bx	lr

080114ec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 80114ec:	b580      	push	{r7, lr}
 80114ee:	b082      	sub	sp, #8
 80114f0:	af00      	add	r7, sp, #0
 80114f2:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 80114f4:	687b      	ldr	r3, [r7, #4]
 80114f6:	4618      	mov	r0, r3
 80114f8:	f001 fe96 	bl	8013228 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 80114fc:	bf00      	nop
 80114fe:	3708      	adds	r7, #8
 8011500:	46bd      	mov	sp, r7
 8011502:	bd80      	pop	{r7, pc}

08011504 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 8011504:	b580      	push	{r7, lr}
 8011506:	b082      	sub	sp, #8
 8011508:	af00      	add	r7, sp, #0
 801150a:	6078      	str	r0, [r7, #4]
 801150c:	4a05      	ldr	r2, [pc, #20]	; (8011524 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 801150e:	687b      	ldr	r3, [r7, #4]
 8011510:	601a      	str	r2, [r3, #0]
 8011512:	687b      	ldr	r3, [r7, #4]
 8011514:	4618      	mov	r0, r3
 8011516:	f7ff fe79 	bl	801120c <_ZN8touchgfx3HALD1Ev>
 801151a:	687b      	ldr	r3, [r7, #4]
 801151c:	4618      	mov	r0, r3
 801151e:	3708      	adds	r7, #8
 8011520:	46bd      	mov	sp, r7
 8011522:	bd80      	pop	{r7, pc}
 8011524:	0802b908 	.word	0x0802b908

08011528 <_ZN20TouchGFXGeneratedHALD0Ev>:
 8011528:	b580      	push	{r7, lr}
 801152a:	b082      	sub	sp, #8
 801152c:	af00      	add	r7, sp, #0
 801152e:	6078      	str	r0, [r7, #4]
 8011530:	6878      	ldr	r0, [r7, #4]
 8011532:	f7ff ffe7 	bl	8011504 <_ZN20TouchGFXGeneratedHALD1Ev>
 8011536:	217c      	movs	r1, #124	; 0x7c
 8011538:	6878      	ldr	r0, [r7, #4]
 801153a:	f015 fd72 	bl	8027022 <_ZdlPvj>
 801153e:	687b      	ldr	r3, [r7, #4]
 8011540:	4618      	mov	r0, r3
 8011542:	3708      	adds	r7, #8
 8011544:	46bd      	mov	sp, r7
 8011546:	bd80      	pop	{r7, pc}

08011548 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8011548:	b580      	push	{r7, lr}
 801154a:	b082      	sub	sp, #8
 801154c:	af00      	add	r7, sp, #0
 801154e:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 8011550:	687b      	ldr	r3, [r7, #4]
 8011552:	4618      	mov	r0, r3
 8011554:	f7ff ffca 	bl	80114ec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 8011558:	bf00      	nop
 801155a:	3708      	adds	r7, #8
 801155c:	46bd      	mov	sp, r7
 801155e:	bd80      	pop	{r7, pc}

08011560 <_ZN11TouchGFXHAL10initializeEv>:
 */
#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 8011560:	b580      	push	{r7, lr}
 8011562:	b082      	sub	sp, #8
 8011564:	af00      	add	r7, sp, #0
 8011566:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8011568:	687b      	ldr	r3, [r7, #4]
 801156a:	4618      	mov	r0, r3
 801156c:	f000 ffce 	bl	801250c <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 8011570:	bf00      	nop
 8011572:	3708      	adds	r7, #8
 8011574:	46bd      	mov	sp, r7
 8011576:	bd80      	pop	{r7, pc}

08011578 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 8011578:	b580      	push	{r7, lr}
 801157a:	b082      	sub	sp, #8
 801157c:	af00      	add	r7, sp, #0
 801157e:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8011580:	687b      	ldr	r3, [r7, #4]
 8011582:	4618      	mov	r0, r3
 8011584:	f001 f840 	bl	8012608 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 8011588:	4603      	mov	r3, r0
}
 801158a:	4618      	mov	r0, r3
 801158c:	3708      	adds	r7, #8
 801158e:	46bd      	mov	sp, r7
 8011590:	bd80      	pop	{r7, pc}

08011592 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 8011592:	b580      	push	{r7, lr}
 8011594:	b082      	sub	sp, #8
 8011596:	af00      	add	r7, sp, #0
 8011598:	6078      	str	r0, [r7, #4]
 801159a:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 801159c:	687b      	ldr	r3, [r7, #4]
 801159e:	6839      	ldr	r1, [r7, #0]
 80115a0:	4618      	mov	r0, r3
 80115a2:	f001 f83c 	bl	801261e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 80115a6:	bf00      	nop
 80115a8:	3708      	adds	r7, #8
 80115aa:	46bd      	mov	sp, r7
 80115ac:	bd80      	pop	{r7, pc}

080115ae <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80115ae:	b580      	push	{r7, lr}
 80115b0:	b082      	sub	sp, #8
 80115b2:	af00      	add	r7, sp, #0
 80115b4:	6078      	str	r0, [r7, #4]
 80115b6:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80115b8:	687b      	ldr	r3, [r7, #4]
 80115ba:	6839      	ldr	r1, [r7, #0]
 80115bc:	4618      	mov	r0, r3
 80115be:	f001 f839 	bl	8012634 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 80115c2:	bf00      	nop
 80115c4:	3708      	adds	r7, #8
 80115c6:	46bd      	mov	sp, r7
 80115c8:	bd80      	pop	{r7, pc}

080115ca <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 80115ca:	b580      	push	{r7, lr}
 80115cc:	b084      	sub	sp, #16
 80115ce:	af00      	add	r7, sp, #0
 80115d0:	60f8      	str	r0, [r7, #12]
 80115d2:	60b9      	str	r1, [r7, #8]
 80115d4:	607a      	str	r2, [r7, #4]
 80115d6:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80115d8:	68f8      	ldr	r0, [r7, #12]
 80115da:	683b      	ldr	r3, [r7, #0]
 80115dc:	687a      	ldr	r2, [r7, #4]
 80115de:	68b9      	ldr	r1, [r7, #8]
 80115e0:	f001 f86b 	bl	80126ba <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 80115e4:	4603      	mov	r3, r0
}
 80115e6:	4618      	mov	r0, r3
 80115e8:	3710      	adds	r7, #16
 80115ea:	46bd      	mov	sp, r7
 80115ec:	bd80      	pop	{r7, pc}

080115ee <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 80115ee:	b580      	push	{r7, lr}
 80115f0:	b082      	sub	sp, #8
 80115f2:	af00      	add	r7, sp, #0
 80115f4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80115f6:	687b      	ldr	r3, [r7, #4]
 80115f8:	4618      	mov	r0, r3
 80115fa:	f000 ffb7 	bl	801256c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 80115fe:	bf00      	nop
 8011600:	3708      	adds	r7, #8
 8011602:	46bd      	mov	sp, r7
 8011604:	bd80      	pop	{r7, pc}

08011606 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 8011606:	b580      	push	{r7, lr}
 8011608:	b082      	sub	sp, #8
 801160a:	af00      	add	r7, sp, #0
 801160c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 801160e:	687b      	ldr	r3, [r7, #4]
 8011610:	4618      	mov	r0, r3
 8011612:	f000 ffb5 	bl	8012580 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 8011616:	bf00      	nop
 8011618:	3708      	adds	r7, #8
 801161a:	46bd      	mov	sp, r7
 801161c:	bd80      	pop	{r7, pc}

0801161e <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 801161e:	b580      	push	{r7, lr}
 8011620:	b082      	sub	sp, #8
 8011622:	af00      	add	r7, sp, #0
 8011624:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8011626:	687b      	ldr	r3, [r7, #4]
 8011628:	4618      	mov	r0, r3
 801162a:	f000 ffb3 	bl	8012594 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 801162e:	bf00      	nop
 8011630:	3708      	adds	r7, #8
 8011632:	46bd      	mov	sp, r7
 8011634:	bd80      	pop	{r7, pc}

08011636 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 8011636:	b580      	push	{r7, lr}
 8011638:	b082      	sub	sp, #8
 801163a:	af00      	add	r7, sp, #0
 801163c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 801163e:	687b      	ldr	r3, [r7, #4]
 8011640:	4618      	mov	r0, r3
 8011642:	f000 ffb1 	bl	80125a8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 8011646:	bf00      	nop
 8011648:	3708      	adds	r7, #8
 801164a:	46bd      	mov	sp, r7
 801164c:	bd80      	pop	{r7, pc}

0801164e <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 801164e:	b580      	push	{r7, lr}
 8011650:	b082      	sub	sp, #8
 8011652:	af00      	add	r7, sp, #0
 8011654:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 8011656:	687b      	ldr	r3, [r7, #4]
 8011658:	4618      	mov	r0, r3
 801165a:	f000 ffaf 	bl	80125bc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 801165e:	4603      	mov	r3, r0
}
 8011660:	4618      	mov	r0, r3
 8011662:	3708      	adds	r7, #8
 8011664:	46bd      	mov	sp, r7
 8011666:	bd80      	pop	{r7, pc}

08011668 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 8011668:	b580      	push	{r7, lr}
 801166a:	b082      	sub	sp, #8
 801166c:	af00      	add	r7, sp, #0
 801166e:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 8011670:	687b      	ldr	r3, [r7, #4]
 8011672:	4618      	mov	r0, r3
 8011674:	f000 ffaf 	bl	80125d6 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 8011678:	bf00      	nop
 801167a:	3708      	adds	r7, #8
 801167c:	46bd      	mov	sp, r7
 801167e:	bd80      	pop	{r7, pc}

08011680 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8011680:	b580      	push	{r7, lr}
 8011682:	b082      	sub	sp, #8
 8011684:	af00      	add	r7, sp, #0
 8011686:	6078      	str	r0, [r7, #4]
 8011688:	4a05      	ldr	r2, [pc, #20]	; (80116a0 <_ZN11TouchGFXHALD1Ev+0x20>)
 801168a:	687b      	ldr	r3, [r7, #4]
 801168c:	601a      	str	r2, [r3, #0]
 801168e:	687b      	ldr	r3, [r7, #4]
 8011690:	4618      	mov	r0, r3
 8011692:	f7ff ff37 	bl	8011504 <_ZN20TouchGFXGeneratedHALD1Ev>
 8011696:	687b      	ldr	r3, [r7, #4]
 8011698:	4618      	mov	r0, r3
 801169a:	3708      	adds	r7, #8
 801169c:	46bd      	mov	sp, r7
 801169e:	bd80      	pop	{r7, pc}
 80116a0:	0802b6bc 	.word	0x0802b6bc

080116a4 <_ZN11TouchGFXHALD0Ev>:
 80116a4:	b580      	push	{r7, lr}
 80116a6:	b082      	sub	sp, #8
 80116a8:	af00      	add	r7, sp, #0
 80116aa:	6078      	str	r0, [r7, #4]
 80116ac:	6878      	ldr	r0, [r7, #4]
 80116ae:	f7ff ffe7 	bl	8011680 <_ZN11TouchGFXHALD1Ev>
 80116b2:	217c      	movs	r1, #124	; 0x7c
 80116b4:	6878      	ldr	r0, [r7, #4]
 80116b6:	f015 fcb4 	bl	8027022 <_ZdlPvj>
 80116ba:	687b      	ldr	r3, [r7, #4]
 80116bc:	4618      	mov	r0, r3
 80116be:	3708      	adds	r7, #8
 80116c0:	46bd      	mov	sp, r7
 80116c2:	bd80      	pop	{r7, pc}

080116c4 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 80116c4:	b480      	push	{r7}
 80116c6:	af00      	add	r7, sp, #0
    fb_sem = 0;
 80116c8:	4b05      	ldr	r3, [pc, #20]	; (80116e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 80116ca:	2200      	movs	r2, #0
 80116cc:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 80116ce:	4b05      	ldr	r3, [pc, #20]	; (80116e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 80116d0:	2200      	movs	r2, #0
 80116d2:	601a      	str	r2, [r3, #0]
}
 80116d4:	bf00      	nop
 80116d6:	46bd      	mov	sp, r7
 80116d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80116dc:	4770      	bx	lr
 80116de:	bf00      	nop
 80116e0:	20023de0 	.word	0x20023de0
 80116e4:	20023de4 	.word	0x20023de4

080116e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 80116e8:	b480      	push	{r7}
 80116ea:	af00      	add	r7, sp, #0
    while (fb_sem);
 80116ec:	bf00      	nop
 80116ee:	4b08      	ldr	r3, [pc, #32]	; (8011710 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 80116f0:	681b      	ldr	r3, [r3, #0]
 80116f2:	2b00      	cmp	r3, #0
 80116f4:	bf14      	ite	ne
 80116f6:	2301      	movne	r3, #1
 80116f8:	2300      	moveq	r3, #0
 80116fa:	b2db      	uxtb	r3, r3
 80116fc:	2b00      	cmp	r3, #0
 80116fe:	d1f6      	bne.n	80116ee <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 8011700:	4b03      	ldr	r3, [pc, #12]	; (8011710 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8011702:	2201      	movs	r2, #1
 8011704:	601a      	str	r2, [r3, #0]
}
 8011706:	bf00      	nop
 8011708:	46bd      	mov	sp, r7
 801170a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801170e:	4770      	bx	lr
 8011710:	20023de0 	.word	0x20023de0

08011714 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8011714:	b480      	push	{r7}
 8011716:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8011718:	4b03      	ldr	r3, [pc, #12]	; (8011728 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 801171a:	2200      	movs	r2, #0
 801171c:	601a      	str	r2, [r3, #0]
}
 801171e:	bf00      	nop
 8011720:	46bd      	mov	sp, r7
 8011722:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011726:	4770      	bx	lr
 8011728:	20023de0 	.word	0x20023de0

0801172c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 801172c:	b480      	push	{r7}
 801172e:	af00      	add	r7, sp, #0
    fb_sem = 1;
 8011730:	4b03      	ldr	r3, [pc, #12]	; (8011740 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 8011732:	2201      	movs	r2, #1
 8011734:	601a      	str	r2, [r3, #0]
}
 8011736:	bf00      	nop
 8011738:	46bd      	mov	sp, r7
 801173a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801173e:	4770      	bx	lr
 8011740:	20023de0 	.word	0x20023de0

08011744 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 8011744:	b480      	push	{r7}
 8011746:	af00      	add	r7, sp, #0
    fb_sem = 0;
 8011748:	4b03      	ldr	r3, [pc, #12]	; (8011758 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 801174a:	2200      	movs	r2, #0
 801174c:	601a      	str	r2, [r3, #0]
}
 801174e:	bf00      	nop
 8011750:	46bd      	mov	sp, r7
 8011752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011756:	4770      	bx	lr
 8011758:	20023de0 	.word	0x20023de0

0801175c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 801175c:	b480      	push	{r7}
 801175e:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 8011760:	4b03      	ldr	r3, [pc, #12]	; (8011770 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8011762:	2201      	movs	r2, #1
 8011764:	601a      	str	r2, [r3, #0]
}
 8011766:	bf00      	nop
 8011768:	46bd      	mov	sp, r7
 801176a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801176e:	4770      	bx	lr
 8011770:	20023de4 	.word	0x20023de4

08011774 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 8011774:	b480      	push	{r7}
 8011776:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 8011778:	4b03      	ldr	r3, [pc, #12]	; (8011788 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 801177a:	2200      	movs	r2, #0
 801177c:	601a      	str	r2, [r3, #0]
}
 801177e:	bf00      	nop
 8011780:	46bd      	mov	sp, r7
 8011782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011786:	4770      	bx	lr
 8011788:	20023de4 	.word	0x20023de4

0801178c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 801178c:	b480      	push	{r7}
 801178e:	af00      	add	r7, sp, #0
    return vsync_sem;
 8011790:	4b05      	ldr	r3, [pc, #20]	; (80117a8 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 8011792:	681b      	ldr	r3, [r3, #0]
 8011794:	2b00      	cmp	r3, #0
 8011796:	bf14      	ite	ne
 8011798:	2301      	movne	r3, #1
 801179a:	2300      	moveq	r3, #0
 801179c:	b2db      	uxtb	r3, r3
}
 801179e:	4618      	mov	r0, r3
 80117a0:	46bd      	mov	sp, r7
 80117a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80117a6:	4770      	bx	lr
 80117a8:	20023de4 	.word	0x20023de4

080117ac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 80117ac:	b580      	push	{r7, lr}
 80117ae:	af00      	add	r7, sp, #0
    if (vsync_sem)
 80117b0:	4b0a      	ldr	r3, [pc, #40]	; (80117dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 80117b2:	681b      	ldr	r3, [r3, #0]
 80117b4:	2b00      	cmp	r3, #0
 80117b6:	bf14      	ite	ne
 80117b8:	2301      	movne	r3, #1
 80117ba:	2300      	moveq	r3, #0
 80117bc:	b2db      	uxtb	r3, r3
 80117be:	2b00      	cmp	r3, #0
 80117c0:	d00a      	beq.n	80117d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 80117c2:	4b06      	ldr	r3, [pc, #24]	; (80117dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 80117c4:	2200      	movs	r2, #0
 80117c6:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 80117c8:	f7fd f8ac 	bl	800e924 <_ZN8touchgfx3HAL11getInstanceEv>
 80117cc:	4603      	mov	r3, r0
 80117ce:	681a      	ldr	r2, [r3, #0]
 80117d0:	3270      	adds	r2, #112	; 0x70
 80117d2:	6812      	ldr	r2, [r2, #0]
 80117d4:	4618      	mov	r0, r3
 80117d6:	4790      	blx	r2
    }
}
 80117d8:	bf00      	nop
 80117da:	bd80      	pop	{r7, pc}
 80117dc:	20023de4 	.word	0x20023de4

080117e0 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 80117e0:	b480      	push	{r7}
 80117e2:	b083      	sub	sp, #12
 80117e4:	af00      	add	r7, sp, #0
 80117e6:	6078      	str	r0, [r7, #4]
        : color(0)
 80117e8:	687b      	ldr	r3, [r7, #4]
 80117ea:	2200      	movs	r2, #0
 80117ec:	601a      	str	r2, [r3, #0]
    }
 80117ee:	687b      	ldr	r3, [r7, #4]
 80117f0:	4618      	mov	r0, r3
 80117f2:	370c      	adds	r7, #12
 80117f4:	46bd      	mov	sp, r7
 80117f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80117fa:	4770      	bx	lr

080117fc <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 80117fc:	b480      	push	{r7}
 80117fe:	b083      	sub	sp, #12
 8011800:	af00      	add	r7, sp, #0
 8011802:	6078      	str	r0, [r7, #4]
    {
 8011804:	4a04      	ldr	r2, [pc, #16]	; (8011818 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 8011806:	687b      	ldr	r3, [r7, #4]
 8011808:	601a      	str	r2, [r3, #0]
    }
 801180a:	687b      	ldr	r3, [r7, #4]
 801180c:	4618      	mov	r0, r3
 801180e:	370c      	adds	r7, #12
 8011810:	46bd      	mov	sp, r7
 8011812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011816:	4770      	bx	lr
 8011818:	0802b7e4 	.word	0x0802b7e4

0801181c <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 801181c:	b580      	push	{r7, lr}
 801181e:	b082      	sub	sp, #8
 8011820:	af00      	add	r7, sp, #0
 8011822:	6078      	str	r0, [r7, #4]
    }
 8011824:	6878      	ldr	r0, [r7, #4]
 8011826:	f7ff ffe9 	bl	80117fc <_ZN8touchgfx9DMA_QueueD1Ev>
 801182a:	2104      	movs	r1, #4
 801182c:	6878      	ldr	r0, [r7, #4]
 801182e:	f015 fbf8 	bl	8027022 <_ZdlPvj>
 8011832:	687b      	ldr	r3, [r7, #4]
 8011834:	4618      	mov	r0, r3
 8011836:	3708      	adds	r7, #8
 8011838:	46bd      	mov	sp, r7
 801183a:	bd80      	pop	{r7, pc}

0801183c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 801183c:	b480      	push	{r7}
 801183e:	b083      	sub	sp, #12
 8011840:	af00      	add	r7, sp, #0
 8011842:	6078      	str	r0, [r7, #4]
    {
    }
 8011844:	bf00      	nop
 8011846:	370c      	adds	r7, #12
 8011848:	46bd      	mov	sp, r7
 801184a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801184e:	4770      	bx	lr

08011850 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 8011850:	b480      	push	{r7}
 8011852:	b083      	sub	sp, #12
 8011854:	af00      	add	r7, sp, #0
 8011856:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 8011858:	2300      	movs	r3, #0
    }
 801185a:	4618      	mov	r0, r3
 801185c:	370c      	adds	r7, #12
 801185e:	46bd      	mov	sp, r7
 8011860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011864:	4770      	bx	lr
	...

08011868 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 8011868:	b480      	push	{r7}
 801186a:	b083      	sub	sp, #12
 801186c:	af00      	add	r7, sp, #0
 801186e:	6078      	str	r0, [r7, #4]
    {
 8011870:	4a04      	ldr	r2, [pc, #16]	; (8011884 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 8011872:	687b      	ldr	r3, [r7, #4]
 8011874:	601a      	str	r2, [r3, #0]
    }
 8011876:	687b      	ldr	r3, [r7, #4]
 8011878:	4618      	mov	r0, r3
 801187a:	370c      	adds	r7, #12
 801187c:	46bd      	mov	sp, r7
 801187e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011882:	4770      	bx	lr
 8011884:	0802bbb4 	.word	0x0802bbb4

08011888 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 8011888:	b580      	push	{r7, lr}
 801188a:	b082      	sub	sp, #8
 801188c:	af00      	add	r7, sp, #0
 801188e:	6078      	str	r0, [r7, #4]
    }
 8011890:	6878      	ldr	r0, [r7, #4]
 8011892:	f7ff ffe9 	bl	8011868 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8011896:	210c      	movs	r1, #12
 8011898:	6878      	ldr	r0, [r7, #4]
 801189a:	f015 fbc2 	bl	8027022 <_ZdlPvj>
 801189e:	687b      	ldr	r3, [r7, #4]
 80118a0:	4618      	mov	r0, r3
 80118a2:	3708      	adds	r7, #8
 80118a4:	46bd      	mov	sp, r7
 80118a6:	bd80      	pop	{r7, pc}

080118a8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 80118a8:	b480      	push	{r7}
 80118aa:	b083      	sub	sp, #12
 80118ac:	af00      	add	r7, sp, #0
 80118ae:	6078      	str	r0, [r7, #4]
 80118b0:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80118b2:	4a09      	ldr	r2, [pc, #36]	; (80118d8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 80118b4:	687b      	ldr	r3, [r7, #4]
 80118b6:	601a      	str	r2, [r3, #0]
 80118b8:	687b      	ldr	r3, [r7, #4]
 80118ba:	683a      	ldr	r2, [r7, #0]
 80118bc:	605a      	str	r2, [r3, #4]
 80118be:	687b      	ldr	r3, [r7, #4]
 80118c0:	2200      	movs	r2, #0
 80118c2:	721a      	strb	r2, [r3, #8]
 80118c4:	687b      	ldr	r3, [r7, #4]
 80118c6:	2200      	movs	r2, #0
 80118c8:	725a      	strb	r2, [r3, #9]
    {
    }
 80118ca:	687b      	ldr	r3, [r7, #4]
 80118cc:	4618      	mov	r0, r3
 80118ce:	370c      	adds	r7, #12
 80118d0:	46bd      	mov	sp, r7
 80118d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118d6:	4770      	bx	lr
 80118d8:	0802bbb4 	.word	0x0802bbb4

080118dc <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 80118dc:	b480      	push	{r7}
 80118de:	b083      	sub	sp, #12
 80118e0:	af00      	add	r7, sp, #0
 80118e2:	6078      	str	r0, [r7, #4]
    {
    }
 80118e4:	bf00      	nop
 80118e6:	370c      	adds	r7, #12
 80118e8:	46bd      	mov	sp, r7
 80118ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118ee:	4770      	bx	lr

080118f0 <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 80118f0:	b480      	push	{r7}
 80118f2:	b083      	sub	sp, #12
 80118f4:	af00      	add	r7, sp, #0
 80118f6:	6078      	str	r0, [r7, #4]
    {
    }
 80118f8:	bf00      	nop
 80118fa:	370c      	adds	r7, #12
 80118fc:	46bd      	mov	sp, r7
 80118fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011902:	4770      	bx	lr

08011904 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 8011904:	b580      	push	{r7, lr}
 8011906:	b082      	sub	sp, #8
 8011908:	af00      	add	r7, sp, #0
 801190a:	6078      	str	r0, [r7, #4]
 801190c:	687b      	ldr	r3, [r7, #4]
 801190e:	330c      	adds	r3, #12
 8011910:	4618      	mov	r0, r3
 8011912:	f7ff ff65 	bl	80117e0 <_ZN8touchgfx9colortypeC1Ev>
 8011916:	687b      	ldr	r3, [r7, #4]
 8011918:	4618      	mov	r0, r3
 801191a:	3708      	adds	r7, #8
 801191c:	46bd      	mov	sp, r7
 801191e:	bd80      	pop	{r7, pc}

08011920 <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 8011920:	b580      	push	{r7, lr}
 8011922:	b082      	sub	sp, #8
 8011924:	af00      	add	r7, sp, #0
 8011926:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 8011928:	687a      	ldr	r2, [r7, #4]
 801192a:	687b      	ldr	r3, [r7, #4]
 801192c:	330c      	adds	r3, #12
 801192e:	4619      	mov	r1, r3
 8011930:	4610      	mov	r0, r2
 8011932:	f7ff ffb9 	bl	80118a8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 8011936:	4a0b      	ldr	r2, [pc, #44]	; (8011964 <_ZN8STM32DMAC1Ev+0x44>)
 8011938:	687b      	ldr	r3, [r7, #4]
 801193a:	601a      	str	r2, [r3, #0]
 801193c:	687b      	ldr	r3, [r7, #4]
 801193e:	f103 000c 	add.w	r0, r3, #12
 8011942:	687b      	ldr	r3, [r7, #4]
 8011944:	3320      	adds	r3, #32
 8011946:	2201      	movs	r2, #1
 8011948:	4619      	mov	r1, r3
 801194a:	f002 fb49 	bl	8013fe0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 801194e:	687b      	ldr	r3, [r7, #4]
 8011950:	3320      	adds	r3, #32
 8011952:	4618      	mov	r0, r3
 8011954:	f7ff ffd6 	bl	8011904 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 8011958:	687b      	ldr	r3, [r7, #4]
 801195a:	4618      	mov	r0, r3
 801195c:	3708      	adds	r7, #8
 801195e:	46bd      	mov	sp, r7
 8011960:	bd80      	pop	{r7, pc}
 8011962:	bf00      	nop
 8011964:	0802b794 	.word	0x0802b794

08011968 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 8011968:	b480      	push	{r7}
 801196a:	b083      	sub	sp, #12
 801196c:	af00      	add	r7, sp, #0
 801196e:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 8011970:	2300      	movs	r3, #0
}
 8011972:	4618      	mov	r0, r3
 8011974:	370c      	adds	r7, #12
 8011976:	46bd      	mov	sp, r7
 8011978:	f85d 7b04 	ldr.w	r7, [sp], #4
 801197c:	4770      	bx	lr
	...

08011980 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8011980:	b580      	push	{r7, lr}
 8011982:	b082      	sub	sp, #8
 8011984:	af00      	add	r7, sp, #0
 8011986:	6078      	str	r0, [r7, #4]
 8011988:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 801198a:	4b03      	ldr	r3, [pc, #12]	; (8011998 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 801198c:	4a03      	ldr	r2, [pc, #12]	; (801199c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 801198e:	2122      	movs	r1, #34	; 0x22
 8011990:	4803      	ldr	r0, [pc, #12]	; (80119a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 8011992:	f017 fa69 	bl	8028e68 <__assert_func>
 8011996:	bf00      	nop
 8011998:	0802a758 	.word	0x0802a758
 801199c:	0802a77c 	.word	0x0802a77c
 80119a0:	0802a7bc 	.word	0x0802a7bc

080119a4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80119a4:	b580      	push	{r7, lr}
 80119a6:	b082      	sub	sp, #8
 80119a8:	af00      	add	r7, sp, #0
 80119aa:	6078      	str	r0, [r7, #4]
 80119ac:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 80119ae:	4b03      	ldr	r3, [pc, #12]	; (80119bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80119b0:	4a03      	ldr	r2, [pc, #12]	; (80119c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 80119b2:	2127      	movs	r1, #39	; 0x27
 80119b4:	4803      	ldr	r0, [pc, #12]	; (80119c4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 80119b6:	f017 fa57 	bl	8028e68 <__assert_func>
 80119ba:	bf00      	nop
 80119bc:	0802a758 	.word	0x0802a758
 80119c0:	0802a7e8 	.word	0x0802a7e8
 80119c4:	0802a7bc 	.word	0x0802a7bc

080119c8 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80119c8:	b580      	push	{r7, lr}
 80119ca:	b082      	sub	sp, #8
 80119cc:	af00      	add	r7, sp, #0
 80119ce:	6078      	str	r0, [r7, #4]
 80119d0:	4a08      	ldr	r2, [pc, #32]	; (80119f4 <_ZN8STM32DMAD1Ev+0x2c>)
 80119d2:	687b      	ldr	r3, [r7, #4]
 80119d4:	601a      	str	r2, [r3, #0]
 80119d6:	687b      	ldr	r3, [r7, #4]
 80119d8:	330c      	adds	r3, #12
 80119da:	4618      	mov	r0, r3
 80119dc:	f000 f81c 	bl	8011a18 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80119e0:	687b      	ldr	r3, [r7, #4]
 80119e2:	4618      	mov	r0, r3
 80119e4:	f7ff ff40 	bl	8011868 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 80119e8:	687b      	ldr	r3, [r7, #4]
 80119ea:	4618      	mov	r0, r3
 80119ec:	3708      	adds	r7, #8
 80119ee:	46bd      	mov	sp, r7
 80119f0:	bd80      	pop	{r7, pc}
 80119f2:	bf00      	nop
 80119f4:	0802b794 	.word	0x0802b794

080119f8 <_ZN8STM32DMAD0Ev>:
 80119f8:	b580      	push	{r7, lr}
 80119fa:	b082      	sub	sp, #8
 80119fc:	af00      	add	r7, sp, #0
 80119fe:	6078      	str	r0, [r7, #4]
 8011a00:	6878      	ldr	r0, [r7, #4]
 8011a02:	f7ff ffe1 	bl	80119c8 <_ZN8STM32DMAD1Ev>
 8011a06:	2144      	movs	r1, #68	; 0x44
 8011a08:	6878      	ldr	r0, [r7, #4]
 8011a0a:	f015 fb0a 	bl	8027022 <_ZdlPvj>
 8011a0e:	687b      	ldr	r3, [r7, #4]
 8011a10:	4618      	mov	r0, r3
 8011a12:	3708      	adds	r7, #8
 8011a14:	46bd      	mov	sp, r7
 8011a16:	bd80      	pop	{r7, pc}

08011a18 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 8011a18:	b580      	push	{r7, lr}
 8011a1a:	b082      	sub	sp, #8
 8011a1c:	af00      	add	r7, sp, #0
 8011a1e:	6078      	str	r0, [r7, #4]
 8011a20:	4a05      	ldr	r2, [pc, #20]	; (8011a38 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 8011a22:	687b      	ldr	r3, [r7, #4]
 8011a24:	601a      	str	r2, [r3, #0]
 8011a26:	687b      	ldr	r3, [r7, #4]
 8011a28:	4618      	mov	r0, r3
 8011a2a:	f7ff fee7 	bl	80117fc <_ZN8touchgfx9DMA_QueueD1Ev>
 8011a2e:	687b      	ldr	r3, [r7, #4]
 8011a30:	4618      	mov	r0, r3
 8011a32:	3708      	adds	r7, #8
 8011a34:	46bd      	mov	sp, r7
 8011a36:	bd80      	pop	{r7, pc}
 8011a38:	0802bc04 	.word	0x0802bc04

08011a3c <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011a3c:	b580      	push	{r7, lr}
 8011a3e:	b082      	sub	sp, #8
 8011a40:	af00      	add	r7, sp, #0
 8011a42:	6078      	str	r0, [r7, #4]
 8011a44:	6878      	ldr	r0, [r7, #4]
 8011a46:	f7ff ffe7 	bl	8011a18 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8011a4a:	2114      	movs	r1, #20
 8011a4c:	6878      	ldr	r0, [r7, #4]
 8011a4e:	f015 fae8 	bl	8027022 <_ZdlPvj>
 8011a52:	687b      	ldr	r3, [r7, #4]
 8011a54:	4618      	mov	r0, r3
 8011a56:	3708      	adds	r7, #8
 8011a58:	46bd      	mov	sp, r7
 8011a5a:	bd80      	pop	{r7, pc}

08011a5c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 8011a5c:	b480      	push	{r7}
 8011a5e:	b083      	sub	sp, #12
 8011a60:	af00      	add	r7, sp, #0
 8011a62:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 8011a64:	4a04      	ldr	r2, [pc, #16]	; (8011a78 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 8011a66:	687b      	ldr	r3, [r7, #4]
 8011a68:	6013      	str	r3, [r2, #0]
    }
 8011a6a:	bf00      	nop
 8011a6c:	370c      	adds	r7, #12
 8011a6e:	46bd      	mov	sp, r7
 8011a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011a74:	4770      	bx	lr
 8011a76:	bf00      	nop
 8011a78:	200259f4 	.word	0x200259f4

08011a7c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8011a7c:	b480      	push	{r7}
 8011a7e:	b085      	sub	sp, #20
 8011a80:	af00      	add	r7, sp, #0
 8011a82:	60f8      	str	r0, [r7, #12]
 8011a84:	60b9      	str	r1, [r7, #8]
 8011a86:	607a      	str	r2, [r7, #4]
 8011a88:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8011a8a:	4a0b      	ldr	r2, [pc, #44]	; (8011ab8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8011a8c:	68fb      	ldr	r3, [r7, #12]
 8011a8e:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 8011a90:	68fb      	ldr	r3, [r7, #12]
 8011a92:	68ba      	ldr	r2, [r7, #8]
 8011a94:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 8011a96:	68fb      	ldr	r3, [r7, #12]
 8011a98:	687a      	ldr	r2, [r7, #4]
 8011a9a:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 8011a9c:	68fb      	ldr	r3, [r7, #12]
 8011a9e:	683a      	ldr	r2, [r7, #0]
 8011aa0:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 8011aa2:	68fb      	ldr	r3, [r7, #12]
 8011aa4:	69ba      	ldr	r2, [r7, #24]
 8011aa6:	611a      	str	r2, [r3, #16]
    {
    }
 8011aa8:	68fb      	ldr	r3, [r7, #12]
 8011aaa:	4618      	mov	r0, r3
 8011aac:	3714      	adds	r7, #20
 8011aae:	46bd      	mov	sp, r7
 8011ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ab4:	4770      	bx	lr
 8011ab6:	bf00      	nop
 8011ab8:	0802b8cc 	.word	0x0802b8cc

08011abc <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8011abc:	b480      	push	{r7}
 8011abe:	b083      	sub	sp, #12
 8011ac0:	af00      	add	r7, sp, #0
 8011ac2:	6078      	str	r0, [r7, #4]
    {
 8011ac4:	4a04      	ldr	r2, [pc, #16]	; (8011ad8 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8011ac6:	687b      	ldr	r3, [r7, #4]
 8011ac8:	601a      	str	r2, [r3, #0]
    }
 8011aca:	687b      	ldr	r3, [r7, #4]
 8011acc:	4618      	mov	r0, r3
 8011ace:	370c      	adds	r7, #12
 8011ad0:	46bd      	mov	sp, r7
 8011ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ad6:	4770      	bx	lr
 8011ad8:	0802b8cc 	.word	0x0802b8cc

08011adc <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8011adc:	b580      	push	{r7, lr}
 8011ade:	b082      	sub	sp, #8
 8011ae0:	af00      	add	r7, sp, #0
 8011ae2:	6078      	str	r0, [r7, #4]
    }
 8011ae4:	6878      	ldr	r0, [r7, #4]
 8011ae6:	f7ff ffe9 	bl	8011abc <_ZN8touchgfx7MVPHeapD1Ev>
 8011aea:	2114      	movs	r1, #20
 8011aec:	6878      	ldr	r0, [r7, #4]
 8011aee:	f015 fa98 	bl	8027022 <_ZdlPvj>
 8011af2:	687b      	ldr	r3, [r7, #4]
 8011af4:	4618      	mov	r0, r3
 8011af6:	3708      	adds	r7, #8
 8011af8:	46bd      	mov	sp, r7
 8011afa:	bd80      	pop	{r7, pc}

08011afc <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 8011afc:	b480      	push	{r7}
 8011afe:	b083      	sub	sp, #12
 8011b00:	af00      	add	r7, sp, #0
 8011b02:	6078      	str	r0, [r7, #4]
    {
 8011b04:	4a04      	ldr	r2, [pc, #16]	; (8011b18 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 8011b06:	687b      	ldr	r3, [r7, #4]
 8011b08:	601a      	str	r2, [r3, #0]
    }
 8011b0a:	687b      	ldr	r3, [r7, #4]
 8011b0c:	4618      	mov	r0, r3
 8011b0e:	370c      	adds	r7, #12
 8011b10:	46bd      	mov	sp, r7
 8011b12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011b16:	4770      	bx	lr
 8011b18:	0802bf68 	.word	0x0802bf68

08011b1c <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 8011b1c:	b580      	push	{r7, lr}
 8011b1e:	b082      	sub	sp, #8
 8011b20:	af00      	add	r7, sp, #0
 8011b22:	6078      	str	r0, [r7, #4]
    }
 8011b24:	6878      	ldr	r0, [r7, #4]
 8011b26:	f7ff ffe9 	bl	8011afc <_ZN8touchgfx3LCDD1Ev>
 8011b2a:	2108      	movs	r1, #8
 8011b2c:	6878      	ldr	r0, [r7, #4]
 8011b2e:	f015 fa78 	bl	8027022 <_ZdlPvj>
 8011b32:	687b      	ldr	r3, [r7, #4]
 8011b34:	4618      	mov	r0, r3
 8011b36:	3708      	adds	r7, #8
 8011b38:	46bd      	mov	sp, r7
 8011b3a:	bd80      	pop	{r7, pc}

08011b3c <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 8011b3c:	b480      	push	{r7}
 8011b3e:	b083      	sub	sp, #12
 8011b40:	af00      	add	r7, sp, #0
 8011b42:	6078      	str	r0, [r7, #4]
            : startX(0),
 8011b44:	687b      	ldr	r3, [r7, #4]
 8011b46:	2200      	movs	r2, #0
 8011b48:	801a      	strh	r2, [r3, #0]
              startY(0),
 8011b4a:	687b      	ldr	r3, [r7, #4]
 8011b4c:	2200      	movs	r2, #0
 8011b4e:	805a      	strh	r2, [r3, #2]
              downX(0),
 8011b50:	687b      	ldr	r3, [r7, #4]
 8011b52:	2200      	movs	r2, #0
 8011b54:	809a      	strh	r2, [r3, #4]
              downY(0),
 8011b56:	687b      	ldr	r3, [r7, #4]
 8011b58:	2200      	movs	r2, #0
 8011b5a:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 8011b5c:	687b      	ldr	r3, [r7, #4]
 8011b5e:	2200      	movs	r2, #0
 8011b60:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 8011b62:	687b      	ldr	r3, [r7, #4]
 8011b64:	2200      	movs	r2, #0
 8011b66:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 8011b68:	687b      	ldr	r3, [r7, #4]
 8011b6a:	2200      	movs	r2, #0
 8011b6c:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 8011b6e:	687b      	ldr	r3, [r7, #4]
 8011b70:	2200      	movs	r2, #0
 8011b72:	739a      	strb	r2, [r3, #14]
        {
        }
 8011b74:	687b      	ldr	r3, [r7, #4]
 8011b76:	4618      	mov	r0, r3
 8011b78:	370c      	adds	r7, #12
 8011b7a:	46bd      	mov	sp, r7
 8011b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011b80:	4770      	bx	lr

08011b82 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 8011b82:	b580      	push	{r7, lr}
 8011b84:	b082      	sub	sp, #8
 8011b86:	af00      	add	r7, sp, #0
 8011b88:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 8011b8a:	687b      	ldr	r3, [r7, #4]
 8011b8c:	4618      	mov	r0, r3
 8011b8e:	f7ff ffd5 	bl	8011b3c <_ZN8touchgfx8Gestures9DragStateC1Ev>
 8011b92:	687b      	ldr	r3, [r7, #4]
 8011b94:	2200      	movs	r2, #0
 8011b96:	611a      	str	r2, [r3, #16]
 8011b98:	687b      	ldr	r3, [r7, #4]
 8011b9a:	2200      	movs	r2, #0
 8011b9c:	829a      	strh	r2, [r3, #20]
    {
    }
 8011b9e:	687b      	ldr	r3, [r7, #4]
 8011ba0:	4618      	mov	r0, r3
 8011ba2:	3708      	adds	r7, #8
 8011ba4:	46bd      	mov	sp, r7
 8011ba6:	bd80      	pop	{r7, pc}

08011ba8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8011ba8:	b580      	push	{r7, lr}
 8011baa:	b084      	sub	sp, #16
 8011bac:	af00      	add	r7, sp, #0
 8011bae:	60f8      	str	r0, [r7, #12]
 8011bb0:	60b9      	str	r1, [r7, #8]
 8011bb2:	607a      	str	r2, [r7, #4]
 8011bb4:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 8011bb6:	4a55      	ldr	r2, [pc, #340]	; (8011d0c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 8011bb8:	68fb      	ldr	r3, [r7, #12]
 8011bba:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 8011bbc:	68fb      	ldr	r3, [r7, #12]
 8011bbe:	68ba      	ldr	r2, [r7, #8]
 8011bc0:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 8011bc2:	68fb      	ldr	r3, [r7, #12]
 8011bc4:	687a      	ldr	r2, [r7, #4]
 8011bc6:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 8011bc8:	68fb      	ldr	r3, [r7, #12]
 8011bca:	683a      	ldr	r2, [r7, #0]
 8011bcc:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 8011bce:	68fb      	ldr	r3, [r7, #12]
 8011bd0:	2200      	movs	r2, #0
 8011bd2:	611a      	str	r2, [r3, #16]
          buttonController(0),
 8011bd4:	68fb      	ldr	r3, [r7, #12]
 8011bd6:	2200      	movs	r2, #0
 8011bd8:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 8011bda:	68fb      	ldr	r3, [r7, #12]
 8011bdc:	2200      	movs	r2, #0
 8011bde:	619a      	str	r2, [r3, #24]
          gestures(),
 8011be0:	68fb      	ldr	r3, [r7, #12]
 8011be2:	331c      	adds	r3, #28
 8011be4:	4618      	mov	r0, r3
 8011be6:	f7ff ffcc 	bl	8011b82 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 8011bea:	68fb      	ldr	r3, [r7, #12]
 8011bec:	2200      	movs	r2, #0
 8011bee:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 8011bf2:	68fb      	ldr	r3, [r7, #12]
 8011bf4:	2200      	movs	r2, #0
 8011bf6:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 8011bf8:	68fb      	ldr	r3, [r7, #12]
 8011bfa:	2200      	movs	r2, #0
 8011bfc:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 8011bfe:	68fb      	ldr	r3, [r7, #12]
 8011c00:	2200      	movs	r2, #0
 8011c02:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 8011c04:	68fb      	ldr	r3, [r7, #12]
 8011c06:	2200      	movs	r2, #0
 8011c08:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8011c0a:	68fb      	ldr	r3, [r7, #12]
 8011c0c:	2200      	movs	r2, #0
 8011c0e:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 8011c12:	68fb      	ldr	r3, [r7, #12]
 8011c14:	2201      	movs	r2, #1
 8011c16:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 8011c1a:	68fb      	ldr	r3, [r7, #12]
 8011c1c:	2200      	movs	r2, #0
 8011c1e:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 8011c22:	68fb      	ldr	r3, [r7, #12]
 8011c24:	2200      	movs	r2, #0
 8011c26:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 8011c2a:	68fb      	ldr	r3, [r7, #12]
 8011c2c:	2200      	movs	r2, #0
 8011c2e:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 8011c30:	68fb      	ldr	r3, [r7, #12]
 8011c32:	3350      	adds	r3, #80	; 0x50
 8011c34:	4618      	mov	r0, r3
 8011c36:	f7fd fb0e 	bl	800f256 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 8011c3a:	68fb      	ldr	r3, [r7, #12]
 8011c3c:	2200      	movs	r2, #0
 8011c3e:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 8011c42:	68fb      	ldr	r3, [r7, #12]
 8011c44:	2200      	movs	r2, #0
 8011c46:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 8011c48:	68fb      	ldr	r3, [r7, #12]
 8011c4a:	2200      	movs	r2, #0
 8011c4c:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 8011c4e:	68fb      	ldr	r3, [r7, #12]
 8011c50:	2200      	movs	r2, #0
 8011c52:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 8011c54:	68fb      	ldr	r3, [r7, #12]
 8011c56:	2201      	movs	r2, #1
 8011c58:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 8011c5c:	68fb      	ldr	r3, [r7, #12]
 8011c5e:	2200      	movs	r2, #0
 8011c60:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 8011c64:	68fb      	ldr	r3, [r7, #12]
 8011c66:	2200      	movs	r2, #0
 8011c68:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 8011c6c:	68fb      	ldr	r3, [r7, #12]
 8011c6e:	2201      	movs	r2, #1
 8011c70:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 8011c74:	68fb      	ldr	r3, [r7, #12]
 8011c76:	2200      	movs	r2, #0
 8011c78:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 8011c7c:	68fb      	ldr	r3, [r7, #12]
 8011c7e:	2200      	movs	r2, #0
 8011c80:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 8011c84:	68fb      	ldr	r3, [r7, #12]
 8011c86:	2200      	movs	r2, #0
 8011c88:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 8011c8c:	68fb      	ldr	r3, [r7, #12]
 8011c8e:	2200      	movs	r2, #0
 8011c90:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 8011c94:	68fb      	ldr	r3, [r7, #12]
 8011c96:	2200      	movs	r2, #0
 8011c98:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 8011c9c:	68fb      	ldr	r3, [r7, #12]
 8011c9e:	2200      	movs	r2, #0
 8011ca0:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8011ca2:	68fb      	ldr	r3, [r7, #12]
 8011ca4:	2200      	movs	r2, #0
 8011ca6:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 8011caa:	68fb      	ldr	r3, [r7, #12]
 8011cac:	2200      	movs	r2, #0
 8011cae:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 8011cb2:	68fb      	ldr	r3, [r7, #12]
 8011cb4:	2201      	movs	r2, #1
 8011cb6:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 8011cba:	68fb      	ldr	r3, [r7, #12]
 8011cbc:	2201      	movs	r2, #1
 8011cbe:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 8011cc2:	4a13      	ldr	r2, [pc, #76]	; (8011d10 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 8011cc4:	68fb      	ldr	r3, [r7, #12]
 8011cc6:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8011cc8:	4a12      	ldr	r2, [pc, #72]	; (8011d14 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8011cca:	8b3b      	ldrh	r3, [r7, #24]
 8011ccc:	8013      	strh	r3, [r2, #0]
 8011cce:	4b11      	ldr	r3, [pc, #68]	; (8011d14 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8011cd0:	881a      	ldrh	r2, [r3, #0]
 8011cd2:	4b11      	ldr	r3, [pc, #68]	; (8011d18 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 8011cd4:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8011cd6:	4a11      	ldr	r2, [pc, #68]	; (8011d1c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8011cd8:	8bbb      	ldrh	r3, [r7, #28]
 8011cda:	8013      	strh	r3, [r2, #0]
 8011cdc:	4b0f      	ldr	r3, [pc, #60]	; (8011d1c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8011cde:	881a      	ldrh	r2, [r3, #0]
 8011ce0:	4b0f      	ldr	r3, [pc, #60]	; (8011d20 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 8011ce2:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 8011ce4:	4b0f      	ldr	r3, [pc, #60]	; (8011d24 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 8011ce6:	2200      	movs	r2, #0
 8011ce8:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8011cea:	8b3a      	ldrh	r2, [r7, #24]
 8011cec:	8bbb      	ldrh	r3, [r7, #28]
 8011cee:	429a      	cmp	r2, r3
 8011cf0:	bf34      	ite	cc
 8011cf2:	2301      	movcc	r3, #1
 8011cf4:	2300      	movcs	r3, #0
 8011cf6:	b2db      	uxtb	r3, r3
 8011cf8:	461a      	mov	r2, r3
 8011cfa:	68fb      	ldr	r3, [r7, #12]
 8011cfc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 8011d00:	68fb      	ldr	r3, [r7, #12]
 8011d02:	4618      	mov	r0, r3
 8011d04:	3710      	adds	r7, #16
 8011d06:	46bd      	mov	sp, r7
 8011d08:	bd80      	pop	{r7, pc}
 8011d0a:	bf00      	nop
 8011d0c:	0802badc 	.word	0x0802badc
 8011d10:	20025998 	.word	0x20025998
 8011d14:	2002598c 	.word	0x2002598c
 8011d18:	20025992 	.word	0x20025992
 8011d1c:	2002598e 	.word	0x2002598e
 8011d20:	20025994 	.word	0x20025994
 8011d24:	20025990 	.word	0x20025990

08011d28 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 8011d28:	b580      	push	{r7, lr}
 8011d2a:	b082      	sub	sp, #8
 8011d2c:	af00      	add	r7, sp, #0
 8011d2e:	6078      	str	r0, [r7, #4]
 8011d30:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 8011d32:	683b      	ldr	r3, [r7, #0]
 8011d34:	4618      	mov	r0, r3
 8011d36:	f7fc fff1 	bl	800ed1c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 8011d3a:	bf00      	nop
 8011d3c:	3708      	adds	r7, #8
 8011d3e:	46bd      	mov	sp, r7
 8011d40:	bd80      	pop	{r7, pc}
	...

08011d44 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 8011d44:	b580      	push	{r7, lr}
 8011d46:	b086      	sub	sp, #24
 8011d48:	af02      	add	r7, sp, #8
 8011d4a:	60f8      	str	r0, [r7, #12]
 8011d4c:	60b9      	str	r1, [r7, #8]
 8011d4e:	607a      	str	r2, [r7, #4]
 8011d50:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 8011d52:	68f8      	ldr	r0, [r7, #12]
 8011d54:	69bb      	ldr	r3, [r7, #24]
 8011d56:	9300      	str	r3, [sp, #0]
 8011d58:	683b      	ldr	r3, [r7, #0]
 8011d5a:	687a      	ldr	r2, [r7, #4]
 8011d5c:	68b9      	ldr	r1, [r7, #8]
 8011d5e:	f7ff fe8d 	bl	8011a7c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 8011d62:	4a04      	ldr	r2, [pc, #16]	; (8011d74 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8011d64:	68fb      	ldr	r3, [r7, #12]
 8011d66:	601a      	str	r2, [r3, #0]
    {

    }
 8011d68:	68fb      	ldr	r3, [r7, #12]
 8011d6a:	4618      	mov	r0, r3
 8011d6c:	3710      	adds	r7, #16
 8011d6e:	46bd      	mov	sp, r7
 8011d70:	bd80      	pop	{r7, pc}
 8011d72:	bf00      	nop
 8011d74:	0802b8b8 	.word	0x0802b8b8

08011d78 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8011d78:	b580      	push	{r7, lr}
 8011d7a:	af00      	add	r7, sp, #0
 8011d7c:	4801      	ldr	r0, [pc, #4]	; (8011d84 <__tcf_0+0xc>)
 8011d7e:	f000 f969 	bl	8012054 <_ZN12FrontendHeapD1Ev>
 8011d82:	bd80      	pop	{r7, pc}
 8011d84:	20023de8 	.word	0x20023de8

08011d88 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8011d88:	b580      	push	{r7, lr}
 8011d8a:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8011d8c:	4b11      	ldr	r3, [pc, #68]	; (8011dd4 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8011d8e:	681b      	ldr	r3, [r3, #0]
 8011d90:	f3bf 8f5b 	dmb	ish
 8011d94:	f003 0301 	and.w	r3, r3, #1
 8011d98:	2b00      	cmp	r3, #0
 8011d9a:	bf0c      	ite	eq
 8011d9c:	2301      	moveq	r3, #1
 8011d9e:	2300      	movne	r3, #0
 8011da0:	b2db      	uxtb	r3, r3
 8011da2:	2b00      	cmp	r3, #0
 8011da4:	d013      	beq.n	8011dce <_ZN12FrontendHeap11getInstanceEv+0x46>
 8011da6:	480b      	ldr	r0, [pc, #44]	; (8011dd4 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8011da8:	f015 f93d 	bl	8027026 <__cxa_guard_acquire>
 8011dac:	4603      	mov	r3, r0
 8011dae:	2b00      	cmp	r3, #0
 8011db0:	bf14      	ite	ne
 8011db2:	2301      	movne	r3, #1
 8011db4:	2300      	moveq	r3, #0
 8011db6:	b2db      	uxtb	r3, r3
 8011db8:	2b00      	cmp	r3, #0
 8011dba:	d008      	beq.n	8011dce <_ZN12FrontendHeap11getInstanceEv+0x46>
 8011dbc:	4806      	ldr	r0, [pc, #24]	; (8011dd8 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 8011dbe:	f000 f867 	bl	8011e90 <_ZN12FrontendHeapC1Ev>
 8011dc2:	4806      	ldr	r0, [pc, #24]	; (8011ddc <_ZN12FrontendHeap11getInstanceEv+0x54>)
 8011dc4:	f017 f86e 	bl	8028ea4 <atexit>
 8011dc8:	4802      	ldr	r0, [pc, #8]	; (8011dd4 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8011dca:	f015 f938 	bl	802703e <__cxa_guard_release>
        return instance;
 8011dce:	4b02      	ldr	r3, [pc, #8]	; (8011dd8 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 8011dd0:	4618      	mov	r0, r3
 8011dd2:	bd80      	pop	{r7, pc}
 8011dd4:	20024194 	.word	0x20024194
 8011dd8:	20023de8 	.word	0x20023de8
 8011ddc:	08011d79 	.word	0x08011d79

08011de0 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8011de0:	b580      	push	{r7, lr}
 8011de2:	b082      	sub	sp, #8
 8011de4:	af00      	add	r7, sp, #0
 8011de6:	6078      	str	r0, [r7, #4]
 8011de8:	4a05      	ldr	r2, [pc, #20]	; (8011e00 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 8011dea:	687b      	ldr	r3, [r7, #4]
 8011dec:	601a      	str	r2, [r3, #0]
 8011dee:	687b      	ldr	r3, [r7, #4]
 8011df0:	4618      	mov	r0, r3
 8011df2:	f7ff fe63 	bl	8011abc <_ZN8touchgfx7MVPHeapD1Ev>
 8011df6:	687b      	ldr	r3, [r7, #4]
 8011df8:	4618      	mov	r0, r3
 8011dfa:	3708      	adds	r7, #8
 8011dfc:	46bd      	mov	sp, r7
 8011dfe:	bd80      	pop	{r7, pc}
 8011e00:	0802b8b8 	.word	0x0802b8b8

08011e04 <_ZN16FrontendHeapBaseD0Ev>:
 8011e04:	b580      	push	{r7, lr}
 8011e06:	b082      	sub	sp, #8
 8011e08:	af00      	add	r7, sp, #0
 8011e0a:	6078      	str	r0, [r7, #4]
 8011e0c:	6878      	ldr	r0, [r7, #4]
 8011e0e:	f7ff ffe7 	bl	8011de0 <_ZN16FrontendHeapBaseD1Ev>
 8011e12:	2114      	movs	r1, #20
 8011e14:	6878      	ldr	r0, [r7, #4]
 8011e16:	f015 f904 	bl	8027022 <_ZdlPvj>
 8011e1a:	687b      	ldr	r3, [r7, #4]
 8011e1c:	4618      	mov	r0, r3
 8011e1e:	3708      	adds	r7, #8
 8011e20:	46bd      	mov	sp, r7
 8011e22:	bd80      	pop	{r7, pc}

08011e24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 8011e24:	b580      	push	{r7, lr}
 8011e26:	b082      	sub	sp, #8
 8011e28:	af00      	add	r7, sp, #0
 8011e2a:	6078      	str	r0, [r7, #4]
 8011e2c:	687b      	ldr	r3, [r7, #4]
 8011e2e:	4618      	mov	r0, r3
 8011e30:	f000 ff58 	bl	8012ce4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011e34:	4a03      	ldr	r2, [pc, #12]	; (8011e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8011e36:	687b      	ldr	r3, [r7, #4]
 8011e38:	601a      	str	r2, [r3, #0]
 8011e3a:	687b      	ldr	r3, [r7, #4]
 8011e3c:	4618      	mov	r0, r3
 8011e3e:	3708      	adds	r7, #8
 8011e40:	46bd      	mov	sp, r7
 8011e42:	bd80      	pop	{r7, pc}
 8011e44:	0802b884 	.word	0x0802b884

08011e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8011e48:	b580      	push	{r7, lr}
 8011e4a:	b082      	sub	sp, #8
 8011e4c:	af00      	add	r7, sp, #0
 8011e4e:	6078      	str	r0, [r7, #4]
 8011e50:	687b      	ldr	r3, [r7, #4]
 8011e52:	4618      	mov	r0, r3
 8011e54:	f000 ff46 	bl	8012ce4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011e58:	4a03      	ldr	r2, [pc, #12]	; (8011e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8011e5a:	687b      	ldr	r3, [r7, #4]
 8011e5c:	601a      	str	r2, [r3, #0]
 8011e5e:	687b      	ldr	r3, [r7, #4]
 8011e60:	4618      	mov	r0, r3
 8011e62:	3708      	adds	r7, #8
 8011e64:	46bd      	mov	sp, r7
 8011e66:	bd80      	pop	{r7, pc}
 8011e68:	0802b850 	.word	0x0802b850

08011e6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8011e6c:	b580      	push	{r7, lr}
 8011e6e:	b082      	sub	sp, #8
 8011e70:	af00      	add	r7, sp, #0
 8011e72:	6078      	str	r0, [r7, #4]
 8011e74:	687b      	ldr	r3, [r7, #4]
 8011e76:	4618      	mov	r0, r3
 8011e78:	f000 ff34 	bl	8012ce4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011e7c:	4a03      	ldr	r2, [pc, #12]	; (8011e8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8011e7e:	687b      	ldr	r3, [r7, #4]
 8011e80:	601a      	str	r2, [r3, #0]
 8011e82:	687b      	ldr	r3, [r7, #4]
 8011e84:	4618      	mov	r0, r3
 8011e86:	3708      	adds	r7, #8
 8011e88:	46bd      	mov	sp, r7
 8011e8a:	bd80      	pop	{r7, pc}
 8011e8c:	0802b81c 	.word	0x0802b81c

08011e90 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8011e90:	b590      	push	{r4, r7, lr}
 8011e92:	b085      	sub	sp, #20
 8011e94:	af02      	add	r7, sp, #8
 8011e96:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8011e98:	6878      	ldr	r0, [r7, #4]
 8011e9a:	687b      	ldr	r3, [r7, #4]
 8011e9c:	f103 0114 	add.w	r1, r3, #20
 8011ea0:	687b      	ldr	r3, [r7, #4]
 8011ea2:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 8011ea6:	687b      	ldr	r3, [r7, #4]
 8011ea8:	f503 740e 	add.w	r4, r3, #568	; 0x238
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8011eac:	687b      	ldr	r3, [r7, #4]
 8011eae:	f503 7314 	add.w	r3, r3, #592	; 0x250
                     app(model, *this)
 8011eb2:	9300      	str	r3, [sp, #0]
 8011eb4:	4623      	mov	r3, r4
 8011eb6:	f7ff ff45 	bl	8011d44 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 8011eba:	4a18      	ldr	r2, [pc, #96]	; (8011f1c <_ZN12FrontendHeapC1Ev+0x8c>)
 8011ebc:	687b      	ldr	r3, [r7, #4]
 8011ebe:	601a      	str	r2, [r3, #0]
 8011ec0:	687b      	ldr	r3, [r7, #4]
 8011ec2:	3314      	adds	r3, #20
 8011ec4:	4618      	mov	r0, r3
 8011ec6:	f7ff ffad 	bl	8011e24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011eca:	687b      	ldr	r3, [r7, #4]
 8011ecc:	332c      	adds	r3, #44	; 0x2c
 8011ece:	4618      	mov	r0, r3
 8011ed0:	f7ff ffba 	bl	8011e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011ed4:	687b      	ldr	r3, [r7, #4]
 8011ed6:	f503 730e 	add.w	r3, r3, #568	; 0x238
 8011eda:	4618      	mov	r0, r3
 8011edc:	f7ff ffc6 	bl	8011e6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011ee0:	687b      	ldr	r3, [r7, #4]
 8011ee2:	f503 7313 	add.w	r3, r3, #588	; 0x24c
 8011ee6:	4618      	mov	r0, r3
 8011ee8:	f7fe ff1c 	bl	8010d24 <_ZN5ModelC1Ev>
 8011eec:	687b      	ldr	r3, [r7, #4]
 8011eee:	f503 7014 	add.w	r0, r3, #592	; 0x250
 8011ef2:	687b      	ldr	r3, [r7, #4]
 8011ef4:	f503 7313 	add.w	r3, r3, #588	; 0x24c
 8011ef8:	687a      	ldr	r2, [r7, #4]
 8011efa:	4619      	mov	r1, r3
 8011efc:	f7fe fefc 	bl	8010cf8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 8011f00:	687a      	ldr	r2, [r7, #4]
 8011f02:	687b      	ldr	r3, [r7, #4]
 8011f04:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8011f08:	4619      	mov	r1, r3
 8011f0a:	4610      	mov	r0, r2
 8011f0c:	f7ff ff0c 	bl	8011d28 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 8011f10:	687b      	ldr	r3, [r7, #4]
 8011f12:	4618      	mov	r0, r3
 8011f14:	370c      	adds	r7, #12
 8011f16:	46bd      	mov	sp, r7
 8011f18:	bd90      	pop	{r4, r7, pc}
 8011f1a:	bf00      	nop
 8011f1c:	0802b808 	.word	0x0802b808

08011f20 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 8011f20:	b580      	push	{r7, lr}
 8011f22:	b086      	sub	sp, #24
 8011f24:	af02      	add	r7, sp, #8
 8011f26:	60f8      	str	r0, [r7, #12]
 8011f28:	60b9      	str	r1, [r7, #8]
 8011f2a:	607a      	str	r2, [r7, #4]
 8011f2c:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 8011f2e:	68f8      	ldr	r0, [r7, #12]
 8011f30:	8bbb      	ldrh	r3, [r7, #28]
 8011f32:	9301      	str	r3, [sp, #4]
 8011f34:	8b3b      	ldrh	r3, [r7, #24]
 8011f36:	9300      	str	r3, [sp, #0]
 8011f38:	683b      	ldr	r3, [r7, #0]
 8011f3a:	687a      	ldr	r2, [r7, #4]
 8011f3c:	68b9      	ldr	r1, [r7, #8]
 8011f3e:	f7ff fe33 	bl	8011ba8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 8011f42:	4a04      	ldr	r2, [pc, #16]	; (8011f54 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8011f44:	68fb      	ldr	r3, [r7, #12]
 8011f46:	601a      	str	r2, [r3, #0]
    }
 8011f48:	68fb      	ldr	r3, [r7, #12]
 8011f4a:	4618      	mov	r0, r3
 8011f4c:	3710      	adds	r7, #16
 8011f4e:	46bd      	mov	sp, r7
 8011f50:	bd80      	pop	{r7, pc}
 8011f52:	bf00      	nop
 8011f54:	0802b908 	.word	0x0802b908

08011f58 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8011f58:	b580      	push	{r7, lr}
 8011f5a:	b086      	sub	sp, #24
 8011f5c:	af02      	add	r7, sp, #8
 8011f5e:	60f8      	str	r0, [r7, #12]
 8011f60:	60b9      	str	r1, [r7, #8]
 8011f62:	607a      	str	r2, [r7, #4]
 8011f64:	603b      	str	r3, [r7, #0]
 8011f66:	68f8      	ldr	r0, [r7, #12]
 8011f68:	8bbb      	ldrh	r3, [r7, #28]
 8011f6a:	9301      	str	r3, [sp, #4]
 8011f6c:	8b3b      	ldrh	r3, [r7, #24]
 8011f6e:	9300      	str	r3, [sp, #0]
 8011f70:	683b      	ldr	r3, [r7, #0]
 8011f72:	687a      	ldr	r2, [r7, #4]
 8011f74:	68b9      	ldr	r1, [r7, #8]
 8011f76:	f7ff ffd3 	bl	8011f20 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8011f7a:	4a04      	ldr	r2, [pc, #16]	; (8011f8c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8011f7c:	68fb      	ldr	r3, [r7, #12]
 8011f7e:	601a      	str	r2, [r3, #0]
    }
 8011f80:	68fb      	ldr	r3, [r7, #12]
 8011f82:	4618      	mov	r0, r3
 8011f84:	3710      	adds	r7, #16
 8011f86:	46bd      	mov	sp, r7
 8011f88:	bd80      	pop	{r7, pc}
 8011f8a:	bf00      	nop
 8011f8c:	0802b6bc 	.word	0x0802b6bc

08011f90 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 8011f90:	b480      	push	{r7}
 8011f92:	b083      	sub	sp, #12
 8011f94:	af00      	add	r7, sp, #0
 8011f96:	6078      	str	r0, [r7, #4]
 8011f98:	4a04      	ldr	r2, [pc, #16]	; (8011fac <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 8011f9a:	687b      	ldr	r3, [r7, #4]
 8011f9c:	601a      	str	r2, [r3, #0]
 8011f9e:	687b      	ldr	r3, [r7, #4]
 8011fa0:	4618      	mov	r0, r3
 8011fa2:	370c      	adds	r7, #12
 8011fa4:	46bd      	mov	sp, r7
 8011fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011faa:	4770      	bx	lr
 8011fac:	0802b6a4 	.word	0x0802b6a4

08011fb0 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 8011fb0:	b580      	push	{r7, lr}
 8011fb2:	b082      	sub	sp, #8
 8011fb4:	af00      	add	r7, sp, #0
 8011fb6:	6078      	str	r0, [r7, #4]
 8011fb8:	687b      	ldr	r3, [r7, #4]
 8011fba:	4618      	mov	r0, r3
 8011fbc:	f7ff ffe8 	bl	8011f90 <_ZN8touchgfx15TouchControllerC1Ev>
 8011fc0:	4a03      	ldr	r2, [pc, #12]	; (8011fd0 <_ZN20STM32TouchControllerC1Ev+0x20>)
 8011fc2:	687b      	ldr	r3, [r7, #4]
 8011fc4:	601a      	str	r2, [r3, #0]
 8011fc6:	687b      	ldr	r3, [r7, #4]
 8011fc8:	4618      	mov	r0, r3
 8011fca:	3708      	adds	r7, #8
 8011fcc:	46bd      	mov	sp, r7
 8011fce:	bd80      	pop	{r7, pc}
 8011fd0:	0802b68c 	.word	0x0802b68c

08011fd4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 8011fd4:	b590      	push	{r4, r7, lr}
 8011fd6:	b085      	sub	sp, #20
 8011fd8:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8011fda:	f7fe fc5d 	bl	8010898 <_ZN14BitmapDatabase11getInstanceEv>
 8011fde:	4604      	mov	r4, r0
 8011fe0:	f7fe fc64 	bl	80108ac <_ZN14BitmapDatabase15getInstanceSizeEv>
 8011fe4:	4603      	mov	r3, r0
 8011fe6:	4619      	mov	r1, r3
 8011fe8:	2300      	movs	r3, #0
 8011fea:	9300      	str	r3, [sp, #0]
 8011fec:	2300      	movs	r3, #0
 8011fee:	2200      	movs	r2, #0
 8011ff0:	4620      	mov	r0, r4
 8011ff2:	f007 fbd1 	bl	8019798 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 8011ff6:	4809      	ldr	r0, [pc, #36]	; (801201c <touchgfx_init+0x48>)
 8011ff8:	f7ff fd30 	bl	8011a5c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 8011ffc:	2000      	movs	r0, #0
 8011ffe:	f7fe fd99 	bl	8010b34 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8012002:	4807      	ldr	r0, [pc, #28]	; (8012020 <touchgfx_init+0x4c>)
 8012004:	f007 fb30 	bl	8019668 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 8012008:	f7ff febe 	bl	8011d88 <_ZN12FrontendHeap11getInstanceEv>
 801200c:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 801200e:	4805      	ldr	r0, [pc, #20]	; (8012024 <touchgfx_init+0x50>)
 8012010:	f7ff faa6 	bl	8011560 <_ZN11TouchGFXHAL10initializeEv>
}
 8012014:	bf00      	nop
 8012016:	370c      	adds	r7, #12
 8012018:	46bd      	mov	sp, r7
 801201a:	bd90      	pop	{r4, r7, pc}
 801201c:	20024264 	.word	0x20024264
 8012020:	200002a0 	.word	0x200002a0
 8012024:	20024268 	.word	0x20024268

08012028 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8012028:	b480      	push	{r7}
 801202a:	af00      	add	r7, sp, #0
}
 801202c:	bf00      	nop
 801202e:	46bd      	mov	sp, r7
 8012030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012034:	4770      	bx	lr
	...

08012038 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 8012038:	b580      	push	{r7, lr}
 801203a:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 801203c:	f7ff fba6 	bl	801178c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 8012040:	4603      	mov	r3, r0
 8012042:	2b00      	cmp	r3, #0
 8012044:	d002      	beq.n	801204c <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 8012046:	4802      	ldr	r0, [pc, #8]	; (8012050 <touchgfx_taskEntry+0x18>)
 8012048:	f7ff f95c 	bl	8011304 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 801204c:	bf00      	nop
 801204e:	bd80      	pop	{r7, pc}
 8012050:	20024268 	.word	0x20024268

08012054 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8012054:	b580      	push	{r7, lr}
 8012056:	b082      	sub	sp, #8
 8012058:	af00      	add	r7, sp, #0
 801205a:	6078      	str	r0, [r7, #4]
 801205c:	4a10      	ldr	r2, [pc, #64]	; (80120a0 <_ZN12FrontendHeapD1Ev+0x4c>)
 801205e:	687b      	ldr	r3, [r7, #4]
 8012060:	601a      	str	r2, [r3, #0]
 8012062:	687b      	ldr	r3, [r7, #4]
 8012064:	f503 7314 	add.w	r3, r3, #592	; 0x250
 8012068:	4618      	mov	r0, r3
 801206a:	f7fe fe0f 	bl	8010c8c <_ZN19FrontendApplicationD1Ev>
 801206e:	687b      	ldr	r3, [r7, #4]
 8012070:	f503 730e 	add.w	r3, r3, #568	; 0x238
 8012074:	4618      	mov	r0, r3
 8012076:	f000 f827 	bl	80120c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 801207a:	687b      	ldr	r3, [r7, #4]
 801207c:	332c      	adds	r3, #44	; 0x2c
 801207e:	4618      	mov	r0, r3
 8012080:	f000 f844 	bl	801210c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8012084:	687b      	ldr	r3, [r7, #4]
 8012086:	3314      	adds	r3, #20
 8012088:	4618      	mov	r0, r3
 801208a:	f000 f863 	bl	8012154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 801208e:	687b      	ldr	r3, [r7, #4]
 8012090:	4618      	mov	r0, r3
 8012092:	f7ff fea5 	bl	8011de0 <_ZN16FrontendHeapBaseD1Ev>
 8012096:	687b      	ldr	r3, [r7, #4]
 8012098:	4618      	mov	r0, r3
 801209a:	3708      	adds	r7, #8
 801209c:	46bd      	mov	sp, r7
 801209e:	bd80      	pop	{r7, pc}
 80120a0:	0802b808 	.word	0x0802b808

080120a4 <_ZN12FrontendHeapD0Ev>:
 80120a4:	b580      	push	{r7, lr}
 80120a6:	b082      	sub	sp, #8
 80120a8:	af00      	add	r7, sp, #0
 80120aa:	6078      	str	r0, [r7, #4]
 80120ac:	6878      	ldr	r0, [r7, #4]
 80120ae:	f7ff ffd1 	bl	8012054 <_ZN12FrontendHeapD1Ev>
 80120b2:	f44f 716b 	mov.w	r1, #940	; 0x3ac
 80120b6:	6878      	ldr	r0, [r7, #4]
 80120b8:	f014 ffb3 	bl	8027022 <_ZdlPvj>
 80120bc:	687b      	ldr	r3, [r7, #4]
 80120be:	4618      	mov	r0, r3
 80120c0:	3708      	adds	r7, #8
 80120c2:	46bd      	mov	sp, r7
 80120c4:	bd80      	pop	{r7, pc}
	...

080120c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80120c8:	b580      	push	{r7, lr}
 80120ca:	b082      	sub	sp, #8
 80120cc:	af00      	add	r7, sp, #0
 80120ce:	6078      	str	r0, [r7, #4]
 80120d0:	4a05      	ldr	r2, [pc, #20]	; (80120e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 80120d2:	687b      	ldr	r3, [r7, #4]
 80120d4:	601a      	str	r2, [r3, #0]
 80120d6:	687b      	ldr	r3, [r7, #4]
 80120d8:	4618      	mov	r0, r3
 80120da:	f000 fe02 	bl	8012ce2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80120de:	687b      	ldr	r3, [r7, #4]
 80120e0:	4618      	mov	r0, r3
 80120e2:	3708      	adds	r7, #8
 80120e4:	46bd      	mov	sp, r7
 80120e6:	bd80      	pop	{r7, pc}
 80120e8:	0802b81c 	.word	0x0802b81c

080120ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80120ec:	b580      	push	{r7, lr}
 80120ee:	b082      	sub	sp, #8
 80120f0:	af00      	add	r7, sp, #0
 80120f2:	6078      	str	r0, [r7, #4]
 80120f4:	6878      	ldr	r0, [r7, #4]
 80120f6:	f7ff ffe7 	bl	80120c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80120fa:	2114      	movs	r1, #20
 80120fc:	6878      	ldr	r0, [r7, #4]
 80120fe:	f014 ff90 	bl	8027022 <_ZdlPvj>
 8012102:	687b      	ldr	r3, [r7, #4]
 8012104:	4618      	mov	r0, r3
 8012106:	3708      	adds	r7, #8
 8012108:	46bd      	mov	sp, r7
 801210a:	bd80      	pop	{r7, pc}

0801210c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 801210c:	b580      	push	{r7, lr}
 801210e:	b082      	sub	sp, #8
 8012110:	af00      	add	r7, sp, #0
 8012112:	6078      	str	r0, [r7, #4]
 8012114:	4a05      	ldr	r2, [pc, #20]	; (801212c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8012116:	687b      	ldr	r3, [r7, #4]
 8012118:	601a      	str	r2, [r3, #0]
 801211a:	687b      	ldr	r3, [r7, #4]
 801211c:	4618      	mov	r0, r3
 801211e:	f000 fde0 	bl	8012ce2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8012122:	687b      	ldr	r3, [r7, #4]
 8012124:	4618      	mov	r0, r3
 8012126:	3708      	adds	r7, #8
 8012128:	46bd      	mov	sp, r7
 801212a:	bd80      	pop	{r7, pc}
 801212c:	0802b850 	.word	0x0802b850

08012130 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8012130:	b580      	push	{r7, lr}
 8012132:	b082      	sub	sp, #8
 8012134:	af00      	add	r7, sp, #0
 8012136:	6078      	str	r0, [r7, #4]
 8012138:	6878      	ldr	r0, [r7, #4]
 801213a:	f7ff ffe7 	bl	801210c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 801213e:	f44f 7103 	mov.w	r1, #524	; 0x20c
 8012142:	6878      	ldr	r0, [r7, #4]
 8012144:	f014 ff6d 	bl	8027022 <_ZdlPvj>
 8012148:	687b      	ldr	r3, [r7, #4]
 801214a:	4618      	mov	r0, r3
 801214c:	3708      	adds	r7, #8
 801214e:	46bd      	mov	sp, r7
 8012150:	bd80      	pop	{r7, pc}
	...

08012154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8012154:	b580      	push	{r7, lr}
 8012156:	b082      	sub	sp, #8
 8012158:	af00      	add	r7, sp, #0
 801215a:	6078      	str	r0, [r7, #4]
 801215c:	4a05      	ldr	r2, [pc, #20]	; (8012174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 801215e:	687b      	ldr	r3, [r7, #4]
 8012160:	601a      	str	r2, [r3, #0]
 8012162:	687b      	ldr	r3, [r7, #4]
 8012164:	4618      	mov	r0, r3
 8012166:	f000 fdbc 	bl	8012ce2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 801216a:	687b      	ldr	r3, [r7, #4]
 801216c:	4618      	mov	r0, r3
 801216e:	3708      	adds	r7, #8
 8012170:	46bd      	mov	sp, r7
 8012172:	bd80      	pop	{r7, pc}
 8012174:	0802b884 	.word	0x0802b884

08012178 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8012178:	b580      	push	{r7, lr}
 801217a:	b082      	sub	sp, #8
 801217c:	af00      	add	r7, sp, #0
 801217e:	6078      	str	r0, [r7, #4]
 8012180:	6878      	ldr	r0, [r7, #4]
 8012182:	f7ff ffe7 	bl	8012154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8012186:	2118      	movs	r1, #24
 8012188:	6878      	ldr	r0, [r7, #4]
 801218a:	f014 ff4a 	bl	8027022 <_ZdlPvj>
 801218e:	687b      	ldr	r3, [r7, #4]
 8012190:	4618      	mov	r0, r3
 8012192:	3708      	adds	r7, #8
 8012194:	46bd      	mov	sp, r7
 8012196:	bd80      	pop	{r7, pc}

08012198 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 8012198:	b580      	push	{r7, lr}
 801219a:	b082      	sub	sp, #8
 801219c:	af00      	add	r7, sp, #0
 801219e:	6078      	str	r0, [r7, #4]
 80121a0:	4a05      	ldr	r2, [pc, #20]	; (80121b8 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 80121a2:	687b      	ldr	r3, [r7, #4]
 80121a4:	601a      	str	r2, [r3, #0]
 80121a6:	687b      	ldr	r3, [r7, #4]
 80121a8:	4618      	mov	r0, r3
 80121aa:	f7ff fca7 	bl	8011afc <_ZN8touchgfx3LCDD1Ev>
 80121ae:	687b      	ldr	r3, [r7, #4]
 80121b0:	4618      	mov	r0, r3
 80121b2:	3708      	adds	r7, #8
 80121b4:	46bd      	mov	sp, r7
 80121b6:	bd80      	pop	{r7, pc}
 80121b8:	0802c3d0 	.word	0x0802c3d0

080121bc <_ZN8touchgfx8LCD16bppD0Ev>:
 80121bc:	b580      	push	{r7, lr}
 80121be:	b082      	sub	sp, #8
 80121c0:	af00      	add	r7, sp, #0
 80121c2:	6078      	str	r0, [r7, #4]
 80121c4:	6878      	ldr	r0, [r7, #4]
 80121c6:	f7ff ffe7 	bl	8012198 <_ZN8touchgfx8LCD16bppD1Ev>
 80121ca:	2184      	movs	r1, #132	; 0x84
 80121cc:	6878      	ldr	r0, [r7, #4]
 80121ce:	f014 ff28 	bl	8027022 <_ZdlPvj>
 80121d2:	687b      	ldr	r3, [r7, #4]
 80121d4:	4618      	mov	r0, r3
 80121d6:	3708      	adds	r7, #8
 80121d8:	46bd      	mov	sp, r7
 80121da:	bd80      	pop	{r7, pc}

080121dc <_Z41__static_initialization_and_destruction_0ii>:
 80121dc:	b580      	push	{r7, lr}
 80121de:	b084      	sub	sp, #16
 80121e0:	af02      	add	r7, sp, #8
 80121e2:	6078      	str	r0, [r7, #4]
 80121e4:	6039      	str	r1, [r7, #0]
 80121e6:	687b      	ldr	r3, [r7, #4]
 80121e8:	2b01      	cmp	r3, #1
 80121ea:	d118      	bne.n	801221e <_Z41__static_initialization_and_destruction_0ii+0x42>
 80121ec:	683b      	ldr	r3, [r7, #0]
 80121ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80121f2:	4293      	cmp	r3, r2
 80121f4:	d113      	bne.n	801221e <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 80121f6:	4817      	ldr	r0, [pc, #92]	; (8012254 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 80121f8:	f7ff feda 	bl	8011fb0 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 80121fc:	4816      	ldr	r0, [pc, #88]	; (8012258 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80121fe:	f7ff fb8f 	bl	8011920 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8012202:	4816      	ldr	r0, [pc, #88]	; (801225c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8012204:	f00b fd8c 	bl	801dd20 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 8012208:	23f0      	movs	r3, #240	; 0xf0
 801220a:	9301      	str	r3, [sp, #4]
 801220c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8012210:	9300      	str	r3, [sp, #0]
 8012212:	4b10      	ldr	r3, [pc, #64]	; (8012254 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8012214:	4a11      	ldr	r2, [pc, #68]	; (801225c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8012216:	4910      	ldr	r1, [pc, #64]	; (8012258 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8012218:	4811      	ldr	r0, [pc, #68]	; (8012260 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 801221a:	f7ff fe9d 	bl	8011f58 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 801221e:	687b      	ldr	r3, [r7, #4]
 8012220:	2b00      	cmp	r3, #0
 8012222:	d113      	bne.n	801224c <_Z41__static_initialization_and_destruction_0ii+0x70>
 8012224:	683b      	ldr	r3, [r7, #0]
 8012226:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801222a:	4293      	cmp	r3, r2
 801222c:	d10e      	bne.n	801224c <_Z41__static_initialization_and_destruction_0ii+0x70>
 801222e:	480c      	ldr	r0, [pc, #48]	; (8012260 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8012230:	f7ff fa26 	bl	8011680 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 8012234:	480b      	ldr	r0, [pc, #44]	; (8012264 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8012236:	f7fb ffd5 	bl	800e1e4 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 801223a:	4808      	ldr	r0, [pc, #32]	; (801225c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 801223c:	f7ff ffac 	bl	8012198 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 8012240:	4805      	ldr	r0, [pc, #20]	; (8012258 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8012242:	f7ff fbc1 	bl	80119c8 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 8012246:	4803      	ldr	r0, [pc, #12]	; (8012254 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8012248:	f7fe ff62 	bl	8011110 <_ZN20STM32TouchControllerD1Ev>
}
 801224c:	bf00      	nop
 801224e:	3708      	adds	r7, #8
 8012250:	46bd      	mov	sp, r7
 8012252:	bd80      	pop	{r7, pc}
 8012254:	20024198 	.word	0x20024198
 8012258:	2002419c 	.word	0x2002419c
 801225c:	200241e0 	.word	0x200241e0
 8012260:	20024268 	.word	0x20024268
 8012264:	200002a0 	.word	0x200002a0

08012268 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8012268:	b480      	push	{r7}
 801226a:	b083      	sub	sp, #12
 801226c:	af00      	add	r7, sp, #0
 801226e:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 8012270:	2301      	movs	r3, #1
    }
 8012272:	4618      	mov	r0, r3
 8012274:	370c      	adds	r7, #12
 8012276:	46bd      	mov	sp, r7
 8012278:	f85d 7b04 	ldr.w	r7, [sp], #4
 801227c:	4770      	bx	lr

0801227e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 801227e:	b480      	push	{r7}
 8012280:	b083      	sub	sp, #12
 8012282:	af00      	add	r7, sp, #0
 8012284:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8012286:	230c      	movs	r3, #12
    }
 8012288:	4618      	mov	r0, r3
 801228a:	370c      	adds	r7, #12
 801228c:	46bd      	mov	sp, r7
 801228e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012292:	4770      	bx	lr

08012294 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8012294:	b480      	push	{r7}
 8012296:	b083      	sub	sp, #12
 8012298:	af00      	add	r7, sp, #0
 801229a:	6078      	str	r0, [r7, #4]
 801229c:	460b      	mov	r3, r1
 801229e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 80122a0:	887a      	ldrh	r2, [r7, #2]
 80122a2:	4613      	mov	r3, r2
 80122a4:	005b      	lsls	r3, r3, #1
 80122a6:	4413      	add	r3, r2
 80122a8:	009b      	lsls	r3, r3, #2
 80122aa:	3308      	adds	r3, #8
 80122ac:	687a      	ldr	r2, [r7, #4]
 80122ae:	4413      	add	r3, r2
    }
 80122b0:	4618      	mov	r0, r3
 80122b2:	370c      	adds	r7, #12
 80122b4:	46bd      	mov	sp, r7
 80122b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122ba:	4770      	bx	lr

080122bc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 80122bc:	b480      	push	{r7}
 80122be:	b083      	sub	sp, #12
 80122c0:	af00      	add	r7, sp, #0
 80122c2:	6078      	str	r0, [r7, #4]
 80122c4:	460b      	mov	r3, r1
 80122c6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 80122c8:	887a      	ldrh	r2, [r7, #2]
 80122ca:	4613      	mov	r3, r2
 80122cc:	005b      	lsls	r3, r3, #1
 80122ce:	4413      	add	r3, r2
 80122d0:	009b      	lsls	r3, r3, #2
 80122d2:	3308      	adds	r3, #8
 80122d4:	687a      	ldr	r2, [r7, #4]
 80122d6:	4413      	add	r3, r2
    }
 80122d8:	4618      	mov	r0, r3
 80122da:	370c      	adds	r7, #12
 80122dc:	46bd      	mov	sp, r7
 80122de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122e2:	4770      	bx	lr

080122e4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 80122e4:	b480      	push	{r7}
 80122e6:	b083      	sub	sp, #12
 80122e8:	af00      	add	r7, sp, #0
 80122ea:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 80122ec:	2301      	movs	r3, #1
    }
 80122ee:	4618      	mov	r0, r3
 80122f0:	370c      	adds	r7, #12
 80122f2:	46bd      	mov	sp, r7
 80122f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122f8:	4770      	bx	lr

080122fa <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 80122fa:	b480      	push	{r7}
 80122fc:	b083      	sub	sp, #12
 80122fe:	af00      	add	r7, sp, #0
 8012300:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8012302:	f44f 7301 	mov.w	r3, #516	; 0x204
    }
 8012306:	4618      	mov	r0, r3
 8012308:	370c      	adds	r7, #12
 801230a:	46bd      	mov	sp, r7
 801230c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012310:	4770      	bx	lr

08012312 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8012312:	b480      	push	{r7}
 8012314:	b083      	sub	sp, #12
 8012316:	af00      	add	r7, sp, #0
 8012318:	6078      	str	r0, [r7, #4]
 801231a:	460b      	mov	r3, r1
 801231c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 801231e:	887a      	ldrh	r2, [r7, #2]
 8012320:	4613      	mov	r3, r2
 8012322:	01db      	lsls	r3, r3, #7
 8012324:	4413      	add	r3, r2
 8012326:	009b      	lsls	r3, r3, #2
 8012328:	3308      	adds	r3, #8
 801232a:	687a      	ldr	r2, [r7, #4]
 801232c:	4413      	add	r3, r2
    }
 801232e:	4618      	mov	r0, r3
 8012330:	370c      	adds	r7, #12
 8012332:	46bd      	mov	sp, r7
 8012334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012338:	4770      	bx	lr

0801233a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 801233a:	b480      	push	{r7}
 801233c:	b083      	sub	sp, #12
 801233e:	af00      	add	r7, sp, #0
 8012340:	6078      	str	r0, [r7, #4]
 8012342:	460b      	mov	r3, r1
 8012344:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8012346:	887a      	ldrh	r2, [r7, #2]
 8012348:	4613      	mov	r3, r2
 801234a:	01db      	lsls	r3, r3, #7
 801234c:	4413      	add	r3, r2
 801234e:	009b      	lsls	r3, r3, #2
 8012350:	3308      	adds	r3, #8
 8012352:	687a      	ldr	r2, [r7, #4]
 8012354:	4413      	add	r3, r2
    }
 8012356:	4618      	mov	r0, r3
 8012358:	370c      	adds	r7, #12
 801235a:	46bd      	mov	sp, r7
 801235c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012360:	4770      	bx	lr

08012362 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8012362:	b480      	push	{r7}
 8012364:	b083      	sub	sp, #12
 8012366:	af00      	add	r7, sp, #0
 8012368:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 801236a:	2301      	movs	r3, #1
    }
 801236c:	4618      	mov	r0, r3
 801236e:	370c      	adds	r7, #12
 8012370:	46bd      	mov	sp, r7
 8012372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012376:	4770      	bx	lr

08012378 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8012378:	b480      	push	{r7}
 801237a:	b083      	sub	sp, #12
 801237c:	af00      	add	r7, sp, #0
 801237e:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8012380:	2310      	movs	r3, #16
    }
 8012382:	4618      	mov	r0, r3
 8012384:	370c      	adds	r7, #12
 8012386:	46bd      	mov	sp, r7
 8012388:	f85d 7b04 	ldr.w	r7, [sp], #4
 801238c:	4770      	bx	lr

0801238e <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 801238e:	b480      	push	{r7}
 8012390:	b083      	sub	sp, #12
 8012392:	af00      	add	r7, sp, #0
 8012394:	6078      	str	r0, [r7, #4]
 8012396:	460b      	mov	r3, r1
 8012398:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 801239a:	887b      	ldrh	r3, [r7, #2]
 801239c:	011b      	lsls	r3, r3, #4
 801239e:	3308      	adds	r3, #8
 80123a0:	687a      	ldr	r2, [r7, #4]
 80123a2:	4413      	add	r3, r2
    }
 80123a4:	4618      	mov	r0, r3
 80123a6:	370c      	adds	r7, #12
 80123a8:	46bd      	mov	sp, r7
 80123aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123ae:	4770      	bx	lr

080123b0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 80123b0:	b480      	push	{r7}
 80123b2:	b083      	sub	sp, #12
 80123b4:	af00      	add	r7, sp, #0
 80123b6:	6078      	str	r0, [r7, #4]
 80123b8:	460b      	mov	r3, r1
 80123ba:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80123bc:	887b      	ldrh	r3, [r7, #2]
 80123be:	011b      	lsls	r3, r3, #4
 80123c0:	3308      	adds	r3, #8
 80123c2:	687a      	ldr	r2, [r7, #4]
 80123c4:	4413      	add	r3, r2
    }
 80123c6:	4618      	mov	r0, r3
 80123c8:	370c      	adds	r7, #12
 80123ca:	46bd      	mov	sp, r7
 80123cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123d0:	4770      	bx	lr

080123d2 <_GLOBAL__sub_I_touchgfx_init>:
 80123d2:	b580      	push	{r7, lr}
 80123d4:	af00      	add	r7, sp, #0
 80123d6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80123da:	2001      	movs	r0, #1
 80123dc:	f7ff fefe 	bl	80121dc <_Z41__static_initialization_and_destruction_0ii>
 80123e0:	bd80      	pop	{r7, pc}

080123e2 <_GLOBAL__sub_D_touchgfx_init>:
 80123e2:	b580      	push	{r7, lr}
 80123e4:	af00      	add	r7, sp, #0
 80123e6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80123ea:	2000      	movs	r0, #0
 80123ec:	f7ff fef6 	bl	80121dc <_Z41__static_initialization_and_destruction_0ii>
 80123f0:	bd80      	pop	{r7, pc}
	...

080123f4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 80123f4:	b480      	push	{r7}
 80123f6:	b083      	sub	sp, #12
 80123f8:	af00      	add	r7, sp, #0
 80123fa:	6078      	str	r0, [r7, #4]
    {
 80123fc:	4a04      	ldr	r2, [pc, #16]	; (8012410 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 80123fe:	687b      	ldr	r3, [r7, #4]
 8012400:	601a      	str	r2, [r3, #0]
    }
 8012402:	687b      	ldr	r3, [r7, #4]
 8012404:	4618      	mov	r0, r3
 8012406:	370c      	adds	r7, #12
 8012408:	46bd      	mov	sp, r7
 801240a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801240e:	4770      	bx	lr
 8012410:	0802b9e0 	.word	0x0802b9e0

08012414 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 8012414:	b580      	push	{r7, lr}
 8012416:	b082      	sub	sp, #8
 8012418:	af00      	add	r7, sp, #0
 801241a:	6078      	str	r0, [r7, #4]
    }
 801241c:	6878      	ldr	r0, [r7, #4]
 801241e:	f7ff ffe9 	bl	80123f4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8012422:	2104      	movs	r1, #4
 8012424:	6878      	ldr	r0, [r7, #4]
 8012426:	f014 fdfc 	bl	8027022 <_ZdlPvj>
 801242a:	687b      	ldr	r3, [r7, #4]
 801242c:	4618      	mov	r0, r3
 801242e:	3708      	adds	r7, #8
 8012430:	46bd      	mov	sp, r7
 8012432:	bd80      	pop	{r7, pc}

08012434 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 8012434:	b480      	push	{r7}
 8012436:	b083      	sub	sp, #12
 8012438:	af00      	add	r7, sp, #0
 801243a:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 801243c:	687b      	ldr	r3, [r7, #4]
 801243e:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8012442:	3301      	adds	r3, #1
 8012444:	b2da      	uxtb	r2, r3
 8012446:	687b      	ldr	r3, [r7, #4]
 8012448:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 801244c:	bf00      	nop
 801244e:	370c      	adds	r7, #12
 8012450:	46bd      	mov	sp, r7
 8012452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012456:	4770      	bx	lr

08012458 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 8012458:	b480      	push	{r7}
 801245a:	b083      	sub	sp, #12
 801245c:	af00      	add	r7, sp, #0
 801245e:	6078      	str	r0, [r7, #4]
 8012460:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 8012462:	687b      	ldr	r3, [r7, #4]
 8012464:	683a      	ldr	r2, [r7, #0]
 8012466:	619a      	str	r2, [r3, #24]
    }
 8012468:	bf00      	nop
 801246a:	370c      	adds	r7, #12
 801246c:	46bd      	mov	sp, r7
 801246e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012472:	4770      	bx	lr

08012474 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 8012474:	b480      	push	{r7}
 8012476:	b083      	sub	sp, #12
 8012478:	af00      	add	r7, sp, #0
 801247a:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 801247c:	687b      	ldr	r3, [r7, #4]
 801247e:	699b      	ldr	r3, [r3, #24]
    }
 8012480:	4618      	mov	r0, r3
 8012482:	370c      	adds	r7, #12
 8012484:	46bd      	mov	sp, r7
 8012486:	f85d 7b04 	ldr.w	r7, [sp], #4
 801248a:	4770      	bx	lr

0801248c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 801248c:	b580      	push	{r7, lr}
 801248e:	b082      	sub	sp, #8
 8012490:	af00      	add	r7, sp, #0
 8012492:	6078      	str	r0, [r7, #4]
 8012494:	460b      	mov	r3, r1
 8012496:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 8012498:	78fb      	ldrb	r3, [r7, #3]
 801249a:	2b00      	cmp	r3, #0
 801249c:	d002      	beq.n	80124a4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 801249e:	78fb      	ldrb	r3, [r7, #3]
 80124a0:	2b02      	cmp	r3, #2
 80124a2:	d105      	bne.n	80124b0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 80124a4:	687b      	ldr	r3, [r7, #4]
 80124a6:	78fa      	ldrb	r2, [r7, #3]
 80124a8:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 80124ac:	2301      	movs	r3, #1
 80124ae:	e027      	b.n	8012500 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 80124b0:	78fb      	ldrb	r3, [r7, #3]
 80124b2:	2b01      	cmp	r3, #1
 80124b4:	d123      	bne.n	80124fe <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 80124b6:	687b      	ldr	r3, [r7, #4]
 80124b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124ba:	2b00      	cmp	r3, #0
 80124bc:	d014      	beq.n	80124e8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 80124be:	687b      	ldr	r3, [r7, #4]
 80124c0:	681b      	ldr	r3, [r3, #0]
 80124c2:	339c      	adds	r3, #156	; 0x9c
 80124c4:	681b      	ldr	r3, [r3, #0]
 80124c6:	6878      	ldr	r0, [r7, #4]
 80124c8:	4798      	blx	r3
 80124ca:	4603      	mov	r3, r0
 80124cc:	461a      	mov	r2, r3
 80124ce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80124d2:	429a      	cmp	r2, r3
 80124d4:	d008      	beq.n	80124e8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 80124d6:	4b0c      	ldr	r3, [pc, #48]	; (8012508 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 80124d8:	781b      	ldrb	r3, [r3, #0]
 80124da:	f083 0301 	eor.w	r3, r3, #1
 80124de:	b2db      	uxtb	r3, r3
 80124e0:	2b00      	cmp	r3, #0
 80124e2:	d001      	beq.n	80124e8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 80124e4:	2301      	movs	r3, #1
 80124e6:	e000      	b.n	80124ea <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 80124e8:	2300      	movs	r3, #0
 80124ea:	2b00      	cmp	r3, #0
 80124ec:	d005      	beq.n	80124fa <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 80124ee:	687b      	ldr	r3, [r7, #4]
 80124f0:	78fa      	ldrb	r2, [r7, #3]
 80124f2:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 80124f6:	2301      	movs	r3, #1
 80124f8:	e002      	b.n	8012500 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 80124fa:	2300      	movs	r3, #0
 80124fc:	e000      	b.n	8012500 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 80124fe:	2300      	movs	r3, #0
    }
 8012500:	4618      	mov	r0, r3
 8012502:	3708      	adds	r7, #8
 8012504:	46bd      	mov	sp, r7
 8012506:	bd80      	pop	{r7, pc}
 8012508:	20025996 	.word	0x20025996

0801250c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 801250c:	b5b0      	push	{r4, r5, r7, lr}
 801250e:	b082      	sub	sp, #8
 8012510:	af00      	add	r7, sp, #0
 8012512:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8012514:	687b      	ldr	r3, [r7, #4]
 8012516:	4618      	mov	r0, r3
 8012518:	f000 fedb 	bl	80132d2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 801251c:	687d      	ldr	r5, [r7, #4]
 801251e:	687b      	ldr	r3, [r7, #4]
 8012520:	681b      	ldr	r3, [r3, #0]
 8012522:	3364      	adds	r3, #100	; 0x64
 8012524:	681c      	ldr	r4, [r3, #0]
 8012526:	f004 f84d 	bl	80165c4 <_ZN8touchgfx11Application11getInstanceEv>
 801252a:	4603      	mov	r3, r0
 801252c:	4619      	mov	r1, r3
 801252e:	4628      	mov	r0, r5
 8012530:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 8012532:	687b      	ldr	r3, [r7, #4]
 8012534:	681b      	ldr	r3, [r3, #0]
 8012536:	3380      	adds	r3, #128	; 0x80
 8012538:	681b      	ldr	r3, [r3, #0]
 801253a:	6878      	ldr	r0, [r7, #4]
 801253c:	4798      	blx	r3
    enableInterrupts();
 801253e:	687b      	ldr	r3, [r7, #4]
 8012540:	681b      	ldr	r3, [r3, #0]
 8012542:	3378      	adds	r3, #120	; 0x78
 8012544:	681b      	ldr	r3, [r3, #0]
 8012546:	6878      	ldr	r0, [r7, #4]
 8012548:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 801254a:	687b      	ldr	r3, [r7, #4]
 801254c:	4906      	ldr	r1, [pc, #24]	; (8012568 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 801254e:	4618      	mov	r0, r3
 8012550:	f7ff ff82 	bl	8012458 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 8012554:	687b      	ldr	r3, [r7, #4]
 8012556:	2102      	movs	r1, #2
 8012558:	4618      	mov	r0, r3
 801255a:	f7ff ff97 	bl	801248c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 801255e:	bf00      	nop
 8012560:	3708      	adds	r7, #8
 8012562:	46bd      	mov	sp, r7
 8012564:	bdb0      	pop	{r4, r5, r7, pc}
 8012566:	bf00      	nop
 8012568:	200242e4 	.word	0x200242e4

0801256c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 801256c:	b480      	push	{r7}
 801256e:	b083      	sub	sp, #12
 8012570:	af00      	add	r7, sp, #0
 8012572:	6078      	str	r0, [r7, #4]
}
 8012574:	bf00      	nop
 8012576:	370c      	adds	r7, #12
 8012578:	46bd      	mov	sp, r7
 801257a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801257e:	4770      	bx	lr

08012580 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8012580:	b480      	push	{r7}
 8012582:	b083      	sub	sp, #12
 8012584:	af00      	add	r7, sp, #0
 8012586:	6078      	str	r0, [r7, #4]
}
 8012588:	bf00      	nop
 801258a:	370c      	adds	r7, #12
 801258c:	46bd      	mov	sp, r7
 801258e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012592:	4770      	bx	lr

08012594 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8012594:	b480      	push	{r7}
 8012596:	b083      	sub	sp, #12
 8012598:	af00      	add	r7, sp, #0
 801259a:	6078      	str	r0, [r7, #4]
}
 801259c:	bf00      	nop
 801259e:	370c      	adds	r7, #12
 80125a0:	46bd      	mov	sp, r7
 80125a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80125a6:	4770      	bx	lr

080125a8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 80125a8:	b480      	push	{r7}
 80125aa:	b083      	sub	sp, #12
 80125ac:	af00      	add	r7, sp, #0
 80125ae:	6078      	str	r0, [r7, #4]
}
 80125b0:	bf00      	nop
 80125b2:	370c      	adds	r7, #12
 80125b4:	46bd      	mov	sp, r7
 80125b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80125ba:	4770      	bx	lr

080125bc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 80125bc:	b580      	push	{r7, lr}
 80125be:	b082      	sub	sp, #8
 80125c0:	af00      	add	r7, sp, #0
 80125c2:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 80125c4:	687b      	ldr	r3, [r7, #4]
 80125c6:	4618      	mov	r0, r3
 80125c8:	f000 fe6a 	bl	80132a0 <_ZN8touchgfx3HAL10beginFrameEv>
 80125cc:	4603      	mov	r3, r0
}
 80125ce:	4618      	mov	r0, r3
 80125d0:	3708      	adds	r7, #8
 80125d2:	46bd      	mov	sp, r7
 80125d4:	bd80      	pop	{r7, pc}

080125d6 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 80125d6:	b580      	push	{r7, lr}
 80125d8:	b082      	sub	sp, #8
 80125da:	af00      	add	r7, sp, #0
 80125dc:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 80125de:	bf00      	nop
 80125e0:	f7f3 f890 	bl	8005704 <touchgfxDisplayDriverTransmitActive>
 80125e4:	4603      	mov	r3, r0
 80125e6:	2b00      	cmp	r3, #0
 80125e8:	bf14      	ite	ne
 80125ea:	2301      	movne	r3, #1
 80125ec:	2300      	moveq	r3, #0
 80125ee:	b2db      	uxtb	r3, r3
 80125f0:	2b00      	cmp	r3, #0
 80125f2:	d1f5      	bne.n	80125e0 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 80125f4:	687b      	ldr	r3, [r7, #4]
 80125f6:	4618      	mov	r0, r3
 80125f8:	f000 fe5e 	bl	80132b8 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 80125fc:	f7ff f8ba 	bl	8011774 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8012600:	bf00      	nop
 8012602:	3708      	adds	r7, #8
 8012604:	46bd      	mov	sp, r7
 8012606:	bd80      	pop	{r7, pc}

08012608 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 8012608:	b480      	push	{r7}
 801260a:	b083      	sub	sp, #12
 801260c:	af00      	add	r7, sp, #0
 801260e:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 8012610:	2300      	movs	r3, #0
}
 8012612:	4618      	mov	r0, r3
 8012614:	370c      	adds	r7, #12
 8012616:	46bd      	mov	sp, r7
 8012618:	f85d 7b04 	ldr.w	r7, [sp], #4
 801261c:	4770      	bx	lr

0801261e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 801261e:	b480      	push	{r7}
 8012620:	b083      	sub	sp, #12
 8012622:	af00      	add	r7, sp, #0
 8012624:	6078      	str	r0, [r7, #4]
 8012626:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 8012628:	bf00      	nop
 801262a:	370c      	adds	r7, #12
 801262c:	46bd      	mov	sp, r7
 801262e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012632:	4770      	bx	lr

08012634 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8012634:	b580      	push	{r7, lr}
 8012636:	b088      	sub	sp, #32
 8012638:	af02      	add	r7, sp, #8
 801263a:	6078      	str	r0, [r7, #4]
 801263c:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 801263e:	687b      	ldr	r3, [r7, #4]
 8012640:	6839      	ldr	r1, [r7, #0]
 8012642:	4618      	mov	r0, r3
 8012644:	f000 fdf6 	bl	8013234 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 8012648:	687b      	ldr	r3, [r7, #4]
 801264a:	699a      	ldr	r2, [r3, #24]
 801264c:	687b      	ldr	r3, [r7, #4]
 801264e:	699b      	ldr	r3, [r3, #24]
 8012650:	681b      	ldr	r3, [r3, #0]
 8012652:	3304      	adds	r3, #4
 8012654:	681b      	ldr	r3, [r3, #0]
 8012656:	4610      	mov	r0, r2
 8012658:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 801265a:	f7f3 f853 	bl	8005704 <touchgfxDisplayDriverTransmitActive>
 801265e:	4603      	mov	r3, r0
 8012660:	2b00      	cmp	r3, #0
 8012662:	bf0c      	ite	eq
 8012664:	2301      	moveq	r3, #1
 8012666:	2300      	movne	r3, #0
 8012668:	b2db      	uxtb	r3, r3
 801266a:	2b00      	cmp	r3, #0
 801266c:	d021      	beq.n	80126b2 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 801266e:	f107 030c 	add.w	r3, r7, #12
 8012672:	4618      	mov	r0, r3
 8012674:	f7fc fdef 	bl	800f256 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 8012678:	687b      	ldr	r3, [r7, #4]
 801267a:	699a      	ldr	r2, [r3, #24]
 801267c:	687b      	ldr	r3, [r7, #4]
 801267e:	699b      	ldr	r3, [r3, #24]
 8012680:	681b      	ldr	r3, [r3, #0]
 8012682:	330c      	adds	r3, #12
 8012684:	681b      	ldr	r3, [r3, #0]
 8012686:	f107 010c 	add.w	r1, r7, #12
 801268a:	4610      	mov	r0, r2
 801268c:	4798      	blx	r3
 801268e:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8012690:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8012694:	b299      	uxth	r1, r3
 8012696:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 801269a:	b29a      	uxth	r2, r3
 801269c:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 80126a0:	b298      	uxth	r0, r3
 80126a2:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80126a6:	b29b      	uxth	r3, r3
 80126a8:	9300      	str	r3, [sp, #0]
 80126aa:	4603      	mov	r3, r0
 80126ac:	6978      	ldr	r0, [r7, #20]
 80126ae:	f7f3 f83b 	bl	8005728 <touchgfxDisplayDriverTransmitBlock>
    }
}
 80126b2:	bf00      	nop
 80126b4:	3718      	adds	r7, #24
 80126b6:	46bd      	mov	sp, r7
 80126b8:	bd80      	pop	{r7, pc}

080126ba <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 80126ba:	b580      	push	{r7, lr}
 80126bc:	b084      	sub	sp, #16
 80126be:	af00      	add	r7, sp, #0
 80126c0:	60f8      	str	r0, [r7, #12]
 80126c2:	60b9      	str	r1, [r7, #8]
 80126c4:	607a      	str	r2, [r7, #4]
 80126c6:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 80126c8:	68f8      	ldr	r0, [r7, #12]
 80126ca:	683b      	ldr	r3, [r7, #0]
 80126cc:	687a      	ldr	r2, [r7, #4]
 80126ce:	68b9      	ldr	r1, [r7, #8]
 80126d0:	f000 ff21 	bl	8013516 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 80126d4:	4603      	mov	r3, r0
}
 80126d6:	4618      	mov	r0, r3
 80126d8:	3710      	adds	r7, #16
 80126da:	46bd      	mov	sp, r7
 80126dc:	bd80      	pop	{r7, pc}

080126de <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 80126de:	b480      	push	{r7}
 80126e0:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 80126e2:	bf00      	nop
 80126e4:	46bd      	mov	sp, r7
 80126e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80126ea:	4770      	bx	lr

080126ec <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 80126ec:	b480      	push	{r7}
 80126ee:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 80126f0:	bf00      	nop
 80126f2:	46bd      	mov	sp, r7
 80126f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80126f8:	4770      	bx	lr

080126fa <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 80126fa:	b580      	push	{r7, lr}
 80126fc:	b086      	sub	sp, #24
 80126fe:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 8012700:	f7fc f910 	bl	800e924 <_ZN8touchgfx3HAL11getInstanceEv>
 8012704:	4603      	mov	r3, r0
 8012706:	4618      	mov	r0, r3
 8012708:	f7ff feb4 	bl	8012474 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 801270c:	60f8      	str	r0, [r7, #12]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 801270e:	68fb      	ldr	r3, [r7, #12]
 8012710:	681b      	ldr	r3, [r3, #0]
 8012712:	3318      	adds	r3, #24
 8012714:	681b      	ldr	r3, [r3, #0]
 8012716:	68f8      	ldr	r0, [r7, #12]
 8012718:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 801271a:	68fb      	ldr	r3, [r7, #12]
 801271c:	681b      	ldr	r3, [r3, #0]
 801271e:	3308      	adds	r3, #8
 8012720:	681b      	ldr	r3, [r3, #0]
 8012722:	68f8      	ldr	r0, [r7, #12]
 8012724:	4798      	blx	r3
 8012726:	4603      	mov	r3, r0
 8012728:	2b00      	cmp	r3, #0
 801272a:	d01d      	beq.n	8012768 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 801272c:	463b      	mov	r3, r7
 801272e:	4618      	mov	r0, r3
 8012730:	f7fc fd91 	bl	800f256 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 8012734:	68fb      	ldr	r3, [r7, #12]
 8012736:	681b      	ldr	r3, [r3, #0]
 8012738:	330c      	adds	r3, #12
 801273a:	681b      	ldr	r3, [r3, #0]
 801273c:	463a      	mov	r2, r7
 801273e:	4611      	mov	r1, r2
 8012740:	68f8      	ldr	r0, [r7, #12]
 8012742:	4798      	blx	r3
 8012744:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8012746:	f9b7 3000 	ldrsh.w	r3, [r7]
 801274a:	b299      	uxth	r1, r3
 801274c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012750:	b29a      	uxth	r2, r3
 8012752:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8012756:	b298      	uxth	r0, r3
 8012758:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 801275c:	b29b      	uxth	r3, r3
 801275e:	9300      	str	r3, [sp, #0]
 8012760:	4603      	mov	r3, r0
 8012762:	68b8      	ldr	r0, [r7, #8]
 8012764:	f7f2 ffe0 	bl	8005728 <touchgfxDisplayDriverTransmitBlock>
    }
}
 8012768:	bf00      	nop
 801276a:	3710      	adds	r7, #16
 801276c:	46bd      	mov	sp, r7
 801276e:	bd80      	pop	{r7, pc}

08012770 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 8012770:	b580      	push	{r7, lr}
 8012772:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 8012774:	f7ff ffc1 	bl	80126fa <_ZN8touchgfx16startNewTransferEv>
}
 8012778:	bf00      	nop
 801277a:	bd80      	pop	{r7, pc}

0801277c <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 801277c:	b580      	push	{r7, lr}
 801277e:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 8012780:	f7fc f8d0 	bl	800e924 <_ZN8touchgfx3HAL11getInstanceEv>
 8012784:	4603      	mov	r3, r0
 8012786:	4618      	mov	r0, r3
 8012788:	f7ff fe54 	bl	8012434 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 801278c:	f7fe ffe6 	bl	801175c <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 8012790:	bf00      	nop
 8012792:	bd80      	pop	{r7, pc}

08012794 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 8012794:	b480      	push	{r7}
 8012796:	b083      	sub	sp, #12
 8012798:	af00      	add	r7, sp, #0
 801279a:	6078      	str	r0, [r7, #4]
 801279c:	4a04      	ldr	r2, [pc, #16]	; (80127b0 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 801279e:	687b      	ldr	r3, [r7, #4]
 80127a0:	601a      	str	r2, [r3, #0]
 80127a2:	687b      	ldr	r3, [r7, #4]
 80127a4:	4618      	mov	r0, r3
 80127a6:	370c      	adds	r7, #12
 80127a8:	46bd      	mov	sp, r7
 80127aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80127ae:	4770      	bx	lr
 80127b0:	0802b9e0 	.word	0x0802b9e0

080127b4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 80127b4:	b5b0      	push	{r4, r5, r7, lr}
 80127b6:	b084      	sub	sp, #16
 80127b8:	af00      	add	r7, sp, #0
 80127ba:	6078      	str	r0, [r7, #4]
    {
 80127bc:	687b      	ldr	r3, [r7, #4]
 80127be:	4618      	mov	r0, r3
 80127c0:	f7ff ffe8 	bl	8012794 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 80127c4:	4a1a      	ldr	r2, [pc, #104]	; (8012830 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 80127c6:	687b      	ldr	r3, [r7, #4]
 80127c8:	601a      	str	r2, [r3, #0]
 80127ca:	687b      	ldr	r3, [r7, #4]
 80127cc:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 80127d0:	3308      	adds	r3, #8
 80127d2:	2402      	movs	r4, #2
 80127d4:	461d      	mov	r5, r3
 80127d6:	e004      	b.n	80127e2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 80127d8:	4628      	mov	r0, r5
 80127da:	f7fc fd3c 	bl	800f256 <_ZN8touchgfx4RectC1Ev>
 80127de:	3508      	adds	r5, #8
 80127e0:	3c01      	subs	r4, #1
 80127e2:	2c00      	cmp	r4, #0
 80127e4:	daf8      	bge.n	80127d8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 80127e6:	687b      	ldr	r3, [r7, #4]
 80127e8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80127ec:	461a      	mov	r2, r3
 80127ee:	f04f 33ff 	mov.w	r3, #4294967295
 80127f2:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        drawingBlock = -1;
 80127f6:	687b      	ldr	r3, [r7, #4]
 80127f8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80127fc:	461a      	mov	r2, r3
 80127fe:	f04f 33ff 	mov.w	r3, #4294967295
 8012802:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 8012806:	2300      	movs	r3, #0
 8012808:	60fb      	str	r3, [r7, #12]
 801280a:	e008      	b.n	801281e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 801280c:	687a      	ldr	r2, [r7, #4]
 801280e:	68fb      	ldr	r3, [r7, #12]
 8012810:	4413      	add	r3, r2
 8012812:	3304      	adds	r3, #4
 8012814:	2200      	movs	r2, #0
 8012816:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 8012818:	68fb      	ldr	r3, [r7, #12]
 801281a:	3301      	adds	r3, #1
 801281c:	60fb      	str	r3, [r7, #12]
 801281e:	68fb      	ldr	r3, [r7, #12]
 8012820:	2b02      	cmp	r3, #2
 8012822:	d9f3      	bls.n	801280c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 8012824:	687b      	ldr	r3, [r7, #4]
 8012826:	4618      	mov	r0, r3
 8012828:	3710      	adds	r7, #16
 801282a:	46bd      	mov	sp, r7
 801282c:	bdb0      	pop	{r4, r5, r7, pc}
 801282e:	bf00      	nop
 8012830:	0802b8dc 	.word	0x0802b8dc

08012834 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 8012834:	b580      	push	{r7, lr}
 8012836:	b082      	sub	sp, #8
 8012838:	af00      	add	r7, sp, #0
 801283a:	6078      	str	r0, [r7, #4]
 801283c:	4a05      	ldr	r2, [pc, #20]	; (8012854 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 801283e:	687b      	ldr	r3, [r7, #4]
 8012840:	601a      	str	r2, [r3, #0]
 8012842:	687b      	ldr	r3, [r7, #4]
 8012844:	4618      	mov	r0, r3
 8012846:	f7ff fdd5 	bl	80123f4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 801284a:	687b      	ldr	r3, [r7, #4]
 801284c:	4618      	mov	r0, r3
 801284e:	3708      	adds	r7, #8
 8012850:	46bd      	mov	sp, r7
 8012852:	bd80      	pop	{r7, pc}
 8012854:	0802b8dc 	.word	0x0802b8dc

08012858 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 8012858:	b580      	push	{r7, lr}
 801285a:	b082      	sub	sp, #8
 801285c:	af00      	add	r7, sp, #0
 801285e:	6078      	str	r0, [r7, #4]
 8012860:	6878      	ldr	r0, [r7, #4]
 8012862:	f7ff ffe7 	bl	8012834 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 8012866:	f241 61a8 	movw	r1, #5800	; 0x16a8
 801286a:	6878      	ldr	r0, [r7, #4]
 801286c:	f014 fbd9 	bl	8027022 <_ZdlPvj>
 8012870:	687b      	ldr	r3, [r7, #4]
 8012872:	4618      	mov	r0, r3
 8012874:	3708      	adds	r7, #8
 8012876:	46bd      	mov	sp, r7
 8012878:	bd80      	pop	{r7, pc}
	...

0801287c <_Z41__static_initialization_and_destruction_0ii>:
 801287c:	b580      	push	{r7, lr}
 801287e:	b082      	sub	sp, #8
 8012880:	af00      	add	r7, sp, #0
 8012882:	6078      	str	r0, [r7, #4]
 8012884:	6039      	str	r1, [r7, #0]
 8012886:	687b      	ldr	r3, [r7, #4]
 8012888:	2b01      	cmp	r3, #1
 801288a:	d107      	bne.n	801289c <_Z41__static_initialization_and_destruction_0ii+0x20>
 801288c:	683b      	ldr	r3, [r7, #0]
 801288e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012892:	4293      	cmp	r3, r2
 8012894:	d102      	bne.n	801289c <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 8012896:	4809      	ldr	r0, [pc, #36]	; (80128bc <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8012898:	f7ff ff8c 	bl	80127b4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 801289c:	687b      	ldr	r3, [r7, #4]
 801289e:	2b00      	cmp	r3, #0
 80128a0:	d107      	bne.n	80128b2 <_Z41__static_initialization_and_destruction_0ii+0x36>
 80128a2:	683b      	ldr	r3, [r7, #0]
 80128a4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80128a8:	4293      	cmp	r3, r2
 80128aa:	d102      	bne.n	80128b2 <_Z41__static_initialization_and_destruction_0ii+0x36>
 80128ac:	4803      	ldr	r0, [pc, #12]	; (80128bc <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80128ae:	f7ff ffc1 	bl	8012834 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 80128b2:	bf00      	nop
 80128b4:	3708      	adds	r7, #8
 80128b6:	46bd      	mov	sp, r7
 80128b8:	bd80      	pop	{r7, pc}
 80128ba:	bf00      	nop
 80128bc:	200242e4 	.word	0x200242e4

080128c0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 80128c0:	b580      	push	{r7, lr}
 80128c2:	b086      	sub	sp, #24
 80128c4:	af00      	add	r7, sp, #0
 80128c6:	60f8      	str	r0, [r7, #12]
 80128c8:	4608      	mov	r0, r1
 80128ca:	4611      	mov	r1, r2
 80128cc:	461a      	mov	r2, r3
 80128ce:	4603      	mov	r3, r0
 80128d0:	817b      	strh	r3, [r7, #10]
 80128d2:	460b      	mov	r3, r1
 80128d4:	813b      	strh	r3, [r7, #8]
 80128d6:	4613      	mov	r3, r2
 80128d8:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 80128da:	68fb      	ldr	r3, [r7, #12]
 80128dc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80128e0:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80128e4:	3301      	adds	r3, #1
 80128e6:	68fa      	ldr	r2, [r7, #12]
 80128e8:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80128ec:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        if (drawingBlock == blocks)
 80128f0:	68fb      	ldr	r3, [r7, #12]
 80128f2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80128f6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80128fa:	2b03      	cmp	r3, #3
 80128fc:	d109      	bne.n	8012912 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 80128fe:	68fb      	ldr	r3, [r7, #12]
 8012900:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012904:	461a      	mov	r2, r3
 8012906:	2300      	movs	r3, #0
 8012908:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 801290c:	e001      	b.n	8012912 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 801290e:	f7ff fee6 	bl	80126de <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 8012912:	68fb      	ldr	r3, [r7, #12]
 8012914:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012918:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 801291c:	68fa      	ldr	r2, [r7, #12]
 801291e:	4413      	add	r3, r2
 8012920:	791b      	ldrb	r3, [r3, #4]
 8012922:	b2db      	uxtb	r3, r3
 8012924:	2b00      	cmp	r3, #0
 8012926:	bf14      	ite	ne
 8012928:	2301      	movne	r3, #1
 801292a:	2300      	moveq	r3, #0
 801292c:	b2db      	uxtb	r3, r3
 801292e:	2b00      	cmp	r3, #0
 8012930:	d1ed      	bne.n	801290e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 8012932:	68fb      	ldr	r3, [r7, #12]
 8012934:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012938:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 801293c:	68fa      	ldr	r2, [r7, #12]
 801293e:	4413      	add	r3, r2
 8012940:	791b      	ldrb	r3, [r3, #4]
 8012942:	b2db      	uxtb	r3, r3
 8012944:	2b00      	cmp	r3, #0
 8012946:	d005      	beq.n	8012954 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 8012948:	4b38      	ldr	r3, [pc, #224]	; (8012a2c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 801294a:	4a39      	ldr	r2, [pc, #228]	; (8012a30 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 801294c:	21aa      	movs	r1, #170	; 0xaa
 801294e:	4839      	ldr	r0, [pc, #228]	; (8012a34 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 8012950:	f016 fa8a 	bl	8028e68 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 8012954:	68fb      	ldr	r3, [r7, #12]
 8012956:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801295a:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 801295e:	68fa      	ldr	r2, [r7, #12]
 8012960:	4413      	add	r3, r2
 8012962:	2201      	movs	r2, #1
 8012964:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 8012966:	88fb      	ldrh	r3, [r7, #6]
 8012968:	005b      	lsls	r3, r3, #1
 801296a:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 801296c:	697b      	ldr	r3, [r7, #20]
 801296e:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 8012972:	fbb2 f3f3 	udiv	r3, r2, r3
 8012976:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 8012978:	68fb      	ldr	r3, [r7, #12]
 801297a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801297e:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 8012982:	4613      	mov	r3, r2
 8012984:	011b      	lsls	r3, r3, #4
 8012986:	1a9b      	subs	r3, r3, r2
 8012988:	01db      	lsls	r3, r3, #7
 801298a:	3308      	adds	r3, #8
 801298c:	68fa      	ldr	r2, [r7, #12]
 801298e:	441a      	add	r2, r3
 8012990:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012992:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 8012994:	68fb      	ldr	r3, [r7, #12]
 8012996:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 801299a:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 801299e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80129a2:	68fb      	ldr	r3, [r7, #12]
 80129a4:	f202 22d1 	addw	r2, r2, #721	; 0x2d1
 80129a8:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 80129ac:	68fb      	ldr	r3, [r7, #12]
 80129ae:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80129b2:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80129b6:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 80129ba:	68fa      	ldr	r2, [r7, #12]
 80129bc:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80129c0:	00db      	lsls	r3, r3, #3
 80129c2:	4413      	add	r3, r2
 80129c4:	460a      	mov	r2, r1
 80129c6:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 80129c8:	68fb      	ldr	r3, [r7, #12]
 80129ca:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80129ce:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80129d2:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 80129d6:	68fa      	ldr	r2, [r7, #12]
 80129d8:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 80129dc:	00db      	lsls	r3, r3, #3
 80129de:	4413      	add	r3, r2
 80129e0:	460a      	mov	r2, r1
 80129e2:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 80129e4:	8c3a      	ldrh	r2, [r7, #32]
 80129e6:	693b      	ldr	r3, [r7, #16]
 80129e8:	429a      	cmp	r2, r3
 80129ea:	bfa8      	it	ge
 80129ec:	461a      	movge	r2, r3
 80129ee:	68fb      	ldr	r3, [r7, #12]
 80129f0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80129f4:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 80129f8:	b211      	sxth	r1, r2
 80129fa:	68fa      	ldr	r2, [r7, #12]
 80129fc:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8012a00:	00db      	lsls	r3, r3, #3
 8012a02:	4413      	add	r3, r2
 8012a04:	460a      	mov	r2, r1
 8012a06:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 8012a08:	68fb      	ldr	r3, [r7, #12]
 8012a0a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012a0e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012a12:	68fa      	ldr	r2, [r7, #12]
 8012a14:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8012a18:	00db      	lsls	r3, r3, #3
 8012a1a:	4413      	add	r3, r2
 8012a1c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8012a20:	b29b      	uxth	r3, r3
    }
 8012a22:	4618      	mov	r0, r3
 8012a24:	3718      	adds	r7, #24
 8012a26:	46bd      	mov	sp, r7
 8012a28:	bd80      	pop	{r7, pc}
 8012a2a:	bf00      	nop
 8012a2c:	0802a99c 	.word	0x0802a99c
 8012a30:	0802a9bc 	.word	0x0802a9bc
 8012a34:	0802aaf0 	.word	0x0802aaf0

08012a38 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 8012a38:	b580      	push	{r7, lr}
 8012a3a:	b082      	sub	sp, #8
 8012a3c:	af00      	add	r7, sp, #0
 8012a3e:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 8012a40:	687b      	ldr	r3, [r7, #4]
 8012a42:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012a46:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012a4a:	687a      	ldr	r2, [r7, #4]
 8012a4c:	4413      	add	r3, r2
 8012a4e:	791b      	ldrb	r3, [r3, #4]
 8012a50:	b2db      	uxtb	r3, r3
 8012a52:	2b01      	cmp	r3, #1
 8012a54:	d005      	beq.n	8012a62 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 8012a56:	4b0a      	ldr	r3, [pc, #40]	; (8012a80 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 8012a58:	4a0a      	ldr	r2, [pc, #40]	; (8012a84 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 8012a5a:	21b9      	movs	r1, #185	; 0xb9
 8012a5c:	480a      	ldr	r0, [pc, #40]	; (8012a88 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 8012a5e:	f016 fa03 	bl	8028e68 <__assert_func>
        state[drawingBlock] = DRAWN;
 8012a62:	687b      	ldr	r3, [r7, #4]
 8012a64:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012a68:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012a6c:	687a      	ldr	r2, [r7, #4]
 8012a6e:	4413      	add	r3, r2
 8012a70:	2202      	movs	r2, #2
 8012a72:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 8012a74:	f7ff fe3a 	bl	80126ec <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 8012a78:	bf00      	nop
 8012a7a:	3708      	adds	r7, #8
 8012a7c:	46bd      	mov	sp, r7
 8012a7e:	bd80      	pop	{r7, pc}
 8012a80:	0802ab44 	.word	0x0802ab44
 8012a84:	0802ab68 	.word	0x0802ab68
 8012a88:	0802aaf0 	.word	0x0802aaf0

08012a8c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 8012a8c:	b480      	push	{r7}
 8012a8e:	b085      	sub	sp, #20
 8012a90:	af00      	add	r7, sp, #0
 8012a92:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 8012a94:	2300      	movs	r3, #0
 8012a96:	60fb      	str	r3, [r7, #12]
 8012a98:	e011      	b.n	8012abe <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 8012a9a:	687a      	ldr	r2, [r7, #4]
 8012a9c:	68fb      	ldr	r3, [r7, #12]
 8012a9e:	4413      	add	r3, r2
 8012aa0:	3304      	adds	r3, #4
 8012aa2:	781b      	ldrb	r3, [r3, #0]
 8012aa4:	b2db      	uxtb	r3, r3
 8012aa6:	2b02      	cmp	r3, #2
 8012aa8:	bf0c      	ite	eq
 8012aaa:	2301      	moveq	r3, #1
 8012aac:	2300      	movne	r3, #0
 8012aae:	b2db      	uxtb	r3, r3
 8012ab0:	2b00      	cmp	r3, #0
 8012ab2:	d001      	beq.n	8012ab8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 8012ab4:	2301      	movs	r3, #1
 8012ab6:	e006      	b.n	8012ac6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 8012ab8:	68fb      	ldr	r3, [r7, #12]
 8012aba:	3301      	adds	r3, #1
 8012abc:	60fb      	str	r3, [r7, #12]
 8012abe:	68fb      	ldr	r3, [r7, #12]
 8012ac0:	2b02      	cmp	r3, #2
 8012ac2:	d9ea      	bls.n	8012a9a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 8012ac4:	2300      	movs	r3, #0
    }
 8012ac6:	4618      	mov	r0, r3
 8012ac8:	3714      	adds	r7, #20
 8012aca:	46bd      	mov	sp, r7
 8012acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ad0:	4770      	bx	lr
	...

08012ad4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 8012ad4:	b580      	push	{r7, lr}
 8012ad6:	b082      	sub	sp, #8
 8012ad8:	af00      	add	r7, sp, #0
 8012ada:	6078      	str	r0, [r7, #4]
 8012adc:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 8012ade:	687b      	ldr	r3, [r7, #4]
 8012ae0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012ae4:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012ae8:	3301      	adds	r3, #1
 8012aea:	687a      	ldr	r2, [r7, #4]
 8012aec:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8012af0:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        if (sendingBlock == blocks)
 8012af4:	687b      	ldr	r3, [r7, #4]
 8012af6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012afa:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012afe:	2b03      	cmp	r3, #3
 8012b00:	d106      	bne.n	8012b10 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 8012b02:	687b      	ldr	r3, [r7, #4]
 8012b04:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012b08:	461a      	mov	r2, r3
 8012b0a:	2300      	movs	r3, #0
 8012b0c:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 8012b10:	687b      	ldr	r3, [r7, #4]
 8012b12:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012b16:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012b1a:	687a      	ldr	r2, [r7, #4]
 8012b1c:	4413      	add	r3, r2
 8012b1e:	791b      	ldrb	r3, [r3, #4]
 8012b20:	b2db      	uxtb	r3, r3
 8012b22:	2b02      	cmp	r3, #2
 8012b24:	d005      	beq.n	8012b32 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 8012b26:	4b16      	ldr	r3, [pc, #88]	; (8012b80 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 8012b28:	4a16      	ldr	r2, [pc, #88]	; (8012b84 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 8012b2a:	21dd      	movs	r1, #221	; 0xdd
 8012b2c:	4816      	ldr	r0, [pc, #88]	; (8012b88 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 8012b2e:	f016 f99b 	bl	8028e68 <__assert_func>
        rect = blockRect[sendingBlock];
 8012b32:	687b      	ldr	r3, [r7, #4]
 8012b34:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012b38:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012b3c:	683a      	ldr	r2, [r7, #0]
 8012b3e:	6879      	ldr	r1, [r7, #4]
 8012b40:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8012b44:	00db      	lsls	r3, r3, #3
 8012b46:	440b      	add	r3, r1
 8012b48:	cb03      	ldmia	r3!, {r0, r1}
 8012b4a:	6010      	str	r0, [r2, #0]
 8012b4c:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 8012b4e:	687b      	ldr	r3, [r7, #4]
 8012b50:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012b54:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012b58:	687a      	ldr	r2, [r7, #4]
 8012b5a:	4413      	add	r3, r2
 8012b5c:	2203      	movs	r2, #3
 8012b5e:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 8012b60:	687b      	ldr	r3, [r7, #4]
 8012b62:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012b66:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	; 0x6a0
 8012b6a:	4613      	mov	r3, r2
 8012b6c:	011b      	lsls	r3, r3, #4
 8012b6e:	1a9b      	subs	r3, r3, r2
 8012b70:	01db      	lsls	r3, r3, #7
 8012b72:	3308      	adds	r3, #8
 8012b74:	687a      	ldr	r2, [r7, #4]
 8012b76:	4413      	add	r3, r2
    }
 8012b78:	4618      	mov	r0, r3
 8012b7a:	3708      	adds	r7, #8
 8012b7c:	46bd      	mov	sp, r7
 8012b7e:	bd80      	pop	{r7, pc}
 8012b80:	0802ac3c 	.word	0x0802ac3c
 8012b84:	0802ac5c 	.word	0x0802ac5c
 8012b88:	0802aaf0 	.word	0x0802aaf0

08012b8c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 8012b8c:	b580      	push	{r7, lr}
 8012b8e:	b084      	sub	sp, #16
 8012b90:	af00      	add	r7, sp, #0
 8012b92:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 8012b94:	687b      	ldr	r3, [r7, #4]
 8012b96:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012b9a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012b9e:	3301      	adds	r3, #1
 8012ba0:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 8012ba2:	68fb      	ldr	r3, [r7, #12]
 8012ba4:	2b03      	cmp	r3, #3
 8012ba6:	d101      	bne.n	8012bac <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 8012ba8:	2300      	movs	r3, #0
 8012baa:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 8012bac:	687a      	ldr	r2, [r7, #4]
 8012bae:	68fb      	ldr	r3, [r7, #12]
 8012bb0:	4413      	add	r3, r2
 8012bb2:	3304      	adds	r3, #4
 8012bb4:	781b      	ldrb	r3, [r3, #0]
 8012bb6:	b2db      	uxtb	r3, r3
 8012bb8:	2b02      	cmp	r3, #2
 8012bba:	d005      	beq.n	8012bc8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 8012bbc:	4b07      	ldr	r3, [pc, #28]	; (8012bdc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 8012bbe:	4a08      	ldr	r2, [pc, #32]	; (8012be0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 8012bc0:	21ea      	movs	r1, #234	; 0xea
 8012bc2:	4808      	ldr	r0, [pc, #32]	; (8012be4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 8012bc4:	f016 f950 	bl	8028e68 <__assert_func>
        return blockRect[nextSendingBlock];
 8012bc8:	68fb      	ldr	r3, [r7, #12]
 8012bca:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 8012bce:	00db      	lsls	r3, r3, #3
 8012bd0:	687a      	ldr	r2, [r7, #4]
 8012bd2:	4413      	add	r3, r2
    }
 8012bd4:	4618      	mov	r0, r3
 8012bd6:	3710      	adds	r7, #16
 8012bd8:	46bd      	mov	sp, r7
 8012bda:	bd80      	pop	{r7, pc}
 8012bdc:	0802ad5c 	.word	0x0802ad5c
 8012be0:	0802ad80 	.word	0x0802ad80
 8012be4:	0802aaf0 	.word	0x0802aaf0

08012be8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 8012be8:	b480      	push	{r7}
 8012bea:	b085      	sub	sp, #20
 8012bec:	af00      	add	r7, sp, #0
 8012bee:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 8012bf0:	687b      	ldr	r3, [r7, #4]
 8012bf2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012bf6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 8012bfa:	3301      	adds	r3, #1
 8012bfc:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 8012bfe:	68fb      	ldr	r3, [r7, #12]
 8012c00:	2b03      	cmp	r3, #3
 8012c02:	d101      	bne.n	8012c08 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 8012c04:	2300      	movs	r3, #0
 8012c06:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 8012c08:	687a      	ldr	r2, [r7, #4]
 8012c0a:	68fb      	ldr	r3, [r7, #12]
 8012c0c:	4413      	add	r3, r2
 8012c0e:	3304      	adds	r3, #4
 8012c10:	781b      	ldrb	r3, [r3, #0]
 8012c12:	b2db      	uxtb	r3, r3
 8012c14:	2b00      	cmp	r3, #0
 8012c16:	bf0c      	ite	eq
 8012c18:	2301      	moveq	r3, #1
 8012c1a:	2300      	movne	r3, #0
 8012c1c:	b2db      	uxtb	r3, r3
    }
 8012c1e:	4618      	mov	r0, r3
 8012c20:	3714      	adds	r7, #20
 8012c22:	46bd      	mov	sp, r7
 8012c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c28:	4770      	bx	lr
	...

08012c2c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 8012c2c:	b580      	push	{r7, lr}
 8012c2e:	b082      	sub	sp, #8
 8012c30:	af00      	add	r7, sp, #0
 8012c32:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 8012c34:	687b      	ldr	r3, [r7, #4]
 8012c36:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012c3a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012c3e:	687a      	ldr	r2, [r7, #4]
 8012c40:	4413      	add	r3, r2
 8012c42:	791b      	ldrb	r3, [r3, #4]
 8012c44:	b2db      	uxtb	r3, r3
 8012c46:	2b03      	cmp	r3, #3
 8012c48:	d005      	beq.n	8012c56 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 8012c4a:	4b09      	ldr	r3, [pc, #36]	; (8012c70 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 8012c4c:	4a09      	ldr	r2, [pc, #36]	; (8012c74 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 8012c4e:	21ff      	movs	r1, #255	; 0xff
 8012c50:	4809      	ldr	r0, [pc, #36]	; (8012c78 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 8012c52:	f016 f909 	bl	8028e68 <__assert_func>
        state[sendingBlock] = EMPTY;
 8012c56:	687b      	ldr	r3, [r7, #4]
 8012c58:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8012c5c:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 8012c60:	687a      	ldr	r2, [r7, #4]
 8012c62:	4413      	add	r3, r2
 8012c64:	2200      	movs	r2, #0
 8012c66:	711a      	strb	r2, [r3, #4]
    }
 8012c68:	bf00      	nop
 8012c6a:	3708      	adds	r7, #8
 8012c6c:	46bd      	mov	sp, r7
 8012c6e:	bd80      	pop	{r7, pc}
 8012c70:	0802ae60 	.word	0x0802ae60
 8012c74:	0802ae80 	.word	0x0802ae80
 8012c78:	0802aaf0 	.word	0x0802aaf0

08012c7c <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8012c7c:	b580      	push	{r7, lr}
 8012c7e:	af00      	add	r7, sp, #0
 8012c80:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012c84:	2001      	movs	r0, #1
 8012c86:	f7ff fdf9 	bl	801287c <_Z41__static_initialization_and_destruction_0ii>
 8012c8a:	bd80      	pop	{r7, pc}

08012c8c <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8012c8c:	b580      	push	{r7, lr}
 8012c8e:	af00      	add	r7, sp, #0
 8012c90:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012c94:	2000      	movs	r0, #0
 8012c96:	f7ff fdf1 	bl	801287c <_Z41__static_initialization_and_destruction_0ii>
 8012c9a:	bd80      	pop	{r7, pc}

08012c9c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8012c9c:	8880      	ldrh	r0, [r0, #4]
 8012c9e:	4770      	bx	lr

08012ca0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8012ca0:	b570      	push	{r4, r5, r6, lr}
 8012ca2:	6803      	ldr	r3, [r0, #0]
 8012ca4:	4605      	mov	r5, r0
 8012ca6:	460c      	mov	r4, r1
 8012ca8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012caa:	2100      	movs	r1, #0
 8012cac:	4798      	blx	r3
 8012cae:	682b      	ldr	r3, [r5, #0]
 8012cb0:	4606      	mov	r6, r0
 8012cb2:	6a1b      	ldr	r3, [r3, #32]
 8012cb4:	4628      	mov	r0, r5
 8012cb6:	4798      	blx	r3
 8012cb8:	1ba4      	subs	r4, r4, r6
 8012cba:	b2a4      	uxth	r4, r4
 8012cbc:	fbb4 f0f0 	udiv	r0, r4, r0
 8012cc0:	bd70      	pop	{r4, r5, r6, pc}

08012cc2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8012cc2:	2300      	movs	r3, #0
 8012cc4:	8083      	strh	r3, [r0, #4]
 8012cc6:	4770      	bx	lr

08012cc8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8012cc8:	b510      	push	{r4, lr}
 8012cca:	6803      	ldr	r3, [r0, #0]
 8012ccc:	8881      	ldrh	r1, [r0, #4]
 8012cce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012cd0:	4604      	mov	r4, r0
 8012cd2:	4798      	blx	r3
 8012cd4:	88a3      	ldrh	r3, [r4, #4]
 8012cd6:	3301      	adds	r3, #1
 8012cd8:	80a3      	strh	r3, [r4, #4]
 8012cda:	bd10      	pop	{r4, pc}

08012cdc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8012cdc:	6803      	ldr	r3, [r0, #0]
 8012cde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012ce0:	4718      	bx	r3

08012ce2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8012ce2:	4770      	bx	lr

08012ce4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012ce4:	4a02      	ldr	r2, [pc, #8]	; (8012cf0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012ce6:	6002      	str	r2, [r0, #0]
 8012ce8:	2200      	movs	r2, #0
 8012cea:	8082      	strh	r2, [r0, #4]
 8012cec:	4770      	bx	lr
 8012cee:	bf00      	nop
 8012cf0:	0802ba0c 	.word	0x0802ba0c

08012cf4 <_ZN8touchgfx9Container13getFirstChildEv>:
 8012cf4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012cf6:	4770      	bx	lr

08012cf8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8012cf8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012cfa:	2000      	movs	r0, #0
 8012cfc:	b12b      	cbz	r3, 8012d0a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012cfe:	b920      	cbnz	r0, 8012d0a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012d00:	1a5a      	subs	r2, r3, r1
 8012d02:	4250      	negs	r0, r2
 8012d04:	4150      	adcs	r0, r2
 8012d06:	699b      	ldr	r3, [r3, #24]
 8012d08:	e7f8      	b.n	8012cfc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8012d0a:	4770      	bx	lr

08012d0c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012d0c:	2300      	movs	r3, #0
 8012d0e:	6148      	str	r0, [r1, #20]
 8012d10:	618b      	str	r3, [r1, #24]
 8012d12:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012d14:	b913      	cbnz	r3, 8012d1c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8012d16:	6281      	str	r1, [r0, #40]	; 0x28
 8012d18:	4770      	bx	lr
 8012d1a:	4613      	mov	r3, r2
 8012d1c:	699a      	ldr	r2, [r3, #24]
 8012d1e:	2a00      	cmp	r2, #0
 8012d20:	d1fb      	bne.n	8012d1a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8012d22:	6199      	str	r1, [r3, #24]
 8012d24:	4770      	bx	lr

08012d26 <_ZN8touchgfx9Container9removeAllEv>:
 8012d26:	2200      	movs	r2, #0
 8012d28:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012d2a:	b123      	cbz	r3, 8012d36 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012d2c:	6999      	ldr	r1, [r3, #24]
 8012d2e:	6281      	str	r1, [r0, #40]	; 0x28
 8012d30:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012d34:	e7f8      	b.n	8012d28 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8012d36:	4770      	bx	lr

08012d38 <_ZN8touchgfx9Container6unlinkEv>:
 8012d38:	2300      	movs	r3, #0
 8012d3a:	6283      	str	r3, [r0, #40]	; 0x28
 8012d3c:	4770      	bx	lr

08012d3e <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012d3e:	2200      	movs	r2, #0
 8012d40:	8002      	strh	r2, [r0, #0]
 8012d42:	8042      	strh	r2, [r0, #2]
 8012d44:	8082      	strh	r2, [r0, #4]
 8012d46:	80c2      	strh	r2, [r0, #6]
 8012d48:	4770      	bx	lr

08012d4a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8012d4a:	b570      	push	{r4, r5, r6, lr}
 8012d4c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012d4e:	460d      	mov	r5, r1
 8012d50:	4616      	mov	r6, r2
 8012d52:	b13c      	cbz	r4, 8012d64 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012d54:	6823      	ldr	r3, [r4, #0]
 8012d56:	4620      	mov	r0, r4
 8012d58:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8012d5a:	4632      	mov	r2, r6
 8012d5c:	4629      	mov	r1, r5
 8012d5e:	4798      	blx	r3
 8012d60:	69a4      	ldr	r4, [r4, #24]
 8012d62:	e7f6      	b.n	8012d52 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8012d64:	bd70      	pop	{r4, r5, r6, pc}

08012d66 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8012d66:	b538      	push	{r3, r4, r5, lr}
 8012d68:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012d6a:	460d      	mov	r5, r1
 8012d6c:	b134      	cbz	r4, 8012d7c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8012d6e:	682b      	ldr	r3, [r5, #0]
 8012d70:	4621      	mov	r1, r4
 8012d72:	689b      	ldr	r3, [r3, #8]
 8012d74:	4628      	mov	r0, r5
 8012d76:	4798      	blx	r3
 8012d78:	69a4      	ldr	r4, [r4, #24]
 8012d7a:	e7f7      	b.n	8012d6c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012d7c:	bd38      	pop	{r3, r4, r5, pc}

08012d7e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8012d7e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012d80:	b19b      	cbz	r3, 8012daa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012d82:	428b      	cmp	r3, r1
 8012d84:	d109      	bne.n	8012d9a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8012d86:	699a      	ldr	r2, [r3, #24]
 8012d88:	2100      	movs	r1, #0
 8012d8a:	6159      	str	r1, [r3, #20]
 8012d8c:	6282      	str	r2, [r0, #40]	; 0x28
 8012d8e:	b902      	cbnz	r2, 8012d92 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8012d90:	4770      	bx	lr
 8012d92:	6199      	str	r1, [r3, #24]
 8012d94:	4770      	bx	lr
 8012d96:	4613      	mov	r3, r2
 8012d98:	b13a      	cbz	r2, 8012daa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012d9a:	699a      	ldr	r2, [r3, #24]
 8012d9c:	428a      	cmp	r2, r1
 8012d9e:	d1fa      	bne.n	8012d96 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8012da0:	698a      	ldr	r2, [r1, #24]
 8012da2:	619a      	str	r2, [r3, #24]
 8012da4:	2300      	movs	r3, #0
 8012da6:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8012daa:	4770      	bx	lr

08012dac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8012dac:	b410      	push	{r4}
 8012dae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012db0:	4604      	mov	r4, r0
 8012db2:	b92b      	cbnz	r3, 8012dc0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8012db4:	6803      	ldr	r3, [r0, #0]
 8012db6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012dba:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8012dbc:	4611      	mov	r1, r2
 8012dbe:	4718      	bx	r3
 8012dc0:	b941      	cbnz	r1, 8012dd4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8012dc2:	6193      	str	r3, [r2, #24]
 8012dc4:	6282      	str	r2, [r0, #40]	; 0x28
 8012dc6:	6154      	str	r4, [r2, #20]
 8012dc8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012dcc:	4770      	bx	lr
 8012dce:	4603      	mov	r3, r0
 8012dd0:	2800      	cmp	r0, #0
 8012dd2:	d0f9      	beq.n	8012dc8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8012dd4:	4299      	cmp	r1, r3
 8012dd6:	6998      	ldr	r0, [r3, #24]
 8012dd8:	d1f9      	bne.n	8012dce <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8012dda:	6190      	str	r0, [r2, #24]
 8012ddc:	618a      	str	r2, [r1, #24]
 8012dde:	e7f2      	b.n	8012dc6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08012de0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8012de0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012de4:	461f      	mov	r7, r3
 8012de6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8012dea:	460d      	mov	r5, r1
 8012dec:	4616      	mov	r6, r2
 8012dee:	b103      	cbz	r3, 8012df2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8012df0:	6038      	str	r0, [r7, #0]
 8012df2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012df4:	b314      	cbz	r4, 8012e3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8012df6:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012dfa:	b1eb      	cbz	r3, 8012e38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012dfc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012e00:	428d      	cmp	r5, r1
 8012e02:	db19      	blt.n	8012e38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012e04:	8923      	ldrh	r3, [r4, #8]
 8012e06:	b289      	uxth	r1, r1
 8012e08:	440b      	add	r3, r1
 8012e0a:	b21b      	sxth	r3, r3
 8012e0c:	429d      	cmp	r5, r3
 8012e0e:	da13      	bge.n	8012e38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012e10:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012e14:	4296      	cmp	r6, r2
 8012e16:	db0f      	blt.n	8012e38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012e18:	8963      	ldrh	r3, [r4, #10]
 8012e1a:	b292      	uxth	r2, r2
 8012e1c:	4413      	add	r3, r2
 8012e1e:	b21b      	sxth	r3, r3
 8012e20:	429e      	cmp	r6, r3
 8012e22:	da09      	bge.n	8012e38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012e24:	6823      	ldr	r3, [r4, #0]
 8012e26:	1ab2      	subs	r2, r6, r2
 8012e28:	1a69      	subs	r1, r5, r1
 8012e2a:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8012e2e:	b212      	sxth	r2, r2
 8012e30:	463b      	mov	r3, r7
 8012e32:	b209      	sxth	r1, r1
 8012e34:	4620      	mov	r0, r4
 8012e36:	47c0      	blx	r8
 8012e38:	69a4      	ldr	r4, [r4, #24]
 8012e3a:	e7db      	b.n	8012df4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012e3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012e40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e44:	4c6e      	ldr	r4, [pc, #440]	; (8013000 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8012e46:	b0a1      	sub	sp, #132	; 0x84
 8012e48:	6824      	ldr	r4, [r4, #0]
 8012e4a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8012e4c:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8012e50:	9303      	str	r3, [sp, #12]
 8012e52:	2400      	movs	r4, #0
 8012e54:	802c      	strh	r4, [r5, #0]
 8012e56:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8012e58:	802c      	strh	r4, [r5, #0]
 8012e5a:	601c      	str	r4, [r3, #0]
 8012e5c:	4606      	mov	r6, r0
 8012e5e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012e62:	f7ff ffbd 	bl	8012de0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012e66:	f1b9 0f03 	cmp.w	r9, #3
 8012e6a:	f340 80c2 	ble.w	8012ff2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012e6e:	4631      	mov	r1, r6
 8012e70:	a80c      	add	r0, sp, #48	; 0x30
 8012e72:	f004 fd03 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012e76:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8012e7a:	9306      	str	r3, [sp, #24]
 8012e7c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012e80:	9307      	str	r3, [sp, #28]
 8012e82:	9b03      	ldr	r3, [sp, #12]
 8012e84:	f8d3 a000 	ldr.w	sl, [r3]
 8012e88:	f1ba 0f00 	cmp.w	sl, #0
 8012e8c:	f000 80b4 	beq.w	8012ff8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012e90:	4651      	mov	r1, sl
 8012e92:	a810      	add	r0, sp, #64	; 0x40
 8012e94:	f004 fcf2 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012e98:	9b01      	ldr	r3, [sp, #4]
 8012e9a:	9a06      	ldr	r2, [sp, #24]
 8012e9c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8012ea0:	189d      	adds	r5, r3, r2
 8012ea2:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8012ea6:	9a07      	ldr	r2, [sp, #28]
 8012ea8:	2002      	movs	r0, #2
 8012eaa:	fb91 f1f0 	sdiv	r1, r1, r0
 8012eae:	4419      	add	r1, r3
 8012eb0:	1a6d      	subs	r5, r5, r1
 8012eb2:	9b02      	ldr	r3, [sp, #8]
 8012eb4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012eb8:	4413      	add	r3, r2
 8012eba:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8012ebe:	fb92 f2f0 	sdiv	r2, r2, r0
 8012ec2:	440a      	add	r2, r1
 8012ec4:	1a9b      	subs	r3, r3, r2
 8012ec6:	435b      	muls	r3, r3
 8012ec8:	fb05 3505 	mla	r5, r5, r5, r3
 8012ecc:	4f4d      	ldr	r7, [pc, #308]	; (8013004 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8012ece:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012ed0:	ac10      	add	r4, sp, #64	; 0x40
 8012ed2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012ed4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012ed6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012ed8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012eda:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012edc:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8012ee0:	f1b9 0f0c 	cmp.w	r9, #12
 8012ee4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012ee8:	f04f 0303 	mov.w	r3, #3
 8012eec:	bfc8      	it	gt
 8012eee:	4698      	movgt	r8, r3
 8012ef0:	f8cd 9000 	str.w	r9, [sp]
 8012ef4:	f04f 0400 	mov.w	r4, #0
 8012ef8:	bfdc      	itt	le
 8012efa:	f109 32ff 	addle.w	r2, r9, #4294967295
 8012efe:	fb92 f8f3 	sdivle	r8, r2, r3
 8012f02:	1c63      	adds	r3, r4, #1
 8012f04:	aa10      	add	r2, sp, #64	; 0x40
 8012f06:	f004 0401 	and.w	r4, r4, #1
 8012f0a:	9308      	str	r3, [sp, #32]
 8012f0c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8012f10:	9b00      	ldr	r3, [sp, #0]
 8012f12:	fb93 f3f8 	sdiv	r3, r3, r8
 8012f16:	b29b      	uxth	r3, r3
 8012f18:	3404      	adds	r4, #4
 8012f1a:	f04f 0b00 	mov.w	fp, #0
 8012f1e:	9304      	str	r3, [sp, #16]
 8012f20:	9a04      	ldr	r2, [sp, #16]
 8012f22:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012f26:	fb13 f302 	smulbb	r3, r3, r2
 8012f2a:	9a01      	ldr	r2, [sp, #4]
 8012f2c:	b29b      	uxth	r3, r3
 8012f2e:	1899      	adds	r1, r3, r2
 8012f30:	9305      	str	r3, [sp, #20]
 8012f32:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012f36:	b209      	sxth	r1, r1
 8012f38:	4299      	cmp	r1, r3
 8012f3a:	db4d      	blt.n	8012fd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012f3c:	8932      	ldrh	r2, [r6, #8]
 8012f3e:	4413      	add	r3, r2
 8012f40:	b21b      	sxth	r3, r3
 8012f42:	4299      	cmp	r1, r3
 8012f44:	da48      	bge.n	8012fd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012f46:	9b04      	ldr	r3, [sp, #16]
 8012f48:	6827      	ldr	r7, [r4, #0]
 8012f4a:	fb17 f703 	smulbb	r7, r7, r3
 8012f4e:	9b02      	ldr	r3, [sp, #8]
 8012f50:	b2bf      	uxth	r7, r7
 8012f52:	18fa      	adds	r2, r7, r3
 8012f54:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012f58:	b212      	sxth	r2, r2
 8012f5a:	429a      	cmp	r2, r3
 8012f5c:	db3c      	blt.n	8012fd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012f5e:	8970      	ldrh	r0, [r6, #10]
 8012f60:	4403      	add	r3, r0
 8012f62:	b21b      	sxth	r3, r3
 8012f64:	429a      	cmp	r2, r3
 8012f66:	da37      	bge.n	8012fd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012f68:	2300      	movs	r3, #0
 8012f6a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012f6c:	4630      	mov	r0, r6
 8012f6e:	ab0b      	add	r3, sp, #44	; 0x2c
 8012f70:	f7ff ff36 	bl	8012de0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012f74:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012f76:	b37a      	cbz	r2, 8012fd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012f78:	4552      	cmp	r2, sl
 8012f7a:	d02d      	beq.n	8012fd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012f7c:	4611      	mov	r1, r2
 8012f7e:	a80e      	add	r0, sp, #56	; 0x38
 8012f80:	9209      	str	r2, [sp, #36]	; 0x24
 8012f82:	f004 fc7b 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f86:	9a06      	ldr	r2, [sp, #24]
 8012f88:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012f8c:	9b01      	ldr	r3, [sp, #4]
 8012f8e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012f92:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012f96:	4413      	add	r3, r2
 8012f98:	f04f 0e02 	mov.w	lr, #2
 8012f9c:	fb91 f1fe 	sdiv	r1, r1, lr
 8012fa0:	4401      	add	r1, r0
 8012fa2:	1a58      	subs	r0, r3, r1
 8012fa4:	9a07      	ldr	r2, [sp, #28]
 8012fa6:	9b02      	ldr	r3, [sp, #8]
 8012fa8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012fac:	fb9c fcfe 	sdiv	ip, ip, lr
 8012fb0:	4413      	add	r3, r2
 8012fb2:	448c      	add	ip, r1
 8012fb4:	eba3 030c 	sub.w	r3, r3, ip
 8012fb8:	435b      	muls	r3, r3
 8012fba:	fb00 3300 	mla	r3, r0, r0, r3
 8012fbe:	42ab      	cmp	r3, r5
 8012fc0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012fc2:	d208      	bcs.n	8012fd6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012fc4:	9803      	ldr	r0, [sp, #12]
 8012fc6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012fc8:	6001      	str	r1, [r0, #0]
 8012fca:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012fcc:	9805      	ldr	r0, [sp, #20]
 8012fce:	8008      	strh	r0, [r1, #0]
 8012fd0:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012fd2:	461d      	mov	r5, r3
 8012fd4:	800f      	strh	r7, [r1, #0]
 8012fd6:	4692      	mov	sl, r2
 8012fd8:	f10b 0b01 	add.w	fp, fp, #1
 8012fdc:	f1bb 0f04 	cmp.w	fp, #4
 8012fe0:	f104 0408 	add.w	r4, r4, #8
 8012fe4:	d19c      	bne.n	8012f20 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012fe6:	9b00      	ldr	r3, [sp, #0]
 8012fe8:	9c08      	ldr	r4, [sp, #32]
 8012fea:	444b      	add	r3, r9
 8012fec:	4544      	cmp	r4, r8
 8012fee:	9300      	str	r3, [sp, #0]
 8012ff0:	d187      	bne.n	8012f02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012ff2:	b021      	add	sp, #132	; 0x84
 8012ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ff8:	f04f 35ff 	mov.w	r5, #4294967295
 8012ffc:	e766      	b.n	8012ecc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012ffe:	bf00      	nop
 8013000:	20025998 	.word	0x20025998
 8013004:	0802af50 	.word	0x0802af50

08013008 <_ZN8touchgfx4RectaNERKS0_>:
 8013008:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801300c:	f9b1 7000 	ldrsh.w	r7, [r1]
 8013010:	888c      	ldrh	r4, [r1, #4]
 8013012:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013016:	443c      	add	r4, r7
 8013018:	b2a4      	uxth	r4, r4
 801301a:	fa0f f884 	sxth.w	r8, r4
 801301e:	45c1      	cmp	r9, r8
 8013020:	da2f      	bge.n	8013082 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013022:	8882      	ldrh	r2, [r0, #4]
 8013024:	444a      	add	r2, r9
 8013026:	b292      	uxth	r2, r2
 8013028:	fa0f fe82 	sxth.w	lr, r2
 801302c:	4577      	cmp	r7, lr
 801302e:	da28      	bge.n	8013082 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013030:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8013034:	88cb      	ldrh	r3, [r1, #6]
 8013036:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801303a:	442b      	add	r3, r5
 801303c:	b21b      	sxth	r3, r3
 801303e:	429e      	cmp	r6, r3
 8013040:	da1f      	bge.n	8013082 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013042:	88c3      	ldrh	r3, [r0, #6]
 8013044:	4433      	add	r3, r6
 8013046:	b29b      	uxth	r3, r3
 8013048:	fa0f fc83 	sxth.w	ip, r3
 801304c:	4565      	cmp	r5, ip
 801304e:	da18      	bge.n	8013082 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013050:	454f      	cmp	r7, r9
 8013052:	bfb8      	it	lt
 8013054:	464f      	movlt	r7, r9
 8013056:	42b5      	cmp	r5, r6
 8013058:	bfb8      	it	lt
 801305a:	4635      	movlt	r5, r6
 801305c:	45f0      	cmp	r8, lr
 801305e:	bfd8      	it	le
 8013060:	4622      	movle	r2, r4
 8013062:	1bd2      	subs	r2, r2, r7
 8013064:	8082      	strh	r2, [r0, #4]
 8013066:	884a      	ldrh	r2, [r1, #2]
 8013068:	88c9      	ldrh	r1, [r1, #6]
 801306a:	8007      	strh	r7, [r0, #0]
 801306c:	440a      	add	r2, r1
 801306e:	b292      	uxth	r2, r2
 8013070:	b211      	sxth	r1, r2
 8013072:	458c      	cmp	ip, r1
 8013074:	bfa8      	it	ge
 8013076:	4613      	movge	r3, r2
 8013078:	1b5b      	subs	r3, r3, r5
 801307a:	80c3      	strh	r3, [r0, #6]
 801307c:	8045      	strh	r5, [r0, #2]
 801307e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013082:	2300      	movs	r3, #0
 8013084:	8003      	strh	r3, [r0, #0]
 8013086:	8043      	strh	r3, [r0, #2]
 8013088:	8083      	strh	r3, [r0, #4]
 801308a:	80c3      	strh	r3, [r0, #6]
 801308c:	e7f7      	b.n	801307e <_ZN8touchgfx4RectaNERKS0_+0x76>

0801308e <_ZNK8touchgfx4Rect7isEmptyEv>:
 801308e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013092:	2b00      	cmp	r3, #0
 8013094:	dd06      	ble.n	80130a4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8013096:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801309a:	2800      	cmp	r0, #0
 801309c:	bfcc      	ite	gt
 801309e:	2000      	movgt	r0, #0
 80130a0:	2001      	movle	r0, #1
 80130a2:	4770      	bx	lr
 80130a4:	2001      	movs	r0, #1
 80130a6:	4770      	bx	lr

080130a8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80130a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80130ac:	2300      	movs	r3, #0
 80130ae:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80130b0:	8003      	strh	r3, [r0, #0]
 80130b2:	4604      	mov	r4, r0
 80130b4:	8043      	strh	r3, [r0, #2]
 80130b6:	8083      	strh	r3, [r0, #4]
 80130b8:	80c3      	strh	r3, [r0, #6]
 80130ba:	2d00      	cmp	r5, #0
 80130bc:	d040      	beq.n	8013140 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80130be:	1d28      	adds	r0, r5, #4
 80130c0:	f7ff ffe5 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 80130c4:	b988      	cbnz	r0, 80130ea <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80130c6:	4620      	mov	r0, r4
 80130c8:	f7ff ffe1 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 80130cc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80130d0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80130d4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80130d8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80130dc:	b138      	cbz	r0, 80130ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80130de:	8022      	strh	r2, [r4, #0]
 80130e0:	8063      	strh	r3, [r4, #2]
 80130e2:	f8a4 e004 	strh.w	lr, [r4, #4]
 80130e6:	f8a4 c006 	strh.w	ip, [r4, #6]
 80130ea:	69ad      	ldr	r5, [r5, #24]
 80130ec:	e7e5      	b.n	80130ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80130ee:	f9b4 0000 	ldrsh.w	r0, [r4]
 80130f2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80130f6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80130fa:	4290      	cmp	r0, r2
 80130fc:	4607      	mov	r7, r0
 80130fe:	bfa8      	it	ge
 8013100:	4617      	movge	r7, r2
 8013102:	4472      	add	r2, lr
 8013104:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8013108:	8027      	strh	r7, [r4, #0]
 801310a:	4299      	cmp	r1, r3
 801310c:	460e      	mov	r6, r1
 801310e:	4440      	add	r0, r8
 8013110:	bfa8      	it	ge
 8013112:	461e      	movge	r6, r3
 8013114:	4471      	add	r1, lr
 8013116:	4463      	add	r3, ip
 8013118:	b200      	sxth	r0, r0
 801311a:	b212      	sxth	r2, r2
 801311c:	b209      	sxth	r1, r1
 801311e:	b21b      	sxth	r3, r3
 8013120:	4290      	cmp	r0, r2
 8013122:	bfac      	ite	ge
 8013124:	ebc7 0200 	rsbge	r2, r7, r0
 8013128:	ebc7 0202 	rsblt	r2, r7, r2
 801312c:	4299      	cmp	r1, r3
 801312e:	bfac      	ite	ge
 8013130:	ebc6 0301 	rsbge	r3, r6, r1
 8013134:	ebc6 0303 	rsblt	r3, r6, r3
 8013138:	8066      	strh	r6, [r4, #2]
 801313a:	80a2      	strh	r2, [r4, #4]
 801313c:	80e3      	strh	r3, [r4, #6]
 801313e:	e7d4      	b.n	80130ea <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8013140:	4620      	mov	r0, r4
 8013142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013146 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8013146:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801314a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 801314e:	b383      	cbz	r3, 80131b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8013150:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8013152:	b374      	cbz	r4, 80131b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8013154:	f9b1 5000 	ldrsh.w	r5, [r1]
 8013158:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 801315c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8013160:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8013164:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013168:	b303      	cbz	r3, 80131ac <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801316a:	4668      	mov	r0, sp
 801316c:	1d21      	adds	r1, r4, #4
 801316e:	f8ad 5000 	strh.w	r5, [sp]
 8013172:	f8ad 6002 	strh.w	r6, [sp, #2]
 8013176:	f8ad 7004 	strh.w	r7, [sp, #4]
 801317a:	f8ad 8006 	strh.w	r8, [sp, #6]
 801317e:	f7ff ff43 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8013182:	4668      	mov	r0, sp
 8013184:	f7ff ff83 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 8013188:	b980      	cbnz	r0, 80131ac <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801318a:	f8bd 3000 	ldrh.w	r3, [sp]
 801318e:	88a2      	ldrh	r2, [r4, #4]
 8013190:	1a9b      	subs	r3, r3, r2
 8013192:	f8ad 3000 	strh.w	r3, [sp]
 8013196:	88e2      	ldrh	r2, [r4, #6]
 8013198:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801319c:	1a9b      	subs	r3, r3, r2
 801319e:	f8ad 3002 	strh.w	r3, [sp, #2]
 80131a2:	6823      	ldr	r3, [r4, #0]
 80131a4:	4669      	mov	r1, sp
 80131a6:	689b      	ldr	r3, [r3, #8]
 80131a8:	4620      	mov	r0, r4
 80131aa:	4798      	blx	r3
 80131ac:	69a4      	ldr	r4, [r4, #24]
 80131ae:	2c00      	cmp	r4, #0
 80131b0:	d1d8      	bne.n	8013164 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80131b2:	b002      	add	sp, #8
 80131b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080131b8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80131b8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80131ba:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80131be:	460d      	mov	r5, r1
 80131c0:	4616      	mov	r6, r2
 80131c2:	b323      	cbz	r3, 801320e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80131c4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80131c6:	b314      	cbz	r4, 801320e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80131c8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80131cc:	b1eb      	cbz	r3, 801320a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80131ce:	6828      	ldr	r0, [r5, #0]
 80131d0:	6869      	ldr	r1, [r5, #4]
 80131d2:	466b      	mov	r3, sp
 80131d4:	c303      	stmia	r3!, {r0, r1}
 80131d6:	4668      	mov	r0, sp
 80131d8:	1d21      	adds	r1, r4, #4
 80131da:	f7ff ff15 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 80131de:	4668      	mov	r0, sp
 80131e0:	f7ff ff55 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 80131e4:	b988      	cbnz	r0, 801320a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80131e6:	f8bd 3000 	ldrh.w	r3, [sp]
 80131ea:	88a2      	ldrh	r2, [r4, #4]
 80131ec:	1a9b      	subs	r3, r3, r2
 80131ee:	f8ad 3000 	strh.w	r3, [sp]
 80131f2:	88e2      	ldrh	r2, [r4, #6]
 80131f4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80131f8:	1a9b      	subs	r3, r3, r2
 80131fa:	f8ad 3002 	strh.w	r3, [sp, #2]
 80131fe:	6823      	ldr	r3, [r4, #0]
 8013200:	4632      	mov	r2, r6
 8013202:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8013204:	4669      	mov	r1, sp
 8013206:	4620      	mov	r0, r4
 8013208:	4798      	blx	r3
 801320a:	69a4      	ldr	r4, [r4, #24]
 801320c:	e7db      	b.n	80131c6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 801320e:	b002      	add	sp, #8
 8013210:	bd70      	pop	{r4, r5, r6, pc}

08013212 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8013212:	b513      	push	{r0, r1, r4, lr}
 8013214:	6803      	ldr	r3, [r0, #0]
 8013216:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 801321a:	2300      	movs	r3, #0
 801321c:	e9cd 3300 	strd	r3, r3, [sp]
 8013220:	466b      	mov	r3, sp
 8013222:	47a0      	blx	r4
 8013224:	b002      	add	sp, #8
 8013226:	bd10      	pop	{r4, pc}

08013228 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8013228:	2301      	movs	r3, #1
 801322a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801322e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8013232:	4770      	bx	lr

08013234 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8013234:	2301      	movs	r3, #1
 8013236:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801323a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801323e:	4770      	bx	lr

08013240 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8013240:	6843      	ldr	r3, [r0, #4]
 8013242:	2201      	movs	r2, #1
 8013244:	725a      	strb	r2, [r3, #9]
 8013246:	6840      	ldr	r0, [r0, #4]
 8013248:	6803      	ldr	r3, [r0, #0]
 801324a:	691b      	ldr	r3, [r3, #16]
 801324c:	4718      	bx	r3

0801324e <_ZN8touchgfx3HAL8flushDMAEv>:
 801324e:	6840      	ldr	r0, [r0, #4]
 8013250:	6803      	ldr	r3, [r0, #0]
 8013252:	689b      	ldr	r3, [r3, #8]
 8013254:	4718      	bx	r3

08013256 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8013256:	b530      	push	{r4, r5, lr}
 8013258:	b08b      	sub	sp, #44	; 0x2c
 801325a:	6804      	ldr	r4, [r0, #0]
 801325c:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8013260:	9509      	str	r5, [sp, #36]	; 0x24
 8013262:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8013266:	9508      	str	r5, [sp, #32]
 8013268:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 801326c:	9507      	str	r5, [sp, #28]
 801326e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8013272:	9506      	str	r5, [sp, #24]
 8013274:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8013278:	9505      	str	r5, [sp, #20]
 801327a:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801327e:	9504      	str	r5, [sp, #16]
 8013280:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8013284:	9503      	str	r5, [sp, #12]
 8013286:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 801328a:	9502      	str	r5, [sp, #8]
 801328c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8013290:	e9cd 3500 	strd	r3, r5, [sp]
 8013294:	4613      	mov	r3, r2
 8013296:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8013298:	2200      	movs	r2, #0
 801329a:	47a0      	blx	r4
 801329c:	b00b      	add	sp, #44	; 0x2c
 801329e:	bd30      	pop	{r4, r5, pc}

080132a0 <_ZN8touchgfx3HAL10beginFrameEv>:
 80132a0:	4b04      	ldr	r3, [pc, #16]	; (80132b4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80132a2:	781b      	ldrb	r3, [r3, #0]
 80132a4:	b123      	cbz	r3, 80132b0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80132a6:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80132aa:	f080 0001 	eor.w	r0, r0, #1
 80132ae:	4770      	bx	lr
 80132b0:	2001      	movs	r0, #1
 80132b2:	4770      	bx	lr
 80132b4:	20025996 	.word	0x20025996

080132b8 <_ZN8touchgfx3HAL8endFrameEv>:
 80132b8:	b510      	push	{r4, lr}
 80132ba:	4604      	mov	r4, r0
 80132bc:	6840      	ldr	r0, [r0, #4]
 80132be:	6803      	ldr	r3, [r0, #0]
 80132c0:	689b      	ldr	r3, [r3, #8]
 80132c2:	4798      	blx	r3
 80132c4:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80132c8:	b113      	cbz	r3, 80132d0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80132ca:	2301      	movs	r3, #1
 80132cc:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80132d0:	bd10      	pop	{r4, pc}

080132d2 <_ZN8touchgfx3HAL10initializeEv>:
 80132d2:	b510      	push	{r4, lr}
 80132d4:	4604      	mov	r4, r0
 80132d6:	f7fe f9f5 	bl	80116c4 <_ZN8touchgfx10OSWrappers10initializeEv>
 80132da:	f7fd ff3b 	bl	8011154 <_ZN8touchgfx4GPIO4initEv>
 80132de:	6860      	ldr	r0, [r4, #4]
 80132e0:	6803      	ldr	r3, [r0, #0]
 80132e2:	68db      	ldr	r3, [r3, #12]
 80132e4:	4798      	blx	r3
 80132e6:	68e0      	ldr	r0, [r4, #12]
 80132e8:	6803      	ldr	r3, [r0, #0]
 80132ea:	689b      	ldr	r3, [r3, #8]
 80132ec:	4798      	blx	r3
 80132ee:	6823      	ldr	r3, [r4, #0]
 80132f0:	4620      	mov	r0, r4
 80132f2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80132f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80132f8:	4718      	bx	r3

080132fa <_ZN8touchgfx3HAL9taskEntryEv>:
 80132fa:	b508      	push	{r3, lr}
 80132fc:	6803      	ldr	r3, [r0, #0]
 80132fe:	4604      	mov	r4, r0
 8013300:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013304:	4798      	blx	r3
 8013306:	6823      	ldr	r3, [r4, #0]
 8013308:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 801330a:	4620      	mov	r0, r4
 801330c:	4798      	blx	r3
 801330e:	f7fe fa4d 	bl	80117ac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8013312:	6823      	ldr	r3, [r4, #0]
 8013314:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8013316:	e7f8      	b.n	801330a <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08013318 <_ZN8touchgfx3HAL4tickEv>:
 8013318:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801331a:	6803      	ldr	r3, [r0, #0]
 801331c:	4d5b      	ldr	r5, [pc, #364]	; (801348c <_ZN8touchgfx3HAL4tickEv+0x174>)
 801331e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8013322:	4604      	mov	r4, r0
 8013324:	4798      	blx	r3
 8013326:	2800      	cmp	r0, #0
 8013328:	f000 8095 	beq.w	8013456 <_ZN8touchgfx3HAL4tickEv+0x13e>
 801332c:	2001      	movs	r0, #1
 801332e:	f7fd ff19 	bl	8011164 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8013332:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8013336:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801333a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801333e:	2600      	movs	r6, #0
 8013340:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8013344:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8013348:	b133      	cbz	r3, 8013358 <_ZN8touchgfx3HAL4tickEv+0x40>
 801334a:	6823      	ldr	r3, [r4, #0]
 801334c:	4620      	mov	r0, r4
 801334e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8013352:	4798      	blx	r3
 8013354:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8013358:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801335c:	6862      	ldr	r2, [r4, #4]
 801335e:	f083 0301 	eor.w	r3, r3, #1
 8013362:	7253      	strb	r3, [r2, #9]
 8013364:	2601      	movs	r6, #1
 8013366:	702e      	strb	r6, [r5, #0]
 8013368:	f003 f92c 	bl	80165c4 <_ZN8touchgfx11Application11getInstanceEv>
 801336c:	6803      	ldr	r3, [r0, #0]
 801336e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013370:	4798      	blx	r3
 8013372:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013376:	b90b      	cbnz	r3, 801337c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013378:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801337c:	f003 f922 	bl	80165c4 <_ZN8touchgfx11Application11getInstanceEv>
 8013380:	6803      	ldr	r3, [r0, #0]
 8013382:	695b      	ldr	r3, [r3, #20]
 8013384:	4798      	blx	r3
 8013386:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013388:	6803      	ldr	r3, [r0, #0]
 801338a:	691b      	ldr	r3, [r3, #16]
 801338c:	4798      	blx	r3
 801338e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013392:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8013396:	3b01      	subs	r3, #1
 8013398:	b2db      	uxtb	r3, r3
 801339a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801339e:	b10a      	cbz	r2, 80133a4 <_ZN8touchgfx3HAL4tickEv+0x8c>
 80133a0:	2b00      	cmp	r3, #0
 80133a2:	d1eb      	bne.n	801337c <_ZN8touchgfx3HAL4tickEv+0x64>
 80133a4:	4a3a      	ldr	r2, [pc, #232]	; (8013490 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80133a6:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80133aa:	7813      	ldrb	r3, [r2, #0]
 80133ac:	3301      	adds	r3, #1
 80133ae:	b25b      	sxtb	r3, r3
 80133b0:	4299      	cmp	r1, r3
 80133b2:	7013      	strb	r3, [r2, #0]
 80133b4:	dc10      	bgt.n	80133d8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80133b6:	68e0      	ldr	r0, [r4, #12]
 80133b8:	2300      	movs	r3, #0
 80133ba:	7013      	strb	r3, [r2, #0]
 80133bc:	6803      	ldr	r3, [r0, #0]
 80133be:	aa03      	add	r2, sp, #12
 80133c0:	68db      	ldr	r3, [r3, #12]
 80133c2:	a902      	add	r1, sp, #8
 80133c4:	4798      	blx	r3
 80133c6:	6823      	ldr	r3, [r4, #0]
 80133c8:	2800      	cmp	r0, #0
 80133ca:	d050      	beq.n	801346e <_ZN8touchgfx3HAL4tickEv+0x156>
 80133cc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80133d0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80133d4:	4620      	mov	r0, r4
 80133d6:	4798      	blx	r3
 80133d8:	6960      	ldr	r0, [r4, #20]
 80133da:	2300      	movs	r3, #0
 80133dc:	f88d 3007 	strb.w	r3, [sp, #7]
 80133e0:	b158      	cbz	r0, 80133fa <_ZN8touchgfx3HAL4tickEv+0xe2>
 80133e2:	6803      	ldr	r3, [r0, #0]
 80133e4:	f10d 0107 	add.w	r1, sp, #7
 80133e8:	68db      	ldr	r3, [r3, #12]
 80133ea:	4798      	blx	r3
 80133ec:	b128      	cbz	r0, 80133fa <_ZN8touchgfx3HAL4tickEv+0xe2>
 80133ee:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80133f0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80133f4:	6803      	ldr	r3, [r0, #0]
 80133f6:	68db      	ldr	r3, [r3, #12]
 80133f8:	4798      	blx	r3
 80133fa:	f104 001c 	add.w	r0, r4, #28
 80133fe:	f013 fd5b 	bl	8026eb8 <_ZN8touchgfx8Gestures4tickEv>
 8013402:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8013406:	b30b      	cbz	r3, 801344c <_ZN8touchgfx3HAL4tickEv+0x134>
 8013408:	6920      	ldr	r0, [r4, #16]
 801340a:	6803      	ldr	r3, [r0, #0]
 801340c:	691b      	ldr	r3, [r3, #16]
 801340e:	4798      	blx	r3
 8013410:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8013412:	4606      	mov	r6, r0
 8013414:	b903      	cbnz	r3, 8013418 <_ZN8touchgfx3HAL4tickEv+0x100>
 8013416:	6760      	str	r0, [r4, #116]	; 0x74
 8013418:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801341a:	4a1e      	ldr	r2, [pc, #120]	; (8013494 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 801341c:	1af3      	subs	r3, r6, r3
 801341e:	4293      	cmp	r3, r2
 8013420:	d914      	bls.n	801344c <_ZN8touchgfx3HAL4tickEv+0x134>
 8013422:	6920      	ldr	r0, [r4, #16]
 8013424:	6803      	ldr	r3, [r0, #0]
 8013426:	699b      	ldr	r3, [r3, #24]
 8013428:	4798      	blx	r3
 801342a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801342c:	2264      	movs	r2, #100	; 0x64
 801342e:	1af3      	subs	r3, r6, r3
 8013430:	fbb3 f3f2 	udiv	r3, r3, r2
 8013434:	fbb0 f0f3 	udiv	r0, r0, r3
 8013438:	2800      	cmp	r0, #0
 801343a:	dc1d      	bgt.n	8013478 <_ZN8touchgfx3HAL4tickEv+0x160>
 801343c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8013440:	6920      	ldr	r0, [r4, #16]
 8013442:	6803      	ldr	r3, [r0, #0]
 8013444:	2100      	movs	r1, #0
 8013446:	69db      	ldr	r3, [r3, #28]
 8013448:	4798      	blx	r3
 801344a:	6766      	str	r6, [r4, #116]	; 0x74
 801344c:	f003 f8ba 	bl	80165c4 <_ZN8touchgfx11Application11getInstanceEv>
 8013450:	6803      	ldr	r3, [r0, #0]
 8013452:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013454:	4798      	blx	r3
 8013456:	6823      	ldr	r3, [r4, #0]
 8013458:	4620      	mov	r0, r4
 801345a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801345e:	4798      	blx	r3
 8013460:	2001      	movs	r0, #1
 8013462:	f7fd fe9b 	bl	801119c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8013466:	2300      	movs	r3, #0
 8013468:	702b      	strb	r3, [r5, #0]
 801346a:	b004      	add	sp, #16
 801346c:	bd70      	pop	{r4, r5, r6, pc}
 801346e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8013472:	4620      	mov	r0, r4
 8013474:	4798      	blx	r3
 8013476:	e7af      	b.n	80133d8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013478:	2863      	cmp	r0, #99	; 0x63
 801347a:	bfcb      	itete	gt
 801347c:	2300      	movgt	r3, #0
 801347e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8013482:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8013486:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801348a:	e7d9      	b.n	8013440 <_ZN8touchgfx3HAL4tickEv+0x128>
 801348c:	2002599c 	.word	0x2002599c
 8013490:	2002599d 	.word	0x2002599d
 8013494:	05f5e100 	.word	0x05f5e100

08013498 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8013498:	b510      	push	{r4, lr}
 801349a:	4604      	mov	r4, r0
 801349c:	f7fe f93a 	bl	8011714 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80134a0:	6863      	ldr	r3, [r4, #4]
 80134a2:	2200      	movs	r2, #0
 80134a4:	729a      	strb	r2, [r3, #10]
 80134a6:	bd10      	pop	{r4, pc}

080134a8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80134a8:	65c1      	str	r1, [r0, #92]	; 0x5c
 80134aa:	301c      	adds	r0, #28
 80134ac:	f013 bd02 	b.w	8026eb4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080134b0 <_ZN8touchgfx3HAL5touchEll>:
 80134b0:	b530      	push	{r4, r5, lr}
 80134b2:	b087      	sub	sp, #28
 80134b4:	4604      	mov	r4, r0
 80134b6:	a804      	add	r0, sp, #16
 80134b8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80134bc:	f002 fe74 	bl	80161a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80134c0:	9b04      	ldr	r3, [sp, #16]
 80134c2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80134c6:	a906      	add	r1, sp, #24
 80134c8:	9b05      	ldr	r3, [sp, #20]
 80134ca:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80134ce:	a803      	add	r0, sp, #12
 80134d0:	f002 febc 	bl	801624c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80134d4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80134d8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80134dc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80134e0:	f104 001c 	add.w	r0, r4, #28
 80134e4:	b189      	cbz	r1, 801350a <_ZN8touchgfx3HAL5touchEll+0x5a>
 80134e6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80134ea:	9300      	str	r3, [sp, #0]
 80134ec:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80134f0:	4613      	mov	r3, r2
 80134f2:	462a      	mov	r2, r5
 80134f4:	f013 fcee 	bl	8026ed4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80134f8:	b128      	cbz	r0, 8013506 <_ZN8touchgfx3HAL5touchEll+0x56>
 80134fa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80134fe:	6623      	str	r3, [r4, #96]	; 0x60
 8013500:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013504:	6663      	str	r3, [r4, #100]	; 0x64
 8013506:	b007      	add	sp, #28
 8013508:	bd30      	pop	{r4, r5, pc}
 801350a:	f013 fd23 	bl	8026f54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801350e:	2301      	movs	r3, #1
 8013510:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8013514:	e7f1      	b.n	80134fa <_ZN8touchgfx3HAL5touchEll+0x4a>

08013516 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8013516:	b510      	push	{r4, lr}
 8013518:	2b00      	cmp	r3, #0
 801351a:	d046      	beq.n	80135aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801351c:	ea81 0002 	eor.w	r0, r1, r2
 8013520:	07c4      	lsls	r4, r0, #31
 8013522:	d508      	bpl.n	8013536 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8013524:	440b      	add	r3, r1
 8013526:	3a01      	subs	r2, #1
 8013528:	428b      	cmp	r3, r1
 801352a:	d93e      	bls.n	80135aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801352c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013530:	f801 0b01 	strb.w	r0, [r1], #1
 8013534:	e7f8      	b.n	8013528 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8013536:	07d0      	lsls	r0, r2, #31
 8013538:	bf42      	ittt	mi
 801353a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801353e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8013542:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8013546:	2b01      	cmp	r3, #1
 8013548:	d911      	bls.n	801356e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801354a:	ea81 0402 	eor.w	r4, r1, r2
 801354e:	07a4      	lsls	r4, r4, #30
 8013550:	4610      	mov	r0, r2
 8013552:	d022      	beq.n	801359a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8013554:	f023 0401 	bic.w	r4, r3, #1
 8013558:	440c      	add	r4, r1
 801355a:	428c      	cmp	r4, r1
 801355c:	4602      	mov	r2, r0
 801355e:	d904      	bls.n	801356a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8013560:	8812      	ldrh	r2, [r2, #0]
 8013562:	f821 2b02 	strh.w	r2, [r1], #2
 8013566:	3002      	adds	r0, #2
 8013568:	e7f7      	b.n	801355a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801356a:	f003 0301 	and.w	r3, r3, #1
 801356e:	f023 0003 	bic.w	r0, r3, #3
 8013572:	4408      	add	r0, r1
 8013574:	4288      	cmp	r0, r1
 8013576:	4614      	mov	r4, r2
 8013578:	d904      	bls.n	8013584 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801357a:	6824      	ldr	r4, [r4, #0]
 801357c:	f841 4b04 	str.w	r4, [r1], #4
 8013580:	3204      	adds	r2, #4
 8013582:	e7f7      	b.n	8013574 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8013584:	f003 0303 	and.w	r3, r3, #3
 8013588:	440b      	add	r3, r1
 801358a:	3a01      	subs	r2, #1
 801358c:	428b      	cmp	r3, r1
 801358e:	d90c      	bls.n	80135aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013590:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013594:	f801 0b01 	strb.w	r0, [r1], #1
 8013598:	e7f8      	b.n	801358c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801359a:	0790      	lsls	r0, r2, #30
 801359c:	d0e7      	beq.n	801356e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801359e:	f832 0b02 	ldrh.w	r0, [r2], #2
 80135a2:	f821 0b02 	strh.w	r0, [r1], #2
 80135a6:	3b02      	subs	r3, #2
 80135a8:	e7e1      	b.n	801356e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80135aa:	2001      	movs	r0, #1
 80135ac:	bd10      	pop	{r4, pc}

080135ae <_ZN8touchgfx3HAL7noTouchEv>:
 80135ae:	b510      	push	{r4, lr}
 80135b0:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80135b4:	4604      	mov	r4, r0
 80135b6:	b153      	cbz	r3, 80135ce <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80135b8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80135bc:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80135c0:	2101      	movs	r1, #1
 80135c2:	301c      	adds	r0, #28
 80135c4:	f013 fcc6 	bl	8026f54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80135c8:	2300      	movs	r3, #0
 80135ca:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80135ce:	bd10      	pop	{r4, pc}

080135d0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80135d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80135d4:	b085      	sub	sp, #20
 80135d6:	ad04      	add	r5, sp, #16
 80135d8:	4604      	mov	r4, r0
 80135da:	2000      	movs	r0, #0
 80135dc:	f845 0d04 	str.w	r0, [r5, #-4]!
 80135e0:	69a0      	ldr	r0, [r4, #24]
 80135e2:	6806      	ldr	r6, [r0, #0]
 80135e4:	9501      	str	r5, [sp, #4]
 80135e6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80135ea:	9500      	str	r5, [sp, #0]
 80135ec:	6835      	ldr	r5, [r6, #0]
 80135ee:	4699      	mov	r9, r3
 80135f0:	460f      	mov	r7, r1
 80135f2:	4690      	mov	r8, r2
 80135f4:	47a8      	blx	r5
 80135f6:	4d10      	ldr	r5, [pc, #64]	; (8013638 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80135f8:	4606      	mov	r6, r0
 80135fa:	f8a5 9000 	strh.w	r9, [r5]
 80135fe:	f7fb f99d 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 8013602:	6803      	ldr	r3, [r0, #0]
 8013604:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013606:	4798      	blx	r3
 8013608:	b128      	cbz	r0, 8013616 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 801360a:	2801      	cmp	r0, #1
 801360c:	d00b      	beq.n	8013626 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 801360e:	4630      	mov	r0, r6
 8013610:	b005      	add	sp, #20
 8013612:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013616:	882b      	ldrh	r3, [r5, #0]
 8013618:	fb08 7203 	mla	r2, r8, r3, r7
 801361c:	9b03      	ldr	r3, [sp, #12]
 801361e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8013622:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013624:	e7f3      	b.n	801360e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013626:	882a      	ldrh	r2, [r5, #0]
 8013628:	9b03      	ldr	r3, [sp, #12]
 801362a:	fb08 7202 	mla	r2, r8, r2, r7
 801362e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013632:	1a9a      	subs	r2, r3, r2
 8013634:	63e2      	str	r2, [r4, #60]	; 0x3c
 8013636:	e7ea      	b.n	801360e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013638:	20025992 	.word	0x20025992

0801363c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801363c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801363e:	b08b      	sub	sp, #44	; 0x2c
 8013640:	4617      	mov	r7, r2
 8013642:	4604      	mov	r4, r0
 8013644:	460e      	mov	r6, r1
 8013646:	461d      	mov	r5, r3
 8013648:	f7fb f978 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 801364c:	6803      	ldr	r3, [r0, #0]
 801364e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013650:	4798      	blx	r3
 8013652:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013656:	9007      	str	r0, [sp, #28]
 8013658:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801365c:	4b0d      	ldr	r3, [pc, #52]	; (8013694 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801365e:	6822      	ldr	r2, [r4, #0]
 8013660:	881b      	ldrh	r3, [r3, #0]
 8013662:	9306      	str	r3, [sp, #24]
 8013664:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013668:	9305      	str	r3, [sp, #20]
 801366a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801366e:	9304      	str	r3, [sp, #16]
 8013670:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013674:	9303      	str	r3, [sp, #12]
 8013676:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801367a:	9302      	str	r3, [sp, #8]
 801367c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013680:	e9cd 5300 	strd	r5, r3, [sp]
 8013684:	4631      	mov	r1, r6
 8013686:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8013688:	463b      	mov	r3, r7
 801368a:	2200      	movs	r2, #0
 801368c:	4620      	mov	r0, r4
 801368e:	47a8      	blx	r5
 8013690:	b00b      	add	sp, #44	; 0x2c
 8013692:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013694:	20025992 	.word	0x20025992

08013698 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8013698:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801369c:	4698      	mov	r8, r3
 801369e:	6803      	ldr	r3, [r0, #0]
 80136a0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80136a2:	4b15      	ldr	r3, [pc, #84]	; (80136f8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80136a4:	b08b      	sub	sp, #44	; 0x2c
 80136a6:	4617      	mov	r7, r2
 80136a8:	f8b3 9000 	ldrh.w	r9, [r3]
 80136ac:	460e      	mov	r6, r1
 80136ae:	4604      	mov	r4, r0
 80136b0:	f7fb f944 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 80136b4:	6803      	ldr	r3, [r0, #0]
 80136b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80136b8:	4798      	blx	r3
 80136ba:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80136be:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80136c2:	2302      	movs	r3, #2
 80136c4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80136c8:	2301      	movs	r3, #1
 80136ca:	9305      	str	r3, [sp, #20]
 80136cc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80136d0:	9304      	str	r3, [sp, #16]
 80136d2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80136d6:	9303      	str	r3, [sp, #12]
 80136d8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80136dc:	9302      	str	r3, [sp, #8]
 80136de:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80136e2:	2200      	movs	r2, #0
 80136e4:	e9cd 8300 	strd	r8, r3, [sp]
 80136e8:	4631      	mov	r1, r6
 80136ea:	463b      	mov	r3, r7
 80136ec:	4620      	mov	r0, r4
 80136ee:	47a8      	blx	r5
 80136f0:	b00b      	add	sp, #44	; 0x2c
 80136f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80136f6:	bf00      	nop
 80136f8:	20025992 	.word	0x20025992

080136fc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80136fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013700:	4698      	mov	r8, r3
 8013702:	6803      	ldr	r3, [r0, #0]
 8013704:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013706:	4b11      	ldr	r3, [pc, #68]	; (801374c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013708:	b087      	sub	sp, #28
 801370a:	f8b3 9000 	ldrh.w	r9, [r3]
 801370e:	460e      	mov	r6, r1
 8013710:	4617      	mov	r7, r2
 8013712:	4604      	mov	r4, r0
 8013714:	f7fb f912 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 8013718:	6803      	ldr	r3, [r0, #0]
 801371a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801371c:	4798      	blx	r3
 801371e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013722:	f8cd 900c 	str.w	r9, [sp, #12]
 8013726:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801372a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801372e:	9302      	str	r3, [sp, #8]
 8013730:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8013734:	9301      	str	r3, [sp, #4]
 8013736:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801373a:	9300      	str	r3, [sp, #0]
 801373c:	463a      	mov	r2, r7
 801373e:	4643      	mov	r3, r8
 8013740:	4631      	mov	r1, r6
 8013742:	4620      	mov	r0, r4
 8013744:	47a8      	blx	r5
 8013746:	b007      	add	sp, #28
 8013748:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801374c:	20025992 	.word	0x20025992

08013750 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013754:	4604      	mov	r4, r0
 8013756:	b08f      	sub	sp, #60	; 0x3c
 8013758:	4610      	mov	r0, r2
 801375a:	460d      	mov	r5, r1
 801375c:	4691      	mov	r9, r2
 801375e:	461e      	mov	r6, r3
 8013760:	f005 ff9a 	bl	8019698 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013764:	2800      	cmp	r0, #0
 8013766:	f000 809d 	beq.w	80138a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801376a:	6823      	ldr	r3, [r4, #0]
 801376c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013908 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013770:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013772:	f8df a198 	ldr.w	sl, [pc, #408]	; 801390c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013776:	4f61      	ldr	r7, [pc, #388]	; (80138fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013778:	4620      	mov	r0, r4
 801377a:	4798      	blx	r3
 801377c:	6823      	ldr	r3, [r4, #0]
 801377e:	4620      	mov	r0, r4
 8013780:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013782:	4798      	blx	r3
 8013784:	f8bb 3000 	ldrh.w	r3, [fp]
 8013788:	9301      	str	r3, [sp, #4]
 801378a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801378e:	f8ba 3000 	ldrh.w	r3, [sl]
 8013792:	9302      	str	r3, [sp, #8]
 8013794:	883b      	ldrh	r3, [r7, #0]
 8013796:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801379a:	9303      	str	r3, [sp, #12]
 801379c:	4b58      	ldr	r3, [pc, #352]	; (8013900 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801379e:	9305      	str	r3, [sp, #20]
 80137a0:	881a      	ldrh	r2, [r3, #0]
 80137a2:	9204      	str	r2, [sp, #16]
 80137a4:	4640      	mov	r0, r8
 80137a6:	f006 f80b 	bl	80197c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80137aa:	8038      	strh	r0, [r7, #0]
 80137ac:	4640      	mov	r0, r8
 80137ae:	f006 f83b 	bl	8019828 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80137b2:	9b05      	ldr	r3, [sp, #20]
 80137b4:	b280      	uxth	r0, r0
 80137b6:	8018      	strh	r0, [r3, #0]
 80137b8:	4b52      	ldr	r3, [pc, #328]	; (8013904 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80137ba:	781b      	ldrb	r3, [r3, #0]
 80137bc:	2b00      	cmp	r3, #0
 80137be:	d174      	bne.n	80138aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80137c0:	883b      	ldrh	r3, [r7, #0]
 80137c2:	f8ab 3000 	strh.w	r3, [fp]
 80137c6:	f8aa 0000 	strh.w	r0, [sl]
 80137ca:	4648      	mov	r0, r9
 80137cc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80137d0:	f005 ff62 	bl	8019698 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80137d4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80137d8:	2200      	movs	r2, #0
 80137da:	4611      	mov	r1, r2
 80137dc:	4628      	mov	r0, r5
 80137de:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80137e2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80137e6:	f7fb fe44 	bl	800f472 <_ZN8touchgfx8Drawable5setXYEss>
 80137ea:	2301      	movs	r3, #1
 80137ec:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80137f0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80137f4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80137f8:	2b00      	cmp	r3, #0
 80137fa:	dd5c      	ble.n	80138b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80137fc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013800:	2b00      	cmp	r3, #0
 8013802:	dd58      	ble.n	80138b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013804:	462a      	mov	r2, r5
 8013806:	ab0a      	add	r3, sp, #40	; 0x28
 8013808:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801380c:	6851      	ldr	r1, [r2, #4]
 801380e:	c303      	stmia	r3!, {r0, r1}
 8013810:	4631      	mov	r1, r6
 8013812:	a80a      	add	r0, sp, #40	; 0x28
 8013814:	f7ff fbf8 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8013818:	4b38      	ldr	r3, [pc, #224]	; (80138fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801381a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801381e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013822:	2100      	movs	r1, #0
 8013824:	aa0a      	add	r2, sp, #40	; 0x28
 8013826:	4b36      	ldr	r3, [pc, #216]	; (8013900 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013828:	910c      	str	r1, [sp, #48]	; 0x30
 801382a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801382e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013832:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013836:	ab08      	add	r3, sp, #32
 8013838:	e883 0003 	stmia.w	r3, {r0, r1}
 801383c:	4618      	mov	r0, r3
 801383e:	a90c      	add	r1, sp, #48	; 0x30
 8013840:	f7ff fbe2 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8013844:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013846:	2b00      	cmp	r3, #0
 8013848:	d13c      	bne.n	80138c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801384a:	2000      	movs	r0, #0
 801384c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013850:	2600      	movs	r6, #0
 8013852:	682a      	ldr	r2, [r5, #0]
 8013854:	696b      	ldr	r3, [r5, #20]
 8013856:	616e      	str	r6, [r5, #20]
 8013858:	9305      	str	r3, [sp, #20]
 801385a:	6892      	ldr	r2, [r2, #8]
 801385c:	a908      	add	r1, sp, #32
 801385e:	4628      	mov	r0, r5
 8013860:	4790      	blx	r2
 8013862:	9b05      	ldr	r3, [sp, #20]
 8013864:	616b      	str	r3, [r5, #20]
 8013866:	4652      	mov	r2, sl
 8013868:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 801386c:	4649      	mov	r1, r9
 801386e:	4628      	mov	r0, r5
 8013870:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013874:	f7fb fdfd 	bl	800f472 <_ZN8touchgfx8Drawable5setXYEss>
 8013878:	4b23      	ldr	r3, [pc, #140]	; (8013908 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 801387a:	9a01      	ldr	r2, [sp, #4]
 801387c:	801a      	strh	r2, [r3, #0]
 801387e:	4b23      	ldr	r3, [pc, #140]	; (801390c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013880:	9a02      	ldr	r2, [sp, #8]
 8013882:	801a      	strh	r2, [r3, #0]
 8013884:	4b1d      	ldr	r3, [pc, #116]	; (80138fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013886:	9a03      	ldr	r2, [sp, #12]
 8013888:	801a      	strh	r2, [r3, #0]
 801388a:	4b1d      	ldr	r3, [pc, #116]	; (8013900 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801388c:	9a04      	ldr	r2, [sp, #16]
 801388e:	801a      	strh	r2, [r3, #0]
 8013890:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013894:	6823      	ldr	r3, [r4, #0]
 8013896:	4620      	mov	r0, r4
 8013898:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801389a:	4798      	blx	r3
 801389c:	6823      	ldr	r3, [r4, #0]
 801389e:	4620      	mov	r0, r4
 80138a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138a2:	4798      	blx	r3
 80138a4:	b00f      	add	sp, #60	; 0x3c
 80138a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138aa:	883b      	ldrh	r3, [r7, #0]
 80138ac:	f8ab 0000 	strh.w	r0, [fp]
 80138b0:	f8aa 3000 	strh.w	r3, [sl]
 80138b4:	e789      	b.n	80137ca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80138b6:	462a      	mov	r2, r5
 80138b8:	ab0a      	add	r3, sp, #40	; 0x28
 80138ba:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80138be:	6851      	ldr	r1, [r2, #4]
 80138c0:	c303      	stmia	r3!, {r0, r1}
 80138c2:	e7a9      	b.n	8013818 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80138c4:	a807      	add	r0, sp, #28
 80138c6:	f006 f8eb 	bl	8019aa0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80138ca:	4606      	mov	r6, r0
 80138cc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80138ce:	6803      	ldr	r3, [r0, #0]
 80138d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138d2:	4798      	blx	r3
 80138d4:	4286      	cmp	r6, r0
 80138d6:	d1b8      	bne.n	801384a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80138d8:	f7fb f830 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 80138dc:	6803      	ldr	r3, [r0, #0]
 80138de:	4606      	mov	r6, r0
 80138e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80138e2:	9305      	str	r3, [sp, #20]
 80138e4:	a807      	add	r0, sp, #28
 80138e6:	f006 f8db 	bl	8019aa0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80138ea:	9b05      	ldr	r3, [sp, #20]
 80138ec:	4601      	mov	r1, r0
 80138ee:	4630      	mov	r0, r6
 80138f0:	4798      	blx	r3
 80138f2:	f080 0001 	eor.w	r0, r0, #1
 80138f6:	b2c0      	uxtb	r0, r0
 80138f8:	e7a8      	b.n	801384c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80138fa:	bf00      	nop
 80138fc:	2002598c 	.word	0x2002598c
 8013900:	2002598e 	.word	0x2002598e
 8013904:	20025990 	.word	0x20025990
 8013908:	20025992 	.word	0x20025992
 801390c:	20025994 	.word	0x20025994

08013910 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013910:	b510      	push	{r4, lr}
 8013912:	4b07      	ldr	r3, [pc, #28]	; (8013930 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013914:	781b      	ldrb	r3, [r3, #0]
 8013916:	4604      	mov	r4, r0
 8013918:	b13b      	cbz	r3, 801392a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801391a:	6803      	ldr	r3, [r0, #0]
 801391c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801391e:	4798      	blx	r3
 8013920:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013922:	4283      	cmp	r3, r0
 8013924:	d101      	bne.n	801392a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013926:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013928:	bd10      	pop	{r4, pc}
 801392a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801392c:	e7fc      	b.n	8013928 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801392e:	bf00      	nop
 8013930:	20025996 	.word	0x20025996

08013934 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013938:	b08a      	sub	sp, #40	; 0x28
 801393a:	461d      	mov	r5, r3
 801393c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013940:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013944:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013948:	f8ad 3018 	strh.w	r3, [sp, #24]
 801394c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013950:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013954:	2400      	movs	r4, #0
 8013956:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801395a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801395e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013962:	4690      	mov	r8, r2
 8013964:	4607      	mov	r7, r0
 8013966:	9404      	str	r4, [sp, #16]
 8013968:	f88d 4020 	strb.w	r4, [sp, #32]
 801396c:	f7ff ffd0 	bl	8013910 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013970:	fb06 8505 	mla	r5, r6, r5, r8
 8013974:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013978:	6878      	ldr	r0, [r7, #4]
 801397a:	9505      	str	r5, [sp, #20]
 801397c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013980:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013984:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013988:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801398c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013990:	6803      	ldr	r3, [r0, #0]
 8013992:	a901      	add	r1, sp, #4
 8013994:	685b      	ldr	r3, [r3, #4]
 8013996:	4798      	blx	r3
 8013998:	b00a      	add	sp, #40	; 0x28
 801399a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801399e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801399e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80139a2:	b08b      	sub	sp, #44	; 0x2c
 80139a4:	2400      	movs	r4, #0
 80139a6:	461d      	mov	r5, r3
 80139a8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80139ac:	4688      	mov	r8, r1
 80139ae:	4691      	mov	r9, r2
 80139b0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80139b4:	9404      	str	r4, [sp, #16]
 80139b6:	4607      	mov	r7, r0
 80139b8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80139bc:	f7ff ffa8 	bl	8013910 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80139c0:	fb06 9505 	mla	r5, r6, r5, r9
 80139c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80139c8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80139cc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80139d0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80139d4:	6878      	ldr	r0, [r7, #4]
 80139d6:	9505      	str	r5, [sp, #20]
 80139d8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80139dc:	f8ad 401c 	strh.w	r4, [sp, #28]
 80139e0:	f8ad 601e 	strh.w	r6, [sp, #30]
 80139e4:	f8cd 8010 	str.w	r8, [sp, #16]
 80139e8:	f8ad 4020 	strh.w	r4, [sp, #32]
 80139ec:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80139f0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80139f4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80139f8:	6803      	ldr	r3, [r0, #0]
 80139fa:	a901      	add	r1, sp, #4
 80139fc:	685b      	ldr	r3, [r3, #4]
 80139fe:	4798      	blx	r3
 8013a00:	b00b      	add	sp, #44	; 0x2c
 8013a02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013a08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013a08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a0c:	b08a      	sub	sp, #40	; 0x28
 8013a0e:	4698      	mov	r8, r3
 8013a10:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013a14:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013a18:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013a1c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013a20:	2300      	movs	r3, #0
 8013a22:	2d0b      	cmp	r5, #11
 8013a24:	4606      	mov	r6, r0
 8013a26:	9304      	str	r3, [sp, #16]
 8013a28:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013a2c:	d138      	bne.n	8013aa0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013a2e:	2380      	movs	r3, #128	; 0x80
 8013a30:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013a34:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013a38:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013a3c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013a40:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013a44:	f88d 0020 	strb.w	r0, [sp, #32]
 8013a48:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013a4c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013a50:	4630      	mov	r0, r6
 8013a52:	9203      	str	r2, [sp, #12]
 8013a54:	f7ff ff5c 	bl	8013910 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013a58:	2c0b      	cmp	r4, #11
 8013a5a:	bf98      	it	ls
 8013a5c:	4b1b      	ldrls	r3, [pc, #108]	; (8013acc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013a5e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013a62:	bf98      	it	ls
 8013a64:	5d19      	ldrbls	r1, [r3, r4]
 8013a66:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013a6a:	bf88      	it	hi
 8013a6c:	2100      	movhi	r1, #0
 8013a6e:	fb02 8307 	mla	r3, r2, r7, r8
 8013a72:	10c9      	asrs	r1, r1, #3
 8013a74:	fb01 0003 	mla	r0, r1, r3, r0
 8013a78:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013a7c:	9005      	str	r0, [sp, #20]
 8013a7e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013a82:	6870      	ldr	r0, [r6, #4]
 8013a84:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013a88:	2300      	movs	r3, #0
 8013a8a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013a8e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013a92:	6803      	ldr	r3, [r0, #0]
 8013a94:	a901      	add	r1, sp, #4
 8013a96:	685b      	ldr	r3, [r3, #4]
 8013a98:	4798      	blx	r3
 8013a9a:	b00a      	add	sp, #40	; 0x28
 8013a9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013aa0:	2d02      	cmp	r5, #2
 8013aa2:	d109      	bne.n	8013ab8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013aa4:	28ff      	cmp	r0, #255	; 0xff
 8013aa6:	d105      	bne.n	8013ab4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013aa8:	f1bc 0f00 	cmp.w	ip, #0
 8013aac:	bf14      	ite	ne
 8013aae:	2340      	movne	r3, #64	; 0x40
 8013ab0:	2320      	moveq	r3, #32
 8013ab2:	e7bd      	b.n	8013a30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013ab4:	2340      	movs	r3, #64	; 0x40
 8013ab6:	e7bb      	b.n	8013a30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013ab8:	28ff      	cmp	r0, #255	; 0xff
 8013aba:	d105      	bne.n	8013ac8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013abc:	f1bc 0f00 	cmp.w	ip, #0
 8013ac0:	bf14      	ite	ne
 8013ac2:	2304      	movne	r3, #4
 8013ac4:	2301      	moveq	r3, #1
 8013ac6:	e7b3      	b.n	8013a30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013ac8:	2304      	movs	r3, #4
 8013aca:	e7b1      	b.n	8013a30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013acc:	0802bac8 	.word	0x0802bac8

08013ad0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ad4:	b08b      	sub	sp, #44	; 0x2c
 8013ad6:	461d      	mov	r5, r3
 8013ad8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013adc:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013ae0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013ae4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013ae8:	bf14      	ite	ne
 8013aea:	2308      	movne	r3, #8
 8013aec:	2302      	moveq	r3, #2
 8013aee:	2400      	movs	r4, #0
 8013af0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013af4:	4688      	mov	r8, r1
 8013af6:	4693      	mov	fp, r2
 8013af8:	9404      	str	r4, [sp, #16]
 8013afa:	4607      	mov	r7, r0
 8013afc:	f7ff ff08 	bl	8013910 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013b00:	2e0b      	cmp	r6, #11
 8013b02:	bf98      	it	ls
 8013b04:	4b15      	ldrls	r3, [pc, #84]	; (8013b5c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013b06:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013b0a:	bf98      	it	ls
 8013b0c:	5d9c      	ldrbls	r4, [r3, r6]
 8013b0e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013b12:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013b16:	fb05 b50a 	mla	r5, r5, sl, fp
 8013b1a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013b1e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013b22:	10e4      	asrs	r4, r4, #3
 8013b24:	fb04 0405 	mla	r4, r4, r5, r0
 8013b28:	2300      	movs	r3, #0
 8013b2a:	6878      	ldr	r0, [r7, #4]
 8013b2c:	9405      	str	r4, [sp, #20]
 8013b2e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013b32:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013b36:	f8cd 8010 	str.w	r8, [sp, #16]
 8013b3a:	f88d 9020 	strb.w	r9, [sp, #32]
 8013b3e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013b42:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013b46:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8013b4a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013b4e:	6803      	ldr	r3, [r0, #0]
 8013b50:	a901      	add	r1, sp, #4
 8013b52:	685b      	ldr	r3, [r3, #4]
 8013b54:	4798      	blx	r3
 8013b56:	b00b      	add	sp, #44	; 0x2c
 8013b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b5c:	0802bac8 	.word	0x0802bac8

08013b60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013b60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b64:	461e      	mov	r6, r3
 8013b66:	4b0a      	ldr	r3, [pc, #40]	; (8013b90 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013b68:	460f      	mov	r7, r1
 8013b6a:	881d      	ldrh	r5, [r3, #0]
 8013b6c:	4690      	mov	r8, r2
 8013b6e:	f7fa fee5 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 8013b72:	6803      	ldr	r3, [r0, #0]
 8013b74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b76:	4798      	blx	r3
 8013b78:	280b      	cmp	r0, #11
 8013b7a:	bf9a      	itte	ls
 8013b7c:	4b05      	ldrls	r3, [pc, #20]	; (8013b94 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8013b7e:	5c1c      	ldrbls	r4, [r3, r0]
 8013b80:	2400      	movhi	r4, #0
 8013b82:	fb08 7005 	mla	r0, r8, r5, r7
 8013b86:	10e4      	asrs	r4, r4, #3
 8013b88:	fb04 6000 	mla	r0, r4, r0, r6
 8013b8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b90:	20025992 	.word	0x20025992
 8013b94:	0802bac8 	.word	0x0802bac8

08013b98 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013b98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013b9a:	b08b      	sub	sp, #44	; 0x2c
 8013b9c:	461f      	mov	r7, r3
 8013b9e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013ba2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013ba6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013baa:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013bae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013bb2:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013bb6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013bba:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013bbe:	2500      	movs	r5, #0
 8013bc0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013bc4:	f88d 3020 	strb.w	r3, [sp, #32]
 8013bc8:	4604      	mov	r4, r0
 8013bca:	4616      	mov	r6, r2
 8013bcc:	9504      	str	r5, [sp, #16]
 8013bce:	f7ff fe9f 	bl	8013910 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013bd2:	463a      	mov	r2, r7
 8013bd4:	4631      	mov	r1, r6
 8013bd6:	4603      	mov	r3, r0
 8013bd8:	4620      	mov	r0, r4
 8013bda:	f7ff ffc1 	bl	8013b60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013bde:	4b0e      	ldr	r3, [pc, #56]	; (8013c18 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013be0:	9005      	str	r0, [sp, #20]
 8013be2:	881b      	ldrh	r3, [r3, #0]
 8013be4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013be8:	f7fa fea8 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 8013bec:	6803      	ldr	r3, [r0, #0]
 8013bee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013bf0:	4798      	blx	r3
 8013bf2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013bf4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013bf8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013bfc:	9304      	str	r3, [sp, #16]
 8013bfe:	6860      	ldr	r0, [r4, #4]
 8013c00:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013c04:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013c08:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013c0c:	6803      	ldr	r3, [r0, #0]
 8013c0e:	a901      	add	r1, sp, #4
 8013c10:	685b      	ldr	r3, [r3, #4]
 8013c12:	4798      	blx	r3
 8013c14:	b00b      	add	sp, #44	; 0x2c
 8013c16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013c18:	20025992 	.word	0x20025992

08013c1c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8013c1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013c1e:	b08d      	sub	sp, #52	; 0x34
 8013c20:	466b      	mov	r3, sp
 8013c22:	e883 0006 	stmia.w	r3, {r1, r2}
 8013c26:	2300      	movs	r3, #0
 8013c28:	9306      	str	r3, [sp, #24]
 8013c2a:	6803      	ldr	r3, [r0, #0]
 8013c2c:	f8bd 6000 	ldrh.w	r6, [sp]
 8013c30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013c32:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8013c36:	2501      	movs	r5, #1
 8013c38:	9503      	str	r5, [sp, #12]
 8013c3a:	4604      	mov	r4, r0
 8013c3c:	4798      	blx	r3
 8013c3e:	463a      	mov	r2, r7
 8013c40:	4631      	mov	r1, r6
 8013c42:	4603      	mov	r3, r0
 8013c44:	4620      	mov	r0, r4
 8013c46:	f7ff ff8b 	bl	8013b60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013c4a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013c4c:	9307      	str	r3, [sp, #28]
 8013c4e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013c52:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013c56:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013c5a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013c5e:	4b0f      	ldr	r3, [pc, #60]	; (8013c9c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8013c60:	9004      	str	r0, [sp, #16]
 8013c62:	881b      	ldrh	r3, [r3, #0]
 8013c64:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013c68:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013c6c:	f7fa fe66 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 8013c70:	6803      	ldr	r3, [r0, #0]
 8013c72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c74:	4798      	blx	r3
 8013c76:	23ff      	movs	r3, #255	; 0xff
 8013c78:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013c7c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013c80:	6860      	ldr	r0, [r4, #4]
 8013c82:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8013c86:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013c8a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013c8e:	6803      	ldr	r3, [r0, #0]
 8013c90:	a903      	add	r1, sp, #12
 8013c92:	685b      	ldr	r3, [r3, #4]
 8013c94:	4798      	blx	r3
 8013c96:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8013c98:	b00d      	add	sp, #52	; 0x34
 8013c9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013c9c:	20025992 	.word	0x20025992

08013ca0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8013ca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ca4:	b08c      	sub	sp, #48	; 0x30
 8013ca6:	461e      	mov	r6, r3
 8013ca8:	466d      	mov	r5, sp
 8013caa:	2300      	movs	r3, #0
 8013cac:	e885 0006 	stmia.w	r5, {r1, r2}
 8013cb0:	9306      	str	r3, [sp, #24]
 8013cb2:	6803      	ldr	r3, [r0, #0]
 8013cb4:	f8bd 7000 	ldrh.w	r7, [sp]
 8013cb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013cba:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8013cbe:	2501      	movs	r5, #1
 8013cc0:	9503      	str	r5, [sp, #12]
 8013cc2:	4604      	mov	r4, r0
 8013cc4:	4798      	blx	r3
 8013cc6:	4642      	mov	r2, r8
 8013cc8:	4639      	mov	r1, r7
 8013cca:	4603      	mov	r3, r0
 8013ccc:	4620      	mov	r0, r4
 8013cce:	f7ff ff47 	bl	8013b60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013cd2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013cd6:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013cda:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013cde:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013ce2:	4b11      	ldr	r3, [pc, #68]	; (8013d28 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8013ce4:	9004      	str	r0, [sp, #16]
 8013ce6:	881b      	ldrh	r3, [r3, #0]
 8013ce8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013cec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013cee:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013cf2:	9607      	str	r6, [sp, #28]
 8013cf4:	f7fa fe22 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 8013cf8:	6803      	ldr	r3, [r0, #0]
 8013cfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013cfc:	4798      	blx	r3
 8013cfe:	23ff      	movs	r3, #255	; 0xff
 8013d00:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013d04:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013d08:	6860      	ldr	r0, [r4, #4]
 8013d0a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8013d0e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013d12:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013d16:	6803      	ldr	r3, [r0, #0]
 8013d18:	a903      	add	r1, sp, #12
 8013d1a:	685b      	ldr	r3, [r3, #4]
 8013d1c:	4798      	blx	r3
 8013d1e:	4630      	mov	r0, r6
 8013d20:	b00c      	add	sp, #48	; 0x30
 8013d22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013d26:	bf00      	nop
 8013d28:	20025992 	.word	0x20025992

08013d2c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8013d2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013d2e:	b085      	sub	sp, #20
 8013d30:	ac02      	add	r4, sp, #8
 8013d32:	e884 0006 	stmia.w	r4, {r1, r2}
 8013d36:	4605      	mov	r5, r0
 8013d38:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8013d3c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8013d40:	f7ff fde6 	bl	8013910 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d44:	463a      	mov	r2, r7
 8013d46:	4603      	mov	r3, r0
 8013d48:	4631      	mov	r1, r6
 8013d4a:	4628      	mov	r0, r5
 8013d4c:	f7ff ff08 	bl	8013b60 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013d50:	4a05      	ldr	r2, [pc, #20]	; (8013d68 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8013d52:	682b      	ldr	r3, [r5, #0]
 8013d54:	8812      	ldrh	r2, [r2, #0]
 8013d56:	9200      	str	r2, [sp, #0]
 8013d58:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8013d5a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8013d5e:	4603      	mov	r3, r0
 8013d60:	4628      	mov	r0, r5
 8013d62:	47b0      	blx	r6
 8013d64:	b005      	add	sp, #20
 8013d66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013d68:	20025992 	.word	0x20025992

08013d6c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8013d6c:	b570      	push	{r4, r5, r6, lr}
 8013d6e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8013d72:	4604      	mov	r4, r0
 8013d74:	b19b      	cbz	r3, 8013d9e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8013d76:	2002      	movs	r0, #2
 8013d78:	f7fd fa2c 	bl	80111d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8013d7c:	2300      	movs	r3, #0
 8013d7e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8013d82:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8013d86:	6823      	ldr	r3, [r4, #0]
 8013d88:	4620      	mov	r0, r4
 8013d8a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8013d8e:	f7ff fdbf 	bl	8013910 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d92:	462b      	mov	r3, r5
 8013d94:	4601      	mov	r1, r0
 8013d96:	4620      	mov	r0, r4
 8013d98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013d9c:	4718      	bx	r3
 8013d9e:	bd70      	pop	{r4, r5, r6, pc}

08013da0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8013da0:	b538      	push	{r3, r4, r5, lr}
 8013da2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8013da6:	428b      	cmp	r3, r1
 8013da8:	4604      	mov	r4, r0
 8013daa:	460d      	mov	r5, r1
 8013dac:	d006      	beq.n	8013dbc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8013dae:	6803      	ldr	r3, [r0, #0]
 8013db0:	b929      	cbnz	r1, 8013dbe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8013db2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013db6:	4798      	blx	r3
 8013db8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8013dbc:	bd38      	pop	{r3, r4, r5, pc}
 8013dbe:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8013dc2:	e7f8      	b.n	8013db6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08013dc4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8013dc4:	b510      	push	{r4, lr}
 8013dc6:	4b0d      	ldr	r3, [pc, #52]	; (8013dfc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8013dc8:	781b      	ldrb	r3, [r3, #0]
 8013dca:	4604      	mov	r4, r0
 8013dcc:	b95b      	cbnz	r3, 8013de6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013dce:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8013dd2:	2b02      	cmp	r3, #2
 8013dd4:	d007      	beq.n	8013de6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013dd6:	6840      	ldr	r0, [r0, #4]
 8013dd8:	f000 f90e 	bl	8013ff8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8013ddc:	b118      	cbz	r0, 8013de6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013dde:	6862      	ldr	r2, [r4, #4]
 8013de0:	7a53      	ldrb	r3, [r2, #9]
 8013de2:	2b00      	cmp	r3, #0
 8013de4:	d0fc      	beq.n	8013de0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8013de6:	f7fd fc7f 	bl	80116e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013dea:	4620      	mov	r0, r4
 8013dec:	2100      	movs	r1, #0
 8013dee:	f7ff ffd7 	bl	8013da0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013df2:	4620      	mov	r0, r4
 8013df4:	f7ff fd8c 	bl	8013910 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013df8:	bd10      	pop	{r4, pc}
 8013dfa:	bf00      	nop
 8013dfc:	20025996 	.word	0x20025996

08013e00 <_ZN8touchgfx13DMA_Interface5flushEv>:
 8013e00:	6803      	ldr	r3, [r0, #0]
 8013e02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013e04:	4718      	bx	r3

08013e06 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8013e06:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8013e0a:	1a13      	subs	r3, r2, r0
 8013e0c:	4258      	negs	r0, r3
 8013e0e:	4158      	adcs	r0, r3
 8013e10:	4770      	bx	lr

08013e12 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8013e12:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8013e16:	1a9b      	subs	r3, r3, r2
 8013e18:	2b00      	cmp	r3, #0
 8013e1a:	bfdc      	itt	le
 8013e1c:	6882      	ldrle	r2, [r0, #8]
 8013e1e:	189b      	addle	r3, r3, r2
 8013e20:	2b01      	cmp	r3, #1
 8013e22:	bfcc      	ite	gt
 8013e24:	2000      	movgt	r0, #0
 8013e26:	2001      	movle	r0, #1
 8013e28:	4770      	bx	lr

08013e2a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8013e2a:	6902      	ldr	r2, [r0, #16]
 8013e2c:	6843      	ldr	r3, [r0, #4]
 8013e2e:	2024      	movs	r0, #36	; 0x24
 8013e30:	fb00 3002 	mla	r0, r0, r2, r3
 8013e34:	4770      	bx	lr

08013e36 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8013e36:	6803      	ldr	r3, [r0, #0]
 8013e38:	691b      	ldr	r3, [r3, #16]
 8013e3a:	4718      	bx	r3

08013e3c <_ZN8touchgfx13DMA_Interface7executeEv>:
 8013e3c:	b570      	push	{r4, r5, r6, lr}
 8013e3e:	2301      	movs	r3, #1
 8013e40:	7203      	strb	r3, [r0, #8]
 8013e42:	4604      	mov	r4, r0
 8013e44:	6840      	ldr	r0, [r0, #4]
 8013e46:	6803      	ldr	r3, [r0, #0]
 8013e48:	699b      	ldr	r3, [r3, #24]
 8013e4a:	4798      	blx	r3
 8013e4c:	6803      	ldr	r3, [r0, #0]
 8013e4e:	2b40      	cmp	r3, #64	; 0x40
 8013e50:	4605      	mov	r5, r0
 8013e52:	d00c      	beq.n	8013e6e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013e54:	d810      	bhi.n	8013e78 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8013e56:	2b04      	cmp	r3, #4
 8013e58:	d01d      	beq.n	8013e96 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8013e5a:	d804      	bhi.n	8013e66 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8013e5c:	2b01      	cmp	r3, #1
 8013e5e:	d006      	beq.n	8013e6e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013e60:	2b02      	cmp	r3, #2
 8013e62:	d02c      	beq.n	8013ebe <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8013e64:	bd70      	pop	{r4, r5, r6, pc}
 8013e66:	2b08      	cmp	r3, #8
 8013e68:	d01d      	beq.n	8013ea6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8013e6a:	2b20      	cmp	r3, #32
 8013e6c:	d1fa      	bne.n	8013e64 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8013e6e:	6823      	ldr	r3, [r4, #0]
 8013e70:	4620      	mov	r0, r4
 8013e72:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013e74:	4798      	blx	r3
 8013e76:	e013      	b.n	8013ea0 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8013e78:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8013e7c:	d0f7      	beq.n	8013e6e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013e7e:	d804      	bhi.n	8013e8a <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8013e80:	2b80      	cmp	r3, #128	; 0x80
 8013e82:	d0f4      	beq.n	8013e6e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013e84:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8013e88:	e7f0      	b.n	8013e6c <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8013e8a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8013e8e:	d0ee      	beq.n	8013e6e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8013e90:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8013e94:	e7e5      	b.n	8013e62 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8013e96:	6823      	ldr	r3, [r4, #0]
 8013e98:	7f01      	ldrb	r1, [r0, #28]
 8013e9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013e9c:	4620      	mov	r0, r4
 8013e9e:	4798      	blx	r3
 8013ea0:	6823      	ldr	r3, [r4, #0]
 8013ea2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013ea4:	e006      	b.n	8013eb4 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8013ea6:	6823      	ldr	r3, [r4, #0]
 8013ea8:	7f01      	ldrb	r1, [r0, #28]
 8013eaa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013eac:	4620      	mov	r0, r4
 8013eae:	4798      	blx	r3
 8013eb0:	6823      	ldr	r3, [r4, #0]
 8013eb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013eb4:	4629      	mov	r1, r5
 8013eb6:	4620      	mov	r0, r4
 8013eb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013ebc:	4718      	bx	r3
 8013ebe:	6823      	ldr	r3, [r4, #0]
 8013ec0:	4620      	mov	r0, r4
 8013ec2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013ec4:	4798      	blx	r3
 8013ec6:	e7f3      	b.n	8013eb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08013ec8 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8013ec8:	4770      	bx	lr

08013eca <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8013eca:	4770      	bx	lr

08013ecc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8013ecc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8013ed0:	1ad2      	subs	r2, r2, r3
 8013ed2:	2a00      	cmp	r2, #0
 8013ed4:	b510      	push	{r4, lr}
 8013ed6:	bfdc      	itt	le
 8013ed8:	6884      	ldrle	r4, [r0, #8]
 8013eda:	1912      	addle	r2, r2, r4
 8013edc:	2a01      	cmp	r2, #1
 8013ede:	dd16      	ble.n	8013f0e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8013ee0:	6842      	ldr	r2, [r0, #4]
 8013ee2:	2424      	movs	r4, #36	; 0x24
 8013ee4:	fb04 2303 	mla	r3, r4, r3, r2
 8013ee8:	f101 0220 	add.w	r2, r1, #32
 8013eec:	f851 4b04 	ldr.w	r4, [r1], #4
 8013ef0:	f843 4b04 	str.w	r4, [r3], #4
 8013ef4:	4291      	cmp	r1, r2
 8013ef6:	d1f9      	bne.n	8013eec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8013ef8:	780a      	ldrb	r2, [r1, #0]
 8013efa:	701a      	strb	r2, [r3, #0]
 8013efc:	68c3      	ldr	r3, [r0, #12]
 8013efe:	6882      	ldr	r2, [r0, #8]
 8013f00:	f3bf 8f5b 	dmb	ish
 8013f04:	3301      	adds	r3, #1
 8013f06:	429a      	cmp	r2, r3
 8013f08:	bfd8      	it	le
 8013f0a:	1a9b      	suble	r3, r3, r2
 8013f0c:	60c3      	str	r3, [r0, #12]
 8013f0e:	bd10      	pop	{r4, pc}

08013f10 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8013f10:	6903      	ldr	r3, [r0, #16]
 8013f12:	6882      	ldr	r2, [r0, #8]
 8013f14:	f3bf 8f5b 	dmb	ish
 8013f18:	3301      	adds	r3, #1
 8013f1a:	429a      	cmp	r2, r3
 8013f1c:	bfd8      	it	le
 8013f1e:	1a9b      	suble	r3, r3, r2
 8013f20:	6103      	str	r3, [r0, #16]
 8013f22:	4770      	bx	lr

08013f24 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8013f24:	b570      	push	{r4, r5, r6, lr}
 8013f26:	4604      	mov	r4, r0
 8013f28:	460e      	mov	r6, r1
 8013f2a:	6860      	ldr	r0, [r4, #4]
 8013f2c:	6803      	ldr	r3, [r0, #0]
 8013f2e:	685b      	ldr	r3, [r3, #4]
 8013f30:	4798      	blx	r3
 8013f32:	2800      	cmp	r0, #0
 8013f34:	d1f9      	bne.n	8013f2a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8013f36:	4d0d      	ldr	r5, [pc, #52]	; (8013f6c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8013f38:	6828      	ldr	r0, [r5, #0]
 8013f3a:	6803      	ldr	r3, [r0, #0]
 8013f3c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013f3e:	4798      	blx	r3
 8013f40:	f7fd fbf4 	bl	801172c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8013f44:	6828      	ldr	r0, [r5, #0]
 8013f46:	2101      	movs	r1, #1
 8013f48:	f7ff ff2a 	bl	8013da0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013f4c:	6860      	ldr	r0, [r4, #4]
 8013f4e:	6803      	ldr	r3, [r0, #0]
 8013f50:	4631      	mov	r1, r6
 8013f52:	689b      	ldr	r3, [r3, #8]
 8013f54:	4798      	blx	r3
 8013f56:	6823      	ldr	r3, [r4, #0]
 8013f58:	4620      	mov	r0, r4
 8013f5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f5c:	4798      	blx	r3
 8013f5e:	6828      	ldr	r0, [r5, #0]
 8013f60:	6803      	ldr	r3, [r0, #0]
 8013f62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013f66:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013f68:	4718      	bx	r3
 8013f6a:	bf00      	nop
 8013f6c:	20025998 	.word	0x20025998

08013f70 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8013f70:	b508      	push	{r3, lr}
 8013f72:	f7fd fbb9 	bl	80116e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013f76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013f7a:	f7fd bbcb 	b.w	8011714 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08013f7e <_ZN8touchgfx13DMA_Interface5startEv>:
 8013f7e:	b510      	push	{r4, lr}
 8013f80:	4604      	mov	r4, r0
 8013f82:	6840      	ldr	r0, [r0, #4]
 8013f84:	6803      	ldr	r3, [r0, #0]
 8013f86:	681b      	ldr	r3, [r3, #0]
 8013f88:	4798      	blx	r3
 8013f8a:	b948      	cbnz	r0, 8013fa0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013f8c:	7a63      	ldrb	r3, [r4, #9]
 8013f8e:	b13b      	cbz	r3, 8013fa0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013f90:	7a23      	ldrb	r3, [r4, #8]
 8013f92:	b92b      	cbnz	r3, 8013fa0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013f94:	6823      	ldr	r3, [r4, #0]
 8013f96:	4620      	mov	r0, r4
 8013f98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013f9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f9e:	4718      	bx	r3
 8013fa0:	bd10      	pop	{r4, pc}

08013fa2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8013fa2:	b570      	push	{r4, r5, r6, lr}
 8013fa4:	4604      	mov	r4, r0
 8013fa6:	6840      	ldr	r0, [r0, #4]
 8013fa8:	6803      	ldr	r3, [r0, #0]
 8013faa:	681b      	ldr	r3, [r3, #0]
 8013fac:	4798      	blx	r3
 8013fae:	4605      	mov	r5, r0
 8013fb0:	b930      	cbnz	r0, 8013fc0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013fb2:	7a23      	ldrb	r3, [r4, #8]
 8013fb4:	b123      	cbz	r3, 8013fc0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013fb6:	6860      	ldr	r0, [r4, #4]
 8013fb8:	6803      	ldr	r3, [r0, #0]
 8013fba:	695b      	ldr	r3, [r3, #20]
 8013fbc:	4798      	blx	r3
 8013fbe:	7225      	strb	r5, [r4, #8]
 8013fc0:	6860      	ldr	r0, [r4, #4]
 8013fc2:	6803      	ldr	r3, [r0, #0]
 8013fc4:	681b      	ldr	r3, [r3, #0]
 8013fc6:	4798      	blx	r3
 8013fc8:	b928      	cbnz	r0, 8013fd6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8013fca:	6823      	ldr	r3, [r4, #0]
 8013fcc:	4620      	mov	r0, r4
 8013fce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013fd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013fd4:	4718      	bx	r3
 8013fd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013fda:	f7fd bbb3 	b.w	8011744 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

08013fe0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8013fe0:	b510      	push	{r4, lr}
 8013fe2:	4c04      	ldr	r4, [pc, #16]	; (8013ff4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8013fe4:	6082      	str	r2, [r0, #8]
 8013fe6:	2200      	movs	r2, #0
 8013fe8:	e9c0 4100 	strd	r4, r1, [r0]
 8013fec:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8013ff0:	bd10      	pop	{r4, pc}
 8013ff2:	bf00      	nop
 8013ff4:	0802bc04 	.word	0x0802bc04

08013ff8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8013ff8:	6840      	ldr	r0, [r0, #4]
 8013ffa:	6803      	ldr	r3, [r0, #0]
 8013ffc:	681b      	ldr	r3, [r3, #0]
 8013ffe:	4718      	bx	r3

08014000 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8014000:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8014004:	4770      	bx	lr

08014006 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8014006:	b510      	push	{r4, lr}
 8014008:	4604      	mov	r4, r0
 801400a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801400c:	b150      	cbz	r0, 8014024 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801400e:	6803      	ldr	r3, [r0, #0]
 8014010:	68db      	ldr	r3, [r3, #12]
 8014012:	4798      	blx	r3
 8014014:	b130      	cbz	r0, 8014024 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014016:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8014018:	6803      	ldr	r3, [r0, #0]
 801401a:	4621      	mov	r1, r4
 801401c:	689b      	ldr	r3, [r3, #8]
 801401e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014022:	4718      	bx	r3
 8014024:	bd10      	pop	{r4, pc}

08014026 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8014026:	b570      	push	{r4, r5, r6, lr}
 8014028:	790b      	ldrb	r3, [r1, #4]
 801402a:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801402e:	2b00      	cmp	r3, #0
 8014030:	bf0c      	ite	eq
 8014032:	2301      	moveq	r3, #1
 8014034:	2300      	movne	r3, #0
 8014036:	4604      	mov	r4, r0
 8014038:	460e      	mov	r6, r1
 801403a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801403e:	d109      	bne.n	8014054 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8014040:	b14d      	cbz	r5, 8014056 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8014042:	7933      	ldrb	r3, [r6, #4]
 8014044:	2b01      	cmp	r3, #1
 8014046:	d10c      	bne.n	8014062 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8014048:	6823      	ldr	r3, [r4, #0]
 801404a:	4620      	mov	r0, r4
 801404c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801404e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014052:	4718      	bx	r3
 8014054:	b12d      	cbz	r5, 8014062 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8014056:	6823      	ldr	r3, [r4, #0]
 8014058:	4620      	mov	r0, r4
 801405a:	695b      	ldr	r3, [r3, #20]
 801405c:	4798      	blx	r3
 801405e:	2d00      	cmp	r5, #0
 8014060:	d1ef      	bne.n	8014042 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8014062:	bd70      	pop	{r4, r5, r6, pc}

08014064 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014064:	2000      	movs	r0, #0
 8014066:	4770      	bx	lr

08014068 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014068:	4b07      	ldr	r3, [pc, #28]	; (8014088 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801406a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801406c:	881b      	ldrh	r3, [r3, #0]
 801406e:	4293      	cmp	r3, r2
 8014070:	bf81      	itttt	hi
 8014072:	4b06      	ldrhi	r3, [pc, #24]	; (801408c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014074:	681b      	ldrhi	r3, [r3, #0]
 8014076:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801407a:	7858      	ldrbhi	r0, [r3, #1]
 801407c:	bf8c      	ite	hi
 801407e:	f000 0003 	andhi.w	r0, r0, #3
 8014082:	2000      	movls	r0, #0
 8014084:	4770      	bx	lr
 8014086:	bf00      	nop
 8014088:	200259ec 	.word	0x200259ec
 801408c:	200259e8 	.word	0x200259e8

08014090 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014094:	4b10      	ldr	r3, [pc, #64]	; (80140d8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014096:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014098:	881b      	ldrh	r3, [r3, #0]
 801409a:	428b      	cmp	r3, r1
 801409c:	4604      	mov	r4, r0
 801409e:	d918      	bls.n	80140d2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80140a0:	6803      	ldr	r3, [r0, #0]
 80140a2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80140a4:	4b0d      	ldr	r3, [pc, #52]	; (80140dc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80140a6:	6818      	ldr	r0, [r3, #0]
 80140a8:	f7fc fd9a 	bl	8010be0 <_ZNK8touchgfx5Texts7getTextEt>
 80140ac:	6823      	ldr	r3, [r4, #0]
 80140ae:	4606      	mov	r6, r0
 80140b0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80140b2:	4620      	mov	r0, r4
 80140b4:	4798      	blx	r3
 80140b6:	6823      	ldr	r3, [r4, #0]
 80140b8:	4607      	mov	r7, r0
 80140ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80140be:	4620      	mov	r0, r4
 80140c0:	4798      	blx	r3
 80140c2:	463a      	mov	r2, r7
 80140c4:	4603      	mov	r3, r0
 80140c6:	4631      	mov	r1, r6
 80140c8:	4620      	mov	r0, r4
 80140ca:	46ac      	mov	ip, r5
 80140cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80140d0:	4760      	bx	ip
 80140d2:	2000      	movs	r0, #0
 80140d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80140d8:	200259ec 	.word	0x200259ec
 80140dc:	200259f4 	.word	0x200259f4

080140e0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80140e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80140e4:	4b17      	ldr	r3, [pc, #92]	; (8014144 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80140e6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80140e8:	881b      	ldrh	r3, [r3, #0]
 80140ea:	428b      	cmp	r3, r1
 80140ec:	4604      	mov	r4, r0
 80140ee:	d926      	bls.n	801413e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80140f0:	4b15      	ldr	r3, [pc, #84]	; (8014148 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80140f2:	681b      	ldr	r3, [r3, #0]
 80140f4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80140f8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80140fc:	4b13      	ldr	r3, [pc, #76]	; (801414c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80140fe:	7855      	ldrb	r5, [r2, #1]
 8014100:	681b      	ldr	r3, [r3, #0]
 8014102:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8014106:	6833      	ldr	r3, [r6, #0]
 8014108:	69df      	ldr	r7, [r3, #28]
 801410a:	4b11      	ldr	r3, [pc, #68]	; (8014150 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801410c:	6818      	ldr	r0, [r3, #0]
 801410e:	f7fc fd67 	bl	8010be0 <_ZNK8touchgfx5Texts7getTextEt>
 8014112:	6823      	ldr	r3, [r4, #0]
 8014114:	4680      	mov	r8, r0
 8014116:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014118:	4620      	mov	r0, r4
 801411a:	4798      	blx	r3
 801411c:	6823      	ldr	r3, [r4, #0]
 801411e:	4681      	mov	r9, r0
 8014120:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014124:	4620      	mov	r0, r4
 8014126:	4798      	blx	r3
 8014128:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801412c:	9000      	str	r0, [sp, #0]
 801412e:	464b      	mov	r3, r9
 8014130:	4642      	mov	r2, r8
 8014132:	4629      	mov	r1, r5
 8014134:	4630      	mov	r0, r6
 8014136:	47b8      	blx	r7
 8014138:	b003      	add	sp, #12
 801413a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801413e:	2000      	movs	r0, #0
 8014140:	e7fa      	b.n	8014138 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8014142:	bf00      	nop
 8014144:	200259ec 	.word	0x200259ec
 8014148:	200259e8 	.word	0x200259e8
 801414c:	200259f0 	.word	0x200259f0
 8014150:	200259f4 	.word	0x200259f4

08014154 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014154:	b40e      	push	{r1, r2, r3}
 8014156:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801415a:	4b2f      	ldr	r3, [pc, #188]	; (8014218 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801415c:	881a      	ldrh	r2, [r3, #0]
 801415e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014160:	429a      	cmp	r2, r3
 8014162:	b09d      	sub	sp, #116	; 0x74
 8014164:	4604      	mov	r4, r0
 8014166:	d954      	bls.n	8014212 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014168:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801421c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801416c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8014220 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8014170:	aa26      	add	r2, sp, #152	; 0x98
 8014172:	9202      	str	r2, [sp, #8]
 8014174:	f8d9 2000 	ldr.w	r2, [r9]
 8014178:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801417c:	f8d8 3000 	ldr.w	r3, [r8]
 8014180:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014184:	682b      	ldr	r3, [r5, #0]
 8014186:	4628      	mov	r0, r5
 8014188:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801418a:	4798      	blx	r3
 801418c:	b207      	sxth	r7, r0
 801418e:	4606      	mov	r6, r0
 8014190:	a803      	add	r0, sp, #12
 8014192:	f003 ff8a 	bl	80180aa <_ZN8touchgfx12TextProviderC1Ev>
 8014196:	682b      	ldr	r3, [r5, #0]
 8014198:	4628      	mov	r0, r5
 801419a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801419c:	4798      	blx	r3
 801419e:	682b      	ldr	r3, [r5, #0]
 80141a0:	4682      	mov	sl, r0
 80141a2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80141a4:	4628      	mov	r0, r5
 80141a6:	4798      	blx	r3
 80141a8:	4653      	mov	r3, sl
 80141aa:	9000      	str	r0, [sp, #0]
 80141ac:	9a02      	ldr	r2, [sp, #8]
 80141ae:	9925      	ldr	r1, [sp, #148]	; 0x94
 80141b0:	a803      	add	r0, sp, #12
 80141b2:	f003 ffd5 	bl	8018160 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80141b6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80141b8:	f8d9 3000 	ldr.w	r3, [r9]
 80141bc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80141c0:	8925      	ldrh	r5, [r4, #8]
 80141c2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80141c6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80141ca:	eba5 050c 	sub.w	r5, r5, ip
 80141ce:	784a      	ldrb	r2, [r1, #1]
 80141d0:	f8d8 3000 	ldr.w	r3, [r8]
 80141d4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80141d8:	b22d      	sxth	r5, r5
 80141da:	9500      	str	r5, [sp, #0]
 80141dc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80141e0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80141e4:	a803      	add	r0, sp, #12
 80141e6:	f001 fd65 	bl	8015cb4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80141ea:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80141ee:	18b9      	adds	r1, r7, r2
 80141f0:	2900      	cmp	r1, #0
 80141f2:	b203      	sxth	r3, r0
 80141f4:	dd0b      	ble.n	801420e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80141f6:	3b01      	subs	r3, #1
 80141f8:	fb13 f302 	smulbb	r3, r3, r2
 80141fc:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014200:	b21f      	sxth	r7, r3
 8014202:	4638      	mov	r0, r7
 8014204:	b01d      	add	sp, #116	; 0x74
 8014206:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801420a:	b003      	add	sp, #12
 801420c:	4770      	bx	lr
 801420e:	2b00      	cmp	r3, #0
 8014210:	dcf7      	bgt.n	8014202 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014212:	2700      	movs	r7, #0
 8014214:	e7f5      	b.n	8014202 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014216:	bf00      	nop
 8014218:	200259ec 	.word	0x200259ec
 801421c:	200259e8 	.word	0x200259e8
 8014220:	200259f0 	.word	0x200259f0

08014224 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8014224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014228:	4bbc      	ldr	r3, [pc, #752]	; (801451c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801422a:	460c      	mov	r4, r1
 801422c:	881b      	ldrh	r3, [r3, #0]
 801422e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8014230:	428b      	cmp	r3, r1
 8014232:	b0a9      	sub	sp, #164	; 0xa4
 8014234:	4680      	mov	r8, r0
 8014236:	d809      	bhi.n	801424c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8014238:	2300      	movs	r3, #0
 801423a:	f04f 32ff 	mov.w	r2, #4294967295
 801423e:	e9c0 3200 	strd	r3, r2, [r0]
 8014242:	6083      	str	r3, [r0, #8]
 8014244:	4640      	mov	r0, r8
 8014246:	b029      	add	sp, #164	; 0xa4
 8014248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801424c:	4eb4      	ldr	r6, [pc, #720]	; (8014520 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801424e:	6833      	ldr	r3, [r6, #0]
 8014250:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8014254:	4bb3      	ldr	r3, [pc, #716]	; (8014524 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8014256:	681b      	ldr	r3, [r3, #0]
 8014258:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801425c:	4bb2      	ldr	r3, [pc, #712]	; (8014528 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801425e:	6818      	ldr	r0, [r3, #0]
 8014260:	f7fc fcbe 	bl	8010be0 <_ZNK8touchgfx5Texts7getTextEt>
 8014264:	682b      	ldr	r3, [r5, #0]
 8014266:	4681      	mov	r9, r0
 8014268:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801426a:	4628      	mov	r0, r5
 801426c:	4798      	blx	r3
 801426e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8014270:	b203      	sxth	r3, r0
 8014272:	4407      	add	r7, r0
 8014274:	9304      	str	r3, [sp, #16]
 8014276:	b2bb      	uxth	r3, r7
 8014278:	9303      	str	r3, [sp, #12]
 801427a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801427e:	4682      	mov	sl, r0
 8014280:	a80f      	add	r0, sp, #60	; 0x3c
 8014282:	2b00      	cmp	r3, #0
 8014284:	f040 80a6 	bne.w	80143d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8014288:	f003 ff0f 	bl	80180aa <_ZN8touchgfx12TextProviderC1Ev>
 801428c:	682b      	ldr	r3, [r5, #0]
 801428e:	4628      	mov	r0, r5
 8014290:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014292:	4798      	blx	r3
 8014294:	682b      	ldr	r3, [r5, #0]
 8014296:	4606      	mov	r6, r0
 8014298:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801429a:	4628      	mov	r0, r5
 801429c:	4798      	blx	r3
 801429e:	6823      	ldr	r3, [r4, #0]
 80142a0:	4607      	mov	r7, r0
 80142a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80142a4:	4620      	mov	r0, r4
 80142a6:	4798      	blx	r3
 80142a8:	6823      	ldr	r3, [r4, #0]
 80142aa:	4683      	mov	fp, r0
 80142ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80142b0:	4620      	mov	r0, r4
 80142b2:	4798      	blx	r3
 80142b4:	463b      	mov	r3, r7
 80142b6:	e9cd b000 	strd	fp, r0, [sp]
 80142ba:	4649      	mov	r1, r9
 80142bc:	4632      	mov	r2, r6
 80142be:	a80f      	add	r0, sp, #60	; 0x3c
 80142c0:	f003 ff63 	bl	801818a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80142c4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80142c8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8014520 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80142cc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80142d0:	f04f 0600 	mov.w	r6, #0
 80142d4:	bf0c      	ite	eq
 80142d6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80142da:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80142de:	4637      	mov	r7, r6
 80142e0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80142e2:	f8db 3000 	ldr.w	r3, [fp]
 80142e6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80142ea:	4629      	mov	r1, r5
 80142ec:	785b      	ldrb	r3, [r3, #1]
 80142ee:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80142f2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80142f6:	a80f      	add	r0, sp, #60	; 0x3c
 80142f8:	f001 f9f7 	bl	80156ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80142fc:	9b03      	ldr	r3, [sp, #12]
 80142fe:	4286      	cmp	r6, r0
 8014300:	bfb8      	it	lt
 8014302:	4606      	movlt	r6, r0
 8014304:	3701      	adds	r7, #1
 8014306:	eba9 0903 	sub.w	r9, r9, r3
 801430a:	a80f      	add	r0, sp, #60	; 0x3c
 801430c:	b236      	sxth	r6, r6
 801430e:	b2bf      	uxth	r7, r7
 8014310:	fa0f f989 	sxth.w	r9, r9
 8014314:	f003 fef0 	bl	80180f8 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8014318:	b918      	cbnz	r0, 8014322 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801431a:	7a2b      	ldrb	r3, [r5, #8]
 801431c:	444b      	add	r3, r9
 801431e:	2b00      	cmp	r3, #0
 8014320:	dcde      	bgt.n	80142e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8014322:	9b03      	ldr	r3, [sp, #12]
 8014324:	9a04      	ldr	r2, [sp, #16]
 8014326:	f895 9009 	ldrb.w	r9, [r5, #9]
 801432a:	fb13 f707 	smulbb	r7, r3, r7
 801432e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8014330:	1aff      	subs	r7, r7, r3
 8014332:	b2bf      	uxth	r7, r7
 8014334:	b23b      	sxth	r3, r7
 8014336:	429a      	cmp	r2, r3
 8014338:	bfa8      	it	ge
 801433a:	4657      	movge	r7, sl
 801433c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014340:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014344:	6823      	ldr	r3, [r4, #0]
 8014346:	bf08      	it	eq
 8014348:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801434c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801434e:	bf18      	it	ne
 8014350:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8014354:	4620      	mov	r0, r4
 8014356:	4798      	blx	r3
 8014358:	444f      	add	r7, r9
 801435a:	fa1f f987 	uxth.w	r9, r7
 801435e:	2801      	cmp	r0, #1
 8014360:	fa0f f789 	sxth.w	r7, r9
 8014364:	b2b3      	uxth	r3, r6
 8014366:	f000 80e1 	beq.w	801452c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801436a:	2802      	cmp	r0, #2
 801436c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8014370:	f000 80e2 	beq.w	8014538 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8014374:	7aea      	ldrb	r2, [r5, #11]
 8014376:	7b2d      	ldrb	r5, [r5, #12]
 8014378:	b236      	sxth	r6, r6
 801437a:	1ab6      	subs	r6, r6, r2
 801437c:	442a      	add	r2, r5
 801437e:	4413      	add	r3, r2
 8014380:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8014384:	fa1f fa86 	uxth.w	sl, r6
 8014388:	b29b      	uxth	r3, r3
 801438a:	2a02      	cmp	r2, #2
 801438c:	fa0f fb8a 	sxth.w	fp, sl
 8014390:	b21e      	sxth	r6, r3
 8014392:	f000 80d5 	beq.w	8014540 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8014396:	2a03      	cmp	r2, #3
 8014398:	f000 80dd 	beq.w	8014556 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801439c:	2a01      	cmp	r2, #1
 801439e:	f040 80e5 	bne.w	801456c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80143a2:	8925      	ldrh	r5, [r4, #8]
 80143a4:	4633      	mov	r3, r6
 80143a6:	eba5 0909 	sub.w	r9, r5, r9
 80143aa:	463e      	mov	r6, r7
 80143ac:	465d      	mov	r5, fp
 80143ae:	461f      	mov	r7, r3
 80143b0:	fa0f fb89 	sxth.w	fp, r9
 80143b4:	4b5c      	ldr	r3, [pc, #368]	; (8014528 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80143b6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80143b8:	6818      	ldr	r0, [r3, #0]
 80143ba:	f7fc fc11 	bl	8010be0 <_ZNK8touchgfx5Texts7getTextEt>
 80143be:	f8a8 b000 	strh.w	fp, [r8]
 80143c2:	f8a8 5002 	strh.w	r5, [r8, #2]
 80143c6:	f8a8 6004 	strh.w	r6, [r8, #4]
 80143ca:	f8a8 7006 	strh.w	r7, [r8, #6]
 80143ce:	f8c8 0008 	str.w	r0, [r8, #8]
 80143d2:	e737      	b.n	8014244 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80143d4:	f003 fe69 	bl	80180aa <_ZN8touchgfx12TextProviderC1Ev>
 80143d8:	682b      	ldr	r3, [r5, #0]
 80143da:	4628      	mov	r0, r5
 80143dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80143de:	4798      	blx	r3
 80143e0:	682b      	ldr	r3, [r5, #0]
 80143e2:	4607      	mov	r7, r0
 80143e4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80143e6:	4628      	mov	r0, r5
 80143e8:	4798      	blx	r3
 80143ea:	6823      	ldr	r3, [r4, #0]
 80143ec:	4683      	mov	fp, r0
 80143ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80143f0:	4620      	mov	r0, r4
 80143f2:	4798      	blx	r3
 80143f4:	6822      	ldr	r2, [r4, #0]
 80143f6:	9005      	str	r0, [sp, #20]
 80143f8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80143fc:	4620      	mov	r0, r4
 80143fe:	4790      	blx	r2
 8014400:	9b05      	ldr	r3, [sp, #20]
 8014402:	9001      	str	r0, [sp, #4]
 8014404:	463a      	mov	r2, r7
 8014406:	4649      	mov	r1, r9
 8014408:	9300      	str	r3, [sp, #0]
 801440a:	a80f      	add	r0, sp, #60	; 0x3c
 801440c:	465b      	mov	r3, fp
 801440e:	f003 febc 	bl	801818a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014412:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014416:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801441a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801441c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8014420:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014424:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014428:	bf0a      	itet	eq
 801442a:	464a      	moveq	r2, r9
 801442c:	461a      	movne	r2, r3
 801442e:	4699      	moveq	r9, r3
 8014430:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8014434:	1ad2      	subs	r2, r2, r3
 8014436:	6833      	ldr	r3, [r6, #0]
 8014438:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801443c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014440:	af0f      	add	r7, sp, #60	; 0x3c
 8014442:	7859      	ldrb	r1, [r3, #1]
 8014444:	9707      	str	r7, [sp, #28]
 8014446:	2300      	movs	r3, #0
 8014448:	f3c1 0181 	ubfx	r1, r1, #2, #2
 801444c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014450:	f88d 1020 	strb.w	r1, [sp, #32]
 8014454:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8014458:	9509      	str	r5, [sp, #36]	; 0x24
 801445a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801445e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8014462:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8014466:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801446a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801446e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014472:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8014476:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801447a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801447e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8014482:	b350      	cbz	r0, 80144da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8014484:	682b      	ldr	r3, [r5, #0]
 8014486:	4628      	mov	r0, r5
 8014488:	695b      	ldr	r3, [r3, #20]
 801448a:	4798      	blx	r3
 801448c:	4607      	mov	r7, r0
 801448e:	b320      	cbz	r0, 80144da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8014490:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014492:	6803      	ldr	r3, [r0, #0]
 8014494:	4639      	mov	r1, r7
 8014496:	68db      	ldr	r3, [r3, #12]
 8014498:	4798      	blx	r3
 801449a:	4606      	mov	r6, r0
 801449c:	b1e8      	cbz	r0, 80144da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801449e:	7b43      	ldrb	r3, [r0, #13]
 80144a0:	7a82      	ldrb	r2, [r0, #10]
 80144a2:	005b      	lsls	r3, r3, #1
 80144a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80144a8:	4313      	orrs	r3, r2
 80144aa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80144ae:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80144b2:	2b06      	cmp	r3, #6
 80144b4:	d111      	bne.n	80144da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80144b6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80144b8:	6803      	ldr	r3, [r0, #0]
 80144ba:	4632      	mov	r2, r6
 80144bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80144be:	4639      	mov	r1, r7
 80144c0:	4798      	blx	r3
 80144c2:	7b73      	ldrb	r3, [r6, #13]
 80144c4:	005b      	lsls	r3, r3, #1
 80144c6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80144ca:	7ab3      	ldrb	r3, [r6, #10]
 80144cc:	4313      	orrs	r3, r2
 80144ce:	4418      	add	r0, r3
 80144d0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80144d4:	4418      	add	r0, r3
 80144d6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80144da:	2600      	movs	r6, #0
 80144dc:	4637      	mov	r7, r6
 80144de:	a806      	add	r0, sp, #24
 80144e0:	f001 fae4 	bl	8015aac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80144e4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80144e8:	9b03      	ldr	r3, [sp, #12]
 80144ea:	4286      	cmp	r6, r0
 80144ec:	eba9 0903 	sub.w	r9, r9, r3
 80144f0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80144f4:	bfb8      	it	lt
 80144f6:	4606      	movlt	r6, r0
 80144f8:	3701      	adds	r7, #1
 80144fa:	b236      	sxth	r6, r6
 80144fc:	b2bf      	uxth	r7, r7
 80144fe:	fa0f f989 	sxth.w	r9, r9
 8014502:	2b00      	cmp	r3, #0
 8014504:	f43f af0d 	beq.w	8014322 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8014508:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801450c:	2b00      	cmp	r3, #0
 801450e:	f47f af08 	bne.w	8014322 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8014512:	7a2b      	ldrb	r3, [r5, #8]
 8014514:	444b      	add	r3, r9
 8014516:	2b00      	cmp	r3, #0
 8014518:	dce1      	bgt.n	80144de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801451a:	e702      	b.n	8014322 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801451c:	200259ec 	.word	0x200259ec
 8014520:	200259e8 	.word	0x200259e8
 8014524:	200259f0 	.word	0x200259f0
 8014528:	200259f4 	.word	0x200259f4
 801452c:	ebaa 0606 	sub.w	r6, sl, r6
 8014530:	2002      	movs	r0, #2
 8014532:	fb96 f6f0 	sdiv	r6, r6, r0
 8014536:	e71d      	b.n	8014374 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8014538:	441e      	add	r6, r3
 801453a:	ebaa 0606 	sub.w	r6, sl, r6
 801453e:	e719      	b.n	8014374 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8014540:	8925      	ldrh	r5, [r4, #8]
 8014542:	1aed      	subs	r5, r5, r3
 8014544:	eba5 050a 	sub.w	r5, r5, sl
 8014548:	fa0f fb85 	sxth.w	fp, r5
 801454c:	8965      	ldrh	r5, [r4, #10]
 801454e:	eba5 0509 	sub.w	r5, r5, r9
 8014552:	b22d      	sxth	r5, r5
 8014554:	e72e      	b.n	80143b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8014556:	8965      	ldrh	r5, [r4, #10]
 8014558:	1aed      	subs	r5, r5, r3
 801455a:	eba5 050a 	sub.w	r5, r5, sl
 801455e:	4633      	mov	r3, r6
 8014560:	b22d      	sxth	r5, r5
 8014562:	463e      	mov	r6, r7
 8014564:	f04f 0b00 	mov.w	fp, #0
 8014568:	461f      	mov	r7, r3
 801456a:	e723      	b.n	80143b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801456c:	2500      	movs	r5, #0
 801456e:	e721      	b.n	80143b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08014570 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8014570:	b513      	push	{r0, r1, r4, lr}
 8014572:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8014576:	4604      	mov	r4, r0
 8014578:	b1fb      	cbz	r3, 80145ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801457a:	4b16      	ldr	r3, [pc, #88]	; (80145d4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801457c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801457e:	881b      	ldrh	r3, [r3, #0]
 8014580:	428b      	cmp	r3, r1
 8014582:	d91a      	bls.n	80145ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8014584:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014588:	2b00      	cmp	r3, #0
 801458a:	dd16      	ble.n	80145ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801458c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014590:	2b00      	cmp	r3, #0
 8014592:	dd12      	ble.n	80145ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8014594:	4b10      	ldr	r3, [pc, #64]	; (80145d8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8014596:	6818      	ldr	r0, [r3, #0]
 8014598:	f7fc fb22 	bl	8010be0 <_ZNK8touchgfx5Texts7getTextEt>
 801459c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80145a0:	6822      	ldr	r2, [r4, #0]
 80145a2:	2b00      	cmp	r3, #0
 80145a4:	db06      	blt.n	80145b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80145a6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80145aa:	2b00      	cmp	r3, #0
 80145ac:	db02      	blt.n	80145b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80145ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80145b0:	4298      	cmp	r0, r3
 80145b2:	d004      	beq.n	80145be <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80145b4:	6953      	ldr	r3, [r2, #20]
 80145b6:	4620      	mov	r0, r4
 80145b8:	4798      	blx	r3
 80145ba:	b002      	add	sp, #8
 80145bc:	bd10      	pop	{r4, pc}
 80145be:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80145c2:	c903      	ldmia	r1, {r0, r1}
 80145c4:	466b      	mov	r3, sp
 80145c6:	e883 0003 	stmia.w	r3, {r0, r1}
 80145ca:	6912      	ldr	r2, [r2, #16]
 80145cc:	4619      	mov	r1, r3
 80145ce:	4620      	mov	r0, r4
 80145d0:	4790      	blx	r2
 80145d2:	e7f2      	b.n	80145ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80145d4:	200259ec 	.word	0x200259ec
 80145d8:	200259f4 	.word	0x200259f4

080145dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80145dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80145e0:	4b44      	ldr	r3, [pc, #272]	; (80146f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80145e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80145e4:	881b      	ldrh	r3, [r3, #0]
 80145e6:	4293      	cmp	r3, r2
 80145e8:	b08e      	sub	sp, #56	; 0x38
 80145ea:	4604      	mov	r4, r0
 80145ec:	d97e      	bls.n	80146ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80145ee:	6808      	ldr	r0, [r1, #0]
 80145f0:	4d41      	ldr	r5, [pc, #260]	; (80146f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80145f2:	6849      	ldr	r1, [r1, #4]
 80145f4:	ab05      	add	r3, sp, #20
 80145f6:	c303      	stmia	r3!, {r0, r1}
 80145f8:	4611      	mov	r1, r2
 80145fa:	6828      	ldr	r0, [r5, #0]
 80145fc:	f7fc faf0 	bl	8010be0 <_ZNK8touchgfx5Texts7getTextEt>
 8014600:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8014604:	2b00      	cmp	r3, #0
 8014606:	db11      	blt.n	801462c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8014608:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801460c:	2b00      	cmp	r3, #0
 801460e:	db0d      	blt.n	801462c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8014610:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8014612:	4298      	cmp	r0, r3
 8014614:	d10a      	bne.n	801462c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8014616:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801461a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801461e:	ab09      	add	r3, sp, #36	; 0x24
 8014620:	e883 0003 	stmia.w	r3, {r0, r1}
 8014624:	4619      	mov	r1, r3
 8014626:	a805      	add	r0, sp, #20
 8014628:	f7fe fcee 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 801462c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014630:	2b00      	cmp	r3, #0
 8014632:	dd5b      	ble.n	80146ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8014634:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8014638:	2b00      	cmp	r3, #0
 801463a:	dd57      	ble.n	80146ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801463c:	4f2f      	ldr	r7, [pc, #188]	; (80146fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801463e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014640:	683b      	ldr	r3, [r7, #0]
 8014642:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8014646:	4b2e      	ldr	r3, [pc, #184]	; (8014700 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8014648:	681b      	ldr	r3, [r3, #0]
 801464a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801464e:	2e00      	cmp	r6, #0
 8014650:	d04c      	beq.n	80146ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8014652:	6823      	ldr	r3, [r4, #0]
 8014654:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8014658:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801465a:	4620      	mov	r0, r4
 801465c:	4798      	blx	r3
 801465e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014660:	683b      	ldr	r3, [r7, #0]
 8014662:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8014666:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801466a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801466e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8014670:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014674:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8014678:	785b      	ldrb	r3, [r3, #1]
 801467a:	9609      	str	r6, [sp, #36]	; 0x24
 801467c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014680:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8014684:	4b1f      	ldr	r3, [pc, #124]	; (8014704 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8014686:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801468a:	681b      	ldr	r3, [r3, #0]
 801468c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8014690:	910b      	str	r1, [sp, #44]	; 0x2c
 8014692:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8014696:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801469a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801469e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80146a2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80146a6:	b10a      	cbz	r2, 80146ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80146a8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80146aa:	b906      	cbnz	r6, 80146ae <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80146ac:	689e      	ldr	r6, [r3, #8]
 80146ae:	af07      	add	r7, sp, #28
 80146b0:	4621      	mov	r1, r4
 80146b2:	4638      	mov	r0, r7
 80146b4:	f003 f8e2 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80146b8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80146ba:	6828      	ldr	r0, [r5, #0]
 80146bc:	f7fc fa90 	bl	8010be0 <_ZNK8touchgfx5Texts7getTextEt>
 80146c0:	6823      	ldr	r3, [r4, #0]
 80146c2:	4605      	mov	r5, r0
 80146c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80146c6:	4620      	mov	r0, r4
 80146c8:	4798      	blx	r3
 80146ca:	6823      	ldr	r3, [r4, #0]
 80146cc:	4680      	mov	r8, r0
 80146ce:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80146d2:	4620      	mov	r0, r4
 80146d4:	4798      	blx	r3
 80146d6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80146da:	ab09      	add	r3, sp, #36	; 0x24
 80146dc:	9300      	str	r3, [sp, #0]
 80146de:	9501      	str	r5, [sp, #4]
 80146e0:	ab05      	add	r3, sp, #20
 80146e2:	e897 0006 	ldmia.w	r7, {r1, r2}
 80146e6:	4630      	mov	r0, r6
 80146e8:	f7fc fa0b 	bl	8010b02 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80146ec:	b00e      	add	sp, #56	; 0x38
 80146ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80146f2:	bf00      	nop
 80146f4:	200259ec 	.word	0x200259ec
 80146f8:	200259f4 	.word	0x200259f4
 80146fc:	200259e8 	.word	0x200259e8
 8014700:	200259f0 	.word	0x200259f0
 8014704:	20025998 	.word	0x20025998

08014708 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8014708:	b538      	push	{r3, r4, r5, lr}
 801470a:	4b0e      	ldr	r3, [pc, #56]	; (8014744 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801470c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801470e:	881b      	ldrh	r3, [r3, #0]
 8014710:	429a      	cmp	r2, r3
 8014712:	4604      	mov	r4, r0
 8014714:	d214      	bcs.n	8014740 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8014716:	6803      	ldr	r3, [r0, #0]
 8014718:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801471a:	4798      	blx	r3
 801471c:	6823      	ldr	r3, [r4, #0]
 801471e:	4605      	mov	r5, r0
 8014720:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8014722:	4620      	mov	r0, r4
 8014724:	4798      	blx	r3
 8014726:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801472a:	b22d      	sxth	r5, r5
 801472c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014730:	4601      	mov	r1, r0
 8014732:	bf06      	itte	eq
 8014734:	4602      	moveq	r2, r0
 8014736:	4629      	moveq	r1, r5
 8014738:	462a      	movne	r2, r5
 801473a:	4620      	mov	r0, r4
 801473c:	f7fa fef5 	bl	800f52a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8014740:	bd38      	pop	{r3, r4, r5, pc}
 8014742:	bf00      	nop
 8014744:	200259ec 	.word	0x200259ec

08014748 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8014748:	b530      	push	{r4, r5, lr}
 801474a:	888b      	ldrh	r3, [r1, #4]
 801474c:	8583      	strh	r3, [r0, #44]	; 0x2c
 801474e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014752:	b085      	sub	sp, #20
 8014754:	4604      	mov	r4, r0
 8014756:	b923      	cbnz	r3, 8014762 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8014758:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801475c:	b90b      	cbnz	r3, 8014762 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801475e:	f7ff ffd3 	bl	8014708 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8014762:	6823      	ldr	r3, [r4, #0]
 8014764:	466d      	mov	r5, sp
 8014766:	4621      	mov	r1, r4
 8014768:	4628      	mov	r0, r5
 801476a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801476e:	4798      	blx	r3
 8014770:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8014774:	343c      	adds	r4, #60	; 0x3c
 8014776:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801477a:	b005      	add	sp, #20
 801477c:	bd30      	pop	{r4, r5, pc}

0801477e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801477e:	2300      	movs	r3, #0
 8014780:	8083      	strh	r3, [r0, #4]
 8014782:	80c3      	strh	r3, [r0, #6]
 8014784:	8003      	strh	r3, [r0, #0]
 8014786:	8043      	strh	r3, [r0, #2]
 8014788:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801478c:	2bff      	cmp	r3, #255	; 0xff
 801478e:	bf01      	itttt	eq
 8014790:	890b      	ldrheq	r3, [r1, #8]
 8014792:	8083      	strheq	r3, [r0, #4]
 8014794:	894b      	ldrheq	r3, [r1, #10]
 8014796:	80c3      	strheq	r3, [r0, #6]
 8014798:	4770      	bx	lr
	...

0801479c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801479c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801479e:	4604      	mov	r4, r0
 80147a0:	6808      	ldr	r0, [r1, #0]
 80147a2:	6849      	ldr	r1, [r1, #4]
 80147a4:	466b      	mov	r3, sp
 80147a6:	c303      	stmia	r3!, {r0, r1}
 80147a8:	6823      	ldr	r3, [r4, #0]
 80147aa:	4669      	mov	r1, sp
 80147ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80147ae:	4620      	mov	r0, r4
 80147b0:	4798      	blx	r3
 80147b2:	4b08      	ldr	r3, [pc, #32]	; (80147d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80147b4:	681b      	ldr	r3, [r3, #0]
 80147b6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80147ba:	b10a      	cbz	r2, 80147c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80147bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80147be:	b900      	cbnz	r0, 80147c2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80147c0:	6898      	ldr	r0, [r3, #8]
 80147c2:	6803      	ldr	r3, [r0, #0]
 80147c4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80147c6:	6a1d      	ldr	r5, [r3, #32]
 80147c8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80147cc:	4669      	mov	r1, sp
 80147ce:	47a8      	blx	r5
 80147d0:	b003      	add	sp, #12
 80147d2:	bd30      	pop	{r4, r5, pc}
 80147d4:	20025998 	.word	0x20025998

080147d8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80147d8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80147dc:	b12a      	cbz	r2, 80147ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80147de:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80147e2:	b112      	cbz	r2, 80147ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80147e4:	6803      	ldr	r3, [r0, #0]
 80147e6:	695b      	ldr	r3, [r3, #20]
 80147e8:	4718      	bx	r3
 80147ea:	4770      	bx	lr

080147ec <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80147ec:	b570      	push	{r4, r5, r6, lr}
 80147ee:	880b      	ldrh	r3, [r1, #0]
 80147f0:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80147f2:	4605      	mov	r5, r0
 80147f4:	8813      	ldrh	r3, [r2, #0]
 80147f6:	f825 3f30 	strh.w	r3, [r5, #48]!
 80147fa:	4604      	mov	r4, r0
 80147fc:	4628      	mov	r0, r5
 80147fe:	f004 ffdf 	bl	80197c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014802:	4606      	mov	r6, r0
 8014804:	4628      	mov	r0, r5
 8014806:	f005 f80f 	bl	8019828 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801480a:	6823      	ldr	r3, [r4, #0]
 801480c:	4605      	mov	r5, r0
 801480e:	4631      	mov	r1, r6
 8014810:	4620      	mov	r0, r4
 8014812:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014814:	4798      	blx	r3
 8014816:	6823      	ldr	r3, [r4, #0]
 8014818:	4629      	mov	r1, r5
 801481a:	4620      	mov	r0, r4
 801481c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801481e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014822:	4718      	bx	r3

08014824 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8014824:	b510      	push	{r4, lr}
 8014826:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 801482a:	2bff      	cmp	r3, #255	; 0xff
 801482c:	4604      	mov	r4, r0
 801482e:	d006      	beq.n	801483e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8014830:	2300      	movs	r3, #0
 8014832:	8003      	strh	r3, [r0, #0]
 8014834:	8043      	strh	r3, [r0, #2]
 8014836:	8083      	strh	r3, [r0, #4]
 8014838:	80c3      	strh	r3, [r0, #6]
 801483a:	4620      	mov	r0, r4
 801483c:	bd10      	pop	{r4, pc}
 801483e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8014842:	b11b      	cbz	r3, 801484c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8014844:	3130      	adds	r1, #48	; 0x30
 8014846:	f005 f823 	bl	8019890 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801484a:	e7f6      	b.n	801483a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 801484c:	312e      	adds	r1, #46	; 0x2e
 801484e:	e7fa      	b.n	8014846 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08014850 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8014850:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014854:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8014858:	b08a      	sub	sp, #40	; 0x28
 801485a:	4604      	mov	r4, r0
 801485c:	4688      	mov	r8, r1
 801485e:	2b00      	cmp	r3, #0
 8014860:	d066      	beq.n	8014930 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8014862:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8014864:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014868:	a805      	add	r0, sp, #20
 801486a:	f004 ffa9 	bl	80197c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801486e:	4607      	mov	r7, r0
 8014870:	a805      	add	r0, sp, #20
 8014872:	f004 ffd9 	bl	8019828 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014876:	f9b8 6000 	ldrsh.w	r6, [r8]
 801487a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801487e:	4432      	add	r2, r6
 8014880:	b292      	uxth	r2, r2
 8014882:	2300      	movs	r3, #0
 8014884:	fa0f fc82 	sxth.w	ip, r2
 8014888:	459c      	cmp	ip, r3
 801488a:	9306      	str	r3, [sp, #24]
 801488c:	dd52      	ble.n	8014934 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801488e:	42b7      	cmp	r7, r6
 8014890:	dd50      	ble.n	8014934 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8014892:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8014896:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801489a:	442b      	add	r3, r5
 801489c:	b29b      	uxth	r3, r3
 801489e:	b219      	sxth	r1, r3
 80148a0:	2900      	cmp	r1, #0
 80148a2:	dd47      	ble.n	8014934 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80148a4:	42a8      	cmp	r0, r5
 80148a6:	dd45      	ble.n	8014934 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80148a8:	4567      	cmp	r7, ip
 80148aa:	bfb8      	it	lt
 80148ac:	b2ba      	uxthlt	r2, r7
 80148ae:	4288      	cmp	r0, r1
 80148b0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80148b4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80148b8:	bfb8      	it	lt
 80148ba:	b283      	uxthlt	r3, r0
 80148bc:	1b92      	subs	r2, r2, r6
 80148be:	1b5b      	subs	r3, r3, r5
 80148c0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80148c4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80148c8:	f8ad 6018 	strh.w	r6, [sp, #24]
 80148cc:	f8ad 501a 	strh.w	r5, [sp, #26]
 80148d0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80148d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80148d8:	429a      	cmp	r2, r3
 80148da:	d026      	beq.n	801492a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80148dc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80148e0:	2b00      	cmp	r3, #0
 80148e2:	dd22      	ble.n	801492a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80148e4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80148e8:	2b00      	cmp	r3, #0
 80148ea:	dd1e      	ble.n	801492a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80148ec:	2300      	movs	r3, #0
 80148ee:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80148f2:	6823      	ldr	r3, [r4, #0]
 80148f4:	a908      	add	r1, sp, #32
 80148f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80148f8:	4620      	mov	r0, r4
 80148fa:	4798      	blx	r3
 80148fc:	4b0f      	ldr	r3, [pc, #60]	; (801493c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80148fe:	681b      	ldr	r3, [r3, #0]
 8014900:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014904:	b10a      	cbz	r2, 801490a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8014906:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014908:	b900      	cbnz	r0, 801490c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 801490a:	6898      	ldr	r0, [r3, #8]
 801490c:	6801      	ldr	r1, [r0, #0]
 801490e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8014912:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014916:	2501      	movs	r5, #1
 8014918:	9502      	str	r5, [sp, #8]
 801491a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801491e:	9401      	str	r4, [sp, #4]
 8014920:	ac06      	add	r4, sp, #24
 8014922:	9400      	str	r4, [sp, #0]
 8014924:	688c      	ldr	r4, [r1, #8]
 8014926:	a905      	add	r1, sp, #20
 8014928:	47a0      	blx	r4
 801492a:	b00a      	add	sp, #40	; 0x28
 801492c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014930:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8014932:	e797      	b.n	8014864 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8014934:	2300      	movs	r3, #0
 8014936:	9307      	str	r3, [sp, #28]
 8014938:	e7ca      	b.n	80148d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 801493a:	bf00      	nop
 801493c:	20025998 	.word	0x20025998

08014940 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8014940:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8014944:	b12a      	cbz	r2, 8014952 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8014946:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801494a:	b112      	cbz	r2, 8014952 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801494c:	6803      	ldr	r3, [r0, #0]
 801494e:	695b      	ldr	r3, [r3, #20]
 8014950:	4718      	bx	r3
 8014952:	4770      	bx	lr

08014954 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8014954:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014958:	4b2f      	ldr	r3, [pc, #188]	; (8014a18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 801495a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801495c:	881b      	ldrh	r3, [r3, #0]
 801495e:	4293      	cmp	r3, r2
 8014960:	b08d      	sub	sp, #52	; 0x34
 8014962:	4604      	mov	r4, r0
 8014964:	460f      	mov	r7, r1
 8014966:	d954      	bls.n	8014a12 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8014968:	4b2c      	ldr	r3, [pc, #176]	; (8014a1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 801496a:	6819      	ldr	r1, [r3, #0]
 801496c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8014970:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8014974:	4a2a      	ldr	r2, [pc, #168]	; (8014a20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8014976:	6812      	ldr	r2, [r2, #0]
 8014978:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 801497c:	2900      	cmp	r1, #0
 801497e:	d048      	beq.n	8014a12 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8014980:	785a      	ldrb	r2, [r3, #1]
 8014982:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014986:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801498a:	4b26      	ldr	r3, [pc, #152]	; (8014a24 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 801498c:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8014990:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8014994:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8014998:	6b26      	ldr	r6, [r4, #48]	; 0x30
 801499a:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801499e:	9107      	str	r1, [sp, #28]
 80149a0:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80149a4:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80149a8:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80149ac:	681a      	ldr	r2, [r3, #0]
 80149ae:	f88d 8020 	strb.w	r8, [sp, #32]
 80149b2:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80149b6:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80149ba:	9609      	str	r6, [sp, #36]	; 0x24
 80149bc:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80149c0:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80149c4:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80149c8:	b10b      	cbz	r3, 80149ce <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80149ca:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80149cc:	b905      	cbnz	r5, 80149d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80149ce:	6895      	ldr	r5, [r2, #8]
 80149d0:	ae05      	add	r6, sp, #20
 80149d2:	4621      	mov	r1, r4
 80149d4:	4630      	mov	r0, r6
 80149d6:	f002 ff51 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80149da:	4b13      	ldr	r3, [pc, #76]	; (8014a28 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80149dc:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80149de:	6818      	ldr	r0, [r3, #0]
 80149e0:	f7fc f8fe 	bl	8010be0 <_ZNK8touchgfx5Texts7getTextEt>
 80149e4:	6823      	ldr	r3, [r4, #0]
 80149e6:	4680      	mov	r8, r0
 80149e8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80149ea:	4620      	mov	r0, r4
 80149ec:	4798      	blx	r3
 80149ee:	6823      	ldr	r3, [r4, #0]
 80149f0:	4681      	mov	r9, r0
 80149f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80149f6:	4620      	mov	r0, r4
 80149f8:	4798      	blx	r3
 80149fa:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80149fe:	ab07      	add	r3, sp, #28
 8014a00:	9300      	str	r3, [sp, #0]
 8014a02:	f8cd 8004 	str.w	r8, [sp, #4]
 8014a06:	463b      	mov	r3, r7
 8014a08:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014a0c:	4628      	mov	r0, r5
 8014a0e:	f7fc f878 	bl	8010b02 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8014a12:	b00d      	add	sp, #52	; 0x34
 8014a14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014a18:	200259ec 	.word	0x200259ec
 8014a1c:	200259e8 	.word	0x200259e8
 8014a20:	200259f0 	.word	0x200259f0
 8014a24:	20025998 	.word	0x20025998
 8014a28:	200259f4 	.word	0x200259f4

08014a2c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8014a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014a30:	4604      	mov	r4, r0
 8014a32:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8014a34:	8962      	ldrh	r2, [r4, #10]
 8014a36:	b218      	sxth	r0, r3
 8014a38:	460e      	mov	r6, r1
 8014a3a:	005b      	lsls	r3, r3, #1
 8014a3c:	8921      	ldrh	r1, [r4, #8]
 8014a3e:	b29b      	uxth	r3, r3
 8014a40:	1ac9      	subs	r1, r1, r3
 8014a42:	b08e      	sub	sp, #56	; 0x38
 8014a44:	b209      	sxth	r1, r1
 8014a46:	1ad3      	subs	r3, r2, r3
 8014a48:	b21b      	sxth	r3, r3
 8014a4a:	2900      	cmp	r1, #0
 8014a4c:	f8ad 0000 	strh.w	r0, [sp]
 8014a50:	f8ad 0002 	strh.w	r0, [sp, #2]
 8014a54:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014a58:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014a5c:	dd5e      	ble.n	8014b1c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8014a5e:	2b00      	cmp	r3, #0
 8014a60:	dd5c      	ble.n	8014b1c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8014a62:	6830      	ldr	r0, [r6, #0]
 8014a64:	6871      	ldr	r1, [r6, #4]
 8014a66:	ab02      	add	r3, sp, #8
 8014a68:	c303      	stmia	r3!, {r0, r1}
 8014a6a:	4669      	mov	r1, sp
 8014a6c:	a802      	add	r0, sp, #8
 8014a6e:	f7fe facb 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8014a72:	4620      	mov	r0, r4
 8014a74:	a902      	add	r1, sp, #8
 8014a76:	f7ff fe91 	bl	801479c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8014a7a:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 8014a7c:	2800      	cmp	r0, #0
 8014a7e:	d05f      	beq.n	8014b40 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8014a80:	8963      	ldrh	r3, [r4, #10]
 8014a82:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014a86:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014a8a:	1a1f      	subs	r7, r3, r0
 8014a8c:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8014a90:	b202      	sxth	r2, r0
 8014a92:	2500      	movs	r5, #0
 8014a94:	b21b      	sxth	r3, r3
 8014a96:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8014a9a:	1a09      	subs	r1, r1, r0
 8014a9c:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8014aa0:	9506      	str	r5, [sp, #24]
 8014aa2:	f8ad 201e 	strh.w	r2, [sp, #30]
 8014aa6:	f8ad 5020 	strh.w	r5, [sp, #32]
 8014aaa:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8014aae:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8014ab2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8014ab6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8014aba:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014abe:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8014ac2:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014ac6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014aca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014ace:	af04      	add	r7, sp, #16
 8014ad0:	ab06      	add	r3, sp, #24
 8014ad2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014ad6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014ada:	e887 0003 	stmia.w	r7, {r0, r1}
 8014ade:	4631      	mov	r1, r6
 8014ae0:	4638      	mov	r0, r7
 8014ae2:	f7fe fa91 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8014ae6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8014aea:	2b00      	cmp	r3, #0
 8014aec:	dd12      	ble.n	8014b14 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8014aee:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014af2:	2b00      	cmp	r3, #0
 8014af4:	dd0e      	ble.n	8014b14 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8014af6:	6823      	ldr	r3, [r4, #0]
 8014af8:	4639      	mov	r1, r7
 8014afa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014afc:	4620      	mov	r0, r4
 8014afe:	4798      	blx	r3
 8014b00:	f7f9 ff1c 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 8014b04:	6803      	ldr	r3, [r0, #0]
 8014b06:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014b08:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8014b0c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8014b10:	4639      	mov	r1, r7
 8014b12:	47c0      	blx	r8
 8014b14:	3501      	adds	r5, #1
 8014b16:	2d04      	cmp	r5, #4
 8014b18:	d1da      	bne.n	8014ad0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8014b1a:	e011      	b.n	8014b40 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8014b1c:	6830      	ldr	r0, [r6, #0]
 8014b1e:	6871      	ldr	r1, [r6, #4]
 8014b20:	ab06      	add	r3, sp, #24
 8014b22:	c303      	stmia	r3!, {r0, r1}
 8014b24:	6823      	ldr	r3, [r4, #0]
 8014b26:	a906      	add	r1, sp, #24
 8014b28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014b2a:	4620      	mov	r0, r4
 8014b2c:	4798      	blx	r3
 8014b2e:	f7f9 ff05 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 8014b32:	6803      	ldr	r3, [r0, #0]
 8014b34:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014b36:	6a1d      	ldr	r5, [r3, #32]
 8014b38:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8014b3c:	a906      	add	r1, sp, #24
 8014b3e:	47a8      	blx	r5
 8014b40:	b00e      	add	sp, #56	; 0x38
 8014b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014b46 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8014b46:	b570      	push	{r4, r5, r6, lr}
 8014b48:	880b      	ldrh	r3, [r1, #0]
 8014b4a:	84c3      	strh	r3, [r0, #38]	; 0x26
 8014b4c:	4604      	mov	r4, r0
 8014b4e:	4608      	mov	r0, r1
 8014b50:	460d      	mov	r5, r1
 8014b52:	f004 fe35 	bl	80197c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014b56:	4606      	mov	r6, r0
 8014b58:	4628      	mov	r0, r5
 8014b5a:	f004 fe65 	bl	8019828 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014b5e:	6823      	ldr	r3, [r4, #0]
 8014b60:	4605      	mov	r5, r0
 8014b62:	4631      	mov	r1, r6
 8014b64:	4620      	mov	r0, r4
 8014b66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b68:	4798      	blx	r3
 8014b6a:	6823      	ldr	r3, [r4, #0]
 8014b6c:	4629      	mov	r1, r5
 8014b6e:	4620      	mov	r0, r4
 8014b70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014b72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014b76:	4718      	bx	r3

08014b78 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8014b78:	b510      	push	{r4, lr}
 8014b7a:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8014b7e:	2bff      	cmp	r3, #255	; 0xff
 8014b80:	4604      	mov	r4, r0
 8014b82:	d006      	beq.n	8014b92 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8014b84:	2300      	movs	r3, #0
 8014b86:	8003      	strh	r3, [r0, #0]
 8014b88:	8043      	strh	r3, [r0, #2]
 8014b8a:	8083      	strh	r3, [r0, #4]
 8014b8c:	80c3      	strh	r3, [r0, #6]
 8014b8e:	4620      	mov	r0, r4
 8014b90:	bd10      	pop	{r4, pc}
 8014b92:	3126      	adds	r1, #38	; 0x26
 8014b94:	f004 fe7c 	bl	8019890 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014b98:	e7f9      	b.n	8014b8e <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08014b9a <_ZNK8touchgfx5Image17invalidateContentEv>:
 8014b9a:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8014b9e:	b12a      	cbz	r2, 8014bac <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8014ba0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8014ba4:	b112      	cbz	r2, 8014bac <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8014ba6:	6803      	ldr	r3, [r0, #0]
 8014ba8:	695b      	ldr	r3, [r3, #20]
 8014baa:	4718      	bx	r3
 8014bac:	4770      	bx	lr
	...

08014bb0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8014bb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014bb4:	4604      	mov	r4, r0
 8014bb6:	b088      	sub	sp, #32
 8014bb8:	f854 3b26 	ldr.w	r3, [r4], #38
 8014bbc:	2500      	movs	r5, #0
 8014bbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014bc0:	460f      	mov	r7, r1
 8014bc2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8014bc6:	a904      	add	r1, sp, #16
 8014bc8:	4606      	mov	r6, r0
 8014bca:	4798      	blx	r3
 8014bcc:	4620      	mov	r0, r4
 8014bce:	f004 fdf7 	bl	80197c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014bd2:	4680      	mov	r8, r0
 8014bd4:	4620      	mov	r0, r4
 8014bd6:	f004 fe27 	bl	8019828 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014bda:	9506      	str	r5, [sp, #24]
 8014bdc:	ad06      	add	r5, sp, #24
 8014bde:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014be2:	4639      	mov	r1, r7
 8014be4:	4628      	mov	r0, r5
 8014be6:	f8ad 801c 	strh.w	r8, [sp, #28]
 8014bea:	f7fe fa0d 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8014bee:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014bf2:	2b00      	cmp	r3, #0
 8014bf4:	dd19      	ble.n	8014c2a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014bf6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8014bfa:	2b00      	cmp	r3, #0
 8014bfc:	dd15      	ble.n	8014c2a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014bfe:	4b0c      	ldr	r3, [pc, #48]	; (8014c30 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8014c00:	681b      	ldr	r3, [r3, #0]
 8014c02:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014c06:	b10a      	cbz	r2, 8014c0c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8014c08:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014c0a:	b900      	cbnz	r0, 8014c0e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8014c0c:	6898      	ldr	r0, [r3, #8]
 8014c0e:	6801      	ldr	r1, [r0, #0]
 8014c10:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014c14:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014c18:	2701      	movs	r7, #1
 8014c1a:	9702      	str	r7, [sp, #8]
 8014c1c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8014c20:	e9cd 5600 	strd	r5, r6, [sp]
 8014c24:	688d      	ldr	r5, [r1, #8]
 8014c26:	4621      	mov	r1, r4
 8014c28:	47a8      	blx	r5
 8014c2a:	b008      	add	sp, #32
 8014c2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014c30:	20025998 	.word	0x20025998

08014c34 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014c34:	b510      	push	{r4, lr}
 8014c36:	6803      	ldr	r3, [r0, #0]
 8014c38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c3a:	460c      	mov	r4, r1
 8014c3c:	4798      	blx	r3
 8014c3e:	1b03      	subs	r3, r0, r4
 8014c40:	4258      	negs	r0, r3
 8014c42:	4158      	adcs	r0, r3
 8014c44:	bd10      	pop	{r4, pc}
	...

08014c48 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014c48:	4b01      	ldr	r3, [pc, #4]	; (8014c50 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014c4a:	6019      	str	r1, [r3, #0]
 8014c4c:	4770      	bx	lr
 8014c4e:	bf00      	nop
 8014c50:	200259a0 	.word	0x200259a0

08014c54 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c58:	4696      	mov	lr, r2
 8014c5a:	4605      	mov	r5, r0
 8014c5c:	4614      	mov	r4, r2
 8014c5e:	460e      	mov	r6, r1
 8014c60:	461f      	mov	r7, r3
 8014c62:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014c66:	b097      	sub	sp, #92	; 0x5c
 8014c68:	f10d 0c1c 	add.w	ip, sp, #28
 8014c6c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014c70:	f8de 3000 	ldr.w	r3, [lr]
 8014c74:	f8cc 3000 	str.w	r3, [ip]
 8014c78:	f104 0e14 	add.w	lr, r4, #20
 8014c7c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014c80:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014c84:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014c88:	f8de 3000 	ldr.w	r3, [lr]
 8014c8c:	f8cc 3000 	str.w	r3, [ip]
 8014c90:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014c94:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014c98:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014c9c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014ca0:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014ca4:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8014ca8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014cac:	f8de 3000 	ldr.w	r3, [lr]
 8014cb0:	f8cc 3000 	str.w	r3, [ip]
 8014cb4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014cb6:	682b      	ldr	r3, [r5, #0]
 8014cb8:	9201      	str	r2, [sp, #4]
 8014cba:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014cbe:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014cc0:	9200      	str	r2, [sp, #0]
 8014cc2:	f8cd 8008 	str.w	r8, [sp, #8]
 8014cc6:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8014cca:	aa07      	add	r2, sp, #28
 8014ccc:	463b      	mov	r3, r7
 8014cce:	4631      	mov	r1, r6
 8014cd0:	4628      	mov	r0, r5
 8014cd2:	47d8      	blx	fp
 8014cd4:	46a6      	mov	lr, r4
 8014cd6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014cda:	f10d 0c1c 	add.w	ip, sp, #28
 8014cde:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014ce2:	f8de 3000 	ldr.w	r3, [lr]
 8014ce6:	f8cc 3000 	str.w	r3, [ip]
 8014cea:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014cee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014cf2:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014cf6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014cfa:	343c      	adds	r4, #60	; 0x3c
 8014cfc:	f8de 3000 	ldr.w	r3, [lr]
 8014d00:	f8cc 3000 	str.w	r3, [ip]
 8014d04:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014d06:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014d0a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014d0e:	6823      	ldr	r3, [r4, #0]
 8014d10:	f8cc 3000 	str.w	r3, [ip]
 8014d14:	682b      	ldr	r3, [r5, #0]
 8014d16:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014d1a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014d1c:	9201      	str	r2, [sp, #4]
 8014d1e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014d20:	9200      	str	r2, [sp, #0]
 8014d22:	f8cd 8008 	str.w	r8, [sp, #8]
 8014d26:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014d28:	aa07      	add	r2, sp, #28
 8014d2a:	463b      	mov	r3, r7
 8014d2c:	4631      	mov	r1, r6
 8014d2e:	4628      	mov	r0, r5
 8014d30:	47a0      	blx	r4
 8014d32:	b017      	add	sp, #92	; 0x5c
 8014d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014d38 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014d38:	2000      	movs	r0, #0
 8014d3a:	4770      	bx	lr

08014d3c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d40:	b08d      	sub	sp, #52	; 0x34
 8014d42:	4688      	mov	r8, r1
 8014d44:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014d46:	f8d3 c000 	ldr.w	ip, [r3]
 8014d4a:	680f      	ldr	r7, [r1, #0]
 8014d4c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014d50:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014d54:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014d58:	edd3 6a07 	vldr	s13, [r3, #28]
 8014d5c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014d5e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014d62:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014d66:	f9ba 1000 	ldrsh.w	r1, [sl]
 8014d6a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8014d6e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014d72:	eba7 070c 	sub.w	r7, r7, ip
 8014d76:	42bc      	cmp	r4, r7
 8014d78:	bfa8      	it	ge
 8014d7a:	463c      	movge	r4, r7
 8014d7c:	ee07 4a90 	vmov	s15, r4
 8014d80:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014d84:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014d88:	ee25 4a04 	vmul.f32	s8, s10, s8
 8014d8c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014d90:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014d94:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014d98:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014d9c:	eb09 0e0c 	add.w	lr, r9, ip
 8014da0:	4571      	cmp	r1, lr
 8014da2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014da6:	ee32 1a05 	vadd.f32	s2, s4, s10
 8014daa:	ee36 0a84 	vadd.f32	s0, s13, s8
 8014dae:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014db2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014db6:	f340 808d 	ble.w	8014ed4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8014dba:	eba1 060e 	sub.w	r6, r1, lr
 8014dbe:	fb96 f5f4 	sdiv	r5, r6, r4
 8014dc2:	ee07 5a10 	vmov	s14, r5
 8014dc6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014dca:	2d00      	cmp	r5, #0
 8014dcc:	fb04 6615 	mls	r6, r4, r5, r6
 8014dd0:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014dd4:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014dd8:	eea7 1a05 	vfma.f32	s2, s14, s10
 8014ddc:	dd13      	ble.n	8014e06 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8014dde:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014de2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014de6:	eef5 6a40 	vcmp.f32	s13, #0.0
 8014dea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014dee:	bf18      	it	ne
 8014df0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014df4:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014df8:	bf08      	it	eq
 8014dfa:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014dfe:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014e02:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014e06:	fb05 f204 	mul.w	r2, r5, r4
 8014e0a:	1abf      	subs	r7, r7, r2
 8014e0c:	4494      	add	ip, r2
 8014e0e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014e12:	4411      	add	r1, r2
 8014e14:	eb09 020c 	add.w	r2, r9, ip
 8014e18:	443a      	add	r2, r7
 8014e1a:	b209      	sxth	r1, r1
 8014e1c:	428a      	cmp	r2, r1
 8014e1e:	bfc4      	itt	gt
 8014e20:	eba1 0209 	subgt.w	r2, r1, r9
 8014e24:	eba2 070c 	subgt.w	r7, r2, ip
 8014e28:	2f00      	cmp	r7, #0
 8014e2a:	dd50      	ble.n	8014ece <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014e2c:	fb97 f1f4 	sdiv	r1, r7, r4
 8014e30:	fb04 7211 	mls	r2, r4, r1, r7
 8014e34:	b90a      	cbnz	r2, 8014e3a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014e36:	3901      	subs	r1, #1
 8014e38:	4622      	mov	r2, r4
 8014e3a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8014e3e:	6840      	ldr	r0, [r0, #4]
 8014e40:	900b      	str	r0, [sp, #44]	; 0x2c
 8014e42:	f8d0 a000 	ldr.w	sl, [r0]
 8014e46:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014e48:	9008      	str	r0, [sp, #32]
 8014e4a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8014e4e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014e50:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014e54:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014e58:	695b      	ldr	r3, [r3, #20]
 8014e5a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014e5c:	445b      	add	r3, fp
 8014e5e:	eef0 6a42 	vmov.f32	s13, s4
 8014e62:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014e66:	ee21 3a23 	vmul.f32	s6, s2, s7
 8014e6a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8014e6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e72:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014e76:	9307      	str	r3, [sp, #28]
 8014e78:	ee17 7a90 	vmov	r7, s15
 8014e7c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014e80:	eeb0 7a61 	vmov.f32	s14, s3
 8014e84:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014e88:	ee16 3a90 	vmov	r3, s13
 8014e8c:	fb97 f7f4 	sdiv	r7, r7, r4
 8014e90:	ee17 ca90 	vmov	ip, s15
 8014e94:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014e98:	fb9c fcf4 	sdiv	ip, ip, r4
 8014e9c:	fb0c 3306 	mla	r3, ip, r6, r3
 8014ea0:	9302      	str	r3, [sp, #8]
 8014ea2:	ee17 3a10 	vmov	r3, s14
 8014ea6:	44b6      	add	lr, r6
 8014ea8:	fb04 e505 	mla	r5, r4, r5, lr
 8014eac:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014eb0:	fb07 3706 	mla	r7, r7, r6, r3
 8014eb4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014eb8:	e9cd 4700 	strd	r4, r7, [sp]
 8014ebc:	2900      	cmp	r1, #0
 8014ebe:	bfcc      	ite	gt
 8014ec0:	46a1      	movgt	r9, r4
 8014ec2:	4691      	movle	r9, r2
 8014ec4:	eba9 0306 	sub.w	r3, r9, r6
 8014ec8:	f8da 4008 	ldr.w	r4, [sl, #8]
 8014ecc:	47a0      	blx	r4
 8014ece:	b00d      	add	sp, #52	; 0x34
 8014ed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ed4:	2500      	movs	r5, #0
 8014ed6:	462e      	mov	r6, r5
 8014ed8:	e799      	b.n	8014e0e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08014edc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ee0:	b0db      	sub	sp, #364	; 0x16c
 8014ee2:	461d      	mov	r5, r3
 8014ee4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014ee8:	930a      	str	r3, [sp, #40]	; 0x28
 8014eea:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8014eee:	930b      	str	r3, [sp, #44]	; 0x2c
 8014ef0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014ef4:	9310      	str	r3, [sp, #64]	; 0x40
 8014ef6:	6803      	ldr	r3, [r0, #0]
 8014ef8:	910f      	str	r1, [sp, #60]	; 0x3c
 8014efa:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8014efc:	9009      	str	r0, [sp, #36]	; 0x24
 8014efe:	4614      	mov	r4, r2
 8014f00:	4629      	mov	r1, r5
 8014f02:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014f06:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8014f0a:	47b8      	blx	r7
 8014f0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f0e:	6058      	str	r0, [r3, #4]
 8014f10:	2800      	cmp	r0, #0
 8014f12:	f000 83a1 	beq.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f16:	682b      	ldr	r3, [r5, #0]
 8014f18:	9314      	str	r3, [sp, #80]	; 0x50
 8014f1a:	686b      	ldr	r3, [r5, #4]
 8014f1c:	9315      	str	r3, [sp, #84]	; 0x54
 8014f1e:	4bc4      	ldr	r3, [pc, #784]	; (8015230 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014f20:	ed94 7a02 	vldr	s14, [r4, #8]
 8014f24:	7819      	ldrb	r1, [r3, #0]
 8014f26:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8014f2a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8014f2e:	2900      	cmp	r1, #0
 8014f30:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014f34:	bf16      	itet	ne
 8014f36:	4619      	movne	r1, r3
 8014f38:	4611      	moveq	r1, r2
 8014f3a:	4613      	movne	r3, r2
 8014f3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f40:	9116      	str	r1, [sp, #88]	; 0x58
 8014f42:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8014f46:	f240 8387 	bls.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f4a:	ed94 7a07 	vldr	s14, [r4, #28]
 8014f4e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014f52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f56:	f240 837f 	bls.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f5a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8014f5e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014f62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f66:	f240 8377 	bls.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f6a:	6822      	ldr	r2, [r4, #0]
 8014f6c:	4bb1      	ldr	r3, [pc, #708]	; (8015234 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8014f6e:	429a      	cmp	r2, r3
 8014f70:	f2c0 8372 	blt.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f74:	49b0      	ldr	r1, [pc, #704]	; (8015238 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014f76:	6963      	ldr	r3, [r4, #20]
 8014f78:	428a      	cmp	r2, r1
 8014f7a:	f300 836d 	bgt.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f7e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014f82:	48ae      	ldr	r0, [pc, #696]	; (801523c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014f84:	33ff      	adds	r3, #255	; 0xff
 8014f86:	4283      	cmp	r3, r0
 8014f88:	f200 8366 	bhi.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f8c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8014f8e:	4dac      	ldr	r5, [pc, #688]	; (8015240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014f90:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014f94:	33ff      	adds	r3, #255	; 0xff
 8014f96:	42ab      	cmp	r3, r5
 8014f98:	f200 835e 	bhi.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014f9c:	6862      	ldr	r2, [r4, #4]
 8014f9e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8014fa2:	33ff      	adds	r3, #255	; 0xff
 8014fa4:	4283      	cmp	r3, r0
 8014fa6:	f200 8357 	bhi.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014faa:	69a1      	ldr	r1, [r4, #24]
 8014fac:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8014fb0:	33ff      	adds	r3, #255	; 0xff
 8014fb2:	4283      	cmp	r3, r0
 8014fb4:	f200 8350 	bhi.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014fb8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014fba:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8014fbe:	30ff      	adds	r0, #255	; 0xff
 8014fc0:	42a8      	cmp	r0, r5
 8014fc2:	f200 8349 	bhi.w	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014fc6:	428a      	cmp	r2, r1
 8014fc8:	f280 8110 	bge.w	80151ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8014fcc:	429a      	cmp	r2, r3
 8014fce:	f300 8119 	bgt.w	8015204 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8014fd2:	4299      	cmp	r1, r3
 8014fd4:	f280 811d 	bge.w	8015212 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8014fd8:	2502      	movs	r5, #2
 8014fda:	2701      	movs	r7, #1
 8014fdc:	46a9      	mov	r9, r5
 8014fde:	46b8      	mov	r8, r7
 8014fe0:	f04f 0a00 	mov.w	sl, #0
 8014fe4:	4621      	mov	r1, r4
 8014fe6:	a849      	add	r0, sp, #292	; 0x124
 8014fe8:	f003 fda6 	bl	8018b38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8014fec:	4622      	mov	r2, r4
 8014fee:	4653      	mov	r3, sl
 8014ff0:	a949      	add	r1, sp, #292	; 0x124
 8014ff2:	f8cd 9000 	str.w	r9, [sp]
 8014ff6:	a819      	add	r0, sp, #100	; 0x64
 8014ff8:	f003 fece 	bl	8018d98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014ffc:	4622      	mov	r2, r4
 8014ffe:	4653      	mov	r3, sl
 8015000:	a949      	add	r1, sp, #292	; 0x124
 8015002:	f8cd 8000 	str.w	r8, [sp]
 8015006:	a829      	add	r0, sp, #164	; 0xa4
 8015008:	f003 fec6 	bl	8018d98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801500c:	4643      	mov	r3, r8
 801500e:	4622      	mov	r2, r4
 8015010:	a949      	add	r1, sp, #292	; 0x124
 8015012:	f8cd 9000 	str.w	r9, [sp]
 8015016:	a839      	add	r0, sp, #228	; 0xe4
 8015018:	f003 febe 	bl	8018d98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801501c:	42af      	cmp	r7, r5
 801501e:	bfb5      	itete	lt
 8015020:	2300      	movlt	r3, #0
 8015022:	2301      	movge	r3, #1
 8015024:	930e      	strlt	r3, [sp, #56]	; 0x38
 8015026:	930e      	strge	r3, [sp, #56]	; 0x38
 8015028:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801502a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801502e:	af12      	add	r7, sp, #72	; 0x48
 8015030:	bfb9      	ittee	lt
 8015032:	ad29      	addlt	r5, sp, #164	; 0xa4
 8015034:	ac19      	addlt	r4, sp, #100	; 0x64
 8015036:	ad19      	addge	r5, sp, #100	; 0x64
 8015038:	ac29      	addge	r4, sp, #164	; 0xa4
 801503a:	e887 0003 	stmia.w	r7, {r0, r1}
 801503e:	b928      	cbnz	r0, 801504c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015040:	4b80      	ldr	r3, [pc, #512]	; (8015244 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8015042:	6818      	ldr	r0, [r3, #0]
 8015044:	6803      	ldr	r3, [r0, #0]
 8015046:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015048:	4798      	blx	r3
 801504a:	6038      	str	r0, [r7, #0]
 801504c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801504e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015052:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015056:	930c      	str	r3, [sp, #48]	; 0x30
 8015058:	990c      	ldr	r1, [sp, #48]	; 0x30
 801505a:	6963      	ldr	r3, [r4, #20]
 801505c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801505e:	440b      	add	r3, r1
 8015060:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015064:	4408      	add	r0, r1
 8015066:	b200      	sxth	r0, r0
 8015068:	4283      	cmp	r3, r0
 801506a:	900d      	str	r0, [sp, #52]	; 0x34
 801506c:	f280 80dd 	bge.w	801522a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015070:	428b      	cmp	r3, r1
 8015072:	da08      	bge.n	8015086 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015074:	2a00      	cmp	r2, #0
 8015076:	dd06      	ble.n	8015086 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015078:	1acb      	subs	r3, r1, r3
 801507a:	429a      	cmp	r2, r3
 801507c:	f2c0 80e4 	blt.w	8015248 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015080:	2b00      	cmp	r3, #0
 8015082:	f300 80e2 	bgt.w	801524a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015086:	6967      	ldr	r7, [r4, #20]
 8015088:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801508a:	443b      	add	r3, r7
 801508c:	461f      	mov	r7, r3
 801508e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015090:	1bdf      	subs	r7, r3, r7
 8015092:	4297      	cmp	r7, r2
 8015094:	bfa8      	it	ge
 8015096:	4617      	movge	r7, r2
 8015098:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801509c:	2f00      	cmp	r7, #0
 801509e:	f340 8166 	ble.w	801536e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80150a2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80150a4:	6829      	ldr	r1, [r5, #0]
 80150a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80150aa:	f9bb 3000 	ldrsh.w	r3, [fp]
 80150ae:	6820      	ldr	r0, [r4, #0]
 80150b0:	4411      	add	r1, r2
 80150b2:	4299      	cmp	r1, r3
 80150b4:	dd1a      	ble.n	80150ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80150b6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80150ba:	440b      	add	r3, r1
 80150bc:	4402      	add	r2, r0
 80150be:	b21b      	sxth	r3, r3
 80150c0:	429a      	cmp	r2, r3
 80150c2:	dc13      	bgt.n	80150ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80150c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80150c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80150c8:	681b      	ldr	r3, [r3, #0]
 80150ca:	9206      	str	r2, [sp, #24]
 80150cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80150ce:	9205      	str	r2, [sp, #20]
 80150d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80150d2:	9500      	str	r5, [sp, #0]
 80150d4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80150d8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80150da:	9809      	ldr	r0, [sp, #36]	; 0x24
 80150dc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80150e0:	a912      	add	r1, sp, #72	; 0x48
 80150e2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80150e6:	aa49      	add	r2, sp, #292	; 0x124
 80150e8:	4623      	mov	r3, r4
 80150ea:	47c8      	blx	r9
 80150ec:	e9d4 2300 	ldrd	r2, r3, [r4]
 80150f0:	441a      	add	r2, r3
 80150f2:	6963      	ldr	r3, [r4, #20]
 80150f4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80150f8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80150fc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015100:	68a1      	ldr	r1, [r4, #8]
 8015102:	ed94 6a08 	vldr	s12, [r4, #32]
 8015106:	6022      	str	r2, [r4, #0]
 8015108:	3301      	adds	r3, #1
 801510a:	6163      	str	r3, [r4, #20]
 801510c:	69a3      	ldr	r3, [r4, #24]
 801510e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015112:	3b01      	subs	r3, #1
 8015114:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015118:	61a3      	str	r3, [r4, #24]
 801511a:	6923      	ldr	r3, [r4, #16]
 801511c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015120:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015124:	edd4 6a07 	vldr	s13, [r4, #28]
 8015128:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801512c:	440b      	add	r3, r1
 801512e:	68e1      	ldr	r1, [r4, #12]
 8015130:	6123      	str	r3, [r4, #16]
 8015132:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015136:	428b      	cmp	r3, r1
 8015138:	edc4 6a07 	vstr	s13, [r4, #28]
 801513c:	db15      	blt.n	801516a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801513e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015142:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015146:	3201      	adds	r2, #1
 8015148:	edc4 6a07 	vstr	s13, [r4, #28]
 801514c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015150:	6022      	str	r2, [r4, #0]
 8015152:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015156:	1a5b      	subs	r3, r3, r1
 8015158:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801515c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015160:	6123      	str	r3, [r4, #16]
 8015162:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015166:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801516a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801516e:	441a      	add	r2, r3
 8015170:	696b      	ldr	r3, [r5, #20]
 8015172:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015176:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801517a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801517e:	68a9      	ldr	r1, [r5, #8]
 8015180:	ed95 6a08 	vldr	s12, [r5, #32]
 8015184:	602a      	str	r2, [r5, #0]
 8015186:	3301      	adds	r3, #1
 8015188:	616b      	str	r3, [r5, #20]
 801518a:	69ab      	ldr	r3, [r5, #24]
 801518c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015190:	3b01      	subs	r3, #1
 8015192:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015196:	61ab      	str	r3, [r5, #24]
 8015198:	692b      	ldr	r3, [r5, #16]
 801519a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801519e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80151a2:	edd5 6a07 	vldr	s13, [r5, #28]
 80151a6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80151aa:	440b      	add	r3, r1
 80151ac:	68e9      	ldr	r1, [r5, #12]
 80151ae:	612b      	str	r3, [r5, #16]
 80151b0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80151b4:	428b      	cmp	r3, r1
 80151b6:	edc5 6a07 	vstr	s13, [r5, #28]
 80151ba:	db15      	blt.n	80151e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80151bc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80151c0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80151c4:	3201      	adds	r2, #1
 80151c6:	edc5 6a07 	vstr	s13, [r5, #28]
 80151ca:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80151ce:	602a      	str	r2, [r5, #0]
 80151d0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80151d4:	1a5b      	subs	r3, r3, r1
 80151d6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80151da:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80151de:	612b      	str	r3, [r5, #16]
 80151e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80151e4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80151e8:	3f01      	subs	r7, #1
 80151ea:	e757      	b.n	801509c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80151ec:	4299      	cmp	r1, r3
 80151ee:	dc13      	bgt.n	8015218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80151f0:	429a      	cmp	r2, r3
 80151f2:	da14      	bge.n	801521e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80151f4:	2502      	movs	r5, #2
 80151f6:	2703      	movs	r7, #3
 80151f8:	46a9      	mov	r9, r5
 80151fa:	f04f 0800 	mov.w	r8, #0
 80151fe:	f04f 0a01 	mov.w	sl, #1
 8015202:	e6ef      	b.n	8014fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015204:	2501      	movs	r5, #1
 8015206:	2700      	movs	r7, #0
 8015208:	46a9      	mov	r9, r5
 801520a:	46b8      	mov	r8, r7
 801520c:	f04f 0a02 	mov.w	sl, #2
 8015210:	e6e8      	b.n	8014fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015212:	2501      	movs	r5, #1
 8015214:	2702      	movs	r7, #2
 8015216:	e6e1      	b.n	8014fdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8015218:	2500      	movs	r5, #0
 801521a:	2701      	movs	r7, #1
 801521c:	e7f4      	b.n	8015208 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801521e:	2702      	movs	r7, #2
 8015220:	2503      	movs	r5, #3
 8015222:	f04f 0900 	mov.w	r9, #0
 8015226:	46b8      	mov	r8, r7
 8015228:	e7e9      	b.n	80151fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801522a:	4613      	mov	r3, r2
 801522c:	e728      	b.n	8015080 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801522e:	bf00      	nop
 8015230:	20025990 	.word	0x20025990
 8015234:	fffd8f01 	.word	0xfffd8f01
 8015238:	00027100 	.word	0x00027100
 801523c:	0004e1ff 	.word	0x0004e1ff
 8015240:	0004e1fe 	.word	0x0004e1fe
 8015244:	20025998 	.word	0x20025998
 8015248:	4613      	mov	r3, r2
 801524a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801524c:	9111      	str	r1, [sp, #68]	; 0x44
 801524e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8015252:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8015256:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8015258:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801525c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8015260:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8015264:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8015268:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801526c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015270:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015274:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015278:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801527c:	469e      	mov	lr, r3
 801527e:	469c      	mov	ip, r3
 8015280:	f04f 0900 	mov.w	r9, #0
 8015284:	f1bc 0f00 	cmp.w	ip, #0
 8015288:	d147      	bne.n	801531a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801528a:	eb03 0c07 	add.w	ip, r3, r7
 801528e:	1ad7      	subs	r7, r2, r3
 8015290:	f1b9 0f00 	cmp.w	r9, #0
 8015294:	d009      	beq.n	80152aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015296:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801529a:	9029      	str	r0, [sp, #164]	; 0xa4
 801529c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80152a0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80152a4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80152a8:	912d      	str	r1, [sp, #180]	; 0xb4
 80152aa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80152ac:	9111      	str	r1, [sp, #68]	; 0x44
 80152ae:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80152b2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80152b6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80152ba:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80152be:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80152c2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80152c6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80152ca:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80152ce:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80152d2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80152d6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80152da:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80152de:	f04f 0800 	mov.w	r8, #0
 80152e2:	f1be 0f00 	cmp.w	lr, #0
 80152e6:	d031      	beq.n	801534c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80152e8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80152ea:	4431      	add	r1, r6
 80152ec:	4549      	cmp	r1, r9
 80152ee:	4450      	add	r0, sl
 80152f0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80152f4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80152f8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80152fc:	db08      	blt.n	8015310 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80152fe:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015302:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015306:	ee37 7a06 	vadd.f32	s14, s14, s12
 801530a:	3001      	adds	r0, #1
 801530c:	eba1 0109 	sub.w	r1, r1, r9
 8015310:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015314:	f04f 0801 	mov.w	r8, #1
 8015318:	e7e3      	b.n	80152e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801531a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801531c:	4431      	add	r1, r6
 801531e:	4541      	cmp	r1, r8
 8015320:	4450      	add	r0, sl
 8015322:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015326:	ee77 7a84 	vadd.f32	s15, s15, s8
 801532a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801532e:	db08      	blt.n	8015342 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8015330:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015334:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015338:	ee77 7a86 	vadd.f32	s15, s15, s12
 801533c:	3001      	adds	r0, #1
 801533e:	eba1 0108 	sub.w	r1, r1, r8
 8015342:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015346:	f04f 0901 	mov.w	r9, #1
 801534a:	e79b      	b.n	8015284 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801534c:	449c      	add	ip, r3
 801534e:	1aff      	subs	r7, r7, r3
 8015350:	f1b8 0f00 	cmp.w	r8, #0
 8015354:	d009      	beq.n	801536a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8015356:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801535a:	9019      	str	r0, [sp, #100]	; 0x64
 801535c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015360:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015364:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015368:	911d      	str	r1, [sp, #116]	; 0x74
 801536a:	1ad2      	subs	r2, r2, r3
 801536c:	e68b      	b.n	8015086 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801536e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015370:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015372:	2b00      	cmp	r3, #0
 8015374:	f000 80d1 	beq.w	801551a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015378:	ad19      	add	r5, sp, #100	; 0x64
 801537a:	ac39      	add	r4, sp, #228	; 0xe4
 801537c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801537e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015382:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015386:	930c      	str	r3, [sp, #48]	; 0x30
 8015388:	990c      	ldr	r1, [sp, #48]	; 0x30
 801538a:	6963      	ldr	r3, [r4, #20]
 801538c:	440b      	add	r3, r1
 801538e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015392:	4408      	add	r0, r1
 8015394:	b200      	sxth	r0, r0
 8015396:	4283      	cmp	r3, r0
 8015398:	900d      	str	r0, [sp, #52]	; 0x34
 801539a:	f280 80c1 	bge.w	8015520 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801539e:	428b      	cmp	r3, r1
 80153a0:	da08      	bge.n	80153b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80153a2:	2a00      	cmp	r2, #0
 80153a4:	dd06      	ble.n	80153b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80153a6:	1acb      	subs	r3, r1, r3
 80153a8:	429a      	cmp	r2, r3
 80153aa:	f2c0 80bb 	blt.w	8015524 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80153ae:	2b00      	cmp	r3, #0
 80153b0:	f300 80b9 	bgt.w	8015526 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80153b4:	6967      	ldr	r7, [r4, #20]
 80153b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80153b8:	443b      	add	r3, r7
 80153ba:	461f      	mov	r7, r3
 80153bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80153be:	1bdf      	subs	r7, r3, r7
 80153c0:	4297      	cmp	r7, r2
 80153c2:	bfa8      	it	ge
 80153c4:	4617      	movge	r7, r2
 80153c6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80153ca:	2f00      	cmp	r7, #0
 80153cc:	f340 813c 	ble.w	8015648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80153d0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80153d2:	6829      	ldr	r1, [r5, #0]
 80153d4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80153d8:	f9bb 3000 	ldrsh.w	r3, [fp]
 80153dc:	6820      	ldr	r0, [r4, #0]
 80153de:	4411      	add	r1, r2
 80153e0:	4299      	cmp	r1, r3
 80153e2:	dd1a      	ble.n	801541a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80153e4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80153e8:	440b      	add	r3, r1
 80153ea:	4402      	add	r2, r0
 80153ec:	b21b      	sxth	r3, r3
 80153ee:	429a      	cmp	r2, r3
 80153f0:	dc13      	bgt.n	801541a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80153f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80153f4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80153f6:	681b      	ldr	r3, [r3, #0]
 80153f8:	9206      	str	r2, [sp, #24]
 80153fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80153fc:	9205      	str	r2, [sp, #20]
 80153fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015400:	9500      	str	r5, [sp, #0]
 8015402:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015406:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015408:	9809      	ldr	r0, [sp, #36]	; 0x24
 801540a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801540e:	a912      	add	r1, sp, #72	; 0x48
 8015410:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015414:	aa49      	add	r2, sp, #292	; 0x124
 8015416:	4623      	mov	r3, r4
 8015418:	47c8      	blx	r9
 801541a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801541e:	441a      	add	r2, r3
 8015420:	6963      	ldr	r3, [r4, #20]
 8015422:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015426:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801542a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801542e:	68a1      	ldr	r1, [r4, #8]
 8015430:	ed94 6a08 	vldr	s12, [r4, #32]
 8015434:	6022      	str	r2, [r4, #0]
 8015436:	3301      	adds	r3, #1
 8015438:	6163      	str	r3, [r4, #20]
 801543a:	69a3      	ldr	r3, [r4, #24]
 801543c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015440:	3b01      	subs	r3, #1
 8015442:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015446:	61a3      	str	r3, [r4, #24]
 8015448:	6923      	ldr	r3, [r4, #16]
 801544a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801544e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015452:	edd4 6a07 	vldr	s13, [r4, #28]
 8015456:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801545a:	440b      	add	r3, r1
 801545c:	68e1      	ldr	r1, [r4, #12]
 801545e:	6123      	str	r3, [r4, #16]
 8015460:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015464:	428b      	cmp	r3, r1
 8015466:	edc4 6a07 	vstr	s13, [r4, #28]
 801546a:	db15      	blt.n	8015498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801546c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015470:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015474:	3201      	adds	r2, #1
 8015476:	edc4 6a07 	vstr	s13, [r4, #28]
 801547a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801547e:	6022      	str	r2, [r4, #0]
 8015480:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015484:	1a5b      	subs	r3, r3, r1
 8015486:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801548a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801548e:	6123      	str	r3, [r4, #16]
 8015490:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015494:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015498:	e9d5 2300 	ldrd	r2, r3, [r5]
 801549c:	441a      	add	r2, r3
 801549e:	696b      	ldr	r3, [r5, #20]
 80154a0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80154a4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80154a8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80154ac:	68a9      	ldr	r1, [r5, #8]
 80154ae:	ed95 6a08 	vldr	s12, [r5, #32]
 80154b2:	602a      	str	r2, [r5, #0]
 80154b4:	3301      	adds	r3, #1
 80154b6:	616b      	str	r3, [r5, #20]
 80154b8:	69ab      	ldr	r3, [r5, #24]
 80154ba:	ee37 7a27 	vadd.f32	s14, s14, s15
 80154be:	3b01      	subs	r3, #1
 80154c0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80154c4:	61ab      	str	r3, [r5, #24]
 80154c6:	692b      	ldr	r3, [r5, #16]
 80154c8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80154cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80154d0:	edd5 6a07 	vldr	s13, [r5, #28]
 80154d4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80154d8:	440b      	add	r3, r1
 80154da:	68e9      	ldr	r1, [r5, #12]
 80154dc:	612b      	str	r3, [r5, #16]
 80154de:	ee76 6a86 	vadd.f32	s13, s13, s12
 80154e2:	428b      	cmp	r3, r1
 80154e4:	edc5 6a07 	vstr	s13, [r5, #28]
 80154e8:	db15      	blt.n	8015516 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80154ea:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80154ee:	ee76 6a26 	vadd.f32	s13, s12, s13
 80154f2:	3201      	adds	r2, #1
 80154f4:	edc5 6a07 	vstr	s13, [r5, #28]
 80154f8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80154fc:	602a      	str	r2, [r5, #0]
 80154fe:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015502:	1a5b      	subs	r3, r3, r1
 8015504:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015508:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801550c:	612b      	str	r3, [r5, #16]
 801550e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015512:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015516:	3f01      	subs	r7, #1
 8015518:	e757      	b.n	80153ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801551a:	ad39      	add	r5, sp, #228	; 0xe4
 801551c:	ac19      	add	r4, sp, #100	; 0x64
 801551e:	e72d      	b.n	801537c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015520:	4613      	mov	r3, r2
 8015522:	e744      	b.n	80153ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8015524:	4613      	mov	r3, r2
 8015526:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801552a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801552c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8015530:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8015534:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8015538:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801553c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015540:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8015544:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015548:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801554a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801554e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8015552:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8015556:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801555a:	960e      	str	r6, [sp, #56]	; 0x38
 801555c:	469e      	mov	lr, r3
 801555e:	461f      	mov	r7, r3
 8015560:	f04f 0900 	mov.w	r9, #0
 8015564:	2f00      	cmp	r7, #0
 8015566:	d146      	bne.n	80155f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015568:	449c      	add	ip, r3
 801556a:	1ad7      	subs	r7, r2, r3
 801556c:	f1b9 0f00 	cmp.w	r9, #0
 8015570:	d009      	beq.n	8015586 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015572:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8015576:	9039      	str	r0, [sp, #228]	; 0xe4
 8015578:	913d      	str	r1, [sp, #244]	; 0xf4
 801557a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801557e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8015582:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8015586:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015588:	910e      	str	r1, [sp, #56]	; 0x38
 801558a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801558e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015592:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015596:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801559a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801559e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80155a2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80155a6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80155aa:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80155ae:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80155b2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80155b6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80155ba:	f04f 0800 	mov.w	r8, #0
 80155be:	f1be 0f00 	cmp.w	lr, #0
 80155c2:	d030      	beq.n	8015626 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80155c4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80155c6:	4431      	add	r1, r6
 80155c8:	4549      	cmp	r1, r9
 80155ca:	4450      	add	r0, sl
 80155cc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80155d0:	ee37 7a04 	vadd.f32	s14, s14, s8
 80155d4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80155d8:	db08      	blt.n	80155ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80155da:	ee77 7a85 	vadd.f32	s15, s15, s10
 80155de:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80155e2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80155e6:	3001      	adds	r0, #1
 80155e8:	eba1 0109 	sub.w	r1, r1, r9
 80155ec:	f10e 3eff 	add.w	lr, lr, #4294967295
 80155f0:	f04f 0801 	mov.w	r8, #1
 80155f4:	e7e3      	b.n	80155be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80155f6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80155f8:	4431      	add	r1, r6
 80155fa:	4541      	cmp	r1, r8
 80155fc:	4450      	add	r0, sl
 80155fe:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015602:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015606:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801560a:	db08      	blt.n	801561e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801560c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015610:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015614:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015618:	3001      	adds	r0, #1
 801561a:	eba1 0108 	sub.w	r1, r1, r8
 801561e:	3f01      	subs	r7, #1
 8015620:	f04f 0901 	mov.w	r9, #1
 8015624:	e79e      	b.n	8015564 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8015626:	449c      	add	ip, r3
 8015628:	1aff      	subs	r7, r7, r3
 801562a:	f1b8 0f00 	cmp.w	r8, #0
 801562e:	d009      	beq.n	8015644 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015630:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015634:	9019      	str	r0, [sp, #100]	; 0x64
 8015636:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801563a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801563e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015642:	911d      	str	r1, [sp, #116]	; 0x74
 8015644:	1ad2      	subs	r2, r2, r3
 8015646:	e6b5      	b.n	80153b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015648:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801564a:	681b      	ldr	r3, [r3, #0]
 801564c:	b923      	cbnz	r3, 8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801564e:	4b04      	ldr	r3, [pc, #16]	; (8015660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015650:	6818      	ldr	r0, [r3, #0]
 8015652:	6803      	ldr	r3, [r0, #0]
 8015654:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015656:	4798      	blx	r3
 8015658:	b05b      	add	sp, #364	; 0x16c
 801565a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801565e:	bf00      	nop
 8015660:	20025998 	.word	0x20025998

08015664 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015664:	b570      	push	{r4, r5, r6, lr}
 8015666:	4604      	mov	r4, r0
 8015668:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801566c:	9805      	ldr	r0, [sp, #20]
 801566e:	6061      	str	r1, [r4, #4]
 8015670:	2500      	movs	r5, #0
 8015672:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8015676:	8263      	strh	r3, [r4, #18]
 8015678:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801567c:	8025      	strh	r5, [r4, #0]
 801567e:	7221      	strb	r1, [r4, #8]
 8015680:	7266      	strb	r6, [r4, #9]
 8015682:	60e0      	str	r0, [r4, #12]
 8015684:	8222      	strh	r2, [r4, #16]
 8015686:	82a3      	strh	r3, [r4, #20]
 8015688:	82e5      	strh	r5, [r4, #22]
 801568a:	8325      	strh	r5, [r4, #24]
 801568c:	8365      	strh	r5, [r4, #26]
 801568e:	83a5      	strh	r5, [r4, #28]
 8015690:	83e5      	strh	r5, [r4, #30]
 8015692:	8425      	strh	r5, [r4, #32]
 8015694:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015698:	b32e      	cbz	r6, 80156e6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801569a:	6803      	ldr	r3, [r0, #0]
 801569c:	695b      	ldr	r3, [r3, #20]
 801569e:	4798      	blx	r3
 80156a0:	4606      	mov	r6, r0
 80156a2:	b300      	cbz	r0, 80156e6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80156a4:	68e0      	ldr	r0, [r4, #12]
 80156a6:	6803      	ldr	r3, [r0, #0]
 80156a8:	4631      	mov	r1, r6
 80156aa:	68db      	ldr	r3, [r3, #12]
 80156ac:	4798      	blx	r3
 80156ae:	4605      	mov	r5, r0
 80156b0:	b1c8      	cbz	r0, 80156e6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80156b2:	7b43      	ldrb	r3, [r0, #13]
 80156b4:	7a82      	ldrb	r2, [r0, #10]
 80156b6:	005b      	lsls	r3, r3, #1
 80156b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80156bc:	4313      	orrs	r3, r2
 80156be:	8423      	strh	r3, [r4, #32]
 80156c0:	7a63      	ldrb	r3, [r4, #9]
 80156c2:	2b06      	cmp	r3, #6
 80156c4:	d10f      	bne.n	80156e6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80156c6:	68e0      	ldr	r0, [r4, #12]
 80156c8:	6803      	ldr	r3, [r0, #0]
 80156ca:	462a      	mov	r2, r5
 80156cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80156ce:	4631      	mov	r1, r6
 80156d0:	4798      	blx	r3
 80156d2:	7b6b      	ldrb	r3, [r5, #13]
 80156d4:	005b      	lsls	r3, r3, #1
 80156d6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80156da:	7aab      	ldrb	r3, [r5, #10]
 80156dc:	4313      	orrs	r3, r2
 80156de:	4418      	add	r0, r3
 80156e0:	8c23      	ldrh	r3, [r4, #32]
 80156e2:	4418      	add	r0, r3
 80156e4:	8420      	strh	r0, [r4, #32]
 80156e6:	4620      	mov	r0, r4
 80156e8:	bd70      	pop	{r4, r5, r6, pc}

080156ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80156ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156ee:	2400      	movs	r4, #0
 80156f0:	b085      	sub	sp, #20
 80156f2:	4681      	mov	r9, r0
 80156f4:	4688      	mov	r8, r1
 80156f6:	4692      	mov	sl, r2
 80156f8:	469b      	mov	fp, r3
 80156fa:	4627      	mov	r7, r4
 80156fc:	4625      	mov	r5, r4
 80156fe:	4626      	mov	r6, r4
 8015700:	4554      	cmp	r4, sl
 8015702:	da2a      	bge.n	801575a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015704:	2300      	movs	r3, #0
 8015706:	9303      	str	r3, [sp, #12]
 8015708:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801570c:	429d      	cmp	r5, r3
 801570e:	d004      	beq.n	801571a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015710:	f242 030b 	movw	r3, #8203	; 0x200b
 8015714:	429d      	cmp	r5, r3
 8015716:	bf18      	it	ne
 8015718:	462f      	movne	r7, r5
 801571a:	ab03      	add	r3, sp, #12
 801571c:	4642      	mov	r2, r8
 801571e:	4659      	mov	r1, fp
 8015720:	4648      	mov	r0, r9
 8015722:	f003 f81f 	bl	8018764 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015726:	4605      	mov	r5, r0
 8015728:	b1b8      	cbz	r0, 801575a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801572a:	280a      	cmp	r0, #10
 801572c:	d015      	beq.n	801575a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801572e:	9a03      	ldr	r2, [sp, #12]
 8015730:	b18a      	cbz	r2, 8015756 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8015732:	7b50      	ldrb	r0, [r2, #13]
 8015734:	7a93      	ldrb	r3, [r2, #10]
 8015736:	8895      	ldrh	r5, [r2, #4]
 8015738:	0040      	lsls	r0, r0, #1
 801573a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801573e:	4303      	orrs	r3, r0
 8015740:	9301      	str	r3, [sp, #4]
 8015742:	f8d8 3000 	ldr.w	r3, [r8]
 8015746:	4639      	mov	r1, r7
 8015748:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801574a:	4640      	mov	r0, r8
 801574c:	4798      	blx	r3
 801574e:	9b01      	ldr	r3, [sp, #4]
 8015750:	4418      	add	r0, r3
 8015752:	4406      	add	r6, r0
 8015754:	b2b6      	uxth	r6, r6
 8015756:	3401      	adds	r4, #1
 8015758:	e7d2      	b.n	8015700 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801575a:	4630      	mov	r0, r6
 801575c:	b005      	add	sp, #20
 801575e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015762 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015762:	2a02      	cmp	r2, #2
 8015764:	b530      	push	{r4, r5, lr}
 8015766:	d011      	beq.n	801578c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015768:	2a03      	cmp	r2, #3
 801576a:	d01c      	beq.n	80157a6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801576c:	2a01      	cmp	r2, #1
 801576e:	d10c      	bne.n	801578a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015770:	888b      	ldrh	r3, [r1, #4]
 8015772:	8801      	ldrh	r1, [r0, #0]
 8015774:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015778:	8844      	ldrh	r4, [r0, #2]
 801577a:	8004      	strh	r4, [r0, #0]
 801577c:	1a5b      	subs	r3, r3, r1
 801577e:	1a9b      	subs	r3, r3, r2
 8015780:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015784:	8043      	strh	r3, [r0, #2]
 8015786:	8081      	strh	r1, [r0, #4]
 8015788:	80c2      	strh	r2, [r0, #6]
 801578a:	bd30      	pop	{r4, r5, pc}
 801578c:	88cb      	ldrh	r3, [r1, #6]
 801578e:	8842      	ldrh	r2, [r0, #2]
 8015790:	1a9b      	subs	r3, r3, r2
 8015792:	88c2      	ldrh	r2, [r0, #6]
 8015794:	1a9b      	subs	r3, r3, r2
 8015796:	888a      	ldrh	r2, [r1, #4]
 8015798:	8801      	ldrh	r1, [r0, #0]
 801579a:	8043      	strh	r3, [r0, #2]
 801579c:	1a52      	subs	r2, r2, r1
 801579e:	8881      	ldrh	r1, [r0, #4]
 80157a0:	1a52      	subs	r2, r2, r1
 80157a2:	8002      	strh	r2, [r0, #0]
 80157a4:	e7f1      	b.n	801578a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80157a6:	88cb      	ldrh	r3, [r1, #6]
 80157a8:	8841      	ldrh	r1, [r0, #2]
 80157aa:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80157ae:	f9b0 5000 	ldrsh.w	r5, [r0]
 80157b2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80157b6:	8045      	strh	r5, [r0, #2]
 80157b8:	1a5b      	subs	r3, r3, r1
 80157ba:	1a9b      	subs	r3, r3, r2
 80157bc:	8003      	strh	r3, [r0, #0]
 80157be:	8082      	strh	r2, [r0, #4]
 80157c0:	80c4      	strh	r4, [r0, #6]
 80157c2:	e7e2      	b.n	801578a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080157c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80157c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157c8:	b09f      	sub	sp, #124	; 0x7c
 80157ca:	9116      	str	r1, [sp, #88]	; 0x58
 80157cc:	9317      	str	r3, [sp, #92]	; 0x5c
 80157ce:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80157d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80157d2:	8809      	ldrh	r1, [r1, #0]
 80157d4:	889b      	ldrh	r3, [r3, #4]
 80157d6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80157da:	9212      	str	r2, [sp, #72]	; 0x48
 80157dc:	440b      	add	r3, r1
 80157de:	b21b      	sxth	r3, r3
 80157e0:	9310      	str	r3, [sp, #64]	; 0x40
 80157e2:	f8d8 3000 	ldr.w	r3, [r8]
 80157e6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80157ea:	7b19      	ldrb	r1, [r3, #12]
 80157ec:	7adb      	ldrb	r3, [r3, #11]
 80157ee:	9011      	str	r0, [sp, #68]	; 0x44
 80157f0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80157f4:	9114      	str	r1, [sp, #80]	; 0x50
 80157f6:	9315      	str	r3, [sp, #84]	; 0x54
 80157f8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80157fc:	2a00      	cmp	r2, #0
 80157fe:	d06a      	beq.n	80158d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015800:	f898 3010 	ldrb.w	r3, [r8, #16]
 8015804:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015806:	2b06      	cmp	r3, #6
 8015808:	bf14      	ite	ne
 801580a:	2301      	movne	r3, #1
 801580c:	2302      	moveq	r3, #2
 801580e:	4413      	add	r3, r2
 8015810:	f04f 0900 	mov.w	r9, #0
 8015814:	930f      	str	r3, [sp, #60]	; 0x3c
 8015816:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801581a:	464c      	mov	r4, r9
 801581c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015820:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8015824:	4293      	cmp	r3, r2
 8015826:	f280 808f 	bge.w	8015948 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801582a:	2300      	movs	r3, #0
 801582c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8015830:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8015834:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015838:	429c      	cmp	r4, r3
 801583a:	d006      	beq.n	801584a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801583c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801583e:	f242 020b 	movw	r2, #8203	; 0x200b
 8015842:	4294      	cmp	r4, r2
 8015844:	bf18      	it	ne
 8015846:	4623      	movne	r3, r4
 8015848:	930d      	str	r3, [sp, #52]	; 0x34
 801584a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801584c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801584e:	f8d8 2000 	ldr.w	r2, [r8]
 8015852:	428b      	cmp	r3, r1
 8015854:	db41      	blt.n	80158da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8015856:	6813      	ldr	r3, [r2, #0]
 8015858:	4610      	mov	r0, r2
 801585a:	695b      	ldr	r3, [r3, #20]
 801585c:	4798      	blx	r3
 801585e:	4604      	mov	r4, r0
 8015860:	f8d8 0000 	ldr.w	r0, [r8]
 8015864:	6803      	ldr	r3, [r0, #0]
 8015866:	aa1d      	add	r2, sp, #116	; 0x74
 8015868:	689d      	ldr	r5, [r3, #8]
 801586a:	4621      	mov	r1, r4
 801586c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015870:	47a8      	blx	r5
 8015872:	901c      	str	r0, [sp, #112]	; 0x70
 8015874:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015878:	429c      	cmp	r4, r3
 801587a:	f000 80eb 	beq.w	8015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801587e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015882:	429c      	cmp	r4, r3
 8015884:	f000 80e6 	beq.w	8015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015888:	2c00      	cmp	r4, #0
 801588a:	f000 80f8 	beq.w	8015a7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801588e:	2c0a      	cmp	r4, #10
 8015890:	d060      	beq.n	8015954 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015892:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015894:	b36a      	cbz	r2, 80158f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8015896:	8894      	ldrh	r4, [r2, #4]
 8015898:	f1bb 0f00 	cmp.w	fp, #0
 801589c:	d03b      	beq.n	8015916 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801589e:	f892 900d 	ldrb.w	r9, [r2, #13]
 80158a2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80158a6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80158aa:	f892 900a 	ldrb.w	r9, [r2, #10]
 80158ae:	f1bb 0f01 	cmp.w	fp, #1
 80158b2:	ea49 0903 	orr.w	r9, r9, r3
 80158b6:	d134      	bne.n	8015922 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80158b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80158ba:	eba6 0609 	sub.w	r6, r6, r9
 80158be:	2b00      	cmp	r3, #0
 80158c0:	d14f      	bne.n	8015962 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80158c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80158c4:	eb09 0306 	add.w	r3, r9, r6
 80158c8:	4413      	add	r3, r2
 80158ca:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80158cc:	f9b2 2000 	ldrsh.w	r2, [r2]
 80158d0:	4293      	cmp	r3, r2
 80158d2:	da51      	bge.n	8015978 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80158d4:	e038      	b.n	8015948 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80158d6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80158d8:	e79a      	b.n	8015810 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80158da:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80158de:	9301      	str	r3, [sp, #4]
 80158e0:	ab1d      	add	r3, sp, #116	; 0x74
 80158e2:	9300      	str	r3, [sp, #0]
 80158e4:	4659      	mov	r1, fp
 80158e6:	ab1c      	add	r3, sp, #112	; 0x70
 80158e8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80158ea:	f002 ff84 	bl	80187f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80158ee:	4604      	mov	r4, r0
 80158f0:	e7c0      	b.n	8015874 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80158f2:	f8d8 0000 	ldr.w	r0, [r8]
 80158f6:	6803      	ldr	r3, [r0, #0]
 80158f8:	691b      	ldr	r3, [r3, #16]
 80158fa:	4798      	blx	r3
 80158fc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015900:	4298      	cmp	r0, r3
 8015902:	f000 80a7 	beq.w	8015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015906:	f242 030b 	movw	r3, #8203	; 0x200b
 801590a:	4298      	cmp	r0, r3
 801590c:	f000 80a2 	beq.w	8015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015910:	f1bb 0f00 	cmp.w	fp, #0
 8015914:	d100      	bne.n	8015918 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015916:	444e      	add	r6, r9
 8015918:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801591a:	2a00      	cmp	r2, #0
 801591c:	d1bf      	bne.n	801589e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801591e:	4691      	mov	r9, r2
 8015920:	e098      	b.n	8015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015922:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015924:	2b00      	cmp	r3, #0
 8015926:	f000 80ac 	beq.w	8015a82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801592a:	f1bb 0f00 	cmp.w	fp, #0
 801592e:	d118      	bne.n	8015962 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015930:	f8d8 0000 	ldr.w	r0, [r8]
 8015934:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015936:	6803      	ldr	r3, [r0, #0]
 8015938:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801593a:	4798      	blx	r3
 801593c:	4406      	add	r6, r0
 801593e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015940:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015942:	1af3      	subs	r3, r6, r3
 8015944:	4293      	cmp	r3, r2
 8015946:	dd17      	ble.n	8015978 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015948:	2c00      	cmp	r4, #0
 801594a:	f000 8098 	beq.w	8015a7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801594e:	2c0a      	cmp	r4, #10
 8015950:	f040 8086 	bne.w	8015a60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8015954:	240a      	movs	r4, #10
 8015956:	fab4 f084 	clz	r0, r4
 801595a:	0940      	lsrs	r0, r0, #5
 801595c:	b01f      	add	sp, #124	; 0x7c
 801595e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015962:	f8d8 0000 	ldr.w	r0, [r8]
 8015966:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015968:	6803      	ldr	r3, [r0, #0]
 801596a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801596c:	4798      	blx	r3
 801596e:	f1bb 0f01 	cmp.w	fp, #1
 8015972:	eba6 0600 	sub.w	r6, r6, r0
 8015976:	d0a4      	beq.n	80158c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015978:	981c      	ldr	r0, [sp, #112]	; 0x70
 801597a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801597c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015980:	f9b3 7000 	ldrsh.w	r7, [r3]
 8015984:	7b43      	ldrb	r3, [r0, #13]
 8015986:	015b      	lsls	r3, r3, #5
 8015988:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801598c:	7983      	ldrb	r3, [r0, #6]
 801598e:	4431      	add	r1, r6
 8015990:	4313      	orrs	r3, r2
 8015992:	440b      	add	r3, r1
 8015994:	42bb      	cmp	r3, r7
 8015996:	db5d      	blt.n	8015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015998:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801599a:	4299      	cmp	r1, r3
 801599c:	da5a      	bge.n	8015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801599e:	f8d8 0000 	ldr.w	r0, [r8]
 80159a2:	6803      	ldr	r3, [r0, #0]
 80159a4:	42b7      	cmp	r7, r6
 80159a6:	bfc8      	it	gt
 80159a8:	1bbf      	subgt	r7, r7, r6
 80159aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80159ac:	bfcc      	ite	gt
 80159ae:	b2bf      	uxthgt	r7, r7
 80159b0:	2700      	movle	r7, #0
 80159b2:	4798      	blx	r3
 80159b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80159b6:	7b5a      	ldrb	r2, [r3, #13]
 80159b8:	00d1      	lsls	r1, r2, #3
 80159ba:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80159be:	7a19      	ldrb	r1, [r3, #8]
 80159c0:	4329      	orrs	r1, r5
 80159c2:	0655      	lsls	r5, r2, #25
 80159c4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80159c6:	bf44      	itt	mi
 80159c8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80159cc:	b209      	sxthmi	r1, r1
 80159ce:	1945      	adds	r5, r0, r5
 80159d0:	1a6d      	subs	r5, r5, r1
 80159d2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80159d4:	b2ad      	uxth	r5, r5
 80159d6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80159da:	fa0f fa85 	sxth.w	sl, r5
 80159de:	4551      	cmp	r1, sl
 80159e0:	dd3c      	ble.n	8015a5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80159e2:	0112      	lsls	r2, r2, #4
 80159e4:	79d8      	ldrb	r0, [r3, #7]
 80159e6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80159ea:	4302      	orrs	r2, r0
 80159ec:	4492      	add	sl, r2
 80159ee:	4551      	cmp	r1, sl
 80159f0:	dc30      	bgt.n	8015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80159f2:	1b4d      	subs	r5, r1, r5
 80159f4:	b22d      	sxth	r5, r5
 80159f6:	468a      	mov	sl, r1
 80159f8:	9319      	str	r3, [sp, #100]	; 0x64
 80159fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80159fc:	f8d8 0000 	ldr.w	r0, [r8]
 8015a00:	681a      	ldr	r2, [r3, #0]
 8015a02:	6801      	ldr	r1, [r0, #0]
 8015a04:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015a06:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015a08:	9313      	str	r3, [sp, #76]	; 0x4c
 8015a0a:	9218      	str	r2, [sp, #96]	; 0x60
 8015a0c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8015a0e:	4788      	blx	r1
 8015a10:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015a14:	910b      	str	r1, [sp, #44]	; 0x2c
 8015a16:	f898 100e 	ldrb.w	r1, [r8, #14]
 8015a1a:	910a      	str	r1, [sp, #40]	; 0x28
 8015a1c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015a20:	9109      	str	r1, [sp, #36]	; 0x24
 8015a22:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015a26:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015a28:	9305      	str	r3, [sp, #20]
 8015a2a:	b2ad      	uxth	r5, r5
 8015a2c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015a30:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8015a34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a36:	9304      	str	r3, [sp, #16]
 8015a38:	4437      	add	r7, r6
 8015a3a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015a3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015a3e:	9206      	str	r2, [sp, #24]
 8015a40:	b23f      	sxth	r7, r7
 8015a42:	f8cd a004 	str.w	sl, [sp, #4]
 8015a46:	9700      	str	r7, [sp, #0]
 8015a48:	681a      	ldr	r2, [r3, #0]
 8015a4a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015a4c:	685b      	ldr	r3, [r3, #4]
 8015a4e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015a50:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015a52:	47a8      	blx	r5
 8015a54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a56:	3301      	adds	r3, #1
 8015a58:	930e      	str	r3, [sp, #56]	; 0x38
 8015a5a:	e6e1      	b.n	8015820 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8015a5c:	2500      	movs	r5, #0
 8015a5e:	e7cb      	b.n	80159f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015a60:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015a62:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015a64:	3501      	adds	r5, #1
 8015a66:	429d      	cmp	r5, r3
 8015a68:	f6bf af75 	bge.w	8015956 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015a6c:	4659      	mov	r1, fp
 8015a6e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015a70:	f7fa ff96 	bl	80109a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015a74:	4604      	mov	r4, r0
 8015a76:	b110      	cbz	r0, 8015a7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015a78:	280a      	cmp	r0, #10
 8015a7a:	d1f2      	bne.n	8015a62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8015a7c:	e76a      	b.n	8015954 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015a7e:	2400      	movs	r4, #0
 8015a80:	e769      	b.n	8015956 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015a82:	f1bb 0f00 	cmp.w	fp, #0
 8015a86:	f43f af5a 	beq.w	801593e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8015a8a:	e775      	b.n	8015978 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08015a8c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015a8c:	b530      	push	{r4, r5, lr}
 8015a8e:	8ac4      	ldrh	r4, [r0, #22]
 8015a90:	8b45      	ldrh	r5, [r0, #26]
 8015a92:	8343      	strh	r3, [r0, #26]
 8015a94:	442c      	add	r4, r5
 8015a96:	1ae4      	subs	r4, r4, r3
 8015a98:	82c4      	strh	r4, [r0, #22]
 8015a9a:	8b83      	ldrh	r3, [r0, #28]
 8015a9c:	8b04      	ldrh	r4, [r0, #24]
 8015a9e:	4422      	add	r2, r4
 8015aa0:	440c      	add	r4, r1
 8015aa2:	1a59      	subs	r1, r3, r1
 8015aa4:	83c2      	strh	r2, [r0, #30]
 8015aa6:	8304      	strh	r4, [r0, #24]
 8015aa8:	8381      	strh	r1, [r0, #28]
 8015aaa:	bd30      	pop	{r4, r5, pc}

08015aac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8015aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ab0:	4604      	mov	r4, r0
 8015ab2:	8a47      	ldrh	r7, [r0, #18]
 8015ab4:	68c0      	ldr	r0, [r0, #12]
 8015ab6:	6803      	ldr	r3, [r0, #0]
 8015ab8:	b085      	sub	sp, #20
 8015aba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015abc:	4798      	blx	r3
 8015abe:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015ac2:	7a63      	ldrb	r3, [r4, #9]
 8015ac4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015ac8:	42b7      	cmp	r7, r6
 8015aca:	f103 33ff 	add.w	r3, r3, #4294967295
 8015ace:	bfac      	ite	ge
 8015ad0:	f04f 0900 	movge.w	r9, #0
 8015ad4:	f04f 0901 	movlt.w	r9, #1
 8015ad8:	2b05      	cmp	r3, #5
 8015ada:	d804      	bhi.n	8015ae6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8015adc:	e8df f003 	tbb	[pc, r3]
 8015ae0:	470e0854 	.word	0x470e0854
 8015ae4:	4c4c      	.short	0x4c4c
 8015ae6:	2500      	movs	r5, #0
 8015ae8:	46a9      	mov	r9, r5
 8015aea:	462e      	mov	r6, r5
 8015aec:	462f      	mov	r7, r5
 8015aee:	e00d      	b.n	8015b0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015af0:	42b7      	cmp	r7, r6
 8015af2:	bfb4      	ite	lt
 8015af4:	2600      	movlt	r6, #0
 8015af6:	2601      	movge	r6, #1
 8015af8:	2500      	movs	r5, #0
 8015afa:	e7f7      	b.n	8015aec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015afc:	42b7      	cmp	r7, r6
 8015afe:	464d      	mov	r5, r9
 8015b00:	f04f 0900 	mov.w	r9, #0
 8015b04:	bfb4      	ite	lt
 8015b06:	2600      	movlt	r6, #0
 8015b08:	2601      	movge	r6, #1
 8015b0a:	464f      	mov	r7, r9
 8015b0c:	f04f 0800 	mov.w	r8, #0
 8015b10:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015b14:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015b18:	f8cd 8004 	str.w	r8, [sp, #4]
 8015b1c:	2300      	movs	r3, #0
 8015b1e:	9303      	str	r3, [sp, #12]
 8015b20:	8823      	ldrh	r3, [r4, #0]
 8015b22:	2b20      	cmp	r3, #32
 8015b24:	d034      	beq.n	8015b90 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015b26:	f242 010b 	movw	r1, #8203	; 0x200b
 8015b2a:	1a5a      	subs	r2, r3, r1
 8015b2c:	f1d2 0a00 	rsbs	sl, r2, #0
 8015b30:	eb4a 0a02 	adc.w	sl, sl, r2
 8015b34:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015b38:	4293      	cmp	r3, r2
 8015b3a:	d009      	beq.n	8015b50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015b3c:	428b      	cmp	r3, r1
 8015b3e:	9a01      	ldr	r2, [sp, #4]
 8015b40:	bf18      	it	ne
 8015b42:	461a      	movne	r2, r3
 8015b44:	9201      	str	r2, [sp, #4]
 8015b46:	bf0c      	ite	eq
 8015b48:	f04f 0a01 	moveq.w	sl, #1
 8015b4c:	f04f 0a00 	movne.w	sl, #0
 8015b50:	ab03      	add	r3, sp, #12
 8015b52:	68e2      	ldr	r2, [r4, #12]
 8015b54:	7a21      	ldrb	r1, [r4, #8]
 8015b56:	6860      	ldr	r0, [r4, #4]
 8015b58:	f002 fe04 	bl	8018764 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015b5c:	8020      	strh	r0, [r4, #0]
 8015b5e:	b9d8      	cbnz	r0, 8015b98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015b60:	8ba2      	ldrh	r2, [r4, #28]
 8015b62:	2300      	movs	r3, #0
 8015b64:	4611      	mov	r1, r2
 8015b66:	4620      	mov	r0, r4
 8015b68:	f7ff ff90 	bl	8015a8c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015b6c:	e06e      	b.n	8015c4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015b6e:	2500      	movs	r5, #0
 8015b70:	46a9      	mov	r9, r5
 8015b72:	462e      	mov	r6, r5
 8015b74:	2701      	movs	r7, #1
 8015b76:	e7c9      	b.n	8015b0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015b78:	42b7      	cmp	r7, r6
 8015b7a:	f04f 0500 	mov.w	r5, #0
 8015b7e:	bfb4      	ite	lt
 8015b80:	2700      	movlt	r7, #0
 8015b82:	2701      	movge	r7, #1
 8015b84:	462e      	mov	r6, r5
 8015b86:	e7c1      	b.n	8015b0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015b88:	2500      	movs	r5, #0
 8015b8a:	46a9      	mov	r9, r5
 8015b8c:	2601      	movs	r6, #1
 8015b8e:	e7ad      	b.n	8015aec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015b90:	9301      	str	r3, [sp, #4]
 8015b92:	f04f 0a01 	mov.w	sl, #1
 8015b96:	e7db      	b.n	8015b50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015b98:	8b63      	ldrh	r3, [r4, #26]
 8015b9a:	280a      	cmp	r0, #10
 8015b9c:	f103 0301 	add.w	r3, r3, #1
 8015ba0:	8363      	strh	r3, [r4, #26]
 8015ba2:	d0dd      	beq.n	8015b60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015ba4:	9a03      	ldr	r2, [sp, #12]
 8015ba6:	bb62      	cbnz	r2, 8015c02 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015ba8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015bac:	4298      	cmp	r0, r3
 8015bae:	d003      	beq.n	8015bb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015bb0:	f242 030b 	movw	r3, #8203	; 0x200b
 8015bb4:	4298      	cmp	r0, r3
 8015bb6:	d1b1      	bne.n	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015bb8:	8823      	ldrh	r3, [r4, #0]
 8015bba:	8ba1      	ldrh	r1, [r4, #28]
 8015bbc:	2b20      	cmp	r3, #32
 8015bbe:	d003      	beq.n	8015bc8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015bc0:	f242 000b 	movw	r0, #8203	; 0x200b
 8015bc4:	4283      	cmp	r3, r0
 8015bc6:	d131      	bne.n	8015c2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015bc8:	f1ba 0f00 	cmp.w	sl, #0
 8015bcc:	bf0a      	itet	eq
 8015bce:	4688      	moveq	r8, r1
 8015bd0:	4650      	movne	r0, sl
 8015bd2:	2001      	moveq	r0, #1
 8015bd4:	440a      	add	r2, r1
 8015bd6:	8b23      	ldrh	r3, [r4, #24]
 8015bd8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015bdc:	b292      	uxth	r2, r2
 8015bde:	83a2      	strh	r2, [r4, #28]
 8015be0:	4413      	add	r3, r2
 8015be2:	f1b9 0f00 	cmp.w	r9, #0
 8015be6:	d102      	bne.n	8015bee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015be8:	2d00      	cmp	r5, #0
 8015bea:	d042      	beq.n	8015c72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8015bec:	b300      	cbz	r0, 8015c30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8015bee:	8c21      	ldrh	r1, [r4, #32]
 8015bf0:	4419      	add	r1, r3
 8015bf2:	458c      	cmp	ip, r1
 8015bf4:	da37      	bge.n	8015c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015bf6:	8ae1      	ldrh	r1, [r4, #22]
 8015bf8:	2900      	cmp	r1, #0
 8015bfa:	d034      	beq.n	8015c66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015bfc:	4563      	cmp	r3, ip
 8015bfe:	dd8d      	ble.n	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c00:	e01d      	b.n	8015c3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015c02:	8893      	ldrh	r3, [r2, #4]
 8015c04:	8023      	strh	r3, [r4, #0]
 8015c06:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015c0a:	9901      	ldr	r1, [sp, #4]
 8015c0c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015c10:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015c14:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015c18:	ea4b 0b00 	orr.w	fp, fp, r0
 8015c1c:	68e0      	ldr	r0, [r4, #12]
 8015c1e:	6803      	ldr	r3, [r0, #0]
 8015c20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015c22:	4798      	blx	r3
 8015c24:	eb0b 0200 	add.w	r2, fp, r0
 8015c28:	b292      	uxth	r2, r2
 8015c2a:	e7c5      	b.n	8015bb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015c2c:	2000      	movs	r0, #0
 8015c2e:	e7d1      	b.n	8015bd4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015c30:	4563      	cmp	r3, ip
 8015c32:	f77f af73 	ble.w	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c36:	8ae3      	ldrh	r3, [r4, #22]
 8015c38:	2b00      	cmp	r3, #0
 8015c3a:	f43f af6f 	beq.w	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c3e:	2301      	movs	r3, #1
 8015c40:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015c44:	8c22      	ldrh	r2, [r4, #32]
 8015c46:	8be3      	ldrh	r3, [r4, #30]
 8015c48:	4413      	add	r3, r2
 8015c4a:	83e3      	strh	r3, [r4, #30]
 8015c4c:	68e0      	ldr	r0, [r4, #12]
 8015c4e:	6803      	ldr	r3, [r0, #0]
 8015c50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015c52:	4798      	blx	r3
 8015c54:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015c58:	4418      	add	r0, r3
 8015c5a:	8a63      	ldrh	r3, [r4, #18]
 8015c5c:	1a18      	subs	r0, r3, r0
 8015c5e:	8260      	strh	r0, [r4, #18]
 8015c60:	b005      	add	sp, #20
 8015c62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c66:	2300      	movs	r3, #0
 8015c68:	4611      	mov	r1, r2
 8015c6a:	4620      	mov	r0, r4
 8015c6c:	f7ff ff0e 	bl	8015a8c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015c70:	e754      	b.n	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c72:	4563      	cmp	r3, ip
 8015c74:	dd14      	ble.n	8015ca0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015c76:	b117      	cbz	r7, 8015c7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015c78:	2301      	movs	r3, #1
 8015c7a:	460a      	mov	r2, r1
 8015c7c:	e772      	b.n	8015b64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8015c7e:	2e00      	cmp	r6, #0
 8015c80:	f43f af4c 	beq.w	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c84:	2800      	cmp	r0, #0
 8015c86:	f47f af49 	bne.w	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c8a:	f1ba 0f00 	cmp.w	sl, #0
 8015c8e:	d002      	beq.n	8015c96 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015c90:	2301      	movs	r3, #1
 8015c92:	4642      	mov	r2, r8
 8015c94:	e767      	b.n	8015b66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015c96:	8ae3      	ldrh	r3, [r4, #22]
 8015c98:	2b00      	cmp	r3, #0
 8015c9a:	f43f af3f 	beq.w	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015c9e:	e7d5      	b.n	8015c4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015ca0:	2800      	cmp	r0, #0
 8015ca2:	f47f af3b 	bne.w	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015ca6:	f1ba 0f00 	cmp.w	sl, #0
 8015caa:	f43f af37 	beq.w	8015b1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015cae:	2301      	movs	r3, #1
 8015cb0:	4642      	mov	r2, r8
 8015cb2:	e7da      	b.n	8015c6a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015cb4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015cb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015cb6:	4605      	mov	r5, r0
 8015cb8:	b08f      	sub	sp, #60	; 0x3c
 8015cba:	4617      	mov	r7, r2
 8015cbc:	461c      	mov	r4, r3
 8015cbe:	460e      	mov	r6, r1
 8015cc0:	b1d1      	cbz	r1, 8015cf8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015cc2:	681b      	ldr	r3, [r3, #0]
 8015cc4:	4620      	mov	r0, r4
 8015cc6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015cc8:	4798      	blx	r3
 8015cca:	4240      	negs	r0, r0
 8015ccc:	b200      	sxth	r0, r0
 8015cce:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015cd2:	9603      	str	r6, [sp, #12]
 8015cd4:	9700      	str	r7, [sp, #0]
 8015cd6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015cda:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8015cde:	4629      	mov	r1, r5
 8015ce0:	a805      	add	r0, sp, #20
 8015ce2:	f7ff fcbf 	bl	8015664 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015ce6:	2401      	movs	r4, #1
 8015ce8:	a805      	add	r0, sp, #20
 8015cea:	f7ff fedf 	bl	8015aac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015cee:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015cf2:	b163      	cbz	r3, 8015d0e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015cf4:	3401      	adds	r4, #1
 8015cf6:	e7f7      	b.n	8015ce8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015cf8:	f002 fe02 	bl	8018900 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015cfc:	2401      	movs	r4, #1
 8015cfe:	280a      	cmp	r0, #10
 8015d00:	4628      	mov	r0, r5
 8015d02:	bf08      	it	eq
 8015d04:	3401      	addeq	r4, #1
 8015d06:	f002 fdfb 	bl	8018900 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015d0a:	2800      	cmp	r0, #0
 8015d0c:	d1f7      	bne.n	8015cfe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8015d0e:	b2a0      	uxth	r0, r4
 8015d10:	b00f      	add	sp, #60	; 0x3c
 8015d12:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015d14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015d14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d18:	b0e3      	sub	sp, #396	; 0x18c
 8015d1a:	461c      	mov	r4, r3
 8015d1c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8015d1e:	4683      	mov	fp, r0
 8015d20:	4688      	mov	r8, r1
 8015d22:	2b00      	cmp	r3, #0
 8015d24:	f000 8112 	beq.w	8015f4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015d28:	6823      	ldr	r3, [r4, #0]
 8015d2a:	2b00      	cmp	r3, #0
 8015d2c:	f000 810e 	beq.w	8015f4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015d30:	7ba3      	ldrb	r3, [r4, #14]
 8015d32:	2b00      	cmp	r3, #0
 8015d34:	f000 810a 	beq.w	8015f4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015d38:	6810      	ldr	r0, [r2, #0]
 8015d3a:	6851      	ldr	r1, [r2, #4]
 8015d3c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015d40:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015d44:	ad0a      	add	r5, sp, #40	; 0x28
 8015d46:	462b      	mov	r3, r5
 8015d48:	c303      	stmia	r3!, {r0, r1}
 8015d4a:	2100      	movs	r1, #0
 8015d4c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015d50:	910c      	str	r1, [sp, #48]	; 0x30
 8015d52:	79a2      	ldrb	r2, [r4, #6]
 8015d54:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015d58:	a90c      	add	r1, sp, #48	; 0x30
 8015d5a:	4628      	mov	r0, r5
 8015d5c:	f7ff fd01 	bl	8015762 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015d60:	a90c      	add	r1, sp, #48	; 0x30
 8015d62:	4608      	mov	r0, r1
 8015d64:	79a2      	ldrb	r2, [r4, #6]
 8015d66:	f7ff fcfc 	bl	8015762 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015d6a:	a817      	add	r0, sp, #92	; 0x5c
 8015d6c:	f002 f99d 	bl	80180aa <_ZN8touchgfx12TextProviderC1Ev>
 8015d70:	6820      	ldr	r0, [r4, #0]
 8015d72:	6803      	ldr	r3, [r0, #0]
 8015d74:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015d76:	4798      	blx	r3
 8015d78:	4606      	mov	r6, r0
 8015d7a:	6820      	ldr	r0, [r4, #0]
 8015d7c:	6803      	ldr	r3, [r0, #0]
 8015d7e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d80:	4798      	blx	r3
 8015d82:	4633      	mov	r3, r6
 8015d84:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015d86:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015d88:	9000      	str	r0, [sp, #0]
 8015d8a:	a817      	add	r0, sp, #92	; 0x5c
 8015d8c:	f002 f9e8 	bl	8018160 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015d90:	6820      	ldr	r0, [r4, #0]
 8015d92:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015d96:	6803      	ldr	r3, [r0, #0]
 8015d98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d9a:	4798      	blx	r3
 8015d9c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015da0:	6823      	ldr	r3, [r4, #0]
 8015da2:	4607      	mov	r7, r0
 8015da4:	4406      	add	r6, r0
 8015da6:	a830      	add	r0, sp, #192	; 0xc0
 8015da8:	f893 9009 	ldrb.w	r9, [r3, #9]
 8015dac:	f002 f97d 	bl	80180aa <_ZN8touchgfx12TextProviderC1Ev>
 8015db0:	7c23      	ldrb	r3, [r4, #16]
 8015db2:	b17b      	cbz	r3, 8015dd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015db4:	6820      	ldr	r0, [r4, #0]
 8015db6:	6803      	ldr	r3, [r0, #0]
 8015db8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015dba:	4798      	blx	r3
 8015dbc:	9009      	str	r0, [sp, #36]	; 0x24
 8015dbe:	6820      	ldr	r0, [r4, #0]
 8015dc0:	6802      	ldr	r2, [r0, #0]
 8015dc2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8015dc4:	4790      	blx	r2
 8015dc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015dc8:	9000      	str	r0, [sp, #0]
 8015dca:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015dcc:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015dce:	a830      	add	r0, sp, #192	; 0xc0
 8015dd0:	f002 f9c6 	bl	8018160 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015dd4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015dd8:	7be2      	ldrb	r2, [r4, #15]
 8015dda:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015dde:	1a8a      	subs	r2, r1, r2
 8015de0:	7c21      	ldrb	r1, [r4, #16]
 8015de2:	9103      	str	r1, [sp, #12]
 8015de4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015de8:	9102      	str	r1, [sp, #8]
 8015dea:	6821      	ldr	r1, [r4, #0]
 8015dec:	9101      	str	r1, [sp, #4]
 8015dee:	7961      	ldrb	r1, [r4, #5]
 8015df0:	9100      	str	r1, [sp, #0]
 8015df2:	b292      	uxth	r2, r2
 8015df4:	a930      	add	r1, sp, #192	; 0xc0
 8015df6:	a80e      	add	r0, sp, #56	; 0x38
 8015df8:	f7ff fc34 	bl	8015664 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015dfc:	2e00      	cmp	r6, #0
 8015dfe:	dc5b      	bgt.n	8015eb8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015e00:	af17      	add	r7, sp, #92	; 0x5c
 8015e02:	f04f 0900 	mov.w	r9, #0
 8015e06:	7c23      	ldrb	r3, [r4, #16]
 8015e08:	2b00      	cmp	r3, #0
 8015e0a:	f000 80b1 	beq.w	8015f70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8015e0e:	a80e      	add	r0, sp, #56	; 0x38
 8015e10:	f7ff fe4c 	bl	8015aac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015e14:	f1ba 0f00 	cmp.w	sl, #0
 8015e18:	f000 80a5 	beq.w	8015f66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015e1c:	7c23      	ldrb	r3, [r4, #16]
 8015e1e:	9309      	str	r3, [sp, #36]	; 0x24
 8015e20:	2264      	movs	r2, #100	; 0x64
 8015e22:	4639      	mov	r1, r7
 8015e24:	a849      	add	r0, sp, #292	; 0x124
 8015e26:	f013 faf4 	bl	8029412 <memcpy>
 8015e2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e2c:	2b00      	cmp	r3, #0
 8015e2e:	f000 80a7 	beq.w	8015f80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015e32:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015e36:	7922      	ldrb	r2, [r4, #4]
 8015e38:	2a01      	cmp	r2, #1
 8015e3a:	f040 808a 	bne.w	8015f52 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8015e3e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8015e42:	1ac0      	subs	r0, r0, r3
 8015e44:	2302      	movs	r3, #2
 8015e46:	fb90 f0f3 	sdiv	r0, r0, r3
 8015e4a:	b200      	sxth	r0, r0
 8015e4c:	7c23      	ldrb	r3, [r4, #16]
 8015e4e:	2b00      	cmp	r3, #0
 8015e50:	f000 808b 	beq.w	8015f6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015e54:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8015e58:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8015e5c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015e60:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015e64:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8015e68:	4410      	add	r0, r2
 8015e6a:	b200      	sxth	r0, r0
 8015e6c:	9000      	str	r0, [sp, #0]
 8015e6e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015e72:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015e76:	4642      	mov	r2, r8
 8015e78:	2100      	movs	r1, #0
 8015e7a:	4658      	mov	r0, fp
 8015e7c:	f7ff fca2 	bl	80157c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015e80:	2800      	cmp	r0, #0
 8015e82:	d163      	bne.n	8015f4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015e84:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015e88:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015e8c:	b2b2      	uxth	r2, r6
 8015e8e:	4413      	add	r3, r2
 8015e90:	1a8a      	subs	r2, r1, r2
 8015e92:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015e96:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8015e9a:	b21b      	sxth	r3, r3
 8015e9c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015ea0:	2a00      	cmp	r2, #0
 8015ea2:	d153      	bne.n	8015f4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015ea4:	6822      	ldr	r2, [r4, #0]
 8015ea6:	8869      	ldrh	r1, [r5, #2]
 8015ea8:	7a12      	ldrb	r2, [r2, #8]
 8015eaa:	1a9b      	subs	r3, r3, r2
 8015eac:	88ea      	ldrh	r2, [r5, #6]
 8015eae:	440a      	add	r2, r1
 8015eb0:	b212      	sxth	r2, r2
 8015eb2:	4293      	cmp	r3, r2
 8015eb4:	dda7      	ble.n	8015e06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015eb6:	e049      	b.n	8015f4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015eb8:	7c23      	ldrb	r3, [r4, #16]
 8015eba:	444f      	add	r7, r9
 8015ebc:	b1c3      	cbz	r3, 8015ef0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8015ebe:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8015ec2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015ec6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015eca:	443b      	add	r3, r7
 8015ecc:	4293      	cmp	r3, r2
 8015ece:	da97      	bge.n	8015e00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015ed0:	a80e      	add	r0, sp, #56	; 0x38
 8015ed2:	f7ff fdeb 	bl	8015aac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015ed6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8015eda:	3b01      	subs	r3, #1
 8015edc:	b29b      	uxth	r3, r3
 8015ede:	454b      	cmp	r3, r9
 8015ee0:	9309      	str	r3, [sp, #36]	; 0x24
 8015ee2:	d021      	beq.n	8015f28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015ee4:	7961      	ldrb	r1, [r4, #5]
 8015ee6:	a817      	add	r0, sp, #92	; 0x5c
 8015ee8:	f7fa fd5a 	bl	80109a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015eee:	e7f4      	b.n	8015eda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015ef0:	fa1f f986 	uxth.w	r9, r6
 8015ef4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015ef8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015efc:	443b      	add	r3, r7
 8015efe:	4293      	cmp	r3, r2
 8015f00:	f6bf af7e 	bge.w	8015e00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015f04:	a817      	add	r0, sp, #92	; 0x5c
 8015f06:	f002 fcfb 	bl	8018900 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015f0a:	b1f8      	cbz	r0, 8015f4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015f0c:	280a      	cmp	r0, #10
 8015f0e:	d1f1      	bne.n	8015ef4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015f10:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015f14:	444b      	add	r3, r9
 8015f16:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015f1a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015f1e:	eba3 0309 	sub.w	r3, r3, r9
 8015f22:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015f26:	e7e5      	b.n	8015ef4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015f28:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8015f2c:	b2b3      	uxth	r3, r6
 8015f2e:	441a      	add	r2, r3
 8015f30:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015f34:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8015f38:	1ad3      	subs	r3, r2, r3
 8015f3a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015f3e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015f42:	b11b      	cbz	r3, 8015f4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015f44:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8015f48:	2b00      	cmp	r3, #0
 8015f4a:	d0ba      	beq.n	8015ec2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8015f4c:	b063      	add	sp, #396	; 0x18c
 8015f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f52:	2a02      	cmp	r2, #2
 8015f54:	d105      	bne.n	8015f62 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8015f56:	7be2      	ldrb	r2, [r4, #15]
 8015f58:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015f5c:	1a80      	subs	r0, r0, r2
 8015f5e:	1ac0      	subs	r0, r0, r3
 8015f60:	e773      	b.n	8015e4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8015f62:	2000      	movs	r0, #0
 8015f64:	e772      	b.n	8015e4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015f66:	7be0      	ldrb	r0, [r4, #15]
 8015f68:	e770      	b.n	8015e4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015f6a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015f6e:	e773      	b.n	8015e58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015f70:	f1ba 0f00 	cmp.w	sl, #0
 8015f74:	d0f7      	beq.n	8015f66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015f76:	2264      	movs	r2, #100	; 0x64
 8015f78:	4639      	mov	r1, r7
 8015f7a:	a849      	add	r0, sp, #292	; 0x124
 8015f7c:	f013 fa49 	bl	8029412 <memcpy>
 8015f80:	2300      	movs	r3, #0
 8015f82:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015f86:	6821      	ldr	r1, [r4, #0]
 8015f88:	a849      	add	r0, sp, #292	; 0x124
 8015f8a:	f7ff fbae 	bl	80156ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015f8e:	b203      	sxth	r3, r0
 8015f90:	e751      	b.n	8015e36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015f92 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015f92:	2b03      	cmp	r3, #3
 8015f94:	d818      	bhi.n	8015fc8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015f96:	e8df f003 	tbb	[pc, r3]
 8015f9a:	0602      	.short	0x0602
 8015f9c:	130d      	.short	0x130d
 8015f9e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015fa2:	1850      	adds	r0, r2, r1
 8015fa4:	4770      	bx	lr
 8015fa6:	8803      	ldrh	r3, [r0, #0]
 8015fa8:	8880      	ldrh	r0, [r0, #4]
 8015faa:	4418      	add	r0, r3
 8015fac:	b200      	sxth	r0, r0
 8015fae:	1a80      	subs	r0, r0, r2
 8015fb0:	3801      	subs	r0, #1
 8015fb2:	4770      	bx	lr
 8015fb4:	8803      	ldrh	r3, [r0, #0]
 8015fb6:	8880      	ldrh	r0, [r0, #4]
 8015fb8:	4418      	add	r0, r3
 8015fba:	b200      	sxth	r0, r0
 8015fbc:	1a40      	subs	r0, r0, r1
 8015fbe:	e7f7      	b.n	8015fb0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015fc0:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015fc4:	4410      	add	r0, r2
 8015fc6:	4770      	bx	lr
 8015fc8:	2000      	movs	r0, #0
 8015fca:	4770      	bx	lr

08015fcc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8015fcc:	2b03      	cmp	r3, #3
 8015fce:	d817      	bhi.n	8016000 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015fd0:	e8df f003 	tbb	[pc, r3]
 8015fd4:	10090602 	.word	0x10090602
 8015fd8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015fdc:	1850      	adds	r0, r2, r1
 8015fde:	4770      	bx	lr
 8015fe0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015fe4:	e7fa      	b.n	8015fdc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015fe6:	8843      	ldrh	r3, [r0, #2]
 8015fe8:	88c0      	ldrh	r0, [r0, #6]
 8015fea:	4418      	add	r0, r3
 8015fec:	b200      	sxth	r0, r0
 8015fee:	1a80      	subs	r0, r0, r2
 8015ff0:	3801      	subs	r0, #1
 8015ff2:	4770      	bx	lr
 8015ff4:	8843      	ldrh	r3, [r0, #2]
 8015ff6:	88c0      	ldrh	r0, [r0, #6]
 8015ff8:	4418      	add	r0, r3
 8015ffa:	b200      	sxth	r0, r0
 8015ffc:	1a40      	subs	r0, r0, r1
 8015ffe:	e7f7      	b.n	8015ff0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8016000:	2000      	movs	r0, #0
 8016002:	4770      	bx	lr

08016004 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8016004:	4b01      	ldr	r3, [pc, #4]	; (801600c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8016006:	2200      	movs	r2, #0
 8016008:	601a      	str	r2, [r3, #0]
 801600a:	4770      	bx	lr
 801600c:	200259a0 	.word	0x200259a0

08016010 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8016010:	4603      	mov	r3, r0
 8016012:	b1c8      	cbz	r0, 8016048 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8016014:	0c02      	lsrs	r2, r0, #16
 8016016:	0412      	lsls	r2, r2, #16
 8016018:	b9a2      	cbnz	r2, 8016044 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801601a:	0403      	lsls	r3, r0, #16
 801601c:	2010      	movs	r0, #16
 801601e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016022:	bf04      	itt	eq
 8016024:	021b      	lsleq	r3, r3, #8
 8016026:	3008      	addeq	r0, #8
 8016028:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801602c:	bf04      	itt	eq
 801602e:	011b      	lsleq	r3, r3, #4
 8016030:	3004      	addeq	r0, #4
 8016032:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8016036:	bf04      	itt	eq
 8016038:	009b      	lsleq	r3, r3, #2
 801603a:	3002      	addeq	r0, #2
 801603c:	2b00      	cmp	r3, #0
 801603e:	db04      	blt.n	801604a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016040:	3001      	adds	r0, #1
 8016042:	4770      	bx	lr
 8016044:	2000      	movs	r0, #0
 8016046:	e7ea      	b.n	801601e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8016048:	2020      	movs	r0, #32
 801604a:	4770      	bx	lr

0801604c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801604c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016050:	b087      	sub	sp, #28
 8016052:	460d      	mov	r5, r1
 8016054:	4616      	mov	r6, r2
 8016056:	4698      	mov	r8, r3
 8016058:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801605c:	4601      	mov	r1, r0
 801605e:	b120      	cbz	r0, 801606a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016060:	b11a      	cbz	r2, 801606a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016062:	2d1f      	cmp	r5, #31
 8016064:	d801      	bhi.n	801606a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016066:	2b1f      	cmp	r3, #31
 8016068:	d904      	bls.n	8016074 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801606a:	2000      	movs	r0, #0
 801606c:	6038      	str	r0, [r7, #0]
 801606e:	b007      	add	sp, #28
 8016070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016074:	b97d      	cbnz	r5, 8016096 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8016076:	b143      	cbz	r3, 801608a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016078:	4602      	mov	r2, r0
 801607a:	e9cd 4700 	strd	r4, r7, [sp]
 801607e:	462b      	mov	r3, r5
 8016080:	4641      	mov	r1, r8
 8016082:	4630      	mov	r0, r6
 8016084:	f7ff ffe2 	bl	801604c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016088:	e7f1      	b.n	801606e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801608a:	f04f 33ff 	mov.w	r3, #4294967295
 801608e:	603b      	str	r3, [r7, #0]
 8016090:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016094:	e7eb      	b.n	801606e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016096:	fa32 fa05 	lsrs.w	sl, r2, r5
 801609a:	d106      	bne.n	80160aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801609c:	4346      	muls	r6, r0
 801609e:	fbb6 f0f4 	udiv	r0, r6, r4
 80160a2:	fb04 6610 	mls	r6, r4, r0, r6
 80160a6:	603e      	str	r6, [r7, #0]
 80160a8:	e7e1      	b.n	801606e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80160aa:	2201      	movs	r2, #1
 80160ac:	40aa      	lsls	r2, r5
 80160ae:	3a01      	subs	r2, #1
 80160b0:	4016      	ands	r6, r2
 80160b2:	fa00 fb05 	lsl.w	fp, r0, r5
 80160b6:	4630      	mov	r0, r6
 80160b8:	fbbb f9f4 	udiv	r9, fp, r4
 80160bc:	fb0a f309 	mul.w	r3, sl, r9
 80160c0:	9303      	str	r3, [sp, #12]
 80160c2:	f7ff ffa5 	bl	8016010 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80160c6:	462b      	mov	r3, r5
 80160c8:	460a      	mov	r2, r1
 80160ca:	e9cd 4700 	strd	r4, r7, [sp]
 80160ce:	4601      	mov	r1, r0
 80160d0:	4630      	mov	r0, r6
 80160d2:	f7ff ffbb 	bl	801604c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80160d6:	fb04 b919 	mls	r9, r4, r9, fp
 80160da:	4606      	mov	r6, r0
 80160dc:	4648      	mov	r0, r9
 80160de:	eb05 0108 	add.w	r1, r5, r8
 80160e2:	f7ff ff95 	bl	8016010 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80160e6:	ab05      	add	r3, sp, #20
 80160e8:	e9cd 4300 	strd	r4, r3, [sp]
 80160ec:	464a      	mov	r2, r9
 80160ee:	4603      	mov	r3, r0
 80160f0:	4650      	mov	r0, sl
 80160f2:	f7ff ffab 	bl	801604c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80160f6:	6839      	ldr	r1, [r7, #0]
 80160f8:	9a05      	ldr	r2, [sp, #20]
 80160fa:	9b03      	ldr	r3, [sp, #12]
 80160fc:	4411      	add	r1, r2
 80160fe:	fbb1 f2f4 	udiv	r2, r1, r4
 8016102:	18d3      	adds	r3, r2, r3
 8016104:	441e      	add	r6, r3
 8016106:	fb04 1412 	mls	r4, r4, r2, r1
 801610a:	4430      	add	r0, r6
 801610c:	603c      	str	r4, [r7, #0]
 801610e:	e7ae      	b.n	801606e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08016110 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8016110:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016114:	b085      	sub	sp, #20
 8016116:	f1b0 0900 	subs.w	r9, r0, #0
 801611a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801611c:	461d      	mov	r5, r3
 801611e:	bfbf      	itttt	lt
 8016120:	6823      	ldrlt	r3, [r4, #0]
 8016122:	425b      	neglt	r3, r3
 8016124:	f1c9 0900 	rsblt	r9, r9, #0
 8016128:	6023      	strlt	r3, [r4, #0]
 801612a:	bfb4      	ite	lt
 801612c:	f04f 36ff 	movlt.w	r6, #4294967295
 8016130:	2601      	movge	r6, #1
 8016132:	2a00      	cmp	r2, #0
 8016134:	4617      	mov	r7, r2
 8016136:	da04      	bge.n	8016142 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8016138:	6823      	ldr	r3, [r4, #0]
 801613a:	425b      	negs	r3, r3
 801613c:	4257      	negs	r7, r2
 801613e:	4276      	negs	r6, r6
 8016140:	6023      	str	r3, [r4, #0]
 8016142:	2d00      	cmp	r5, #0
 8016144:	4638      	mov	r0, r7
 8016146:	bfba      	itte	lt
 8016148:	426d      	neglt	r5, r5
 801614a:	f04f 38ff 	movlt.w	r8, #4294967295
 801614e:	f04f 0801 	movge.w	r8, #1
 8016152:	f7ff ff5d 	bl	8016010 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016156:	ab03      	add	r3, sp, #12
 8016158:	e9cd 5300 	strd	r5, r3, [sp]
 801615c:	463a      	mov	r2, r7
 801615e:	4603      	mov	r3, r0
 8016160:	4648      	mov	r0, r9
 8016162:	f7ff ff73 	bl	801604c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016166:	6823      	ldr	r3, [r4, #0]
 8016168:	9a03      	ldr	r2, [sp, #12]
 801616a:	4546      	cmp	r6, r8
 801616c:	441a      	add	r2, r3
 801616e:	fb92 f3f5 	sdiv	r3, r2, r5
 8016172:	4418      	add	r0, r3
 8016174:	bf18      	it	ne
 8016176:	4240      	negne	r0, r0
 8016178:	fb05 2313 	mls	r3, r5, r3, r2
 801617c:	1c72      	adds	r2, r6, #1
 801617e:	6023      	str	r3, [r4, #0]
 8016180:	d105      	bne.n	801618e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016182:	2b00      	cmp	r3, #0
 8016184:	f1c3 0200 	rsb	r2, r3, #0
 8016188:	db0b      	blt.n	80161a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801618a:	6022      	str	r2, [r4, #0]
 801618c:	e006      	b.n	801619c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801618e:	2e01      	cmp	r6, #1
 8016190:	d104      	bne.n	801619c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016192:	2b00      	cmp	r3, #0
 8016194:	da02      	bge.n	801619c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016196:	442b      	add	r3, r5
 8016198:	3801      	subs	r0, #1
 801619a:	6023      	str	r3, [r4, #0]
 801619c:	b005      	add	sp, #20
 801619e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80161a2:	3801      	subs	r0, #1
 80161a4:	1b52      	subs	r2, r2, r5
 80161a6:	e7f0      	b.n	801618a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080161a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80161a8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80161ac:	4c1c      	ldr	r4, [pc, #112]	; (8016220 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80161ae:	6807      	ldr	r7, [r0, #0]
 80161b0:	69a3      	ldr	r3, [r4, #24]
 80161b2:	4605      	mov	r5, r0
 80161b4:	b92b      	cbnz	r3, 80161c2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80161b6:	6840      	ldr	r0, [r0, #4]
 80161b8:	e9c5 7000 	strd	r7, r0, [r5]
 80161bc:	b004      	add	sp, #16
 80161be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80161c2:	68a2      	ldr	r2, [r4, #8]
 80161c4:	6820      	ldr	r0, [r4, #0]
 80161c6:	ae04      	add	r6, sp, #16
 80161c8:	f04f 0802 	mov.w	r8, #2
 80161cc:	fb93 f1f8 	sdiv	r1, r3, r8
 80161d0:	440a      	add	r2, r1
 80161d2:	f846 2d04 	str.w	r2, [r6, #-4]!
 80161d6:	69e1      	ldr	r1, [r4, #28]
 80161d8:	9600      	str	r6, [sp, #0]
 80161da:	463a      	mov	r2, r7
 80161dc:	f7ff ff98 	bl	8016110 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80161e0:	69a3      	ldr	r3, [r4, #24]
 80161e2:	686a      	ldr	r2, [r5, #4]
 80161e4:	6a21      	ldr	r1, [r4, #32]
 80161e6:	9600      	str	r6, [sp, #0]
 80161e8:	4607      	mov	r7, r0
 80161ea:	6860      	ldr	r0, [r4, #4]
 80161ec:	f7ff ff90 	bl	8016110 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80161f0:	6962      	ldr	r2, [r4, #20]
 80161f2:	69a3      	ldr	r3, [r4, #24]
 80161f4:	fb93 f8f8 	sdiv	r8, r3, r8
 80161f8:	4442      	add	r2, r8
 80161fa:	9203      	str	r2, [sp, #12]
 80161fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80161fe:	682a      	ldr	r2, [r5, #0]
 8016200:	9600      	str	r6, [sp, #0]
 8016202:	4407      	add	r7, r0
 8016204:	68e0      	ldr	r0, [r4, #12]
 8016206:	f7ff ff83 	bl	8016110 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801620a:	9600      	str	r6, [sp, #0]
 801620c:	4680      	mov	r8, r0
 801620e:	69a3      	ldr	r3, [r4, #24]
 8016210:	686a      	ldr	r2, [r5, #4]
 8016212:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8016214:	6920      	ldr	r0, [r4, #16]
 8016216:	f7ff ff7b 	bl	8016110 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801621a:	4440      	add	r0, r8
 801621c:	e7cc      	b.n	80161b8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801621e:	bf00      	nop
 8016220:	200259a4 	.word	0x200259a4

08016224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8016224:	4b07      	ldr	r3, [pc, #28]	; (8016244 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8016226:	781b      	ldrb	r3, [r3, #0]
 8016228:	2b01      	cmp	r3, #1
 801622a:	d109      	bne.n	8016240 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801622c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016230:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016234:	8003      	strh	r3, [r0, #0]
 8016236:	4b04      	ldr	r3, [pc, #16]	; (8016248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8016238:	881b      	ldrh	r3, [r3, #0]
 801623a:	3b01      	subs	r3, #1
 801623c:	1a9b      	subs	r3, r3, r2
 801623e:	800b      	strh	r3, [r1, #0]
 8016240:	4770      	bx	lr
 8016242:	bf00      	nop
 8016244:	20025990 	.word	0x20025990
 8016248:	2002598c 	.word	0x2002598c

0801624c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801624c:	b510      	push	{r4, lr}
 801624e:	4b07      	ldr	r3, [pc, #28]	; (801626c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8016250:	781b      	ldrb	r3, [r3, #0]
 8016252:	2b01      	cmp	r3, #1
 8016254:	d108      	bne.n	8016268 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8016256:	4b06      	ldr	r3, [pc, #24]	; (8016270 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8016258:	880c      	ldrh	r4, [r1, #0]
 801625a:	881b      	ldrh	r3, [r3, #0]
 801625c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016260:	3b01      	subs	r3, #1
 8016262:	1b1b      	subs	r3, r3, r4
 8016264:	8003      	strh	r3, [r0, #0]
 8016266:	800a      	strh	r2, [r1, #0]
 8016268:	bd10      	pop	{r4, pc}
 801626a:	bf00      	nop
 801626c:	20025990 	.word	0x20025990
 8016270:	2002598c 	.word	0x2002598c

08016274 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016274:	b510      	push	{r4, lr}
 8016276:	4b0a      	ldr	r3, [pc, #40]	; (80162a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016278:	781b      	ldrb	r3, [r3, #0]
 801627a:	2b01      	cmp	r3, #1
 801627c:	d10e      	bne.n	801629c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801627e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016282:	8843      	ldrh	r3, [r0, #2]
 8016284:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016288:	8044      	strh	r4, [r0, #2]
 801628a:	18ca      	adds	r2, r1, r3
 801628c:	4b05      	ldr	r3, [pc, #20]	; (80162a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801628e:	881b      	ldrh	r3, [r3, #0]
 8016290:	1a9b      	subs	r3, r3, r2
 8016292:	8003      	strh	r3, [r0, #0]
 8016294:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016298:	80c3      	strh	r3, [r0, #6]
 801629a:	8081      	strh	r1, [r0, #4]
 801629c:	bd10      	pop	{r4, pc}
 801629e:	bf00      	nop
 80162a0:	20025990 	.word	0x20025990
 80162a4:	2002598c 	.word	0x2002598c

080162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80162a8:	4b08      	ldr	r3, [pc, #32]	; (80162cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80162aa:	781b      	ldrb	r3, [r3, #0]
 80162ac:	2b01      	cmp	r3, #1
 80162ae:	d10c      	bne.n	80162ca <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80162b0:	8803      	ldrh	r3, [r0, #0]
 80162b2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80162b6:	8842      	ldrh	r2, [r0, #2]
 80162b8:	8002      	strh	r2, [r0, #0]
 80162ba:	185a      	adds	r2, r3, r1
 80162bc:	4b04      	ldr	r3, [pc, #16]	; (80162d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80162be:	881b      	ldrh	r3, [r3, #0]
 80162c0:	1a9b      	subs	r3, r3, r2
 80162c2:	8043      	strh	r3, [r0, #2]
 80162c4:	88c3      	ldrh	r3, [r0, #6]
 80162c6:	8083      	strh	r3, [r0, #4]
 80162c8:	80c1      	strh	r1, [r0, #6]
 80162ca:	4770      	bx	lr
 80162cc:	20025990 	.word	0x20025990
 80162d0:	2002598c 	.word	0x2002598c

080162d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80162d4:	b510      	push	{r4, lr}
 80162d6:	4b07      	ldr	r3, [pc, #28]	; (80162f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80162d8:	781b      	ldrb	r3, [r3, #0]
 80162da:	2b01      	cmp	r3, #1
 80162dc:	d108      	bne.n	80162f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80162de:	f9b1 3000 	ldrsh.w	r3, [r1]
 80162e2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80162e6:	8003      	strh	r3, [r0, #0]
 80162e8:	8893      	ldrh	r3, [r2, #4]
 80162ea:	3b01      	subs	r3, #1
 80162ec:	1b1b      	subs	r3, r3, r4
 80162ee:	800b      	strh	r3, [r1, #0]
 80162f0:	bd10      	pop	{r4, pc}
 80162f2:	bf00      	nop
 80162f4:	20025990 	.word	0x20025990

080162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80162f8:	b510      	push	{r4, lr}
 80162fa:	4b0a      	ldr	r3, [pc, #40]	; (8016324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80162fc:	781b      	ldrb	r3, [r3, #0]
 80162fe:	2b01      	cmp	r3, #1
 8016300:	460a      	mov	r2, r1
 8016302:	d10d      	bne.n	8016320 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8016304:	8881      	ldrh	r1, [r0, #4]
 8016306:	8803      	ldrh	r3, [r0, #0]
 8016308:	440b      	add	r3, r1
 801630a:	4601      	mov	r1, r0
 801630c:	3b01      	subs	r3, #1
 801630e:	f821 3b02 	strh.w	r3, [r1], #2
 8016312:	f7ff ffdf 	bl	80162d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8016316:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801631a:	88c2      	ldrh	r2, [r0, #6]
 801631c:	8082      	strh	r2, [r0, #4]
 801631e:	80c3      	strh	r3, [r0, #6]
 8016320:	bd10      	pop	{r4, pc}
 8016322:	bf00      	nop
 8016324:	20025990 	.word	0x20025990

08016328 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016328:	4b06      	ldr	r3, [pc, #24]	; (8016344 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801632a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801632e:	4b06      	ldr	r3, [pc, #24]	; (8016348 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8016330:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8016334:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016338:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 801633c:	2100      	movs	r1, #0
 801633e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8016342:	4770      	bx	lr
 8016344:	2002598c 	.word	0x2002598c
 8016348:	2002598e 	.word	0x2002598e

0801634c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801634c:	4b03      	ldr	r3, [pc, #12]	; (801635c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801634e:	6818      	ldr	r0, [r3, #0]
 8016350:	b110      	cbz	r0, 8016358 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8016352:	6803      	ldr	r3, [r0, #0]
 8016354:	699b      	ldr	r3, [r3, #24]
 8016356:	4718      	bx	r3
 8016358:	4770      	bx	lr
 801635a:	bf00      	nop
 801635c:	200259d4 	.word	0x200259d4

08016360 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016360:	4770      	bx	lr
	...

08016364 <_ZN8touchgfx11Application4drawEv>:
 8016364:	b507      	push	{r0, r1, r2, lr}
 8016366:	4b09      	ldr	r3, [pc, #36]	; (801638c <_ZN8touchgfx11Application4drawEv+0x28>)
 8016368:	f9b3 2000 	ldrsh.w	r2, [r3]
 801636c:	4b08      	ldr	r3, [pc, #32]	; (8016390 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801636e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016372:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016376:	f8ad 3006 	strh.w	r3, [sp, #6]
 801637a:	6803      	ldr	r3, [r0, #0]
 801637c:	2100      	movs	r1, #0
 801637e:	9100      	str	r1, [sp, #0]
 8016380:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016382:	4669      	mov	r1, sp
 8016384:	4798      	blx	r3
 8016386:	b003      	add	sp, #12
 8016388:	f85d fb04 	ldr.w	pc, [sp], #4
 801638c:	2002598c 	.word	0x2002598c
 8016390:	2002598e 	.word	0x2002598e

08016394 <_ZN8touchgfx11Application10invalidateEv>:
 8016394:	4b09      	ldr	r3, [pc, #36]	; (80163bc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8016396:	f9b3 2000 	ldrsh.w	r2, [r3]
 801639a:	4b09      	ldr	r3, [pc, #36]	; (80163c0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801639c:	b082      	sub	sp, #8
 801639e:	f9b3 3000 	ldrsh.w	r3, [r3]
 80163a2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80163a6:	2100      	movs	r1, #0
 80163a8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80163ac:	9100      	str	r1, [sp, #0]
 80163ae:	6803      	ldr	r3, [r0, #0]
 80163b0:	aa02      	add	r2, sp, #8
 80163b2:	e912 0006 	ldmdb	r2, {r1, r2}
 80163b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80163b8:	b002      	add	sp, #8
 80163ba:	4718      	bx	r3
 80163bc:	2002598c 	.word	0x2002598c
 80163c0:	2002598e 	.word	0x2002598e

080163c4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80163c4:	4b03      	ldr	r3, [pc, #12]	; (80163d4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80163c6:	6818      	ldr	r0, [r3, #0]
 80163c8:	b110      	cbz	r0, 80163d0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80163ca:	6803      	ldr	r3, [r0, #0]
 80163cc:	69db      	ldr	r3, [r3, #28]
 80163ce:	4718      	bx	r3
 80163d0:	4770      	bx	lr
 80163d2:	bf00      	nop
 80163d4:	200259d4 	.word	0x200259d4

080163d8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80163d8:	4b03      	ldr	r3, [pc, #12]	; (80163e8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80163da:	6818      	ldr	r0, [r3, #0]
 80163dc:	b110      	cbz	r0, 80163e4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80163de:	6803      	ldr	r3, [r0, #0]
 80163e0:	6a1b      	ldr	r3, [r3, #32]
 80163e2:	4718      	bx	r3
 80163e4:	4770      	bx	lr
 80163e6:	bf00      	nop
 80163e8:	200259d4 	.word	0x200259d4

080163ec <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80163ec:	2300      	movs	r3, #0
 80163ee:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80163f2:	4770      	bx	lr

080163f4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80163f4:	4b03      	ldr	r3, [pc, #12]	; (8016404 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80163f6:	6818      	ldr	r0, [r3, #0]
 80163f8:	b110      	cbz	r0, 8016400 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80163fa:	6803      	ldr	r3, [r0, #0]
 80163fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80163fe:	4718      	bx	r3
 8016400:	4770      	bx	lr
 8016402:	bf00      	nop
 8016404:	200259d4 	.word	0x200259d4

08016408 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016408:	b510      	push	{r4, lr}
 801640a:	f9b1 4000 	ldrsh.w	r4, [r1]
 801640e:	888a      	ldrh	r2, [r1, #4]
 8016410:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016414:	4422      	add	r2, r4
 8016416:	b212      	sxth	r2, r2
 8016418:	4293      	cmp	r3, r2
 801641a:	da15      	bge.n	8016448 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801641c:	8882      	ldrh	r2, [r0, #4]
 801641e:	4413      	add	r3, r2
 8016420:	b21b      	sxth	r3, r3
 8016422:	429c      	cmp	r4, r3
 8016424:	da10      	bge.n	8016448 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016426:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801642a:	88c9      	ldrh	r1, [r1, #6]
 801642c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016430:	4419      	add	r1, r3
 8016432:	b209      	sxth	r1, r1
 8016434:	428a      	cmp	r2, r1
 8016436:	da07      	bge.n	8016448 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016438:	88c0      	ldrh	r0, [r0, #6]
 801643a:	4410      	add	r0, r2
 801643c:	b200      	sxth	r0, r0
 801643e:	4283      	cmp	r3, r0
 8016440:	bfac      	ite	ge
 8016442:	2000      	movge	r0, #0
 8016444:	2001      	movlt	r0, #1
 8016446:	bd10      	pop	{r4, pc}
 8016448:	2000      	movs	r0, #0
 801644a:	e7fc      	b.n	8016446 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801644c <_ZN8touchgfx4Rect10restrictToEss>:
 801644c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016450:	2b00      	cmp	r3, #0
 8016452:	b510      	push	{r4, lr}
 8016454:	da04      	bge.n	8016460 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016456:	8884      	ldrh	r4, [r0, #4]
 8016458:	4423      	add	r3, r4
 801645a:	8083      	strh	r3, [r0, #4]
 801645c:	2300      	movs	r3, #0
 801645e:	8003      	strh	r3, [r0, #0]
 8016460:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016464:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016468:	1b09      	subs	r1, r1, r4
 801646a:	428b      	cmp	r3, r1
 801646c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8016470:	bfc8      	it	gt
 8016472:	8081      	strhgt	r1, [r0, #4]
 8016474:	2b00      	cmp	r3, #0
 8016476:	da04      	bge.n	8016482 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016478:	88c1      	ldrh	r1, [r0, #6]
 801647a:	440b      	add	r3, r1
 801647c:	80c3      	strh	r3, [r0, #6]
 801647e:	2300      	movs	r3, #0
 8016480:	8043      	strh	r3, [r0, #2]
 8016482:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016486:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801648a:	1a52      	subs	r2, r2, r1
 801648c:	4293      	cmp	r3, r2
 801648e:	bfc8      	it	gt
 8016490:	80c2      	strhgt	r2, [r0, #6]
 8016492:	bd10      	pop	{r4, pc}

08016494 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8016494:	b510      	push	{r4, lr}
 8016496:	4b10      	ldr	r3, [pc, #64]	; (80164d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8016498:	f9b3 2000 	ldrsh.w	r2, [r3]
 801649c:	4b0f      	ldr	r3, [pc, #60]	; (80164dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801649e:	460c      	mov	r4, r1
 80164a0:	4620      	mov	r0, r4
 80164a2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80164a6:	f7ff ffd1 	bl	801644c <_ZN8touchgfx4Rect10restrictToEss>
 80164aa:	4b0d      	ldr	r3, [pc, #52]	; (80164e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80164ac:	6818      	ldr	r0, [r3, #0]
 80164ae:	b190      	cbz	r0, 80164d6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80164b0:	6803      	ldr	r3, [r0, #0]
 80164b2:	4621      	mov	r1, r4
 80164b4:	689b      	ldr	r3, [r3, #8]
 80164b6:	4798      	blx	r3
 80164b8:	4b0a      	ldr	r3, [pc, #40]	; (80164e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80164ba:	6818      	ldr	r0, [r3, #0]
 80164bc:	b118      	cbz	r0, 80164c6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80164be:	6803      	ldr	r3, [r0, #0]
 80164c0:	4621      	mov	r1, r4
 80164c2:	689b      	ldr	r3, [r3, #8]
 80164c4:	4798      	blx	r3
 80164c6:	4b08      	ldr	r3, [pc, #32]	; (80164e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80164c8:	6818      	ldr	r0, [r3, #0]
 80164ca:	6803      	ldr	r3, [r0, #0]
 80164cc:	4621      	mov	r1, r4
 80164ce:	69db      	ldr	r3, [r3, #28]
 80164d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80164d4:	4718      	bx	r3
 80164d6:	bd10      	pop	{r4, pc}
 80164d8:	2002598e 	.word	0x2002598e
 80164dc:	2002598c 	.word	0x2002598c
 80164e0:	200259d4 	.word	0x200259d4
 80164e4:	200259d0 	.word	0x200259d0
 80164e8:	20025998 	.word	0x20025998

080164ec <_ZNK8touchgfx4Rect8includesERKS0_>:
 80164ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80164ee:	4606      	mov	r6, r0
 80164f0:	4608      	mov	r0, r1
 80164f2:	460f      	mov	r7, r1
 80164f4:	f7fc fdcb 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 80164f8:	b9e8      	cbnz	r0, 8016536 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80164fa:	f9b7 5000 	ldrsh.w	r5, [r7]
 80164fe:	f9b6 4000 	ldrsh.w	r4, [r6]
 8016502:	42a5      	cmp	r5, r4
 8016504:	db17      	blt.n	8016536 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016506:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801650a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801650e:	429a      	cmp	r2, r3
 8016510:	db11      	blt.n	8016536 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016512:	88b9      	ldrh	r1, [r7, #4]
 8016514:	440d      	add	r5, r1
 8016516:	88b1      	ldrh	r1, [r6, #4]
 8016518:	440c      	add	r4, r1
 801651a:	b22d      	sxth	r5, r5
 801651c:	b224      	sxth	r4, r4
 801651e:	42a5      	cmp	r5, r4
 8016520:	dc09      	bgt.n	8016536 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016522:	88f8      	ldrh	r0, [r7, #6]
 8016524:	4410      	add	r0, r2
 8016526:	88f2      	ldrh	r2, [r6, #6]
 8016528:	4413      	add	r3, r2
 801652a:	b200      	sxth	r0, r0
 801652c:	b21b      	sxth	r3, r3
 801652e:	4298      	cmp	r0, r3
 8016530:	bfcc      	ite	gt
 8016532:	2000      	movgt	r0, #0
 8016534:	2001      	movle	r0, #1
 8016536:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016538 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801653a:	4604      	mov	r4, r0
 801653c:	4608      	mov	r0, r1
 801653e:	460d      	mov	r5, r1
 8016540:	f7fc fda5 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 8016544:	b978      	cbnz	r0, 8016566 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8016546:	4620      	mov	r0, r4
 8016548:	f7fc fda1 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 801654c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8016550:	b150      	cbz	r0, 8016568 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8016552:	8026      	strh	r6, [r4, #0]
 8016554:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016558:	8063      	strh	r3, [r4, #2]
 801655a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801655e:	80a3      	strh	r3, [r4, #4]
 8016560:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016564:	80e3      	strh	r3, [r4, #6]
 8016566:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016568:	f9b4 1000 	ldrsh.w	r1, [r4]
 801656c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016570:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016574:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016578:	88ed      	ldrh	r5, [r5, #6]
 801657a:	42b1      	cmp	r1, r6
 801657c:	460f      	mov	r7, r1
 801657e:	bfa8      	it	ge
 8016580:	4637      	movge	r7, r6
 8016582:	4293      	cmp	r3, r2
 8016584:	4618      	mov	r0, r3
 8016586:	4466      	add	r6, ip
 8016588:	bfa8      	it	ge
 801658a:	4610      	movge	r0, r2
 801658c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016590:	8027      	strh	r7, [r4, #0]
 8016592:	442a      	add	r2, r5
 8016594:	88e5      	ldrh	r5, [r4, #6]
 8016596:	8060      	strh	r0, [r4, #2]
 8016598:	4461      	add	r1, ip
 801659a:	442b      	add	r3, r5
 801659c:	b236      	sxth	r6, r6
 801659e:	b209      	sxth	r1, r1
 80165a0:	b212      	sxth	r2, r2
 80165a2:	b21b      	sxth	r3, r3
 80165a4:	428e      	cmp	r6, r1
 80165a6:	bfac      	ite	ge
 80165a8:	ebc7 0106 	rsbge	r1, r7, r6
 80165ac:	ebc7 0101 	rsblt	r1, r7, r1
 80165b0:	429a      	cmp	r2, r3
 80165b2:	bfac      	ite	ge
 80165b4:	ebc0 0202 	rsbge	r2, r0, r2
 80165b8:	ebc0 0203 	rsblt	r2, r0, r3
 80165bc:	80a1      	strh	r1, [r4, #4]
 80165be:	80e2      	strh	r2, [r4, #6]
 80165c0:	e7d1      	b.n	8016566 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080165c4 <_ZN8touchgfx11Application11getInstanceEv>:
 80165c4:	4b01      	ldr	r3, [pc, #4]	; (80165cc <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80165c6:	6818      	ldr	r0, [r3, #0]
 80165c8:	4770      	bx	lr
 80165ca:	bf00      	nop
 80165cc:	200259e4 	.word	0x200259e4

080165d0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80165d0:	b510      	push	{r4, lr}
 80165d2:	2300      	movs	r3, #0
 80165d4:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80165d8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80165dc:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80165e0:	4604      	mov	r4, r0
 80165e2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80165e6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80165ea:	429a      	cmp	r2, r3
 80165ec:	d90e      	bls.n	801660c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80165ee:	18e2      	adds	r2, r4, r3
 80165f0:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80165f4:	b122      	cbz	r2, 8016600 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80165f6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80165fa:	6803      	ldr	r3, [r0, #0]
 80165fc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80165fe:	4798      	blx	r3
 8016600:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016604:	3301      	adds	r3, #1
 8016606:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801660a:	e7ea      	b.n	80165e2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801660c:	bd10      	pop	{r4, pc}

0801660e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801660e:	b530      	push	{r4, r5, lr}
 8016610:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016614:	2200      	movs	r2, #0
 8016616:	b293      	uxth	r3, r2
 8016618:	429d      	cmp	r5, r3
 801661a:	d90e      	bls.n	801663a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 801661c:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8016620:	428b      	cmp	r3, r1
 8016622:	d10b      	bne.n	801663c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016624:	1884      	adds	r4, r0, r2
 8016626:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 801662a:	b13b      	cbz	r3, 801663c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 801662c:	3b01      	subs	r3, #1
 801662e:	b2db      	uxtb	r3, r3
 8016630:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016634:	b90b      	cbnz	r3, 801663a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016636:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 801663a:	bd30      	pop	{r4, r5, pc}
 801663c:	3201      	adds	r2, #1
 801663e:	e7ea      	b.n	8016616 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08016640 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8016640:	2300      	movs	r3, #0
 8016642:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016646:	f100 0284 	add.w	r2, r0, #132	; 0x84
 801664a:	30a4      	adds	r0, #164	; 0xa4
 801664c:	f802 3b01 	strb.w	r3, [r2], #1
 8016650:	4282      	cmp	r2, r0
 8016652:	d1fb      	bne.n	801664c <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8016654:	4770      	bx	lr
	...

08016658 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8016658:	b570      	push	{r4, r5, r6, lr}
 801665a:	4c0b      	ldr	r4, [pc, #44]	; (8016688 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 801665c:	4605      	mov	r5, r0
 801665e:	6820      	ldr	r0, [r4, #0]
 8016660:	460e      	mov	r6, r1
 8016662:	b110      	cbz	r0, 801666a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8016664:	6803      	ldr	r3, [r0, #0]
 8016666:	695b      	ldr	r3, [r3, #20]
 8016668:	4798      	blx	r3
 801666a:	1d28      	adds	r0, r5, #4
 801666c:	f7ff ffe8 	bl	8016640 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016670:	6026      	str	r6, [r4, #0]
 8016672:	6833      	ldr	r3, [r6, #0]
 8016674:	4630      	mov	r0, r6
 8016676:	68db      	ldr	r3, [r3, #12]
 8016678:	4798      	blx	r3
 801667a:	682b      	ldr	r3, [r5, #0]
 801667c:	4628      	mov	r0, r5
 801667e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016680:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016684:	4718      	bx	r3
 8016686:	bf00      	nop
 8016688:	200259d4 	.word	0x200259d4

0801668c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801668c:	2300      	movs	r3, #0
 801668e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8016692:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8016696:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016698:	461a      	mov	r2, r3
 801669a:	461c      	mov	r4, r3
 801669c:	461d      	mov	r5, r3
 801669e:	459c      	cmp	ip, r3
 80166a0:	dd1a      	ble.n	80166d8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80166a2:	18c6      	adds	r6, r0, r3
 80166a4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80166a8:	b16e      	cbz	r6, 80166c6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80166aa:	429a      	cmp	r2, r3
 80166ac:	d008      	beq.n	80166c0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80166ae:	fa1f fe82 	uxth.w	lr, r2
 80166b2:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80166b6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80166ba:	1887      	adds	r7, r0, r2
 80166bc:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80166c0:	3201      	adds	r2, #1
 80166c2:	3301      	adds	r3, #1
 80166c4:	e7eb      	b.n	801669e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80166c6:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80166ca:	4299      	cmp	r1, r3
 80166cc:	bfa8      	it	ge
 80166ce:	3501      	addge	r5, #1
 80166d0:	429e      	cmp	r6, r3
 80166d2:	bfc8      	it	gt
 80166d4:	3401      	addgt	r4, #1
 80166d6:	e7f4      	b.n	80166c2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80166d8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80166dc:	1b49      	subs	r1, r1, r5
 80166de:	1b1b      	subs	r3, r3, r4
 80166e0:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80166e4:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80166e8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80166ec:	4293      	cmp	r3, r2
 80166ee:	dd03      	ble.n	80166f8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80166f0:	3b01      	subs	r3, #1
 80166f2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80166f6:	e7f7      	b.n	80166e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80166f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080166fc <_ZN8touchgfx11Application15handleTickEventEv>:
 80166fc:	b570      	push	{r4, r5, r6, lr}
 80166fe:	4d16      	ldr	r5, [pc, #88]	; (8016758 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8016700:	4604      	mov	r4, r0
 8016702:	6828      	ldr	r0, [r5, #0]
 8016704:	b140      	cbz	r0, 8016718 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016706:	7a03      	ldrb	r3, [r0, #8]
 8016708:	b933      	cbnz	r3, 8016718 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801670a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801670e:	6803      	ldr	r3, [r0, #0]
 8016710:	689b      	ldr	r3, [r3, #8]
 8016712:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016716:	4718      	bx	r3
 8016718:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 801671c:	4e0f      	ldr	r6, [pc, #60]	; (801675c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801671e:	b973      	cbnz	r3, 801673e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016720:	b168      	cbz	r0, 801673e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016722:	7a03      	ldrb	r3, [r0, #8]
 8016724:	b15b      	cbz	r3, 801673e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016726:	6830      	ldr	r0, [r6, #0]
 8016728:	b110      	cbz	r0, 8016730 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801672a:	6803      	ldr	r3, [r0, #0]
 801672c:	691b      	ldr	r3, [r3, #16]
 801672e:	4798      	blx	r3
 8016730:	6828      	ldr	r0, [r5, #0]
 8016732:	6803      	ldr	r3, [r0, #0]
 8016734:	68db      	ldr	r3, [r3, #12]
 8016736:	4798      	blx	r3
 8016738:	2301      	movs	r3, #1
 801673a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801673e:	3404      	adds	r4, #4
 8016740:	4620      	mov	r0, r4
 8016742:	f7ff ff45 	bl	80165d0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8016746:	4620      	mov	r0, r4
 8016748:	f7ff ffa0 	bl	801668c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801674c:	6830      	ldr	r0, [r6, #0]
 801674e:	b110      	cbz	r0, 8016756 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8016750:	6803      	ldr	r3, [r0, #0]
 8016752:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016754:	e7dd      	b.n	8016712 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8016756:	bd70      	pop	{r4, r5, r6, pc}
 8016758:	200259d8 	.word	0x200259d8
 801675c:	200259d4 	.word	0x200259d4

08016760 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8016760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016762:	2300      	movs	r3, #0
 8016764:	4604      	mov	r4, r0
 8016766:	460d      	mov	r5, r1
 8016768:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 801676c:	4618      	mov	r0, r3
 801676e:	b29a      	uxth	r2, r3
 8016770:	4291      	cmp	r1, r2
 8016772:	d911      	bls.n	8016798 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016774:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8016778:	18e6      	adds	r6, r4, r3
 801677a:	42af      	cmp	r7, r5
 801677c:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8016780:	d105      	bne.n	801678e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8016782:	2aff      	cmp	r2, #255	; 0xff
 8016784:	d002      	beq.n	801678c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016786:	3201      	adds	r2, #1
 8016788:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 801678c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801678e:	2a00      	cmp	r2, #0
 8016790:	bf08      	it	eq
 8016792:	2001      	moveq	r0, #1
 8016794:	3301      	adds	r3, #1
 8016796:	e7ea      	b.n	801676e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8016798:	b120      	cbz	r0, 80167a4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801679a:	2920      	cmp	r1, #32
 801679c:	d102      	bne.n	80167a4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801679e:	4620      	mov	r0, r4
 80167a0:	f7ff ff74 	bl	801668c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80167a4:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 80167a8:	2b1f      	cmp	r3, #31
 80167aa:	d8ef      	bhi.n	801678c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80167ac:	18e2      	adds	r2, r4, r3
 80167ae:	2101      	movs	r1, #1
 80167b0:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 80167b4:	185a      	adds	r2, r3, r1
 80167b6:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 80167ba:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80167be:	e7e5      	b.n	801678c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080167c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80167c0:	4603      	mov	r3, r0
 80167c2:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80167c6:	2200      	movs	r2, #0
 80167c8:	801a      	strh	r2, [r3, #0]
 80167ca:	805a      	strh	r2, [r3, #2]
 80167cc:	809a      	strh	r2, [r3, #4]
 80167ce:	80da      	strh	r2, [r3, #6]
 80167d0:	3308      	adds	r3, #8
 80167d2:	428b      	cmp	r3, r1
 80167d4:	d1f8      	bne.n	80167c8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80167d6:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80167da:	4770      	bx	lr

080167dc <_ZN8touchgfx11ApplicationC1Ev>:
 80167dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80167de:	4606      	mov	r6, r0
 80167e0:	4b1c      	ldr	r3, [pc, #112]	; (8016854 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80167e2:	f846 3b04 	str.w	r3, [r6], #4
 80167e6:	4604      	mov	r4, r0
 80167e8:	2500      	movs	r5, #0
 80167ea:	22a8      	movs	r2, #168	; 0xa8
 80167ec:	2100      	movs	r1, #0
 80167ee:	4630      	mov	r0, r6
 80167f0:	f012 fd3f 	bl	8029272 <memset>
 80167f4:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80167f8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80167fc:	f7ff ffe0 	bl	80167c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016800:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016804:	f7ff ffdc 	bl	80167c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016808:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 801680c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8016810:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016814:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8016818:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 801681c:	490e      	ldr	r1, [pc, #56]	; (8016858 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801681e:	480f      	ldr	r0, [pc, #60]	; (801685c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8016820:	4f0f      	ldr	r7, [pc, #60]	; (8016860 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8016822:	f010 faf5 	bl	8026e10 <CRC_Lock>
 8016826:	4b0f      	ldr	r3, [pc, #60]	; (8016864 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016828:	b158      	cbz	r0, 8016842 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801682a:	801d      	strh	r5, [r3, #0]
 801682c:	4a0e      	ldr	r2, [pc, #56]	; (8016868 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801682e:	2300      	movs	r3, #0
 8016830:	6013      	str	r3, [r2, #0]
 8016832:	4a0e      	ldr	r2, [pc, #56]	; (801686c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016834:	603b      	str	r3, [r7, #0]
 8016836:	4630      	mov	r0, r6
 8016838:	6013      	str	r3, [r2, #0]
 801683a:	f7ff ff01 	bl	8016640 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801683e:	4620      	mov	r0, r4
 8016840:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016842:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016846:	2002      	movs	r0, #2
 8016848:	801a      	strh	r2, [r3, #0]
 801684a:	6038      	str	r0, [r7, #0]
 801684c:	f001 fa52 	bl	8017cf4 <_ZN8touchgfx6Screen4drawEv>
 8016850:	e7ec      	b.n	801682c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8016852:	bf00      	nop
 8016854:	0802bfc0 	.word	0x0802bfc0
 8016858:	b5e8b5cd 	.word	0xb5e8b5cd
 801685c:	f407a5c2 	.word	0xf407a5c2
 8016860:	200259d4 	.word	0x200259d4
 8016864:	200002a4 	.word	0x200002a4
 8016868:	200259e4 	.word	0x200259e4
 801686c:	200259d8 	.word	0x200259d8

08016870 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016870:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016874:	3b01      	subs	r3, #1
 8016876:	b29b      	uxth	r3, r3
 8016878:	428b      	cmp	r3, r1
 801687a:	b510      	push	{r4, lr}
 801687c:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8016880:	d908      	bls.n	8016894 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016882:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016886:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801688a:	681a      	ldr	r2, [r3, #0]
 801688c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016890:	685a      	ldr	r2, [r3, #4]
 8016892:	6062      	str	r2, [r4, #4]
 8016894:	bd10      	pop	{r4, pc}
	...

08016898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801689c:	4b8f      	ldr	r3, [pc, #572]	; (8016adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801689e:	b08f      	sub	sp, #60	; 0x3c
 80168a0:	ac0a      	add	r4, sp, #40	; 0x28
 80168a2:	e884 0006 	stmia.w	r4, {r1, r2}
 80168a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80168aa:	4b8d      	ldr	r3, [pc, #564]	; (8016ae0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80168ac:	4683      	mov	fp, r0
 80168ae:	f9b3 1000 	ldrsh.w	r1, [r3]
 80168b2:	4620      	mov	r0, r4
 80168b4:	f7ff fdca 	bl	801644c <_ZN8touchgfx4Rect10restrictToEss>
 80168b8:	4620      	mov	r0, r4
 80168ba:	f7fc fbe8 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 80168be:	2800      	cmp	r0, #0
 80168c0:	d16a      	bne.n	8016998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80168c2:	9403      	str	r4, [sp, #12]
 80168c4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80168c8:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80168cc:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80168d0:	35a4      	adds	r5, #164	; 0xa4
 80168d2:	9301      	str	r3, [sp, #4]
 80168d4:	b15c      	cbz	r4, 80168ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80168d6:	4629      	mov	r1, r5
 80168d8:	9803      	ldr	r0, [sp, #12]
 80168da:	f7ff fe07 	bl	80164ec <_ZNK8touchgfx4Rect8includesERKS0_>
 80168de:	3c01      	subs	r4, #1
 80168e0:	b118      	cbz	r0, 80168ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80168e2:	b2a1      	uxth	r1, r4
 80168e4:	9801      	ldr	r0, [sp, #4]
 80168e6:	f7ff ffc3 	bl	8016870 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80168ea:	3d08      	subs	r5, #8
 80168ec:	e7f2      	b.n	80168d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80168ee:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80168f2:	f8cd a010 	str.w	sl, [sp, #16]
 80168f6:	f10a 33ff 	add.w	r3, sl, #4294967295
 80168fa:	9302      	str	r3, [sp, #8]
 80168fc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8016900:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8016904:	9306      	str	r3, [sp, #24]
 8016906:	445c      	add	r4, fp
 8016908:	2500      	movs	r5, #0
 801690a:	4626      	mov	r6, r4
 801690c:	f8cd a014 	str.w	sl, [sp, #20]
 8016910:	462f      	mov	r7, r5
 8016912:	9b05      	ldr	r3, [sp, #20]
 8016914:	2b00      	cmp	r3, #0
 8016916:	d073      	beq.n	8016a00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016918:	9903      	ldr	r1, [sp, #12]
 801691a:	4630      	mov	r0, r6
 801691c:	f7ff fd74 	bl	8016408 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016920:	b350      	cbz	r0, 8016978 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016922:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016926:	f9b6 c000 	ldrsh.w	ip, [r6]
 801692a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801692e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8016932:	45e6      	cmp	lr, ip
 8016934:	db33      	blt.n	801699e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016936:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801693a:	88b3      	ldrh	r3, [r6, #4]
 801693c:	4472      	add	r2, lr
 801693e:	4463      	add	r3, ip
 8016940:	b212      	sxth	r2, r2
 8016942:	b21b      	sxth	r3, r3
 8016944:	429a      	cmp	r2, r3
 8016946:	dc2a      	bgt.n	801699e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016948:	88f3      	ldrh	r3, [r6, #6]
 801694a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801694e:	fa1f f289 	uxth.w	r2, r9
 8016952:	4413      	add	r3, r2
 8016954:	b29b      	uxth	r3, r3
 8016956:	45c8      	cmp	r8, r9
 8016958:	fa1f fc88 	uxth.w	ip, r8
 801695c:	fa0f fe83 	sxth.w	lr, r3
 8016960:	db0f      	blt.n	8016982 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8016962:	eba3 030c 	sub.w	r3, r3, ip
 8016966:	1ac9      	subs	r1, r1, r3
 8016968:	b209      	sxth	r1, r1
 801696a:	2900      	cmp	r1, #0
 801696c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016970:	dd12      	ble.n	8016998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016972:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016976:	4605      	mov	r5, r0
 8016978:	9b05      	ldr	r3, [sp, #20]
 801697a:	3b01      	subs	r3, #1
 801697c:	9305      	str	r3, [sp, #20]
 801697e:	3e08      	subs	r6, #8
 8016980:	e7c7      	b.n	8016912 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8016982:	4461      	add	r1, ip
 8016984:	b209      	sxth	r1, r1
 8016986:	4571      	cmp	r1, lr
 8016988:	dc38      	bgt.n	80169fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801698a:	eba2 020c 	sub.w	r2, r2, ip
 801698e:	b212      	sxth	r2, r2
 8016990:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016994:	2a00      	cmp	r2, #0
 8016996:	dcee      	bgt.n	8016976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016998:	b00f      	add	sp, #60	; 0x3c
 801699a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801699e:	45c8      	cmp	r8, r9
 80169a0:	db2c      	blt.n	80169fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80169a2:	88f3      	ldrh	r3, [r6, #6]
 80169a4:	4499      	add	r9, r3
 80169a6:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80169aa:	4498      	add	r8, r3
 80169ac:	fa0f f989 	sxth.w	r9, r9
 80169b0:	fa0f f888 	sxth.w	r8, r8
 80169b4:	45c1      	cmp	r9, r8
 80169b6:	db21      	blt.n	80169fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80169b8:	88b3      	ldrh	r3, [r6, #4]
 80169ba:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80169be:	fa1f f28c 	uxth.w	r2, ip
 80169c2:	4413      	add	r3, r2
 80169c4:	b29b      	uxth	r3, r3
 80169c6:	45e6      	cmp	lr, ip
 80169c8:	fa1f f88e 	uxth.w	r8, lr
 80169cc:	fa0f f983 	sxth.w	r9, r3
 80169d0:	db0a      	blt.n	80169e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80169d2:	eba3 0308 	sub.w	r3, r3, r8
 80169d6:	1ac9      	subs	r1, r1, r3
 80169d8:	b209      	sxth	r1, r1
 80169da:	2900      	cmp	r1, #0
 80169dc:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80169e0:	ddda      	ble.n	8016998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80169e2:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80169e6:	e7c6      	b.n	8016976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80169e8:	4441      	add	r1, r8
 80169ea:	b209      	sxth	r1, r1
 80169ec:	4549      	cmp	r1, r9
 80169ee:	dc05      	bgt.n	80169fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80169f0:	eba2 0208 	sub.w	r2, r2, r8
 80169f4:	b212      	sxth	r2, r2
 80169f6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80169fa:	e7cb      	b.n	8016994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80169fc:	4607      	mov	r7, r0
 80169fe:	e7bb      	b.n	8016978 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016a00:	2d00      	cmp	r5, #0
 8016a02:	d181      	bne.n	8016908 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016a04:	2f00      	cmp	r7, #0
 8016a06:	f000 81dd 	beq.w	8016dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016a0a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8016a0e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8016a12:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016a16:	b2b3      	uxth	r3, r6
 8016a18:	9305      	str	r3, [sp, #20]
 8016a1a:	9a05      	ldr	r2, [sp, #20]
 8016a1c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016a20:	4413      	add	r3, r2
 8016a22:	b2ba      	uxth	r2, r7
 8016a24:	4492      	add	sl, r2
 8016a26:	b29b      	uxth	r3, r3
 8016a28:	fa1f fa8a 	uxth.w	sl, sl
 8016a2c:	fa0f f883 	sxth.w	r8, r3
 8016a30:	fa0f f98a 	sxth.w	r9, sl
 8016a34:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016a38:	9b04      	ldr	r3, [sp, #16]
 8016a3a:	2b00      	cmp	r3, #0
 8016a3c:	d052      	beq.n	8016ae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8016a3e:	9903      	ldr	r1, [sp, #12]
 8016a40:	4620      	mov	r0, r4
 8016a42:	f7ff fce1 	bl	8016408 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016a46:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016a4a:	b1c0      	cbz	r0, 8016a7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016a4c:	f9b4 e000 	ldrsh.w	lr, [r4]
 8016a50:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016a54:	4576      	cmp	r6, lr
 8016a56:	dc22      	bgt.n	8016a9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016a58:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016a5c:	44f4      	add	ip, lr
 8016a5e:	fa0f fc8c 	sxth.w	ip, ip
 8016a62:	45e0      	cmp	r8, ip
 8016a64:	db1b      	blt.n	8016a9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016a66:	428f      	cmp	r7, r1
 8016a68:	fa1f fc81 	uxth.w	ip, r1
 8016a6c:	88e1      	ldrh	r1, [r4, #6]
 8016a6e:	dc0d      	bgt.n	8016a8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016a70:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016a74:	eba1 010c 	sub.w	r1, r1, ip
 8016a78:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016a7c:	80e1      	strh	r1, [r4, #6]
 8016a7e:	4628      	mov	r0, r5
 8016a80:	9904      	ldr	r1, [sp, #16]
 8016a82:	3901      	subs	r1, #1
 8016a84:	9104      	str	r1, [sp, #16]
 8016a86:	3c08      	subs	r4, #8
 8016a88:	4605      	mov	r5, r0
 8016a8a:	e7d3      	b.n	8016a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016a8c:	4461      	add	r1, ip
 8016a8e:	b209      	sxth	r1, r1
 8016a90:	4549      	cmp	r1, r9
 8016a92:	dcf5      	bgt.n	8016a80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016a94:	eba2 0c0c 	sub.w	ip, r2, ip
 8016a98:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016a9c:	e7ef      	b.n	8016a7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016a9e:	428f      	cmp	r7, r1
 8016aa0:	dcee      	bgt.n	8016a80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016aa2:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016aa6:	4461      	add	r1, ip
 8016aa8:	b209      	sxth	r1, r1
 8016aaa:	4589      	cmp	r9, r1
 8016aac:	dbe8      	blt.n	8016a80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016aae:	4576      	cmp	r6, lr
 8016ab0:	fa1f fc8e 	uxth.w	ip, lr
 8016ab4:	88a1      	ldrh	r1, [r4, #4]
 8016ab6:	dc07      	bgt.n	8016ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016ab8:	eba3 0c0c 	sub.w	ip, r3, ip
 8016abc:	eba1 010c 	sub.w	r1, r1, ip
 8016ac0:	f8a4 8000 	strh.w	r8, [r4]
 8016ac4:	80a1      	strh	r1, [r4, #4]
 8016ac6:	e7da      	b.n	8016a7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016ac8:	4461      	add	r1, ip
 8016aca:	b209      	sxth	r1, r1
 8016acc:	4588      	cmp	r8, r1
 8016ace:	dbd7      	blt.n	8016a80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016ad0:	9905      	ldr	r1, [sp, #20]
 8016ad2:	eba1 0c0c 	sub.w	ip, r1, ip
 8016ad6:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016ada:	e7d0      	b.n	8016a7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016adc:	2002598e 	.word	0x2002598e
 8016ae0:	2002598c 	.word	0x2002598c
 8016ae4:	2d00      	cmp	r5, #0
 8016ae6:	f000 816d 	beq.w	8016dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016aea:	9b06      	ldr	r3, [sp, #24]
 8016aec:	445b      	add	r3, fp
 8016aee:	461c      	mov	r4, r3
 8016af0:	9b02      	ldr	r3, [sp, #8]
 8016af2:	3301      	adds	r3, #1
 8016af4:	f000 8166 	beq.w	8016dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016af8:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016afc:	4629      	mov	r1, r5
 8016afe:	9803      	ldr	r0, [sp, #12]
 8016b00:	f7ff fcf4 	bl	80164ec <_ZNK8touchgfx4Rect8includesERKS0_>
 8016b04:	b120      	cbz	r0, 8016b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016b06:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016b0a:	9801      	ldr	r0, [sp, #4]
 8016b0c:	f7ff feb0 	bl	8016870 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016b10:	9903      	ldr	r1, [sp, #12]
 8016b12:	4628      	mov	r0, r5
 8016b14:	f7ff fc78 	bl	8016408 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016b18:	2800      	cmp	r0, #0
 8016b1a:	f000 809c 	beq.w	8016c56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016b1e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8016b22:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016b26:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016b2a:	9309      	str	r3, [sp, #36]	; 0x24
 8016b2c:	fa1f f189 	uxth.w	r1, r9
 8016b30:	eb01 0c03 	add.w	ip, r1, r3
 8016b34:	fa1f fa8c 	uxth.w	sl, ip
 8016b38:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016b3c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8016b40:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016b44:	b283      	uxth	r3, r0
 8016b46:	eb03 050c 	add.w	r5, r3, ip
 8016b4a:	b2ad      	uxth	r5, r5
 8016b4c:	9505      	str	r5, [sp, #20]
 8016b4e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016b52:	9504      	str	r5, [sp, #16]
 8016b54:	4548      	cmp	r0, r9
 8016b56:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016b5a:	f340 8099 	ble.w	8016c90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8016b5e:	1a5b      	subs	r3, r3, r1
 8016b60:	b29b      	uxth	r3, r3
 8016b62:	4596      	cmp	lr, r2
 8016b64:	fa0f f08a 	sxth.w	r0, sl
 8016b68:	b21e      	sxth	r6, r3
 8016b6a:	dd2e      	ble.n	8016bca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016b6c:	9f02      	ldr	r7, [sp, #8]
 8016b6e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8016b72:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016b76:	9f04      	ldr	r7, [sp, #16]
 8016b78:	1a3f      	subs	r7, r7, r0
 8016b7a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8016b7e:	fa1f fe8e 	uxth.w	lr, lr
 8016b82:	b292      	uxth	r2, r2
 8016b84:	ebae 0102 	sub.w	r1, lr, r2
 8016b88:	44a6      	add	lr, r4
 8016b8a:	4402      	add	r2, r0
 8016b8c:	b289      	uxth	r1, r1
 8016b8e:	fa0f fe8e 	sxth.w	lr, lr
 8016b92:	b212      	sxth	r2, r2
 8016b94:	b20d      	sxth	r5, r1
 8016b96:	ebae 0202 	sub.w	r2, lr, r2
 8016b9a:	436f      	muls	r7, r5
 8016b9c:	4372      	muls	r2, r6
 8016b9e:	4297      	cmp	r7, r2
 8016ba0:	db09      	blt.n	8016bb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8016ba2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016ba6:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016baa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016bae:	449c      	add	ip, r3
 8016bb0:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016bb4:	e686      	b.n	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016bb6:	4421      	add	r1, r4
 8016bb8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016bbc:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8016bc0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016bc4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016bc8:	e67c      	b.n	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016bca:	9f04      	ldr	r7, [sp, #16]
 8016bcc:	42b8      	cmp	r0, r7
 8016bce:	da27      	bge.n	8016c20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016bd0:	9902      	ldr	r1, [sp, #8]
 8016bd2:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016bd6:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016bda:	eb05 010e 	add.w	r1, r5, lr
 8016bde:	fa1f f881 	uxth.w	r8, r1
 8016be2:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016be6:	4411      	add	r1, r2
 8016be8:	eba1 0108 	sub.w	r1, r1, r8
 8016bec:	b289      	uxth	r1, r1
 8016bee:	fa0f f988 	sxth.w	r9, r8
 8016bf2:	eba2 020e 	sub.w	r2, r2, lr
 8016bf6:	fa0f f881 	sxth.w	r8, r1
 8016bfa:	1a3f      	subs	r7, r7, r0
 8016bfc:	4372      	muls	r2, r6
 8016bfe:	fb08 f707 	mul.w	r7, r8, r7
 8016c02:	42ba      	cmp	r2, r7
 8016c04:	dc06      	bgt.n	8016c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016c06:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016c0a:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8016c0e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8016c12:	e7ca      	b.n	8016baa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016c14:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016c18:	4429      	add	r1, r5
 8016c1a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016c1e:	e651      	b.n	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016c20:	9805      	ldr	r0, [sp, #20]
 8016c22:	ebaa 0000 	sub.w	r0, sl, r0
 8016c26:	b280      	uxth	r0, r0
 8016c28:	2d06      	cmp	r5, #6
 8016c2a:	fa0f fe80 	sxth.w	lr, r0
 8016c2e:	d817      	bhi.n	8016c60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8016c30:	9b04      	ldr	r3, [sp, #16]
 8016c32:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016c36:	1c6b      	adds	r3, r5, #1
 8016c38:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016c3c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8016c40:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016c44:	9b01      	ldr	r3, [sp, #4]
 8016c46:	9801      	ldr	r0, [sp, #4]
 8016c48:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016c4c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016c50:	805a      	strh	r2, [r3, #2]
 8016c52:	809e      	strh	r6, [r3, #4]
 8016c54:	80d9      	strh	r1, [r3, #6]
 8016c56:	9b02      	ldr	r3, [sp, #8]
 8016c58:	3b01      	subs	r3, #1
 8016c5a:	9302      	str	r3, [sp, #8]
 8016c5c:	3c08      	subs	r4, #8
 8016c5e:	e747      	b.n	8016af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8016c60:	9a02      	ldr	r2, [sp, #8]
 8016c62:	45b6      	cmp	lr, r6
 8016c64:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016c68:	db0d      	blt.n	8016c86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016c6a:	449c      	add	ip, r3
 8016c6c:	fa1f fc8c 	uxth.w	ip, ip
 8016c70:	445a      	add	r2, fp
 8016c72:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016c76:	448c      	add	ip, r1
 8016c78:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016c7c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8016c80:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016c84:	e61e      	b.n	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016c86:	445a      	add	r2, fp
 8016c88:	4484      	add	ip, r0
 8016c8a:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8016c8e:	e78f      	b.n	8016bb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016c90:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016c94:	fa1f f18e 	uxth.w	r1, lr
 8016c98:	eb01 0806 	add.w	r8, r1, r6
 8016c9c:	b293      	uxth	r3, r2
 8016c9e:	fa1f f888 	uxth.w	r8, r8
 8016ca2:	9306      	str	r3, [sp, #24]
 8016ca4:	fa0f f388 	sxth.w	r3, r8
 8016ca8:	9307      	str	r3, [sp, #28]
 8016caa:	9f06      	ldr	r7, [sp, #24]
 8016cac:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016cb0:	443b      	add	r3, r7
 8016cb2:	b29b      	uxth	r3, r3
 8016cb4:	4596      	cmp	lr, r2
 8016cb6:	9308      	str	r3, [sp, #32]
 8016cb8:	da24      	bge.n	8016d04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016cba:	9905      	ldr	r1, [sp, #20]
 8016cbc:	eba3 0308 	sub.w	r3, r3, r8
 8016cc0:	ebaa 0401 	sub.w	r4, sl, r1
 8016cc4:	b2a4      	uxth	r4, r4
 8016cc6:	b29b      	uxth	r3, r3
 8016cc8:	b225      	sxth	r5, r4
 8016cca:	b219      	sxth	r1, r3
 8016ccc:	eba2 020e 	sub.w	r2, r2, lr
 8016cd0:	eba9 0000 	sub.w	r0, r9, r0
 8016cd4:	436a      	muls	r2, r5
 8016cd6:	4348      	muls	r0, r1
 8016cd8:	4282      	cmp	r2, r0
 8016cda:	9a02      	ldr	r2, [sp, #8]
 8016cdc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016ce0:	445a      	add	r2, fp
 8016ce2:	dc06      	bgt.n	8016cf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016ce4:	9b07      	ldr	r3, [sp, #28]
 8016ce6:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016cea:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8016cee:	44a4      	add	ip, r4
 8016cf0:	e75e      	b.n	8016bb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016cf2:	9904      	ldr	r1, [sp, #16]
 8016cf4:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016cf8:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016cfc:	4433      	add	r3, r6
 8016cfe:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016d02:	e5df      	b.n	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016d04:	9f06      	ldr	r7, [sp, #24]
 8016d06:	9b04      	ldr	r3, [sp, #16]
 8016d08:	1bc9      	subs	r1, r1, r7
 8016d0a:	fa0f f78a 	sxth.w	r7, sl
 8016d0e:	b289      	uxth	r1, r1
 8016d10:	429f      	cmp	r7, r3
 8016d12:	fa0f fe81 	sxth.w	lr, r1
 8016d16:	dd23      	ble.n	8016d60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016d18:	9a05      	ldr	r2, [sp, #20]
 8016d1a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016d1e:	9d07      	ldr	r5, [sp, #28]
 8016d20:	ebaa 0202 	sub.w	r2, sl, r2
 8016d24:	b292      	uxth	r2, r2
 8016d26:	eba5 0a03 	sub.w	sl, r5, r3
 8016d2a:	b214      	sxth	r4, r2
 8016d2c:	eba9 0000 	sub.w	r0, r9, r0
 8016d30:	9b02      	ldr	r3, [sp, #8]
 8016d32:	fb0e f000 	mul.w	r0, lr, r0
 8016d36:	fb04 fa0a 	mul.w	sl, r4, sl
 8016d3a:	00db      	lsls	r3, r3, #3
 8016d3c:	4550      	cmp	r0, sl
 8016d3e:	445b      	add	r3, fp
 8016d40:	db03      	blt.n	8016d4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8016d42:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016d46:	4494      	add	ip, r2
 8016d48:	e732      	b.n	8016bb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016d4a:	9a04      	ldr	r2, [sp, #16]
 8016d4c:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8016d50:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016d54:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016d58:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016d5c:	4431      	add	r1, r6
 8016d5e:	e75c      	b.n	8016c1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8016d60:	9b08      	ldr	r3, [sp, #32]
 8016d62:	eba3 0308 	sub.w	r3, r3, r8
 8016d66:	b29b      	uxth	r3, r3
 8016d68:	2d06      	cmp	r5, #6
 8016d6a:	b218      	sxth	r0, r3
 8016d6c:	d813      	bhi.n	8016d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8016d6e:	9b07      	ldr	r3, [sp, #28]
 8016d70:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016d74:	1c6b      	adds	r3, r5, #1
 8016d76:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016d7a:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016d7e:	9b01      	ldr	r3, [sp, #4]
 8016d80:	9901      	ldr	r1, [sp, #4]
 8016d82:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016d86:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016d8a:	805a      	strh	r2, [r3, #2]
 8016d8c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016d8e:	809a      	strh	r2, [r3, #4]
 8016d90:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016d94:	e75f      	b.n	8016c56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016d96:	9c02      	ldr	r4, [sp, #8]
 8016d98:	4570      	cmp	r0, lr
 8016d9a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016d9e:	db0d      	blt.n	8016dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8016da0:	4431      	add	r1, r6
 8016da2:	9b06      	ldr	r3, [sp, #24]
 8016da4:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016da8:	b289      	uxth	r1, r1
 8016daa:	445c      	add	r4, fp
 8016dac:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016db0:	4419      	add	r1, r3
 8016db2:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8016db6:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8016dba:	e583      	b.n	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016dbc:	445c      	add	r4, fp
 8016dbe:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8016dc2:	e79b      	b.n	8016cfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016dc4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016dc8:	1e65      	subs	r5, r4, #1
 8016dca:	b2ad      	uxth	r5, r5
 8016dcc:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8016dd0:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016dd4:	42b5      	cmp	r5, r6
 8016dd6:	d044      	beq.n	8016e62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016dd8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016ddc:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8016de0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016de4:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8016de8:	4282      	cmp	r2, r0
 8016dea:	d11f      	bne.n	8016e2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016dec:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8016df0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016df4:	459c      	cmp	ip, r3
 8016df6:	d119      	bne.n	8016e2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016df8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016dfc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016e00:	19d8      	adds	r0, r3, r7
 8016e02:	b200      	sxth	r0, r0
 8016e04:	4288      	cmp	r0, r1
 8016e06:	d109      	bne.n	8016e1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016e08:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016e0c:	4413      	add	r3, r2
 8016e0e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016e12:	4629      	mov	r1, r5
 8016e14:	9801      	ldr	r0, [sp, #4]
 8016e16:	f7ff fd2b 	bl	8016870 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016e1a:	e003      	b.n	8016e24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016e1c:	4411      	add	r1, r2
 8016e1e:	b209      	sxth	r1, r1
 8016e20:	42b9      	cmp	r1, r7
 8016e22:	d0f3      	beq.n	8016e0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016e24:	3d01      	subs	r5, #1
 8016e26:	b2ad      	uxth	r5, r5
 8016e28:	3c08      	subs	r4, #8
 8016e2a:	e7d3      	b.n	8016dd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016e2c:	42b9      	cmp	r1, r7
 8016e2e:	d1f9      	bne.n	8016e24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016e30:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8016e34:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016e38:	4299      	cmp	r1, r3
 8016e3a:	d1f3      	bne.n	8016e24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016e3c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016e40:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016e44:	181f      	adds	r7, r3, r0
 8016e46:	b23f      	sxth	r7, r7
 8016e48:	42ba      	cmp	r2, r7
 8016e4a:	d105      	bne.n	8016e58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016e4c:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8016e50:	440b      	add	r3, r1
 8016e52:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016e56:	e7dc      	b.n	8016e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016e58:	440a      	add	r2, r1
 8016e5a:	b212      	sxth	r2, r2
 8016e5c:	4290      	cmp	r0, r2
 8016e5e:	d1e1      	bne.n	8016e24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016e60:	e7f6      	b.n	8016e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8016e62:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016e66:	2e07      	cmp	r6, #7
 8016e68:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016e6c:	d812      	bhi.n	8016e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8016e6e:	1c75      	adds	r5, r6, #1
 8016e70:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016e74:	9d01      	ldr	r5, [sp, #4]
 8016e76:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016e7a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8016e7e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016e82:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016e86:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016e8a:	442c      	add	r4, r5
 8016e8c:	8061      	strh	r1, [r4, #2]
 8016e8e:	80a2      	strh	r2, [r4, #4]
 8016e90:	80e3      	strh	r3, [r4, #6]
 8016e92:	e581      	b.n	8016998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016e94:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016e98:	3e01      	subs	r6, #1
 8016e9a:	445c      	add	r4, fp
 8016e9c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8016ea0:	f04f 37ff 	mov.w	r7, #4294967295
 8016ea4:	2500      	movs	r5, #0
 8016ea6:	9305      	str	r3, [sp, #20]
 8016ea8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016eac:	9302      	str	r3, [sp, #8]
 8016eae:	1e72      	subs	r2, r6, #1
 8016eb0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016eb4:	9304      	str	r3, [sp, #16]
 8016eb6:	4691      	mov	r9, r2
 8016eb8:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8016ebc:	f1b9 3fff 	cmp.w	r9, #4294967295
 8016ec0:	bf14      	ite	ne
 8016ec2:	9905      	ldrne	r1, [sp, #20]
 8016ec4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016ec8:	6818      	ldr	r0, [r3, #0]
 8016eca:	9207      	str	r2, [sp, #28]
 8016ecc:	bf18      	it	ne
 8016ece:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8016ed2:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016ed6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016eda:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8016ede:	9306      	str	r3, [sp, #24]
 8016ee0:	fb18 f801 	smulbb	r8, r8, r1
 8016ee4:	6859      	ldr	r1, [r3, #4]
 8016ee6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016eea:	4671      	mov	r1, lr
 8016eec:	a80c      	add	r0, sp, #48	; 0x30
 8016eee:	f7ff fb23 	bl	8016538 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016ef2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016ef6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016efa:	9b04      	ldr	r3, [sp, #16]
 8016efc:	9a02      	ldr	r2, [sp, #8]
 8016efe:	fb10 f001 	smulbb	r0, r0, r1
 8016f02:	fb02 8803 	mla	r8, r2, r3, r8
 8016f06:	eba0 0108 	sub.w	r1, r0, r8
 8016f0a:	f04f 0c08 	mov.w	ip, #8
 8016f0e:	fb90 f0fc 	sdiv	r0, r0, ip
 8016f12:	4288      	cmp	r0, r1
 8016f14:	dc20      	bgt.n	8016f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016f16:	4551      	cmp	r1, sl
 8016f18:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016f1c:	da03      	bge.n	8016f26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8016f1e:	b1d9      	cbz	r1, 8016f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016f20:	468a      	mov	sl, r1
 8016f22:	464f      	mov	r7, r9
 8016f24:	4635      	mov	r5, r6
 8016f26:	f109 39ff 	add.w	r9, r9, #4294967295
 8016f2a:	f119 0f02 	cmn.w	r9, #2
 8016f2e:	d1c5      	bne.n	8016ebc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8016f30:	4616      	mov	r6, r2
 8016f32:	3201      	adds	r2, #1
 8016f34:	f1a4 0408 	sub.w	r4, r4, #8
 8016f38:	d1b6      	bne.n	8016ea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8016f3a:	9b01      	ldr	r3, [sp, #4]
 8016f3c:	b2ac      	uxth	r4, r5
 8016f3e:	00ed      	lsls	r5, r5, #3
 8016f40:	1958      	adds	r0, r3, r5
 8016f42:	1c7b      	adds	r3, r7, #1
 8016f44:	d10b      	bne.n	8016f5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8016f46:	4601      	mov	r1, r0
 8016f48:	9803      	ldr	r0, [sp, #12]
 8016f4a:	f7ff faf5 	bl	8016538 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016f4e:	4621      	mov	r1, r4
 8016f50:	9801      	ldr	r0, [sp, #4]
 8016f52:	f7ff fc8d 	bl	8016870 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016f56:	e4b5      	b.n	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016f58:	464f      	mov	r7, r9
 8016f5a:	4635      	mov	r5, r6
 8016f5c:	e7ed      	b.n	8016f3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8016f5e:	9b01      	ldr	r3, [sp, #4]
 8016f60:	00ff      	lsls	r7, r7, #3
 8016f62:	19d9      	adds	r1, r3, r7
 8016f64:	f7ff fae8 	bl	8016538 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016f68:	9b03      	ldr	r3, [sp, #12]
 8016f6a:	cb03      	ldmia	r3!, {r0, r1}
 8016f6c:	445f      	add	r7, fp
 8016f6e:	445d      	add	r5, fp
 8016f70:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016f74:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8016f78:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016f7c:	9b03      	ldr	r3, [sp, #12]
 8016f7e:	6869      	ldr	r1, [r5, #4]
 8016f80:	c303      	stmia	r3!, {r0, r1}
 8016f82:	e7e4      	b.n	8016f4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016f84 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016f84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f88:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016f8c:	b09b      	sub	sp, #108	; 0x6c
 8016f8e:	4604      	mov	r4, r0
 8016f90:	4630      	mov	r0, r6
 8016f92:	f7fc f87c 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 8016f96:	4605      	mov	r5, r0
 8016f98:	b948      	cbnz	r0, 8016fae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8016f9a:	6823      	ldr	r3, [r4, #0]
 8016f9c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016fa0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016fa2:	4620      	mov	r0, r4
 8016fa4:	4798      	blx	r3
 8016fa6:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8016faa:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8016fae:	4bc6      	ldr	r3, [pc, #792]	; (80172c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8016fb0:	681b      	ldr	r3, [r3, #0]
 8016fb2:	2b00      	cmp	r3, #0
 8016fb4:	d03f      	beq.n	8017036 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016fb6:	4dc5      	ldr	r5, [pc, #788]	; (80172cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016fb8:	4628      	mov	r0, r5
 8016fba:	f7fc f868 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 8016fbe:	4606      	mov	r6, r0
 8016fc0:	2800      	cmp	r0, #0
 8016fc2:	d138      	bne.n	8017036 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016fc4:	4628      	mov	r0, r5
 8016fc6:	f7ff f955 	bl	8016274 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016fca:	6823      	ldr	r3, [r4, #0]
 8016fcc:	6829      	ldr	r1, [r5, #0]
 8016fce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016fd0:	686a      	ldr	r2, [r5, #4]
 8016fd2:	4620      	mov	r0, r4
 8016fd4:	4798      	blx	r3
 8016fd6:	802e      	strh	r6, [r5, #0]
 8016fd8:	806e      	strh	r6, [r5, #2]
 8016fda:	80ae      	strh	r6, [r5, #4]
 8016fdc:	80ee      	strh	r6, [r5, #6]
 8016fde:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8016fe2:	4dbb      	ldr	r5, [pc, #748]	; (80172d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016fe4:	4640      	mov	r0, r8
 8016fe6:	f7ff fbeb 	bl	80167c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016fea:	882e      	ldrh	r6, [r5, #0]
 8016fec:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016ff0:	4633      	mov	r3, r6
 8016ff2:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016ff6:	42bb      	cmp	r3, r7
 8016ff8:	d224      	bcs.n	8017044 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016ffa:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8016ffe:	2907      	cmp	r1, #7
 8017000:	d816      	bhi.n	8017030 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8017002:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017006:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801700a:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801700e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8017012:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8017016:	1c4a      	adds	r2, r1, #1
 8017018:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 801701c:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8017020:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8017024:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017028:	f8a2 e004 	strh.w	lr, [r2, #4]
 801702c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8017030:	3301      	adds	r3, #1
 8017032:	b29b      	uxth	r3, r3
 8017034:	e7df      	b.n	8016ff6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017036:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801703a:	2b00      	cmp	r3, #0
 801703c:	d1cf      	bne.n	8016fde <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801703e:	b01b      	add	sp, #108	; 0x6c
 8017040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017044:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8017048:	42b3      	cmp	r3, r6
 801704a:	d90c      	bls.n	8017066 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 801704c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8017050:	6822      	ldr	r2, [r4, #0]
 8017052:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8017056:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8017058:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 801705c:	4620      	mov	r0, r4
 801705e:	3601      	adds	r6, #1
 8017060:	47b8      	blx	r7
 8017062:	b2b6      	uxth	r6, r6
 8017064:	e7ee      	b.n	8017044 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017066:	4a9b      	ldr	r2, [pc, #620]	; (80172d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017068:	6813      	ldr	r3, [r2, #0]
 801706a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801706e:	2b01      	cmp	r3, #1
 8017070:	4691      	mov	r9, r2
 8017072:	f040 80e2 	bne.w	801723a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8017076:	8829      	ldrh	r1, [r5, #0]
 8017078:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801707c:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8017080:	33ae      	adds	r3, #174	; 0xae
 8017082:	2600      	movs	r6, #0
 8017084:	428f      	cmp	r7, r1
 8017086:	f103 0308 	add.w	r3, r3, #8
 801708a:	dd0a      	ble.n	80170a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 801708c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8017090:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8017094:	4402      	add	r2, r0
 8017096:	b212      	sxth	r2, r2
 8017098:	4296      	cmp	r6, r2
 801709a:	bfb8      	it	lt
 801709c:	4616      	movlt	r6, r2
 801709e:	3101      	adds	r1, #1
 80170a0:	e7f0      	b.n	8017084 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80170a2:	4b8d      	ldr	r3, [pc, #564]	; (80172d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80170a4:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80172d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80170a8:	881b      	ldrh	r3, [r3, #0]
 80170aa:	2b0f      	cmp	r3, #15
 80170ac:	bf88      	it	hi
 80170ae:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80170b2:	f04f 0300 	mov.w	r3, #0
 80170b6:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80170ba:	bf98      	it	ls
 80170bc:	f04f 0b01 	movls.w	fp, #1
 80170c0:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80170c4:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80170c8:	4b82      	ldr	r3, [pc, #520]	; (80172d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80170ca:	4438      	add	r0, r7
 80170cc:	b207      	sxth	r7, r0
 80170ce:	6818      	ldr	r0, [r3, #0]
 80170d0:	42b7      	cmp	r7, r6
 80170d2:	6803      	ldr	r3, [r0, #0]
 80170d4:	f280 8083 	bge.w	80171de <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80170d8:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80170dc:	4798      	blx	r3
 80170de:	eb07 030b 	add.w	r3, r7, fp
 80170e2:	4298      	cmp	r0, r3
 80170e4:	da07      	bge.n	80170f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80170e6:	42b0      	cmp	r0, r6
 80170e8:	da05      	bge.n	80170f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80170ea:	4287      	cmp	r7, r0
 80170ec:	dd6c      	ble.n	80171c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80170ee:	2f00      	cmp	r7, #0
 80170f0:	dd6a      	ble.n	80171c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80170f2:	4630      	mov	r0, r6
 80170f4:	e004      	b.n	8017100 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80170f6:	4287      	cmp	r7, r0
 80170f8:	dcfb      	bgt.n	80170f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80170fa:	42b0      	cmp	r0, r6
 80170fc:	bfa8      	it	ge
 80170fe:	4630      	movge	r0, r6
 8017100:	4b76      	ldr	r3, [pc, #472]	; (80172dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8017102:	f8ad 7016 	strh.w	r7, [sp, #22]
 8017106:	1bc0      	subs	r0, r0, r7
 8017108:	f9b3 3000 	ldrsh.w	r3, [r3]
 801710c:	882f      	ldrh	r7, [r5, #0]
 801710e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017112:	2200      	movs	r2, #0
 8017114:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017118:	f8ad 001a 	strh.w	r0, [sp, #26]
 801711c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017120:	42bb      	cmp	r3, r7
 8017122:	d9cd      	bls.n	80170c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017124:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017128:	ab07      	add	r3, sp, #28
 801712a:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801712e:	6851      	ldr	r1, [r2, #4]
 8017130:	c303      	stmia	r3!, {r0, r1}
 8017132:	a905      	add	r1, sp, #20
 8017134:	a807      	add	r0, sp, #28
 8017136:	f7ff f967 	bl	8016408 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801713a:	2800      	cmp	r0, #0
 801713c:	d04c      	beq.n	80171d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801713e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8017142:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8017146:	f8bd a020 	ldrh.w	sl, [sp, #32]
 801714a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801714e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017152:	9302      	str	r3, [sp, #8]
 8017154:	4686      	mov	lr, r0
 8017156:	4290      	cmp	r0, r2
 8017158:	4450      	add	r0, sl
 801715a:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801715e:	bfb8      	it	lt
 8017160:	4696      	movlt	lr, r2
 8017162:	4452      	add	r2, sl
 8017164:	4299      	cmp	r1, r3
 8017166:	b280      	uxth	r0, r0
 8017168:	b292      	uxth	r2, r2
 801716a:	468c      	mov	ip, r1
 801716c:	fa0f fa82 	sxth.w	sl, r2
 8017170:	bfb8      	it	lt
 8017172:	469c      	movlt	ip, r3
 8017174:	b203      	sxth	r3, r0
 8017176:	4553      	cmp	r3, sl
 8017178:	bfb8      	it	lt
 801717a:	4602      	movlt	r2, r0
 801717c:	eba2 020e 	sub.w	r2, r2, lr
 8017180:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017184:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017188:	9b02      	ldr	r3, [sp, #8]
 801718a:	f8ad e01c 	strh.w	lr, [sp, #28]
 801718e:	4411      	add	r1, r2
 8017190:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017194:	f8ad c01e 	strh.w	ip, [sp, #30]
 8017198:	4413      	add	r3, r2
 801719a:	b289      	uxth	r1, r1
 801719c:	b29b      	uxth	r3, r3
 801719e:	b208      	sxth	r0, r1
 80171a0:	b21a      	sxth	r2, r3
 80171a2:	4290      	cmp	r0, r2
 80171a4:	bfb8      	it	lt
 80171a6:	460b      	movlt	r3, r1
 80171a8:	eba3 030c 	sub.w	r3, r3, ip
 80171ac:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80171b0:	a807      	add	r0, sp, #28
 80171b2:	f7fb ff6c 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 80171b6:	b920      	cbnz	r0, 80171c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80171b8:	6823      	ldr	r3, [r4, #0]
 80171ba:	a907      	add	r1, sp, #28
 80171bc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80171be:	4620      	mov	r0, r4
 80171c0:	4798      	blx	r3
 80171c2:	3701      	adds	r7, #1
 80171c4:	b2bf      	uxth	r7, r7
 80171c6:	e7a9      	b.n	801711c <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80171c8:	f8d9 0000 	ldr.w	r0, [r9]
 80171cc:	6803      	ldr	r3, [r0, #0]
 80171ce:	2101      	movs	r1, #1
 80171d0:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80171d4:	4798      	blx	r3
 80171d6:	e773      	b.n	80170c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80171d8:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80171dc:	e7e8      	b.n	80171b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80171de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80171e0:	4798      	blx	r3
 80171e2:	4b3f      	ldr	r3, [pc, #252]	; (80172e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80171e4:	781b      	ldrb	r3, [r3, #0]
 80171e6:	2b00      	cmp	r3, #0
 80171e8:	f43f af29 	beq.w	801703e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80171ec:	2300      	movs	r3, #0
 80171ee:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80171f2:	882b      	ldrh	r3, [r5, #0]
 80171f4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80171f8:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80171fc:	42ab      	cmp	r3, r5
 80171fe:	f4bf af1e 	bcs.w	801703e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017202:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8017206:	2907      	cmp	r1, #7
 8017208:	d814      	bhi.n	8017234 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 801720a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801720e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8017212:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017216:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 801721a:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801721e:	1c4a      	adds	r2, r1, #1
 8017220:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8017224:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017228:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 801722c:	f8a2 c002 	strh.w	ip, [r2, #2]
 8017230:	8097      	strh	r7, [r2, #4]
 8017232:	80d6      	strh	r6, [r2, #6]
 8017234:	3301      	adds	r3, #1
 8017236:	b29b      	uxth	r3, r3
 8017238:	e7e0      	b.n	80171fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 801723a:	2b02      	cmp	r3, #2
 801723c:	f040 8133 	bne.w	80174a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8017240:	4b28      	ldr	r3, [pc, #160]	; (80172e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8017242:	781b      	ldrb	r3, [r3, #0]
 8017244:	2b01      	cmp	r3, #1
 8017246:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 801724a:	f000 8098 	beq.w	801737e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801724e:	882a      	ldrh	r2, [r5, #0]
 8017250:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8017254:	3201      	adds	r2, #1
 8017256:	b292      	uxth	r2, r2
 8017258:	2900      	cmp	r1, #0
 801725a:	d0c2      	beq.n	80171e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801725c:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8017260:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8017264:	441e      	add	r6, r3
 8017266:	b236      	sxth	r6, r6
 8017268:	4694      	mov	ip, r2
 801726a:	f04f 0900 	mov.w	r9, #0
 801726e:	fa1f f38c 	uxth.w	r3, ip
 8017272:	4299      	cmp	r1, r3
 8017274:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8017278:	f240 80bf 	bls.w	80173fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 801727c:	4427      	add	r7, r4
 801727e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8017282:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8017286:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 801728a:	4283      	cmp	r3, r0
 801728c:	f340 80a1 	ble.w	80173d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8017290:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8017294:	4406      	add	r6, r0
 8017296:	b236      	sxth	r6, r6
 8017298:	429e      	cmp	r6, r3
 801729a:	bfa8      	it	ge
 801729c:	461e      	movge	r6, r3
 801729e:	46e1      	mov	r9, ip
 80172a0:	f10c 0c01 	add.w	ip, ip, #1
 80172a4:	e7e3      	b.n	801726e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80172a6:	d10a      	bne.n	80172be <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80172a8:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80172ac:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80172b0:	4562      	cmp	r2, ip
 80172b2:	bfb8      	it	lt
 80172b4:	4662      	movlt	r2, ip
 80172b6:	4288      	cmp	r0, r1
 80172b8:	bfb8      	it	lt
 80172ba:	461f      	movlt	r7, r3
 80172bc:	e087      	b.n	80173ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80172be:	428a      	cmp	r2, r1
 80172c0:	bfb8      	it	lt
 80172c2:	460a      	movlt	r2, r1
 80172c4:	e083      	b.n	80173ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80172c6:	bf00      	nop
 80172c8:	200259d0 	.word	0x200259d0
 80172cc:	200259dc 	.word	0x200259dc
 80172d0:	200002a4 	.word	0x200002a4
 80172d4:	20025998 	.word	0x20025998
 80172d8:	2002598e 	.word	0x2002598e
 80172dc:	2002598c 	.word	0x2002598c
 80172e0:	20025996 	.word	0x20025996
 80172e4:	20025990 	.word	0x20025990
 80172e8:	19a1      	adds	r1, r4, r6
 80172ea:	ab07      	add	r3, sp, #28
 80172ec:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80172f0:	6849      	ldr	r1, [r1, #4]
 80172f2:	c303      	stmia	r3!, {r0, r1}
 80172f4:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80172f8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80172fc:	2b13      	cmp	r3, #19
 80172fe:	bfd8      	it	le
 8017300:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017304:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017308:	440b      	add	r3, r1
 801730a:	1a9b      	subs	r3, r3, r2
 801730c:	a807      	add	r0, sp, #28
 801730e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017312:	f7fe ffc9 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017316:	a807      	add	r0, sp, #28
 8017318:	f7fb feb9 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 801731c:	bb78      	cbnz	r0, 801737e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801731e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8017322:	f8d9 0000 	ldr.w	r0, [r9]
 8017326:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801732a:	f8d0 e000 	ldr.w	lr, [r0]
 801732e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8017332:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017336:	f1bc 0f14 	cmp.w	ip, #20
 801733a:	bfa8      	it	ge
 801733c:	f04f 0c14 	movge.w	ip, #20
 8017340:	fa1f fc8c 	uxth.w	ip, ip
 8017344:	f8cd c000 	str.w	ip, [sp]
 8017348:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 801734c:	47d8      	blx	fp
 801734e:	4683      	mov	fp, r0
 8017350:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017354:	a807      	add	r0, sp, #28
 8017356:	f7fe ff8d 	bl	8016274 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801735a:	6823      	ldr	r3, [r4, #0]
 801735c:	4426      	add	r6, r4
 801735e:	4620      	mov	r0, r4
 8017360:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017362:	a907      	add	r1, sp, #28
 8017364:	4798      	blx	r3
 8017366:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801736a:	eba0 000b 	sub.w	r0, r0, fp
 801736e:	b200      	sxth	r0, r0
 8017370:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8017374:	b918      	cbnz	r0, 801737e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017376:	b2b9      	uxth	r1, r7
 8017378:	4650      	mov	r0, sl
 801737a:	f7ff fa79 	bl	8016870 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801737e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8017382:	f1bb 0f00 	cmp.w	fp, #0
 8017386:	f43f af2c 	beq.w	80171e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801738a:	882b      	ldrh	r3, [r5, #0]
 801738c:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8017390:	3301      	adds	r3, #1
 8017392:	b29b      	uxth	r3, r3
 8017394:	2700      	movs	r7, #0
 8017396:	b299      	uxth	r1, r3
 8017398:	458b      	cmp	fp, r1
 801739a:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801739e:	d9a3      	bls.n	80172e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80173a0:	4426      	add	r6, r4
 80173a2:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80173a6:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80173aa:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80173ae:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80173b2:	4408      	add	r0, r1
 80173b4:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80173b8:	4461      	add	r1, ip
 80173ba:	b200      	sxth	r0, r0
 80173bc:	b209      	sxth	r1, r1
 80173be:	4288      	cmp	r0, r1
 80173c0:	f6bf af71 	bge.w	80172a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80173c4:	4584      	cmp	ip, r0
 80173c6:	4662      	mov	r2, ip
 80173c8:	461f      	mov	r7, r3
 80173ca:	bfb8      	it	lt
 80173cc:	4602      	movlt	r2, r0
 80173ce:	3301      	adds	r3, #1
 80173d0:	e7e1      	b.n	8017396 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80173d2:	d10e      	bne.n	80173f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80173d4:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80173d8:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80173dc:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80173e0:	4473      	add	r3, lr
 80173e2:	b21b      	sxth	r3, r3
 80173e4:	429e      	cmp	r6, r3
 80173e6:	bfa8      	it	ge
 80173e8:	461e      	movge	r6, r3
 80173ea:	4287      	cmp	r7, r0
 80173ec:	bfb8      	it	lt
 80173ee:	46e1      	movlt	r9, ip
 80173f0:	e756      	b.n	80172a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80173f2:	4286      	cmp	r6, r0
 80173f4:	bfa8      	it	ge
 80173f6:	4606      	movge	r6, r0
 80173f8:	e752      	b.n	80172a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80173fa:	eb0a 0007 	add.w	r0, sl, r7
 80173fe:	4427      	add	r7, r4
 8017400:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017404:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8017408:	f1bb 0f13 	cmp.w	fp, #19
 801740c:	bfde      	ittt	le
 801740e:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8017412:	445e      	addle	r6, fp
 8017414:	b236      	sxthle	r6, r6
 8017416:	f7fb fe3a 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 801741a:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801741e:	2800      	cmp	r0, #0
 8017420:	f47f af1a 	bne.w	8017258 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017424:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8017428:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801742c:	482a      	ldr	r0, [pc, #168]	; (80174d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801742e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8017432:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8017436:	6800      	ldr	r0, [r0, #0]
 8017438:	f8ad 101c 	strh.w	r1, [sp, #28]
 801743c:	1ab6      	subs	r6, r6, r2
 801743e:	2e14      	cmp	r6, #20
 8017440:	f8ad 201e 	strh.w	r2, [sp, #30]
 8017444:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017448:	bfa8      	it	ge
 801744a:	2614      	movge	r6, #20
 801744c:	f8d0 c000 	ldr.w	ip, [r0]
 8017450:	b2b6      	uxth	r6, r6
 8017452:	fa1f fb8b 	uxth.w	fp, fp
 8017456:	455e      	cmp	r6, fp
 8017458:	bf94      	ite	ls
 801745a:	9600      	strls	r6, [sp, #0]
 801745c:	f8cd b000 	strhi.w	fp, [sp]
 8017460:	b292      	uxth	r2, r2
 8017462:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8017466:	b29b      	uxth	r3, r3
 8017468:	b289      	uxth	r1, r1
 801746a:	47b0      	blx	r6
 801746c:	6823      	ldr	r3, [r4, #0]
 801746e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017472:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017474:	a907      	add	r1, sp, #28
 8017476:	4620      	mov	r0, r4
 8017478:	4798      	blx	r3
 801747a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801747e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8017482:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8017486:	1a5b      	subs	r3, r3, r1
 8017488:	440a      	add	r2, r1
 801748a:	b21b      	sxth	r3, r3
 801748c:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8017490:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8017494:	2b00      	cmp	r3, #0
 8017496:	f47f aeda 	bne.w	801724e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801749a:	fa1f f189 	uxth.w	r1, r9
 801749e:	4650      	mov	r0, sl
 80174a0:	f7ff f9e6 	bl	8016870 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80174a4:	e6d3      	b.n	801724e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80174a6:	882e      	ldrh	r6, [r5, #0]
 80174a8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80174ac:	42b3      	cmp	r3, r6
 80174ae:	f67f ae98 	bls.w	80171e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80174b2:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80174b6:	ab07      	add	r3, sp, #28
 80174b8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80174bc:	6851      	ldr	r1, [r2, #4]
 80174be:	c303      	stmia	r3!, {r0, r1}
 80174c0:	a807      	add	r0, sp, #28
 80174c2:	f7fb fde4 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 80174c6:	b920      	cbnz	r0, 80174d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80174c8:	6823      	ldr	r3, [r4, #0]
 80174ca:	a907      	add	r1, sp, #28
 80174cc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80174ce:	4620      	mov	r0, r4
 80174d0:	4798      	blx	r3
 80174d2:	3601      	adds	r6, #1
 80174d4:	b2b6      	uxth	r6, r6
 80174d6:	e7e7      	b.n	80174a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80174d8:	20025998 	.word	0x20025998

080174dc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80174dc:	4b03      	ldr	r3, [pc, #12]	; (80174ec <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80174de:	2200      	movs	r2, #0
 80174e0:	801a      	strh	r2, [r3, #0]
 80174e2:	805a      	strh	r2, [r3, #2]
 80174e4:	809a      	strh	r2, [r3, #4]
 80174e6:	80da      	strh	r2, [r3, #6]
 80174e8:	4770      	bx	lr
 80174ea:	bf00      	nop
 80174ec:	200259dc 	.word	0x200259dc

080174f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80174f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174f4:	4606      	mov	r6, r0
 80174f6:	b09d      	sub	sp, #116	; 0x74
 80174f8:	a803      	add	r0, sp, #12
 80174fa:	4614      	mov	r4, r2
 80174fc:	468a      	mov	sl, r1
 80174fe:	461d      	mov	r5, r3
 8017500:	f000 fdd3 	bl	80180aa <_ZN8touchgfx12TextProviderC1Ev>
 8017504:	6833      	ldr	r3, [r6, #0]
 8017506:	4630      	mov	r0, r6
 8017508:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801750a:	4798      	blx	r3
 801750c:	6833      	ldr	r3, [r6, #0]
 801750e:	4607      	mov	r7, r0
 8017510:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017512:	4630      	mov	r0, r6
 8017514:	4798      	blx	r3
 8017516:	462a      	mov	r2, r5
 8017518:	9000      	str	r0, [sp, #0]
 801751a:	4621      	mov	r1, r4
 801751c:	463b      	mov	r3, r7
 801751e:	a803      	add	r0, sp, #12
 8017520:	f000 fe1e 	bl	8018160 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017524:	2500      	movs	r5, #0
 8017526:	462c      	mov	r4, r5
 8017528:	46a9      	mov	r9, r5
 801752a:	46a8      	mov	r8, r5
 801752c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8017530:	2300      	movs	r3, #0
 8017532:	9302      	str	r3, [sp, #8]
 8017534:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017538:	429c      	cmp	r4, r3
 801753a:	d002      	beq.n	8017542 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801753c:	455c      	cmp	r4, fp
 801753e:	bf18      	it	ne
 8017540:	4625      	movne	r5, r4
 8017542:	ab02      	add	r3, sp, #8
 8017544:	4632      	mov	r2, r6
 8017546:	4651      	mov	r1, sl
 8017548:	a803      	add	r0, sp, #12
 801754a:	f001 f90b 	bl	8018764 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801754e:	4604      	mov	r4, r0
 8017550:	b108      	cbz	r0, 8017556 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8017552:	280a      	cmp	r0, #10
 8017554:	d10a      	bne.n	801756c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017556:	45c1      	cmp	r9, r8
 8017558:	bf38      	it	cc
 801755a:	46c1      	movcc	r9, r8
 801755c:	f04f 0800 	mov.w	r8, #0
 8017560:	2c00      	cmp	r4, #0
 8017562:	d1e5      	bne.n	8017530 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017564:	4648      	mov	r0, r9
 8017566:	b01d      	add	sp, #116	; 0x74
 8017568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801756c:	9a02      	ldr	r2, [sp, #8]
 801756e:	2a00      	cmp	r2, #0
 8017570:	d0de      	beq.n	8017530 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017572:	7b57      	ldrb	r7, [r2, #13]
 8017574:	6833      	ldr	r3, [r6, #0]
 8017576:	8894      	ldrh	r4, [r2, #4]
 8017578:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801757a:	007f      	lsls	r7, r7, #1
 801757c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8017580:	7a97      	ldrb	r7, [r2, #10]
 8017582:	4629      	mov	r1, r5
 8017584:	4307      	orrs	r7, r0
 8017586:	4630      	mov	r0, r6
 8017588:	4798      	blx	r3
 801758a:	4438      	add	r0, r7
 801758c:	4480      	add	r8, r0
 801758e:	fa1f f888 	uxth.w	r8, r8
 8017592:	e7e5      	b.n	8017560 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017594 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017594:	b508      	push	{r3, lr}
 8017596:	6803      	ldr	r3, [r0, #0]
 8017598:	68db      	ldr	r3, [r3, #12]
 801759a:	4798      	blx	r3
 801759c:	b128      	cbz	r0, 80175aa <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801759e:	7b43      	ldrb	r3, [r0, #13]
 80175a0:	7a80      	ldrb	r0, [r0, #10]
 80175a2:	005b      	lsls	r3, r3, #1
 80175a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80175a8:	4318      	orrs	r0, r3
 80175aa:	bd08      	pop	{r3, pc}

080175ac <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80175ac:	b40e      	push	{r1, r2, r3}
 80175ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 80175b0:	b09e      	sub	sp, #120	; 0x78
 80175b2:	ab23      	add	r3, sp, #140	; 0x8c
 80175b4:	4605      	mov	r5, r0
 80175b6:	f853 4b04 	ldr.w	r4, [r3], #4
 80175ba:	9303      	str	r3, [sp, #12]
 80175bc:	a805      	add	r0, sp, #20
 80175be:	f000 fd74 	bl	80180aa <_ZN8touchgfx12TextProviderC1Ev>
 80175c2:	682b      	ldr	r3, [r5, #0]
 80175c4:	4628      	mov	r0, r5
 80175c6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80175c8:	4798      	blx	r3
 80175ca:	682b      	ldr	r3, [r5, #0]
 80175cc:	4606      	mov	r6, r0
 80175ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80175d0:	4628      	mov	r0, r5
 80175d2:	4798      	blx	r3
 80175d4:	4633      	mov	r3, r6
 80175d6:	ae1e      	add	r6, sp, #120	; 0x78
 80175d8:	4621      	mov	r1, r4
 80175da:	9000      	str	r0, [sp, #0]
 80175dc:	9a03      	ldr	r2, [sp, #12]
 80175de:	2400      	movs	r4, #0
 80175e0:	a805      	add	r0, sp, #20
 80175e2:	f000 fdbd 	bl	8018160 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80175e6:	f846 4d68 	str.w	r4, [r6, #-104]!
 80175ea:	462a      	mov	r2, r5
 80175ec:	4633      	mov	r3, r6
 80175ee:	4621      	mov	r1, r4
 80175f0:	a805      	add	r0, sp, #20
 80175f2:	f001 f8b7 	bl	8018764 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80175f6:	b1f0      	cbz	r0, 8017636 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80175f8:	280a      	cmp	r0, #10
 80175fa:	d018      	beq.n	801762e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80175fc:	9f04      	ldr	r7, [sp, #16]
 80175fe:	b1b7      	cbz	r7, 801762e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017600:	7b78      	ldrb	r0, [r7, #13]
 8017602:	7a3b      	ldrb	r3, [r7, #8]
 8017604:	88ea      	ldrh	r2, [r5, #6]
 8017606:	00c1      	lsls	r1, r0, #3
 8017608:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801760c:	4319      	orrs	r1, r3
 801760e:	0643      	lsls	r3, r0, #25
 8017610:	bf44      	itt	mi
 8017612:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017616:	b219      	sxthmi	r1, r3
 8017618:	0100      	lsls	r0, r0, #4
 801761a:	79fb      	ldrb	r3, [r7, #7]
 801761c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017620:	4303      	orrs	r3, r0
 8017622:	4413      	add	r3, r2
 8017624:	1a5b      	subs	r3, r3, r1
 8017626:	b21b      	sxth	r3, r3
 8017628:	429c      	cmp	r4, r3
 801762a:	bfb8      	it	lt
 801762c:	461c      	movlt	r4, r3
 801762e:	4633      	mov	r3, r6
 8017630:	462a      	mov	r2, r5
 8017632:	2100      	movs	r1, #0
 8017634:	e7dc      	b.n	80175f0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017636:	b2a0      	uxth	r0, r4
 8017638:	b01e      	add	sp, #120	; 0x78
 801763a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801763e:	b003      	add	sp, #12
 8017640:	4770      	bx	lr

08017642 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8017642:	7a43      	ldrb	r3, [r0, #9]
 8017644:	8880      	ldrh	r0, [r0, #4]
 8017646:	4418      	add	r0, r3
 8017648:	b280      	uxth	r0, r0
 801764a:	4770      	bx	lr

0801764c <_ZNK8touchgfx4Font13getFontHeightEv>:
 801764c:	6803      	ldr	r3, [r0, #0]
 801764e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017650:	4718      	bx	r3

08017652 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8017652:	b40e      	push	{r1, r2, r3}
 8017654:	b570      	push	{r4, r5, r6, lr}
 8017656:	b09d      	sub	sp, #116	; 0x74
 8017658:	ab21      	add	r3, sp, #132	; 0x84
 801765a:	4604      	mov	r4, r0
 801765c:	f853 5b04 	ldr.w	r5, [r3], #4
 8017660:	9302      	str	r3, [sp, #8]
 8017662:	a803      	add	r0, sp, #12
 8017664:	f000 fd21 	bl	80180aa <_ZN8touchgfx12TextProviderC1Ev>
 8017668:	6823      	ldr	r3, [r4, #0]
 801766a:	4620      	mov	r0, r4
 801766c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801766e:	4798      	blx	r3
 8017670:	6823      	ldr	r3, [r4, #0]
 8017672:	4606      	mov	r6, r0
 8017674:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017676:	4620      	mov	r0, r4
 8017678:	4798      	blx	r3
 801767a:	4633      	mov	r3, r6
 801767c:	9000      	str	r0, [sp, #0]
 801767e:	9a02      	ldr	r2, [sp, #8]
 8017680:	4629      	mov	r1, r5
 8017682:	a803      	add	r0, sp, #12
 8017684:	f000 fd6c 	bl	8018160 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017688:	a803      	add	r0, sp, #12
 801768a:	f001 f939 	bl	8018900 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801768e:	2401      	movs	r4, #1
 8017690:	b2a3      	uxth	r3, r4
 8017692:	b140      	cbz	r0, 80176a6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017694:	280a      	cmp	r0, #10
 8017696:	bf08      	it	eq
 8017698:	3301      	addeq	r3, #1
 801769a:	a803      	add	r0, sp, #12
 801769c:	bf08      	it	eq
 801769e:	b21c      	sxtheq	r4, r3
 80176a0:	f001 f92e 	bl	8018900 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80176a4:	e7f4      	b.n	8017690 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80176a6:	4618      	mov	r0, r3
 80176a8:	b01d      	add	sp, #116	; 0x74
 80176aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80176ae:	b003      	add	sp, #12
 80176b0:	4770      	bx	lr

080176b2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80176b2:	b40e      	push	{r1, r2, r3}
 80176b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80176b6:	b09e      	sub	sp, #120	; 0x78
 80176b8:	ab23      	add	r3, sp, #140	; 0x8c
 80176ba:	4604      	mov	r4, r0
 80176bc:	f853 5b04 	ldr.w	r5, [r3], #4
 80176c0:	9303      	str	r3, [sp, #12]
 80176c2:	a805      	add	r0, sp, #20
 80176c4:	f000 fcf1 	bl	80180aa <_ZN8touchgfx12TextProviderC1Ev>
 80176c8:	6823      	ldr	r3, [r4, #0]
 80176ca:	4620      	mov	r0, r4
 80176cc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80176ce:	4798      	blx	r3
 80176d0:	6823      	ldr	r3, [r4, #0]
 80176d2:	4606      	mov	r6, r0
 80176d4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80176d6:	4620      	mov	r0, r4
 80176d8:	4798      	blx	r3
 80176da:	4633      	mov	r3, r6
 80176dc:	4629      	mov	r1, r5
 80176de:	9000      	str	r0, [sp, #0]
 80176e0:	9a03      	ldr	r2, [sp, #12]
 80176e2:	a805      	add	r0, sp, #20
 80176e4:	ad1e      	add	r5, sp, #120	; 0x78
 80176e6:	f000 fd3b 	bl	8018160 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80176ea:	2100      	movs	r1, #0
 80176ec:	f845 1d68 	str.w	r1, [r5, #-104]!
 80176f0:	4622      	mov	r2, r4
 80176f2:	462b      	mov	r3, r5
 80176f4:	a805      	add	r0, sp, #20
 80176f6:	f001 f835 	bl	8018764 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80176fa:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80176fe:	b1d8      	cbz	r0, 8017738 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8017700:	280a      	cmp	r0, #10
 8017702:	d012      	beq.n	801772a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017704:	9804      	ldr	r0, [sp, #16]
 8017706:	b180      	cbz	r0, 801772a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017708:	7b47      	ldrb	r7, [r0, #13]
 801770a:	88e2      	ldrh	r2, [r4, #6]
 801770c:	00fb      	lsls	r3, r7, #3
 801770e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017712:	7a03      	ldrb	r3, [r0, #8]
 8017714:	430b      	orrs	r3, r1
 8017716:	0679      	lsls	r1, r7, #25
 8017718:	bf44      	itt	mi
 801771a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801771e:	b21b      	sxthmi	r3, r3
 8017720:	1ad3      	subs	r3, r2, r3
 8017722:	b21b      	sxth	r3, r3
 8017724:	429e      	cmp	r6, r3
 8017726:	bfa8      	it	ge
 8017728:	461e      	movge	r6, r3
 801772a:	462b      	mov	r3, r5
 801772c:	4622      	mov	r2, r4
 801772e:	2100      	movs	r1, #0
 8017730:	a805      	add	r0, sp, #20
 8017732:	f001 f817 	bl	8018764 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017736:	e7e2      	b.n	80176fe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017738:	4630      	mov	r0, r6
 801773a:	b01e      	add	sp, #120	; 0x78
 801773c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017740:	b003      	add	sp, #12
 8017742:	4770      	bx	lr

08017744 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017744:	b513      	push	{r0, r1, r4, lr}
 8017746:	6803      	ldr	r3, [r0, #0]
 8017748:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801774c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017750:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017754:	2400      	movs	r4, #0
 8017756:	9400      	str	r4, [sp, #0]
 8017758:	f8ad 2006 	strh.w	r2, [sp, #6]
 801775c:	691b      	ldr	r3, [r3, #16]
 801775e:	4669      	mov	r1, sp
 8017760:	4798      	blx	r3
 8017762:	b002      	add	sp, #8
 8017764:	bd10      	pop	{r4, pc}

08017766 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8017766:	b538      	push	{r3, r4, r5, lr}
 8017768:	680b      	ldr	r3, [r1, #0]
 801776a:	460c      	mov	r4, r1
 801776c:	68db      	ldr	r3, [r3, #12]
 801776e:	4605      	mov	r5, r0
 8017770:	4798      	blx	r3
 8017772:	6823      	ldr	r3, [r4, #0]
 8017774:	4620      	mov	r0, r4
 8017776:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017778:	4629      	mov	r1, r5
 801777a:	4798      	blx	r3
 801777c:	4628      	mov	r0, r5
 801777e:	bd38      	pop	{r3, r4, r5, pc}

08017780 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8017780:	b410      	push	{r4}
 8017782:	880a      	ldrh	r2, [r1, #0]
 8017784:	8884      	ldrh	r4, [r0, #4]
 8017786:	4422      	add	r2, r4
 8017788:	800a      	strh	r2, [r1, #0]
 801778a:	88c4      	ldrh	r4, [r0, #6]
 801778c:	884a      	ldrh	r2, [r1, #2]
 801778e:	4422      	add	r2, r4
 8017790:	804a      	strh	r2, [r1, #2]
 8017792:	6940      	ldr	r0, [r0, #20]
 8017794:	b120      	cbz	r0, 80177a0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8017796:	6803      	ldr	r3, [r0, #0]
 8017798:	f85d 4b04 	ldr.w	r4, [sp], #4
 801779c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801779e:	4718      	bx	r3
 80177a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80177a4:	4770      	bx	lr

080177a6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80177a6:	b570      	push	{r4, r5, r6, lr}
 80177a8:	8882      	ldrh	r2, [r0, #4]
 80177aa:	880b      	ldrh	r3, [r1, #0]
 80177ac:	4413      	add	r3, r2
 80177ae:	800b      	strh	r3, [r1, #0]
 80177b0:	88c2      	ldrh	r2, [r0, #6]
 80177b2:	884b      	ldrh	r3, [r1, #2]
 80177b4:	460c      	mov	r4, r1
 80177b6:	4413      	add	r3, r2
 80177b8:	804b      	strh	r3, [r1, #2]
 80177ba:	4605      	mov	r5, r0
 80177bc:	1d01      	adds	r1, r0, #4
 80177be:	4620      	mov	r0, r4
 80177c0:	f7fb fc22 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 80177c4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80177c8:	2b00      	cmp	r3, #0
 80177ca:	dd0b      	ble.n	80177e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80177cc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80177d0:	2b00      	cmp	r3, #0
 80177d2:	dd07      	ble.n	80177e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80177d4:	6968      	ldr	r0, [r5, #20]
 80177d6:	b128      	cbz	r0, 80177e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80177d8:	6803      	ldr	r3, [r0, #0]
 80177da:	4621      	mov	r1, r4
 80177dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80177de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80177e2:	4718      	bx	r3
 80177e4:	bd70      	pop	{r4, r5, r6, pc}
	...

080177e8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80177e8:	b570      	push	{r4, r5, r6, lr}
 80177ea:	8882      	ldrh	r2, [r0, #4]
 80177ec:	880b      	ldrh	r3, [r1, #0]
 80177ee:	4413      	add	r3, r2
 80177f0:	800b      	strh	r3, [r1, #0]
 80177f2:	88c2      	ldrh	r2, [r0, #6]
 80177f4:	884b      	ldrh	r3, [r1, #2]
 80177f6:	460c      	mov	r4, r1
 80177f8:	4413      	add	r3, r2
 80177fa:	804b      	strh	r3, [r1, #2]
 80177fc:	4605      	mov	r5, r0
 80177fe:	1d01      	adds	r1, r0, #4
 8017800:	4620      	mov	r0, r4
 8017802:	f7fb fc01 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8017806:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801780a:	2b00      	cmp	r3, #0
 801780c:	dd19      	ble.n	8017842 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801780e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017812:	2b00      	cmp	r3, #0
 8017814:	dd15      	ble.n	8017842 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017816:	6968      	ldr	r0, [r5, #20]
 8017818:	b128      	cbz	r0, 8017826 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801781a:	6803      	ldr	r3, [r0, #0]
 801781c:	4621      	mov	r1, r4
 801781e:	691b      	ldr	r3, [r3, #16]
 8017820:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017824:	4718      	bx	r3
 8017826:	4b07      	ldr	r3, [pc, #28]	; (8017844 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017828:	681b      	ldr	r3, [r3, #0]
 801782a:	3304      	adds	r3, #4
 801782c:	429d      	cmp	r5, r3
 801782e:	d108      	bne.n	8017842 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017830:	f7fe fec8 	bl	80165c4 <_ZN8touchgfx11Application11getInstanceEv>
 8017834:	6803      	ldr	r3, [r0, #0]
 8017836:	6821      	ldr	r1, [r4, #0]
 8017838:	6862      	ldr	r2, [r4, #4]
 801783a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801783c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017840:	4718      	bx	r3
 8017842:	bd70      	pop	{r4, r5, r6, pc}
 8017844:	200259d4 	.word	0x200259d4

08017848 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017848:	b570      	push	{r4, r5, r6, lr}
 801784a:	4604      	mov	r4, r0
 801784c:	4616      	mov	r6, r2
 801784e:	460d      	mov	r5, r1
 8017850:	b901      	cbnz	r1, 8017854 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8017852:	b192      	cbz	r2, 801787a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017854:	6823      	ldr	r3, [r4, #0]
 8017856:	4620      	mov	r0, r4
 8017858:	699b      	ldr	r3, [r3, #24]
 801785a:	4798      	blx	r3
 801785c:	88e2      	ldrh	r2, [r4, #6]
 801785e:	88a1      	ldrh	r1, [r4, #4]
 8017860:	4432      	add	r2, r6
 8017862:	4429      	add	r1, r5
 8017864:	4620      	mov	r0, r4
 8017866:	b212      	sxth	r2, r2
 8017868:	b209      	sxth	r1, r1
 801786a:	f7f7 fe02 	bl	800f472 <_ZN8touchgfx8Drawable5setXYEss>
 801786e:	6823      	ldr	r3, [r4, #0]
 8017870:	4620      	mov	r0, r4
 8017872:	699b      	ldr	r3, [r3, #24]
 8017874:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017878:	4718      	bx	r3
 801787a:	bd70      	pop	{r4, r5, r6, pc}

0801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801787c:	b510      	push	{r4, lr}
 801787e:	4604      	mov	r4, r0
 8017880:	4608      	mov	r0, r1
 8017882:	2300      	movs	r3, #0
 8017884:	8023      	strh	r3, [r4, #0]
 8017886:	8063      	strh	r3, [r4, #2]
 8017888:	6803      	ldr	r3, [r0, #0]
 801788a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801788e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017892:	80a1      	strh	r1, [r4, #4]
 8017894:	80e2      	strh	r2, [r4, #6]
 8017896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017898:	4621      	mov	r1, r4
 801789a:	4798      	blx	r3
 801789c:	4620      	mov	r0, r4
 801789e:	bd10      	pop	{r4, pc}

080178a0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80178a0:	b530      	push	{r4, r5, lr}
 80178a2:	8083      	strh	r3, [r0, #4]
 80178a4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80178a8:	80c3      	strh	r3, [r0, #6]
 80178aa:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80178ae:	7203      	strb	r3, [r0, #8]
 80178b0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80178b4:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80178b8:	7243      	strb	r3, [r0, #9]
 80178ba:	7a83      	ldrb	r3, [r0, #10]
 80178bc:	6141      	str	r1, [r0, #20]
 80178be:	f365 0306 	bfi	r3, r5, #0, #7
 80178c2:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80178c6:	8302      	strh	r2, [r0, #24]
 80178c8:	f365 13c7 	bfi	r3, r5, #7, #1
 80178cc:	7283      	strb	r3, [r0, #10]
 80178ce:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80178d2:	72c3      	strb	r3, [r0, #11]
 80178d4:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80178d8:	7303      	strb	r3, [r0, #12]
 80178da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80178de:	81c3      	strh	r3, [r0, #14]
 80178e0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80178e4:	8203      	strh	r3, [r0, #16]
 80178e6:	4b01      	ldr	r3, [pc, #4]	; (80178ec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80178e8:	6003      	str	r3, [r0, #0]
 80178ea:	bd30      	pop	{r4, r5, pc}
 80178ec:	0802c07c 	.word	0x0802c07c

080178f0 <_ZNK8touchgfx9ConstFont4findEt>:
 80178f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80178f2:	6944      	ldr	r4, [r0, #20]
 80178f4:	b3bc      	cbz	r4, 8017966 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80178f6:	88a3      	ldrh	r3, [r4, #4]
 80178f8:	8b02      	ldrh	r2, [r0, #24]
 80178fa:	1acb      	subs	r3, r1, r3
 80178fc:	f102 32ff 	add.w	r2, r2, #4294967295
 8017900:	d431      	bmi.n	8017966 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017902:	4293      	cmp	r3, r2
 8017904:	dd0c      	ble.n	8017920 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017906:	230e      	movs	r3, #14
 8017908:	fb03 4302 	mla	r3, r3, r2, r4
 801790c:	889b      	ldrh	r3, [r3, #4]
 801790e:	1a5b      	subs	r3, r3, r1
 8017910:	1ad3      	subs	r3, r2, r3
 8017912:	429a      	cmp	r2, r3
 8017914:	db27      	blt.n	8017966 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017916:	2b00      	cmp	r3, #0
 8017918:	bfbc      	itt	lt
 801791a:	2302      	movlt	r3, #2
 801791c:	fb92 f3f3 	sdivlt	r3, r2, r3
 8017920:	2500      	movs	r5, #0
 8017922:	260e      	movs	r6, #14
 8017924:	4295      	cmp	r5, r2
 8017926:	dc1e      	bgt.n	8017966 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017928:	fb06 4003 	mla	r0, r6, r3, r4
 801792c:	8887      	ldrh	r7, [r0, #4]
 801792e:	42b9      	cmp	r1, r7
 8017930:	d01a      	beq.n	8017968 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8017932:	d20d      	bcs.n	8017950 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017934:	1e5a      	subs	r2, r3, #1
 8017936:	4295      	cmp	r5, r2
 8017938:	dc15      	bgt.n	8017966 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801793a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801793e:	1a5b      	subs	r3, r3, r1
 8017940:	1ad3      	subs	r3, r2, r3
 8017942:	429a      	cmp	r2, r3
 8017944:	db0f      	blt.n	8017966 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017946:	429d      	cmp	r5, r3
 8017948:	ddec      	ble.n	8017924 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801794a:	1953      	adds	r3, r2, r5
 801794c:	105b      	asrs	r3, r3, #1
 801794e:	e7e9      	b.n	8017924 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017950:	1c5d      	adds	r5, r3, #1
 8017952:	42aa      	cmp	r2, r5
 8017954:	db07      	blt.n	8017966 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017956:	8a43      	ldrh	r3, [r0, #18]
 8017958:	1acb      	subs	r3, r1, r3
 801795a:	442b      	add	r3, r5
 801795c:	429d      	cmp	r5, r3
 801795e:	dc02      	bgt.n	8017966 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017960:	429a      	cmp	r2, r3
 8017962:	dadf      	bge.n	8017924 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017964:	e7f1      	b.n	801794a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017966:	2000      	movs	r0, #0
 8017968:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801796a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801796a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801796c:	4604      	mov	r4, r0
 801796e:	4617      	mov	r7, r2
 8017970:	461e      	mov	r6, r3
 8017972:	b911      	cbnz	r1, 801797a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017974:	2500      	movs	r5, #0
 8017976:	4628      	mov	r0, r5
 8017978:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801797a:	290a      	cmp	r1, #10
 801797c:	d0fa      	beq.n	8017974 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801797e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017982:	4291      	cmp	r1, r2
 8017984:	d0f6      	beq.n	8017974 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017986:	f242 020b 	movw	r2, #8203	; 0x200b
 801798a:	4291      	cmp	r1, r2
 801798c:	d0f2      	beq.n	8017974 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801798e:	f7ff ffaf 	bl	80178f0 <_ZNK8touchgfx9ConstFont4findEt>
 8017992:	4605      	mov	r5, r0
 8017994:	b950      	cbnz	r0, 80179ac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017996:	6823      	ldr	r3, [r4, #0]
 8017998:	4620      	mov	r0, r4
 801799a:	691b      	ldr	r3, [r3, #16]
 801799c:	4798      	blx	r3
 801799e:	4601      	mov	r1, r0
 80179a0:	4620      	mov	r0, r4
 80179a2:	f7ff ffa5 	bl	80178f0 <_ZNK8touchgfx9ConstFont4findEt>
 80179a6:	4605      	mov	r5, r0
 80179a8:	2800      	cmp	r0, #0
 80179aa:	d0e3      	beq.n	8017974 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80179ac:	6823      	ldr	r3, [r4, #0]
 80179ae:	4629      	mov	r1, r5
 80179b0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80179b2:	4620      	mov	r0, r4
 80179b4:	4798      	blx	r3
 80179b6:	6038      	str	r0, [r7, #0]
 80179b8:	6823      	ldr	r3, [r4, #0]
 80179ba:	4620      	mov	r0, r4
 80179bc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80179be:	4798      	blx	r3
 80179c0:	7030      	strb	r0, [r6, #0]
 80179c2:	e7d8      	b.n	8017976 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080179c4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80179c4:	2000      	movs	r0, #0
 80179c6:	4770      	bx	lr

080179c8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80179c8:	2001      	movs	r0, #1
 80179ca:	4770      	bx	lr

080179cc <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80179cc:	2002      	movs	r0, #2
 80179ce:	4770      	bx	lr

080179d0 <_ZN8touchgfx12GestureEventD1Ev>:
 80179d0:	4770      	bx	lr

080179d2 <_ZN8touchgfx9DragEventD1Ev>:
 80179d2:	4770      	bx	lr

080179d4 <_ZN8touchgfx10ClickEventD1Ev>:
 80179d4:	4770      	bx	lr

080179d6 <_ZN8touchgfx10ClickEventD0Ev>:
 80179d6:	b510      	push	{r4, lr}
 80179d8:	210c      	movs	r1, #12
 80179da:	4604      	mov	r4, r0
 80179dc:	f00f fb21 	bl	8027022 <_ZdlPvj>
 80179e0:	4620      	mov	r0, r4
 80179e2:	bd10      	pop	{r4, pc}

080179e4 <_ZN8touchgfx9DragEventD0Ev>:
 80179e4:	b510      	push	{r4, lr}
 80179e6:	2110      	movs	r1, #16
 80179e8:	4604      	mov	r4, r0
 80179ea:	f00f fb1a 	bl	8027022 <_ZdlPvj>
 80179ee:	4620      	mov	r0, r4
 80179f0:	bd10      	pop	{r4, pc}

080179f2 <_ZN8touchgfx12GestureEventD0Ev>:
 80179f2:	b510      	push	{r4, lr}
 80179f4:	210c      	movs	r1, #12
 80179f6:	4604      	mov	r4, r0
 80179f8:	f00f fb13 	bl	8027022 <_ZdlPvj>
 80179fc:	4620      	mov	r0, r4
 80179fe:	bd10      	pop	{r4, pc}

08017a00 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017a00:	b530      	push	{r4, r5, lr}
 8017a02:	460d      	mov	r5, r1
 8017a04:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017a06:	b087      	sub	sp, #28
 8017a08:	4604      	mov	r4, r0
 8017a0a:	b301      	cbz	r1, 8017a4e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017a0c:	a801      	add	r0, sp, #4
 8017a0e:	f7ff ff35 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017a12:	892a      	ldrh	r2, [r5, #8]
 8017a14:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017a18:	7928      	ldrb	r0, [r5, #4]
 8017a1a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017a1e:	f88d 0010 	strb.w	r0, [sp, #16]
 8017a22:	1ad2      	subs	r2, r2, r3
 8017a24:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017a26:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017a28:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017a2c:	441a      	add	r2, r3
 8017a2e:	896b      	ldrh	r3, [r5, #10]
 8017a30:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017a34:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017a38:	1b5b      	subs	r3, r3, r5
 8017a3a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017a3c:	442b      	add	r3, r5
 8017a3e:	4d05      	ldr	r5, [pc, #20]	; (8017a54 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017a40:	9503      	str	r5, [sp, #12]
 8017a42:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017a46:	6803      	ldr	r3, [r0, #0]
 8017a48:	a903      	add	r1, sp, #12
 8017a4a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017a4c:	4798      	blx	r3
 8017a4e:	b007      	add	sp, #28
 8017a50:	bd30      	pop	{r4, r5, pc}
 8017a52:	bf00      	nop
 8017a54:	0802c104 	.word	0x0802c104

08017a58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017a58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017a5c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8017a5e:	b08a      	sub	sp, #40	; 0x28
 8017a60:	4604      	mov	r4, r0
 8017a62:	460d      	mov	r5, r1
 8017a64:	b113      	cbz	r3, 8017a6c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017a66:	790b      	ldrb	r3, [r1, #4]
 8017a68:	2b00      	cmp	r3, #0
 8017a6a:	d044      	beq.n	8017af6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017a6c:	f104 0804 	add.w	r8, r4, #4
 8017a70:	4641      	mov	r1, r8
 8017a72:	a803      	add	r0, sp, #12
 8017a74:	f7ff ff02 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017a78:	792b      	ldrb	r3, [r5, #4]
 8017a7a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017a7e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017a82:	b983      	cbnz	r3, 8017aa6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017a84:	892a      	ldrh	r2, [r5, #8]
 8017a86:	88e9      	ldrh	r1, [r5, #6]
 8017a88:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017a8c:	1b92      	subs	r2, r2, r6
 8017a8e:	1bc9      	subs	r1, r1, r7
 8017a90:	9301      	str	r3, [sp, #4]
 8017a92:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017a96:	9300      	str	r3, [sp, #0]
 8017a98:	b212      	sxth	r2, r2
 8017a9a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017a9e:	b209      	sxth	r1, r1
 8017aa0:	4640      	mov	r0, r8
 8017aa2:	f7fb f9cd 	bl	8012e40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017aa6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017aa8:	b329      	cbz	r1, 8017af6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017aaa:	a805      	add	r0, sp, #20
 8017aac:	f7ff fee6 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017ab0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017ab4:	792b      	ldrb	r3, [r5, #4]
 8017ab6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017ab8:	f88d 3020 	strb.w	r3, [sp, #32]
 8017abc:	1abf      	subs	r7, r7, r2
 8017abe:	88ea      	ldrh	r2, [r5, #6]
 8017ac0:	4417      	add	r7, r2
 8017ac2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017ac4:	4417      	add	r7, r2
 8017ac6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017aca:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017ace:	1ab6      	subs	r6, r6, r2
 8017ad0:	892a      	ldrh	r2, [r5, #8]
 8017ad2:	4416      	add	r6, r2
 8017ad4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017ad6:	4416      	add	r6, r2
 8017ad8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017adc:	4a07      	ldr	r2, [pc, #28]	; (8017afc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8017ade:	9207      	str	r2, [sp, #28]
 8017ae0:	2600      	movs	r6, #0
 8017ae2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017ae6:	6803      	ldr	r3, [r0, #0]
 8017ae8:	a907      	add	r1, sp, #28
 8017aea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017aec:	4798      	blx	r3
 8017aee:	792b      	ldrb	r3, [r5, #4]
 8017af0:	b10b      	cbz	r3, 8017af6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017af2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017af6:	b00a      	add	sp, #40	; 0x28
 8017af8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017afc:	0802c0dc 	.word	0x0802c0dc

08017b00 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8017b00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017b04:	460c      	mov	r4, r1
 8017b06:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017b08:	b088      	sub	sp, #32
 8017b0a:	4605      	mov	r5, r0
 8017b0c:	2900      	cmp	r1, #0
 8017b0e:	d06d      	beq.n	8017bec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8017b10:	4668      	mov	r0, sp
 8017b12:	f7ff feb3 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b16:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017b18:	88e3      	ldrh	r3, [r4, #6]
 8017b1a:	f9bd 8000 	ldrsh.w	r8, [sp]
 8017b1e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8017b22:	440b      	add	r3, r1
 8017b24:	b21b      	sxth	r3, r3
 8017b26:	4543      	cmp	r3, r8
 8017b28:	db31      	blt.n	8017b8e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b2a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8017b2e:	44c4      	add	ip, r8
 8017b30:	fa0f fc8c 	sxth.w	ip, ip
 8017b34:	4563      	cmp	r3, ip
 8017b36:	da2a      	bge.n	8017b8e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b38:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017b3a:	8926      	ldrh	r6, [r4, #8]
 8017b3c:	4416      	add	r6, r2
 8017b3e:	b236      	sxth	r6, r6
 8017b40:	42be      	cmp	r6, r7
 8017b42:	db24      	blt.n	8017b8e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b44:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017b48:	4438      	add	r0, r7
 8017b4a:	b200      	sxth	r0, r0
 8017b4c:	4286      	cmp	r6, r0
 8017b4e:	da1e      	bge.n	8017b8e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b50:	8963      	ldrh	r3, [r4, #10]
 8017b52:	4419      	add	r1, r3
 8017b54:	b209      	sxth	r1, r1
 8017b56:	4541      	cmp	r1, r8
 8017b58:	db08      	blt.n	8017b6c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017b5a:	4561      	cmp	r1, ip
 8017b5c:	da06      	bge.n	8017b6c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017b5e:	89a3      	ldrh	r3, [r4, #12]
 8017b60:	441a      	add	r2, r3
 8017b62:	b212      	sxth	r2, r2
 8017b64:	42ba      	cmp	r2, r7
 8017b66:	db01      	blt.n	8017b6c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017b68:	4282      	cmp	r2, r0
 8017b6a:	db10      	blt.n	8017b8e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017b6c:	4b21      	ldr	r3, [pc, #132]	; (8017bf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017b6e:	9304      	str	r3, [sp, #16]
 8017b70:	2302      	movs	r3, #2
 8017b72:	f88d 3014 	strb.w	r3, [sp, #20]
 8017b76:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017b78:	2300      	movs	r3, #0
 8017b7a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017b7e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017b82:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017b86:	6803      	ldr	r3, [r0, #0]
 8017b88:	a904      	add	r1, sp, #16
 8017b8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017b8c:	4798      	blx	r3
 8017b8e:	1d29      	adds	r1, r5, #4
 8017b90:	a802      	add	r0, sp, #8
 8017b92:	f7ff fe73 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b96:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017b9a:	88e0      	ldrh	r0, [r4, #6]
 8017b9c:	7921      	ldrb	r1, [r4, #4]
 8017b9e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8017ba2:	8922      	ldrh	r2, [r4, #8]
 8017ba4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017ba6:	f88d 1014 	strb.w	r1, [sp, #20]
 8017baa:	eba3 0808 	sub.w	r8, r3, r8
 8017bae:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017bb2:	1bdf      	subs	r7, r3, r7
 8017bb4:	b2bb      	uxth	r3, r7
 8017bb6:	fa1f f888 	uxth.w	r8, r8
 8017bba:	8967      	ldrh	r7, [r4, #10]
 8017bbc:	89a4      	ldrh	r4, [r4, #12]
 8017bbe:	4440      	add	r0, r8
 8017bc0:	4460      	add	r0, ip
 8017bc2:	441a      	add	r2, r3
 8017bc4:	44b8      	add	r8, r7
 8017bc6:	4423      	add	r3, r4
 8017bc8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017bcc:	4433      	add	r3, r6
 8017bce:	4432      	add	r2, r6
 8017bd0:	44e0      	add	r8, ip
 8017bd2:	4c09      	ldr	r4, [pc, #36]	; (8017bf8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017bd4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017bd6:	9404      	str	r4, [sp, #16]
 8017bd8:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017bdc:	f8ad 801a 	strh.w	r8, [sp, #26]
 8017be0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017be4:	6803      	ldr	r3, [r0, #0]
 8017be6:	a904      	add	r1, sp, #16
 8017be8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017bea:	4798      	blx	r3
 8017bec:	b008      	add	sp, #32
 8017bee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017bf2:	bf00      	nop
 8017bf4:	0802c0dc 	.word	0x0802c0dc
 8017bf8:	0802c0f0 	.word	0x0802c0f0

08017bfc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017bfc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017bfe:	4604      	mov	r4, r0
 8017c00:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017c04:	3201      	adds	r2, #1
 8017c06:	d112      	bne.n	8017c2e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017c08:	6803      	ldr	r3, [r0, #0]
 8017c0a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017c0e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017c12:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017c16:	2500      	movs	r5, #0
 8017c18:	9500      	str	r5, [sp, #0]
 8017c1a:	466d      	mov	r5, sp
 8017c1c:	4629      	mov	r1, r5
 8017c1e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017c22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017c24:	4798      	blx	r3
 8017c26:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017c2a:	e884 0003 	stmia.w	r4, {r0, r1}
 8017c2e:	4620      	mov	r0, r4
 8017c30:	b003      	add	sp, #12
 8017c32:	bd30      	pop	{r4, r5, pc}

08017c34 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017c34:	b513      	push	{r0, r1, r4, lr}
 8017c36:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017c3a:	3301      	adds	r3, #1
 8017c3c:	4604      	mov	r4, r0
 8017c3e:	d109      	bne.n	8017c54 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8017c40:	4601      	mov	r1, r0
 8017c42:	4668      	mov	r0, sp
 8017c44:	f7ff fe1a 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017c48:	f8bd 3000 	ldrh.w	r3, [sp]
 8017c4c:	8423      	strh	r3, [r4, #32]
 8017c4e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017c52:	8463      	strh	r3, [r4, #34]	; 0x22
 8017c54:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017c58:	b002      	add	sp, #8
 8017c5a:	bd10      	pop	{r4, pc}

08017c5c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017c5c:	b513      	push	{r0, r1, r4, lr}
 8017c5e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8017c62:	3301      	adds	r3, #1
 8017c64:	4604      	mov	r4, r0
 8017c66:	d109      	bne.n	8017c7c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017c68:	4601      	mov	r1, r0
 8017c6a:	4668      	mov	r0, sp
 8017c6c:	f7ff fe06 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017c70:	f8bd 3000 	ldrh.w	r3, [sp]
 8017c74:	8423      	strh	r3, [r4, #32]
 8017c76:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017c7a:	8463      	strh	r3, [r4, #34]	; 0x22
 8017c7c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8017c80:	b002      	add	sp, #8
 8017c82:	bd10      	pop	{r4, pc}

08017c84 <_ZN8touchgfx6ScreenC1Ev>:
 8017c84:	b570      	push	{r4, r5, r6, lr}
 8017c86:	4605      	mov	r5, r0
 8017c88:	4b16      	ldr	r3, [pc, #88]	; (8017ce4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017c8a:	f845 3b04 	str.w	r3, [r5], #4
 8017c8e:	2300      	movs	r3, #0
 8017c90:	8103      	strh	r3, [r0, #8]
 8017c92:	8143      	strh	r3, [r0, #10]
 8017c94:	8183      	strh	r3, [r0, #12]
 8017c96:	81c3      	strh	r3, [r0, #14]
 8017c98:	8203      	strh	r3, [r0, #16]
 8017c9a:	8243      	strh	r3, [r0, #18]
 8017c9c:	8283      	strh	r3, [r0, #20]
 8017c9e:	82c3      	strh	r3, [r0, #22]
 8017ca0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017ca4:	6203      	str	r3, [r0, #32]
 8017ca6:	8483      	strh	r3, [r0, #36]	; 0x24
 8017ca8:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017caa:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8017cae:	4a0e      	ldr	r2, [pc, #56]	; (8017ce8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8017cb0:	6343      	str	r3, [r0, #52]	; 0x34
 8017cb2:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8017cb6:	4b0d      	ldr	r3, [pc, #52]	; (8017cec <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017cb8:	6042      	str	r2, [r0, #4]
 8017cba:	f9b3 6000 	ldrsh.w	r6, [r3]
 8017cbe:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8017cc0:	4a0b      	ldr	r2, [pc, #44]	; (8017cf0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8017cc2:	4604      	mov	r4, r0
 8017cc4:	2101      	movs	r1, #1
 8017cc6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8017cca:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8017cce:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017cd2:	4628      	mov	r0, r5
 8017cd4:	4798      	blx	r3
 8017cd6:	6863      	ldr	r3, [r4, #4]
 8017cd8:	4628      	mov	r0, r5
 8017cda:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017cdc:	4631      	mov	r1, r6
 8017cde:	4798      	blx	r3
 8017ce0:	4620      	mov	r0, r4
 8017ce2:	bd70      	pop	{r4, r5, r6, pc}
 8017ce4:	0802c118 	.word	0x0802c118
 8017ce8:	0802ba40 	.word	0x0802ba40
 8017cec:	2002598e 	.word	0x2002598e
 8017cf0:	2002598c 	.word	0x2002598c

08017cf4 <_ZN8touchgfx6Screen4drawEv>:
 8017cf4:	b507      	push	{r0, r1, r2, lr}
 8017cf6:	4b09      	ldr	r3, [pc, #36]	; (8017d1c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017cf8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017cfc:	4b08      	ldr	r3, [pc, #32]	; (8017d20 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8017cfe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017d02:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017d06:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017d0a:	6803      	ldr	r3, [r0, #0]
 8017d0c:	2100      	movs	r1, #0
 8017d0e:	9100      	str	r1, [sp, #0]
 8017d10:	689b      	ldr	r3, [r3, #8]
 8017d12:	4669      	mov	r1, sp
 8017d14:	4798      	blx	r3
 8017d16:	b003      	add	sp, #12
 8017d18:	f85d fb04 	ldr.w	pc, [sp], #4
 8017d1c:	2002598c 	.word	0x2002598c
 8017d20:	2002598e 	.word	0x2002598e

08017d24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d28:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017d2c:	2b00      	cmp	r3, #0
 8017d2e:	b089      	sub	sp, #36	; 0x24
 8017d30:	4680      	mov	r8, r0
 8017d32:	460c      	mov	r4, r1
 8017d34:	4615      	mov	r5, r2
 8017d36:	dd0e      	ble.n	8017d56 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017d38:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017d3c:	2b00      	cmp	r3, #0
 8017d3e:	dd0a      	ble.n	8017d56 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017d40:	4628      	mov	r0, r5
 8017d42:	f7ff ff5b 	bl	8017bfc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017d46:	4621      	mov	r1, r4
 8017d48:	f7fe fb5e 	bl	8016408 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017d4c:	69eb      	ldr	r3, [r5, #28]
 8017d4e:	b928      	cbnz	r0, 8017d5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8017d50:	461d      	mov	r5, r3
 8017d52:	2b00      	cmp	r3, #0
 8017d54:	d1f4      	bne.n	8017d40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017d56:	b009      	add	sp, #36	; 0x24
 8017d58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d5c:	ae04      	add	r6, sp, #16
 8017d5e:	2b00      	cmp	r3, #0
 8017d60:	f000 80b5 	beq.w	8017ece <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017d64:	682b      	ldr	r3, [r5, #0]
 8017d66:	4629      	mov	r1, r5
 8017d68:	68db      	ldr	r3, [r3, #12]
 8017d6a:	a802      	add	r0, sp, #8
 8017d6c:	4798      	blx	r3
 8017d6e:	4628      	mov	r0, r5
 8017d70:	f7ff ff60 	bl	8017c34 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017d74:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017d78:	4407      	add	r7, r0
 8017d7a:	4628      	mov	r0, r5
 8017d7c:	f7ff ff6e 	bl	8017c5c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017d80:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017d84:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017d88:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017d8c:	4418      	add	r0, r3
 8017d8e:	4621      	mov	r1, r4
 8017d90:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017d94:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017d98:	b23f      	sxth	r7, r7
 8017d9a:	4630      	mov	r0, r6
 8017d9c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017da0:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017da4:	f7fb f930 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8017da8:	4628      	mov	r0, r5
 8017daa:	f7ff ff27 	bl	8017bfc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017dae:	4602      	mov	r2, r0
 8017db0:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017db4:	ab06      	add	r3, sp, #24
 8017db6:	e883 0003 	stmia.w	r3, {r0, r1}
 8017dba:	4611      	mov	r1, r2
 8017dbc:	4618      	mov	r0, r3
 8017dbe:	f7fb f923 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8017dc2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017dc6:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017dca:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8017dce:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8017dd2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8017dd6:	4299      	cmp	r1, r3
 8017dd8:	d10b      	bne.n	8017df2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017dda:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017dde:	4552      	cmp	r2, sl
 8017de0:	d107      	bne.n	8017df2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017de2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017de6:	455a      	cmp	r2, fp
 8017de8:	d103      	bne.n	8017df2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017dea:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017dee:	454a      	cmp	r2, r9
 8017df0:	d06d      	beq.n	8017ece <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017df2:	f1bb 0f00 	cmp.w	fp, #0
 8017df6:	dd65      	ble.n	8017ec4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017df8:	f1b9 0f00 	cmp.w	r9, #0
 8017dfc:	dd62      	ble.n	8017ec4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017dfe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017e02:	fa1f f08a 	uxth.w	r0, sl
 8017e06:	4552      	cmp	r2, sl
 8017e08:	9000      	str	r0, [sp, #0]
 8017e0a:	da12      	bge.n	8017e32 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017e0c:	9301      	str	r3, [sp, #4]
 8017e0e:	9b00      	ldr	r3, [sp, #0]
 8017e10:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017e14:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017e18:	1a9a      	subs	r2, r3, r2
 8017e1a:	f8ad 1010 	strh.w	r1, [sp, #16]
 8017e1e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017e22:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017e26:	69ea      	ldr	r2, [r5, #28]
 8017e28:	4631      	mov	r1, r6
 8017e2a:	4640      	mov	r0, r8
 8017e2c:	f7ff ff7a 	bl	8017d24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017e30:	9b01      	ldr	r3, [sp, #4]
 8017e32:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017e36:	429a      	cmp	r2, r3
 8017e38:	b29f      	uxth	r7, r3
 8017e3a:	da0d      	bge.n	8017e58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017e3c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017e40:	1aba      	subs	r2, r7, r2
 8017e42:	f8ad a012 	strh.w	sl, [sp, #18]
 8017e46:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017e4a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017e4e:	69ea      	ldr	r2, [r5, #28]
 8017e50:	4631      	mov	r1, r6
 8017e52:	4640      	mov	r0, r8
 8017e54:	f7ff ff66 	bl	8017d24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017e58:	8822      	ldrh	r2, [r4, #0]
 8017e5a:	88a3      	ldrh	r3, [r4, #4]
 8017e5c:	445f      	add	r7, fp
 8017e5e:	4413      	add	r3, r2
 8017e60:	b29b      	uxth	r3, r3
 8017e62:	b2bf      	uxth	r7, r7
 8017e64:	b23a      	sxth	r2, r7
 8017e66:	b219      	sxth	r1, r3
 8017e68:	4291      	cmp	r1, r2
 8017e6a:	dd0d      	ble.n	8017e88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017e6c:	1bdb      	subs	r3, r3, r7
 8017e6e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017e72:	f8ad a012 	strh.w	sl, [sp, #18]
 8017e76:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017e7a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017e7e:	69ea      	ldr	r2, [r5, #28]
 8017e80:	4631      	mov	r1, r6
 8017e82:	4640      	mov	r0, r8
 8017e84:	f7ff ff4e 	bl	8017d24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017e88:	88e2      	ldrh	r2, [r4, #6]
 8017e8a:	8863      	ldrh	r3, [r4, #2]
 8017e8c:	4413      	add	r3, r2
 8017e8e:	9a00      	ldr	r2, [sp, #0]
 8017e90:	444a      	add	r2, r9
 8017e92:	b29b      	uxth	r3, r3
 8017e94:	fa1f f982 	uxth.w	r9, r2
 8017e98:	fa0f f289 	sxth.w	r2, r9
 8017e9c:	b219      	sxth	r1, r3
 8017e9e:	428a      	cmp	r2, r1
 8017ea0:	da15      	bge.n	8017ece <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017ea2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017ea6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017eaa:	f8ad 1014 	strh.w	r1, [sp, #20]
 8017eae:	eba3 0309 	sub.w	r3, r3, r9
 8017eb2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017eb6:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017eba:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017ebe:	69ea      	ldr	r2, [r5, #28]
 8017ec0:	4631      	mov	r1, r6
 8017ec2:	e001      	b.n	8017ec8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017ec4:	69ea      	ldr	r2, [r5, #28]
 8017ec6:	4621      	mov	r1, r4
 8017ec8:	4640      	mov	r0, r8
 8017eca:	f7ff ff2b 	bl	8017d24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017ece:	4628      	mov	r0, r5
 8017ed0:	f7ff fe94 	bl	8017bfc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017ed4:	6861      	ldr	r1, [r4, #4]
 8017ed6:	4602      	mov	r2, r0
 8017ed8:	6820      	ldr	r0, [r4, #0]
 8017eda:	4633      	mov	r3, r6
 8017edc:	c303      	stmia	r3!, {r0, r1}
 8017ede:	4611      	mov	r1, r2
 8017ee0:	4630      	mov	r0, r6
 8017ee2:	f7fb f891 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8017ee6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017eea:	2b00      	cmp	r3, #0
 8017eec:	f77f af33 	ble.w	8017d56 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017ef0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017ef4:	2b00      	cmp	r3, #0
 8017ef6:	f77f af2e 	ble.w	8017d56 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017efa:	4628      	mov	r0, r5
 8017efc:	f7ff fe9a 	bl	8017c34 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017f00:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017f04:	1a18      	subs	r0, r3, r0
 8017f06:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017f0a:	4628      	mov	r0, r5
 8017f0c:	f7ff fea6 	bl	8017c5c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017f10:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017f14:	1a18      	subs	r0, r3, r0
 8017f16:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017f1a:	682b      	ldr	r3, [r5, #0]
 8017f1c:	4631      	mov	r1, r6
 8017f1e:	689b      	ldr	r3, [r3, #8]
 8017f20:	4628      	mov	r0, r5
 8017f22:	4798      	blx	r3
 8017f24:	e717      	b.n	8017d56 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017f26 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017f26:	b570      	push	{r4, r5, r6, lr}
 8017f28:	460c      	mov	r4, r1
 8017f2a:	b086      	sub	sp, #24
 8017f2c:	1d06      	adds	r6, r0, #4
 8017f2e:	2300      	movs	r3, #0
 8017f30:	4631      	mov	r1, r6
 8017f32:	4605      	mov	r5, r0
 8017f34:	a802      	add	r0, sp, #8
 8017f36:	9301      	str	r3, [sp, #4]
 8017f38:	f7ff fca0 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017f3c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017f40:	8822      	ldrh	r2, [r4, #0]
 8017f42:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017f46:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017f4a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017f4e:	1ad2      	subs	r2, r2, r3
 8017f50:	8863      	ldrh	r3, [r4, #2]
 8017f52:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017f56:	1a5b      	subs	r3, r3, r1
 8017f58:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017f5c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8017f60:	aa01      	add	r2, sp, #4
 8017f62:	a904      	add	r1, sp, #16
 8017f64:	4630      	mov	r0, r6
 8017f66:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017f6a:	f7fb f925 	bl	80131b8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8017f6e:	9a01      	ldr	r2, [sp, #4]
 8017f70:	b11a      	cbz	r2, 8017f7a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8017f72:	4621      	mov	r1, r4
 8017f74:	4628      	mov	r0, r5
 8017f76:	f7ff fed5 	bl	8017d24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017f7a:	b006      	add	sp, #24
 8017f7c:	bd70      	pop	{r4, r5, r6, pc}

08017f7e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8017f7e:	b530      	push	{r4, r5, lr}
 8017f80:	4602      	mov	r2, r0
 8017f82:	4604      	mov	r4, r0
 8017f84:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017f88:	b085      	sub	sp, #20
 8017f8a:	460d      	mov	r5, r1
 8017f8c:	6851      	ldr	r1, [r2, #4]
 8017f8e:	466b      	mov	r3, sp
 8017f90:	c303      	stmia	r3!, {r0, r1}
 8017f92:	4629      	mov	r1, r5
 8017f94:	4668      	mov	r0, sp
 8017f96:	f7fb f837 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 8017f9a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8017f9e:	b12b      	cbz	r3, 8017fac <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8017fa0:	4669      	mov	r1, sp
 8017fa2:	4620      	mov	r0, r4
 8017fa4:	f7ff ffbf 	bl	8017f26 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8017fa8:	b005      	add	sp, #20
 8017faa:	bd30      	pop	{r4, r5, pc}
 8017fac:	3404      	adds	r4, #4
 8017fae:	4621      	mov	r1, r4
 8017fb0:	a802      	add	r0, sp, #8
 8017fb2:	f7ff fc63 	bl	801787c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017fb6:	f8bd 3000 	ldrh.w	r3, [sp]
 8017fba:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8017fbe:	1a9b      	subs	r3, r3, r2
 8017fc0:	f8ad 3000 	strh.w	r3, [sp]
 8017fc4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017fc8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017fcc:	4669      	mov	r1, sp
 8017fce:	1a9b      	subs	r3, r3, r2
 8017fd0:	4620      	mov	r0, r4
 8017fd2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017fd6:	f7fb f8b6 	bl	8013146 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017fda:	e7e5      	b.n	8017fa8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017fdc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017fdc:	680a      	ldr	r2, [r1, #0]
 8017fde:	460b      	mov	r3, r1
 8017fe0:	6992      	ldr	r2, [r2, #24]
 8017fe2:	1d01      	adds	r1, r0, #4
 8017fe4:	4618      	mov	r0, r3
 8017fe6:	4710      	bx	r2

08017fe8 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8017fe8:	4298      	cmp	r0, r3
 8017fea:	d200      	bcs.n	8017fee <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8017fec:	b913      	cbnz	r3, 8017ff4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017fee:	440a      	add	r2, r1
 8017ff0:	b210      	sxth	r0, r2
 8017ff2:	4770      	bx	lr
 8017ff4:	ee07 2a90 	vmov	s15, r2
 8017ff8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017ffc:	ee07 0a90 	vmov	s15, r0
 8018000:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8018004:	ee67 7a27 	vmul.f32	s15, s14, s15
 8018008:	ee07 3a10 	vmov	s14, r3
 801800c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8018010:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018014:	ee07 1a90 	vmov	s15, r1
 8018018:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801801c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018020:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018024:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801802c:	bfcc      	ite	gt
 801802e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018032:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018036:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801803a:	ee17 3a90 	vmov	r3, s15
 801803e:	b218      	sxth	r0, r3
 8018040:	4770      	bx	lr

08018042 <_ZN8touchgfx15EasingEquations13linearEaseOutEtsst>:
 8018042:	f7ff bfd1 	b.w	8017fe8 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

08018046 <_ZN8touchgfx15EasingEquations11quadEaseOutEtsst>:
 8018046:	4298      	cmp	r0, r3
 8018048:	d200      	bcs.n	801804c <_ZN8touchgfx15EasingEquations11quadEaseOutEtsst+0x6>
 801804a:	b913      	cbnz	r3, 8018052 <_ZN8touchgfx15EasingEquations11quadEaseOutEtsst+0xc>
 801804c:	1888      	adds	r0, r1, r2
 801804e:	b200      	sxth	r0, r0
 8018050:	4770      	bx	lr
 8018052:	ee07 0a90 	vmov	s15, r0
 8018056:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 801805a:	ee07 3a90 	vmov	s15, r3
 801805e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018062:	4253      	negs	r3, r2
 8018064:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018068:	ee07 3a10 	vmov	s14, r3
 801806c:	ee07 1a90 	vmov	s15, r1
 8018070:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018074:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 8018078:	ee27 7a26 	vmul.f32	s14, s14, s13
 801807c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018080:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8018084:	eee7 7a26 	vfma.f32	s15, s14, s13
 8018088:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801808c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018090:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018094:	bfcc      	ite	gt
 8018096:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801809a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801809e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80180a2:	ee17 3a90 	vmov	r3, s15
 80180a6:	b218      	sxth	r0, r3
 80180a8:	4770      	bx	lr

080180aa <_ZN8touchgfx12TextProviderC1Ev>:
 80180aa:	b538      	push	{r3, r4, r5, lr}
 80180ac:	2500      	movs	r5, #0
 80180ae:	2302      	movs	r3, #2
 80180b0:	4604      	mov	r4, r0
 80180b2:	e9c0 5500 	strd	r5, r5, [r0]
 80180b6:	7403      	strb	r3, [r0, #16]
 80180b8:	6145      	str	r5, [r0, #20]
 80180ba:	7605      	strb	r5, [r0, #24]
 80180bc:	83c5      	strh	r5, [r0, #30]
 80180be:	8405      	strh	r5, [r0, #32]
 80180c0:	86c5      	strh	r5, [r0, #54]	; 0x36
 80180c2:	8705      	strh	r5, [r0, #56]	; 0x38
 80180c4:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80180c6:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80180ca:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80180ce:	220e      	movs	r2, #14
 80180d0:	4629      	mov	r1, r5
 80180d2:	304c      	adds	r0, #76	; 0x4c
 80180d4:	f011 f8cd 	bl	8029272 <memset>
 80180d8:	2301      	movs	r3, #1
 80180da:	4620      	mov	r0, r4
 80180dc:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80180e0:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80180e4:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80180e8:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80180ec:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80180f0:	f7f8 fcfc 	bl	8010aec <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80180f4:	4620      	mov	r0, r4
 80180f6:	bd38      	pop	{r3, r4, r5, pc}

080180f8 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80180f8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80180fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80180fe:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8018100:	fab0 f080 	clz	r0, r0
 8018104:	0940      	lsrs	r0, r0, #5
 8018106:	4770      	bx	lr

08018108 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8018108:	b530      	push	{r4, r5, lr}
 801810a:	2500      	movs	r5, #0
 801810c:	2401      	movs	r4, #1
 801810e:	6843      	ldr	r3, [r0, #4]
 8018110:	b913      	cbnz	r3, 8018118 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8018112:	6803      	ldr	r3, [r0, #0]
 8018114:	b313      	cbz	r3, 801815c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018116:	6043      	str	r3, [r0, #4]
 8018118:	7e03      	ldrb	r3, [r0, #24]
 801811a:	b143      	cbz	r3, 801812e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801811c:	6943      	ldr	r3, [r0, #20]
 801811e:	b12b      	cbz	r3, 801812c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018120:	881a      	ldrh	r2, [r3, #0]
 8018122:	b11a      	cbz	r2, 801812c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018124:	1c9a      	adds	r2, r3, #2
 8018126:	6142      	str	r2, [r0, #20]
 8018128:	8818      	ldrh	r0, [r3, #0]
 801812a:	bd30      	pop	{r4, r5, pc}
 801812c:	7605      	strb	r5, [r0, #24]
 801812e:	6843      	ldr	r3, [r0, #4]
 8018130:	8819      	ldrh	r1, [r3, #0]
 8018132:	b199      	cbz	r1, 801815c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018134:	1c9a      	adds	r2, r3, #2
 8018136:	2902      	cmp	r1, #2
 8018138:	6042      	str	r2, [r0, #4]
 801813a:	d1f5      	bne.n	8018128 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801813c:	7c03      	ldrb	r3, [r0, #16]
 801813e:	2b01      	cmp	r3, #1
 8018140:	d8e5      	bhi.n	801810e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018142:	1c5a      	adds	r2, r3, #1
 8018144:	3302      	adds	r3, #2
 8018146:	7402      	strb	r2, [r0, #16]
 8018148:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801814c:	6143      	str	r3, [r0, #20]
 801814e:	2b00      	cmp	r3, #0
 8018150:	d0dd      	beq.n	801810e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018152:	881b      	ldrh	r3, [r3, #0]
 8018154:	2b00      	cmp	r3, #0
 8018156:	d0da      	beq.n	801810e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018158:	7604      	strb	r4, [r0, #24]
 801815a:	e7d8      	b.n	801810e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801815c:	2000      	movs	r0, #0
 801815e:	e7e4      	b.n	801812a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018160 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018160:	b430      	push	{r4, r5}
 8018162:	6001      	str	r1, [r0, #0]
 8018164:	2100      	movs	r1, #0
 8018166:	6041      	str	r1, [r0, #4]
 8018168:	6815      	ldr	r5, [r2, #0]
 801816a:	6085      	str	r5, [r0, #8]
 801816c:	6852      	ldr	r2, [r2, #4]
 801816e:	6443      	str	r3, [r0, #68]	; 0x44
 8018170:	9b02      	ldr	r3, [sp, #8]
 8018172:	60c2      	str	r2, [r0, #12]
 8018174:	7401      	strb	r1, [r0, #16]
 8018176:	6141      	str	r1, [r0, #20]
 8018178:	7601      	strb	r1, [r0, #24]
 801817a:	8701      	strh	r1, [r0, #56]	; 0x38
 801817c:	8401      	strh	r1, [r0, #32]
 801817e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018182:	6483      	str	r3, [r0, #72]	; 0x48
 8018184:	bc30      	pop	{r4, r5}
 8018186:	f7f8 bcb1 	b.w	8010aec <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801818a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801818a:	b408      	push	{r3}
 801818c:	b510      	push	{r4, lr}
 801818e:	b085      	sub	sp, #20
 8018190:	ac07      	add	r4, sp, #28
 8018192:	f854 3b04 	ldr.w	r3, [r4], #4
 8018196:	9300      	str	r3, [sp, #0]
 8018198:	4613      	mov	r3, r2
 801819a:	4622      	mov	r2, r4
 801819c:	9403      	str	r4, [sp, #12]
 801819e:	f7ff ffdf 	bl	8018160 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80181a2:	b005      	add	sp, #20
 80181a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80181a8:	b001      	add	sp, #4
 80181aa:	4770      	bx	lr

080181ac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80181ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80181ae:	4605      	mov	r5, r0
 80181b0:	4608      	mov	r0, r1
 80181b2:	b1e9      	cbz	r1, 80181f0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80181b4:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80181b8:	460b      	mov	r3, r1
 80181ba:	f101 0708 	add.w	r7, r1, #8
 80181be:	4622      	mov	r2, r4
 80181c0:	6818      	ldr	r0, [r3, #0]
 80181c2:	6859      	ldr	r1, [r3, #4]
 80181c4:	4626      	mov	r6, r4
 80181c6:	c603      	stmia	r6!, {r0, r1}
 80181c8:	3308      	adds	r3, #8
 80181ca:	42bb      	cmp	r3, r7
 80181cc:	4634      	mov	r4, r6
 80181ce:	d1f7      	bne.n	80181c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80181d0:	6818      	ldr	r0, [r3, #0]
 80181d2:	6030      	str	r0, [r6, #0]
 80181d4:	889b      	ldrh	r3, [r3, #4]
 80181d6:	80b3      	strh	r3, [r6, #4]
 80181d8:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80181dc:	015b      	lsls	r3, r3, #5
 80181de:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80181e2:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80181e6:	430b      	orrs	r3, r1
 80181e8:	425b      	negs	r3, r3
 80181ea:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80181ee:	4610      	mov	r0, r2
 80181f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080181f2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80181f2:	b538      	push	{r3, r4, r5, lr}
 80181f4:	460c      	mov	r4, r1
 80181f6:	6811      	ldr	r1, [r2, #0]
 80181f8:	4610      	mov	r0, r2
 80181fa:	68cd      	ldr	r5, [r1, #12]
 80181fc:	4619      	mov	r1, r3
 80181fe:	47a8      	blx	r5
 8018200:	2800      	cmp	r0, #0
 8018202:	bf08      	it	eq
 8018204:	4620      	moveq	r0, r4
 8018206:	bd38      	pop	{r3, r4, r5, pc}

08018208 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018208:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801820a:	4604      	mov	r4, r0
 801820c:	4615      	mov	r5, r2
 801820e:	4608      	mov	r0, r1
 8018210:	b93a      	cbnz	r2, 8018222 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8018212:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018216:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801821a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801821e:	4628      	mov	r0, r5
 8018220:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018222:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8018226:	8893      	ldrh	r3, [r2, #4]
 8018228:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801822c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018230:	79ee      	ldrb	r6, [r5, #7]
 8018232:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8018236:	4316      	orrs	r6, r2
 8018238:	19da      	adds	r2, r3, r7
 801823a:	b291      	uxth	r1, r2
 801823c:	291d      	cmp	r1, #29
 801823e:	b2b7      	uxth	r7, r6
 8018240:	d87a      	bhi.n	8018338 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018242:	2201      	movs	r2, #1
 8018244:	408a      	lsls	r2, r1
 8018246:	4975      	ldr	r1, [pc, #468]	; (801841c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8018248:	420a      	tst	r2, r1
 801824a:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801824e:	d12d      	bne.n	80182ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8018250:	f412 7f60 	tst.w	r2, #896	; 0x380
 8018254:	d070      	beq.n	8018338 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018256:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801825a:	462b      	mov	r3, r5
 801825c:	f105 0e08 	add.w	lr, r5, #8
 8018260:	4615      	mov	r5, r2
 8018262:	6818      	ldr	r0, [r3, #0]
 8018264:	6859      	ldr	r1, [r3, #4]
 8018266:	4694      	mov	ip, r2
 8018268:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801826c:	3308      	adds	r3, #8
 801826e:	4573      	cmp	r3, lr
 8018270:	4662      	mov	r2, ip
 8018272:	d1f6      	bne.n	8018262 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8018274:	6818      	ldr	r0, [r3, #0]
 8018276:	f8cc 0000 	str.w	r0, [ip]
 801827a:	889b      	ldrh	r3, [r3, #4]
 801827c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018280:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8018284:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8018288:	b2b3      	uxth	r3, r6
 801828a:	1aca      	subs	r2, r1, r3
 801828c:	b292      	uxth	r2, r2
 801828e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8018292:	10d2      	asrs	r2, r2, #3
 8018294:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8018298:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801829c:	4302      	orrs	r2, r0
 801829e:	1bcf      	subs	r7, r1, r7
 80182a0:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80182a4:	1afb      	subs	r3, r7, r3
 80182a6:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80182aa:	e7b8      	b.n	801821e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80182ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80182ae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80182b2:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80182b4:	f640 6333 	movw	r3, #3635	; 0xe33
 80182b8:	4299      	cmp	r1, r3
 80182ba:	d110      	bne.n	80182de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80182bc:	6803      	ldr	r3, [r0, #0]
 80182be:	68db      	ldr	r3, [r3, #12]
 80182c0:	4798      	blx	r3
 80182c2:	7b41      	ldrb	r1, [r0, #13]
 80182c4:	00cb      	lsls	r3, r1, #3
 80182c6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80182ca:	7a03      	ldrb	r3, [r0, #8]
 80182cc:	0648      	lsls	r0, r1, #25
 80182ce:	ea43 0302 	orr.w	r3, r3, r2
 80182d2:	bf44      	itt	mi
 80182d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80182d8:	b21b      	sxthmi	r3, r3
 80182da:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80182de:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80182e2:	443b      	add	r3, r7
 80182e4:	4433      	add	r3, r6
 80182e6:	b29b      	uxth	r3, r3
 80182e8:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80182ec:	462a      	mov	r2, r5
 80182ee:	f105 0c08 	add.w	ip, r5, #8
 80182f2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80182f6:	4635      	mov	r5, r6
 80182f8:	6810      	ldr	r0, [r2, #0]
 80182fa:	6851      	ldr	r1, [r2, #4]
 80182fc:	4637      	mov	r7, r6
 80182fe:	c703      	stmia	r7!, {r0, r1}
 8018300:	3208      	adds	r2, #8
 8018302:	4562      	cmp	r2, ip
 8018304:	463e      	mov	r6, r7
 8018306:	d1f7      	bne.n	80182f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8018308:	6810      	ldr	r0, [r2, #0]
 801830a:	6038      	str	r0, [r7, #0]
 801830c:	8892      	ldrh	r2, [r2, #4]
 801830e:	80ba      	strh	r2, [r7, #4]
 8018310:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018314:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018318:	10db      	asrs	r3, r3, #3
 801831a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801831e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018322:	4313      	orrs	r3, r2
 8018324:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018328:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801832c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8018330:	1a9b      	subs	r3, r3, r2
 8018332:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8018336:	e772      	b.n	801821e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018338:	f023 0204 	bic.w	r2, r3, #4
 801833c:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018340:	428a      	cmp	r2, r1
 8018342:	d003      	beq.n	801834c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8018344:	f640 621d 	movw	r2, #3613	; 0xe1d
 8018348:	4293      	cmp	r3, r2
 801834a:	d120      	bne.n	801838e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801834c:	3b01      	subs	r3, #1
 801834e:	4602      	mov	r2, r0
 8018350:	b29b      	uxth	r3, r3
 8018352:	4629      	mov	r1, r5
 8018354:	4620      	mov	r0, r4
 8018356:	f7ff ff4c 	bl	80181f2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801835a:	7b41      	ldrb	r1, [r0, #13]
 801835c:	00cb      	lsls	r3, r1, #3
 801835e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018362:	7a03      	ldrb	r3, [r0, #8]
 8018364:	0649      	lsls	r1, r1, #25
 8018366:	ea43 0302 	orr.w	r3, r3, r2
 801836a:	bf44      	itt	mi
 801836c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018370:	b21b      	sxthmi	r3, r3
 8018372:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018376:	7b6b      	ldrb	r3, [r5, #13]
 8018378:	7aaa      	ldrb	r2, [r5, #10]
 801837a:	005b      	lsls	r3, r3, #1
 801837c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018380:	4313      	orrs	r3, r2
 8018382:	115a      	asrs	r2, r3, #5
 8018384:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018388:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801838c:	e036      	b.n	80183fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801838e:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8018392:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8018396:	7a2a      	ldrb	r2, [r5, #8]
 8018398:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801839c:	ea42 0201 	orr.w	r2, r2, r1
 80183a0:	bf1c      	itt	ne
 80183a2:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80183a6:	b212      	sxthne	r2, r2
 80183a8:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80183ac:	f640 6109 	movw	r1, #3593	; 0xe09
 80183b0:	f023 0210 	bic.w	r2, r3, #16
 80183b4:	428a      	cmp	r2, r1
 80183b6:	d003      	beq.n	80183c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80183b8:	f640 6213 	movw	r2, #3603	; 0xe13
 80183bc:	4293      	cmp	r3, r2
 80183be:	d12a      	bne.n	8018416 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80183c0:	7b6e      	ldrb	r6, [r5, #13]
 80183c2:	0076      	lsls	r6, r6, #1
 80183c4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80183c8:	7aae      	ldrb	r6, [r5, #10]
 80183ca:	4316      	orrs	r6, r2
 80183cc:	f640 6213 	movw	r2, #3603	; 0xe13
 80183d0:	4293      	cmp	r3, r2
 80183d2:	bf18      	it	ne
 80183d4:	f103 33ff 	addne.w	r3, r3, #4294967295
 80183d8:	4602      	mov	r2, r0
 80183da:	bf14      	ite	ne
 80183dc:	b29b      	uxthne	r3, r3
 80183de:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80183e2:	4629      	mov	r1, r5
 80183e4:	4620      	mov	r0, r4
 80183e6:	f7ff ff04 	bl	80181f2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80183ea:	7b43      	ldrb	r3, [r0, #13]
 80183ec:	7a82      	ldrb	r2, [r0, #10]
 80183ee:	005b      	lsls	r3, r3, #1
 80183f0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80183f4:	4313      	orrs	r3, r2
 80183f6:	1af6      	subs	r6, r6, r3
 80183f8:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80183fc:	7b69      	ldrb	r1, [r5, #13]
 80183fe:	00cb      	lsls	r3, r1, #3
 8018400:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018404:	7a2b      	ldrb	r3, [r5, #8]
 8018406:	4313      	orrs	r3, r2
 8018408:	064a      	lsls	r2, r1, #25
 801840a:	bf44      	itt	mi
 801840c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018410:	b21b      	sxthmi	r3, r3
 8018412:	1bdb      	subs	r3, r3, r7
 8018414:	e747      	b.n	80182a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8018416:	2300      	movs	r3, #0
 8018418:	e7b6      	b.n	8018388 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801841a:	bf00      	nop
 801841c:	3fc00079 	.word	0x3fc00079

08018420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018420:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018424:	4604      	mov	r4, r0
 8018426:	b942      	cbnz	r2, 801843a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018428:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801842c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8018430:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8018434:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018438:	e047      	b.n	80184ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801843a:	7b51      	ldrb	r1, [r2, #13]
 801843c:	8893      	ldrh	r3, [r2, #4]
 801843e:	010d      	lsls	r5, r1, #4
 8018440:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8018444:	79d5      	ldrb	r5, [r2, #7]
 8018446:	4305      	orrs	r5, r0
 8018448:	2d04      	cmp	r5, #4
 801844a:	bfcc      	ite	gt
 801844c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8018450:	f04f 0e01 	movle.w	lr, #1
 8018454:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018458:	f200 80ab 	bhi.w	80185b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801845c:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8018460:	4283      	cmp	r3, r0
 8018462:	d216      	bcs.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018464:	f240 605b 	movw	r0, #1627	; 0x65b
 8018468:	4283      	cmp	r3, r0
 801846a:	d859      	bhi.n	8018520 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801846c:	f240 6057 	movw	r0, #1623	; 0x657
 8018470:	4283      	cmp	r3, r0
 8018472:	d20e      	bcs.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018474:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018478:	d24a      	bcs.n	8018510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801847a:	f240 604e 	movw	r0, #1614	; 0x64e
 801847e:	4283      	cmp	r3, r0
 8018480:	d207      	bcs.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018482:	f240 601a 	movw	r0, #1562	; 0x61a
 8018486:	4283      	cmp	r3, r0
 8018488:	d02a      	beq.n	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801848a:	d821      	bhi.n	80184d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801848c:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018490:	d35b      	bcc.n	801854a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018492:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018496:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801849a:	f040 80d0 	bne.w	801863e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801849e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80184a2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80184a6:	f040 80ca 	bne.w	801863e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80184aa:	00cb      	lsls	r3, r1, #3
 80184ac:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80184b0:	7a13      	ldrb	r3, [r2, #8]
 80184b2:	0649      	lsls	r1, r1, #25
 80184b4:	ea43 0300 	orr.w	r3, r3, r0
 80184b8:	bf44      	itt	mi
 80184ba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80184be:	b21b      	sxthmi	r3, r3
 80184c0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80184c4:	1b5d      	subs	r5, r3, r5
 80184c6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80184ca:	4610      	mov	r0, r2
 80184cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80184d0:	f240 604b 	movw	r0, #1611	; 0x64b
 80184d4:	4283      	cmp	r3, r0
 80184d6:	d338      	bcc.n	801854a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80184d8:	f240 604c 	movw	r0, #1612	; 0x64c
 80184dc:	4283      	cmp	r3, r0
 80184de:	d9d8      	bls.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80184e0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80184e4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80184e8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80184ec:	f040 80f2 	bne.w	80186d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80184f0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80184f4:	f040 80ee 	bne.w	80186d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80184f8:	00cb      	lsls	r3, r1, #3
 80184fa:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80184fe:	7a13      	ldrb	r3, [r2, #8]
 8018500:	064e      	lsls	r6, r1, #25
 8018502:	ea43 0300 	orr.w	r3, r3, r0
 8018506:	bf44      	itt	mi
 8018508:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801850c:	b21b      	sxthmi	r3, r3
 801850e:	e7d9      	b.n	80184c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8018510:	f240 6054 	movw	r0, #1620	; 0x654
 8018514:	4283      	cmp	r3, r0
 8018516:	d8e3      	bhi.n	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018518:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801851c:	d9e0      	bls.n	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801851e:	e7b8      	b.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018520:	f240 6074 	movw	r0, #1652	; 0x674
 8018524:	4283      	cmp	r3, r0
 8018526:	d0b4      	beq.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018528:	d82d      	bhi.n	8018586 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801852a:	f240 605e 	movw	r0, #1630	; 0x65e
 801852e:	4283      	cmp	r3, r0
 8018530:	d804      	bhi.n	801853c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8018532:	f240 605d 	movw	r0, #1629	; 0x65d
 8018536:	4283      	cmp	r3, r0
 8018538:	d3d2      	bcc.n	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801853a:	e7aa      	b.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801853c:	f240 605f 	movw	r0, #1631	; 0x65f
 8018540:	4283      	cmp	r3, r0
 8018542:	d0cd      	beq.n	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018544:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018548:	d0a3      	beq.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801854a:	00cb      	lsls	r3, r1, #3
 801854c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018550:	7a13      	ldrb	r3, [r2, #8]
 8018552:	0649      	lsls	r1, r1, #25
 8018554:	ea43 0300 	orr.w	r3, r3, r0
 8018558:	bf44      	itt	mi
 801855a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801855e:	b21b      	sxthmi	r3, r3
 8018560:	1b5d      	subs	r5, r3, r5
 8018562:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018566:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801856a:	7b53      	ldrb	r3, [r2, #13]
 801856c:	015b      	lsls	r3, r3, #5
 801856e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018572:	7993      	ldrb	r3, [r2, #6]
 8018574:	430b      	orrs	r3, r1
 8018576:	005b      	lsls	r3, r3, #1
 8018578:	2105      	movs	r1, #5
 801857a:	fb93 f3f1 	sdiv	r3, r3, r1
 801857e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018582:	440b      	add	r3, r1
 8018584:	e756      	b.n	8018434 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018586:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801858a:	4283      	cmp	r3, r0
 801858c:	d809      	bhi.n	80185a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801858e:	f240 60df 	movw	r0, #1759	; 0x6df
 8018592:	4283      	cmp	r3, r0
 8018594:	f4bf af7d 	bcs.w	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018598:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801859c:	2b05      	cmp	r3, #5
 801859e:	d8d4      	bhi.n	801854a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80185a0:	e777      	b.n	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80185a2:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80185a6:	4283      	cmp	r3, r0
 80185a8:	d09a      	beq.n	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80185aa:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80185ae:	4283      	cmp	r3, r0
 80185b0:	e7ca      	b.n	8018548 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80185b2:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80185b6:	d22b      	bcs.n	8018610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80185b8:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80185bc:	4283      	cmp	r3, r0
 80185be:	d28f      	bcs.n	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80185c0:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80185c4:	4283      	cmp	r3, r0
 80185c6:	d816      	bhi.n	80185f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80185c8:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80185cc:	4283      	cmp	r3, r0
 80185ce:	f4bf af60 	bcs.w	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80185d2:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80185d6:	4283      	cmp	r3, r0
 80185d8:	d80a      	bhi.n	80185f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80185da:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80185de:	4283      	cmp	r3, r0
 80185e0:	f4bf af57 	bcs.w	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80185e4:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80185e8:	4283      	cmp	r3, r0
 80185ea:	f43f af79 	beq.w	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80185ee:	e7ac      	b.n	801854a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80185f0:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80185f4:	e7f8      	b.n	80185e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80185f6:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80185fa:	4283      	cmp	r3, r0
 80185fc:	d802      	bhi.n	8018604 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80185fe:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8018602:	e798      	b.n	8018536 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018604:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018608:	4283      	cmp	r3, r0
 801860a:	f47f af42 	bne.w	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801860e:	e767      	b.n	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018610:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018614:	4283      	cmp	r3, r0
 8018616:	f43f af63 	beq.w	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801861a:	d802      	bhi.n	8018622 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801861c:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018620:	e7f2      	b.n	8018608 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018622:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018626:	4283      	cmp	r3, r0
 8018628:	d805      	bhi.n	8018636 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801862a:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801862e:	4283      	cmp	r3, r0
 8018630:	f4ff af2f 	bcc.w	8018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018634:	e754      	b.n	80184e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018636:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801863a:	4283      	cmp	r3, r0
 801863c:	e7af      	b.n	801859e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801863e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018642:	4617      	mov	r7, r2
 8018644:	f102 0808 	add.w	r8, r2, #8
 8018648:	4666      	mov	r6, ip
 801864a:	6838      	ldr	r0, [r7, #0]
 801864c:	6879      	ldr	r1, [r7, #4]
 801864e:	46e6      	mov	lr, ip
 8018650:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018654:	3708      	adds	r7, #8
 8018656:	4547      	cmp	r7, r8
 8018658:	46f4      	mov	ip, lr
 801865a:	d1f6      	bne.n	801864a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801865c:	6838      	ldr	r0, [r7, #0]
 801865e:	f8ce 0000 	str.w	r0, [lr]
 8018662:	88b9      	ldrh	r1, [r7, #4]
 8018664:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018668:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801866c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018670:	d009      	beq.n	8018686 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8018672:	7b51      	ldrb	r1, [r2, #13]
 8018674:	7992      	ldrb	r2, [r2, #6]
 8018676:	0149      	lsls	r1, r1, #5
 8018678:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801867c:	4311      	orrs	r1, r2
 801867e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018682:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018686:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801868a:	b2ad      	uxth	r5, r5
 801868c:	d00d      	beq.n	80186aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801868e:	442b      	add	r3, r5
 8018690:	b29b      	uxth	r3, r3
 8018692:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018696:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801869a:	10db      	asrs	r3, r3, #3
 801869c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80186a0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80186a4:	4313      	orrs	r3, r2
 80186a6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80186aa:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80186ae:	00cb      	lsls	r3, r1, #3
 80186b0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80186b4:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80186b8:	064f      	lsls	r7, r1, #25
 80186ba:	ea43 0302 	orr.w	r3, r3, r2
 80186be:	bf44      	itt	mi
 80186c0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80186c4:	b21b      	sxthmi	r3, r3
 80186c6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80186ca:	1b5b      	subs	r3, r3, r5
 80186cc:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80186d0:	4632      	mov	r2, r6
 80186d2:	e6fa      	b.n	80184ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80186d4:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80186d8:	4617      	mov	r7, r2
 80186da:	f102 0908 	add.w	r9, r2, #8
 80186de:	4666      	mov	r6, ip
 80186e0:	6838      	ldr	r0, [r7, #0]
 80186e2:	6879      	ldr	r1, [r7, #4]
 80186e4:	46e0      	mov	r8, ip
 80186e6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80186ea:	3708      	adds	r7, #8
 80186ec:	454f      	cmp	r7, r9
 80186ee:	46c4      	mov	ip, r8
 80186f0:	d1f6      	bne.n	80186e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80186f2:	6838      	ldr	r0, [r7, #0]
 80186f4:	f8c8 0000 	str.w	r0, [r8]
 80186f8:	88b9      	ldrh	r1, [r7, #4]
 80186fa:	f8a8 1004 	strh.w	r1, [r8, #4]
 80186fe:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018702:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018706:	d009      	beq.n	801871c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018708:	7b51      	ldrb	r1, [r2, #13]
 801870a:	7992      	ldrb	r2, [r2, #6]
 801870c:	0149      	lsls	r1, r1, #5
 801870e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018712:	4311      	orrs	r1, r2
 8018714:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018718:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801871c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018720:	d00e      	beq.n	8018740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8018722:	eba3 030e 	sub.w	r3, r3, lr
 8018726:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801872a:	b29b      	uxth	r3, r3
 801872c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018730:	10db      	asrs	r3, r3, #3
 8018732:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018736:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801873a:	4313      	orrs	r3, r2
 801873c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018740:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018744:	00cb      	lsls	r3, r1, #3
 8018746:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801874a:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801874e:	0648      	lsls	r0, r1, #25
 8018750:	ea43 0302 	orr.w	r3, r3, r2
 8018754:	bf44      	itt	mi
 8018756:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801875a:	b21b      	sxthmi	r3, r3
 801875c:	1b5d      	subs	r5, r3, r5
 801875e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018762:	e7b5      	b.n	80186d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08018764 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018764:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018768:	461e      	mov	r6, r3
 801876a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801876c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018770:	4604      	mov	r4, r0
 8018772:	4617      	mov	r7, r2
 8018774:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018778:	f7f8 f912 	bl	80109a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801877c:	4605      	mov	r5, r0
 801877e:	b918      	cbnz	r0, 8018788 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8018780:	6030      	str	r0, [r6, #0]
 8018782:	4628      	mov	r0, r5
 8018784:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018788:	683b      	ldr	r3, [r7, #0]
 801878a:	4601      	mov	r1, r0
 801878c:	68db      	ldr	r3, [r3, #12]
 801878e:	4638      	mov	r0, r7
 8018790:	4798      	blx	r3
 8018792:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018796:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801879a:	4602      	mov	r2, r0
 801879c:	6030      	str	r0, [r6, #0]
 801879e:	d213      	bcs.n	80187c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80187a0:	4643      	mov	r3, r8
 80187a2:	4639      	mov	r1, r7
 80187a4:	4620      	mov	r0, r4
 80187a6:	f7ff fe3b 	bl	8018420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80187aa:	6030      	str	r0, [r6, #0]
 80187ac:	6833      	ldr	r3, [r6, #0]
 80187ae:	b143      	cbz	r3, 80187c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80187b0:	7b5a      	ldrb	r2, [r3, #13]
 80187b2:	7a9b      	ldrb	r3, [r3, #10]
 80187b4:	0052      	lsls	r2, r2, #1
 80187b6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80187ba:	4313      	orrs	r3, r2
 80187bc:	bf0c      	ite	eq
 80187be:	2301      	moveq	r3, #1
 80187c0:	2300      	movne	r3, #0
 80187c2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80187c6:	e7dc      	b.n	8018782 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80187c8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80187cc:	b29b      	uxth	r3, r3
 80187ce:	2b7f      	cmp	r3, #127	; 0x7f
 80187d0:	d804      	bhi.n	80187dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80187d2:	4639      	mov	r1, r7
 80187d4:	4620      	mov	r0, r4
 80187d6:	f7ff fd17 	bl	8018208 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80187da:	e7e6      	b.n	80187aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80187dc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80187e0:	2b00      	cmp	r3, #0
 80187e2:	d0e3      	beq.n	80187ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80187e4:	f640 1302 	movw	r3, #2306	; 0x902
 80187e8:	429d      	cmp	r5, r3
 80187ea:	d1df      	bne.n	80187ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80187ec:	4601      	mov	r1, r0
 80187ee:	4620      	mov	r0, r4
 80187f0:	f7ff fcdc 	bl	80181ac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80187f4:	e7d9      	b.n	80187aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080187f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80187f6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80187fa:	461e      	mov	r6, r3
 80187fc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80187fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018802:	4604      	mov	r4, r0
 8018804:	4617      	mov	r7, r2
 8018806:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801880a:	f7f8 f8c9 	bl	80109a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801880e:	4605      	mov	r5, r0
 8018810:	b918      	cbnz	r0, 801881a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8018812:	6030      	str	r0, [r6, #0]
 8018814:	4628      	mov	r0, r5
 8018816:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801881a:	683b      	ldr	r3, [r7, #0]
 801881c:	4601      	mov	r1, r0
 801881e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8018822:	4638      	mov	r0, r7
 8018824:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018828:	47c8      	blx	r9
 801882a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801882e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018832:	4602      	mov	r2, r0
 8018834:	6030      	str	r0, [r6, #0]
 8018836:	d213      	bcs.n	8018860 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018838:	4643      	mov	r3, r8
 801883a:	4639      	mov	r1, r7
 801883c:	4620      	mov	r0, r4
 801883e:	f7ff fdef 	bl	8018420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018842:	6030      	str	r0, [r6, #0]
 8018844:	6833      	ldr	r3, [r6, #0]
 8018846:	b143      	cbz	r3, 801885a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018848:	7b5a      	ldrb	r2, [r3, #13]
 801884a:	7a9b      	ldrb	r3, [r3, #10]
 801884c:	0052      	lsls	r2, r2, #1
 801884e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018852:	4313      	orrs	r3, r2
 8018854:	bf0c      	ite	eq
 8018856:	2301      	moveq	r3, #1
 8018858:	2300      	movne	r3, #0
 801885a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801885e:	e7d9      	b.n	8018814 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8018860:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018864:	b29b      	uxth	r3, r3
 8018866:	2b7f      	cmp	r3, #127	; 0x7f
 8018868:	d804      	bhi.n	8018874 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801886a:	4639      	mov	r1, r7
 801886c:	4620      	mov	r0, r4
 801886e:	f7ff fccb 	bl	8018208 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018872:	e7e6      	b.n	8018842 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018874:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018878:	2b00      	cmp	r3, #0
 801887a:	d0e3      	beq.n	8018844 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801887c:	f640 1302 	movw	r3, #2306	; 0x902
 8018880:	429d      	cmp	r5, r3
 8018882:	d1df      	bne.n	8018844 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018884:	4601      	mov	r1, r0
 8018886:	4620      	mov	r0, r4
 8018888:	f7ff fc90 	bl	80181ac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801888c:	e7d9      	b.n	8018842 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801888e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801888e:	b510      	push	{r4, lr}
 8018890:	4604      	mov	r4, r0
 8018892:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018896:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018898:	b1f1      	cbz	r1, 80188d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801889a:	2b0a      	cmp	r3, #10
 801889c:	d02f      	beq.n	80188fe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801889e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80188a0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80188a4:	3901      	subs	r1, #1
 80188a6:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80188a8:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80188ac:	1c51      	adds	r1, r2, #1
 80188ae:	b289      	uxth	r1, r1
 80188b0:	2901      	cmp	r1, #1
 80188b2:	bf84      	itt	hi
 80188b4:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80188b8:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80188ba:	f103 0201 	add.w	r2, r3, #1
 80188be:	8722      	strh	r2, [r4, #56]	; 0x38
 80188c0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80188c2:	bf98      	it	ls
 80188c4:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80188c6:	4413      	add	r3, r2
 80188c8:	b29b      	uxth	r3, r3
 80188ca:	2b09      	cmp	r3, #9
 80188cc:	bf88      	it	hi
 80188ce:	3b0a      	subhi	r3, #10
 80188d0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80188d4:	8458      	strh	r0, [r3, #34]	; 0x22
 80188d6:	e7dc      	b.n	8018892 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80188d8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80188da:	2b0a      	cmp	r3, #10
 80188dc:	d00f      	beq.n	80188fe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80188de:	4620      	mov	r0, r4
 80188e0:	f7ff fc12 	bl	8018108 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80188e4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80188e6:	1c5a      	adds	r2, r3, #1
 80188e8:	8722      	strh	r2, [r4, #56]	; 0x38
 80188ea:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80188ec:	4413      	add	r3, r2
 80188ee:	b29b      	uxth	r3, r3
 80188f0:	2b09      	cmp	r3, #9
 80188f2:	bf88      	it	hi
 80188f4:	3b0a      	subhi	r3, #10
 80188f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80188fa:	8458      	strh	r0, [r3, #34]	; 0x22
 80188fc:	e7ec      	b.n	80188d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80188fe:	bd10      	pop	{r4, pc}

08018900 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018900:	b538      	push	{r3, r4, r5, lr}
 8018902:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018904:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018908:	4604      	mov	r4, r0
 801890a:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801890c:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801890e:	3a01      	subs	r2, #1
 8018910:	8702      	strh	r2, [r0, #56]	; 0x38
 8018912:	1c5a      	adds	r2, r3, #1
 8018914:	b292      	uxth	r2, r2
 8018916:	2a09      	cmp	r2, #9
 8018918:	bf86      	itte	hi
 801891a:	3b09      	subhi	r3, #9
 801891c:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801891e:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018920:	f7ff ffb5 	bl	801888e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018924:	8c23      	ldrh	r3, [r4, #32]
 8018926:	2b01      	cmp	r3, #1
 8018928:	bf9c      	itt	ls
 801892a:	3301      	addls	r3, #1
 801892c:	8423      	strhls	r3, [r4, #32]
 801892e:	8be3      	ldrh	r3, [r4, #30]
 8018930:	b90b      	cbnz	r3, 8018936 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8018932:	2302      	movs	r3, #2
 8018934:	83e3      	strh	r3, [r4, #30]
 8018936:	8be3      	ldrh	r3, [r4, #30]
 8018938:	3b01      	subs	r3, #1
 801893a:	b29b      	uxth	r3, r3
 801893c:	83e3      	strh	r3, [r4, #30]
 801893e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018942:	4628      	mov	r0, r5
 8018944:	8365      	strh	r5, [r4, #26]
 8018946:	bd38      	pop	{r3, r4, r5, pc}

08018948 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018948:	428a      	cmp	r2, r1
 801894a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801894e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8018950:	d931      	bls.n	80189b6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8018952:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018954:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018958:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801895c:	19ee      	adds	r6, r5, r7
 801895e:	1a54      	subs	r4, r2, r1
 8018960:	3e01      	subs	r6, #1
 8018962:	fa1f fe84 	uxth.w	lr, r4
 8018966:	b2b4      	uxth	r4, r6
 8018968:	eba4 090e 	sub.w	r9, r4, lr
 801896c:	fa1f f989 	uxth.w	r9, r9
 8018970:	2c09      	cmp	r4, #9
 8018972:	4626      	mov	r6, r4
 8018974:	bf88      	it	hi
 8018976:	f1a4 060a 	subhi.w	r6, r4, #10
 801897a:	f1bc 0f00 	cmp.w	ip, #0
 801897e:	bf08      	it	eq
 8018980:	f04f 0c02 	moveq.w	ip, #2
 8018984:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018988:	f10c 3cff 	add.w	ip, ip, #4294967295
 801898c:	fa1f fc8c 	uxth.w	ip, ip
 8018990:	3c01      	subs	r4, #1
 8018992:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018996:	b2a4      	uxth	r4, r4
 8018998:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801899c:	454c      	cmp	r4, r9
 801899e:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80189a2:	d1e5      	bne.n	8018970 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80189a4:	eba5 050e 	sub.w	r5, r5, lr
 80189a8:	eb0e 0408 	add.w	r4, lr, r8
 80189ac:	8705      	strh	r5, [r0, #56]	; 0x38
 80189ae:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80189b2:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80189b6:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80189b8:	1a64      	subs	r4, r4, r1
 80189ba:	4439      	add	r1, r7
 80189bc:	b289      	uxth	r1, r1
 80189be:	2909      	cmp	r1, #9
 80189c0:	bf88      	it	hi
 80189c2:	390a      	subhi	r1, #10
 80189c4:	8704      	strh	r4, [r0, #56]	; 0x38
 80189c6:	86c1      	strh	r1, [r0, #54]	; 0x36
 80189c8:	250a      	movs	r5, #10
 80189ca:	b18a      	cbz	r2, 80189f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80189cc:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80189ce:	3a01      	subs	r2, #1
 80189d0:	b292      	uxth	r2, r2
 80189d2:	3101      	adds	r1, #1
 80189d4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80189d8:	8701      	strh	r1, [r0, #56]	; 0x38
 80189da:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80189dc:	b901      	cbnz	r1, 80189e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80189de:	86c5      	strh	r5, [r0, #54]	; 0x36
 80189e0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80189e2:	3901      	subs	r1, #1
 80189e4:	b289      	uxth	r1, r1
 80189e6:	86c1      	strh	r1, [r0, #54]	; 0x36
 80189e8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80189ec:	844c      	strh	r4, [r1, #34]	; 0x22
 80189ee:	e7ec      	b.n	80189ca <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80189f0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80189f4:	f7ff bf4b 	b.w	801888e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080189f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80189f8:	b570      	push	{r4, r5, r6, lr}
 80189fa:	2500      	movs	r5, #0
 80189fc:	4295      	cmp	r5, r2
 80189fe:	d011      	beq.n	8018a24 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018a00:	8bc4      	ldrh	r4, [r0, #30]
 8018a02:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018a06:	4414      	add	r4, r2
 8018a08:	3c01      	subs	r4, #1
 8018a0a:	1b64      	subs	r4, r4, r5
 8018a0c:	b2a4      	uxth	r4, r4
 8018a0e:	2c01      	cmp	r4, #1
 8018a10:	bf88      	it	hi
 8018a12:	3c02      	subhi	r4, #2
 8018a14:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018a18:	8b64      	ldrh	r4, [r4, #26]
 8018a1a:	42b4      	cmp	r4, r6
 8018a1c:	d117      	bne.n	8018a4e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8018a1e:	3501      	adds	r5, #1
 8018a20:	b2ad      	uxth	r5, r5
 8018a22:	e7eb      	b.n	80189fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018a24:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018a28:	2400      	movs	r4, #0
 8018a2a:	4413      	add	r3, r2
 8018a2c:	b2a2      	uxth	r2, r4
 8018a2e:	429a      	cmp	r2, r3
 8018a30:	da0f      	bge.n	8018a52 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8018a32:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018a34:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018a38:	4432      	add	r2, r6
 8018a3a:	b292      	uxth	r2, r2
 8018a3c:	2a09      	cmp	r2, #9
 8018a3e:	bf88      	it	hi
 8018a40:	3a0a      	subhi	r2, #10
 8018a42:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018a46:	3401      	adds	r4, #1
 8018a48:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018a4a:	42aa      	cmp	r2, r5
 8018a4c:	d0ee      	beq.n	8018a2c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8018a4e:	2000      	movs	r0, #0
 8018a50:	bd70      	pop	{r4, r5, r6, pc}
 8018a52:	2001      	movs	r0, #1
 8018a54:	e7fc      	b.n	8018a50 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018a56 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018a56:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a5a:	4605      	mov	r5, r0
 8018a5c:	4616      	mov	r6, r2
 8018a5e:	1c8c      	adds	r4, r1, #2
 8018a60:	8809      	ldrh	r1, [r1, #0]
 8018a62:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018a66:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018a6a:	42b3      	cmp	r3, r6
 8018a6c:	d124      	bne.n	8018ab8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8018a6e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8018a72:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018a76:	f001 070f 	and.w	r7, r1, #15
 8018a7a:	f8cd 8000 	str.w	r8, [sp]
 8018a7e:	464b      	mov	r3, r9
 8018a80:	4652      	mov	r2, sl
 8018a82:	4621      	mov	r1, r4
 8018a84:	4628      	mov	r0, r5
 8018a86:	f7ff ffb7 	bl	80189f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018a8a:	4683      	mov	fp, r0
 8018a8c:	b168      	cbz	r0, 8018aaa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8018a8e:	eb0a 0109 	add.w	r1, sl, r9
 8018a92:	4441      	add	r1, r8
 8018a94:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018a98:	463a      	mov	r2, r7
 8018a9a:	4649      	mov	r1, r9
 8018a9c:	4628      	mov	r0, r5
 8018a9e:	f7ff ff53 	bl	8018948 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8018aa2:	4658      	mov	r0, fp
 8018aa4:	b003      	add	sp, #12
 8018aa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018aaa:	eb07 010a 	add.w	r1, r7, sl
 8018aae:	4449      	add	r1, r9
 8018ab0:	4441      	add	r1, r8
 8018ab2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018ab6:	e7d2      	b.n	8018a5e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018ab8:	f04f 0b00 	mov.w	fp, #0
 8018abc:	e7f1      	b.n	8018aa2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08018abe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8018abe:	b570      	push	{r4, r5, r6, lr}
 8018ac0:	8810      	ldrh	r0, [r2, #0]
 8018ac2:	4298      	cmp	r0, r3
 8018ac4:	d817      	bhi.n	8018af6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018ac6:	1e48      	subs	r0, r1, #1
 8018ac8:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018acc:	4298      	cmp	r0, r3
 8018ace:	d312      	bcc.n	8018af6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018ad0:	2400      	movs	r4, #0
 8018ad2:	428c      	cmp	r4, r1
 8018ad4:	d20f      	bcs.n	8018af6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018ad6:	1860      	adds	r0, r4, r1
 8018ad8:	1040      	asrs	r0, r0, #1
 8018ada:	0085      	lsls	r5, r0, #2
 8018adc:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018ae0:	42b3      	cmp	r3, r6
 8018ae2:	d902      	bls.n	8018aea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018ae4:	3001      	adds	r0, #1
 8018ae6:	b284      	uxth	r4, r0
 8018ae8:	e7f3      	b.n	8018ad2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018aea:	d201      	bcs.n	8018af0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018aec:	b281      	uxth	r1, r0
 8018aee:	e7f0      	b.n	8018ad2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018af0:	442a      	add	r2, r5
 8018af2:	8850      	ldrh	r0, [r2, #2]
 8018af4:	bd70      	pop	{r4, r5, r6, pc}
 8018af6:	2000      	movs	r0, #0
 8018af8:	e7fc      	b.n	8018af4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018afa <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018afa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018afe:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018b00:	886f      	ldrh	r7, [r5, #2]
 8018b02:	4604      	mov	r4, r0
 8018b04:	087f      	lsrs	r7, r7, #1
 8018b06:	260b      	movs	r6, #11
 8018b08:	3e01      	subs	r6, #1
 8018b0a:	d013      	beq.n	8018b34 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018b0c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018b0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018b12:	462a      	mov	r2, r5
 8018b14:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018b18:	4639      	mov	r1, r7
 8018b1a:	4643      	mov	r3, r8
 8018b1c:	4620      	mov	r0, r4
 8018b1e:	f7ff ffce 	bl	8018abe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018b22:	b138      	cbz	r0, 8018b34 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018b24:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018b28:	4642      	mov	r2, r8
 8018b2a:	4620      	mov	r0, r4
 8018b2c:	f7ff ff93 	bl	8018a56 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018b30:	2800      	cmp	r0, #0
 8018b32:	d1e9      	bne.n	8018b08 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018b34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018b38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018b38:	b570      	push	{r4, r5, r6, lr}
 8018b3a:	694a      	ldr	r2, [r1, #20]
 8018b3c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8018b3e:	684b      	ldr	r3, [r1, #4]
 8018b40:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8018b42:	1b54      	subs	r4, r2, r5
 8018b44:	f000 8106 	beq.w	8018d54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018b48:	1b9b      	subs	r3, r3, r6
 8018b4a:	d003      	beq.n	8018b54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018b4c:	4363      	muls	r3, r4
 8018b4e:	2210      	movs	r2, #16
 8018b50:	fb93 f3f2 	sdiv	r3, r3, r2
 8018b54:	680c      	ldr	r4, [r1, #0]
 8018b56:	698a      	ldr	r2, [r1, #24]
 8018b58:	1b65      	subs	r5, r4, r5
 8018b5a:	f000 80fd 	beq.w	8018d58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018b5e:	1b92      	subs	r2, r2, r6
 8018b60:	d003      	beq.n	8018b6a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018b62:	436a      	muls	r2, r5
 8018b64:	2410      	movs	r4, #16
 8018b66:	fb92 f2f4 	sdiv	r2, r2, r4
 8018b6a:	1a9b      	subs	r3, r3, r2
 8018b6c:	ee07 3a90 	vmov	s15, r3
 8018b70:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018d94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018b74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018b78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018b7c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018b80:	460a      	mov	r2, r1
 8018b82:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018b86:	4603      	mov	r3, r0
 8018b88:	f100 040c 	add.w	r4, r0, #12
 8018b8c:	eeb1 6a43 	vneg.f32	s12, s6
 8018b90:	edd2 7a02 	vldr	s15, [r2, #8]
 8018b94:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018b98:	3214      	adds	r2, #20
 8018b9a:	ece3 6a01 	vstmia	r3!, {s13}
 8018b9e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8018ba2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018ba6:	429c      	cmp	r4, r3
 8018ba8:	edc3 7a02 	vstr	s15, [r3, #8]
 8018bac:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018bb0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018bb4:	edc3 7a05 	vstr	s15, [r3, #20]
 8018bb8:	d1ea      	bne.n	8018b90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018bba:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018bbc:	698b      	ldr	r3, [r1, #24]
 8018bbe:	edd0 4a02 	vldr	s9, [r0, #8]
 8018bc2:	edd0 3a00 	vldr	s7, [r0]
 8018bc6:	edd0 6a01 	vldr	s13, [r0, #4]
 8018bca:	ed90 5a05 	vldr	s10, [r0, #20]
 8018bce:	ed90 2a03 	vldr	s4, [r0, #12]
 8018bd2:	edd0 5a04 	vldr	s11, [r0, #16]
 8018bd6:	ed90 1a07 	vldr	s2, [r0, #28]
 8018bda:	edd0 2a06 	vldr	s5, [r0, #24]
 8018bde:	1a9b      	subs	r3, r3, r2
 8018be0:	ee07 3a90 	vmov	s15, r3
 8018be4:	684b      	ldr	r3, [r1, #4]
 8018be6:	1a9b      	subs	r3, r3, r2
 8018be8:	ee07 3a10 	vmov	s14, r3
 8018bec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018bf0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018bf4:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018bf8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018bfc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c00:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018c04:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018c08:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018c0c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018c10:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018c14:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018c18:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018c1c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018c1e:	694a      	ldr	r2, [r1, #20]
 8018c20:	1b13      	subs	r3, r2, r4
 8018c22:	ee07 3a10 	vmov	s14, r3
 8018c26:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c2a:	680b      	ldr	r3, [r1, #0]
 8018c2c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018c30:	1b1b      	subs	r3, r3, r4
 8018c32:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018c36:	ee07 3a10 	vmov	s14, r3
 8018c3a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c3e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018c42:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018c46:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018c4a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8018c4e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018c50:	698b      	ldr	r3, [r1, #24]
 8018c52:	1a9b      	subs	r3, r3, r2
 8018c54:	ee06 3a90 	vmov	s13, r3
 8018c58:	684b      	ldr	r3, [r1, #4]
 8018c5a:	1a9b      	subs	r3, r3, r2
 8018c5c:	ee07 3a10 	vmov	s14, r3
 8018c60:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018c64:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c68:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018c6c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018c70:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018c74:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018c78:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018c7c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8018c80:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018c82:	694a      	ldr	r2, [r1, #20]
 8018c84:	1b13      	subs	r3, r2, r4
 8018c86:	ee07 3a10 	vmov	s14, r3
 8018c8a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c8e:	680b      	ldr	r3, [r1, #0]
 8018c90:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018c94:	1b1b      	subs	r3, r3, r4
 8018c96:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018c9a:	ee07 3a10 	vmov	s14, r3
 8018c9e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018ca2:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018ca6:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018caa:	edd0 5a08 	vldr	s11, [r0, #32]
 8018cae:	ee25 5a06 	vmul.f32	s10, s10, s12
 8018cb2:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018cb6:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018cba:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018cbc:	698b      	ldr	r3, [r1, #24]
 8018cbe:	1a9b      	subs	r3, r3, r2
 8018cc0:	ee07 3a10 	vmov	s14, r3
 8018cc4:	684b      	ldr	r3, [r1, #4]
 8018cc6:	1a9b      	subs	r3, r3, r2
 8018cc8:	ee01 3a90 	vmov	s3, r3
 8018ccc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018cd0:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018cd4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018cd8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018cdc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018ce0:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018ce4:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018ce8:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018cec:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018cf0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018cf2:	694a      	ldr	r2, [r1, #20]
 8018cf4:	1b13      	subs	r3, r2, r4
 8018cf6:	ee03 3a10 	vmov	s6, r3
 8018cfa:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018cfe:	680b      	ldr	r3, [r1, #0]
 8018d00:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018d04:	1b1b      	subs	r3, r3, r4
 8018d06:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018d0a:	ee03 3a10 	vmov	s6, r3
 8018d0e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018d12:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018d16:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018d1a:	ee25 6a86 	vmul.f32	s12, s11, s12
 8018d1e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8018d22:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018d26:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018d2a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d32:	dd13      	ble.n	8018d5c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018d34:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018d38:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018d3c:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018d3e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8018d42:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018d46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d4a:	dd15      	ble.n	8018d78 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018d4c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018d50:	6403      	str	r3, [r0, #64]	; 0x40
 8018d52:	bd70      	pop	{r4, r5, r6, pc}
 8018d54:	4623      	mov	r3, r4
 8018d56:	e6fd      	b.n	8018b54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018d58:	462a      	mov	r2, r5
 8018d5a:	e706      	b.n	8018b6a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018d5c:	d502      	bpl.n	8018d64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8018d5e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018d62:	e7e9      	b.n	8018d38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018d64:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018d68:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018d6c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018d70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d74:	dade      	bge.n	8018d34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018d76:	e7f2      	b.n	8018d5e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018d78:	d502      	bpl.n	8018d80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018d7a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018d7e:	e7e7      	b.n	8018d50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8018d80:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018d84:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018d88:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018d8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018d90:	dadc      	bge.n	8018d4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8018d92:	e7f2      	b.n	8018d7a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018d94:	3d800000 	.word	0x3d800000

08018d98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018d98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018d9c:	2714      	movs	r7, #20
 8018d9e:	435f      	muls	r7, r3
 8018da0:	eb02 0c07 	add.w	ip, r2, r7
 8018da4:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018da8:	f115 0e0f 	adds.w	lr, r5, #15
 8018dac:	f100 80a2 	bmi.w	8018ef4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8018db0:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8018db4:	9c08      	ldr	r4, [sp, #32]
 8018db6:	f8c0 e014 	str.w	lr, [r0, #20]
 8018dba:	2614      	movs	r6, #20
 8018dbc:	4366      	muls	r6, r4
 8018dbe:	eb02 0806 	add.w	r8, r2, r6
 8018dc2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018dc6:	f115 040f 	adds.w	r4, r5, #15
 8018dca:	f100 809f 	bmi.w	8018f0c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8018dce:	1124      	asrs	r4, r4, #4
 8018dd0:	eba4 040e 	sub.w	r4, r4, lr
 8018dd4:	6184      	str	r4, [r0, #24]
 8018dd6:	2c00      	cmp	r4, #0
 8018dd8:	f000 808a 	beq.w	8018ef0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018ddc:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8018de0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018de4:	5995      	ldr	r5, [r2, r6]
 8018de6:	eba4 0809 	sub.w	r8, r4, r9
 8018dea:	59d4      	ldr	r4, [r2, r7]
 8018dec:	eba5 0a04 	sub.w	sl, r5, r4
 8018df0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018df4:	fb0e fe05 	mul.w	lr, lr, r5
 8018df8:	fb0a ee19 	mls	lr, sl, r9, lr
 8018dfc:	fb08 e404 	mla	r4, r8, r4, lr
 8018e00:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018e04:	3c01      	subs	r4, #1
 8018e06:	19a4      	adds	r4, r4, r6
 8018e08:	f100 808c 	bmi.w	8018f24 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018e0c:	fb94 fef6 	sdiv	lr, r4, r6
 8018e10:	f8c0 e000 	str.w	lr, [r0]
 8018e14:	fb06 441e 	mls	r4, r6, lr, r4
 8018e18:	6104      	str	r4, [r0, #16]
 8018e1a:	2d00      	cmp	r5, #0
 8018e1c:	f2c0 8095 	blt.w	8018f4a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8018e20:	fb95 f4f6 	sdiv	r4, r5, r6
 8018e24:	6044      	str	r4, [r0, #4]
 8018e26:	fb06 5514 	mls	r5, r6, r4, r5
 8018e2a:	6085      	str	r5, [r0, #8]
 8018e2c:	60c6      	str	r6, [r0, #12]
 8018e2e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8018e32:	6945      	ldr	r5, [r0, #20]
 8018e34:	59d2      	ldr	r2, [r2, r7]
 8018e36:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018f6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8018e3a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018e3e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8018e42:	ee07 4a10 	vmov	s14, r4
 8018e46:	6804      	ldr	r4, [r0, #0]
 8018e48:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8018e4c:	ee07 2a90 	vmov	s15, r2
 8018e50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018e54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018e58:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018e5c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8018e60:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018e64:	edd3 6a00 	vldr	s13, [r3]
 8018e68:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018e6c:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8018e70:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018e74:	edc0 6a07 	vstr	s13, [r0, #28]
 8018e78:	edd0 6a01 	vldr	s13, [r0, #4]
 8018e7c:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8018e80:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018e84:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018e88:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018e8c:	ed80 6a08 	vstr	s12, [r0, #32]
 8018e90:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8018e92:	6242      	str	r2, [r0, #36]	; 0x24
 8018e94:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018e98:	ed93 6a03 	vldr	s12, [r3, #12]
 8018e9c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018ea0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018ea4:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8018ea8:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8018eac:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018eb0:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8018eb4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018eb8:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8018ebc:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018ebe:	6302      	str	r2, [r0, #48]	; 0x30
 8018ec0:	ed93 6a06 	vldr	s12, [r3, #24]
 8018ec4:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8018ec8:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018ecc:	eeb0 7a46 	vmov.f32	s14, s12
 8018ed0:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8018ed4:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018ed8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018edc:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8018ee0:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8018ee4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018ee8:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8018eec:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8018eee:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018ef0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018ef4:	f1c5 0501 	rsb	r5, r5, #1
 8018ef8:	f015 050f 	ands.w	r5, r5, #15
 8018efc:	bf18      	it	ne
 8018efe:	2501      	movne	r5, #1
 8018f00:	2410      	movs	r4, #16
 8018f02:	fb9e fef4 	sdiv	lr, lr, r4
 8018f06:	ebae 0e05 	sub.w	lr, lr, r5
 8018f0a:	e753      	b.n	8018db4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018f0c:	f1c5 0501 	rsb	r5, r5, #1
 8018f10:	f015 050f 	ands.w	r5, r5, #15
 8018f14:	bf18      	it	ne
 8018f16:	2501      	movne	r5, #1
 8018f18:	f04f 0910 	mov.w	r9, #16
 8018f1c:	fb94 f4f9 	sdiv	r4, r4, r9
 8018f20:	1b64      	subs	r4, r4, r5
 8018f22:	e755      	b.n	8018dd0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018f24:	4264      	negs	r4, r4
 8018f26:	fb94 fef6 	sdiv	lr, r4, r6
 8018f2a:	f1ce 0800 	rsb	r8, lr, #0
 8018f2e:	fb06 441e 	mls	r4, r6, lr, r4
 8018f32:	f8c0 8000 	str.w	r8, [r0]
 8018f36:	6104      	str	r4, [r0, #16]
 8018f38:	2c00      	cmp	r4, #0
 8018f3a:	f43f af6e 	beq.w	8018e1a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8018f3e:	ea6f 0e0e 	mvn.w	lr, lr
 8018f42:	f8c0 e000 	str.w	lr, [r0]
 8018f46:	1b34      	subs	r4, r6, r4
 8018f48:	e766      	b.n	8018e18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018f4a:	426d      	negs	r5, r5
 8018f4c:	fb95 f4f6 	sdiv	r4, r5, r6
 8018f50:	f1c4 0e00 	rsb	lr, r4, #0
 8018f54:	fb06 5514 	mls	r5, r6, r4, r5
 8018f58:	f8c0 e004 	str.w	lr, [r0, #4]
 8018f5c:	6085      	str	r5, [r0, #8]
 8018f5e:	2d00      	cmp	r5, #0
 8018f60:	f43f af64 	beq.w	8018e2c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018f64:	43e4      	mvns	r4, r4
 8018f66:	6044      	str	r4, [r0, #4]
 8018f68:	1b75      	subs	r5, r6, r5
 8018f6a:	e75e      	b.n	8018e2a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018f6c:	3d800000 	.word	0x3d800000

08018f70 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8018f70:	4602      	mov	r2, r0
 8018f72:	b148      	cbz	r0, 8018f88 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018f74:	2300      	movs	r3, #0
 8018f76:	b298      	uxth	r0, r3
 8018f78:	3301      	adds	r3, #1
 8018f7a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8018f7e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8018f82:	2900      	cmp	r1, #0
 8018f84:	d1f7      	bne.n	8018f76 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018f86:	4770      	bx	lr
 8018f88:	4770      	bx	lr

08018f8a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018f8a:	b530      	push	{r4, r5, lr}
 8018f8c:	4604      	mov	r4, r0
 8018f8e:	b159      	cbz	r1, 8018fa8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8018f90:	b148      	cbz	r0, 8018fa6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018f92:	2300      	movs	r3, #0
 8018f94:	b298      	uxth	r0, r3
 8018f96:	4282      	cmp	r2, r0
 8018f98:	d905      	bls.n	8018fa6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018f9a:	5ccd      	ldrb	r5, [r1, r3]
 8018f9c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8018fa0:	3301      	adds	r3, #1
 8018fa2:	2d00      	cmp	r5, #0
 8018fa4:	d1f6      	bne.n	8018f94 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8018fa6:	bd30      	pop	{r4, r5, pc}
 8018fa8:	4608      	mov	r0, r1
 8018faa:	e7fc      	b.n	8018fa6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08018fac <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8018fac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018fae:	b08b      	sub	sp, #44	; 0x2c
 8018fb0:	468c      	mov	ip, r1
 8018fb2:	2100      	movs	r1, #0
 8018fb4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018fb8:	4604      	mov	r4, r0
 8018fba:	261f      	movs	r6, #31
 8018fbc:	af01      	add	r7, sp, #4
 8018fbe:	fb94 fef3 	sdiv	lr, r4, r3
 8018fc2:	fb03 441e 	mls	r4, r3, lr, r4
 8018fc6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018fca:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8018fce:	b2ec      	uxtb	r4, r5
 8018fd0:	2d09      	cmp	r5, #9
 8018fd2:	bfd4      	ite	le
 8018fd4:	3430      	addle	r4, #48	; 0x30
 8018fd6:	3457      	addgt	r4, #87	; 0x57
 8018fd8:	b2e4      	uxtb	r4, r4
 8018fda:	55bc      	strb	r4, [r7, r6]
 8018fdc:	4674      	mov	r4, lr
 8018fde:	1e71      	subs	r1, r6, #1
 8018fe0:	b974      	cbnz	r4, 8019000 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8018fe2:	2800      	cmp	r0, #0
 8018fe4:	da05      	bge.n	8018ff2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8018fe6:	ab0a      	add	r3, sp, #40	; 0x28
 8018fe8:	4419      	add	r1, r3
 8018fea:	232d      	movs	r3, #45	; 0x2d
 8018fec:	f801 3c24 	strb.w	r3, [r1, #-36]
 8018ff0:	1eb1      	subs	r1, r6, #2
 8018ff2:	3101      	adds	r1, #1
 8018ff4:	4439      	add	r1, r7
 8018ff6:	4660      	mov	r0, ip
 8018ff8:	f7ff ffc7 	bl	8018f8a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018ffc:	b00b      	add	sp, #44	; 0x2c
 8018ffe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019000:	460e      	mov	r6, r1
 8019002:	e7dc      	b.n	8018fbe <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08019004 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8019004:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019006:	b08b      	sub	sp, #44	; 0x2c
 8019008:	468c      	mov	ip, r1
 801900a:	2100      	movs	r1, #0
 801900c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019010:	ae01      	add	r6, sp, #4
 8019012:	211f      	movs	r1, #31
 8019014:	fbb0 f7f3 	udiv	r7, r0, r3
 8019018:	fb03 0517 	mls	r5, r3, r7, r0
 801901c:	b2ec      	uxtb	r4, r5
 801901e:	2d09      	cmp	r5, #9
 8019020:	bfd4      	ite	le
 8019022:	3430      	addle	r4, #48	; 0x30
 8019024:	3457      	addgt	r4, #87	; 0x57
 8019026:	b2e4      	uxtb	r4, r4
 8019028:	558c      	strb	r4, [r1, r6]
 801902a:	4638      	mov	r0, r7
 801902c:	1e4c      	subs	r4, r1, #1
 801902e:	b92f      	cbnz	r7, 801903c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8019030:	4431      	add	r1, r6
 8019032:	4660      	mov	r0, ip
 8019034:	f7ff ffa9 	bl	8018f8a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019038:	b00b      	add	sp, #44	; 0x2c
 801903a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801903c:	4621      	mov	r1, r4
 801903e:	e7e9      	b.n	8019014 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08019040 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019044:	4691      	mov	r9, r2
 8019046:	b085      	sub	sp, #20
 8019048:	6802      	ldr	r2, [r0, #0]
 801904a:	9201      	str	r2, [sp, #4]
 801904c:	4688      	mov	r8, r1
 801904e:	4683      	mov	fp, r0
 8019050:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8019054:	9103      	str	r1, [sp, #12]
 8019056:	4610      	mov	r0, r2
 8019058:	461c      	mov	r4, r3
 801905a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801905e:	9302      	str	r3, [sp, #8]
 8019060:	f7ff ff86 	bl	8018f70 <_ZN8touchgfx7Unicode6strlenEPKt>
 8019064:	f1b8 0f00 	cmp.w	r8, #0
 8019068:	bf0c      	ite	eq
 801906a:	4684      	moveq	ip, r0
 801906c:	f100 0c01 	addne.w	ip, r0, #1
 8019070:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8019074:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8019078:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801907a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801907c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019080:	9903      	ldr	r1, [sp, #12]
 8019082:	fa1f fc8c 	uxth.w	ip, ip
 8019086:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801908a:	d041      	beq.n	8019110 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801908c:	d834      	bhi.n	80190f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801908e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019092:	d059      	beq.n	8019148 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019094:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019098:	d03a      	beq.n	8019110 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801909a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801909e:	d034      	beq.n	801910a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80190a0:	2400      	movs	r4, #0
 80190a2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80190a6:	3a01      	subs	r2, #1
 80190a8:	b169      	cbz	r1, 80190c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80190aa:	9911      	ldr	r1, [sp, #68]	; 0x44
 80190ac:	458c      	cmp	ip, r1
 80190ae:	da09      	bge.n	80190c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80190b0:	eba1 010c 	sub.w	r1, r1, ip
 80190b4:	b289      	uxth	r1, r1
 80190b6:	b933      	cbnz	r3, 80190c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80190b8:	2e00      	cmp	r6, #0
 80190ba:	d051      	beq.n	8019160 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80190bc:	2800      	cmp	r0, #0
 80190be:	d04f      	beq.n	8019160 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80190c0:	440c      	add	r4, r1
 80190c2:	b2a4      	uxth	r4, r4
 80190c4:	2100      	movs	r1, #0
 80190c6:	682b      	ldr	r3, [r5, #0]
 80190c8:	4293      	cmp	r3, r2
 80190ca:	da07      	bge.n	80190dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80190cc:	f1b8 0f00 	cmp.w	r8, #0
 80190d0:	d004      	beq.n	80190dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80190d2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80190d6:	682b      	ldr	r3, [r5, #0]
 80190d8:	3301      	adds	r3, #1
 80190da:	602b      	str	r3, [r5, #0]
 80190dc:	2730      	movs	r7, #48	; 0x30
 80190de:	2c00      	cmp	r4, #0
 80190e0:	d04e      	beq.n	8019180 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80190e2:	682e      	ldr	r6, [r5, #0]
 80190e4:	3c01      	subs	r4, #1
 80190e6:	42b2      	cmp	r2, r6
 80190e8:	b2a4      	uxth	r4, r4
 80190ea:	dd49      	ble.n	8019180 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80190ec:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80190f0:	682b      	ldr	r3, [r5, #0]
 80190f2:	3301      	adds	r3, #1
 80190f4:	602b      	str	r3, [r5, #0]
 80190f6:	e7f2      	b.n	80190de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80190f8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80190fc:	d01d      	beq.n	801913a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80190fe:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8019102:	d002      	beq.n	801910a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019104:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8019108:	e7c9      	b.n	801909e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801910a:	4684      	mov	ip, r0
 801910c:	f04f 0800 	mov.w	r8, #0
 8019110:	2c00      	cmp	r4, #0
 8019112:	d0c6      	beq.n	80190a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019114:	b947      	cbnz	r7, 8019128 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019116:	2801      	cmp	r0, #1
 8019118:	d106      	bne.n	8019128 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801911a:	8814      	ldrh	r4, [r2, #0]
 801911c:	2c30      	cmp	r4, #48	; 0x30
 801911e:	bf02      	ittt	eq
 8019120:	3202      	addeq	r2, #2
 8019122:	f8cb 2000 	streq.w	r2, [fp]
 8019126:	4638      	moveq	r0, r7
 8019128:	45bc      	cmp	ip, r7
 801912a:	da14      	bge.n	8019156 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801912c:	b2bf      	uxth	r7, r7
 801912e:	eba7 040c 	sub.w	r4, r7, ip
 8019132:	b2a4      	uxth	r4, r4
 8019134:	46bc      	mov	ip, r7
 8019136:	2600      	movs	r6, #0
 8019138:	e7b3      	b.n	80190a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801913a:	4684      	mov	ip, r0
 801913c:	b16c      	cbz	r4, 801915a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801913e:	42b8      	cmp	r0, r7
 8019140:	dd00      	ble.n	8019144 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019142:	b2b8      	uxth	r0, r7
 8019144:	2400      	movs	r4, #0
 8019146:	e003      	b.n	8019150 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019148:	f04f 0c01 	mov.w	ip, #1
 801914c:	2400      	movs	r4, #0
 801914e:	4660      	mov	r0, ip
 8019150:	4626      	mov	r6, r4
 8019152:	46a0      	mov	r8, r4
 8019154:	e7a5      	b.n	80190a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019156:	2400      	movs	r4, #0
 8019158:	e7ed      	b.n	8019136 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801915a:	4626      	mov	r6, r4
 801915c:	46a0      	mov	r8, r4
 801915e:	e7a0      	b.n	80190a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019160:	2900      	cmp	r1, #0
 8019162:	d0b0      	beq.n	80190c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019164:	2720      	movs	r7, #32
 8019166:	682e      	ldr	r6, [r5, #0]
 8019168:	2900      	cmp	r1, #0
 801916a:	d0ac      	beq.n	80190c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801916c:	3901      	subs	r1, #1
 801916e:	4296      	cmp	r6, r2
 8019170:	b289      	uxth	r1, r1
 8019172:	daa7      	bge.n	80190c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019174:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019178:	682b      	ldr	r3, [r5, #0]
 801917a:	3301      	adds	r3, #1
 801917c:	602b      	str	r3, [r5, #0]
 801917e:	e7f2      	b.n	8019166 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019180:	b188      	cbz	r0, 80191a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019182:	682b      	ldr	r3, [r5, #0]
 8019184:	3801      	subs	r0, #1
 8019186:	429a      	cmp	r2, r3
 8019188:	b280      	uxth	r0, r0
 801918a:	dd0c      	ble.n	80191a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801918c:	f8db 3000 	ldr.w	r3, [fp]
 8019190:	1c9c      	adds	r4, r3, #2
 8019192:	f8cb 4000 	str.w	r4, [fp]
 8019196:	881c      	ldrh	r4, [r3, #0]
 8019198:	682b      	ldr	r3, [r5, #0]
 801919a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801919e:	682b      	ldr	r3, [r5, #0]
 80191a0:	3301      	adds	r3, #1
 80191a2:	602b      	str	r3, [r5, #0]
 80191a4:	e7ec      	b.n	8019180 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80191a6:	2620      	movs	r6, #32
 80191a8:	b151      	cbz	r1, 80191c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80191aa:	6828      	ldr	r0, [r5, #0]
 80191ac:	3901      	subs	r1, #1
 80191ae:	4282      	cmp	r2, r0
 80191b0:	b289      	uxth	r1, r1
 80191b2:	dd05      	ble.n	80191c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80191b4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80191b8:	682b      	ldr	r3, [r5, #0]
 80191ba:	3301      	adds	r3, #1
 80191bc:	602b      	str	r3, [r5, #0]
 80191be:	e7f3      	b.n	80191a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80191c0:	b005      	add	sp, #20
 80191c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080191c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80191c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80191ca:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80191ce:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80191d2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80191d6:	2400      	movs	r4, #0
 80191d8:	8014      	strh	r4, [r2, #0]
 80191da:	701c      	strb	r4, [r3, #0]
 80191dc:	f888 4000 	strb.w	r4, [r8]
 80191e0:	f88c 4000 	strb.w	r4, [ip]
 80191e4:	f88e 4000 	strb.w	r4, [lr]
 80191e8:	703c      	strb	r4, [r7, #0]
 80191ea:	6804      	ldr	r4, [r0, #0]
 80191ec:	b1a4      	cbz	r4, 8019218 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80191ee:	8824      	ldrh	r4, [r4, #0]
 80191f0:	f04f 0901 	mov.w	r9, #1
 80191f4:	b314      	cbz	r4, 801923c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80191f6:	2c2b      	cmp	r4, #43	; 0x2b
 80191f8:	d001      	beq.n	80191fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80191fa:	2c20      	cmp	r4, #32
 80191fc:	d110      	bne.n	8019220 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80191fe:	8014      	strh	r4, [r2, #0]
 8019200:	6804      	ldr	r4, [r0, #0]
 8019202:	b10c      	cbz	r4, 8019208 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8019204:	3402      	adds	r4, #2
 8019206:	6004      	str	r4, [r0, #0]
 8019208:	680c      	ldr	r4, [r1, #0]
 801920a:	b10c      	cbz	r4, 8019210 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801920c:	3401      	adds	r4, #1
 801920e:	600c      	str	r4, [r1, #0]
 8019210:	6804      	ldr	r4, [r0, #0]
 8019212:	b17c      	cbz	r4, 8019234 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8019214:	8824      	ldrh	r4, [r4, #0]
 8019216:	e7ed      	b.n	80191f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019218:	680c      	ldr	r4, [r1, #0]
 801921a:	b17c      	cbz	r4, 801923c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801921c:	7824      	ldrb	r4, [r4, #0]
 801921e:	e7e7      	b.n	80191f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019220:	2c2d      	cmp	r4, #45	; 0x2d
 8019222:	d102      	bne.n	801922a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8019224:	f883 9000 	strb.w	r9, [r3]
 8019228:	e7ea      	b.n	8019200 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801922a:	2c23      	cmp	r4, #35	; 0x23
 801922c:	d107      	bne.n	801923e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801922e:	f888 9000 	strb.w	r9, [r8]
 8019232:	e7e5      	b.n	8019200 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019234:	680c      	ldr	r4, [r1, #0]
 8019236:	b10c      	cbz	r4, 801923c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019238:	7824      	ldrb	r4, [r4, #0]
 801923a:	e7db      	b.n	80191f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801923c:	2400      	movs	r4, #0
 801923e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8019242:	2b09      	cmp	r3, #9
 8019244:	d901      	bls.n	801924a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8019246:	2c2a      	cmp	r4, #42	; 0x2a
 8019248:	d122      	bne.n	8019290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801924a:	2301      	movs	r3, #1
 801924c:	2c30      	cmp	r4, #48	; 0x30
 801924e:	f88e 3000 	strb.w	r3, [lr]
 8019252:	d10d      	bne.n	8019270 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019254:	f88c 3000 	strb.w	r3, [ip]
 8019258:	6803      	ldr	r3, [r0, #0]
 801925a:	b10b      	cbz	r3, 8019260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801925c:	3302      	adds	r3, #2
 801925e:	6003      	str	r3, [r0, #0]
 8019260:	680b      	ldr	r3, [r1, #0]
 8019262:	b10b      	cbz	r3, 8019268 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8019264:	3301      	adds	r3, #1
 8019266:	600b      	str	r3, [r1, #0]
 8019268:	6803      	ldr	r3, [r0, #0]
 801926a:	2b00      	cmp	r3, #0
 801926c:	d02f      	beq.n	80192ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801926e:	881c      	ldrh	r4, [r3, #0]
 8019270:	2c2a      	cmp	r4, #42	; 0x2a
 8019272:	d135      	bne.n	80192e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019274:	f04f 33ff 	mov.w	r3, #4294967295
 8019278:	6033      	str	r3, [r6, #0]
 801927a:	6803      	ldr	r3, [r0, #0]
 801927c:	b10b      	cbz	r3, 8019282 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801927e:	3302      	adds	r3, #2
 8019280:	6003      	str	r3, [r0, #0]
 8019282:	680b      	ldr	r3, [r1, #0]
 8019284:	b10b      	cbz	r3, 801928a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8019286:	3301      	adds	r3, #1
 8019288:	600b      	str	r3, [r1, #0]
 801928a:	6803      	ldr	r3, [r0, #0]
 801928c:	b31b      	cbz	r3, 80192d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801928e:	881c      	ldrh	r4, [r3, #0]
 8019290:	2c2e      	cmp	r4, #46	; 0x2e
 8019292:	d11a      	bne.n	80192ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019294:	2301      	movs	r3, #1
 8019296:	703b      	strb	r3, [r7, #0]
 8019298:	6803      	ldr	r3, [r0, #0]
 801929a:	b10b      	cbz	r3, 80192a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801929c:	3302      	adds	r3, #2
 801929e:	6003      	str	r3, [r0, #0]
 80192a0:	680b      	ldr	r3, [r1, #0]
 80192a2:	b10b      	cbz	r3, 80192a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80192a4:	3301      	adds	r3, #1
 80192a6:	600b      	str	r3, [r1, #0]
 80192a8:	6803      	ldr	r3, [r0, #0]
 80192aa:	2b00      	cmp	r3, #0
 80192ac:	d036      	beq.n	801931c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80192ae:	881b      	ldrh	r3, [r3, #0]
 80192b0:	2b2a      	cmp	r3, #42	; 0x2a
 80192b2:	d137      	bne.n	8019324 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80192b4:	f04f 33ff 	mov.w	r3, #4294967295
 80192b8:	602b      	str	r3, [r5, #0]
 80192ba:	6803      	ldr	r3, [r0, #0]
 80192bc:	b10b      	cbz	r3, 80192c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80192be:	3302      	adds	r3, #2
 80192c0:	6003      	str	r3, [r0, #0]
 80192c2:	680b      	ldr	r3, [r1, #0]
 80192c4:	b10b      	cbz	r3, 80192ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80192c6:	3301      	adds	r3, #1
 80192c8:	600b      	str	r3, [r1, #0]
 80192ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80192ce:	680c      	ldr	r4, [r1, #0]
 80192d0:	b134      	cbz	r4, 80192e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80192d2:	7824      	ldrb	r4, [r4, #0]
 80192d4:	e7cc      	b.n	8019270 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80192d6:	680b      	ldr	r3, [r1, #0]
 80192d8:	2b00      	cmp	r3, #0
 80192da:	d0f6      	beq.n	80192ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80192dc:	781c      	ldrb	r4, [r3, #0]
 80192de:	e7d7      	b.n	8019290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80192e0:	2300      	movs	r3, #0
 80192e2:	6033      	str	r3, [r6, #0]
 80192e4:	220a      	movs	r2, #10
 80192e6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80192ea:	fa1f f38c 	uxth.w	r3, ip
 80192ee:	2b09      	cmp	r3, #9
 80192f0:	d8ce      	bhi.n	8019290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80192f2:	6833      	ldr	r3, [r6, #0]
 80192f4:	fb02 c303 	mla	r3, r2, r3, ip
 80192f8:	6033      	str	r3, [r6, #0]
 80192fa:	6803      	ldr	r3, [r0, #0]
 80192fc:	b10b      	cbz	r3, 8019302 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80192fe:	3302      	adds	r3, #2
 8019300:	6003      	str	r3, [r0, #0]
 8019302:	680b      	ldr	r3, [r1, #0]
 8019304:	b10b      	cbz	r3, 801930a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8019306:	3301      	adds	r3, #1
 8019308:	600b      	str	r3, [r1, #0]
 801930a:	6803      	ldr	r3, [r0, #0]
 801930c:	b10b      	cbz	r3, 8019312 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801930e:	881c      	ldrh	r4, [r3, #0]
 8019310:	e7e9      	b.n	80192e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019312:	680c      	ldr	r4, [r1, #0]
 8019314:	2c00      	cmp	r4, #0
 8019316:	d0e6      	beq.n	80192e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019318:	7824      	ldrb	r4, [r4, #0]
 801931a:	e7e4      	b.n	80192e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801931c:	680b      	ldr	r3, [r1, #0]
 801931e:	b10b      	cbz	r3, 8019324 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019320:	781b      	ldrb	r3, [r3, #0]
 8019322:	e7c5      	b.n	80192b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8019324:	2200      	movs	r2, #0
 8019326:	602a      	str	r2, [r5, #0]
 8019328:	240a      	movs	r4, #10
 801932a:	3b30      	subs	r3, #48	; 0x30
 801932c:	b29e      	uxth	r6, r3
 801932e:	2e09      	cmp	r6, #9
 8019330:	682a      	ldr	r2, [r5, #0]
 8019332:	d813      	bhi.n	801935c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8019334:	fb04 3302 	mla	r3, r4, r2, r3
 8019338:	602b      	str	r3, [r5, #0]
 801933a:	6803      	ldr	r3, [r0, #0]
 801933c:	b10b      	cbz	r3, 8019342 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801933e:	3302      	adds	r3, #2
 8019340:	6003      	str	r3, [r0, #0]
 8019342:	680b      	ldr	r3, [r1, #0]
 8019344:	b10b      	cbz	r3, 801934a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8019346:	3301      	adds	r3, #1
 8019348:	600b      	str	r3, [r1, #0]
 801934a:	6803      	ldr	r3, [r0, #0]
 801934c:	b10b      	cbz	r3, 8019352 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801934e:	881b      	ldrh	r3, [r3, #0]
 8019350:	e7eb      	b.n	801932a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019352:	680b      	ldr	r3, [r1, #0]
 8019354:	2b00      	cmp	r3, #0
 8019356:	d0e8      	beq.n	801932a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019358:	781b      	ldrb	r3, [r3, #0]
 801935a:	e7e6      	b.n	801932a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801935c:	2a06      	cmp	r2, #6
 801935e:	bfa8      	it	ge
 8019360:	2206      	movge	r2, #6
 8019362:	602a      	str	r2, [r5, #0]
 8019364:	e7b1      	b.n	80192ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08019366 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8019366:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801936a:	b0a3      	sub	sp, #140	; 0x8c
 801936c:	2600      	movs	r6, #0
 801936e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8019372:	4607      	mov	r7, r0
 8019374:	4688      	mov	r8, r1
 8019376:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801937a:	4631      	mov	r1, r6
 801937c:	2242      	movs	r2, #66	; 0x42
 801937e:	4648      	mov	r0, r9
 8019380:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019382:	960d      	str	r6, [sp, #52]	; 0x34
 8019384:	f00f ff75 	bl	8029272 <memset>
 8019388:	b15f      	cbz	r7, 80193a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801938a:	f108 3aff 	add.w	sl, r8, #4294967295
 801938e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019390:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019392:	b152      	cbz	r2, 80193aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019394:	8812      	ldrh	r2, [r2, #0]
 8019396:	b10a      	cbz	r2, 801939c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019398:	459a      	cmp	sl, r3
 801939a:	dc2e      	bgt.n	80193fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801939c:	2200      	movs	r2, #0
 801939e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80193a2:	4638      	mov	r0, r7
 80193a4:	b023      	add	sp, #140	; 0x8c
 80193a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193aa:	9a08      	ldr	r2, [sp, #32]
 80193ac:	2a00      	cmp	r2, #0
 80193ae:	d0f5      	beq.n	801939c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80193b0:	7812      	ldrb	r2, [r2, #0]
 80193b2:	e7f0      	b.n	8019396 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80193b4:	2d00      	cmp	r5, #0
 80193b6:	d0ea      	beq.n	801938e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80193b8:	782a      	ldrb	r2, [r5, #0]
 80193ba:	b142      	cbz	r2, 80193ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80193bc:	2a25      	cmp	r2, #37	; 0x25
 80193be:	d001      	beq.n	80193c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80193c0:	459a      	cmp	sl, r3
 80193c2:	dc08      	bgt.n	80193d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80193c4:	f1bb 0f00 	cmp.w	fp, #0
 80193c8:	d121      	bne.n	801940e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80193ca:	2d00      	cmp	r5, #0
 80193cc:	d0df      	beq.n	801938e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80193ce:	782a      	ldrb	r2, [r5, #0]
 80193d0:	f04f 0b00 	mov.w	fp, #0
 80193d4:	e01d      	b.n	8019412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80193d6:	f1bb 0f00 	cmp.w	fp, #0
 80193da:	d078      	beq.n	80194ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80193dc:	f8bb 2000 	ldrh.w	r2, [fp]
 80193e0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80193e4:	f1bb 0f00 	cmp.w	fp, #0
 80193e8:	d002      	beq.n	80193f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80193ea:	f10b 0202 	add.w	r2, fp, #2
 80193ee:	9209      	str	r2, [sp, #36]	; 0x24
 80193f0:	b10d      	cbz	r5, 80193f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80193f2:	3501      	adds	r5, #1
 80193f4:	9508      	str	r5, [sp, #32]
 80193f6:	3301      	adds	r3, #1
 80193f8:	930d      	str	r3, [sp, #52]	; 0x34
 80193fa:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80193fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019400:	f1bb 0f00 	cmp.w	fp, #0
 8019404:	d0d6      	beq.n	80193b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8019406:	f8bb 2000 	ldrh.w	r2, [fp]
 801940a:	2a00      	cmp	r2, #0
 801940c:	d1d6      	bne.n	80193bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801940e:	f8bb 2000 	ldrh.w	r2, [fp]
 8019412:	2a00      	cmp	r2, #0
 8019414:	d0bb      	beq.n	801938e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019416:	459a      	cmp	sl, r3
 8019418:	ddb9      	ble.n	801938e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801941a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801941e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8019422:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8019426:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801942a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801942e:	960e      	str	r6, [sp, #56]	; 0x38
 8019430:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8019434:	960f      	str	r6, [sp, #60]	; 0x3c
 8019436:	f1bb 0f00 	cmp.w	fp, #0
 801943a:	d002      	beq.n	8019442 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801943c:	f10b 0302 	add.w	r3, fp, #2
 8019440:	9309      	str	r3, [sp, #36]	; 0x24
 8019442:	b10d      	cbz	r5, 8019448 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8019444:	1c6b      	adds	r3, r5, #1
 8019446:	9308      	str	r3, [sp, #32]
 8019448:	ab0f      	add	r3, sp, #60	; 0x3c
 801944a:	9305      	str	r3, [sp, #20]
 801944c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019450:	9304      	str	r3, [sp, #16]
 8019452:	ab0e      	add	r3, sp, #56	; 0x38
 8019454:	9303      	str	r3, [sp, #12]
 8019456:	ab0c      	add	r3, sp, #48	; 0x30
 8019458:	9302      	str	r3, [sp, #8]
 801945a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801945e:	9301      	str	r3, [sp, #4]
 8019460:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019464:	9300      	str	r3, [sp, #0]
 8019466:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801946a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801946e:	a908      	add	r1, sp, #32
 8019470:	a809      	add	r0, sp, #36	; 0x24
 8019472:	f7ff fea8 	bl	80191c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019476:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019478:	2b00      	cmp	r3, #0
 801947a:	bfbe      	ittt	lt
 801947c:	6823      	ldrlt	r3, [r4, #0]
 801947e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019482:	930e      	strlt	r3, [sp, #56]	; 0x38
 8019484:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019486:	bfb8      	it	lt
 8019488:	3404      	addlt	r4, #4
 801948a:	2b00      	cmp	r3, #0
 801948c:	bfb8      	it	lt
 801948e:	6823      	ldrlt	r3, [r4, #0]
 8019490:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019494:	bfbe      	ittt	lt
 8019496:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801949a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801949c:	3404      	addlt	r4, #4
 801949e:	b1d9      	cbz	r1, 80194d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 80194a0:	880b      	ldrh	r3, [r1, #0]
 80194a2:	2b69      	cmp	r3, #105	; 0x69
 80194a4:	d01f      	beq.n	80194e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80194a6:	d82f      	bhi.n	8019508 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80194a8:	2b58      	cmp	r3, #88	; 0x58
 80194aa:	d01c      	beq.n	80194e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80194ac:	d818      	bhi.n	80194e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 80194ae:	2b25      	cmp	r3, #37	; 0x25
 80194b0:	d034      	beq.n	801951c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 80194b2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 80194b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80194b8:	f1bb 0f00 	cmp.w	fp, #0
 80194bc:	f000 80b8 	beq.w	8019630 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80194c0:	f8bb 5000 	ldrh.w	r5, [fp]
 80194c4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80194c8:	3301      	adds	r3, #1
 80194ca:	930d      	str	r3, [sp, #52]	; 0x34
 80194cc:	e029      	b.n	8019522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80194ce:	b10d      	cbz	r5, 80194d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80194d0:	782a      	ldrb	r2, [r5, #0]
 80194d2:	e785      	b.n	80193e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80194d4:	462a      	mov	r2, r5
 80194d6:	e783      	b.n	80193e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80194d8:	2a00      	cmp	r2, #0
 80194da:	d0ea      	beq.n	80194b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80194dc:	7813      	ldrb	r3, [r2, #0]
 80194de:	e7e0      	b.n	80194a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80194e0:	3b63      	subs	r3, #99	; 0x63
 80194e2:	2b01      	cmp	r3, #1
 80194e4:	d8e5      	bhi.n	80194b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80194e6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80194ea:	b329      	cbz	r1, 8019538 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80194ec:	880b      	ldrh	r3, [r1, #0]
 80194ee:	2b69      	cmp	r3, #105	; 0x69
 80194f0:	d063      	beq.n	80195ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80194f2:	d825      	bhi.n	8019540 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80194f4:	2b63      	cmp	r3, #99	; 0x63
 80194f6:	d038      	beq.n	801956a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80194f8:	2b64      	cmp	r3, #100	; 0x64
 80194fa:	d05e      	beq.n	80195ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80194fc:	2b58      	cmp	r3, #88	; 0x58
 80194fe:	d07b      	beq.n	80195f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019500:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8019504:	4625      	mov	r5, r4
 8019506:	e036      	b.n	8019576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019508:	2b73      	cmp	r3, #115	; 0x73
 801950a:	d0ec      	beq.n	80194e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801950c:	d802      	bhi.n	8019514 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801950e:	2b6f      	cmp	r3, #111	; 0x6f
 8019510:	d1cf      	bne.n	80194b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019512:	e7e8      	b.n	80194e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019514:	2b75      	cmp	r3, #117	; 0x75
 8019516:	d0e6      	beq.n	80194e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019518:	2b78      	cmp	r3, #120	; 0x78
 801951a:	e7f9      	b.n	8019510 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801951c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801951e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8019522:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019524:	b10b      	cbz	r3, 801952a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8019526:	3302      	adds	r3, #2
 8019528:	9309      	str	r3, [sp, #36]	; 0x24
 801952a:	9b08      	ldr	r3, [sp, #32]
 801952c:	2b00      	cmp	r3, #0
 801952e:	f43f af2e 	beq.w	801938e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019532:	3301      	adds	r3, #1
 8019534:	9308      	str	r3, [sp, #32]
 8019536:	e72a      	b.n	801938e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019538:	2a00      	cmp	r2, #0
 801953a:	d0e1      	beq.n	8019500 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801953c:	7813      	ldrb	r3, [r2, #0]
 801953e:	e7d6      	b.n	80194ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019540:	2b73      	cmp	r3, #115	; 0x73
 8019542:	d036      	beq.n	80195b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8019544:	d807      	bhi.n	8019556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8019546:	2b6f      	cmp	r3, #111	; 0x6f
 8019548:	d1da      	bne.n	8019500 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801954a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801954c:	1d25      	adds	r5, r4, #4
 801954e:	eba8 0202 	sub.w	r2, r8, r2
 8019552:	2308      	movs	r3, #8
 8019554:	e04a      	b.n	80195ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019556:	2b75      	cmp	r3, #117	; 0x75
 8019558:	d043      	beq.n	80195e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801955a:	2b78      	cmp	r3, #120	; 0x78
 801955c:	d1d0      	bne.n	8019500 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801955e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019560:	1d25      	adds	r5, r4, #4
 8019562:	eba8 0202 	sub.w	r2, r8, r2
 8019566:	2310      	movs	r3, #16
 8019568:	e040      	b.n	80195ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801956a:	6823      	ldr	r3, [r4, #0]
 801956c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019570:	1d25      	adds	r5, r4, #4
 8019572:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8019576:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019578:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801957c:	2b00      	cmp	r3, #0
 801957e:	d052      	beq.n	8019626 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019580:	881a      	ldrh	r2, [r3, #0]
 8019582:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019586:	a80d      	add	r0, sp, #52	; 0x34
 8019588:	9005      	str	r0, [sp, #20]
 801958a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801958e:	9004      	str	r0, [sp, #16]
 8019590:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019592:	9003      	str	r0, [sp, #12]
 8019594:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019598:	9002      	str	r0, [sp, #8]
 801959a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801959c:	9001      	str	r0, [sp, #4]
 801959e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80195a2:	9000      	str	r0, [sp, #0]
 80195a4:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80195a8:	a810      	add	r0, sp, #64	; 0x40
 80195aa:	f7ff fd49 	bl	8019040 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80195ae:	462c      	mov	r4, r5
 80195b0:	e7b7      	b.n	8019522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80195b2:	6823      	ldr	r3, [r4, #0]
 80195b4:	1d25      	adds	r5, r4, #4
 80195b6:	9310      	str	r3, [sp, #64]	; 0x40
 80195b8:	e7dd      	b.n	8019576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80195ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80195bc:	6820      	ldr	r0, [r4, #0]
 80195be:	eba8 0202 	sub.w	r2, r8, r2
 80195c2:	230a      	movs	r3, #10
 80195c4:	b292      	uxth	r2, r2
 80195c6:	4649      	mov	r1, r9
 80195c8:	f7ff fcf0 	bl	8018fac <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80195cc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80195d0:	2b2d      	cmp	r3, #45	; 0x2d
 80195d2:	f104 0504 	add.w	r5, r4, #4
 80195d6:	d1ce      	bne.n	8019576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80195d8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80195dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195de:	3302      	adds	r3, #2
 80195e0:	e7e9      	b.n	80195b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80195e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80195e4:	1d25      	adds	r5, r4, #4
 80195e6:	eba8 0202 	sub.w	r2, r8, r2
 80195ea:	230a      	movs	r3, #10
 80195ec:	b292      	uxth	r2, r2
 80195ee:	4649      	mov	r1, r9
 80195f0:	6820      	ldr	r0, [r4, #0]
 80195f2:	f7ff fd07 	bl	8019004 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80195f6:	e7be      	b.n	8019576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80195f8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80195fa:	6820      	ldr	r0, [r4, #0]
 80195fc:	eba8 0202 	sub.w	r2, r8, r2
 8019600:	b292      	uxth	r2, r2
 8019602:	2310      	movs	r3, #16
 8019604:	4649      	mov	r1, r9
 8019606:	f7ff fcfd 	bl	8019004 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801960a:	1d25      	adds	r5, r4, #4
 801960c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019610:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019614:	2b00      	cmp	r3, #0
 8019616:	d0ae      	beq.n	8019576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019618:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801961c:	2919      	cmp	r1, #25
 801961e:	d8f7      	bhi.n	8019610 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019620:	3b20      	subs	r3, #32
 8019622:	8013      	strh	r3, [r2, #0]
 8019624:	e7f4      	b.n	8019610 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019626:	9a08      	ldr	r2, [sp, #32]
 8019628:	2a00      	cmp	r2, #0
 801962a:	d0aa      	beq.n	8019582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801962c:	7812      	ldrb	r2, [r2, #0]
 801962e:	e7a8      	b.n	8019582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019630:	2d00      	cmp	r5, #0
 8019632:	f43f af47 	beq.w	80194c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8019636:	782d      	ldrb	r5, [r5, #0]
 8019638:	e744      	b.n	80194c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801963a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801963a:	b507      	push	{r0, r1, r2, lr}
 801963c:	9300      	str	r3, [sp, #0]
 801963e:	4613      	mov	r3, r2
 8019640:	2200      	movs	r2, #0
 8019642:	f7ff fe90 	bl	8019366 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019646:	b003      	add	sp, #12
 8019648:	f85d fb04 	ldr.w	pc, [sp], #4

0801964c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801964c:	b40c      	push	{r2, r3}
 801964e:	b507      	push	{r0, r1, r2, lr}
 8019650:	ab04      	add	r3, sp, #16
 8019652:	f853 2b04 	ldr.w	r2, [r3], #4
 8019656:	9301      	str	r3, [sp, #4]
 8019658:	f7ff ffef 	bl	801963a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801965c:	b003      	add	sp, #12
 801965e:	f85d eb04 	ldr.w	lr, [sp], #4
 8019662:	b002      	add	sp, #8
 8019664:	4770      	bx	lr
	...

08019668 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019668:	4b01      	ldr	r3, [pc, #4]	; (8019670 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801966a:	6018      	str	r0, [r3, #0]
 801966c:	4770      	bx	lr
 801966e:	bf00      	nop
 8019670:	200259f8 	.word	0x200259f8

08019674 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019674:	4b06      	ldr	r3, [pc, #24]	; (8019690 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8019676:	881a      	ldrh	r2, [r3, #0]
 8019678:	4282      	cmp	r2, r0
 801967a:	d807      	bhi.n	801968c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801967c:	4b05      	ldr	r3, [pc, #20]	; (8019694 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801967e:	881b      	ldrh	r3, [r3, #0]
 8019680:	4413      	add	r3, r2
 8019682:	4298      	cmp	r0, r3
 8019684:	bfac      	ite	ge
 8019686:	2000      	movge	r0, #0
 8019688:	2001      	movlt	r0, #1
 801968a:	4770      	bx	lr
 801968c:	2000      	movs	r0, #0
 801968e:	4770      	bx	lr
 8019690:	20025a18 	.word	0x20025a18
 8019694:	20025a1c 	.word	0x20025a1c

08019698 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019698:	b508      	push	{r3, lr}
 801969a:	4601      	mov	r1, r0
 801969c:	f7ff ffea 	bl	8019674 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80196a0:	b118      	cbz	r0, 80196aa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80196a2:	4b02      	ldr	r3, [pc, #8]	; (80196ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80196a4:	681b      	ldr	r3, [r3, #0]
 80196a6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80196aa:	bd08      	pop	{r3, pc}
 80196ac:	200259fc 	.word	0x200259fc

080196b0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80196b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80196b2:	4c24      	ldr	r4, [pc, #144]	; (8019744 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80196b4:	6823      	ldr	r3, [r4, #0]
 80196b6:	2b00      	cmp	r3, #0
 80196b8:	d042      	beq.n	8019740 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80196ba:	4a23      	ldr	r2, [pc, #140]	; (8019748 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80196bc:	4d23      	ldr	r5, [pc, #140]	; (801974c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80196be:	8811      	ldrh	r1, [r2, #0]
 80196c0:	f8b5 c000 	ldrh.w	ip, [r5]
 80196c4:	4822      	ldr	r0, [pc, #136]	; (8019750 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80196c6:	4461      	add	r1, ip
 80196c8:	1c4a      	adds	r2, r1, #1
 80196ca:	f022 0201 	bic.w	r2, r2, #1
 80196ce:	008f      	lsls	r7, r1, #2
 80196d0:	0412      	lsls	r2, r2, #16
 80196d2:	19de      	adds	r6, r3, r7
 80196d4:	0c12      	lsrs	r2, r2, #16
 80196d6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80196da:	6006      	str	r6, [r0, #0]
 80196dc:	4e1d      	ldr	r6, [pc, #116]	; (8019754 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80196de:	19da      	adds	r2, r3, r7
 80196e0:	6032      	str	r2, [r6, #0]
 80196e2:	220e      	movs	r2, #14
 80196e4:	fb02 f20c 	mul.w	r2, r2, ip
 80196e8:	3203      	adds	r2, #3
 80196ea:	f022 0203 	bic.w	r2, r2, #3
 80196ee:	443a      	add	r2, r7
 80196f0:	4f19      	ldr	r7, [pc, #100]	; (8019758 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80196f2:	4413      	add	r3, r2
 80196f4:	603b      	str	r3, [r7, #0]
 80196f6:	4f19      	ldr	r7, [pc, #100]	; (801975c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80196f8:	2300      	movs	r3, #0
 80196fa:	803b      	strh	r3, [r7, #0]
 80196fc:	4f18      	ldr	r7, [pc, #96]	; (8019760 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80196fe:	683f      	ldr	r7, [r7, #0]
 8019700:	1aba      	subs	r2, r7, r2
 8019702:	4f18      	ldr	r7, [pc, #96]	; (8019764 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019704:	603a      	str	r2, [r7, #0]
 8019706:	4a18      	ldr	r2, [pc, #96]	; (8019768 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019708:	469c      	mov	ip, r3
 801970a:	8013      	strh	r3, [r2, #0]
 801970c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019710:	428b      	cmp	r3, r1
 8019712:	d10d      	bne.n	8019730 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019714:	882d      	ldrh	r5, [r5, #0]
 8019716:	6830      	ldr	r0, [r6, #0]
 8019718:	2300      	movs	r3, #0
 801971a:	240e      	movs	r4, #14
 801971c:	429d      	cmp	r5, r3
 801971e:	d90f      	bls.n	8019740 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019720:	fb04 0203 	mla	r2, r4, r3, r0
 8019724:	3301      	adds	r3, #1
 8019726:	7b11      	ldrb	r1, [r2, #12]
 8019728:	f36f 1145 	bfc	r1, #5, #1
 801972c:	7311      	strb	r1, [r2, #12]
 801972e:	e7f5      	b.n	801971c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019730:	6822      	ldr	r2, [r4, #0]
 8019732:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8019736:	6802      	ldr	r2, [r0, #0]
 8019738:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801973c:	3301      	adds	r3, #1
 801973e:	e7e7      	b.n	8019710 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019740:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019742:	bf00      	nop
 8019744:	200259fc 	.word	0x200259fc
 8019748:	20025a18 	.word	0x20025a18
 801974c:	20025a1c 	.word	0x20025a1c
 8019750:	20025a10 	.word	0x20025a10
 8019754:	20025a00 	.word	0x20025a00
 8019758:	20025a08 	.word	0x20025a08
 801975c:	20025a1a 	.word	0x20025a1a
 8019760:	20025a04 	.word	0x20025a04
 8019764:	20025a14 	.word	0x20025a14
 8019768:	20025a0c 	.word	0x20025a0c

0801976c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801976c:	4b06      	ldr	r3, [pc, #24]	; (8019788 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801976e:	681b      	ldr	r3, [r3, #0]
 8019770:	b943      	cbnz	r3, 8019784 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019772:	b139      	cbz	r1, 8019784 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019774:	4b05      	ldr	r3, [pc, #20]	; (801978c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8019776:	801a      	strh	r2, [r3, #0]
 8019778:	4b05      	ldr	r3, [pc, #20]	; (8019790 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801977a:	6019      	str	r1, [r3, #0]
 801977c:	4b05      	ldr	r3, [pc, #20]	; (8019794 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801977e:	6018      	str	r0, [r3, #0]
 8019780:	f7ff bf96 	b.w	80196b0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019784:	4770      	bx	lr
 8019786:	bf00      	nop
 8019788:	20025a08 	.word	0x20025a08
 801978c:	20025a1c 	.word	0x20025a1c
 8019790:	20025a04 	.word	0x20025a04
 8019794:	200259fc 	.word	0x200259fc

08019798 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8019798:	b470      	push	{r4, r5, r6}
 801979a:	4c07      	ldr	r4, [pc, #28]	; (80197b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801979c:	6826      	ldr	r6, [r4, #0]
 801979e:	4605      	mov	r5, r0
 80197a0:	4610      	mov	r0, r2
 80197a2:	9a03      	ldr	r2, [sp, #12]
 80197a4:	b936      	cbnz	r6, 80197b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80197a6:	6025      	str	r5, [r4, #0]
 80197a8:	4c04      	ldr	r4, [pc, #16]	; (80197bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80197aa:	8021      	strh	r1, [r4, #0]
 80197ac:	bc70      	pop	{r4, r5, r6}
 80197ae:	4619      	mov	r1, r3
 80197b0:	f7ff bfdc 	b.w	801976c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80197b4:	bc70      	pop	{r4, r5, r6}
 80197b6:	4770      	bx	lr
 80197b8:	20025a20 	.word	0x20025a20
 80197bc:	20025a18 	.word	0x20025a18

080197c0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80197c0:	4a12      	ldr	r2, [pc, #72]	; (801980c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80197c2:	8803      	ldrh	r3, [r0, #0]
 80197c4:	8812      	ldrh	r2, [r2, #0]
 80197c6:	4293      	cmp	r3, r2
 80197c8:	d207      	bcs.n	80197da <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80197ca:	4a11      	ldr	r2, [pc, #68]	; (8019810 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80197cc:	6812      	ldr	r2, [r2, #0]
 80197ce:	2114      	movs	r1, #20
 80197d0:	fb01 2303 	mla	r3, r1, r3, r2
 80197d4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80197d8:	4770      	bx	lr
 80197da:	490e      	ldr	r1, [pc, #56]	; (8019814 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80197dc:	8809      	ldrh	r1, [r1, #0]
 80197de:	4411      	add	r1, r2
 80197e0:	428b      	cmp	r3, r1
 80197e2:	da04      	bge.n	80197ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80197e4:	1a9b      	subs	r3, r3, r2
 80197e6:	4a0c      	ldr	r2, [pc, #48]	; (8019818 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80197e8:	210e      	movs	r1, #14
 80197ea:	6812      	ldr	r2, [r2, #0]
 80197ec:	e7f0      	b.n	80197d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80197ee:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80197f2:	4293      	cmp	r3, r2
 80197f4:	d108      	bne.n	8019808 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80197f6:	4b09      	ldr	r3, [pc, #36]	; (801981c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80197f8:	781b      	ldrb	r3, [r3, #0]
 80197fa:	b91b      	cbnz	r3, 8019804 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80197fc:	4b08      	ldr	r3, [pc, #32]	; (8019820 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80197fe:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019802:	4770      	bx	lr
 8019804:	4b07      	ldr	r3, [pc, #28]	; (8019824 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8019806:	e7fa      	b.n	80197fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019808:	2000      	movs	r0, #0
 801980a:	4770      	bx	lr
 801980c:	20025a18 	.word	0x20025a18
 8019810:	20025a20 	.word	0x20025a20
 8019814:	20025a1c 	.word	0x20025a1c
 8019818:	20025a00 	.word	0x20025a00
 801981c:	20025990 	.word	0x20025990
 8019820:	20025992 	.word	0x20025992
 8019824:	20025994 	.word	0x20025994

08019828 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019828:	4a12      	ldr	r2, [pc, #72]	; (8019874 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801982a:	8803      	ldrh	r3, [r0, #0]
 801982c:	8812      	ldrh	r2, [r2, #0]
 801982e:	4293      	cmp	r3, r2
 8019830:	d207      	bcs.n	8019842 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8019832:	4a11      	ldr	r2, [pc, #68]	; (8019878 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8019834:	6812      	ldr	r2, [r2, #0]
 8019836:	2114      	movs	r1, #20
 8019838:	fb01 2303 	mla	r3, r1, r3, r2
 801983c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019840:	4770      	bx	lr
 8019842:	490e      	ldr	r1, [pc, #56]	; (801987c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019844:	8809      	ldrh	r1, [r1, #0]
 8019846:	4411      	add	r1, r2
 8019848:	428b      	cmp	r3, r1
 801984a:	da04      	bge.n	8019856 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801984c:	1a9b      	subs	r3, r3, r2
 801984e:	4a0c      	ldr	r2, [pc, #48]	; (8019880 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8019850:	210e      	movs	r1, #14
 8019852:	6812      	ldr	r2, [r2, #0]
 8019854:	e7f0      	b.n	8019838 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8019856:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801985a:	4293      	cmp	r3, r2
 801985c:	d108      	bne.n	8019870 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801985e:	4b09      	ldr	r3, [pc, #36]	; (8019884 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8019860:	781b      	ldrb	r3, [r3, #0]
 8019862:	b91b      	cbnz	r3, 801986c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8019864:	4b08      	ldr	r3, [pc, #32]	; (8019888 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8019866:	f9b3 0000 	ldrsh.w	r0, [r3]
 801986a:	4770      	bx	lr
 801986c:	4b07      	ldr	r3, [pc, #28]	; (801988c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801986e:	e7fa      	b.n	8019866 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8019870:	2000      	movs	r0, #0
 8019872:	4770      	bx	lr
 8019874:	20025a18 	.word	0x20025a18
 8019878:	20025a20 	.word	0x20025a20
 801987c:	20025a1c 	.word	0x20025a1c
 8019880:	20025a00 	.word	0x20025a00
 8019884:	20025990 	.word	0x20025990
 8019888:	20025994 	.word	0x20025994
 801988c:	20025992 	.word	0x20025992

08019890 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019890:	b510      	push	{r4, lr}
 8019892:	4a1f      	ldr	r2, [pc, #124]	; (8019910 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8019894:	880b      	ldrh	r3, [r1, #0]
 8019896:	8812      	ldrh	r2, [r2, #0]
 8019898:	4293      	cmp	r3, r2
 801989a:	d213      	bcs.n	80198c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801989c:	4a1d      	ldr	r2, [pc, #116]	; (8019914 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801989e:	6812      	ldr	r2, [r2, #0]
 80198a0:	2114      	movs	r1, #20
 80198a2:	fb01 2303 	mla	r3, r1, r3, r2
 80198a6:	8a1a      	ldrh	r2, [r3, #16]
 80198a8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80198ac:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80198b0:	8a5b      	ldrh	r3, [r3, #18]
 80198b2:	8004      	strh	r4, [r0, #0]
 80198b4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80198b8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80198bc:	8041      	strh	r1, [r0, #2]
 80198be:	8082      	strh	r2, [r0, #4]
 80198c0:	80c3      	strh	r3, [r0, #6]
 80198c2:	e00e      	b.n	80198e2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80198c4:	4914      	ldr	r1, [pc, #80]	; (8019918 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80198c6:	8809      	ldrh	r1, [r1, #0]
 80198c8:	4411      	add	r1, r2
 80198ca:	428b      	cmp	r3, r1
 80198cc:	da0a      	bge.n	80198e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80198ce:	1a9b      	subs	r3, r3, r2
 80198d0:	4a12      	ldr	r2, [pc, #72]	; (801991c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80198d2:	6812      	ldr	r2, [r2, #0]
 80198d4:	210e      	movs	r1, #14
 80198d6:	fb01 2303 	mla	r3, r1, r3, r2
 80198da:	681a      	ldr	r2, [r3, #0]
 80198dc:	6002      	str	r2, [r0, #0]
 80198de:	685a      	ldr	r2, [r3, #4]
 80198e0:	6042      	str	r2, [r0, #4]
 80198e2:	bd10      	pop	{r4, pc}
 80198e4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80198e8:	4293      	cmp	r3, r2
 80198ea:	d10b      	bne.n	8019904 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80198ec:	4b0c      	ldr	r3, [pc, #48]	; (8019920 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80198ee:	f9b3 1000 	ldrsh.w	r1, [r3]
 80198f2:	4b0c      	ldr	r3, [pc, #48]	; (8019924 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80198f4:	8081      	strh	r1, [r0, #4]
 80198f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80198fa:	80c2      	strh	r2, [r0, #6]
 80198fc:	2300      	movs	r3, #0
 80198fe:	8003      	strh	r3, [r0, #0]
 8019900:	8043      	strh	r3, [r0, #2]
 8019902:	e7ee      	b.n	80198e2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019904:	2300      	movs	r3, #0
 8019906:	8003      	strh	r3, [r0, #0]
 8019908:	8043      	strh	r3, [r0, #2]
 801990a:	8083      	strh	r3, [r0, #4]
 801990c:	e7d8      	b.n	80198c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801990e:	bf00      	nop
 8019910:	20025a18 	.word	0x20025a18
 8019914:	20025a20 	.word	0x20025a20
 8019918:	20025a1c 	.word	0x20025a1c
 801991c:	20025a00 	.word	0x20025a00
 8019920:	2002598c 	.word	0x2002598c
 8019924:	2002598e 	.word	0x2002598e

08019928 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019928:	4a17      	ldr	r2, [pc, #92]	; (8019988 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801992a:	8803      	ldrh	r3, [r0, #0]
 801992c:	8812      	ldrh	r2, [r2, #0]
 801992e:	4293      	cmp	r3, r2
 8019930:	d213      	bcs.n	801995a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8019932:	4a16      	ldr	r2, [pc, #88]	; (801998c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019934:	6812      	ldr	r2, [r2, #0]
 8019936:	2114      	movs	r1, #20
 8019938:	fb01 2303 	mla	r3, r1, r3, r2
 801993c:	8a1a      	ldrh	r2, [r3, #16]
 801993e:	8919      	ldrh	r1, [r3, #8]
 8019940:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019944:	428a      	cmp	r2, r1
 8019946:	db1d      	blt.n	8019984 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019948:	8a58      	ldrh	r0, [r3, #18]
 801994a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801994e:	895b      	ldrh	r3, [r3, #10]
 8019950:	4298      	cmp	r0, r3
 8019952:	bfac      	ite	ge
 8019954:	2000      	movge	r0, #0
 8019956:	2001      	movlt	r0, #1
 8019958:	4770      	bx	lr
 801995a:	490d      	ldr	r1, [pc, #52]	; (8019990 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801995c:	8809      	ldrh	r1, [r1, #0]
 801995e:	4411      	add	r1, r2
 8019960:	428b      	cmp	r3, r1
 8019962:	da0d      	bge.n	8019980 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8019964:	1a9b      	subs	r3, r3, r2
 8019966:	4a0b      	ldr	r2, [pc, #44]	; (8019994 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8019968:	6812      	ldr	r2, [r2, #0]
 801996a:	210e      	movs	r1, #14
 801996c:	fb01 2303 	mla	r3, r1, r3, r2
 8019970:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019974:	891a      	ldrh	r2, [r3, #8]
 8019976:	4291      	cmp	r1, r2
 8019978:	db04      	blt.n	8019984 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801997a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801997e:	e7e6      	b.n	801994e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8019980:	2000      	movs	r0, #0
 8019982:	4770      	bx	lr
 8019984:	2001      	movs	r0, #1
 8019986:	4770      	bx	lr
 8019988:	20025a18 	.word	0x20025a18
 801998c:	20025a20 	.word	0x20025a20
 8019990:	20025a1c 	.word	0x20025a1c
 8019994:	20025a00 	.word	0x20025a00

08019998 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8019998:	4a12      	ldr	r2, [pc, #72]	; (80199e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801999a:	8803      	ldrh	r3, [r0, #0]
 801999c:	8811      	ldrh	r1, [r2, #0]
 801999e:	428b      	cmp	r3, r1
 80199a0:	d20b      	bcs.n	80199ba <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80199a2:	4a11      	ldr	r2, [pc, #68]	; (80199e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80199a4:	6812      	ldr	r2, [r2, #0]
 80199a6:	b112      	cbz	r2, 80199ae <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80199a8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80199ac:	b9c0      	cbnz	r0, 80199e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80199ae:	4a0f      	ldr	r2, [pc, #60]	; (80199ec <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80199b0:	6811      	ldr	r1, [r2, #0]
 80199b2:	2214      	movs	r2, #20
 80199b4:	4353      	muls	r3, r2
 80199b6:	58c8      	ldr	r0, [r1, r3]
 80199b8:	4770      	bx	lr
 80199ba:	4a0d      	ldr	r2, [pc, #52]	; (80199f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80199bc:	8812      	ldrh	r2, [r2, #0]
 80199be:	440a      	add	r2, r1
 80199c0:	4293      	cmp	r3, r2
 80199c2:	da04      	bge.n	80199ce <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80199c4:	4a08      	ldr	r2, [pc, #32]	; (80199e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80199c6:	6812      	ldr	r2, [r2, #0]
 80199c8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80199cc:	4770      	bx	lr
 80199ce:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80199d2:	4293      	cmp	r3, r2
 80199d4:	d103      	bne.n	80199de <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80199d6:	4b07      	ldr	r3, [pc, #28]	; (80199f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80199d8:	681b      	ldr	r3, [r3, #0]
 80199da:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80199dc:	4770      	bx	lr
 80199de:	2000      	movs	r0, #0
 80199e0:	4770      	bx	lr
 80199e2:	bf00      	nop
 80199e4:	20025a18 	.word	0x20025a18
 80199e8:	200259fc 	.word	0x200259fc
 80199ec:	20025a20 	.word	0x20025a20
 80199f0:	20025a1c 	.word	0x20025a1c
 80199f4:	20025998 	.word	0x20025998

080199f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80199f8:	4b24      	ldr	r3, [pc, #144]	; (8019a8c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80199fa:	8802      	ldrh	r2, [r0, #0]
 80199fc:	8818      	ldrh	r0, [r3, #0]
 80199fe:	4282      	cmp	r2, r0
 8019a00:	d221      	bcs.n	8019a46 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019a02:	4b23      	ldr	r3, [pc, #140]	; (8019a90 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019a04:	6819      	ldr	r1, [r3, #0]
 8019a06:	2314      	movs	r3, #20
 8019a08:	fb03 1302 	mla	r3, r3, r2, r1
 8019a0c:	6858      	ldr	r0, [r3, #4]
 8019a0e:	2800      	cmp	r0, #0
 8019a10:	d03a      	beq.n	8019a88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019a12:	4920      	ldr	r1, [pc, #128]	; (8019a94 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019a14:	6809      	ldr	r1, [r1, #0]
 8019a16:	2900      	cmp	r1, #0
 8019a18:	d036      	beq.n	8019a88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019a1a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019a1e:	2900      	cmp	r1, #0
 8019a20:	d032      	beq.n	8019a88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019a22:	891a      	ldrh	r2, [r3, #8]
 8019a24:	8958      	ldrh	r0, [r3, #10]
 8019a26:	4350      	muls	r0, r2
 8019a28:	7c5a      	ldrb	r2, [r3, #17]
 8019a2a:	7cdb      	ldrb	r3, [r3, #19]
 8019a2c:	0952      	lsrs	r2, r2, #5
 8019a2e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019a32:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8019a36:	2b0b      	cmp	r3, #11
 8019a38:	bf18      	it	ne
 8019a3a:	0040      	lslne	r0, r0, #1
 8019a3c:	3003      	adds	r0, #3
 8019a3e:	f020 0003 	bic.w	r0, r0, #3
 8019a42:	4408      	add	r0, r1
 8019a44:	4770      	bx	lr
 8019a46:	4b14      	ldr	r3, [pc, #80]	; (8019a98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8019a48:	881b      	ldrh	r3, [r3, #0]
 8019a4a:	4403      	add	r3, r0
 8019a4c:	429a      	cmp	r2, r3
 8019a4e:	da1a      	bge.n	8019a86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019a50:	4b12      	ldr	r3, [pc, #72]	; (8019a9c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019a52:	681b      	ldr	r3, [r3, #0]
 8019a54:	1a10      	subs	r0, r2, r0
 8019a56:	210e      	movs	r1, #14
 8019a58:	fb01 3000 	mla	r0, r1, r0, r3
 8019a5c:	7b03      	ldrb	r3, [r0, #12]
 8019a5e:	f003 031f 	and.w	r3, r3, #31
 8019a62:	2b0b      	cmp	r3, #11
 8019a64:	d10b      	bne.n	8019a7e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8019a66:	8903      	ldrh	r3, [r0, #8]
 8019a68:	8940      	ldrh	r0, [r0, #10]
 8019a6a:	4358      	muls	r0, r3
 8019a6c:	4b09      	ldr	r3, [pc, #36]	; (8019a94 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019a6e:	6819      	ldr	r1, [r3, #0]
 8019a70:	3003      	adds	r0, #3
 8019a72:	f020 0303 	bic.w	r3, r0, #3
 8019a76:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8019a7a:	4418      	add	r0, r3
 8019a7c:	4770      	bx	lr
 8019a7e:	2b0d      	cmp	r3, #13
 8019a80:	d101      	bne.n	8019a86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019a82:	300d      	adds	r0, #13
 8019a84:	4770      	bx	lr
 8019a86:	2000      	movs	r0, #0
 8019a88:	4770      	bx	lr
 8019a8a:	bf00      	nop
 8019a8c:	20025a18 	.word	0x20025a18
 8019a90:	20025a20 	.word	0x20025a20
 8019a94:	200259fc 	.word	0x200259fc
 8019a98:	20025a1c 	.word	0x20025a1c
 8019a9c:	20025a00 	.word	0x20025a00

08019aa0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019aa0:	b510      	push	{r4, lr}
 8019aa2:	4a17      	ldr	r2, [pc, #92]	; (8019b00 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019aa4:	8803      	ldrh	r3, [r0, #0]
 8019aa6:	8812      	ldrh	r2, [r2, #0]
 8019aa8:	4293      	cmp	r3, r2
 8019aaa:	d20c      	bcs.n	8019ac6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019aac:	4a15      	ldr	r2, [pc, #84]	; (8019b04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019aae:	6812      	ldr	r2, [r2, #0]
 8019ab0:	2114      	movs	r1, #20
 8019ab2:	fb01 2303 	mla	r3, r1, r3, r2
 8019ab6:	7c58      	ldrb	r0, [r3, #17]
 8019ab8:	0942      	lsrs	r2, r0, #5
 8019aba:	7cd8      	ldrb	r0, [r3, #19]
 8019abc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8019ac0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8019ac4:	bd10      	pop	{r4, pc}
 8019ac6:	4910      	ldr	r1, [pc, #64]	; (8019b08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8019ac8:	8809      	ldrh	r1, [r1, #0]
 8019aca:	4411      	add	r1, r2
 8019acc:	428b      	cmp	r3, r1
 8019ace:	da09      	bge.n	8019ae4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8019ad0:	1a9b      	subs	r3, r3, r2
 8019ad2:	4a0e      	ldr	r2, [pc, #56]	; (8019b0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8019ad4:	6812      	ldr	r2, [r2, #0]
 8019ad6:	210e      	movs	r1, #14
 8019ad8:	fb01 2303 	mla	r3, r1, r3, r2
 8019adc:	7b18      	ldrb	r0, [r3, #12]
 8019ade:	f000 001f 	and.w	r0, r0, #31
 8019ae2:	e7ef      	b.n	8019ac4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019ae4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019ae8:	4293      	cmp	r3, r2
 8019aea:	d106      	bne.n	8019afa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8019aec:	f7f4 ff26 	bl	800e93c <_ZN8touchgfx3HAL3lcdEv>
 8019af0:	6803      	ldr	r3, [r0, #0]
 8019af2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019af6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019af8:	4718      	bx	r3
 8019afa:	2000      	movs	r0, #0
 8019afc:	e7e2      	b.n	8019ac4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019afe:	bf00      	nop
 8019b00:	20025a18 	.word	0x20025a18
 8019b04:	20025a20 	.word	0x20025a20
 8019b08:	20025a1c 	.word	0x20025a1c
 8019b0c:	20025a00 	.word	0x20025a00

08019b10 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019b10:	2010      	movs	r0, #16
 8019b12:	4770      	bx	lr

08019b14 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019b14:	2000      	movs	r0, #0
 8019b16:	4770      	bx	lr

08019b18 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8019b18:	4b02      	ldr	r3, [pc, #8]	; (8019b24 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8019b1a:	8818      	ldrh	r0, [r3, #0]
 8019b1c:	0040      	lsls	r0, r0, #1
 8019b1e:	b280      	uxth	r0, r0
 8019b20:	4770      	bx	lr
 8019b22:	bf00      	nop
 8019b24:	20025992 	.word	0x20025992

08019b28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019b28:	2bff      	cmp	r3, #255	; 0xff
 8019b2a:	d050      	beq.n	8019bce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019b2c:	2a0b      	cmp	r2, #11
 8019b2e:	d04a      	beq.n	8019bc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019b30:	d80e      	bhi.n	8019b50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019b32:	2a03      	cmp	r2, #3
 8019b34:	d03f      	beq.n	8019bb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8019b36:	d804      	bhi.n	8019b42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8019b38:	2a01      	cmp	r2, #1
 8019b3a:	d03e      	beq.n	8019bba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019b3c:	d93f      	bls.n	8019bbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019b3e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019b40:	4770      	bx	lr
 8019b42:	2a09      	cmp	r2, #9
 8019b44:	d03f      	beq.n	8019bc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019b46:	d83c      	bhi.n	8019bc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019b48:	2a08      	cmp	r2, #8
 8019b4a:	d03a      	beq.n	8019bc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019b4c:	2000      	movs	r0, #0
 8019b4e:	4770      	bx	lr
 8019b50:	2a2f      	cmp	r2, #47	; 0x2f
 8019b52:	d024      	beq.n	8019b9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019b54:	d80d      	bhi.n	8019b72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8019b56:	2a2d      	cmp	r2, #45	; 0x2d
 8019b58:	d014      	beq.n	8019b84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8019b5a:	d826      	bhi.n	8019baa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019b5c:	2a2c      	cmp	r2, #44	; 0x2c
 8019b5e:	d1f5      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b60:	684b      	ldr	r3, [r1, #4]
 8019b62:	781b      	ldrb	r3, [r3, #0]
 8019b64:	2b01      	cmp	r3, #1
 8019b66:	d018      	beq.n	8019b9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8019b68:	d323      	bcc.n	8019bb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8019b6a:	2b02      	cmp	r3, #2
 8019b6c:	d1ee      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b6e:	6880      	ldr	r0, [r0, #8]
 8019b70:	4770      	bx	lr
 8019b72:	2a31      	cmp	r2, #49	; 0x31
 8019b74:	d004      	beq.n	8019b80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8019b76:	d328      	bcc.n	8019bca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019b78:	2a32      	cmp	r2, #50	; 0x32
 8019b7a:	d026      	beq.n	8019bca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019b7c:	2a33      	cmp	r2, #51	; 0x33
 8019b7e:	d1e5      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b80:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019b82:	4770      	bx	lr
 8019b84:	684b      	ldr	r3, [r1, #4]
 8019b86:	781b      	ldrb	r3, [r3, #0]
 8019b88:	2b01      	cmp	r3, #1
 8019b8a:	d004      	beq.n	8019b96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019b8c:	d30b      	bcc.n	8019ba6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019b8e:	2b02      	cmp	r3, #2
 8019b90:	d1dc      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b92:	6900      	ldr	r0, [r0, #16]
 8019b94:	4770      	bx	lr
 8019b96:	6a00      	ldr	r0, [r0, #32]
 8019b98:	4770      	bx	lr
 8019b9a:	6980      	ldr	r0, [r0, #24]
 8019b9c:	4770      	bx	lr
 8019b9e:	684b      	ldr	r3, [r1, #4]
 8019ba0:	781b      	ldrb	r3, [r3, #0]
 8019ba2:	2b00      	cmp	r3, #0
 8019ba4:	d1d2      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ba6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8019ba8:	4770      	bx	lr
 8019baa:	684b      	ldr	r3, [r1, #4]
 8019bac:	781b      	ldrb	r3, [r3, #0]
 8019bae:	2b00      	cmp	r3, #0
 8019bb0:	d1cc      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019bb2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019bb4:	4770      	bx	lr
 8019bb6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8019bb8:	4770      	bx	lr
 8019bba:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8019bbc:	4770      	bx	lr
 8019bbe:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019bc0:	4770      	bx	lr
 8019bc2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019bc4:	4770      	bx	lr
 8019bc6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8019bc8:	4770      	bx	lr
 8019bca:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8019bcc:	4770      	bx	lr
 8019bce:	2a0b      	cmp	r2, #11
 8019bd0:	d049      	beq.n	8019c66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019bd2:	d80e      	bhi.n	8019bf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019bd4:	2a03      	cmp	r2, #3
 8019bd6:	d040      	beq.n	8019c5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8019bd8:	d804      	bhi.n	8019be4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8019bda:	2a01      	cmp	r2, #1
 8019bdc:	d03f      	beq.n	8019c5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019bde:	d940      	bls.n	8019c62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019be0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019be2:	4770      	bx	lr
 8019be4:	2a09      	cmp	r2, #9
 8019be6:	d03e      	beq.n	8019c66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019be8:	d801      	bhi.n	8019bee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8019bea:	2a08      	cmp	r2, #8
 8019bec:	d1ae      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019bee:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019bf0:	4770      	bx	lr
 8019bf2:	2a2f      	cmp	r2, #47	; 0x2f
 8019bf4:	d024      	beq.n	8019c40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8019bf6:	d80d      	bhi.n	8019c14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8019bf8:	2a2d      	cmp	r2, #45	; 0x2d
 8019bfa:	d014      	beq.n	8019c26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019bfc:	d826      	bhi.n	8019c4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019bfe:	2a2c      	cmp	r2, #44	; 0x2c
 8019c00:	d1a4      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c02:	684b      	ldr	r3, [r1, #4]
 8019c04:	781b      	ldrb	r3, [r3, #0]
 8019c06:	2b01      	cmp	r3, #1
 8019c08:	d018      	beq.n	8019c3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8019c0a:	d324      	bcc.n	8019c56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019c0c:	2b02      	cmp	r3, #2
 8019c0e:	d19d      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c10:	68c0      	ldr	r0, [r0, #12]
 8019c12:	4770      	bx	lr
 8019c14:	2a31      	cmp	r2, #49	; 0x31
 8019c16:	d004      	beq.n	8019c22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8019c18:	d327      	bcc.n	8019c6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019c1a:	2a32      	cmp	r2, #50	; 0x32
 8019c1c:	d025      	beq.n	8019c6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019c1e:	2a33      	cmp	r2, #51	; 0x33
 8019c20:	d194      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c22:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019c24:	4770      	bx	lr
 8019c26:	684b      	ldr	r3, [r1, #4]
 8019c28:	781b      	ldrb	r3, [r3, #0]
 8019c2a:	2b01      	cmp	r3, #1
 8019c2c:	d004      	beq.n	8019c38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019c2e:	d30b      	bcc.n	8019c48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019c30:	2b02      	cmp	r3, #2
 8019c32:	d18b      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c34:	6940      	ldr	r0, [r0, #20]
 8019c36:	4770      	bx	lr
 8019c38:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8019c3a:	4770      	bx	lr
 8019c3c:	69c0      	ldr	r0, [r0, #28]
 8019c3e:	4770      	bx	lr
 8019c40:	684b      	ldr	r3, [r1, #4]
 8019c42:	781b      	ldrb	r3, [r3, #0]
 8019c44:	2b00      	cmp	r3, #0
 8019c46:	d181      	bne.n	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c48:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8019c4a:	4770      	bx	lr
 8019c4c:	684b      	ldr	r3, [r1, #4]
 8019c4e:	781b      	ldrb	r3, [r3, #0]
 8019c50:	2b00      	cmp	r3, #0
 8019c52:	f47f af7b 	bne.w	8019b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019c56:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8019c58:	4770      	bx	lr
 8019c5a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019c5c:	4770      	bx	lr
 8019c5e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019c60:	4770      	bx	lr
 8019c62:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019c64:	4770      	bx	lr
 8019c66:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8019c68:	4770      	bx	lr
 8019c6a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019c6c:	4770      	bx	lr

08019c6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c72:	b087      	sub	sp, #28
 8019c74:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019c76:	9205      	str	r2, [sp, #20]
 8019c78:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019c7c:	9202      	str	r2, [sp, #8]
 8019c7e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019c82:	9101      	str	r1, [sp, #4]
 8019c84:	6841      	ldr	r1, [r0, #4]
 8019c86:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019c8a:	fb01 2404 	mla	r4, r1, r4, r2
 8019c8e:	6802      	ldr	r2, [r0, #0]
 8019c90:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019c94:	f8de 2000 	ldr.w	r2, [lr]
 8019c98:	9203      	str	r2, [sp, #12]
 8019c9a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019c9e:	3204      	adds	r2, #4
 8019ca0:	9204      	str	r2, [sp, #16]
 8019ca2:	9a02      	ldr	r2, [sp, #8]
 8019ca4:	43d6      	mvns	r6, r2
 8019ca6:	b2f6      	uxtb	r6, r6
 8019ca8:	9a01      	ldr	r2, [sp, #4]
 8019caa:	2a00      	cmp	r2, #0
 8019cac:	dc03      	bgt.n	8019cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019cae:	9a05      	ldr	r2, [sp, #20]
 8019cb0:	2a00      	cmp	r2, #0
 8019cb2:	f340 8129 	ble.w	8019f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019cb6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019cb8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019cbc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019cc0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019cc4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019cc6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019cca:	2b00      	cmp	r3, #0
 8019ccc:	dd0e      	ble.n	8019cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019cce:	1408      	asrs	r0, r1, #16
 8019cd0:	d405      	bmi.n	8019cde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019cd2:	4560      	cmp	r0, ip
 8019cd4:	da03      	bge.n	8019cde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019cd6:	1410      	asrs	r0, r2, #16
 8019cd8:	d401      	bmi.n	8019cde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019cda:	42b8      	cmp	r0, r7
 8019cdc:	db07      	blt.n	8019cee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019cde:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019ce0:	4401      	add	r1, r0
 8019ce2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019ce4:	3b01      	subs	r3, #1
 8019ce6:	4402      	add	r2, r0
 8019ce8:	3402      	adds	r4, #2
 8019cea:	e7ee      	b.n	8019cca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019cec:	d071      	beq.n	8019dd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019cee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019cf0:	1e58      	subs	r0, r3, #1
 8019cf2:	fb05 1500 	mla	r5, r5, r0, r1
 8019cf6:	142d      	asrs	r5, r5, #16
 8019cf8:	d45f      	bmi.n	8019dba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019cfa:	4565      	cmp	r5, ip
 8019cfc:	da5d      	bge.n	8019dba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019cfe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019d00:	fb05 2000 	mla	r0, r5, r0, r2
 8019d04:	1400      	asrs	r0, r0, #16
 8019d06:	d458      	bmi.n	8019dba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019d08:	42b8      	cmp	r0, r7
 8019d0a:	da56      	bge.n	8019dba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019d0c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019d10:	4699      	mov	r9, r3
 8019d12:	46a2      	mov	sl, r4
 8019d14:	f1b9 0f00 	cmp.w	r9, #0
 8019d18:	dd57      	ble.n	8019dca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019d1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019d1e:	9803      	ldr	r0, [sp, #12]
 8019d20:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019d24:	140d      	asrs	r5, r1, #16
 8019d26:	fb07 000c 	mla	r0, r7, ip, r0
 8019d2a:	f109 39ff 	add.w	r9, r9, #4294967295
 8019d2e:	5d40      	ldrb	r0, [r0, r5]
 8019d30:	9d04      	ldr	r5, [sp, #16]
 8019d32:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019d36:	f8ba 5000 	ldrh.w	r5, [sl]
 8019d3a:	122f      	asrs	r7, r5, #8
 8019d3c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019d40:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019d44:	fb17 f706 	smulbb	r7, r7, r6
 8019d48:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019d4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d50:	00ed      	lsls	r5, r5, #3
 8019d52:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019d56:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019d5a:	10c7      	asrs	r7, r0, #3
 8019d5c:	b2ed      	uxtb	r5, r5
 8019d5e:	00c0      	lsls	r0, r0, #3
 8019d60:	fb18 f806 	smulbb	r8, r8, r6
 8019d64:	fb15 f506 	smulbb	r5, r5, r6
 8019d68:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019d6c:	b2c0      	uxtb	r0, r0
 8019d6e:	fa1f fc8c 	uxth.w	ip, ip
 8019d72:	fb07 870b 	mla	r7, r7, fp, r8
 8019d76:	fb00 500b 	mla	r0, r0, fp, r5
 8019d7a:	b280      	uxth	r0, r0
 8019d7c:	b2bf      	uxth	r7, r7
 8019d7e:	f10c 0501 	add.w	r5, ip, #1
 8019d82:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019d86:	f107 0801 	add.w	r8, r7, #1
 8019d8a:	1c45      	adds	r5, r0, #1
 8019d8c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019d90:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019d94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019d96:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019d9a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019d9e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019da2:	ea45 0c0c 	orr.w	ip, r5, ip
 8019da6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019daa:	4401      	add	r1, r0
 8019dac:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019dae:	ea4c 0c08 	orr.w	ip, ip, r8
 8019db2:	f82a cb02 	strh.w	ip, [sl], #2
 8019db6:	4402      	add	r2, r0
 8019db8:	e7ac      	b.n	8019d14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019dba:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019dbe:	f04f 0800 	mov.w	r8, #0
 8019dc2:	eb03 0008 	add.w	r0, r3, r8
 8019dc6:	2800      	cmp	r0, #0
 8019dc8:	dc41      	bgt.n	8019e4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019dca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019dce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019dd2:	9b01      	ldr	r3, [sp, #4]
 8019dd4:	2b00      	cmp	r3, #0
 8019dd6:	f340 8097 	ble.w	8019f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019dda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019dde:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019de2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019de6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019de8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019dec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019df0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019df4:	eef0 6a62 	vmov.f32	s13, s5
 8019df8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019dfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e00:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e04:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019e08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e0c:	eef0 6a43 	vmov.f32	s13, s6
 8019e10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e14:	ee12 2a90 	vmov	r2, s5
 8019e18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e20:	ee13 2a10 	vmov	r2, s6
 8019e24:	9313      	str	r3, [sp, #76]	; 0x4c
 8019e26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e28:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e2c:	9314      	str	r3, [sp, #80]	; 0x50
 8019e2e:	9b01      	ldr	r3, [sp, #4]
 8019e30:	9a05      	ldr	r2, [sp, #20]
 8019e32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e36:	3b01      	subs	r3, #1
 8019e38:	9301      	str	r3, [sp, #4]
 8019e3a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019e3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e40:	eeb0 3a67 	vmov.f32	s6, s15
 8019e44:	bf08      	it	eq
 8019e46:	4613      	moveq	r3, r2
 8019e48:	eef0 2a47 	vmov.f32	s5, s14
 8019e4c:	e72c      	b.n	8019ca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019e4e:	140f      	asrs	r7, r1, #16
 8019e50:	d453      	bmi.n	8019efa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019e52:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019e56:	42bd      	cmp	r5, r7
 8019e58:	dd4f      	ble.n	8019efa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019e5a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019e5e:	d44c      	bmi.n	8019efa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019e60:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019e64:	4560      	cmp	r0, ip
 8019e66:	dd48      	ble.n	8019efa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019e68:	9803      	ldr	r0, [sp, #12]
 8019e6a:	b22d      	sxth	r5, r5
 8019e6c:	fb0c 0505 	mla	r5, ip, r5, r0
 8019e70:	5de8      	ldrb	r0, [r5, r7]
 8019e72:	9d04      	ldr	r5, [sp, #16]
 8019e74:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019e78:	f06f 0501 	mvn.w	r5, #1
 8019e7c:	fb05 fb08 	mul.w	fp, r5, r8
 8019e80:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019e84:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019e88:	122f      	asrs	r7, r5, #8
 8019e8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e8e:	fb17 f706 	smulbb	r7, r7, r6
 8019e92:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019e96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e9a:	00ed      	lsls	r5, r5, #3
 8019e9c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019ea0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019ea4:	10c7      	asrs	r7, r0, #3
 8019ea6:	b2ed      	uxtb	r5, r5
 8019ea8:	00c0      	lsls	r0, r0, #3
 8019eaa:	fb19 f906 	smulbb	r9, r9, r6
 8019eae:	fb15 f506 	smulbb	r5, r5, r6
 8019eb2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019eb6:	b2c0      	uxtb	r0, r0
 8019eb8:	fa1f fc8c 	uxth.w	ip, ip
 8019ebc:	fb07 970a 	mla	r7, r7, sl, r9
 8019ec0:	fb00 500a 	mla	r0, r0, sl, r5
 8019ec4:	b2bf      	uxth	r7, r7
 8019ec6:	b280      	uxth	r0, r0
 8019ec8:	f10c 0501 	add.w	r5, ip, #1
 8019ecc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019ed0:	f107 0901 	add.w	r9, r7, #1
 8019ed4:	1c45      	adds	r5, r0, #1
 8019ed6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019eda:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019ede:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019ee2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019ee6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019eea:	ea45 0c0c 	orr.w	ip, r5, ip
 8019eee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019ef2:	ea4c 0c09 	orr.w	ip, ip, r9
 8019ef6:	f824 c00b 	strh.w	ip, [r4, fp]
 8019efa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019efc:	4401      	add	r1, r0
 8019efe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019f00:	f108 38ff 	add.w	r8, r8, #4294967295
 8019f04:	4402      	add	r2, r0
 8019f06:	e75c      	b.n	8019dc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019f08:	b007      	add	sp, #28
 8019f0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f12:	b085      	sub	sp, #20
 8019f14:	4693      	mov	fp, r2
 8019f16:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019f18:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f1a:	6870      	ldr	r0, [r6, #4]
 8019f1c:	9100      	str	r1, [sp, #0]
 8019f1e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019f22:	fb00 2404 	mla	r4, r0, r4, r2
 8019f26:	6832      	ldr	r2, [r6, #0]
 8019f28:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f2c:	682a      	ldr	r2, [r5, #0]
 8019f2e:	9201      	str	r2, [sp, #4]
 8019f30:	686a      	ldr	r2, [r5, #4]
 8019f32:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019f36:	3204      	adds	r2, #4
 8019f38:	9202      	str	r2, [sp, #8]
 8019f3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f3e:	9a00      	ldr	r2, [sp, #0]
 8019f40:	2a00      	cmp	r2, #0
 8019f42:	dc03      	bgt.n	8019f4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019f44:	f1bb 0f00 	cmp.w	fp, #0
 8019f48:	f340 80a0 	ble.w	801a08c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019f4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019f4e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019f52:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019f56:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019f5a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019f5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f60:	2b00      	cmp	r3, #0
 8019f62:	dd0c      	ble.n	8019f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019f64:	1406      	asrs	r6, r0, #16
 8019f66:	d405      	bmi.n	8019f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019f68:	454e      	cmp	r6, r9
 8019f6a:	da03      	bge.n	8019f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019f6c:	1416      	asrs	r6, r2, #16
 8019f6e:	d401      	bmi.n	8019f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019f70:	4546      	cmp	r6, r8
 8019f72:	db05      	blt.n	8019f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f74:	4470      	add	r0, lr
 8019f76:	4462      	add	r2, ip
 8019f78:	3b01      	subs	r3, #1
 8019f7a:	3402      	adds	r4, #2
 8019f7c:	e7f0      	b.n	8019f60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019f7e:	d00f      	beq.n	8019fa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019f80:	1e5e      	subs	r6, r3, #1
 8019f82:	fb0e 0706 	mla	r7, lr, r6, r0
 8019f86:	143f      	asrs	r7, r7, #16
 8019f88:	d541      	bpl.n	801a00e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019f8a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019f8e:	4698      	mov	r8, r3
 8019f90:	9603      	str	r6, [sp, #12]
 8019f92:	f1b8 0f00 	cmp.w	r8, #0
 8019f96:	dc59      	bgt.n	801a04c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019f98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f9c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019fa0:	9b00      	ldr	r3, [sp, #0]
 8019fa2:	2b00      	cmp	r3, #0
 8019fa4:	dd72      	ble.n	801a08c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019fa6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019faa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019fae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019fb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fb4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019fb8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019fbc:	eeb0 6a62 	vmov.f32	s12, s5
 8019fc0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019fc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019fc8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019fcc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019fd0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019fd4:	eeb0 6a43 	vmov.f32	s12, s6
 8019fd8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019fdc:	ee12 2a90 	vmov	r2, s5
 8019fe0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019fe4:	fb92 fef3 	sdiv	lr, r2, r3
 8019fe8:	ee13 2a10 	vmov	r2, s6
 8019fec:	fb92 fcf3 	sdiv	ip, r2, r3
 8019ff0:	9b00      	ldr	r3, [sp, #0]
 8019ff2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ff6:	3b01      	subs	r3, #1
 8019ff8:	9300      	str	r3, [sp, #0]
 8019ffa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019ffe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a000:	eeb0 3a67 	vmov.f32	s6, s15
 801a004:	bf08      	it	eq
 801a006:	465b      	moveq	r3, fp
 801a008:	eef0 2a47 	vmov.f32	s5, s14
 801a00c:	e797      	b.n	8019f3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a00e:	454f      	cmp	r7, r9
 801a010:	dabb      	bge.n	8019f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a012:	fb0c 2606 	mla	r6, ip, r6, r2
 801a016:	1436      	asrs	r6, r6, #16
 801a018:	d4b7      	bmi.n	8019f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a01a:	4546      	cmp	r6, r8
 801a01c:	dab5      	bge.n	8019f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a01e:	461e      	mov	r6, r3
 801a020:	46a0      	mov	r8, r4
 801a022:	2e00      	cmp	r6, #0
 801a024:	ddb8      	ble.n	8019f98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a026:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a02a:	9901      	ldr	r1, [sp, #4]
 801a02c:	1417      	asrs	r7, r2, #16
 801a02e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a032:	fb0a 1707 	mla	r7, sl, r7, r1
 801a036:	9902      	ldr	r1, [sp, #8]
 801a038:	f817 7009 	ldrb.w	r7, [r7, r9]
 801a03c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a040:	f828 7b02 	strh.w	r7, [r8], #2
 801a044:	4470      	add	r0, lr
 801a046:	4462      	add	r2, ip
 801a048:	3e01      	subs	r6, #1
 801a04a:	e7ea      	b.n	801a022 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801a04c:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a050:	d417      	bmi.n	801a082 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a052:	68ae      	ldr	r6, [r5, #8]
 801a054:	454e      	cmp	r6, r9
 801a056:	dd14      	ble.n	801a082 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a058:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a05c:	d411      	bmi.n	801a082 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a05e:	68ef      	ldr	r7, [r5, #12]
 801a060:	4557      	cmp	r7, sl
 801a062:	dd0e      	ble.n	801a082 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a064:	9f01      	ldr	r7, [sp, #4]
 801a066:	b236      	sxth	r6, r6
 801a068:	fb0a 7606 	mla	r6, sl, r6, r7
 801a06c:	9f02      	ldr	r7, [sp, #8]
 801a06e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801a072:	f06f 0101 	mvn.w	r1, #1
 801a076:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a07a:	fb01 f608 	mul.w	r6, r1, r8
 801a07e:	9903      	ldr	r1, [sp, #12]
 801a080:	538f      	strh	r7, [r1, r6]
 801a082:	4470      	add	r0, lr
 801a084:	4462      	add	r2, ip
 801a086:	f108 38ff 	add.w	r8, r8, #4294967295
 801a08a:	e782      	b.n	8019f92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a08c:	b005      	add	sp, #20
 801a08e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a092 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a092:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a096:	b087      	sub	sp, #28
 801a098:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a09a:	9205      	str	r2, [sp, #20]
 801a09c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a0a0:	9203      	str	r2, [sp, #12]
 801a0a2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a0a6:	9102      	str	r1, [sp, #8]
 801a0a8:	6861      	ldr	r1, [r4, #4]
 801a0aa:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a0ae:	fb01 2000 	mla	r0, r1, r0, r2
 801a0b2:	6822      	ldr	r2, [r4, #0]
 801a0b4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801a0b8:	9200      	str	r2, [sp, #0]
 801a0ba:	f8dc 2000 	ldr.w	r2, [ip]
 801a0be:	9204      	str	r2, [sp, #16]
 801a0c0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a0c4:	3204      	adds	r2, #4
 801a0c6:	9201      	str	r2, [sp, #4]
 801a0c8:	9a03      	ldr	r2, [sp, #12]
 801a0ca:	43d5      	mvns	r5, r2
 801a0cc:	b2ed      	uxtb	r5, r5
 801a0ce:	9a02      	ldr	r2, [sp, #8]
 801a0d0:	2a00      	cmp	r2, #0
 801a0d2:	dc03      	bgt.n	801a0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a0d4:	9a05      	ldr	r2, [sp, #20]
 801a0d6:	2a00      	cmp	r2, #0
 801a0d8:	f340 812c 	ble.w	801a334 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a0dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a0de:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a0e2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a0e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a0ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a0ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a0f0:	2b00      	cmp	r3, #0
 801a0f2:	dd10      	ble.n	801a116 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a0f4:	140c      	asrs	r4, r1, #16
 801a0f6:	d405      	bmi.n	801a104 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a0f8:	4574      	cmp	r4, lr
 801a0fa:	da03      	bge.n	801a104 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a0fc:	1414      	asrs	r4, r2, #16
 801a0fe:	d401      	bmi.n	801a104 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a100:	42bc      	cmp	r4, r7
 801a102:	db09      	blt.n	801a118 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a104:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a106:	9800      	ldr	r0, [sp, #0]
 801a108:	4421      	add	r1, r4
 801a10a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a10c:	3002      	adds	r0, #2
 801a10e:	4422      	add	r2, r4
 801a110:	3b01      	subs	r3, #1
 801a112:	9000      	str	r0, [sp, #0]
 801a114:	e7ec      	b.n	801a0f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a116:	d071      	beq.n	801a1fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a118:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a11a:	1e5c      	subs	r4, r3, #1
 801a11c:	fb06 1604 	mla	r6, r6, r4, r1
 801a120:	1436      	asrs	r6, r6, #16
 801a122:	d45d      	bmi.n	801a1e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a124:	4576      	cmp	r6, lr
 801a126:	da5b      	bge.n	801a1e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a128:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a12a:	fb06 2404 	mla	r4, r6, r4, r2
 801a12e:	1424      	asrs	r4, r4, #16
 801a130:	d456      	bmi.n	801a1e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a132:	42bc      	cmp	r4, r7
 801a134:	da54      	bge.n	801a1e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a136:	f8dd 9000 	ldr.w	r9, [sp]
 801a13a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a13e:	4698      	mov	r8, r3
 801a140:	f1b8 0f00 	cmp.w	r8, #0
 801a144:	dd54      	ble.n	801a1f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a146:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a14a:	9804      	ldr	r0, [sp, #16]
 801a14c:	1414      	asrs	r4, r2, #16
 801a14e:	fb07 0404 	mla	r4, r7, r4, r0
 801a152:	140e      	asrs	r6, r1, #16
 801a154:	9801      	ldr	r0, [sp, #4]
 801a156:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a15a:	f8b9 4000 	ldrh.w	r4, [r9]
 801a15e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a162:	eb00 0b0e 	add.w	fp, r0, lr
 801a166:	1227      	asrs	r7, r4, #8
 801a168:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a16c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a170:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a174:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a176:	fb16 f60a 	smulbb	r6, r6, sl
 801a17a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a17e:	fb07 6705 	mla	r7, r7, r5, r6
 801a182:	10e6      	asrs	r6, r4, #3
 801a184:	00e4      	lsls	r4, r4, #3
 801a186:	b2e4      	uxtb	r4, r4
 801a188:	fb1b fb0a 	smulbb	fp, fp, sl
 801a18c:	fb14 f405 	smulbb	r4, r4, r5
 801a190:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a194:	b2bf      	uxth	r7, r7
 801a196:	fb06 b605 	mla	r6, r6, r5, fp
 801a19a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a19e:	b2b6      	uxth	r6, r6
 801a1a0:	fa1f fe8e 	uxth.w	lr, lr
 801a1a4:	1c7c      	adds	r4, r7, #1
 801a1a6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a1aa:	f106 0b01 	add.w	fp, r6, #1
 801a1ae:	f10e 0401 	add.w	r4, lr, #1
 801a1b2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a1b6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a1ba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a1be:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a1c2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a1c6:	4327      	orrs	r7, r4
 801a1c8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a1cc:	4401      	add	r1, r0
 801a1ce:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a1d0:	ea47 070b 	orr.w	r7, r7, fp
 801a1d4:	f829 7b02 	strh.w	r7, [r9], #2
 801a1d8:	4402      	add	r2, r0
 801a1da:	f108 38ff 	add.w	r8, r8, #4294967295
 801a1de:	e7af      	b.n	801a140 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a1e0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a1e4:	f04f 0e00 	mov.w	lr, #0
 801a1e8:	eb03 040e 	add.w	r4, r3, lr
 801a1ec:	2c00      	cmp	r4, #0
 801a1ee:	dc43      	bgt.n	801a278 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a1f0:	9a00      	ldr	r2, [sp, #0]
 801a1f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a1f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a1fa:	9300      	str	r3, [sp, #0]
 801a1fc:	9b02      	ldr	r3, [sp, #8]
 801a1fe:	2b00      	cmp	r3, #0
 801a200:	f340 8098 	ble.w	801a334 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a204:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a208:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a20c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a210:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a212:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a216:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a21a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a21e:	eef0 6a62 	vmov.f32	s13, s5
 801a222:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a226:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a22a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a22e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a232:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a236:	eef0 6a43 	vmov.f32	s13, s6
 801a23a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a23e:	ee12 2a90 	vmov	r2, s5
 801a242:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a246:	fb92 f3f3 	sdiv	r3, r2, r3
 801a24a:	ee13 2a10 	vmov	r2, s6
 801a24e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a250:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a252:	fb92 f3f3 	sdiv	r3, r2, r3
 801a256:	9314      	str	r3, [sp, #80]	; 0x50
 801a258:	9b02      	ldr	r3, [sp, #8]
 801a25a:	9a05      	ldr	r2, [sp, #20]
 801a25c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a260:	3b01      	subs	r3, #1
 801a262:	9302      	str	r3, [sp, #8]
 801a264:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a268:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a26a:	eeb0 3a67 	vmov.f32	s6, s15
 801a26e:	bf08      	it	eq
 801a270:	4613      	moveq	r3, r2
 801a272:	eef0 2a47 	vmov.f32	s5, s14
 801a276:	e72a      	b.n	801a0ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a278:	140f      	asrs	r7, r1, #16
 801a27a:	d454      	bmi.n	801a326 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a27c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a280:	42be      	cmp	r6, r7
 801a282:	dd50      	ble.n	801a326 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a284:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a288:	d44d      	bmi.n	801a326 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a28a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a28e:	4544      	cmp	r4, r8
 801a290:	dd49      	ble.n	801a326 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a292:	9c04      	ldr	r4, [sp, #16]
 801a294:	b236      	sxth	r6, r6
 801a296:	fb08 4606 	mla	r6, r8, r6, r4
 801a29a:	f06f 0001 	mvn.w	r0, #1
 801a29e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a2a2:	9c01      	ldr	r4, [sp, #4]
 801a2a4:	fb00 fa0e 	mul.w	sl, r0, lr
 801a2a8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a2ac:	9800      	ldr	r0, [sp, #0]
 801a2ae:	eb04 0b08 	add.w	fp, r4, r8
 801a2b2:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a2b6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a2ba:	9801      	ldr	r0, [sp, #4]
 801a2bc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a2c0:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a2c4:	9800      	ldr	r0, [sp, #0]
 801a2c6:	1227      	asrs	r7, r4, #8
 801a2c8:	fb16 f609 	smulbb	r6, r6, r9
 801a2cc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a2d0:	fb07 6705 	mla	r7, r7, r5, r6
 801a2d4:	10e6      	asrs	r6, r4, #3
 801a2d6:	00e4      	lsls	r4, r4, #3
 801a2d8:	b2e4      	uxtb	r4, r4
 801a2da:	fb1b fb09 	smulbb	fp, fp, r9
 801a2de:	fb14 f405 	smulbb	r4, r4, r5
 801a2e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a2e6:	b2bf      	uxth	r7, r7
 801a2e8:	fb06 b605 	mla	r6, r6, r5, fp
 801a2ec:	fb08 4809 	mla	r8, r8, r9, r4
 801a2f0:	b2b6      	uxth	r6, r6
 801a2f2:	fa1f f888 	uxth.w	r8, r8
 801a2f6:	1c7c      	adds	r4, r7, #1
 801a2f8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a2fc:	f106 0b01 	add.w	fp, r6, #1
 801a300:	f108 0401 	add.w	r4, r8, #1
 801a304:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a308:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a30c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a310:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a314:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a318:	4327      	orrs	r7, r4
 801a31a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a31e:	ea47 070b 	orr.w	r7, r7, fp
 801a322:	f820 700a 	strh.w	r7, [r0, sl]
 801a326:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a328:	4401      	add	r1, r0
 801a32a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a32c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a330:	4402      	add	r2, r0
 801a332:	e759      	b.n	801a1e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a334:	b007      	add	sp, #28
 801a336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a33c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a33c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a340:	b085      	sub	sp, #20
 801a342:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a346:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a348:	9203      	str	r2, [sp, #12]
 801a34a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a34e:	6870      	ldr	r0, [r6, #4]
 801a350:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a352:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a356:	686f      	ldr	r7, [r5, #4]
 801a358:	9101      	str	r1, [sp, #4]
 801a35a:	fb00 2404 	mla	r4, r0, r4, r2
 801a35e:	6832      	ldr	r2, [r6, #0]
 801a360:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a364:	682a      	ldr	r2, [r5, #0]
 801a366:	9202      	str	r2, [sp, #8]
 801a368:	3704      	adds	r7, #4
 801a36a:	9a01      	ldr	r2, [sp, #4]
 801a36c:	2a00      	cmp	r2, #0
 801a36e:	dc03      	bgt.n	801a378 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a370:	9a03      	ldr	r2, [sp, #12]
 801a372:	2a00      	cmp	r2, #0
 801a374:	f340 80cc 	ble.w	801a510 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a378:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a37a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a37e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a382:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a386:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a388:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a38c:	2b00      	cmp	r3, #0
 801a38e:	dd0d      	ble.n	801a3ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a390:	1406      	asrs	r6, r0, #16
 801a392:	d405      	bmi.n	801a3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a394:	454e      	cmp	r6, r9
 801a396:	da03      	bge.n	801a3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a398:	1416      	asrs	r6, r2, #16
 801a39a:	d401      	bmi.n	801a3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a39c:	4546      	cmp	r6, r8
 801a39e:	db06      	blt.n	801a3ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a3a0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a3a2:	4460      	add	r0, ip
 801a3a4:	4432      	add	r2, r6
 801a3a6:	3b01      	subs	r3, #1
 801a3a8:	3402      	adds	r4, #2
 801a3aa:	e7ef      	b.n	801a38c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a3ac:	d00f      	beq.n	801a3ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a3ae:	1e5e      	subs	r6, r3, #1
 801a3b0:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a3b4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a3b8:	d543      	bpl.n	801a442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a3ba:	4698      	mov	r8, r3
 801a3bc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a3c0:	f1b8 0f00 	cmp.w	r8, #0
 801a3c4:	dc71      	bgt.n	801a4aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a3c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a3ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a3ce:	9b01      	ldr	r3, [sp, #4]
 801a3d0:	2b00      	cmp	r3, #0
 801a3d2:	f340 809d 	ble.w	801a510 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a3d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a3e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a3e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3ec:	eeb0 6a62 	vmov.f32	s12, s5
 801a3f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a3fc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a400:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a404:	eeb0 6a43 	vmov.f32	s12, s6
 801a408:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a40c:	ee12 2a90 	vmov	r2, s5
 801a410:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a414:	fb92 fcf3 	sdiv	ip, r2, r3
 801a418:	ee13 2a10 	vmov	r2, s6
 801a41c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a420:	9312      	str	r3, [sp, #72]	; 0x48
 801a422:	9b01      	ldr	r3, [sp, #4]
 801a424:	9a03      	ldr	r2, [sp, #12]
 801a426:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a42a:	3b01      	subs	r3, #1
 801a42c:	9301      	str	r3, [sp, #4]
 801a42e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a432:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a434:	eeb0 3a67 	vmov.f32	s6, s15
 801a438:	bf08      	it	eq
 801a43a:	4613      	moveq	r3, r2
 801a43c:	eef0 2a47 	vmov.f32	s5, s14
 801a440:	e793      	b.n	801a36a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a442:	45ce      	cmp	lr, r9
 801a444:	dab9      	bge.n	801a3ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a446:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a448:	fb01 2606 	mla	r6, r1, r6, r2
 801a44c:	1436      	asrs	r6, r6, #16
 801a44e:	d4b4      	bmi.n	801a3ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a450:	4546      	cmp	r6, r8
 801a452:	dab2      	bge.n	801a3ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a454:	4698      	mov	r8, r3
 801a456:	46a2      	mov	sl, r4
 801a458:	f1b8 0f00 	cmp.w	r8, #0
 801a45c:	ddb3      	ble.n	801a3c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a45e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a462:	9902      	ldr	r1, [sp, #8]
 801a464:	1416      	asrs	r6, r2, #16
 801a466:	fb09 1606 	mla	r6, r9, r6, r1
 801a46a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a46e:	492a      	ldr	r1, [pc, #168]	; (801a518 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a470:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a474:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a478:	eb07 0b0e 	add.w	fp, r7, lr
 801a47c:	4460      	add	r0, ip
 801a47e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a482:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a486:	00f6      	lsls	r6, r6, #3
 801a488:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a48c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a490:	ea49 0606 	orr.w	r6, r9, r6
 801a494:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a498:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a49a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a49e:	f82a 6b02 	strh.w	r6, [sl], #2
 801a4a2:	440a      	add	r2, r1
 801a4a4:	f108 38ff 	add.w	r8, r8, #4294967295
 801a4a8:	e7d6      	b.n	801a458 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a4aa:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a4ae:	d429      	bmi.n	801a504 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a4b0:	68ae      	ldr	r6, [r5, #8]
 801a4b2:	454e      	cmp	r6, r9
 801a4b4:	dd26      	ble.n	801a504 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a4b6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a4ba:	d423      	bmi.n	801a504 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a4bc:	68e9      	ldr	r1, [r5, #12]
 801a4be:	4559      	cmp	r1, fp
 801a4c0:	dd20      	ble.n	801a504 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a4c2:	9902      	ldr	r1, [sp, #8]
 801a4c4:	fa0f fe86 	sxth.w	lr, r6
 801a4c8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a4cc:	f06f 0101 	mvn.w	r1, #1
 801a4d0:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a4d4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a4d8:	eb07 060e 	add.w	r6, r7, lr
 801a4dc:	fb01 f908 	mul.w	r9, r1, r8
 801a4e0:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a4e4:	7876      	ldrb	r6, [r6, #1]
 801a4e6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a4ea:	00f6      	lsls	r6, r6, #3
 801a4ec:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a4f0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a4f4:	ea4b 0606 	orr.w	r6, fp, r6
 801a4f8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a4fc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a500:	f82a 6009 	strh.w	r6, [sl, r9]
 801a504:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a506:	4460      	add	r0, ip
 801a508:	440a      	add	r2, r1
 801a50a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a50e:	e757      	b.n	801a3c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a510:	b005      	add	sp, #20
 801a512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a516:	bf00      	nop
 801a518:	fffff800 	.word	0xfffff800

0801a51c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a51c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a520:	b087      	sub	sp, #28
 801a522:	468b      	mov	fp, r1
 801a524:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a526:	9204      	str	r2, [sp, #16]
 801a528:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a52c:	9205      	str	r2, [sp, #20]
 801a52e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a532:	6841      	ldr	r1, [r0, #4]
 801a534:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a538:	fb01 2404 	mla	r4, r1, r4, r2
 801a53c:	6802      	ldr	r2, [r0, #0]
 801a53e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a542:	f8dc 2000 	ldr.w	r2, [ip]
 801a546:	9201      	str	r2, [sp, #4]
 801a548:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a54c:	3204      	adds	r2, #4
 801a54e:	9202      	str	r2, [sp, #8]
 801a550:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a554:	f1bb 0f00 	cmp.w	fp, #0
 801a558:	dc03      	bgt.n	801a562 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a55a:	9a04      	ldr	r2, [sp, #16]
 801a55c:	2a00      	cmp	r2, #0
 801a55e:	f340 8138 	ble.w	801a7d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a562:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a564:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a568:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a56c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a570:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a572:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a576:	2b00      	cmp	r3, #0
 801a578:	dd0e      	ble.n	801a598 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a57a:	1402      	asrs	r2, r0, #16
 801a57c:	d405      	bmi.n	801a58a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a57e:	42ba      	cmp	r2, r7
 801a580:	da03      	bge.n	801a58a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a582:	140a      	asrs	r2, r1, #16
 801a584:	d401      	bmi.n	801a58a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a586:	42b2      	cmp	r2, r6
 801a588:	db07      	blt.n	801a59a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a58a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a58c:	4410      	add	r0, r2
 801a58e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a590:	3b01      	subs	r3, #1
 801a592:	4411      	add	r1, r2
 801a594:	3402      	adds	r4, #2
 801a596:	e7ee      	b.n	801a576 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a598:	d019      	beq.n	801a5ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a59a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a59c:	1e5a      	subs	r2, r3, #1
 801a59e:	fb05 0502 	mla	r5, r5, r2, r0
 801a5a2:	142d      	asrs	r5, r5, #16
 801a5a4:	d409      	bmi.n	801a5ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a5a6:	42bd      	cmp	r5, r7
 801a5a8:	da07      	bge.n	801a5ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a5aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a5ac:	fb05 1202 	mla	r2, r5, r2, r1
 801a5b0:	1412      	asrs	r2, r2, #16
 801a5b2:	d402      	bmi.n	801a5ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a5b4:	42b2      	cmp	r2, r6
 801a5b6:	f2c0 80ac 	blt.w	801a712 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a5ba:	f04f 0e00 	mov.w	lr, #0
 801a5be:	eb03 020e 	add.w	r2, r3, lr
 801a5c2:	2a00      	cmp	r2, #0
 801a5c4:	dc3e      	bgt.n	801a644 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a5c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a5ce:	f1bb 0f00 	cmp.w	fp, #0
 801a5d2:	f340 80fe 	ble.w	801a7d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a5d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a5e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a5e4:	f1bb 0b01 	subs.w	fp, fp, #1
 801a5e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a5ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a5f0:	eeb0 6a62 	vmov.f32	s12, s5
 801a5f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a5f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a5fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a600:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a604:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a608:	eeb0 6a43 	vmov.f32	s12, s6
 801a60c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a610:	ee12 2a90 	vmov	r2, s5
 801a614:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a618:	fb92 f3f3 	sdiv	r3, r2, r3
 801a61c:	ee13 2a10 	vmov	r2, s6
 801a620:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a624:	9313      	str	r3, [sp, #76]	; 0x4c
 801a626:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a628:	fb92 f3f3 	sdiv	r3, r2, r3
 801a62c:	9a04      	ldr	r2, [sp, #16]
 801a62e:	9314      	str	r3, [sp, #80]	; 0x50
 801a630:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a634:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a636:	eeb0 3a67 	vmov.f32	s6, s15
 801a63a:	bf08      	it	eq
 801a63c:	4613      	moveq	r3, r2
 801a63e:	eef0 2a47 	vmov.f32	s5, s14
 801a642:	e787      	b.n	801a554 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a644:	1406      	asrs	r6, r0, #16
 801a646:	d45d      	bmi.n	801a704 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a648:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a64c:	42b5      	cmp	r5, r6
 801a64e:	dd59      	ble.n	801a704 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a650:	140f      	asrs	r7, r1, #16
 801a652:	d457      	bmi.n	801a704 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a654:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a658:	42ba      	cmp	r2, r7
 801a65a:	dd53      	ble.n	801a704 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a65c:	9a01      	ldr	r2, [sp, #4]
 801a65e:	b22d      	sxth	r5, r5
 801a660:	fb07 2505 	mla	r5, r7, r5, r2
 801a664:	5daa      	ldrb	r2, [r5, r6]
 801a666:	9d02      	ldr	r5, [sp, #8]
 801a668:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a66c:	0e2e      	lsrs	r6, r5, #24
 801a66e:	d049      	beq.n	801a704 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a670:	f06f 0201 	mvn.w	r2, #1
 801a674:	fb02 f20e 	mul.w	r2, r2, lr
 801a678:	9203      	str	r2, [sp, #12]
 801a67a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a67e:	9a05      	ldr	r2, [sp, #20]
 801a680:	4356      	muls	r6, r2
 801a682:	1c72      	adds	r2, r6, #1
 801a684:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a688:	1212      	asrs	r2, r2, #8
 801a68a:	fa1f f982 	uxth.w	r9, r2
 801a68e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a692:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a696:	43d2      	mvns	r2, r2
 801a698:	b2d2      	uxtb	r2, r2
 801a69a:	fb16 f609 	smulbb	r6, r6, r9
 801a69e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a6a2:	fb07 6702 	mla	r7, r7, r2, r6
 801a6a6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a6aa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a6ae:	b2ed      	uxtb	r5, r5
 801a6b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a6b4:	fa5f f888 	uxtb.w	r8, r8
 801a6b8:	fb15 f509 	smulbb	r5, r5, r9
 801a6bc:	fb08 5502 	mla	r5, r8, r2, r5
 801a6c0:	b2bf      	uxth	r7, r7
 801a6c2:	fb1a fa09 	smulbb	sl, sl, r9
 801a6c6:	b2ad      	uxth	r5, r5
 801a6c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a6cc:	fb06 a602 	mla	r6, r6, r2, sl
 801a6d0:	1c7a      	adds	r2, r7, #1
 801a6d2:	f105 0a01 	add.w	sl, r5, #1
 801a6d6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a6da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a6de:	b2b6      	uxth	r6, r6
 801a6e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a6e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a6e8:	ea4a 0707 	orr.w	r7, sl, r7
 801a6ec:	f106 0a01 	add.w	sl, r6, #1
 801a6f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a6f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a6f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a6fc:	9a03      	ldr	r2, [sp, #12]
 801a6fe:	ea47 070a 	orr.w	r7, r7, sl
 801a702:	52a7      	strh	r7, [r4, r2]
 801a704:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a706:	4410      	add	r0, r2
 801a708:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a70a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a70e:	4411      	add	r1, r2
 801a710:	e755      	b.n	801a5be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a712:	f04f 0800 	mov.w	r8, #0
 801a716:	eba3 0208 	sub.w	r2, r3, r8
 801a71a:	2a00      	cmp	r2, #0
 801a71c:	f77f af53 	ble.w	801a5c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a720:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a724:	9f01      	ldr	r7, [sp, #4]
 801a726:	140a      	asrs	r2, r1, #16
 801a728:	1405      	asrs	r5, r0, #16
 801a72a:	fb06 7202 	mla	r2, r6, r2, r7
 801a72e:	5d52      	ldrb	r2, [r2, r5]
 801a730:	9d02      	ldr	r5, [sp, #8]
 801a732:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a736:	0e2e      	lsrs	r6, r5, #24
 801a738:	d044      	beq.n	801a7c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a73a:	9a05      	ldr	r2, [sp, #20]
 801a73c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a740:	4356      	muls	r6, r2
 801a742:	1c72      	adds	r2, r6, #1
 801a744:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a748:	1212      	asrs	r2, r2, #8
 801a74a:	fa1f f982 	uxth.w	r9, r2
 801a74e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a752:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a756:	43d2      	mvns	r2, r2
 801a758:	b2d2      	uxtb	r2, r2
 801a75a:	fb16 f609 	smulbb	r6, r6, r9
 801a75e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a762:	fb07 6702 	mla	r7, r7, r2, r6
 801a766:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a76a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a76e:	b2ed      	uxtb	r5, r5
 801a770:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a774:	fa5f fe8e 	uxtb.w	lr, lr
 801a778:	fb15 f509 	smulbb	r5, r5, r9
 801a77c:	fb0e 5502 	mla	r5, lr, r2, r5
 801a780:	b2bf      	uxth	r7, r7
 801a782:	fb1a fa09 	smulbb	sl, sl, r9
 801a786:	b2ad      	uxth	r5, r5
 801a788:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a78c:	fb06 a602 	mla	r6, r6, r2, sl
 801a790:	1c7a      	adds	r2, r7, #1
 801a792:	f105 0a01 	add.w	sl, r5, #1
 801a796:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a79a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a79e:	b2b6      	uxth	r6, r6
 801a7a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a7a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a7a8:	ea4a 0707 	orr.w	r7, sl, r7
 801a7ac:	f106 0a01 	add.w	sl, r6, #1
 801a7b0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a7b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a7b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a7bc:	ea47 070a 	orr.w	r7, r7, sl
 801a7c0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a7c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a7c6:	4410      	add	r0, r2
 801a7c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a7ca:	f108 0801 	add.w	r8, r8, #1
 801a7ce:	4411      	add	r1, r2
 801a7d0:	e7a1      	b.n	801a716 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a7d2:	b007      	add	sp, #28
 801a7d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a7d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7dc:	b085      	sub	sp, #20
 801a7de:	468b      	mov	fp, r1
 801a7e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a7e2:	9203      	str	r2, [sp, #12]
 801a7e4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a7e8:	6841      	ldr	r1, [r0, #4]
 801a7ea:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a7ee:	fb01 2404 	mla	r4, r1, r4, r2
 801a7f2:	6802      	ldr	r2, [r0, #0]
 801a7f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a7f8:	f8de 2000 	ldr.w	r2, [lr]
 801a7fc:	9200      	str	r2, [sp, #0]
 801a7fe:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a802:	3204      	adds	r2, #4
 801a804:	9201      	str	r2, [sp, #4]
 801a806:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a80a:	f1bb 0f00 	cmp.w	fp, #0
 801a80e:	dc03      	bgt.n	801a818 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a810:	9a03      	ldr	r2, [sp, #12]
 801a812:	2a00      	cmp	r2, #0
 801a814:	f340 8153 	ble.w	801aabe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a818:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a81a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a81e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a822:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a826:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a828:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a82c:	2b00      	cmp	r3, #0
 801a82e:	dd0e      	ble.n	801a84e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a830:	1408      	asrs	r0, r1, #16
 801a832:	d405      	bmi.n	801a840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a834:	42b8      	cmp	r0, r7
 801a836:	da03      	bge.n	801a840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a838:	1410      	asrs	r0, r2, #16
 801a83a:	d401      	bmi.n	801a840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a83c:	42b0      	cmp	r0, r6
 801a83e:	db07      	blt.n	801a850 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a840:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a842:	4401      	add	r1, r0
 801a844:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a846:	3b01      	subs	r3, #1
 801a848:	4402      	add	r2, r0
 801a84a:	3402      	adds	r4, #2
 801a84c:	e7ee      	b.n	801a82c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a84e:	d017      	beq.n	801a880 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a850:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a852:	1e58      	subs	r0, r3, #1
 801a854:	fb05 1500 	mla	r5, r5, r0, r1
 801a858:	142d      	asrs	r5, r5, #16
 801a85a:	d409      	bmi.n	801a870 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a85c:	42bd      	cmp	r5, r7
 801a85e:	da07      	bge.n	801a870 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a860:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a862:	fb05 2000 	mla	r0, r5, r0, r2
 801a866:	1400      	asrs	r0, r0, #16
 801a868:	d402      	bmi.n	801a870 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a86a:	42b0      	cmp	r0, r6
 801a86c:	f2c0 80bc 	blt.w	801a9e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a870:	2600      	movs	r6, #0
 801a872:	1998      	adds	r0, r3, r6
 801a874:	2800      	cmp	r0, #0
 801a876:	dc3e      	bgt.n	801a8f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a878:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a87c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a880:	f1bb 0f00 	cmp.w	fp, #0
 801a884:	f340 811b 	ble.w	801aabe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a888:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a88c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a890:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a894:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a896:	f1bb 0b01 	subs.w	fp, fp, #1
 801a89a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a89e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a8a2:	eeb0 6a62 	vmov.f32	s12, s5
 801a8a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a8aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a8b2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a8b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a8ba:	eeb0 6a43 	vmov.f32	s12, s6
 801a8be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a8c2:	ee12 2a90 	vmov	r2, s5
 801a8c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a8ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8ce:	ee13 2a10 	vmov	r2, s6
 801a8d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8d6:	9311      	str	r3, [sp, #68]	; 0x44
 801a8d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a8da:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8de:	9a03      	ldr	r2, [sp, #12]
 801a8e0:	9312      	str	r3, [sp, #72]	; 0x48
 801a8e2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a8e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a8e8:	eeb0 3a67 	vmov.f32	s6, s15
 801a8ec:	bf08      	it	eq
 801a8ee:	4613      	moveq	r3, r2
 801a8f0:	eef0 2a47 	vmov.f32	s5, s14
 801a8f4:	e789      	b.n	801a80a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a8f6:	140f      	asrs	r7, r1, #16
 801a8f8:	d426      	bmi.n	801a948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a8fa:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a8fe:	42bd      	cmp	r5, r7
 801a900:	dd22      	ble.n	801a948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a902:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a906:	d41f      	bmi.n	801a948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a908:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a90c:	4560      	cmp	r0, ip
 801a90e:	dd1b      	ble.n	801a948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a910:	9800      	ldr	r0, [sp, #0]
 801a912:	b22d      	sxth	r5, r5
 801a914:	fb0c 0505 	mla	r5, ip, r5, r0
 801a918:	5de8      	ldrb	r0, [r5, r7]
 801a91a:	9d01      	ldr	r5, [sp, #4]
 801a91c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a920:	0e07      	lsrs	r7, r0, #24
 801a922:	2fff      	cmp	r7, #255	; 0xff
 801a924:	d116      	bne.n	801a954 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a926:	f06f 0501 	mvn.w	r5, #1
 801a92a:	fb05 f706 	mul.w	r7, r5, r6
 801a92e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a932:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a936:	0945      	lsrs	r5, r0, #5
 801a938:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a93c:	ea4c 0505 	orr.w	r5, ip, r5
 801a940:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a944:	4305      	orrs	r5, r0
 801a946:	53e5      	strh	r5, [r4, r7]
 801a948:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a94a:	4401      	add	r1, r0
 801a94c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a94e:	3e01      	subs	r6, #1
 801a950:	4402      	add	r2, r0
 801a952:	e78e      	b.n	801a872 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a954:	b2fd      	uxtb	r5, r7
 801a956:	2f00      	cmp	r7, #0
 801a958:	d0f6      	beq.n	801a948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a95a:	f06f 0701 	mvn.w	r7, #1
 801a95e:	4377      	muls	r7, r6
 801a960:	fa1f f985 	uxth.w	r9, r5
 801a964:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a968:	9702      	str	r7, [sp, #8]
 801a96a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a96e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a972:	43ed      	mvns	r5, r5
 801a974:	b2ed      	uxtb	r5, r5
 801a976:	fb17 f709 	smulbb	r7, r7, r9
 801a97a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a97e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a982:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a986:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a98a:	b2c0      	uxtb	r0, r0
 801a98c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a990:	fa5f f888 	uxtb.w	r8, r8
 801a994:	fb10 f009 	smulbb	r0, r0, r9
 801a998:	fb08 0005 	mla	r0, r8, r5, r0
 801a99c:	b280      	uxth	r0, r0
 801a99e:	fa1f fc8c 	uxth.w	ip, ip
 801a9a2:	fb1a fa09 	smulbb	sl, sl, r9
 801a9a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a9aa:	fb07 a705 	mla	r7, r7, r5, sl
 801a9ae:	f100 0a01 	add.w	sl, r0, #1
 801a9b2:	f10c 0501 	add.w	r5, ip, #1
 801a9b6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a9ba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a9be:	b2bf      	uxth	r7, r7
 801a9c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a9c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a9c8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a9cc:	f107 0a01 	add.w	sl, r7, #1
 801a9d0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a9d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a9d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a9dc:	9802      	ldr	r0, [sp, #8]
 801a9de:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a9e2:	f824 c000 	strh.w	ip, [r4, r0]
 801a9e6:	e7af      	b.n	801a948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a9e8:	f04f 0800 	mov.w	r8, #0
 801a9ec:	eba3 0008 	sub.w	r0, r3, r8
 801a9f0:	2800      	cmp	r0, #0
 801a9f2:	f77f af41 	ble.w	801a878 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a9f6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a9fa:	9f00      	ldr	r7, [sp, #0]
 801a9fc:	1410      	asrs	r0, r2, #16
 801a9fe:	140d      	asrs	r5, r1, #16
 801aa00:	fb06 7000 	mla	r0, r6, r0, r7
 801aa04:	5d40      	ldrb	r0, [r0, r5]
 801aa06:	9d01      	ldr	r5, [sp, #4]
 801aa08:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801aa0c:	0e2e      	lsrs	r6, r5, #24
 801aa0e:	2eff      	cmp	r6, #255	; 0xff
 801aa10:	d112      	bne.n	801aa38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801aa12:	482c      	ldr	r0, [pc, #176]	; (801aac4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801aa14:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801aa18:	0968      	lsrs	r0, r5, #5
 801aa1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aa1e:	4330      	orrs	r0, r6
 801aa20:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aa24:	4328      	orrs	r0, r5
 801aa26:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801aa2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aa2c:	4401      	add	r1, r0
 801aa2e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aa30:	f108 0801 	add.w	r8, r8, #1
 801aa34:	4402      	add	r2, r0
 801aa36:	e7d9      	b.n	801a9ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801aa38:	b2f0      	uxtb	r0, r6
 801aa3a:	2e00      	cmp	r6, #0
 801aa3c:	d0f5      	beq.n	801aa2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801aa3e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801aa42:	fa1f f980 	uxth.w	r9, r0
 801aa46:	ea4f 272c 	mov.w	r7, ip, asr #8
 801aa4a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801aa4e:	43c0      	mvns	r0, r0
 801aa50:	b2c0      	uxtb	r0, r0
 801aa52:	fb16 f609 	smulbb	r6, r6, r9
 801aa56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aa5a:	fb07 6700 	mla	r7, r7, r0, r6
 801aa5e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801aa62:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801aa66:	b2ed      	uxtb	r5, r5
 801aa68:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aa6c:	fa5f fc8c 	uxtb.w	ip, ip
 801aa70:	fb15 f509 	smulbb	r5, r5, r9
 801aa74:	fb0c 5500 	mla	r5, ip, r0, r5
 801aa78:	b2bf      	uxth	r7, r7
 801aa7a:	fb1a fa09 	smulbb	sl, sl, r9
 801aa7e:	b2ad      	uxth	r5, r5
 801aa80:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aa84:	fb06 a600 	mla	r6, r6, r0, sl
 801aa88:	1c78      	adds	r0, r7, #1
 801aa8a:	f105 0a01 	add.w	sl, r5, #1
 801aa8e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801aa92:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aa96:	b2b6      	uxth	r6, r6
 801aa98:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aa9c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aaa0:	ea4a 0707 	orr.w	r7, sl, r7
 801aaa4:	f106 0a01 	add.w	sl, r6, #1
 801aaa8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aaac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aab0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aab4:	ea47 070a 	orr.w	r7, r7, sl
 801aab8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801aabc:	e7b5      	b.n	801aa2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801aabe:	b005      	add	sp, #20
 801aac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aac4:	fffff800 	.word	0xfffff800

0801aac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aacc:	b087      	sub	sp, #28
 801aace:	468b      	mov	fp, r1
 801aad0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aad2:	9204      	str	r2, [sp, #16]
 801aad4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801aad8:	9205      	str	r2, [sp, #20]
 801aada:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801aade:	6861      	ldr	r1, [r4, #4]
 801aae0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801aae4:	fb01 2000 	mla	r0, r1, r0, r2
 801aae8:	6822      	ldr	r2, [r4, #0]
 801aaea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801aaee:	f8de 2000 	ldr.w	r2, [lr]
 801aaf2:	9201      	str	r2, [sp, #4]
 801aaf4:	f8de 2004 	ldr.w	r2, [lr, #4]
 801aaf8:	9202      	str	r2, [sp, #8]
 801aafa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aafe:	f1bb 0f00 	cmp.w	fp, #0
 801ab02:	dc03      	bgt.n	801ab0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801ab04:	9a04      	ldr	r2, [sp, #16]
 801ab06:	2a00      	cmp	r2, #0
 801ab08:	f340 8142 	ble.w	801ad90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801ab0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ab0e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ab12:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801ab16:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ab1a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ab1c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ab20:	2b00      	cmp	r3, #0
 801ab22:	dd0e      	ble.n	801ab42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ab24:	140c      	asrs	r4, r1, #16
 801ab26:	d405      	bmi.n	801ab34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ab28:	42bc      	cmp	r4, r7
 801ab2a:	da03      	bge.n	801ab34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ab2c:	1414      	asrs	r4, r2, #16
 801ab2e:	d401      	bmi.n	801ab34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ab30:	42b4      	cmp	r4, r6
 801ab32:	db07      	blt.n	801ab44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ab34:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab36:	4421      	add	r1, r4
 801ab38:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ab3a:	3b01      	subs	r3, #1
 801ab3c:	4422      	add	r2, r4
 801ab3e:	3002      	adds	r0, #2
 801ab40:	e7ee      	b.n	801ab20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ab42:	d019      	beq.n	801ab78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ab44:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ab46:	1e5c      	subs	r4, r3, #1
 801ab48:	fb05 1504 	mla	r5, r5, r4, r1
 801ab4c:	142d      	asrs	r5, r5, #16
 801ab4e:	d409      	bmi.n	801ab64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ab50:	42bd      	cmp	r5, r7
 801ab52:	da07      	bge.n	801ab64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ab54:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ab56:	fb05 2404 	mla	r4, r5, r4, r2
 801ab5a:	1424      	asrs	r4, r4, #16
 801ab5c:	d402      	bmi.n	801ab64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ab5e:	42b4      	cmp	r4, r6
 801ab60:	f2c0 80b1 	blt.w	801acc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801ab64:	f04f 0800 	mov.w	r8, #0
 801ab68:	eb03 0408 	add.w	r4, r3, r8
 801ab6c:	2c00      	cmp	r4, #0
 801ab6e:	dc3e      	bgt.n	801abee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ab70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ab78:	f1bb 0f00 	cmp.w	fp, #0
 801ab7c:	f340 8108 	ble.w	801ad90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801ab80:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab84:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab88:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ab8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab8e:	f1bb 0b01 	subs.w	fp, fp, #1
 801ab92:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ab96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ab9a:	eeb0 6a62 	vmov.f32	s12, s5
 801ab9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aba2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aba6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abaa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801abae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abb2:	eeb0 6a43 	vmov.f32	s12, s6
 801abb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abba:	ee12 2a90 	vmov	r2, s5
 801abbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abc2:	fb92 f3f3 	sdiv	r3, r2, r3
 801abc6:	ee13 2a10 	vmov	r2, s6
 801abca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801abce:	9313      	str	r3, [sp, #76]	; 0x4c
 801abd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abd2:	fb92 f3f3 	sdiv	r3, r2, r3
 801abd6:	9a04      	ldr	r2, [sp, #16]
 801abd8:	9314      	str	r3, [sp, #80]	; 0x50
 801abda:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801abde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abe0:	eeb0 3a67 	vmov.f32	s6, s15
 801abe4:	bf08      	it	eq
 801abe6:	4613      	moveq	r3, r2
 801abe8:	eef0 2a47 	vmov.f32	s5, s14
 801abec:	e787      	b.n	801aafe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801abee:	140e      	asrs	r6, r1, #16
 801abf0:	d462      	bmi.n	801acb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801abf2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801abf6:	42b5      	cmp	r5, r6
 801abf8:	dd5e      	ble.n	801acb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801abfa:	1417      	asrs	r7, r2, #16
 801abfc:	d45c      	bmi.n	801acb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801abfe:	f8de 400c 	ldr.w	r4, [lr, #12]
 801ac02:	42bc      	cmp	r4, r7
 801ac04:	dd58      	ble.n	801acb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ac06:	b22d      	sxth	r5, r5
 801ac08:	fb07 6505 	mla	r5, r7, r5, r6
 801ac0c:	9c02      	ldr	r4, [sp, #8]
 801ac0e:	5d66      	ldrb	r6, [r4, r5]
 801ac10:	2e00      	cmp	r6, #0
 801ac12:	d051      	beq.n	801acb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ac14:	9c01      	ldr	r4, [sp, #4]
 801ac16:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801ac1a:	f06f 0401 	mvn.w	r4, #1
 801ac1e:	fb04 f408 	mul.w	r4, r4, r8
 801ac22:	9403      	str	r4, [sp, #12]
 801ac24:	5b05      	ldrh	r5, [r0, r4]
 801ac26:	9c05      	ldr	r4, [sp, #20]
 801ac28:	4366      	muls	r6, r4
 801ac2a:	1c74      	adds	r4, r6, #1
 801ac2c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ac30:	1224      	asrs	r4, r4, #8
 801ac32:	b2a7      	uxth	r7, r4
 801ac34:	122e      	asrs	r6, r5, #8
 801ac36:	43e4      	mvns	r4, r4
 801ac38:	b2e4      	uxtb	r4, r4
 801ac3a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801ac3e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ac42:	fb16 f604 	smulbb	r6, r6, r4
 801ac46:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ac4a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac4e:	00ed      	lsls	r5, r5, #3
 801ac50:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ac54:	b2ed      	uxtb	r5, r5
 801ac56:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801ac5a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ac5e:	fb15 f504 	smulbb	r5, r5, r4
 801ac62:	fa5f f989 	uxtb.w	r9, r9
 801ac66:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ac6a:	fb09 5507 	mla	r5, r9, r7, r5
 801ac6e:	fb1a fa04 	smulbb	sl, sl, r4
 801ac72:	fa1f fc8c 	uxth.w	ip, ip
 801ac76:	b2ad      	uxth	r5, r5
 801ac78:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ac7c:	fb06 a607 	mla	r6, r6, r7, sl
 801ac80:	f10c 0401 	add.w	r4, ip, #1
 801ac84:	f105 0a01 	add.w	sl, r5, #1
 801ac88:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ac8c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ac90:	b2b6      	uxth	r6, r6
 801ac92:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac96:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac9a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ac9e:	f106 0a01 	add.w	sl, r6, #1
 801aca2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aca6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801acaa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801acae:	9c03      	ldr	r4, [sp, #12]
 801acb0:	ea4c 0c0a 	orr.w	ip, ip, sl
 801acb4:	f820 c004 	strh.w	ip, [r0, r4]
 801acb8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801acba:	4421      	add	r1, r4
 801acbc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801acbe:	f108 38ff 	add.w	r8, r8, #4294967295
 801acc2:	4422      	add	r2, r4
 801acc4:	e750      	b.n	801ab68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801acc6:	f04f 0900 	mov.w	r9, #0
 801acca:	eba3 0409 	sub.w	r4, r3, r9
 801acce:	2c00      	cmp	r4, #0
 801acd0:	f77f af4e 	ble.w	801ab70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801acd4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801acd8:	140d      	asrs	r5, r1, #16
 801acda:	1414      	asrs	r4, r2, #16
 801acdc:	fb06 5404 	mla	r4, r6, r4, r5
 801ace0:	9d02      	ldr	r5, [sp, #8]
 801ace2:	5d2e      	ldrb	r6, [r5, r4]
 801ace4:	2e00      	cmp	r6, #0
 801ace6:	d04c      	beq.n	801ad82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801ace8:	9d01      	ldr	r5, [sp, #4]
 801acea:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801acee:	9c05      	ldr	r4, [sp, #20]
 801acf0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801acf4:	4366      	muls	r6, r4
 801acf6:	1c74      	adds	r4, r6, #1
 801acf8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801acfc:	1224      	asrs	r4, r4, #8
 801acfe:	b2a7      	uxth	r7, r4
 801ad00:	122e      	asrs	r6, r5, #8
 801ad02:	43e4      	mvns	r4, r4
 801ad04:	b2e4      	uxtb	r4, r4
 801ad06:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801ad0a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ad0e:	fb16 f604 	smulbb	r6, r6, r4
 801ad12:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ad16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ad1a:	00ed      	lsls	r5, r5, #3
 801ad1c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ad20:	b2ed      	uxtb	r5, r5
 801ad22:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ad26:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ad2a:	fb15 f504 	smulbb	r5, r5, r4
 801ad2e:	fa5f f888 	uxtb.w	r8, r8
 801ad32:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ad36:	fb08 5507 	mla	r5, r8, r7, r5
 801ad3a:	fb1a fa04 	smulbb	sl, sl, r4
 801ad3e:	fa1f fc8c 	uxth.w	ip, ip
 801ad42:	b2ad      	uxth	r5, r5
 801ad44:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ad48:	fb06 a607 	mla	r6, r6, r7, sl
 801ad4c:	f10c 0401 	add.w	r4, ip, #1
 801ad50:	f105 0a01 	add.w	sl, r5, #1
 801ad54:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ad58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ad5c:	b2b6      	uxth	r6, r6
 801ad5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ad62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ad66:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ad6a:	f106 0a01 	add.w	sl, r6, #1
 801ad6e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ad72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad7a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ad7e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801ad82:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ad84:	4421      	add	r1, r4
 801ad86:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ad88:	f109 0901 	add.w	r9, r9, #1
 801ad8c:	4422      	add	r2, r4
 801ad8e:	e79c      	b.n	801acca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801ad90:	b007      	add	sp, #28
 801ad92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ad96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad9a:	b085      	sub	sp, #20
 801ad9c:	468b      	mov	fp, r1
 801ad9e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ada0:	9203      	str	r2, [sp, #12]
 801ada2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801ada6:	6861      	ldr	r1, [r4, #4]
 801ada8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801adac:	fb01 2000 	mla	r0, r1, r0, r2
 801adb0:	6822      	ldr	r2, [r4, #0]
 801adb2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801adb6:	f8d8 2000 	ldr.w	r2, [r8]
 801adba:	9200      	str	r2, [sp, #0]
 801adbc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801adc0:	9201      	str	r2, [sp, #4]
 801adc2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801adc6:	f1bb 0f00 	cmp.w	fp, #0
 801adca:	dc03      	bgt.n	801add4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801adcc:	9a03      	ldr	r2, [sp, #12]
 801adce:	2a00      	cmp	r2, #0
 801add0:	f340 8146 	ble.w	801b060 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801add4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801add6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801adda:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801adde:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ade2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ade4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ade8:	2b00      	cmp	r3, #0
 801adea:	dd0e      	ble.n	801ae0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801adec:	140c      	asrs	r4, r1, #16
 801adee:	d405      	bmi.n	801adfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801adf0:	42bc      	cmp	r4, r7
 801adf2:	da03      	bge.n	801adfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801adf4:	1414      	asrs	r4, r2, #16
 801adf6:	d401      	bmi.n	801adfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801adf8:	42b4      	cmp	r4, r6
 801adfa:	db07      	blt.n	801ae0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801adfc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801adfe:	4421      	add	r1, r4
 801ae00:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ae02:	3b01      	subs	r3, #1
 801ae04:	4422      	add	r2, r4
 801ae06:	3002      	adds	r0, #2
 801ae08:	e7ee      	b.n	801ade8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ae0a:	d017      	beq.n	801ae3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ae0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ae0e:	1e5c      	subs	r4, r3, #1
 801ae10:	fb05 1504 	mla	r5, r5, r4, r1
 801ae14:	142d      	asrs	r5, r5, #16
 801ae16:	d409      	bmi.n	801ae2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ae18:	42bd      	cmp	r5, r7
 801ae1a:	da07      	bge.n	801ae2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ae1c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ae1e:	fb05 2404 	mla	r4, r5, r4, r2
 801ae22:	1424      	asrs	r4, r4, #16
 801ae24:	d402      	bmi.n	801ae2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ae26:	42b4      	cmp	r4, r6
 801ae28:	f2c0 80b3 	blt.w	801af92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ae2c:	2600      	movs	r6, #0
 801ae2e:	199c      	adds	r4, r3, r6
 801ae30:	2c00      	cmp	r4, #0
 801ae32:	dc3e      	bgt.n	801aeb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ae34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ae38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ae3c:	f1bb 0f00 	cmp.w	fp, #0
 801ae40:	f340 810e 	ble.w	801b060 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ae44:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae4c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ae50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae52:	f1bb 0b01 	subs.w	fp, fp, #1
 801ae56:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae5e:	eeb0 6a62 	vmov.f32	s12, s5
 801ae62:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae6e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ae72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae76:	eeb0 6a43 	vmov.f32	s12, s6
 801ae7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae7e:	ee12 2a90 	vmov	r2, s5
 801ae82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae86:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae8a:	ee13 2a10 	vmov	r2, s6
 801ae8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae92:	9311      	str	r3, [sp, #68]	; 0x44
 801ae94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae96:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae9a:	9a03      	ldr	r2, [sp, #12]
 801ae9c:	9312      	str	r3, [sp, #72]	; 0x48
 801ae9e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801aea2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aea4:	eeb0 3a67 	vmov.f32	s6, s15
 801aea8:	bf08      	it	eq
 801aeaa:	4613      	moveq	r3, r2
 801aeac:	eef0 2a47 	vmov.f32	s5, s14
 801aeb0:	e789      	b.n	801adc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801aeb2:	140f      	asrs	r7, r1, #16
 801aeb4:	d418      	bmi.n	801aee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aeb6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801aeba:	42bd      	cmp	r5, r7
 801aebc:	dd14      	ble.n	801aee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aebe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801aec2:	d411      	bmi.n	801aee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aec4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801aec8:	4564      	cmp	r4, ip
 801aeca:	dd0d      	ble.n	801aee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aecc:	b22d      	sxth	r5, r5
 801aece:	fb0c 7505 	mla	r5, ip, r5, r7
 801aed2:	9c01      	ldr	r4, [sp, #4]
 801aed4:	5d64      	ldrb	r4, [r4, r5]
 801aed6:	2cff      	cmp	r4, #255	; 0xff
 801aed8:	d10c      	bne.n	801aef4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801aeda:	9c00      	ldr	r4, [sp, #0]
 801aedc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801aee0:	f06f 0401 	mvn.w	r4, #1
 801aee4:	4374      	muls	r4, r6
 801aee6:	5305      	strh	r5, [r0, r4]
 801aee8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aeea:	4421      	add	r1, r4
 801aeec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aeee:	3e01      	subs	r6, #1
 801aef0:	4422      	add	r2, r4
 801aef2:	e79c      	b.n	801ae2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aef4:	2c00      	cmp	r4, #0
 801aef6:	d0f7      	beq.n	801aee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aef8:	9f00      	ldr	r7, [sp, #0]
 801aefa:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801aefe:	f06f 0501 	mvn.w	r5, #1
 801af02:	4375      	muls	r5, r6
 801af04:	9502      	str	r5, [sp, #8]
 801af06:	5b45      	ldrh	r5, [r0, r5]
 801af08:	fa1f fc84 	uxth.w	ip, r4
 801af0c:	122f      	asrs	r7, r5, #8
 801af0e:	43e4      	mvns	r4, r4
 801af10:	b2e4      	uxtb	r4, r4
 801af12:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801af16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af1a:	fb17 f704 	smulbb	r7, r7, r4
 801af1e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801af22:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801af26:	00ed      	lsls	r5, r5, #3
 801af28:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801af2c:	b2ed      	uxtb	r5, r5
 801af2e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801af32:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801af36:	fb15 f504 	smulbb	r5, r5, r4
 801af3a:	fa5f f989 	uxtb.w	r9, r9
 801af3e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801af42:	fb09 550c 	mla	r5, r9, ip, r5
 801af46:	fb1a fa04 	smulbb	sl, sl, r4
 801af4a:	fa1f fe8e 	uxth.w	lr, lr
 801af4e:	b2ad      	uxth	r5, r5
 801af50:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801af54:	fb07 a70c 	mla	r7, r7, ip, sl
 801af58:	f10e 0401 	add.w	r4, lr, #1
 801af5c:	f105 0a01 	add.w	sl, r5, #1
 801af60:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801af64:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801af68:	b2bf      	uxth	r7, r7
 801af6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af6e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801af72:	ea4a 0e0e 	orr.w	lr, sl, lr
 801af76:	f107 0a01 	add.w	sl, r7, #1
 801af7a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801af7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af86:	9c02      	ldr	r4, [sp, #8]
 801af88:	ea4e 0e0a 	orr.w	lr, lr, sl
 801af8c:	f820 e004 	strh.w	lr, [r0, r4]
 801af90:	e7aa      	b.n	801aee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801af92:	f04f 0900 	mov.w	r9, #0
 801af96:	eba3 0409 	sub.w	r4, r3, r9
 801af9a:	2c00      	cmp	r4, #0
 801af9c:	f77f af4a 	ble.w	801ae34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801afa0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801afa4:	1414      	asrs	r4, r2, #16
 801afa6:	140d      	asrs	r5, r1, #16
 801afa8:	fb06 5504 	mla	r5, r6, r4, r5
 801afac:	9c01      	ldr	r4, [sp, #4]
 801afae:	5d64      	ldrb	r4, [r4, r5]
 801afb0:	2cff      	cmp	r4, #255	; 0xff
 801afb2:	d10b      	bne.n	801afcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801afb4:	9c00      	ldr	r4, [sp, #0]
 801afb6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801afba:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801afbe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801afc0:	4421      	add	r1, r4
 801afc2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801afc4:	f109 0901 	add.w	r9, r9, #1
 801afc8:	4422      	add	r2, r4
 801afca:	e7e4      	b.n	801af96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801afcc:	2c00      	cmp	r4, #0
 801afce:	d0f6      	beq.n	801afbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801afd0:	9e00      	ldr	r6, [sp, #0]
 801afd2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801afd6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801afda:	b2a7      	uxth	r7, r4
 801afdc:	122e      	asrs	r6, r5, #8
 801afde:	43e4      	mvns	r4, r4
 801afe0:	b2e4      	uxtb	r4, r4
 801afe2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801afe6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801afea:	fb16 f604 	smulbb	r6, r6, r4
 801afee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aff2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aff6:	00ed      	lsls	r5, r5, #3
 801aff8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801affc:	b2ed      	uxtb	r5, r5
 801affe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b002:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b006:	fb15 f504 	smulbb	r5, r5, r4
 801b00a:	fa5f fe8e 	uxtb.w	lr, lr
 801b00e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b012:	fb0e 5507 	mla	r5, lr, r7, r5
 801b016:	fb1a fa04 	smulbb	sl, sl, r4
 801b01a:	fa1f fc8c 	uxth.w	ip, ip
 801b01e:	b2ad      	uxth	r5, r5
 801b020:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b024:	fb06 a607 	mla	r6, r6, r7, sl
 801b028:	f10c 0401 	add.w	r4, ip, #1
 801b02c:	f105 0a01 	add.w	sl, r5, #1
 801b030:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b034:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b038:	b2b6      	uxth	r6, r6
 801b03a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b03e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b042:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b046:	f106 0a01 	add.w	sl, r6, #1
 801b04a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b04e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b052:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b056:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b05a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b05e:	e7ae      	b.n	801afbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b060:	b005      	add	sp, #20
 801b062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b066 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b066:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b06a:	b085      	sub	sp, #20
 801b06c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b06e:	9203      	str	r2, [sp, #12]
 801b070:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801b074:	9201      	str	r2, [sp, #4]
 801b076:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b07a:	9100      	str	r1, [sp, #0]
 801b07c:	6841      	ldr	r1, [r0, #4]
 801b07e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b082:	fb01 2404 	mla	r4, r1, r4, r2
 801b086:	6802      	ldr	r2, [r0, #0]
 801b088:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b08c:	f8de 2000 	ldr.w	r2, [lr]
 801b090:	9202      	str	r2, [sp, #8]
 801b092:	9a01      	ldr	r2, [sp, #4]
 801b094:	43d6      	mvns	r6, r2
 801b096:	b2f6      	uxtb	r6, r6
 801b098:	9a00      	ldr	r2, [sp, #0]
 801b09a:	2a00      	cmp	r2, #0
 801b09c:	dc03      	bgt.n	801b0a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b09e:	9a03      	ldr	r2, [sp, #12]
 801b0a0:	2a00      	cmp	r2, #0
 801b0a2:	f340 8124 	ble.w	801b2ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b0a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b0a8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b0ac:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b0b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b0b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b0b6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b0ba:	2b00      	cmp	r3, #0
 801b0bc:	dd0e      	ble.n	801b0dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b0be:	1408      	asrs	r0, r1, #16
 801b0c0:	d405      	bmi.n	801b0ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b0c2:	4560      	cmp	r0, ip
 801b0c4:	da03      	bge.n	801b0ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b0c6:	1410      	asrs	r0, r2, #16
 801b0c8:	d401      	bmi.n	801b0ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b0ca:	42b8      	cmp	r0, r7
 801b0cc:	db07      	blt.n	801b0de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b0ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b0d0:	4401      	add	r1, r0
 801b0d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b0d4:	3b01      	subs	r3, #1
 801b0d6:	4402      	add	r2, r0
 801b0d8:	3402      	adds	r4, #2
 801b0da:	e7ee      	b.n	801b0ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b0dc:	d06e      	beq.n	801b1bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b0de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b0e0:	1e58      	subs	r0, r3, #1
 801b0e2:	fb05 1500 	mla	r5, r5, r0, r1
 801b0e6:	142d      	asrs	r5, r5, #16
 801b0e8:	d45c      	bmi.n	801b1a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b0ea:	4565      	cmp	r5, ip
 801b0ec:	da5a      	bge.n	801b1a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b0ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b0f0:	fb05 2000 	mla	r0, r5, r0, r2
 801b0f4:	1400      	asrs	r0, r0, #16
 801b0f6:	d455      	bmi.n	801b1a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b0f8:	42b8      	cmp	r0, r7
 801b0fa:	da53      	bge.n	801b1a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b0fc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b100:	4699      	mov	r9, r3
 801b102:	46a2      	mov	sl, r4
 801b104:	f1b9 0f00 	cmp.w	r9, #0
 801b108:	dd54      	ble.n	801b1b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b10a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b10e:	140d      	asrs	r5, r1, #16
 801b110:	1410      	asrs	r0, r2, #16
 801b112:	fb07 5000 	mla	r0, r7, r0, r5
 801b116:	9d02      	ldr	r5, [sp, #8]
 801b118:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b11c:	f8ba 5000 	ldrh.w	r5, [sl]
 801b120:	122f      	asrs	r7, r5, #8
 801b122:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b126:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b12a:	fb17 f706 	smulbb	r7, r7, r6
 801b12e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b132:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b136:	00ed      	lsls	r5, r5, #3
 801b138:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b13c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b140:	10c7      	asrs	r7, r0, #3
 801b142:	b2ed      	uxtb	r5, r5
 801b144:	00c0      	lsls	r0, r0, #3
 801b146:	fb18 f806 	smulbb	r8, r8, r6
 801b14a:	fb15 f506 	smulbb	r5, r5, r6
 801b14e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b152:	b2c0      	uxtb	r0, r0
 801b154:	fa1f fc8c 	uxth.w	ip, ip
 801b158:	fb07 870b 	mla	r7, r7, fp, r8
 801b15c:	fb00 500b 	mla	r0, r0, fp, r5
 801b160:	b280      	uxth	r0, r0
 801b162:	b2bf      	uxth	r7, r7
 801b164:	f10c 0501 	add.w	r5, ip, #1
 801b168:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b16c:	f107 0801 	add.w	r8, r7, #1
 801b170:	1c45      	adds	r5, r0, #1
 801b172:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b176:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b17a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b17c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b180:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b184:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b188:	ea45 0c0c 	orr.w	ip, r5, ip
 801b18c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b190:	4401      	add	r1, r0
 801b192:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b194:	ea4c 0c08 	orr.w	ip, ip, r8
 801b198:	f82a cb02 	strh.w	ip, [sl], #2
 801b19c:	4402      	add	r2, r0
 801b19e:	f109 39ff 	add.w	r9, r9, #4294967295
 801b1a2:	e7af      	b.n	801b104 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b1a4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b1a8:	f04f 0800 	mov.w	r8, #0
 801b1ac:	eb03 0008 	add.w	r0, r3, r8
 801b1b0:	2800      	cmp	r0, #0
 801b1b2:	dc41      	bgt.n	801b238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b1b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b1b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b1bc:	9b00      	ldr	r3, [sp, #0]
 801b1be:	2b00      	cmp	r3, #0
 801b1c0:	f340 8095 	ble.w	801b2ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b1c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b1c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b1cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b1d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b1d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b1d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b1da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b1de:	eef0 6a62 	vmov.f32	s13, s5
 801b1e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b1e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b1ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b1ee:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b1f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b1f6:	eef0 6a43 	vmov.f32	s13, s6
 801b1fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b1fe:	ee12 2a90 	vmov	r2, s5
 801b202:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b206:	fb92 f3f3 	sdiv	r3, r2, r3
 801b20a:	ee13 2a10 	vmov	r2, s6
 801b20e:	9311      	str	r3, [sp, #68]	; 0x44
 801b210:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b212:	fb92 f3f3 	sdiv	r3, r2, r3
 801b216:	9312      	str	r3, [sp, #72]	; 0x48
 801b218:	9b00      	ldr	r3, [sp, #0]
 801b21a:	9a03      	ldr	r2, [sp, #12]
 801b21c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b220:	3b01      	subs	r3, #1
 801b222:	9300      	str	r3, [sp, #0]
 801b224:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b228:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b22a:	eeb0 3a67 	vmov.f32	s6, s15
 801b22e:	bf08      	it	eq
 801b230:	4613      	moveq	r3, r2
 801b232:	eef0 2a47 	vmov.f32	s5, s14
 801b236:	e72f      	b.n	801b098 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b238:	140f      	asrs	r7, r1, #16
 801b23a:	d451      	bmi.n	801b2e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b23c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b240:	42bd      	cmp	r5, r7
 801b242:	dd4d      	ble.n	801b2e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b244:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b248:	d44a      	bmi.n	801b2e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b24a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b24e:	4560      	cmp	r0, ip
 801b250:	dd46      	ble.n	801b2e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b252:	b22d      	sxth	r5, r5
 801b254:	fb0c 7505 	mla	r5, ip, r5, r7
 801b258:	9802      	ldr	r0, [sp, #8]
 801b25a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b25e:	f06f 0501 	mvn.w	r5, #1
 801b262:	fb05 fb08 	mul.w	fp, r5, r8
 801b266:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b26a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b26e:	122f      	asrs	r7, r5, #8
 801b270:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b274:	fb17 f706 	smulbb	r7, r7, r6
 801b278:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b27c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b280:	00ed      	lsls	r5, r5, #3
 801b282:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b286:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b28a:	10c7      	asrs	r7, r0, #3
 801b28c:	b2ed      	uxtb	r5, r5
 801b28e:	00c0      	lsls	r0, r0, #3
 801b290:	fb19 f906 	smulbb	r9, r9, r6
 801b294:	fb15 f506 	smulbb	r5, r5, r6
 801b298:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b29c:	b2c0      	uxtb	r0, r0
 801b29e:	fa1f fc8c 	uxth.w	ip, ip
 801b2a2:	fb07 970a 	mla	r7, r7, sl, r9
 801b2a6:	fb00 500a 	mla	r0, r0, sl, r5
 801b2aa:	b2bf      	uxth	r7, r7
 801b2ac:	b280      	uxth	r0, r0
 801b2ae:	f10c 0501 	add.w	r5, ip, #1
 801b2b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b2b6:	f107 0901 	add.w	r9, r7, #1
 801b2ba:	1c45      	adds	r5, r0, #1
 801b2bc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b2c0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b2c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b2c8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b2cc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b2d0:	ea45 0c0c 	orr.w	ip, r5, ip
 801b2d4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b2d8:	ea4c 0c09 	orr.w	ip, ip, r9
 801b2dc:	f824 c00b 	strh.w	ip, [r4, fp]
 801b2e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b2e2:	4401      	add	r1, r0
 801b2e4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b2e6:	f108 38ff 	add.w	r8, r8, #4294967295
 801b2ea:	4402      	add	r2, r0
 801b2ec:	e75e      	b.n	801b1ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b2ee:	b005      	add	sp, #20
 801b2f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b2f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2f8:	b085      	sub	sp, #20
 801b2fa:	4693      	mov	fp, r2
 801b2fc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b2fe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b300:	6870      	ldr	r0, [r6, #4]
 801b302:	9101      	str	r1, [sp, #4]
 801b304:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b308:	fb00 2404 	mla	r4, r0, r4, r2
 801b30c:	6832      	ldr	r2, [r6, #0]
 801b30e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b312:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b316:	682a      	ldr	r2, [r5, #0]
 801b318:	9202      	str	r2, [sp, #8]
 801b31a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b31e:	9a01      	ldr	r2, [sp, #4]
 801b320:	2a00      	cmp	r2, #0
 801b322:	dc03      	bgt.n	801b32c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b324:	f1bb 0f00 	cmp.w	fp, #0
 801b328:	f340 809a 	ble.w	801b460 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b32c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b32e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b332:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b336:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b33a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b33c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b340:	2b00      	cmp	r3, #0
 801b342:	dd0c      	ble.n	801b35e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b344:	1406      	asrs	r6, r0, #16
 801b346:	d405      	bmi.n	801b354 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b348:	454e      	cmp	r6, r9
 801b34a:	da03      	bge.n	801b354 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b34c:	1416      	asrs	r6, r2, #16
 801b34e:	d401      	bmi.n	801b354 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b350:	4546      	cmp	r6, r8
 801b352:	db05      	blt.n	801b360 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b354:	4470      	add	r0, lr
 801b356:	4462      	add	r2, ip
 801b358:	3b01      	subs	r3, #1
 801b35a:	3402      	adds	r4, #2
 801b35c:	e7f0      	b.n	801b340 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b35e:	d00f      	beq.n	801b380 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b360:	1e5e      	subs	r6, r3, #1
 801b362:	fb0e 0706 	mla	r7, lr, r6, r0
 801b366:	143f      	asrs	r7, r7, #16
 801b368:	d541      	bpl.n	801b3ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b36a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b36e:	4698      	mov	r8, r3
 801b370:	9603      	str	r6, [sp, #12]
 801b372:	f1b8 0f00 	cmp.w	r8, #0
 801b376:	dc56      	bgt.n	801b426 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b378:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b37c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b380:	9b01      	ldr	r3, [sp, #4]
 801b382:	2b00      	cmp	r3, #0
 801b384:	dd6c      	ble.n	801b460 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b386:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b38a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b38e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b392:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b394:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b398:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b39c:	eeb0 6a62 	vmov.f32	s12, s5
 801b3a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b3a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b3ac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b3b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b3b4:	eeb0 6a43 	vmov.f32	s12, s6
 801b3b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b3bc:	ee12 2a90 	vmov	r2, s5
 801b3c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b3c4:	fb92 fef3 	sdiv	lr, r2, r3
 801b3c8:	ee13 2a10 	vmov	r2, s6
 801b3cc:	fb92 fcf3 	sdiv	ip, r2, r3
 801b3d0:	9b01      	ldr	r3, [sp, #4]
 801b3d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3d6:	3b01      	subs	r3, #1
 801b3d8:	9301      	str	r3, [sp, #4]
 801b3da:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b3de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b3e0:	eeb0 3a67 	vmov.f32	s6, s15
 801b3e4:	bf08      	it	eq
 801b3e6:	465b      	moveq	r3, fp
 801b3e8:	eef0 2a47 	vmov.f32	s5, s14
 801b3ec:	e797      	b.n	801b31e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b3ee:	454f      	cmp	r7, r9
 801b3f0:	dabb      	bge.n	801b36a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b3f2:	fb0c 2606 	mla	r6, ip, r6, r2
 801b3f6:	1436      	asrs	r6, r6, #16
 801b3f8:	d4b7      	bmi.n	801b36a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b3fa:	4546      	cmp	r6, r8
 801b3fc:	dab5      	bge.n	801b36a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b3fe:	461e      	mov	r6, r3
 801b400:	46a0      	mov	r8, r4
 801b402:	2e00      	cmp	r6, #0
 801b404:	ddb8      	ble.n	801b378 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b406:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b40a:	9902      	ldr	r1, [sp, #8]
 801b40c:	1417      	asrs	r7, r2, #16
 801b40e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b412:	fb0a 9707 	mla	r7, sl, r7, r9
 801b416:	4470      	add	r0, lr
 801b418:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b41c:	f828 7b02 	strh.w	r7, [r8], #2
 801b420:	4462      	add	r2, ip
 801b422:	3e01      	subs	r6, #1
 801b424:	e7ed      	b.n	801b402 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b426:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b42a:	d414      	bmi.n	801b456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b42c:	68ae      	ldr	r6, [r5, #8]
 801b42e:	454e      	cmp	r6, r9
 801b430:	dd11      	ble.n	801b456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b432:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b436:	d40e      	bmi.n	801b456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b438:	68ef      	ldr	r7, [r5, #12]
 801b43a:	4557      	cmp	r7, sl
 801b43c:	dd0b      	ble.n	801b456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b43e:	b236      	sxth	r6, r6
 801b440:	fb0a 9606 	mla	r6, sl, r6, r9
 801b444:	9f02      	ldr	r7, [sp, #8]
 801b446:	f06f 0101 	mvn.w	r1, #1
 801b44a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b44e:	fb01 f608 	mul.w	r6, r1, r8
 801b452:	9903      	ldr	r1, [sp, #12]
 801b454:	538f      	strh	r7, [r1, r6]
 801b456:	4470      	add	r0, lr
 801b458:	4462      	add	r2, ip
 801b45a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b45e:	e788      	b.n	801b372 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b460:	b005      	add	sp, #20
 801b462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b466 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b466:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b46a:	b087      	sub	sp, #28
 801b46c:	468b      	mov	fp, r1
 801b46e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b470:	9203      	str	r2, [sp, #12]
 801b472:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b476:	9204      	str	r2, [sp, #16]
 801b478:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b47c:	6841      	ldr	r1, [r0, #4]
 801b47e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b482:	fb01 2505 	mla	r5, r1, r5, r2
 801b486:	6802      	ldr	r2, [r0, #0]
 801b488:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b48c:	f8d9 2000 	ldr.w	r2, [r9]
 801b490:	9201      	str	r2, [sp, #4]
 801b492:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b496:	f1bb 0f00 	cmp.w	fp, #0
 801b49a:	dc03      	bgt.n	801b4a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b49c:	9a03      	ldr	r2, [sp, #12]
 801b49e:	2a00      	cmp	r2, #0
 801b4a0:	f340 8159 	ble.w	801b756 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b4a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b4a6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b4aa:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b4ae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b4b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b4b4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b4b8:	2b00      	cmp	r3, #0
 801b4ba:	dd0e      	ble.n	801b4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b4bc:	1402      	asrs	r2, r0, #16
 801b4be:	d405      	bmi.n	801b4cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b4c0:	42ba      	cmp	r2, r7
 801b4c2:	da03      	bge.n	801b4cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b4c4:	140a      	asrs	r2, r1, #16
 801b4c6:	d401      	bmi.n	801b4cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b4c8:	42b2      	cmp	r2, r6
 801b4ca:	db07      	blt.n	801b4dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b4cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b4ce:	4410      	add	r0, r2
 801b4d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4d2:	3b01      	subs	r3, #1
 801b4d4:	4411      	add	r1, r2
 801b4d6:	3502      	adds	r5, #2
 801b4d8:	e7ee      	b.n	801b4b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b4da:	d017      	beq.n	801b50c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b4dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b4de:	1e5a      	subs	r2, r3, #1
 801b4e0:	fb04 0402 	mla	r4, r4, r2, r0
 801b4e4:	1424      	asrs	r4, r4, #16
 801b4e6:	d409      	bmi.n	801b4fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b4e8:	42bc      	cmp	r4, r7
 801b4ea:	da07      	bge.n	801b4fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b4ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b4ee:	fb04 1202 	mla	r2, r4, r2, r1
 801b4f2:	1412      	asrs	r2, r2, #16
 801b4f4:	d402      	bmi.n	801b4fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b4f6:	42b2      	cmp	r2, r6
 801b4f8:	f2c0 80bf 	blt.w	801b67a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b4fc:	2700      	movs	r7, #0
 801b4fe:	19da      	adds	r2, r3, r7
 801b500:	2a00      	cmp	r2, #0
 801b502:	dc3e      	bgt.n	801b582 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b504:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b508:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b50c:	f1bb 0f00 	cmp.w	fp, #0
 801b510:	f340 8121 	ble.w	801b756 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b514:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b518:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b51c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b520:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b522:	f1bb 0b01 	subs.w	fp, fp, #1
 801b526:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b52a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b52e:	eeb0 6a62 	vmov.f32	s12, s5
 801b532:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b536:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b53a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b53e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b542:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b546:	eeb0 6a43 	vmov.f32	s12, s6
 801b54a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b54e:	ee12 2a90 	vmov	r2, s5
 801b552:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b556:	fb92 f3f3 	sdiv	r3, r2, r3
 801b55a:	ee13 2a10 	vmov	r2, s6
 801b55e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b562:	9313      	str	r3, [sp, #76]	; 0x4c
 801b564:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b566:	fb92 f3f3 	sdiv	r3, r2, r3
 801b56a:	9a03      	ldr	r2, [sp, #12]
 801b56c:	9314      	str	r3, [sp, #80]	; 0x50
 801b56e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b572:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b574:	eeb0 3a67 	vmov.f32	s6, s15
 801b578:	bf08      	it	eq
 801b57a:	4613      	moveq	r3, r2
 801b57c:	eef0 2a47 	vmov.f32	s5, s14
 801b580:	e789      	b.n	801b496 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b582:	1406      	asrs	r6, r0, #16
 801b584:	d42d      	bmi.n	801b5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b586:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b58a:	42b4      	cmp	r4, r6
 801b58c:	dd29      	ble.n	801b5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b58e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b592:	d426      	bmi.n	801b5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b594:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b598:	4562      	cmp	r2, ip
 801b59a:	dd22      	ble.n	801b5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b59c:	b224      	sxth	r4, r4
 801b59e:	9a01      	ldr	r2, [sp, #4]
 801b5a0:	fb0c 6404 	mla	r4, ip, r4, r6
 801b5a4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b5a8:	0e22      	lsrs	r2, r4, #24
 801b5aa:	d01a      	beq.n	801b5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b5ac:	9e04      	ldr	r6, [sp, #16]
 801b5ae:	4372      	muls	r2, r6
 801b5b0:	1c56      	adds	r6, r2, #1
 801b5b2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b5b6:	1212      	asrs	r2, r2, #8
 801b5b8:	0a26      	lsrs	r6, r4, #8
 801b5ba:	2aff      	cmp	r2, #255	; 0xff
 801b5bc:	9605      	str	r6, [sp, #20]
 801b5be:	d116      	bne.n	801b5ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b5c0:	f06f 0201 	mvn.w	r2, #1
 801b5c4:	fb02 fc07 	mul.w	ip, r2, r7
 801b5c8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b5cc:	0962      	lsrs	r2, r4, #5
 801b5ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b5d2:	f026 0607 	bic.w	r6, r6, #7
 801b5d6:	4316      	orrs	r6, r2
 801b5d8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b5dc:	4326      	orrs	r6, r4
 801b5de:	f825 600c 	strh.w	r6, [r5, ip]
 801b5e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b5e4:	4410      	add	r0, r2
 801b5e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b5e8:	3f01      	subs	r7, #1
 801b5ea:	4411      	add	r1, r2
 801b5ec:	e787      	b.n	801b4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b5ee:	f06f 0601 	mvn.w	r6, #1
 801b5f2:	437e      	muls	r6, r7
 801b5f4:	fa1f fa82 	uxth.w	sl, r2
 801b5f8:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b5fc:	9602      	str	r6, [sp, #8]
 801b5fe:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b602:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b606:	43d2      	mvns	r2, r2
 801b608:	b2d2      	uxtb	r2, r2
 801b60a:	fb1c fc0a 	smulbb	ip, ip, sl
 801b60e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b612:	fb0e ce02 	mla	lr, lr, r2, ip
 801b616:	b2e4      	uxtb	r4, r4
 801b618:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b61c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b620:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b624:	fa5f f888 	uxtb.w	r8, r8
 801b628:	fb14 f40a 	smulbb	r4, r4, sl
 801b62c:	fb08 4402 	mla	r4, r8, r2, r4
 801b630:	fa1f fe8e 	uxth.w	lr, lr
 801b634:	fb16 f60a 	smulbb	r6, r6, sl
 801b638:	b2a4      	uxth	r4, r4
 801b63a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b63e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b642:	f10e 0201 	add.w	r2, lr, #1
 801b646:	1c66      	adds	r6, r4, #1
 801b648:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b64c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b650:	fa1f fc8c 	uxth.w	ip, ip
 801b654:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b658:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b65c:	ea46 0e0e 	orr.w	lr, r6, lr
 801b660:	f10c 0601 	add.w	r6, ip, #1
 801b664:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b668:	0976      	lsrs	r6, r6, #5
 801b66a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b66e:	9a02      	ldr	r2, [sp, #8]
 801b670:	ea4e 0e06 	orr.w	lr, lr, r6
 801b674:	f825 e002 	strh.w	lr, [r5, r2]
 801b678:	e7b3      	b.n	801b5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b67a:	f04f 0800 	mov.w	r8, #0
 801b67e:	eba3 0208 	sub.w	r2, r3, r8
 801b682:	2a00      	cmp	r2, #0
 801b684:	f77f af3e 	ble.w	801b504 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b688:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b68c:	1404      	asrs	r4, r0, #16
 801b68e:	140a      	asrs	r2, r1, #16
 801b690:	fb06 4202 	mla	r2, r6, r2, r4
 801b694:	9c01      	ldr	r4, [sp, #4]
 801b696:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b69a:	0e22      	lsrs	r2, r4, #24
 801b69c:	d016      	beq.n	801b6cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b69e:	9e04      	ldr	r6, [sp, #16]
 801b6a0:	4372      	muls	r2, r6
 801b6a2:	1c56      	adds	r6, r2, #1
 801b6a4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b6a8:	1212      	asrs	r2, r2, #8
 801b6aa:	2aff      	cmp	r2, #255	; 0xff
 801b6ac:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b6b0:	d113      	bne.n	801b6da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b6b2:	0962      	lsrs	r2, r4, #5
 801b6b4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b6b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b6bc:	f026 0607 	bic.w	r6, r6, #7
 801b6c0:	4316      	orrs	r6, r2
 801b6c2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b6c6:	4326      	orrs	r6, r4
 801b6c8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b6cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b6ce:	4410      	add	r0, r2
 801b6d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b6d2:	f108 0801 	add.w	r8, r8, #1
 801b6d6:	4411      	add	r1, r2
 801b6d8:	e7d1      	b.n	801b67e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b6da:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b6de:	fa1f fa82 	uxth.w	sl, r2
 801b6e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b6e6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b6ea:	43d2      	mvns	r2, r2
 801b6ec:	b2d2      	uxtb	r2, r2
 801b6ee:	fb17 f70a 	smulbb	r7, r7, sl
 801b6f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b6f6:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b6fa:	b2e4      	uxtb	r4, r4
 801b6fc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b700:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b704:	fa5f fe8e 	uxtb.w	lr, lr
 801b708:	fb14 f40a 	smulbb	r4, r4, sl
 801b70c:	fb0e 4402 	mla	r4, lr, r2, r4
 801b710:	b2f6      	uxtb	r6, r6
 801b712:	fa1f fc8c 	uxth.w	ip, ip
 801b716:	fb16 f60a 	smulbb	r6, r6, sl
 801b71a:	b2a4      	uxth	r4, r4
 801b71c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b720:	fb07 6702 	mla	r7, r7, r2, r6
 801b724:	f10c 0201 	add.w	r2, ip, #1
 801b728:	1c66      	adds	r6, r4, #1
 801b72a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b72e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b732:	b2bf      	uxth	r7, r7
 801b734:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b738:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b73c:	ea46 0c0c 	orr.w	ip, r6, ip
 801b740:	1c7e      	adds	r6, r7, #1
 801b742:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b746:	0976      	lsrs	r6, r6, #5
 801b748:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b74c:	ea4c 0c06 	orr.w	ip, ip, r6
 801b750:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b754:	e7ba      	b.n	801b6cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b756:	b007      	add	sp, #28
 801b758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b75c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b75c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b760:	b085      	sub	sp, #20
 801b762:	468b      	mov	fp, r1
 801b764:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b766:	9203      	str	r2, [sp, #12]
 801b768:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b76c:	6841      	ldr	r1, [r0, #4]
 801b76e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b772:	fb01 2404 	mla	r4, r1, r4, r2
 801b776:	6802      	ldr	r2, [r0, #0]
 801b778:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b77c:	f8d8 2000 	ldr.w	r2, [r8]
 801b780:	9201      	str	r2, [sp, #4]
 801b782:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b786:	f1bb 0f00 	cmp.w	fp, #0
 801b78a:	dc03      	bgt.n	801b794 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b78c:	9a03      	ldr	r2, [sp, #12]
 801b78e:	2a00      	cmp	r2, #0
 801b790:	f340 814f 	ble.w	801ba32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b794:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b796:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b79a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b79e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b7a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b7a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b7a8:	2b00      	cmp	r3, #0
 801b7aa:	dd0e      	ble.n	801b7ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b7ac:	1408      	asrs	r0, r1, #16
 801b7ae:	d405      	bmi.n	801b7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b7b0:	42b8      	cmp	r0, r7
 801b7b2:	da03      	bge.n	801b7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b7b4:	1410      	asrs	r0, r2, #16
 801b7b6:	d401      	bmi.n	801b7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b7b8:	42b0      	cmp	r0, r6
 801b7ba:	db07      	blt.n	801b7cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b7bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b7be:	4401      	add	r1, r0
 801b7c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b7c2:	3b01      	subs	r3, #1
 801b7c4:	4402      	add	r2, r0
 801b7c6:	3402      	adds	r4, #2
 801b7c8:	e7ee      	b.n	801b7a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b7ca:	d017      	beq.n	801b7fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b7cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b7ce:	1e58      	subs	r0, r3, #1
 801b7d0:	fb05 1500 	mla	r5, r5, r0, r1
 801b7d4:	142d      	asrs	r5, r5, #16
 801b7d6:	d409      	bmi.n	801b7ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b7d8:	42bd      	cmp	r5, r7
 801b7da:	da07      	bge.n	801b7ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b7dc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b7de:	fb05 2000 	mla	r0, r5, r0, r2
 801b7e2:	1400      	asrs	r0, r0, #16
 801b7e4:	d402      	bmi.n	801b7ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b7e6:	42b0      	cmp	r0, r6
 801b7e8:	f2c0 80ba 	blt.w	801b960 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b7ec:	2600      	movs	r6, #0
 801b7ee:	1998      	adds	r0, r3, r6
 801b7f0:	2800      	cmp	r0, #0
 801b7f2:	dc3e      	bgt.n	801b872 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b7f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b7f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b7fc:	f1bb 0f00 	cmp.w	fp, #0
 801b800:	f340 8117 	ble.w	801ba32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b804:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b808:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b80c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b810:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b812:	f1bb 0b01 	subs.w	fp, fp, #1
 801b816:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b81a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b81e:	eeb0 6a62 	vmov.f32	s12, s5
 801b822:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b826:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b82a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b82e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b832:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b836:	eeb0 6a43 	vmov.f32	s12, s6
 801b83a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b83e:	ee12 2a90 	vmov	r2, s5
 801b842:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b846:	fb92 f3f3 	sdiv	r3, r2, r3
 801b84a:	ee13 2a10 	vmov	r2, s6
 801b84e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b852:	9311      	str	r3, [sp, #68]	; 0x44
 801b854:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b856:	fb92 f3f3 	sdiv	r3, r2, r3
 801b85a:	9a03      	ldr	r2, [sp, #12]
 801b85c:	9312      	str	r3, [sp, #72]	; 0x48
 801b85e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b862:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b864:	eeb0 3a67 	vmov.f32	s6, s15
 801b868:	bf08      	it	eq
 801b86a:	4613      	moveq	r3, r2
 801b86c:	eef0 2a47 	vmov.f32	s5, s14
 801b870:	e789      	b.n	801b786 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b872:	140f      	asrs	r7, r1, #16
 801b874:	d424      	bmi.n	801b8c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b876:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b87a:	42bd      	cmp	r5, r7
 801b87c:	dd20      	ble.n	801b8c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b87e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b882:	d41d      	bmi.n	801b8c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b884:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b888:	4560      	cmp	r0, ip
 801b88a:	dd19      	ble.n	801b8c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b88c:	b22d      	sxth	r5, r5
 801b88e:	fb0c 7505 	mla	r5, ip, r5, r7
 801b892:	9801      	ldr	r0, [sp, #4]
 801b894:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b898:	0e07      	lsrs	r7, r0, #24
 801b89a:	2fff      	cmp	r7, #255	; 0xff
 801b89c:	d116      	bne.n	801b8cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b89e:	f06f 0501 	mvn.w	r5, #1
 801b8a2:	fb05 f706 	mul.w	r7, r5, r6
 801b8a6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b8aa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b8ae:	0945      	lsrs	r5, r0, #5
 801b8b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b8b4:	ea4c 0505 	orr.w	r5, ip, r5
 801b8b8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b8bc:	4305      	orrs	r5, r0
 801b8be:	53e5      	strh	r5, [r4, r7]
 801b8c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b8c2:	4401      	add	r1, r0
 801b8c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b8c6:	3e01      	subs	r6, #1
 801b8c8:	4402      	add	r2, r0
 801b8ca:	e790      	b.n	801b7ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b8cc:	b2fd      	uxtb	r5, r7
 801b8ce:	2f00      	cmp	r7, #0
 801b8d0:	d0f6      	beq.n	801b8c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b8d2:	f06f 0701 	mvn.w	r7, #1
 801b8d6:	4377      	muls	r7, r6
 801b8d8:	fa1f f985 	uxth.w	r9, r5
 801b8dc:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b8e0:	9702      	str	r7, [sp, #8]
 801b8e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b8e6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b8ea:	43ed      	mvns	r5, r5
 801b8ec:	b2ed      	uxtb	r5, r5
 801b8ee:	fb17 f709 	smulbb	r7, r7, r9
 801b8f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b8f6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b8fa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b8fe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b902:	b2c0      	uxtb	r0, r0
 801b904:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b908:	fa5f fe8e 	uxtb.w	lr, lr
 801b90c:	fb10 f009 	smulbb	r0, r0, r9
 801b910:	fb0e 0005 	mla	r0, lr, r5, r0
 801b914:	b280      	uxth	r0, r0
 801b916:	fa1f fc8c 	uxth.w	ip, ip
 801b91a:	fb1a fa09 	smulbb	sl, sl, r9
 801b91e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b922:	fb07 a705 	mla	r7, r7, r5, sl
 801b926:	f100 0a01 	add.w	sl, r0, #1
 801b92a:	f10c 0501 	add.w	r5, ip, #1
 801b92e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b932:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b936:	b2bf      	uxth	r7, r7
 801b938:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b93c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b940:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b944:	f107 0a01 	add.w	sl, r7, #1
 801b948:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b94c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b950:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b954:	9802      	ldr	r0, [sp, #8]
 801b956:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b95a:	f824 c000 	strh.w	ip, [r4, r0]
 801b95e:	e7af      	b.n	801b8c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b960:	f04f 0e00 	mov.w	lr, #0
 801b964:	eba3 000e 	sub.w	r0, r3, lr
 801b968:	2800      	cmp	r0, #0
 801b96a:	f77f af43 	ble.w	801b7f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b96e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b972:	140d      	asrs	r5, r1, #16
 801b974:	1410      	asrs	r0, r2, #16
 801b976:	fb06 5000 	mla	r0, r6, r0, r5
 801b97a:	9d01      	ldr	r5, [sp, #4]
 801b97c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b980:	0e2e      	lsrs	r6, r5, #24
 801b982:	2eff      	cmp	r6, #255	; 0xff
 801b984:	d112      	bne.n	801b9ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b986:	482c      	ldr	r0, [pc, #176]	; (801ba38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b988:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b98c:	0968      	lsrs	r0, r5, #5
 801b98e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b992:	4330      	orrs	r0, r6
 801b994:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b998:	4328      	orrs	r0, r5
 801b99a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b99e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b9a0:	4401      	add	r1, r0
 801b9a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b9a4:	f10e 0e01 	add.w	lr, lr, #1
 801b9a8:	4402      	add	r2, r0
 801b9aa:	e7db      	b.n	801b964 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b9ac:	b2f0      	uxtb	r0, r6
 801b9ae:	2e00      	cmp	r6, #0
 801b9b0:	d0f5      	beq.n	801b99e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b9b2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b9b6:	fa1f f980 	uxth.w	r9, r0
 801b9ba:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b9be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b9c2:	43c0      	mvns	r0, r0
 801b9c4:	b2c0      	uxtb	r0, r0
 801b9c6:	fb16 f609 	smulbb	r6, r6, r9
 801b9ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b9ce:	fb07 6700 	mla	r7, r7, r0, r6
 801b9d2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b9d6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b9da:	b2ed      	uxtb	r5, r5
 801b9dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b9e0:	fa5f fc8c 	uxtb.w	ip, ip
 801b9e4:	fb15 f509 	smulbb	r5, r5, r9
 801b9e8:	fb0c 5500 	mla	r5, ip, r0, r5
 801b9ec:	b2bf      	uxth	r7, r7
 801b9ee:	fb1a fa09 	smulbb	sl, sl, r9
 801b9f2:	b2ad      	uxth	r5, r5
 801b9f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b9f8:	fb06 a600 	mla	r6, r6, r0, sl
 801b9fc:	1c78      	adds	r0, r7, #1
 801b9fe:	f105 0a01 	add.w	sl, r5, #1
 801ba02:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801ba06:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ba0a:	b2b6      	uxth	r6, r6
 801ba0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ba10:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ba14:	ea4a 0707 	orr.w	r7, sl, r7
 801ba18:	f106 0a01 	add.w	sl, r6, #1
 801ba1c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ba20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ba24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ba28:	ea47 070a 	orr.w	r7, r7, sl
 801ba2c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801ba30:	e7b5      	b.n	801b99e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ba32:	b005      	add	sp, #20
 801ba34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba38:	fffff800 	.word	0xfffff800

0801ba3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ba3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba40:	b087      	sub	sp, #28
 801ba42:	468b      	mov	fp, r1
 801ba44:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ba46:	9203      	str	r2, [sp, #12]
 801ba48:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ba4c:	9204      	str	r2, [sp, #16]
 801ba4e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ba52:	6841      	ldr	r1, [r0, #4]
 801ba54:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801ba58:	fb01 2404 	mla	r4, r1, r4, r2
 801ba5c:	6802      	ldr	r2, [r0, #0]
 801ba5e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ba62:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ba66:	3201      	adds	r2, #1
 801ba68:	f022 0201 	bic.w	r2, r2, #1
 801ba6c:	9200      	str	r2, [sp, #0]
 801ba6e:	f8d9 2000 	ldr.w	r2, [r9]
 801ba72:	9201      	str	r2, [sp, #4]
 801ba74:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ba78:	f1bb 0f00 	cmp.w	fp, #0
 801ba7c:	dc03      	bgt.n	801ba86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ba7e:	9a03      	ldr	r2, [sp, #12]
 801ba80:	2a00      	cmp	r2, #0
 801ba82:	f340 8169 	ble.w	801bd58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ba86:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ba88:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801ba8c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801ba90:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ba94:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ba96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ba9a:	2b00      	cmp	r3, #0
 801ba9c:	dd0e      	ble.n	801babc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ba9e:	1402      	asrs	r2, r0, #16
 801baa0:	d405      	bmi.n	801baae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801baa2:	42ba      	cmp	r2, r7
 801baa4:	da03      	bge.n	801baae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801baa6:	140a      	asrs	r2, r1, #16
 801baa8:	d401      	bmi.n	801baae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801baaa:	42b2      	cmp	r2, r6
 801baac:	db07      	blt.n	801babe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801baae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bab0:	4410      	add	r0, r2
 801bab2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bab4:	3b01      	subs	r3, #1
 801bab6:	4411      	add	r1, r2
 801bab8:	3402      	adds	r4, #2
 801baba:	e7ee      	b.n	801ba9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801babc:	d017      	beq.n	801baee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801babe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bac0:	1e5a      	subs	r2, r3, #1
 801bac2:	fb05 0502 	mla	r5, r5, r2, r0
 801bac6:	142d      	asrs	r5, r5, #16
 801bac8:	d409      	bmi.n	801bade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801baca:	42bd      	cmp	r5, r7
 801bacc:	da07      	bge.n	801bade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bace:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bad0:	fb05 1202 	mla	r2, r5, r2, r1
 801bad4:	1412      	asrs	r2, r2, #16
 801bad6:	d402      	bmi.n	801bade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bad8:	42b2      	cmp	r2, r6
 801bada:	f2c0 80c7 	blt.w	801bc6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801bade:	2700      	movs	r7, #0
 801bae0:	19da      	adds	r2, r3, r7
 801bae2:	2a00      	cmp	r2, #0
 801bae4:	dc3e      	bgt.n	801bb64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bae6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801baea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801baee:	f1bb 0f00 	cmp.w	fp, #0
 801baf2:	f340 8131 	ble.w	801bd58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801baf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bafa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bafe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bb02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb04:	f1bb 0b01 	subs.w	fp, fp, #1
 801bb08:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb10:	eeb0 6a62 	vmov.f32	s12, s5
 801bb14:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb20:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bb24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb28:	eeb0 6a43 	vmov.f32	s12, s6
 801bb2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb30:	ee12 2a90 	vmov	r2, s5
 801bb34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb38:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb3c:	ee13 2a10 	vmov	r2, s6
 801bb40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb44:	9313      	str	r3, [sp, #76]	; 0x4c
 801bb46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb48:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb4c:	9a03      	ldr	r2, [sp, #12]
 801bb4e:	9314      	str	r3, [sp, #80]	; 0x50
 801bb50:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bb54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb56:	eeb0 3a67 	vmov.f32	s6, s15
 801bb5a:	bf08      	it	eq
 801bb5c:	4613      	moveq	r3, r2
 801bb5e:	eef0 2a47 	vmov.f32	s5, s14
 801bb62:	e789      	b.n	801ba78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bb64:	1405      	asrs	r5, r0, #16
 801bb66:	d435      	bmi.n	801bbd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bb68:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801bb6c:	42aa      	cmp	r2, r5
 801bb6e:	dd31      	ble.n	801bbd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bb70:	140e      	asrs	r6, r1, #16
 801bb72:	d42f      	bmi.n	801bbd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bb74:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801bb78:	42b2      	cmp	r2, r6
 801bb7a:	dd2b      	ble.n	801bbd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bb7c:	9a00      	ldr	r2, [sp, #0]
 801bb7e:	fb06 5502 	mla	r5, r6, r2, r5
 801bb82:	086a      	lsrs	r2, r5, #1
 801bb84:	9e01      	ldr	r6, [sp, #4]
 801bb86:	5cb2      	ldrb	r2, [r6, r2]
 801bb88:	07ee      	lsls	r6, r5, #31
 801bb8a:	bf54      	ite	pl
 801bb8c:	f002 020f 	andpl.w	r2, r2, #15
 801bb90:	1112      	asrmi	r2, r2, #4
 801bb92:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bb96:	b2d2      	uxtb	r2, r2
 801bb98:	b1e2      	cbz	r2, 801bbd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bb9a:	9d04      	ldr	r5, [sp, #16]
 801bb9c:	436a      	muls	r2, r5
 801bb9e:	1c55      	adds	r5, r2, #1
 801bba0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bba4:	4d6e      	ldr	r5, [pc, #440]	; (801bd60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bba6:	682d      	ldr	r5, [r5, #0]
 801bba8:	1212      	asrs	r2, r2, #8
 801bbaa:	0a2e      	lsrs	r6, r5, #8
 801bbac:	2aff      	cmp	r2, #255	; 0xff
 801bbae:	9605      	str	r6, [sp, #20]
 801bbb0:	d116      	bne.n	801bbe0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801bbb2:	f06f 0201 	mvn.w	r2, #1
 801bbb6:	fb02 fc07 	mul.w	ip, r2, r7
 801bbba:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bbbe:	096a      	lsrs	r2, r5, #5
 801bbc0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bbc4:	f026 0607 	bic.w	r6, r6, #7
 801bbc8:	4316      	orrs	r6, r2
 801bbca:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bbce:	432e      	orrs	r6, r5
 801bbd0:	f824 600c 	strh.w	r6, [r4, ip]
 801bbd4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bbd6:	4410      	add	r0, r2
 801bbd8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bbda:	3f01      	subs	r7, #1
 801bbdc:	4411      	add	r1, r2
 801bbde:	e77f      	b.n	801bae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801bbe0:	f06f 0601 	mvn.w	r6, #1
 801bbe4:	437e      	muls	r6, r7
 801bbe6:	fa1f fa82 	uxth.w	sl, r2
 801bbea:	f834 8006 	ldrh.w	r8, [r4, r6]
 801bbee:	9602      	str	r6, [sp, #8]
 801bbf0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801bbf4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801bbf8:	43d2      	mvns	r2, r2
 801bbfa:	b2d2      	uxtb	r2, r2
 801bbfc:	fb1c fc0a 	smulbb	ip, ip, sl
 801bc00:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bc04:	fb0e ce02 	mla	lr, lr, r2, ip
 801bc08:	b2ed      	uxtb	r5, r5
 801bc0a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801bc0e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bc12:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801bc16:	fa5f f888 	uxtb.w	r8, r8
 801bc1a:	fb15 f50a 	smulbb	r5, r5, sl
 801bc1e:	fb08 5502 	mla	r5, r8, r2, r5
 801bc22:	fa1f fe8e 	uxth.w	lr, lr
 801bc26:	fb16 f60a 	smulbb	r6, r6, sl
 801bc2a:	b2ad      	uxth	r5, r5
 801bc2c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bc30:	fb0c 6c02 	mla	ip, ip, r2, r6
 801bc34:	f10e 0201 	add.w	r2, lr, #1
 801bc38:	1c6e      	adds	r6, r5, #1
 801bc3a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801bc3e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801bc42:	fa1f fc8c 	uxth.w	ip, ip
 801bc46:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bc4a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bc4e:	ea46 0e0e 	orr.w	lr, r6, lr
 801bc52:	f10c 0601 	add.w	r6, ip, #1
 801bc56:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801bc5a:	0976      	lsrs	r6, r6, #5
 801bc5c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bc60:	9a02      	ldr	r2, [sp, #8]
 801bc62:	ea4e 0e06 	orr.w	lr, lr, r6
 801bc66:	f824 e002 	strh.w	lr, [r4, r2]
 801bc6a:	e7b3      	b.n	801bbd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bc6c:	f04f 0800 	mov.w	r8, #0
 801bc70:	eba3 0208 	sub.w	r2, r3, r8
 801bc74:	2a00      	cmp	r2, #0
 801bc76:	f77f af36 	ble.w	801bae6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801bc7a:	9e00      	ldr	r6, [sp, #0]
 801bc7c:	1402      	asrs	r2, r0, #16
 801bc7e:	140d      	asrs	r5, r1, #16
 801bc80:	fb06 2505 	mla	r5, r6, r5, r2
 801bc84:	086a      	lsrs	r2, r5, #1
 801bc86:	9e01      	ldr	r6, [sp, #4]
 801bc88:	5cb2      	ldrb	r2, [r6, r2]
 801bc8a:	07ed      	lsls	r5, r5, #31
 801bc8c:	bf54      	ite	pl
 801bc8e:	f002 020f 	andpl.w	r2, r2, #15
 801bc92:	1112      	asrmi	r2, r2, #4
 801bc94:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bc98:	b2d2      	uxtb	r2, r2
 801bc9a:	b1c2      	cbz	r2, 801bcce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bc9c:	9d04      	ldr	r5, [sp, #16]
 801bc9e:	436a      	muls	r2, r5
 801bca0:	1c55      	adds	r5, r2, #1
 801bca2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bca6:	4d2e      	ldr	r5, [pc, #184]	; (801bd60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bca8:	1212      	asrs	r2, r2, #8
 801bcaa:	682e      	ldr	r6, [r5, #0]
 801bcac:	2aff      	cmp	r2, #255	; 0xff
 801bcae:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801bcb2:	d113      	bne.n	801bcdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801bcb4:	0972      	lsrs	r2, r6, #5
 801bcb6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bcba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bcbe:	f025 0507 	bic.w	r5, r5, #7
 801bcc2:	4315      	orrs	r5, r2
 801bcc4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801bcc8:	4335      	orrs	r5, r6
 801bcca:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801bcce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bcd0:	4410      	add	r0, r2
 801bcd2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcd4:	f108 0801 	add.w	r8, r8, #1
 801bcd8:	4411      	add	r1, r2
 801bcda:	e7c9      	b.n	801bc70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bcdc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801bce0:	fa1f fa82 	uxth.w	sl, r2
 801bce4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bce8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801bcec:	43d2      	mvns	r2, r2
 801bcee:	b2d2      	uxtb	r2, r2
 801bcf0:	fb17 f70a 	smulbb	r7, r7, sl
 801bcf4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bcf8:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bcfc:	b2f6      	uxtb	r6, r6
 801bcfe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bd02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bd06:	fa5f fe8e 	uxtb.w	lr, lr
 801bd0a:	fb16 f60a 	smulbb	r6, r6, sl
 801bd0e:	fb0e 6602 	mla	r6, lr, r2, r6
 801bd12:	b2ed      	uxtb	r5, r5
 801bd14:	fa1f fc8c 	uxth.w	ip, ip
 801bd18:	fb15 f50a 	smulbb	r5, r5, sl
 801bd1c:	b2b6      	uxth	r6, r6
 801bd1e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bd22:	fb07 5702 	mla	r7, r7, r2, r5
 801bd26:	f10c 0201 	add.w	r2, ip, #1
 801bd2a:	1c75      	adds	r5, r6, #1
 801bd2c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bd30:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bd34:	b2bf      	uxth	r7, r7
 801bd36:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bd3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bd3e:	ea45 0c0c 	orr.w	ip, r5, ip
 801bd42:	1c7d      	adds	r5, r7, #1
 801bd44:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801bd48:	096d      	lsrs	r5, r5, #5
 801bd4a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bd4e:	ea4c 0c05 	orr.w	ip, ip, r5
 801bd52:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801bd56:	e7ba      	b.n	801bcce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bd58:	b007      	add	sp, #28
 801bd5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd5e:	bf00      	nop
 801bd60:	200259a0 	.word	0x200259a0

0801bd64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd68:	b087      	sub	sp, #28
 801bd6a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801c078 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bd6e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bd70:	9205      	str	r2, [sp, #20]
 801bd72:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bd76:	9101      	str	r1, [sp, #4]
 801bd78:	6841      	ldr	r1, [r0, #4]
 801bd7a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801bd7e:	fb01 2404 	mla	r4, r1, r4, r2
 801bd82:	6802      	ldr	r2, [r0, #0]
 801bd84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bd88:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bd8c:	3201      	adds	r2, #1
 801bd8e:	f022 0201 	bic.w	r2, r2, #1
 801bd92:	9202      	str	r2, [sp, #8]
 801bd94:	f8db 2000 	ldr.w	r2, [fp]
 801bd98:	9203      	str	r2, [sp, #12]
 801bd9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bd9e:	9a01      	ldr	r2, [sp, #4]
 801bda0:	2a00      	cmp	r2, #0
 801bda2:	dc03      	bgt.n	801bdac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bda4:	9a05      	ldr	r2, [sp, #20]
 801bda6:	2a00      	cmp	r2, #0
 801bda8:	f340 8162 	ble.w	801c070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bdac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bdae:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801bdb2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801bdb6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bdba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bdbc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bdc0:	2b00      	cmp	r3, #0
 801bdc2:	dd0e      	ble.n	801bde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bdc4:	1402      	asrs	r2, r0, #16
 801bdc6:	d405      	bmi.n	801bdd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bdc8:	42ba      	cmp	r2, r7
 801bdca:	da03      	bge.n	801bdd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bdcc:	140a      	asrs	r2, r1, #16
 801bdce:	d401      	bmi.n	801bdd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bdd0:	42b2      	cmp	r2, r6
 801bdd2:	db07      	blt.n	801bde4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bdd4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bdd6:	4410      	add	r0, r2
 801bdd8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bdda:	3b01      	subs	r3, #1
 801bddc:	4411      	add	r1, r2
 801bdde:	3402      	adds	r4, #2
 801bde0:	e7ee      	b.n	801bdc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bde2:	d017      	beq.n	801be14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bde4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bde6:	1e5a      	subs	r2, r3, #1
 801bde8:	fb05 0502 	mla	r5, r5, r2, r0
 801bdec:	142d      	asrs	r5, r5, #16
 801bdee:	d409      	bmi.n	801be04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bdf0:	42bd      	cmp	r5, r7
 801bdf2:	da07      	bge.n	801be04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bdf4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bdf6:	fb05 1202 	mla	r2, r5, r2, r1
 801bdfa:	1412      	asrs	r2, r2, #16
 801bdfc:	d402      	bmi.n	801be04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bdfe:	42b2      	cmp	r2, r6
 801be00:	f2c0 80c3 	blt.w	801bf8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801be04:	2500      	movs	r5, #0
 801be06:	195a      	adds	r2, r3, r5
 801be08:	2a00      	cmp	r2, #0
 801be0a:	dc3f      	bgt.n	801be8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801be0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801be14:	9b01      	ldr	r3, [sp, #4]
 801be16:	2b00      	cmp	r3, #0
 801be18:	f340 812a 	ble.w	801c070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801be1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801be20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801be24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801be28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801be2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801be2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801be32:	eeb0 6a62 	vmov.f32	s12, s5
 801be36:	ee61 7a27 	vmul.f32	s15, s2, s15
 801be3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801be3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801be42:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801be46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801be4a:	eeb0 6a43 	vmov.f32	s12, s6
 801be4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801be52:	ee12 2a90 	vmov	r2, s5
 801be56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801be5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801be5e:	ee13 2a10 	vmov	r2, s6
 801be62:	9313      	str	r3, [sp, #76]	; 0x4c
 801be64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801be66:	fb92 f3f3 	sdiv	r3, r2, r3
 801be6a:	9314      	str	r3, [sp, #80]	; 0x50
 801be6c:	9b01      	ldr	r3, [sp, #4]
 801be6e:	9a05      	ldr	r2, [sp, #20]
 801be70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801be74:	3b01      	subs	r3, #1
 801be76:	9301      	str	r3, [sp, #4]
 801be78:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801be7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801be7e:	eeb0 3a67 	vmov.f32	s6, s15
 801be82:	bf08      	it	eq
 801be84:	4613      	moveq	r3, r2
 801be86:	eef0 2a47 	vmov.f32	s5, s14
 801be8a:	e788      	b.n	801bd9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801be8c:	1406      	asrs	r6, r0, #16
 801be8e:	d42c      	bmi.n	801beea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801be90:	f8db 2008 	ldr.w	r2, [fp, #8]
 801be94:	42b2      	cmp	r2, r6
 801be96:	dd28      	ble.n	801beea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801be98:	140f      	asrs	r7, r1, #16
 801be9a:	d426      	bmi.n	801beea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801be9c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801bea0:	42ba      	cmp	r2, r7
 801bea2:	dd22      	ble.n	801beea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bea4:	9a02      	ldr	r2, [sp, #8]
 801bea6:	fb07 6602 	mla	r6, r7, r2, r6
 801beaa:	0872      	lsrs	r2, r6, #1
 801beac:	9f03      	ldr	r7, [sp, #12]
 801beae:	5cba      	ldrb	r2, [r7, r2]
 801beb0:	07f6      	lsls	r6, r6, #31
 801beb2:	bf54      	ite	pl
 801beb4:	f002 020f 	andpl.w	r2, r2, #15
 801beb8:	1112      	asrmi	r2, r2, #4
 801beba:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bebe:	b2d2      	uxtb	r2, r2
 801bec0:	2aff      	cmp	r2, #255	; 0xff
 801bec2:	d118      	bne.n	801bef6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bec4:	f8d8 2000 	ldr.w	r2, [r8]
 801bec8:	f06f 0601 	mvn.w	r6, #1
 801becc:	fb06 f705 	mul.w	r7, r6, r5
 801bed0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bed4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bed8:	0956      	lsrs	r6, r2, #5
 801beda:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bede:	ea4c 0606 	orr.w	r6, ip, r6
 801bee2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bee6:	4316      	orrs	r6, r2
 801bee8:	53e6      	strh	r6, [r4, r7]
 801beea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801beec:	4410      	add	r0, r2
 801beee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bef0:	3d01      	subs	r5, #1
 801bef2:	4411      	add	r1, r2
 801bef4:	e787      	b.n	801be06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bef6:	2a00      	cmp	r2, #0
 801bef8:	d0f7      	beq.n	801beea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801befa:	f06f 0601 	mvn.w	r6, #1
 801befe:	436e      	muls	r6, r5
 801bf00:	f8d8 c000 	ldr.w	ip, [r8]
 801bf04:	f834 e006 	ldrh.w	lr, [r4, r6]
 801bf08:	9604      	str	r6, [sp, #16]
 801bf0a:	fa1f f982 	uxth.w	r9, r2
 801bf0e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801bf12:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801bf16:	43d2      	mvns	r2, r2
 801bf18:	b2d2      	uxtb	r2, r2
 801bf1a:	fb16 f609 	smulbb	r6, r6, r9
 801bf1e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bf22:	fb07 6702 	mla	r7, r7, r2, r6
 801bf26:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801bf2a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bf2e:	fa5f fc8c 	uxtb.w	ip, ip
 801bf32:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bf36:	fa5f fe8e 	uxtb.w	lr, lr
 801bf3a:	fb1c fc09 	smulbb	ip, ip, r9
 801bf3e:	fb0e cc02 	mla	ip, lr, r2, ip
 801bf42:	b2bf      	uxth	r7, r7
 801bf44:	fb1a fa09 	smulbb	sl, sl, r9
 801bf48:	fa1f fc8c 	uxth.w	ip, ip
 801bf4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bf50:	fb06 a602 	mla	r6, r6, r2, sl
 801bf54:	1c7a      	adds	r2, r7, #1
 801bf56:	f10c 0a01 	add.w	sl, ip, #1
 801bf5a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bf5e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bf62:	b2b6      	uxth	r6, r6
 801bf64:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bf68:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bf6c:	ea4a 0707 	orr.w	r7, sl, r7
 801bf70:	f106 0a01 	add.w	sl, r6, #1
 801bf74:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bf78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bf7c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bf80:	9a04      	ldr	r2, [sp, #16]
 801bf82:	ea47 070a 	orr.w	r7, r7, sl
 801bf86:	52a7      	strh	r7, [r4, r2]
 801bf88:	e7af      	b.n	801beea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bf8a:	f04f 0e00 	mov.w	lr, #0
 801bf8e:	eba3 020e 	sub.w	r2, r3, lr
 801bf92:	2a00      	cmp	r2, #0
 801bf94:	f77f af3a 	ble.w	801be0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bf98:	9e02      	ldr	r6, [sp, #8]
 801bf9a:	1402      	asrs	r2, r0, #16
 801bf9c:	140d      	asrs	r5, r1, #16
 801bf9e:	fb06 2505 	mla	r5, r6, r5, r2
 801bfa2:	086a      	lsrs	r2, r5, #1
 801bfa4:	9e03      	ldr	r6, [sp, #12]
 801bfa6:	5cb2      	ldrb	r2, [r6, r2]
 801bfa8:	07ed      	lsls	r5, r5, #31
 801bfaa:	bf54      	ite	pl
 801bfac:	f002 020f 	andpl.w	r2, r2, #15
 801bfb0:	1112      	asrmi	r2, r2, #4
 801bfb2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bfb6:	b2d2      	uxtb	r2, r2
 801bfb8:	2aff      	cmp	r2, #255	; 0xff
 801bfba:	d115      	bne.n	801bfe8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bfbc:	f8d8 5000 	ldr.w	r5, [r8]
 801bfc0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bfc4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bfc8:	096a      	lsrs	r2, r5, #5
 801bfca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfce:	4332      	orrs	r2, r6
 801bfd0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bfd4:	432a      	orrs	r2, r5
 801bfd6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bfda:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bfdc:	4410      	add	r0, r2
 801bfde:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bfe0:	f10e 0e01 	add.w	lr, lr, #1
 801bfe4:	4411      	add	r1, r2
 801bfe6:	e7d2      	b.n	801bf8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bfe8:	2a00      	cmp	r2, #0
 801bfea:	d0f6      	beq.n	801bfda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bfec:	f8d8 7000 	ldr.w	r7, [r8]
 801bff0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bff4:	fa1f f982 	uxth.w	r9, r2
 801bff8:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bffc:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801c000:	43d2      	mvns	r2, r2
 801c002:	b2d2      	uxtb	r2, r2
 801c004:	fb15 f509 	smulbb	r5, r5, r9
 801c008:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c00c:	fb06 5602 	mla	r6, r6, r2, r5
 801c010:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801c014:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c018:	b2ff      	uxtb	r7, r7
 801c01a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c01e:	fa5f fc8c 	uxtb.w	ip, ip
 801c022:	fb17 f709 	smulbb	r7, r7, r9
 801c026:	fb0c 7702 	mla	r7, ip, r2, r7
 801c02a:	b2b6      	uxth	r6, r6
 801c02c:	fb1a fa09 	smulbb	sl, sl, r9
 801c030:	b2bf      	uxth	r7, r7
 801c032:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c036:	fb05 a502 	mla	r5, r5, r2, sl
 801c03a:	1c72      	adds	r2, r6, #1
 801c03c:	f107 0a01 	add.w	sl, r7, #1
 801c040:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c044:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c048:	b2ad      	uxth	r5, r5
 801c04a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c04e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c052:	ea4a 0606 	orr.w	r6, sl, r6
 801c056:	f105 0a01 	add.w	sl, r5, #1
 801c05a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c05e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c062:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c066:	ea46 060a 	orr.w	r6, r6, sl
 801c06a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801c06e:	e7b4      	b.n	801bfda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c070:	b007      	add	sp, #28
 801c072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c076:	bf00      	nop
 801c078:	200259a0 	.word	0x200259a0

0801c07c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801c07c:	4770      	bx	lr

0801c07e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801c07e:	4770      	bx	lr

0801c080 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801c080:	4770      	bx	lr

0801c082 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801c082:	4770      	bx	lr

0801c084 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801c084:	4770      	bx	lr

0801c086 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801c086:	4770      	bx	lr

0801c088 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801c088:	4770      	bx	lr

0801c08a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c08a:	4770      	bx	lr

0801c08c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c08c:	4770      	bx	lr

0801c08e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c08e:	4770      	bx	lr

0801c090 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c090:	4770      	bx	lr

0801c092 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c092:	4770      	bx	lr

0801c094 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c094:	4770      	bx	lr

0801c096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c096:	4770      	bx	lr

0801c098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c098:	4770      	bx	lr

0801c09a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c09a:	4770      	bx	lr

0801c09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c09c:	4770      	bx	lr

0801c09e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c09e:	4770      	bx	lr

0801c0a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c0a0:	4770      	bx	lr

0801c0a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c0a2:	4770      	bx	lr

0801c0a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c0a4:	4770      	bx	lr

0801c0a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c0a6:	4770      	bx	lr

0801c0a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c0a8:	4770      	bx	lr

0801c0aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c0aa:	4770      	bx	lr

0801c0ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801c0ac:	4770      	bx	lr

0801c0ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c0ae:	4770      	bx	lr

0801c0b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801c0b0:	4770      	bx	lr

0801c0b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c0b2:	4770      	bx	lr

0801c0b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c0b4:	4770      	bx	lr

0801c0b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c0b6:	4770      	bx	lr

0801c0b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c0b8:	4770      	bx	lr

0801c0ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c0ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c0be:	b088      	sub	sp, #32
 801c0c0:	ac08      	add	r4, sp, #32
 801c0c2:	4606      	mov	r6, r0
 801c0c4:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801c0c8:	4620      	mov	r0, r4
 801c0ca:	4688      	mov	r8, r1
 801c0cc:	4691      	mov	r9, r2
 801c0ce:	f7fd fc63 	bl	8019998 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c0d2:	6833      	ldr	r3, [r6, #0]
 801c0d4:	4605      	mov	r5, r0
 801c0d6:	4620      	mov	r0, r4
 801c0d8:	699f      	ldr	r7, [r3, #24]
 801c0da:	f7fd fb71 	bl	80197c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c0de:	4682      	mov	sl, r0
 801c0e0:	4620      	mov	r0, r4
 801c0e2:	f7fd fba1 	bl	8019828 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c0e6:	9500      	str	r5, [sp, #0]
 801c0e8:	e9cd a001 	strd	sl, r0, [sp, #4]
 801c0ec:	464b      	mov	r3, r9
 801c0ee:	a806      	add	r0, sp, #24
 801c0f0:	4642      	mov	r2, r8
 801c0f2:	4631      	mov	r1, r6
 801c0f4:	47b8      	blx	r7
 801c0f6:	4628      	mov	r0, r5
 801c0f8:	b008      	add	sp, #32
 801c0fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801c100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801c100:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c104:	2300      	movs	r3, #0
 801c106:	9300      	str	r3, [sp, #0]
 801c108:	4b3d      	ldr	r3, [pc, #244]	; (801c200 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c10a:	781b      	ldrb	r3, [r3, #0]
 801c10c:	2b00      	cmp	r3, #0
 801c10e:	d137      	bne.n	801c180 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c110:	4a3c      	ldr	r2, [pc, #240]	; (801c204 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c112:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c116:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c11a:	2b00      	cmp	r3, #0
 801c11c:	d132      	bne.n	801c184 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c11e:	4b3a      	ldr	r3, [pc, #232]	; (801c208 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c120:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c124:	6808      	ldr	r0, [r1, #0]
 801c126:	6849      	ldr	r1, [r1, #4]
 801c128:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c12c:	ac02      	add	r4, sp, #8
 801c12e:	ab02      	add	r3, sp, #8
 801c130:	c303      	stmia	r3!, {r0, r1}
 801c132:	4669      	mov	r1, sp
 801c134:	4620      	mov	r0, r4
 801c136:	f7fa f8df 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c13a:	4668      	mov	r0, sp
 801c13c:	f7fa f8b4 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c140:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c144:	f8bd 2000 	ldrh.w	r2, [sp]
 801c148:	4d30      	ldr	r5, [pc, #192]	; (801c20c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c14a:	4413      	add	r3, r2
 801c14c:	f8ad 3008 	strh.w	r3, [sp, #8]
 801c150:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c154:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801c158:	6828      	ldr	r0, [r5, #0]
 801c15a:	4413      	add	r3, r2
 801c15c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c160:	6803      	ldr	r3, [r0, #0]
 801c162:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c164:	4798      	blx	r3
 801c166:	f010 0f01 	tst.w	r0, #1
 801c16a:	462f      	mov	r7, r5
 801c16c:	d00c      	beq.n	801c188 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801c16e:	6828      	ldr	r0, [r5, #0]
 801c170:	6803      	ldr	r3, [r0, #0]
 801c172:	e894 0006 	ldmia.w	r4, {r1, r2}
 801c176:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c178:	4798      	blx	r3
 801c17a:	b004      	add	sp, #16
 801c17c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c180:	4a21      	ldr	r2, [pc, #132]	; (801c208 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c182:	e7c6      	b.n	801c112 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801c184:	4b1f      	ldr	r3, [pc, #124]	; (801c204 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c186:	e7cb      	b.n	801c120 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801c188:	6838      	ldr	r0, [r7, #0]
 801c18a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c18e:	6803      	ldr	r3, [r0, #0]
 801c190:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801c194:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c196:	4798      	blx	r3
 801c198:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801c19c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c1a0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801c1a4:	fb16 3602 	smlabb	r6, r6, r2, r3
 801c1a8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c1ac:	6838      	ldr	r0, [r7, #0]
 801c1ae:	6803      	ldr	r3, [r0, #0]
 801c1b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c1b2:	4798      	blx	r3
 801c1b4:	4a13      	ldr	r2, [pc, #76]	; (801c204 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c1b6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801c1ba:	8813      	ldrh	r3, [r2, #0]
 801c1bc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c1c0:	fb03 1404 	mla	r4, r3, r4, r1
 801c1c4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c1c8:	435d      	muls	r5, r3
 801c1ca:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c1ce:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801c1d2:	4691      	mov	r9, r2
 801c1d4:	6838      	ldr	r0, [r7, #0]
 801c1d6:	42ac      	cmp	r4, r5
 801c1d8:	6803      	ldr	r3, [r0, #0]
 801c1da:	d20e      	bcs.n	801c1fa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801c1dc:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801c1e0:	4632      	mov	r2, r6
 801c1e2:	4643      	mov	r3, r8
 801c1e4:	4621      	mov	r1, r4
 801c1e6:	47d0      	blx	sl
 801c1e8:	f8b9 3000 	ldrh.w	r3, [r9]
 801c1ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c1f0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c1f4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c1f8:	e7ec      	b.n	801c1d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c1fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c1fc:	4798      	blx	r3
 801c1fe:	e7bc      	b.n	801c17a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c200:	20025990 	.word	0x20025990
 801c204:	20025992 	.word	0x20025992
 801c208:	20025994 	.word	0x20025994
 801c20c:	20025998 	.word	0x20025998

0801c210 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c214:	b08b      	sub	sp, #44	; 0x2c
 801c216:	460f      	mov	r7, r1
 801c218:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c21c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c220:	4616      	mov	r6, r2
 801c222:	f1bb 0f00 	cmp.w	fp, #0
 801c226:	d04a      	beq.n	801c2be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c228:	6810      	ldr	r0, [r2, #0]
 801c22a:	6851      	ldr	r1, [r2, #4]
 801c22c:	ad06      	add	r5, sp, #24
 801c22e:	c503      	stmia	r5!, {r0, r1}
 801c230:	6818      	ldr	r0, [r3, #0]
 801c232:	6859      	ldr	r1, [r3, #4]
 801c234:	ad08      	add	r5, sp, #32
 801c236:	c503      	stmia	r5!, {r0, r1}
 801c238:	a806      	add	r0, sp, #24
 801c23a:	f7fa f835 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c23e:	4631      	mov	r1, r6
 801c240:	a808      	add	r0, sp, #32
 801c242:	f7fa f859 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c246:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c24a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c24e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c252:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c256:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c25a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c25e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c262:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c266:	4f5f      	ldr	r7, [pc, #380]	; (801c3e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c268:	440a      	add	r2, r1
 801c26a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c26e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c272:	6838      	ldr	r0, [r7, #0]
 801c274:	4413      	add	r3, r2
 801c276:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c27a:	6803      	ldr	r3, [r0, #0]
 801c27c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c27e:	4798      	blx	r3
 801c280:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c284:	46b9      	mov	r9, r7
 801c286:	d11d      	bne.n	801c2c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801c288:	b9fc      	cbnz	r4, 801c2ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c28a:	f010 0f01 	tst.w	r0, #1
 801c28e:	d01c      	beq.n	801c2ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c290:	f8d9 0000 	ldr.w	r0, [r9]
 801c294:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c298:	6801      	ldr	r1, [r0, #0]
 801c29a:	f8cd b00c 	str.w	fp, [sp, #12]
 801c29e:	2700      	movs	r7, #0
 801c2a0:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c2a4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c2a8:	9402      	str	r4, [sp, #8]
 801c2aa:	b2ad      	uxth	r5, r5
 801c2ac:	fa1f f488 	uxth.w	r4, r8
 801c2b0:	9501      	str	r5, [sp, #4]
 801c2b2:	9400      	str	r4, [sp, #0]
 801c2b4:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c2b6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c2ba:	4631      	mov	r1, r6
 801c2bc:	47a0      	blx	r4
 801c2be:	b00b      	add	sp, #44	; 0x2c
 801c2c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c2c4:	f010 0f04 	tst.w	r0, #4
 801c2c8:	e7e1      	b.n	801c28e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c2ca:	f8d9 0000 	ldr.w	r0, [r9]
 801c2ce:	6803      	ldr	r3, [r0, #0]
 801c2d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c2d2:	4798      	blx	r3
 801c2d4:	4b44      	ldr	r3, [pc, #272]	; (801c3e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c2d6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c2da:	881a      	ldrh	r2, [r3, #0]
 801c2dc:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c2e0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c2e4:	fb02 1404 	mla	r4, r2, r4, r1
 801c2e8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c2ec:	469a      	mov	sl, r3
 801c2ee:	fb05 f502 	mul.w	r5, r5, r2
 801c2f2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c2f6:	d059      	beq.n	801c3ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c2f8:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c2fc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c300:	fa1f f28b 	uxth.w	r2, fp
 801c304:	fa1f f989 	uxth.w	r9, r9
 801c308:	469e      	mov	lr, r3
 801c30a:	42ac      	cmp	r4, r5
 801c30c:	d264      	bcs.n	801c3d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c30e:	eb04 0a07 	add.w	sl, r4, r7
 801c312:	4554      	cmp	r4, sl
 801c314:	d23d      	bcs.n	801c392 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c316:	8821      	ldrh	r1, [r4, #0]
 801c318:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c31c:	1208      	asrs	r0, r1, #8
 801c31e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c322:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c326:	fb10 f009 	smulbb	r0, r0, r9
 801c32a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c32e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c332:	00c9      	lsls	r1, r1, #3
 801c334:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c338:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c33c:	10d8      	asrs	r0, r3, #3
 801c33e:	b2c9      	uxtb	r1, r1
 801c340:	00db      	lsls	r3, r3, #3
 801c342:	fa1f fc8c 	uxth.w	ip, ip
 801c346:	fb1b fb09 	smulbb	fp, fp, r9
 801c34a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c34e:	b2db      	uxtb	r3, r3
 801c350:	fb11 f109 	smulbb	r1, r1, r9
 801c354:	fb00 b002 	mla	r0, r0, r2, fp
 801c358:	fb03 1302 	mla	r3, r3, r2, r1
 801c35c:	f10c 0b01 	add.w	fp, ip, #1
 801c360:	b29b      	uxth	r3, r3
 801c362:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c366:	b280      	uxth	r0, r0
 801c368:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c36c:	f103 0c01 	add.w	ip, r3, #1
 801c370:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c374:	1c43      	adds	r3, r0, #1
 801c376:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c37a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c37e:	0940      	lsrs	r0, r0, #5
 801c380:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c384:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c388:	ea4c 0c00 	orr.w	ip, ip, r0
 801c38c:	f824 cb02 	strh.w	ip, [r4], #2
 801c390:	e7bf      	b.n	801c312 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c392:	f8be 3000 	ldrh.w	r3, [lr]
 801c396:	eba3 0308 	sub.w	r3, r3, r8
 801c39a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c39e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c3a2:	eba3 0308 	sub.w	r3, r3, r8
 801c3a6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c3aa:	e7ae      	b.n	801c30a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c3ac:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c3b0:	f8d9 0000 	ldr.w	r0, [r9]
 801c3b4:	42ac      	cmp	r4, r5
 801c3b6:	6803      	ldr	r3, [r0, #0]
 801c3b8:	d20e      	bcs.n	801c3d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c3ba:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c3be:	4632      	mov	r2, r6
 801c3c0:	463b      	mov	r3, r7
 801c3c2:	4621      	mov	r1, r4
 801c3c4:	47c0      	blx	r8
 801c3c6:	f8ba 3000 	ldrh.w	r3, [sl]
 801c3ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c3ce:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c3d2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c3d6:	e7eb      	b.n	801c3b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c3d8:	4b02      	ldr	r3, [pc, #8]	; (801c3e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c3da:	6818      	ldr	r0, [r3, #0]
 801c3dc:	6803      	ldr	r3, [r0, #0]
 801c3de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3e0:	4798      	blx	r3
 801c3e2:	e76c      	b.n	801c2be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c3e4:	20025998 	.word	0x20025998
 801c3e8:	20025992 	.word	0x20025992

0801c3ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c3ec:	b510      	push	{r4, lr}
 801c3ee:	2104      	movs	r1, #4
 801c3f0:	4604      	mov	r4, r0
 801c3f2:	f00a fe16 	bl	8027022 <_ZdlPvj>
 801c3f6:	4620      	mov	r0, r4
 801c3f8:	bd10      	pop	{r4, pc}

0801c3fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c3fa:	b510      	push	{r4, lr}
 801c3fc:	2104      	movs	r1, #4
 801c3fe:	4604      	mov	r4, r0
 801c400:	f00a fe0f 	bl	8027022 <_ZdlPvj>
 801c404:	4620      	mov	r0, r4
 801c406:	bd10      	pop	{r4, pc}

0801c408 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c408:	b510      	push	{r4, lr}
 801c40a:	f640 0144 	movw	r1, #2116	; 0x844
 801c40e:	4604      	mov	r4, r0
 801c410:	f00a fe07 	bl	8027022 <_ZdlPvj>
 801c414:	4620      	mov	r0, r4
 801c416:	bd10      	pop	{r4, pc}

0801c418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c418:	b510      	push	{r4, lr}
 801c41a:	2104      	movs	r1, #4
 801c41c:	4604      	mov	r4, r0
 801c41e:	f00a fe00 	bl	8027022 <_ZdlPvj>
 801c422:	4620      	mov	r0, r4
 801c424:	bd10      	pop	{r4, pc}

0801c426 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c426:	b510      	push	{r4, lr}
 801c428:	2104      	movs	r1, #4
 801c42a:	4604      	mov	r4, r0
 801c42c:	f00a fdf9 	bl	8027022 <_ZdlPvj>
 801c430:	4620      	mov	r0, r4
 801c432:	bd10      	pop	{r4, pc}

0801c434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c434:	b510      	push	{r4, lr}
 801c436:	2104      	movs	r1, #4
 801c438:	4604      	mov	r4, r0
 801c43a:	f00a fdf2 	bl	8027022 <_ZdlPvj>
 801c43e:	4620      	mov	r0, r4
 801c440:	bd10      	pop	{r4, pc}

0801c442 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c442:	b510      	push	{r4, lr}
 801c444:	2104      	movs	r1, #4
 801c446:	4604      	mov	r4, r0
 801c448:	f00a fdeb 	bl	8027022 <_ZdlPvj>
 801c44c:	4620      	mov	r0, r4
 801c44e:	bd10      	pop	{r4, pc}

0801c450 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c450:	b510      	push	{r4, lr}
 801c452:	2104      	movs	r1, #4
 801c454:	4604      	mov	r4, r0
 801c456:	f00a fde4 	bl	8027022 <_ZdlPvj>
 801c45a:	4620      	mov	r0, r4
 801c45c:	bd10      	pop	{r4, pc}

0801c45e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c45e:	b510      	push	{r4, lr}
 801c460:	2104      	movs	r1, #4
 801c462:	4604      	mov	r4, r0
 801c464:	f00a fddd 	bl	8027022 <_ZdlPvj>
 801c468:	4620      	mov	r0, r4
 801c46a:	bd10      	pop	{r4, pc}

0801c46c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c46c:	b510      	push	{r4, lr}
 801c46e:	2104      	movs	r1, #4
 801c470:	4604      	mov	r4, r0
 801c472:	f00a fdd6 	bl	8027022 <_ZdlPvj>
 801c476:	4620      	mov	r0, r4
 801c478:	bd10      	pop	{r4, pc}

0801c47a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c47a:	b510      	push	{r4, lr}
 801c47c:	2104      	movs	r1, #4
 801c47e:	4604      	mov	r4, r0
 801c480:	f00a fdcf 	bl	8027022 <_ZdlPvj>
 801c484:	4620      	mov	r0, r4
 801c486:	bd10      	pop	{r4, pc}

0801c488 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c488:	b510      	push	{r4, lr}
 801c48a:	2104      	movs	r1, #4
 801c48c:	4604      	mov	r4, r0
 801c48e:	f00a fdc8 	bl	8027022 <_ZdlPvj>
 801c492:	4620      	mov	r0, r4
 801c494:	bd10      	pop	{r4, pc}

0801c496 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c496:	b510      	push	{r4, lr}
 801c498:	2104      	movs	r1, #4
 801c49a:	4604      	mov	r4, r0
 801c49c:	f00a fdc1 	bl	8027022 <_ZdlPvj>
 801c4a0:	4620      	mov	r0, r4
 801c4a2:	bd10      	pop	{r4, pc}

0801c4a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c4a4:	b510      	push	{r4, lr}
 801c4a6:	2104      	movs	r1, #4
 801c4a8:	4604      	mov	r4, r0
 801c4aa:	f00a fdba 	bl	8027022 <_ZdlPvj>
 801c4ae:	4620      	mov	r0, r4
 801c4b0:	bd10      	pop	{r4, pc}

0801c4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c4b2:	b510      	push	{r4, lr}
 801c4b4:	2104      	movs	r1, #4
 801c4b6:	4604      	mov	r4, r0
 801c4b8:	f00a fdb3 	bl	8027022 <_ZdlPvj>
 801c4bc:	4620      	mov	r0, r4
 801c4be:	bd10      	pop	{r4, pc}

0801c4c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c4c0:	b510      	push	{r4, lr}
 801c4c2:	2104      	movs	r1, #4
 801c4c4:	4604      	mov	r4, r0
 801c4c6:	f00a fdac 	bl	8027022 <_ZdlPvj>
 801c4ca:	4620      	mov	r0, r4
 801c4cc:	bd10      	pop	{r4, pc}

0801c4ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c4ce:	b510      	push	{r4, lr}
 801c4d0:	2104      	movs	r1, #4
 801c4d2:	4604      	mov	r4, r0
 801c4d4:	f00a fda5 	bl	8027022 <_ZdlPvj>
 801c4d8:	4620      	mov	r0, r4
 801c4da:	bd10      	pop	{r4, pc}

0801c4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c4dc:	b510      	push	{r4, lr}
 801c4de:	2104      	movs	r1, #4
 801c4e0:	4604      	mov	r4, r0
 801c4e2:	f00a fd9e 	bl	8027022 <_ZdlPvj>
 801c4e6:	4620      	mov	r0, r4
 801c4e8:	bd10      	pop	{r4, pc}

0801c4ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c4ea:	b510      	push	{r4, lr}
 801c4ec:	2104      	movs	r1, #4
 801c4ee:	4604      	mov	r4, r0
 801c4f0:	f00a fd97 	bl	8027022 <_ZdlPvj>
 801c4f4:	4620      	mov	r0, r4
 801c4f6:	bd10      	pop	{r4, pc}

0801c4f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c4f8:	b510      	push	{r4, lr}
 801c4fa:	2104      	movs	r1, #4
 801c4fc:	4604      	mov	r4, r0
 801c4fe:	f00a fd90 	bl	8027022 <_ZdlPvj>
 801c502:	4620      	mov	r0, r4
 801c504:	bd10      	pop	{r4, pc}

0801c506 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c506:	b510      	push	{r4, lr}
 801c508:	2104      	movs	r1, #4
 801c50a:	4604      	mov	r4, r0
 801c50c:	f00a fd89 	bl	8027022 <_ZdlPvj>
 801c510:	4620      	mov	r0, r4
 801c512:	bd10      	pop	{r4, pc}

0801c514 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c514:	b510      	push	{r4, lr}
 801c516:	2104      	movs	r1, #4
 801c518:	4604      	mov	r4, r0
 801c51a:	f00a fd82 	bl	8027022 <_ZdlPvj>
 801c51e:	4620      	mov	r0, r4
 801c520:	bd10      	pop	{r4, pc}

0801c522 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c522:	b510      	push	{r4, lr}
 801c524:	2104      	movs	r1, #4
 801c526:	4604      	mov	r4, r0
 801c528:	f00a fd7b 	bl	8027022 <_ZdlPvj>
 801c52c:	4620      	mov	r0, r4
 801c52e:	bd10      	pop	{r4, pc}

0801c530 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c530:	b510      	push	{r4, lr}
 801c532:	2104      	movs	r1, #4
 801c534:	4604      	mov	r4, r0
 801c536:	f00a fd74 	bl	8027022 <_ZdlPvj>
 801c53a:	4620      	mov	r0, r4
 801c53c:	bd10      	pop	{r4, pc}

0801c53e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c53e:	b510      	push	{r4, lr}
 801c540:	2104      	movs	r1, #4
 801c542:	4604      	mov	r4, r0
 801c544:	f00a fd6d 	bl	8027022 <_ZdlPvj>
 801c548:	4620      	mov	r0, r4
 801c54a:	bd10      	pop	{r4, pc}

0801c54c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c54c:	b510      	push	{r4, lr}
 801c54e:	2104      	movs	r1, #4
 801c550:	4604      	mov	r4, r0
 801c552:	f00a fd66 	bl	8027022 <_ZdlPvj>
 801c556:	4620      	mov	r0, r4
 801c558:	bd10      	pop	{r4, pc}

0801c55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c55a:	b510      	push	{r4, lr}
 801c55c:	2104      	movs	r1, #4
 801c55e:	4604      	mov	r4, r0
 801c560:	f00a fd5f 	bl	8027022 <_ZdlPvj>
 801c564:	4620      	mov	r0, r4
 801c566:	bd10      	pop	{r4, pc}

0801c568 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c568:	b510      	push	{r4, lr}
 801c56a:	2104      	movs	r1, #4
 801c56c:	4604      	mov	r4, r0
 801c56e:	f00a fd58 	bl	8027022 <_ZdlPvj>
 801c572:	4620      	mov	r0, r4
 801c574:	bd10      	pop	{r4, pc}

0801c576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c576:	b510      	push	{r4, lr}
 801c578:	2104      	movs	r1, #4
 801c57a:	4604      	mov	r4, r0
 801c57c:	f00a fd51 	bl	8027022 <_ZdlPvj>
 801c580:	4620      	mov	r0, r4
 801c582:	bd10      	pop	{r4, pc}

0801c584 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c584:	b510      	push	{r4, lr}
 801c586:	2104      	movs	r1, #4
 801c588:	4604      	mov	r4, r0
 801c58a:	f00a fd4a 	bl	8027022 <_ZdlPvj>
 801c58e:	4620      	mov	r0, r4
 801c590:	bd10      	pop	{r4, pc}

0801c592 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c592:	b510      	push	{r4, lr}
 801c594:	2104      	movs	r1, #4
 801c596:	4604      	mov	r4, r0
 801c598:	f00a fd43 	bl	8027022 <_ZdlPvj>
 801c59c:	4620      	mov	r0, r4
 801c59e:	bd10      	pop	{r4, pc}

0801c5a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c5a4:	b08f      	sub	sp, #60	; 0x3c
 801c5a6:	461c      	mov	r4, r3
 801c5a8:	9205      	str	r2, [sp, #20]
 801c5aa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c5ae:	9100      	str	r1, [sp, #0]
 801c5b0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c5b2:	9201      	str	r2, [sp, #4]
 801c5b4:	2a00      	cmp	r2, #0
 801c5b6:	f000 8115 	beq.w	801c7e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c5ba:	6820      	ldr	r0, [r4, #0]
 801c5bc:	6861      	ldr	r1, [r4, #4]
 801c5be:	aa0a      	add	r2, sp, #40	; 0x28
 801c5c0:	c203      	stmia	r2!, {r0, r1}
 801c5c2:	6818      	ldr	r0, [r3, #0]
 801c5c4:	6859      	ldr	r1, [r3, #4]
 801c5c6:	aa0c      	add	r2, sp, #48	; 0x30
 801c5c8:	c203      	stmia	r2!, {r0, r1}
 801c5ca:	a80a      	add	r0, sp, #40	; 0x28
 801c5cc:	f7f9 fe6c 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c5d0:	4621      	mov	r1, r4
 801c5d2:	a80c      	add	r0, sp, #48	; 0x30
 801c5d4:	f7f9 fe90 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c5d8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c5dc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c5e0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c5e4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c5e8:	bfde      	ittt	le
 801c5ea:	b2b3      	uxthle	r3, r6
 801c5ec:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c5f0:	fb92 f3f3 	sdivle	r3, r2, r3
 801c5f4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c5f8:	bfc8      	it	gt
 801c5fa:	2301      	movgt	r3, #1
 801c5fc:	fb92 f1f3 	sdiv	r1, r2, r3
 801c600:	fa1f fc81 	uxth.w	ip, r1
 801c604:	fb0c 2413 	mls	r4, ip, r3, r2
 801c608:	fb14 f406 	smulbb	r4, r4, r6
 801c60c:	441d      	add	r5, r3
 801c60e:	4404      	add	r4, r0
 801c610:	4661      	mov	r1, ip
 801c612:	3d01      	subs	r5, #1
 801c614:	b2a4      	uxth	r4, r4
 801c616:	fb95 f5f3 	sdiv	r5, r5, r3
 801c61a:	b131      	cbz	r1, 801c62a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c61c:	9b05      	ldr	r3, [sp, #20]
 801c61e:	9900      	ldr	r1, [sp, #0]
 801c620:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c624:	ba1b      	rev	r3, r3
 801c626:	4419      	add	r1, r3
 801c628:	9100      	str	r1, [sp, #0]
 801c62a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c62e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c632:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c636:	4418      	add	r0, r3
 801c638:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c63c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c640:	441a      	add	r2, r3
 801c642:	4b6a      	ldr	r3, [pc, #424]	; (801c7ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c644:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c648:	6818      	ldr	r0, [r3, #0]
 801c64a:	6803      	ldr	r3, [r0, #0]
 801c64c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c64e:	4798      	blx	r3
 801c650:	4967      	ldr	r1, [pc, #412]	; (801c7f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c652:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c656:	880b      	ldrh	r3, [r1, #0]
 801c658:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c65c:	9109      	str	r1, [sp, #36]	; 0x24
 801c65e:	fb03 c202 	mla	r2, r3, r2, ip
 801c662:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c666:	4373      	muls	r3, r6
 801c668:	b2ad      	uxth	r5, r5
 801c66a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c66e:	00ad      	lsls	r5, r5, #2
 801c670:	9306      	str	r3, [sp, #24]
 801c672:	1d2b      	adds	r3, r5, #4
 801c674:	9307      	str	r3, [sp, #28]
 801c676:	9b01      	ldr	r3, [sp, #4]
 801c678:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c67c:	9103      	str	r1, [sp, #12]
 801c67e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c682:	2c00      	cmp	r4, #0
 801c684:	bf0c      	ite	eq
 801c686:	46c6      	moveq	lr, r8
 801c688:	f04f 0e00 	movne.w	lr, #0
 801c68c:	2300      	movs	r3, #0
 801c68e:	b292      	uxth	r2, r2
 801c690:	fa1f fe8e 	uxth.w	lr, lr
 801c694:	9302      	str	r3, [sp, #8]
 801c696:	9204      	str	r2, [sp, #16]
 801c698:	9a06      	ldr	r2, [sp, #24]
 801c69a:	4282      	cmp	r2, r0
 801c69c:	f240 809d 	bls.w	801c7da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c6a0:	b963      	cbnz	r3, 801c6bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c6a2:	9b00      	ldr	r3, [sp, #0]
 801c6a4:	781a      	ldrb	r2, [r3, #0]
 801c6a6:	0993      	lsrs	r3, r2, #6
 801c6a8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c6ac:	9202      	str	r2, [sp, #8]
 801c6ae:	1e5a      	subs	r2, r3, #1
 801c6b0:	2a02      	cmp	r2, #2
 801c6b2:	d815      	bhi.n	801c6e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c6b4:	9a00      	ldr	r2, [sp, #0]
 801c6b6:	3201      	adds	r2, #1
 801c6b8:	9200      	str	r2, [sp, #0]
 801c6ba:	b29b      	uxth	r3, r3
 801c6bc:	b1b4      	cbz	r4, 801c6ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c6be:	429c      	cmp	r4, r3
 801c6c0:	bf95      	itete	ls
 801c6c2:	1b1c      	subls	r4, r3, r4
 801c6c4:	1ae4      	subhi	r4, r4, r3
 801c6c6:	fa1f fa84 	uxthls.w	sl, r4
 801c6ca:	b2a4      	uxthhi	r4, r4
 801c6cc:	bf87      	ittee	hi
 801c6ce:	4671      	movhi	r1, lr
 801c6d0:	f04f 0a00 	movhi.w	sl, #0
 801c6d4:	fa1f f188 	uxthls.w	r1, r8
 801c6d8:	2400      	movls	r4, #0
 801c6da:	4653      	mov	r3, sl
 801c6dc:	468e      	mov	lr, r1
 801c6de:	e7db      	b.n	801c698 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c6e0:	9a00      	ldr	r2, [sp, #0]
 801c6e2:	9b00      	ldr	r3, [sp, #0]
 801c6e4:	3202      	adds	r2, #2
 801c6e6:	785b      	ldrb	r3, [r3, #1]
 801c6e8:	9200      	str	r2, [sp, #0]
 801c6ea:	e7e7      	b.n	801c6bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c6ec:	2202      	movs	r2, #2
 801c6ee:	4615      	mov	r5, r2
 801c6f0:	9907      	ldr	r1, [sp, #28]
 801c6f2:	9a02      	ldr	r2, [sp, #8]
 801c6f4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c6f8:	9905      	ldr	r1, [sp, #20]
 801c6fa:	4573      	cmp	r3, lr
 801c6fc:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c700:	9a01      	ldr	r2, [sp, #4]
 801c702:	bf2b      	itete	cs
 801c704:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c708:	ebae 0103 	subcc.w	r1, lr, r3
 801c70c:	46f1      	movcs	r9, lr
 801c70e:	4699      	movcc	r9, r3
 801c710:	bf27      	ittee	cs
 801c712:	fa1f fa8a 	uxthcs.w	sl, sl
 801c716:	4621      	movcs	r1, r4
 801c718:	b289      	uxthcc	r1, r1
 801c71a:	46a2      	movcc	sl, r4
 801c71c:	2aff      	cmp	r2, #255	; 0xff
 801c71e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c722:	d105      	bne.n	801c730 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c724:	4481      	add	r9, r0
 801c726:	4581      	cmp	r9, r0
 801c728:	d045      	beq.n	801c7b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c72a:	f820 cb02 	strh.w	ip, [r0], #2
 801c72e:	e7fa      	b.n	801c726 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c730:	9d03      	ldr	r5, [sp, #12]
 801c732:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c736:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c73a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c73e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c742:	436a      	muls	r2, r5
 801c744:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c748:	fa5f fc8c 	uxtb.w	ip, ip
 801c74c:	9208      	str	r2, [sp, #32]
 801c74e:	fb0b fb05 	mul.w	fp, fp, r5
 801c752:	fb0c fc05 	mul.w	ip, ip, r5
 801c756:	4481      	add	r9, r0
 801c758:	4581      	cmp	r9, r0
 801c75a:	d02c      	beq.n	801c7b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c75c:	8802      	ldrh	r2, [r0, #0]
 801c75e:	9d04      	ldr	r5, [sp, #16]
 801c760:	9f04      	ldr	r7, [sp, #16]
 801c762:	1216      	asrs	r6, r2, #8
 801c764:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c768:	fb16 f605 	smulbb	r6, r6, r5
 801c76c:	9d08      	ldr	r5, [sp, #32]
 801c76e:	442e      	add	r6, r5
 801c770:	10d5      	asrs	r5, r2, #3
 801c772:	00d2      	lsls	r2, r2, #3
 801c774:	b2d2      	uxtb	r2, r2
 801c776:	fb12 f207 	smulbb	r2, r2, r7
 801c77a:	b2b6      	uxth	r6, r6
 801c77c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c780:	4462      	add	r2, ip
 801c782:	fb15 f507 	smulbb	r5, r5, r7
 801c786:	b292      	uxth	r2, r2
 801c788:	1c77      	adds	r7, r6, #1
 801c78a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c78e:	1c57      	adds	r7, r2, #1
 801c790:	445d      	add	r5, fp
 801c792:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c796:	b2ad      	uxth	r5, r5
 801c798:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c79c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c7a0:	4316      	orrs	r6, r2
 801c7a2:	1c6a      	adds	r2, r5, #1
 801c7a4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c7a8:	096d      	lsrs	r5, r5, #5
 801c7aa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c7ae:	432e      	orrs	r6, r5
 801c7b0:	f820 6b02 	strh.w	r6, [r0], #2
 801c7b4:	e7d0      	b.n	801c758 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c7b6:	4573      	cmp	r3, lr
 801c7b8:	d38f      	bcc.n	801c6da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c7ba:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c7be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c7c0:	fa1f f188 	uxth.w	r1, r8
 801c7c4:	1a64      	subs	r4, r4, r1
 801c7c6:	881b      	ldrh	r3, [r3, #0]
 801c7c8:	b2a4      	uxth	r4, r4
 801c7ca:	2c00      	cmp	r4, #0
 801c7cc:	eba3 0308 	sub.w	r3, r3, r8
 801c7d0:	bf18      	it	ne
 801c7d2:	2100      	movne	r1, #0
 801c7d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c7d8:	e77f      	b.n	801c6da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c7da:	4b04      	ldr	r3, [pc, #16]	; (801c7ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c7dc:	6818      	ldr	r0, [r3, #0]
 801c7de:	6803      	ldr	r3, [r0, #0]
 801c7e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c7e2:	4798      	blx	r3
 801c7e4:	b00f      	add	sp, #60	; 0x3c
 801c7e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7ea:	bf00      	nop
 801c7ec:	20025998 	.word	0x20025998
 801c7f0:	20025992 	.word	0x20025992

0801c7f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c7f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7f8:	b09f      	sub	sp, #124	; 0x7c
 801c7fa:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c7fe:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c802:	9209      	str	r2, [sp, #36]	; 0x24
 801c804:	461d      	mov	r5, r3
 801c806:	4604      	mov	r4, r0
 801c808:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c80a:	2a00      	cmp	r2, #0
 801c80c:	f000 81eb 	beq.w	801cbe6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c810:	6828      	ldr	r0, [r5, #0]
 801c812:	6869      	ldr	r1, [r5, #4]
 801c814:	aa1a      	add	r2, sp, #104	; 0x68
 801c816:	c203      	stmia	r2!, {r0, r1}
 801c818:	6818      	ldr	r0, [r3, #0]
 801c81a:	6859      	ldr	r1, [r3, #4]
 801c81c:	aa1c      	add	r2, sp, #112	; 0x70
 801c81e:	c203      	stmia	r2!, {r0, r1}
 801c820:	a81a      	add	r0, sp, #104	; 0x68
 801c822:	f7f9 fd41 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c826:	4629      	mov	r1, r5
 801c828:	a81c      	add	r0, sp, #112	; 0x70
 801c82a:	f7f9 fd65 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c82e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c832:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c836:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c83a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c83e:	bfd7      	itett	le
 801c840:	b29a      	uxthle	r2, r3
 801c842:	2201      	movgt	r2, #1
 801c844:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c848:	fb91 f2f2 	sdivle	r2, r1, r2
 801c84c:	9202      	str	r2, [sp, #8]
 801c84e:	9802      	ldr	r0, [sp, #8]
 801c850:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c854:	fb92 f0f0 	sdiv	r0, r2, r0
 801c858:	b280      	uxth	r0, r0
 801c85a:	9010      	str	r0, [sp, #64]	; 0x40
 801c85c:	9902      	ldr	r1, [sp, #8]
 801c85e:	9802      	ldr	r0, [sp, #8]
 801c860:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c862:	4488      	add	r8, r1
 801c864:	fb05 2510 	mls	r5, r5, r0, r2
 801c868:	fb15 f503 	smulbb	r5, r5, r3
 801c86c:	f108 38ff 	add.w	r8, r8, #4294967295
 801c870:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c874:	fb98 f8f1 	sdiv	r8, r8, r1
 801c878:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c87c:	440d      	add	r5, r1
 801c87e:	4419      	add	r1, r3
 801c880:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c884:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c888:	441a      	add	r2, r3
 801c88a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c88e:	9304      	str	r3, [sp, #16]
 801c890:	4b95      	ldr	r3, [pc, #596]	; (801cae8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c892:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c896:	6818      	ldr	r0, [r3, #0]
 801c898:	6803      	ldr	r3, [r0, #0]
 801c89a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c89c:	4798      	blx	r3
 801c89e:	4b93      	ldr	r3, [pc, #588]	; (801caec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c8a0:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c8a4:	881a      	ldrh	r2, [r3, #0]
 801c8a6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c8aa:	9318      	str	r3, [sp, #96]	; 0x60
 801c8ac:	fb02 7101 	mla	r1, r2, r1, r7
 801c8b0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c8b4:	4356      	muls	r6, r2
 801c8b6:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c8ba:	f108 0801 	add.w	r8, r8, #1
 801c8be:	920a      	str	r2, [sp, #40]	; 0x28
 801c8c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c8c2:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c8c6:	930f      	str	r3, [sp, #60]	; 0x3c
 801c8c8:	fa1f f888 	uxth.w	r8, r8
 801c8cc:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c8d0:	f108 0204 	add.w	r2, r8, #4
 801c8d4:	9211      	str	r2, [sp, #68]	; 0x44
 801c8d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c8d8:	4b85      	ldr	r3, [pc, #532]	; (801caf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c8da:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c8de:	b2ad      	uxth	r5, r5
 801c8e0:	9215      	str	r2, [sp, #84]	; 0x54
 801c8e2:	2d00      	cmp	r5, #0
 801c8e4:	9a04      	ldr	r2, [sp, #16]
 801c8e6:	f04f 0100 	mov.w	r1, #0
 801c8ea:	bf18      	it	ne
 801c8ec:	2200      	movne	r2, #0
 801c8ee:	1b1b      	subs	r3, r3, r4
 801c8f0:	b292      	uxth	r2, r2
 801c8f2:	910d      	str	r1, [sp, #52]	; 0x34
 801c8f4:	9319      	str	r3, [sp, #100]	; 0x64
 801c8f6:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c8f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c8fa:	fa11 f383 	uxtah	r3, r1, r3
 801c8fe:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c900:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c904:	3304      	adds	r3, #4
 801c906:	9306      	str	r3, [sp, #24]
 801c908:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c90a:	4283      	cmp	r3, r0
 801c90c:	f240 8166 	bls.w	801cbdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c910:	9902      	ldr	r1, [sp, #8]
 801c912:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c916:	fbb5 f3f3 	udiv	r3, r5, r3
 801c91a:	1acb      	subs	r3, r1, r3
 801c91c:	b29b      	uxth	r3, r3
 801c91e:	9316      	str	r3, [sp, #88]	; 0x58
 801c920:	9b06      	ldr	r3, [sp, #24]
 801c922:	9e06      	ldr	r6, [sp, #24]
 801c924:	7859      	ldrb	r1, [r3, #1]
 801c926:	789b      	ldrb	r3, [r3, #2]
 801c928:	7836      	ldrb	r6, [r6, #0]
 801c92a:	9612      	str	r6, [sp, #72]	; 0x48
 801c92c:	021b      	lsls	r3, r3, #8
 801c92e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c932:	9906      	ldr	r1, [sp, #24]
 801c934:	78c9      	ldrb	r1, [r1, #3]
 801c936:	430b      	orrs	r3, r1
 801c938:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c93a:	3601      	adds	r6, #1
 801c93c:	4419      	add	r1, r3
 801c93e:	9605      	str	r6, [sp, #20]
 801c940:	1c4e      	adds	r6, r1, #1
 801c942:	9603      	str	r6, [sp, #12]
 801c944:	7849      	ldrb	r1, [r1, #1]
 801c946:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c948:	0209      	lsls	r1, r1, #8
 801c94a:	5cf3      	ldrb	r3, [r6, r3]
 801c94c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c950:	4319      	orrs	r1, r3
 801c952:	b28b      	uxth	r3, r1
 801c954:	930c      	str	r3, [sp, #48]	; 0x30
 801c956:	2300      	movs	r3, #0
 801c958:	f04f 0a01 	mov.w	sl, #1
 801c95c:	9307      	str	r3, [sp, #28]
 801c95e:	469c      	mov	ip, r3
 801c960:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c964:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c968:	46d3      	mov	fp, sl
 801c96a:	4657      	mov	r7, sl
 801c96c:	930e      	str	r3, [sp, #56]	; 0x38
 801c96e:	2d00      	cmp	r5, #0
 801c970:	d07e      	beq.n	801ca70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c972:	42af      	cmp	r7, r5
 801c974:	d26e      	bcs.n	801ca54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c976:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c978:	9201      	str	r2, [sp, #4]
 801c97a:	1bed      	subs	r5, r5, r7
 801c97c:	4283      	cmp	r3, r0
 801c97e:	b2ad      	uxth	r5, r5
 801c980:	d802      	bhi.n	801c988 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c982:	e073      	b.n	801ca6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c984:	2b00      	cmp	r3, #0
 801c986:	d15f      	bne.n	801ca48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c988:	9b03      	ldr	r3, [sp, #12]
 801c98a:	785b      	ldrb	r3, [r3, #1]
 801c98c:	f1cb 0207 	rsb	r2, fp, #7
 801c990:	4093      	lsls	r3, r2
 801c992:	005b      	lsls	r3, r3, #1
 801c994:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c998:	9b03      	ldr	r3, [sp, #12]
 801c99a:	781b      	ldrb	r3, [r3, #0]
 801c99c:	fa43 f30b 	asr.w	r3, r3, fp
 801c9a0:	b2db      	uxtb	r3, r3
 801c9a2:	4313      	orrs	r3, r2
 801c9a4:	f10b 0201 	add.w	r2, fp, #1
 801c9a8:	fa5f fb82 	uxtb.w	fp, r2
 801c9ac:	9a03      	ldr	r2, [sp, #12]
 801c9ae:	f1bb 0f08 	cmp.w	fp, #8
 801c9b2:	bf15      	itete	ne
 801c9b4:	3201      	addne	r2, #1
 801c9b6:	3202      	addeq	r2, #2
 801c9b8:	9203      	strne	r2, [sp, #12]
 801c9ba:	9203      	streq	r2, [sp, #12]
 801c9bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c9be:	b29f      	uxth	r7, r3
 801c9c0:	bf08      	it	eq
 801c9c2:	f04f 0b00 	moveq.w	fp, #0
 801c9c6:	42ba      	cmp	r2, r7
 801c9c8:	d309      	bcc.n	801c9de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c9ca:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c9ce:	2301      	movs	r3, #1
 801c9d0:	9a05      	ldr	r2, [sp, #20]
 801c9d2:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c9d6:	d30e      	bcc.n	801c9f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c9d8:	469a      	mov	sl, r3
 801c9da:	2600      	movs	r6, #0
 801c9dc:	e035      	b.n	801ca4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c9de:	9b05      	ldr	r3, [sp, #20]
 801c9e0:	429f      	cmp	r7, r3
 801c9e2:	d318      	bcc.n	801ca16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c9e4:	eb04 030a 	add.w	r3, r4, sl
 801c9e8:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c9ec:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c9f0:	f10a 0301 	add.w	r3, sl, #1
 801c9f4:	b29b      	uxth	r3, r3
 801c9f6:	9a05      	ldr	r2, [sp, #20]
 801c9f8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c9fc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c9fe:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801ca02:	7116      	strb	r6, [r2, #4]
 801ca04:	f10a 0601 	add.w	r6, sl, #1
 801ca08:	80d1      	strh	r1, [r2, #6]
 801ca0a:	7156      	strb	r6, [r2, #5]
 801ca0c:	9a05      	ldr	r2, [sp, #20]
 801ca0e:	3201      	adds	r2, #1
 801ca10:	b292      	uxth	r2, r2
 801ca12:	9205      	str	r2, [sp, #20]
 801ca14:	e7e0      	b.n	801c9d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801ca16:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801ca1a:	463a      	mov	r2, r7
 801ca1c:	795b      	ldrb	r3, [r3, #5]
 801ca1e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801ca22:	4426      	add	r6, r4
 801ca24:	9919      	ldr	r1, [sp, #100]	; 0x64
 801ca26:	eb01 0c06 	add.w	ip, r1, r6
 801ca2a:	f1bc 0f00 	cmp.w	ip, #0
 801ca2e:	dd07      	ble.n	801ca40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801ca30:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801ca34:	f892 c004 	ldrb.w	ip, [r2, #4]
 801ca38:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801ca3c:	88d2      	ldrh	r2, [r2, #6]
 801ca3e:	e7f1      	b.n	801ca24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801ca40:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801ca44:	b29b      	uxth	r3, r3
 801ca46:	e7c3      	b.n	801c9d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801ca48:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ca4a:	970c      	str	r7, [sp, #48]	; 0x30
 801ca4c:	9a01      	ldr	r2, [sp, #4]
 801ca4e:	46b4      	mov	ip, r6
 801ca50:	461f      	mov	r7, r3
 801ca52:	e78c      	b.n	801c96e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801ca54:	1b7b      	subs	r3, r7, r5
 801ca56:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ca5a:	9201      	str	r2, [sp, #4]
 801ca5c:	eb0c 0605 	add.w	r6, ip, r5
 801ca60:	b29b      	uxth	r3, r3
 801ca62:	b2b6      	uxth	r6, r6
 801ca64:	2500      	movs	r5, #0
 801ca66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ca68:	4282      	cmp	r2, r0
 801ca6a:	d88b      	bhi.n	801c984 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801ca6c:	9a01      	ldr	r2, [sp, #4]
 801ca6e:	e74b      	b.n	801c908 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801ca70:	4297      	cmp	r7, r2
 801ca72:	d332      	bcc.n	801cada <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801ca74:	1abb      	subs	r3, r7, r2
 801ca76:	b29b      	uxth	r3, r3
 801ca78:	9208      	str	r2, [sp, #32]
 801ca7a:	9501      	str	r5, [sp, #4]
 801ca7c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ca7e:	29ff      	cmp	r1, #255	; 0xff
 801ca80:	9908      	ldr	r1, [sp, #32]
 801ca82:	eb0c 0601 	add.w	r6, ip, r1
 801ca86:	d135      	bne.n	801caf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801ca88:	f1a0 0e02 	sub.w	lr, r0, #2
 801ca8c:	b2b6      	uxth	r6, r6
 801ca8e:	45b4      	cmp	ip, r6
 801ca90:	f040 808c 	bne.w	801cbac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801ca94:	9908      	ldr	r1, [sp, #32]
 801ca96:	4297      	cmp	r7, r2
 801ca98:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ca9c:	d3e2      	bcc.n	801ca64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801ca9e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801caa0:	9904      	ldr	r1, [sp, #16]
 801caa2:	8812      	ldrh	r2, [r2, #0]
 801caa4:	1a52      	subs	r2, r2, r1
 801caa6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801caaa:	9a07      	ldr	r2, [sp, #28]
 801caac:	9916      	ldr	r1, [sp, #88]	; 0x58
 801caae:	3201      	adds	r2, #1
 801cab0:	428a      	cmp	r2, r1
 801cab2:	9207      	str	r2, [sp, #28]
 801cab4:	f040 8087 	bne.w	801cbc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801cab8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801cabc:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801cac0:	9b04      	ldr	r3, [sp, #16]
 801cac2:	1bed      	subs	r5, r5, r7
 801cac4:	b2ad      	uxth	r5, r5
 801cac6:	2d00      	cmp	r5, #0
 801cac8:	bf08      	it	eq
 801caca:	461a      	moveq	r2, r3
 801cacc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cace:	bf18      	it	ne
 801cad0:	2200      	movne	r2, #0
 801cad2:	3301      	adds	r3, #1
 801cad4:	930d      	str	r3, [sp, #52]	; 0x34
 801cad6:	b292      	uxth	r2, r2
 801cad8:	e70d      	b.n	801c8f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801cada:	1bd1      	subs	r1, r2, r7
 801cadc:	b28b      	uxth	r3, r1
 801cade:	9301      	str	r3, [sp, #4]
 801cae0:	9708      	str	r7, [sp, #32]
 801cae2:	462b      	mov	r3, r5
 801cae4:	e7ca      	b.n	801ca7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801cae6:	bf00      	nop
 801cae8:	20025998 	.word	0x20025998
 801caec:	20025992 	.word	0x20025992
 801caf0:	fffff7fb 	.word	0xfffff7fb
 801caf4:	b2b6      	uxth	r6, r6
 801caf6:	900b      	str	r0, [sp, #44]	; 0x2c
 801caf8:	45b4      	cmp	ip, r6
 801cafa:	d0cb      	beq.n	801ca94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801cafc:	f10c 0101 	add.w	r1, ip, #1
 801cb00:	44a4      	add	ip, r4
 801cb02:	9117      	str	r1, [sp, #92]	; 0x5c
 801cb04:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801cb08:	9911      	ldr	r1, [sp, #68]	; 0x44
 801cb0a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801cb0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801cb10:	f8b1 c000 	ldrh.w	ip, [r1]
 801cb14:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cb16:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801cb1a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801cb1e:	fb1e fe01 	smulbb	lr, lr, r1
 801cb22:	ea4f 2825 	mov.w	r8, r5, asr #8
 801cb26:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801cb28:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801cb2c:	fb08 e801 	mla	r8, r8, r1, lr
 801cb30:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801cb34:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cb36:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801cb3a:	fb19 f901 	smulbb	r9, r9, r1
 801cb3e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801cb42:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801cb44:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801cb48:	fb0e 9e01 	mla	lr, lr, r1, r9
 801cb4c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cb50:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cb52:	fa5f fc8c 	uxtb.w	ip, ip
 801cb56:	fb1c fc01 	smulbb	ip, ip, r1
 801cb5a:	00ed      	lsls	r5, r5, #3
 801cb5c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801cb5e:	b2ed      	uxtb	r5, r5
 801cb60:	fb05 c501 	mla	r5, r5, r1, ip
 801cb64:	fa1f f888 	uxth.w	r8, r8
 801cb68:	fa1f fe8e 	uxth.w	lr, lr
 801cb6c:	b2ad      	uxth	r5, r5
 801cb6e:	f108 0c01 	add.w	ip, r8, #1
 801cb72:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801cb76:	f10e 0901 	add.w	r9, lr, #1
 801cb7a:	f105 0c01 	add.w	ip, r5, #1
 801cb7e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801cb82:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801cb86:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cb8a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801cb8e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cb92:	ea4c 0808 	orr.w	r8, ip, r8
 801cb96:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801cb98:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801cb9c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cba0:	ea48 0809 	orr.w	r8, r8, r9
 801cba4:	f821 8b02 	strh.w	r8, [r1], #2
 801cba8:	910b      	str	r1, [sp, #44]	; 0x2c
 801cbaa:	e7a5      	b.n	801caf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801cbac:	f10c 0801 	add.w	r8, ip, #1
 801cbb0:	44a4      	add	ip, r4
 801cbb2:	9911      	ldr	r1, [sp, #68]	; 0x44
 801cbb4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801cbb8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801cbbc:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801cbc0:	fa1f fc88 	uxth.w	ip, r8
 801cbc4:	e763      	b.n	801ca8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801cbc6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cbca:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801cbce:	1aad      	subs	r5, r5, r2
 801cbd0:	b2ad      	uxth	r5, r5
 801cbd2:	2d00      	cmp	r5, #0
 801cbd4:	bf18      	it	ne
 801cbd6:	2200      	movne	r2, #0
 801cbd8:	9201      	str	r2, [sp, #4]
 801cbda:	e744      	b.n	801ca66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801cbdc:	4b03      	ldr	r3, [pc, #12]	; (801cbec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801cbde:	6818      	ldr	r0, [r3, #0]
 801cbe0:	6803      	ldr	r3, [r0, #0]
 801cbe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cbe4:	4798      	blx	r3
 801cbe6:	b01f      	add	sp, #124	; 0x7c
 801cbe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cbec:	20025998 	.word	0x20025998

0801cbf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cbf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbf4:	b08f      	sub	sp, #60	; 0x3c
 801cbf6:	461c      	mov	r4, r3
 801cbf8:	9203      	str	r2, [sp, #12]
 801cbfa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cbfe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cc00:	9202      	str	r2, [sp, #8]
 801cc02:	460f      	mov	r7, r1
 801cc04:	2a00      	cmp	r2, #0
 801cc06:	f000 8128 	beq.w	801ce5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801cc0a:	6820      	ldr	r0, [r4, #0]
 801cc0c:	6861      	ldr	r1, [r4, #4]
 801cc0e:	aa0a      	add	r2, sp, #40	; 0x28
 801cc10:	c203      	stmia	r2!, {r0, r1}
 801cc12:	6818      	ldr	r0, [r3, #0]
 801cc14:	6859      	ldr	r1, [r3, #4]
 801cc16:	aa0c      	add	r2, sp, #48	; 0x30
 801cc18:	c203      	stmia	r2!, {r0, r1}
 801cc1a:	a80a      	add	r0, sp, #40	; 0x28
 801cc1c:	f7f9 fb44 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc20:	4621      	mov	r1, r4
 801cc22:	a80c      	add	r0, sp, #48	; 0x30
 801cc24:	f7f9 fb68 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc28:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cc2c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801cc30:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801cc34:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cc38:	bfde      	ittt	le
 801cc3a:	b2b3      	uxthle	r3, r6
 801cc3c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cc40:	fb92 f3f3 	sdivle	r3, r2, r3
 801cc44:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cc48:	bfc8      	it	gt
 801cc4a:	2301      	movgt	r3, #1
 801cc4c:	fb92 f1f3 	sdiv	r1, r2, r3
 801cc50:	fa1f fc81 	uxth.w	ip, r1
 801cc54:	fb0c 2413 	mls	r4, ip, r3, r2
 801cc58:	fb14 f406 	smulbb	r4, r4, r6
 801cc5c:	441d      	add	r5, r3
 801cc5e:	4404      	add	r4, r0
 801cc60:	4661      	mov	r1, ip
 801cc62:	3d01      	subs	r5, #1
 801cc64:	b2a4      	uxth	r4, r4
 801cc66:	fb95 f5f3 	sdiv	r5, r5, r3
 801cc6a:	b121      	cbz	r1, 801cc76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801cc6c:	9b03      	ldr	r3, [sp, #12]
 801cc6e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cc72:	ba1b      	rev	r3, r3
 801cc74:	441f      	add	r7, r3
 801cc76:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801cc7a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801cc7e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cc82:	4418      	add	r0, r3
 801cc84:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cc88:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801cc8c:	441a      	add	r2, r3
 801cc8e:	4b74      	ldr	r3, [pc, #464]	; (801ce60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cc90:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801cc94:	6818      	ldr	r0, [r3, #0]
 801cc96:	6803      	ldr	r3, [r0, #0]
 801cc98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cc9a:	4798      	blx	r3
 801cc9c:	4a71      	ldr	r2, [pc, #452]	; (801ce64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801cc9e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801cca2:	8813      	ldrh	r3, [r2, #0]
 801cca4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801cca8:	9209      	str	r2, [sp, #36]	; 0x24
 801ccaa:	fb03 c101 	mla	r1, r3, r1, ip
 801ccae:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ccb2:	4373      	muls	r3, r6
 801ccb4:	b2ad      	uxth	r5, r5
 801ccb6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ccba:	00ad      	lsls	r5, r5, #2
 801ccbc:	2c00      	cmp	r4, #0
 801ccbe:	9304      	str	r3, [sp, #16]
 801ccc0:	f105 0304 	add.w	r3, r5, #4
 801ccc4:	9305      	str	r3, [sp, #20]
 801ccc6:	bf0c      	ite	eq
 801ccc8:	46c8      	moveq	r8, r9
 801ccca:	f04f 0800 	movne.w	r8, #0
 801ccce:	2300      	movs	r3, #0
 801ccd0:	fa1f f888 	uxth.w	r8, r8
 801ccd4:	9301      	str	r3, [sp, #4]
 801ccd6:	9a04      	ldr	r2, [sp, #16]
 801ccd8:	4282      	cmp	r2, r0
 801ccda:	f240 80b9 	bls.w	801ce50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801ccde:	b95b      	cbnz	r3, 801ccf8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801cce0:	783a      	ldrb	r2, [r7, #0]
 801cce2:	0993      	lsrs	r3, r2, #6
 801cce4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cce8:	9201      	str	r2, [sp, #4]
 801ccea:	1e5a      	subs	r2, r3, #1
 801ccec:	2a02      	cmp	r2, #2
 801ccee:	bf8d      	iteet	hi
 801ccf0:	787b      	ldrbhi	r3, [r7, #1]
 801ccf2:	3701      	addls	r7, #1
 801ccf4:	b29b      	uxthls	r3, r3
 801ccf6:	3702      	addhi	r7, #2
 801ccf8:	b184      	cbz	r4, 801cd1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801ccfa:	429c      	cmp	r4, r3
 801ccfc:	bf95      	itete	ls
 801ccfe:	1b1c      	subls	r4, r3, r4
 801cd00:	1ae4      	subhi	r4, r4, r3
 801cd02:	fa1f fa84 	uxthls.w	sl, r4
 801cd06:	b2a4      	uxthhi	r4, r4
 801cd08:	bf87      	ittee	hi
 801cd0a:	46c4      	movhi	ip, r8
 801cd0c:	f04f 0a00 	movhi.w	sl, #0
 801cd10:	fa1f fc89 	uxthls.w	ip, r9
 801cd14:	2400      	movls	r4, #0
 801cd16:	4653      	mov	r3, sl
 801cd18:	46e0      	mov	r8, ip
 801cd1a:	e7dc      	b.n	801ccd6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801cd1c:	2204      	movs	r2, #4
 801cd1e:	4615      	mov	r5, r2
 801cd20:	9905      	ldr	r1, [sp, #20]
 801cd22:	9a01      	ldr	r2, [sp, #4]
 801cd24:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cd28:	9903      	ldr	r1, [sp, #12]
 801cd2a:	588a      	ldr	r2, [r1, r2]
 801cd2c:	4543      	cmp	r3, r8
 801cd2e:	bf27      	ittee	cs
 801cd30:	eba3 0a08 	subcs.w	sl, r3, r8
 801cd34:	46c6      	movcs	lr, r8
 801cd36:	eba8 0c03 	subcc.w	ip, r8, r3
 801cd3a:	469e      	movcc	lr, r3
 801cd3c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801cd40:	bf27      	ittee	cs
 801cd42:	fa1f fa8a 	uxthcs.w	sl, sl
 801cd46:	46a4      	movcs	ip, r4
 801cd48:	fa1f fc8c 	uxthcc.w	ip, ip
 801cd4c:	46a2      	movcc	sl, r4
 801cd4e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801cd52:	2900      	cmp	r1, #0
 801cd54:	d066      	beq.n	801ce24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801cd56:	29ff      	cmp	r1, #255	; 0xff
 801cd58:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801cd5c:	d114      	bne.n	801cd88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cd5e:	9d02      	ldr	r5, [sp, #8]
 801cd60:	2dff      	cmp	r5, #255	; 0xff
 801cd62:	d111      	bne.n	801cd88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cd64:	0951      	lsrs	r1, r2, #5
 801cd66:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801cd6a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cd6e:	f026 0607 	bic.w	r6, r6, #7
 801cd72:	430e      	orrs	r6, r1
 801cd74:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cd78:	4316      	orrs	r6, r2
 801cd7a:	b2b6      	uxth	r6, r6
 801cd7c:	4486      	add	lr, r0
 801cd7e:	4586      	cmp	lr, r0
 801cd80:	d051      	beq.n	801ce26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cd82:	f820 6b02 	strh.w	r6, [r0], #2
 801cd86:	e7fa      	b.n	801cd7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801cd88:	9d02      	ldr	r5, [sp, #8]
 801cd8a:	4369      	muls	r1, r5
 801cd8c:	1c4d      	adds	r5, r1, #1
 801cd8e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801cd92:	122d      	asrs	r5, r5, #8
 801cd94:	ea6f 0b05 	mvn.w	fp, r5
 801cd98:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801cd9c:	b2ad      	uxth	r5, r5
 801cd9e:	b2f6      	uxtb	r6, r6
 801cda0:	b2d2      	uxtb	r2, r2
 801cda2:	fb11 f105 	smulbb	r1, r1, r5
 801cda6:	fb16 f605 	smulbb	r6, r6, r5
 801cdaa:	fb12 f205 	smulbb	r2, r2, r5
 801cdae:	b289      	uxth	r1, r1
 801cdb0:	b2b6      	uxth	r6, r6
 801cdb2:	b292      	uxth	r2, r2
 801cdb4:	9106      	str	r1, [sp, #24]
 801cdb6:	9607      	str	r6, [sp, #28]
 801cdb8:	9208      	str	r2, [sp, #32]
 801cdba:	4486      	add	lr, r0
 801cdbc:	fa5f fb8b 	uxtb.w	fp, fp
 801cdc0:	4586      	cmp	lr, r0
 801cdc2:	d030      	beq.n	801ce26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cdc4:	8802      	ldrh	r2, [r0, #0]
 801cdc6:	9906      	ldr	r1, [sp, #24]
 801cdc8:	1216      	asrs	r6, r2, #8
 801cdca:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cdce:	10d5      	asrs	r5, r2, #3
 801cdd0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cdd4:	fb06 160b 	mla	r6, r6, fp, r1
 801cdd8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cddc:	9907      	ldr	r1, [sp, #28]
 801cdde:	00d2      	lsls	r2, r2, #3
 801cde0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cde4:	fb05 150b 	mla	r5, r5, fp, r1
 801cde8:	b2d2      	uxtb	r2, r2
 801cdea:	9908      	ldr	r1, [sp, #32]
 801cdec:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cdf0:	b2b6      	uxth	r6, r6
 801cdf2:	fb02 120b 	mla	r2, r2, fp, r1
 801cdf6:	b292      	uxth	r2, r2
 801cdf8:	1c71      	adds	r1, r6, #1
 801cdfa:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801cdfe:	1c51      	adds	r1, r2, #1
 801ce00:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ce04:	b2ad      	uxth	r5, r5
 801ce06:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce0a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ce0e:	4316      	orrs	r6, r2
 801ce10:	1c6a      	adds	r2, r5, #1
 801ce12:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ce16:	096d      	lsrs	r5, r5, #5
 801ce18:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce1c:	432e      	orrs	r6, r5
 801ce1e:	f820 6b02 	strh.w	r6, [r0], #2
 801ce22:	e7cd      	b.n	801cdc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ce24:	4470      	add	r0, lr
 801ce26:	4543      	cmp	r3, r8
 801ce28:	f4ff af75 	bcc.w	801cd16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ce2c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801ce30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ce32:	fa1f fc89 	uxth.w	ip, r9
 801ce36:	eba4 040c 	sub.w	r4, r4, ip
 801ce3a:	881b      	ldrh	r3, [r3, #0]
 801ce3c:	b2a4      	uxth	r4, r4
 801ce3e:	2c00      	cmp	r4, #0
 801ce40:	eba3 0309 	sub.w	r3, r3, r9
 801ce44:	bf18      	it	ne
 801ce46:	f04f 0c00 	movne.w	ip, #0
 801ce4a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce4e:	e762      	b.n	801cd16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ce50:	4b03      	ldr	r3, [pc, #12]	; (801ce60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ce52:	6818      	ldr	r0, [r3, #0]
 801ce54:	6803      	ldr	r3, [r0, #0]
 801ce56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce58:	4798      	blx	r3
 801ce5a:	b00f      	add	sp, #60	; 0x3c
 801ce5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce60:	20025998 	.word	0x20025998
 801ce64:	20025992 	.word	0x20025992

0801ce68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ce68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce6c:	b093      	sub	sp, #76	; 0x4c
 801ce6e:	461c      	mov	r4, r3
 801ce70:	9205      	str	r2, [sp, #20]
 801ce72:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801ce76:	9101      	str	r1, [sp, #4]
 801ce78:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ce7a:	9202      	str	r2, [sp, #8]
 801ce7c:	2a00      	cmp	r2, #0
 801ce7e:	f000 812c 	beq.w	801d0da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ce82:	6820      	ldr	r0, [r4, #0]
 801ce84:	6861      	ldr	r1, [r4, #4]
 801ce86:	aa0e      	add	r2, sp, #56	; 0x38
 801ce88:	c203      	stmia	r2!, {r0, r1}
 801ce8a:	6818      	ldr	r0, [r3, #0]
 801ce8c:	6859      	ldr	r1, [r3, #4]
 801ce8e:	aa10      	add	r2, sp, #64	; 0x40
 801ce90:	c203      	stmia	r2!, {r0, r1}
 801ce92:	a80e      	add	r0, sp, #56	; 0x38
 801ce94:	f7f9 fa08 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce98:	4621      	mov	r1, r4
 801ce9a:	a810      	add	r0, sp, #64	; 0x40
 801ce9c:	f7f9 fa2c 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cea0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801cea4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801cea8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801ceac:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ceb0:	bfde      	ittt	le
 801ceb2:	b2b3      	uxthle	r3, r6
 801ceb4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ceb8:	fb92 f3f3 	sdivle	r3, r2, r3
 801cebc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cec0:	bfc8      	it	gt
 801cec2:	2301      	movgt	r3, #1
 801cec4:	fb92 f1f3 	sdiv	r1, r2, r3
 801cec8:	fa1f fc81 	uxth.w	ip, r1
 801cecc:	fb0c 2413 	mls	r4, ip, r3, r2
 801ced0:	fb14 f406 	smulbb	r4, r4, r6
 801ced4:	441d      	add	r5, r3
 801ced6:	4404      	add	r4, r0
 801ced8:	4661      	mov	r1, ip
 801ceda:	3d01      	subs	r5, #1
 801cedc:	b2a4      	uxth	r4, r4
 801cede:	fb95 f5f3 	sdiv	r5, r5, r3
 801cee2:	b131      	cbz	r1, 801cef2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801cee4:	9b05      	ldr	r3, [sp, #20]
 801cee6:	9901      	ldr	r1, [sp, #4]
 801cee8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ceec:	ba1b      	rev	r3, r3
 801ceee:	4419      	add	r1, r3
 801cef0:	9101      	str	r1, [sp, #4]
 801cef2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cef6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801cefa:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801cefe:	4418      	add	r0, r3
 801cf00:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801cf04:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801cf08:	441a      	add	r2, r3
 801cf0a:	4b75      	ldr	r3, [pc, #468]	; (801d0e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cf0c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801cf10:	6818      	ldr	r0, [r3, #0]
 801cf12:	6803      	ldr	r3, [r0, #0]
 801cf14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf16:	4798      	blx	r3
 801cf18:	4972      	ldr	r1, [pc, #456]	; (801d0e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801cf1a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cf1e:	880b      	ldrh	r3, [r1, #0]
 801cf20:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cf24:	910d      	str	r1, [sp, #52]	; 0x34
 801cf26:	fb03 c202 	mla	r2, r3, r2, ip
 801cf2a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf2e:	4373      	muls	r3, r6
 801cf30:	b2ad      	uxth	r5, r5
 801cf32:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cf36:	00ad      	lsls	r5, r5, #2
 801cf38:	9308      	str	r3, [sp, #32]
 801cf3a:	1d2b      	adds	r3, r5, #4
 801cf3c:	9309      	str	r3, [sp, #36]	; 0x24
 801cf3e:	9b02      	ldr	r3, [sp, #8]
 801cf40:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cf44:	9106      	str	r1, [sp, #24]
 801cf46:	43da      	mvns	r2, r3
 801cf48:	2c00      	cmp	r4, #0
 801cf4a:	bf0c      	ite	eq
 801cf4c:	46dc      	moveq	ip, fp
 801cf4e:	f04f 0c00 	movne.w	ip, #0
 801cf52:	2300      	movs	r3, #0
 801cf54:	b2d2      	uxtb	r2, r2
 801cf56:	fa1f fc8c 	uxth.w	ip, ip
 801cf5a:	9303      	str	r3, [sp, #12]
 801cf5c:	9207      	str	r2, [sp, #28]
 801cf5e:	9a08      	ldr	r2, [sp, #32]
 801cf60:	4282      	cmp	r2, r0
 801cf62:	f240 80b5 	bls.w	801d0d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cf66:	b963      	cbnz	r3, 801cf82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cf68:	9b01      	ldr	r3, [sp, #4]
 801cf6a:	781a      	ldrb	r2, [r3, #0]
 801cf6c:	0993      	lsrs	r3, r2, #6
 801cf6e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cf72:	9203      	str	r2, [sp, #12]
 801cf74:	1e5a      	subs	r2, r3, #1
 801cf76:	2a02      	cmp	r2, #2
 801cf78:	d815      	bhi.n	801cfa6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801cf7a:	9a01      	ldr	r2, [sp, #4]
 801cf7c:	3201      	adds	r2, #1
 801cf7e:	9201      	str	r2, [sp, #4]
 801cf80:	b29b      	uxth	r3, r3
 801cf82:	b1b4      	cbz	r4, 801cfb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cf84:	429c      	cmp	r4, r3
 801cf86:	bf95      	itete	ls
 801cf88:	1b1c      	subls	r4, r3, r4
 801cf8a:	1ae4      	subhi	r4, r4, r3
 801cf8c:	fa1f f884 	uxthls.w	r8, r4
 801cf90:	b2a4      	uxthhi	r4, r4
 801cf92:	bf87      	ittee	hi
 801cf94:	4666      	movhi	r6, ip
 801cf96:	f04f 0800 	movhi.w	r8, #0
 801cf9a:	fa1f f68b 	uxthls.w	r6, fp
 801cf9e:	2400      	movls	r4, #0
 801cfa0:	4643      	mov	r3, r8
 801cfa2:	46b4      	mov	ip, r6
 801cfa4:	e7db      	b.n	801cf5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801cfa6:	9a01      	ldr	r2, [sp, #4]
 801cfa8:	9b01      	ldr	r3, [sp, #4]
 801cfaa:	3202      	adds	r2, #2
 801cfac:	785b      	ldrb	r3, [r3, #1]
 801cfae:	9201      	str	r2, [sp, #4]
 801cfb0:	e7e7      	b.n	801cf82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cfb2:	2203      	movs	r2, #3
 801cfb4:	4615      	mov	r5, r2
 801cfb6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cfb8:	9a03      	ldr	r2, [sp, #12]
 801cfba:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cfbe:	9905      	ldr	r1, [sp, #20]
 801cfc0:	4563      	cmp	r3, ip
 801cfc2:	eb01 0502 	add.w	r5, r1, r2
 801cfc6:	9902      	ldr	r1, [sp, #8]
 801cfc8:	bf29      	itett	cs
 801cfca:	eba3 080c 	subcs.w	r8, r3, ip
 801cfce:	ebac 0603 	subcc.w	r6, ip, r3
 801cfd2:	fa1f f888 	uxthcs.w	r8, r8
 801cfd6:	46e1      	movcs	r9, ip
 801cfd8:	bf2f      	iteee	cs
 801cfda:	4626      	movcs	r6, r4
 801cfdc:	b2b6      	uxthcc	r6, r6
 801cfde:	4699      	movcc	r9, r3
 801cfe0:	46a0      	movcc	r8, r4
 801cfe2:	29ff      	cmp	r1, #255	; 0xff
 801cfe4:	d04a      	beq.n	801d07c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801cfe6:	9f06      	ldr	r7, [sp, #24]
 801cfe8:	78a9      	ldrb	r1, [r5, #2]
 801cfea:	9004      	str	r0, [sp, #16]
 801cfec:	4379      	muls	r1, r7
 801cfee:	910a      	str	r1, [sp, #40]	; 0x28
 801cff0:	7869      	ldrb	r1, [r5, #1]
 801cff2:	4379      	muls	r1, r7
 801cff4:	910b      	str	r1, [sp, #44]	; 0x2c
 801cff6:	9905      	ldr	r1, [sp, #20]
 801cff8:	5c8a      	ldrb	r2, [r1, r2]
 801cffa:	437a      	muls	r2, r7
 801cffc:	920c      	str	r2, [sp, #48]	; 0x30
 801cffe:	46ca      	mov	sl, r9
 801d000:	f1ba 0f00 	cmp.w	sl, #0
 801d004:	d03d      	beq.n	801d082 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801d006:	9a04      	ldr	r2, [sp, #16]
 801d008:	9f07      	ldr	r7, [sp, #28]
 801d00a:	8812      	ldrh	r2, [r2, #0]
 801d00c:	1215      	asrs	r5, r2, #8
 801d00e:	46be      	mov	lr, r7
 801d010:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d014:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d016:	10d1      	asrs	r1, r2, #3
 801d018:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d01c:	fb05 750e 	mla	r5, r5, lr, r7
 801d020:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d024:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d026:	00d2      	lsls	r2, r2, #3
 801d028:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d02c:	fb01 710e 	mla	r1, r1, lr, r7
 801d030:	b2d2      	uxtb	r2, r2
 801d032:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d034:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d038:	b2ad      	uxth	r5, r5
 801d03a:	fb02 720e 	mla	r2, r2, lr, r7
 801d03e:	b292      	uxth	r2, r2
 801d040:	f105 0e01 	add.w	lr, r5, #1
 801d044:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d048:	f102 0e01 	add.w	lr, r2, #1
 801d04c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d050:	b289      	uxth	r1, r1
 801d052:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d056:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d05a:	4315      	orrs	r5, r2
 801d05c:	1c4a      	adds	r2, r1, #1
 801d05e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d062:	0949      	lsrs	r1, r1, #5
 801d064:	9a04      	ldr	r2, [sp, #16]
 801d066:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d06a:	430d      	orrs	r5, r1
 801d06c:	f822 5b02 	strh.w	r5, [r2], #2
 801d070:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d074:	9204      	str	r2, [sp, #16]
 801d076:	fa1f fa8a 	uxth.w	sl, sl
 801d07a:	e7c1      	b.n	801d000 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801d07c:	4649      	mov	r1, r9
 801d07e:	4686      	mov	lr, r0
 801d080:	b999      	cbnz	r1, 801d0aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d082:	4563      	cmp	r3, ip
 801d084:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801d088:	d38a      	bcc.n	801cfa0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d08a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801d08e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d090:	fa1f f68b 	uxth.w	r6, fp
 801d094:	1ba4      	subs	r4, r4, r6
 801d096:	881b      	ldrh	r3, [r3, #0]
 801d098:	b2a4      	uxth	r4, r4
 801d09a:	2c00      	cmp	r4, #0
 801d09c:	eba3 030b 	sub.w	r3, r3, fp
 801d0a0:	bf18      	it	ne
 801d0a2:	2600      	movne	r6, #0
 801d0a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d0a8:	e77a      	b.n	801cfa0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d0aa:	78aa      	ldrb	r2, [r5, #2]
 801d0ac:	4f0e      	ldr	r7, [pc, #56]	; (801d0e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801d0ae:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801d0b2:	786a      	ldrb	r2, [r5, #1]
 801d0b4:	00d2      	lsls	r2, r2, #3
 801d0b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d0ba:	ea4a 0202 	orr.w	r2, sl, r2
 801d0be:	f895 a000 	ldrb.w	sl, [r5]
 801d0c2:	3901      	subs	r1, #1
 801d0c4:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801d0c8:	f82e 2b02 	strh.w	r2, [lr], #2
 801d0cc:	b289      	uxth	r1, r1
 801d0ce:	e7d7      	b.n	801d080 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801d0d0:	4b03      	ldr	r3, [pc, #12]	; (801d0e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d0d2:	6818      	ldr	r0, [r3, #0]
 801d0d4:	6803      	ldr	r3, [r0, #0]
 801d0d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d0d8:	4798      	blx	r3
 801d0da:	b013      	add	sp, #76	; 0x4c
 801d0dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0e0:	20025998 	.word	0x20025998
 801d0e4:	20025992 	.word	0x20025992
 801d0e8:	fffff800 	.word	0xfffff800

0801d0ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0f0:	b09d      	sub	sp, #116	; 0x74
 801d0f2:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801d0f6:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801d0fa:	920e      	str	r2, [sp, #56]	; 0x38
 801d0fc:	461c      	mov	r4, r3
 801d0fe:	4683      	mov	fp, r0
 801d100:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d102:	2a00      	cmp	r2, #0
 801d104:	f000 81e0 	beq.w	801d4c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801d108:	6820      	ldr	r0, [r4, #0]
 801d10a:	6861      	ldr	r1, [r4, #4]
 801d10c:	aa18      	add	r2, sp, #96	; 0x60
 801d10e:	c203      	stmia	r2!, {r0, r1}
 801d110:	6818      	ldr	r0, [r3, #0]
 801d112:	6859      	ldr	r1, [r3, #4]
 801d114:	aa1a      	add	r2, sp, #104	; 0x68
 801d116:	c203      	stmia	r2!, {r0, r1}
 801d118:	a818      	add	r0, sp, #96	; 0x60
 801d11a:	f7f9 f8c5 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d11e:	4621      	mov	r1, r4
 801d120:	a81a      	add	r0, sp, #104	; 0x68
 801d122:	f7f9 f8e9 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d126:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801d12a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801d12e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d132:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d136:	bfd7      	itett	le
 801d138:	b29a      	uxthle	r2, r3
 801d13a:	2201      	movgt	r2, #1
 801d13c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d140:	fb91 f2f2 	sdivle	r2, r1, r2
 801d144:	9202      	str	r2, [sp, #8]
 801d146:	9802      	ldr	r0, [sp, #8]
 801d148:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801d14c:	fb92 f0f0 	sdiv	r0, r2, r0
 801d150:	b280      	uxth	r0, r0
 801d152:	900f      	str	r0, [sp, #60]	; 0x3c
 801d154:	9902      	ldr	r1, [sp, #8]
 801d156:	9802      	ldr	r0, [sp, #8]
 801d158:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d15a:	440c      	add	r4, r1
 801d15c:	fb05 2510 	mls	r5, r5, r0, r2
 801d160:	fb15 f503 	smulbb	r5, r5, r3
 801d164:	3c01      	subs	r4, #1
 801d166:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801d16a:	fb94 f4f1 	sdiv	r4, r4, r1
 801d16e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801d172:	440d      	add	r5, r1
 801d174:	4419      	add	r1, r3
 801d176:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801d17a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801d17e:	441a      	add	r2, r3
 801d180:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d184:	9306      	str	r3, [sp, #24]
 801d186:	4bb3      	ldr	r3, [pc, #716]	; (801d454 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801d188:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801d18c:	6818      	ldr	r0, [r3, #0]
 801d18e:	6803      	ldr	r3, [r0, #0]
 801d190:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d192:	4798      	blx	r3
 801d194:	4bb0      	ldr	r3, [pc, #704]	; (801d458 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801d196:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801d19a:	881a      	ldrh	r2, [r3, #0]
 801d19c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801d1a0:	9316      	str	r3, [sp, #88]	; 0x58
 801d1a2:	fb02 7101 	mla	r1, r2, r1, r7
 801d1a6:	3401      	adds	r4, #1
 801d1a8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801d1ac:	b2a4      	uxth	r4, r4
 801d1ae:	4356      	muls	r6, r2
 801d1b0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801d1b4:	00a4      	lsls	r4, r4, #2
 801d1b6:	920a      	str	r2, [sp, #40]	; 0x28
 801d1b8:	1d22      	adds	r2, r4, #4
 801d1ba:	b2ad      	uxth	r5, r5
 801d1bc:	9213      	str	r2, [sp, #76]	; 0x4c
 801d1be:	4ba7      	ldr	r3, [pc, #668]	; (801d45c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801d1c0:	9a06      	ldr	r2, [sp, #24]
 801d1c2:	2d00      	cmp	r5, #0
 801d1c4:	bf0c      	ite	eq
 801d1c6:	4611      	moveq	r1, r2
 801d1c8:	2100      	movne	r1, #0
 801d1ca:	2200      	movs	r2, #0
 801d1cc:	eba3 030b 	sub.w	r3, r3, fp
 801d1d0:	b289      	uxth	r1, r1
 801d1d2:	920d      	str	r2, [sp, #52]	; 0x34
 801d1d4:	9317      	str	r3, [sp, #92]	; 0x5c
 801d1d6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d1d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d1da:	fa12 f383 	uxtah	r3, r2, r3
 801d1de:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d1e0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d1e4:	3304      	adds	r3, #4
 801d1e6:	9308      	str	r3, [sp, #32]
 801d1e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d1ea:	4543      	cmp	r3, r8
 801d1ec:	f240 8167 	bls.w	801d4be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d1f0:	9a02      	ldr	r2, [sp, #8]
 801d1f2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801d1f6:	fbb5 f3f3 	udiv	r3, r5, r3
 801d1fa:	1ad3      	subs	r3, r2, r3
 801d1fc:	b29b      	uxth	r3, r3
 801d1fe:	9314      	str	r3, [sp, #80]	; 0x50
 801d200:	9b08      	ldr	r3, [sp, #32]
 801d202:	9808      	ldr	r0, [sp, #32]
 801d204:	785a      	ldrb	r2, [r3, #1]
 801d206:	789b      	ldrb	r3, [r3, #2]
 801d208:	7800      	ldrb	r0, [r0, #0]
 801d20a:	9010      	str	r0, [sp, #64]	; 0x40
 801d20c:	021b      	lsls	r3, r3, #8
 801d20e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d212:	9a08      	ldr	r2, [sp, #32]
 801d214:	78d2      	ldrb	r2, [r2, #3]
 801d216:	4313      	orrs	r3, r2
 801d218:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d21a:	3001      	adds	r0, #1
 801d21c:	441a      	add	r2, r3
 801d21e:	9007      	str	r0, [sp, #28]
 801d220:	1c50      	adds	r0, r2, #1
 801d222:	9005      	str	r0, [sp, #20]
 801d224:	7852      	ldrb	r2, [r2, #1]
 801d226:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d228:	0212      	lsls	r2, r2, #8
 801d22a:	5cc3      	ldrb	r3, [r0, r3]
 801d22c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d230:	431a      	orrs	r2, r3
 801d232:	b293      	uxth	r3, r2
 801d234:	930b      	str	r3, [sp, #44]	; 0x2c
 801d236:	2300      	movs	r3, #0
 801d238:	9309      	str	r3, [sp, #36]	; 0x24
 801d23a:	2301      	movs	r3, #1
 801d23c:	9301      	str	r3, [sp, #4]
 801d23e:	9304      	str	r3, [sp, #16]
 801d240:	2300      	movs	r3, #0
 801d242:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801d246:	9303      	str	r3, [sp, #12]
 801d248:	f04f 0e01 	mov.w	lr, #1
 801d24c:	2d00      	cmp	r5, #0
 801d24e:	d07c      	beq.n	801d34a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801d250:	45ae      	cmp	lr, r5
 801d252:	d26b      	bcs.n	801d32c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801d254:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d256:	eba5 050e 	sub.w	r5, r5, lr
 801d25a:	4543      	cmp	r3, r8
 801d25c:	b2ad      	uxth	r5, r5
 801d25e:	460c      	mov	r4, r1
 801d260:	d802      	bhi.n	801d268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801d262:	e070      	b.n	801d346 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801d264:	2b00      	cmp	r3, #0
 801d266:	d15c      	bne.n	801d322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d268:	9b05      	ldr	r3, [sp, #20]
 801d26a:	9a04      	ldr	r2, [sp, #16]
 801d26c:	785b      	ldrb	r3, [r3, #1]
 801d26e:	9904      	ldr	r1, [sp, #16]
 801d270:	f1c2 0207 	rsb	r2, r2, #7
 801d274:	4093      	lsls	r3, r2
 801d276:	005b      	lsls	r3, r3, #1
 801d278:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d27c:	9b05      	ldr	r3, [sp, #20]
 801d27e:	781b      	ldrb	r3, [r3, #0]
 801d280:	410b      	asrs	r3, r1
 801d282:	3101      	adds	r1, #1
 801d284:	b2c9      	uxtb	r1, r1
 801d286:	2908      	cmp	r1, #8
 801d288:	9104      	str	r1, [sp, #16]
 801d28a:	9905      	ldr	r1, [sp, #20]
 801d28c:	bf0a      	itet	eq
 801d28e:	3102      	addeq	r1, #2
 801d290:	3101      	addne	r1, #1
 801d292:	9105      	streq	r1, [sp, #20]
 801d294:	b2db      	uxtb	r3, r3
 801d296:	bf0a      	itet	eq
 801d298:	2100      	moveq	r1, #0
 801d29a:	9105      	strne	r1, [sp, #20]
 801d29c:	9104      	streq	r1, [sp, #16]
 801d29e:	4313      	orrs	r3, r2
 801d2a0:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d2a2:	b29a      	uxth	r2, r3
 801d2a4:	4291      	cmp	r1, r2
 801d2a6:	d30a      	bcc.n	801d2be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d2a8:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801d2ac:	2301      	movs	r3, #1
 801d2ae:	9907      	ldr	r1, [sp, #28]
 801d2b0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d2b4:	d30f      	bcc.n	801d2d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d2b6:	2100      	movs	r1, #0
 801d2b8:	9301      	str	r3, [sp, #4]
 801d2ba:	9103      	str	r1, [sp, #12]
 801d2bc:	e032      	b.n	801d324 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801d2be:	9b07      	ldr	r3, [sp, #28]
 801d2c0:	429a      	cmp	r2, r3
 801d2c2:	d318      	bcc.n	801d2f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801d2c4:	9b01      	ldr	r3, [sp, #4]
 801d2c6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801d2ca:	445b      	add	r3, fp
 801d2cc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d2d0:	9b01      	ldr	r3, [sp, #4]
 801d2d2:	3301      	adds	r3, #1
 801d2d4:	b29b      	uxth	r3, r3
 801d2d6:	9907      	ldr	r1, [sp, #28]
 801d2d8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801d2dc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d2e0:	7108      	strb	r0, [r1, #4]
 801d2e2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d2e4:	80c8      	strh	r0, [r1, #6]
 801d2e6:	9801      	ldr	r0, [sp, #4]
 801d2e8:	3001      	adds	r0, #1
 801d2ea:	7148      	strb	r0, [r1, #5]
 801d2ec:	9907      	ldr	r1, [sp, #28]
 801d2ee:	3101      	adds	r1, #1
 801d2f0:	b289      	uxth	r1, r1
 801d2f2:	9107      	str	r1, [sp, #28]
 801d2f4:	e7df      	b.n	801d2b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d2f6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d2fa:	4611      	mov	r1, r2
 801d2fc:	795b      	ldrb	r3, [r3, #5]
 801d2fe:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801d302:	4458      	add	r0, fp
 801d304:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801d306:	4406      	add	r6, r0
 801d308:	2e00      	cmp	r6, #0
 801d30a:	dd06      	ble.n	801d31a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d30c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d310:	790e      	ldrb	r6, [r1, #4]
 801d312:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d316:	88c9      	ldrh	r1, [r1, #6]
 801d318:	e7f4      	b.n	801d304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d31a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d31e:	b29b      	uxth	r3, r3
 801d320:	e7c5      	b.n	801d2ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d322:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d324:	920b      	str	r2, [sp, #44]	; 0x2c
 801d326:	4621      	mov	r1, r4
 801d328:	469e      	mov	lr, r3
 801d32a:	e78f      	b.n	801d24c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d32c:	9a03      	ldr	r2, [sp, #12]
 801d32e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d332:	442a      	add	r2, r5
 801d334:	ebae 0305 	sub.w	r3, lr, r5
 801d338:	b292      	uxth	r2, r2
 801d33a:	b29b      	uxth	r3, r3
 801d33c:	9203      	str	r2, [sp, #12]
 801d33e:	2500      	movs	r5, #0
 801d340:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d342:	4542      	cmp	r2, r8
 801d344:	d88e      	bhi.n	801d264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801d346:	4621      	mov	r1, r4
 801d348:	e74e      	b.n	801d1e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801d34a:	458e      	cmp	lr, r1
 801d34c:	bf29      	itett	cs
 801d34e:	ebae 0301 	subcs.w	r3, lr, r1
 801d352:	eba1 040e 	subcc.w	r4, r1, lr
 801d356:	b29b      	uxthcs	r3, r3
 801d358:	910c      	strcs	r1, [sp, #48]	; 0x30
 801d35a:	bf2f      	iteee	cs
 801d35c:	462c      	movcs	r4, r5
 801d35e:	b2a4      	uxthcc	r4, r4
 801d360:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801d364:	462b      	movcc	r3, r5
 801d366:	f04f 0900 	mov.w	r9, #0
 801d36a:	9a03      	ldr	r2, [sp, #12]
 801d36c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d36e:	444a      	add	r2, r9
 801d370:	4548      	cmp	r0, r9
 801d372:	b292      	uxth	r2, r2
 801d374:	d074      	beq.n	801d460 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801d376:	445a      	add	r2, fp
 801d378:	2004      	movs	r0, #4
 801d37a:	4605      	mov	r5, r0
 801d37c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801d380:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d382:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d386:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d388:	5880      	ldr	r0, [r0, r2]
 801d38a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d38e:	d014      	beq.n	801d3ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d390:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d394:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d398:	d112      	bne.n	801d3c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d39a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d39c:	2aff      	cmp	r2, #255	; 0xff
 801d39e:	d10f      	bne.n	801d3c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d3a0:	0942      	lsrs	r2, r0, #5
 801d3a2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d3a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d3aa:	f025 0507 	bic.w	r5, r5, #7
 801d3ae:	4315      	orrs	r5, r2
 801d3b0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d3b4:	4305      	orrs	r5, r0
 801d3b6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d3ba:	f109 0901 	add.w	r9, r9, #1
 801d3be:	e7d4      	b.n	801d36a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d3c0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d3c4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d3c8:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d3cc:	9215      	str	r2, [sp, #84]	; 0x54
 801d3ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d3d0:	fb02 fa0a 	mul.w	sl, r2, sl
 801d3d4:	f10a 0201 	add.w	r2, sl, #1
 801d3d8:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d3dc:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d3e0:	1212      	asrs	r2, r2, #8
 801d3e2:	fa1f fa82 	uxth.w	sl, r2
 801d3e6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d3ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d3ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d3f2:	43d2      	mvns	r2, r2
 801d3f4:	b2d2      	uxtb	r2, r2
 801d3f6:	fb16 f60a 	smulbb	r6, r6, sl
 801d3fa:	fa5f fc8c 	uxtb.w	ip, ip
 801d3fe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d402:	b2c0      	uxtb	r0, r0
 801d404:	fb07 6702 	mla	r7, r7, r2, r6
 801d408:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d40c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d40e:	fb10 f00a 	smulbb	r0, r0, sl
 801d412:	fb0c 0002 	mla	r0, ip, r2, r0
 801d416:	b2ed      	uxtb	r5, r5
 801d418:	b2bf      	uxth	r7, r7
 801d41a:	fb15 f50a 	smulbb	r5, r5, sl
 801d41e:	b280      	uxth	r0, r0
 801d420:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d424:	fb06 5602 	mla	r6, r6, r2, r5
 801d428:	1c7a      	adds	r2, r7, #1
 801d42a:	1c45      	adds	r5, r0, #1
 801d42c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d430:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d434:	b2b6      	uxth	r6, r6
 801d436:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d43a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d43e:	432f      	orrs	r7, r5
 801d440:	1c75      	adds	r5, r6, #1
 801d442:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d446:	096d      	lsrs	r5, r5, #5
 801d448:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d44c:	432f      	orrs	r7, r5
 801d44e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d452:	e7b2      	b.n	801d3ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d454:	20025998 	.word	0x20025998
 801d458:	20025992 	.word	0x20025992
 801d45c:	fffff7fb 	.word	0xfffff7fb
 801d460:	9203      	str	r2, [sp, #12]
 801d462:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d464:	458e      	cmp	lr, r1
 801d466:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d46a:	f4ff af68 	bcc.w	801d33e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d46e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d470:	9906      	ldr	r1, [sp, #24]
 801d472:	8812      	ldrh	r2, [r2, #0]
 801d474:	1a52      	subs	r2, r2, r1
 801d476:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d47a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d47c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d47e:	3201      	adds	r2, #1
 801d480:	428a      	cmp	r2, r1
 801d482:	9209      	str	r2, [sp, #36]	; 0x24
 801d484:	d111      	bne.n	801d4aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d486:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d48a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d48e:	9b06      	ldr	r3, [sp, #24]
 801d490:	eba5 0509 	sub.w	r5, r5, r9
 801d494:	b2ad      	uxth	r5, r5
 801d496:	2d00      	cmp	r5, #0
 801d498:	bf08      	it	eq
 801d49a:	4619      	moveq	r1, r3
 801d49c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d49e:	bf18      	it	ne
 801d4a0:	2100      	movne	r1, #0
 801d4a2:	3301      	adds	r3, #1
 801d4a4:	930d      	str	r3, [sp, #52]	; 0x34
 801d4a6:	b289      	uxth	r1, r1
 801d4a8:	e695      	b.n	801d1d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d4aa:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d4ae:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d4b2:	1b2d      	subs	r5, r5, r4
 801d4b4:	b2ad      	uxth	r5, r5
 801d4b6:	2d00      	cmp	r5, #0
 801d4b8:	bf18      	it	ne
 801d4ba:	2400      	movne	r4, #0
 801d4bc:	e740      	b.n	801d340 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d4be:	4b04      	ldr	r3, [pc, #16]	; (801d4d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d4c0:	6818      	ldr	r0, [r3, #0]
 801d4c2:	6803      	ldr	r3, [r0, #0]
 801d4c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d4c6:	4798      	blx	r3
 801d4c8:	b01d      	add	sp, #116	; 0x74
 801d4ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d4ce:	bf00      	nop
 801d4d0:	20025998 	.word	0x20025998

0801d4d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d4d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4d8:	b09f      	sub	sp, #124	; 0x7c
 801d4da:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d4de:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d4e2:	920a      	str	r2, [sp, #40]	; 0x28
 801d4e4:	461d      	mov	r5, r3
 801d4e6:	4604      	mov	r4, r0
 801d4e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d4ea:	2a00      	cmp	r2, #0
 801d4ec:	f000 81fa 	beq.w	801d8e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d4f0:	6828      	ldr	r0, [r5, #0]
 801d4f2:	6869      	ldr	r1, [r5, #4]
 801d4f4:	aa1a      	add	r2, sp, #104	; 0x68
 801d4f6:	c203      	stmia	r2!, {r0, r1}
 801d4f8:	6818      	ldr	r0, [r3, #0]
 801d4fa:	6859      	ldr	r1, [r3, #4]
 801d4fc:	aa1c      	add	r2, sp, #112	; 0x70
 801d4fe:	c203      	stmia	r2!, {r0, r1}
 801d500:	a81a      	add	r0, sp, #104	; 0x68
 801d502:	f7f8 fed1 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d506:	4629      	mov	r1, r5
 801d508:	a81c      	add	r0, sp, #112	; 0x70
 801d50a:	f7f8 fef5 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d50e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d512:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d516:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d51a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d51e:	bfd7      	itett	le
 801d520:	b29a      	uxthle	r2, r3
 801d522:	2201      	movgt	r2, #1
 801d524:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d528:	fb91 f2f2 	sdivle	r2, r1, r2
 801d52c:	9201      	str	r2, [sp, #4]
 801d52e:	9801      	ldr	r0, [sp, #4]
 801d530:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d534:	fb92 f0f0 	sdiv	r0, r2, r0
 801d538:	b280      	uxth	r0, r0
 801d53a:	9010      	str	r0, [sp, #64]	; 0x40
 801d53c:	9901      	ldr	r1, [sp, #4]
 801d53e:	9801      	ldr	r0, [sp, #4]
 801d540:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d542:	440e      	add	r6, r1
 801d544:	fb05 2510 	mls	r5, r5, r0, r2
 801d548:	fb15 f503 	smulbb	r5, r5, r3
 801d54c:	3e01      	subs	r6, #1
 801d54e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d552:	fb96 f6f1 	sdiv	r6, r6, r1
 801d556:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d55a:	440d      	add	r5, r1
 801d55c:	4419      	add	r1, r3
 801d55e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d562:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d566:	441a      	add	r2, r3
 801d568:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d56c:	9304      	str	r3, [sp, #16]
 801d56e:	4b96      	ldr	r3, [pc, #600]	; (801d7c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d570:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d574:	6818      	ldr	r0, [r3, #0]
 801d576:	6803      	ldr	r3, [r0, #0]
 801d578:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d57a:	4798      	blx	r3
 801d57c:	4b93      	ldr	r3, [pc, #588]	; (801d7cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d57e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d582:	881a      	ldrh	r2, [r3, #0]
 801d584:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d588:	9318      	str	r3, [sp, #96]	; 0x60
 801d58a:	fb02 c101 	mla	r1, r2, r1, ip
 801d58e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d592:	4357      	muls	r7, r2
 801d594:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d598:	3601      	adds	r6, #1
 801d59a:	920b      	str	r2, [sp, #44]	; 0x2c
 801d59c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d59e:	4b8c      	ldr	r3, [pc, #560]	; (801d7d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d5a0:	b2b6      	uxth	r6, r6
 801d5a2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d5a6:	1d32      	adds	r2, r6, #4
 801d5a8:	9206      	str	r2, [sp, #24]
 801d5aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d5ac:	43d2      	mvns	r2, r2
 801d5ae:	b2d2      	uxtb	r2, r2
 801d5b0:	b2ad      	uxth	r5, r5
 801d5b2:	9215      	str	r2, [sp, #84]	; 0x54
 801d5b4:	9a04      	ldr	r2, [sp, #16]
 801d5b6:	2d00      	cmp	r5, #0
 801d5b8:	bf0c      	ite	eq
 801d5ba:	4611      	moveq	r1, r2
 801d5bc:	2100      	movne	r1, #0
 801d5be:	2200      	movs	r2, #0
 801d5c0:	1b1b      	subs	r3, r3, r4
 801d5c2:	b289      	uxth	r1, r1
 801d5c4:	920d      	str	r2, [sp, #52]	; 0x34
 801d5c6:	9319      	str	r3, [sp, #100]	; 0x64
 801d5c8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d5ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d5cc:	fa12 f383 	uxtah	r3, r2, r3
 801d5d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d5d2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d5d6:	3304      	adds	r3, #4
 801d5d8:	9307      	str	r3, [sp, #28]
 801d5da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d5dc:	455b      	cmp	r3, fp
 801d5de:	f240 817c 	bls.w	801d8da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d5e2:	9a01      	ldr	r2, [sp, #4]
 801d5e4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d5e8:	fbb5 f3f3 	udiv	r3, r5, r3
 801d5ec:	1ad3      	subs	r3, r2, r3
 801d5ee:	b29b      	uxth	r3, r3
 801d5f0:	9316      	str	r3, [sp, #88]	; 0x58
 801d5f2:	9b07      	ldr	r3, [sp, #28]
 801d5f4:	9807      	ldr	r0, [sp, #28]
 801d5f6:	785a      	ldrb	r2, [r3, #1]
 801d5f8:	789b      	ldrb	r3, [r3, #2]
 801d5fa:	7800      	ldrb	r0, [r0, #0]
 801d5fc:	9011      	str	r0, [sp, #68]	; 0x44
 801d5fe:	021b      	lsls	r3, r3, #8
 801d600:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d604:	9a07      	ldr	r2, [sp, #28]
 801d606:	78d2      	ldrb	r2, [r2, #3]
 801d608:	4313      	orrs	r3, r2
 801d60a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d60c:	3001      	adds	r0, #1
 801d60e:	441a      	add	r2, r3
 801d610:	9005      	str	r0, [sp, #20]
 801d612:	1c50      	adds	r0, r2, #1
 801d614:	9003      	str	r0, [sp, #12]
 801d616:	7852      	ldrb	r2, [r2, #1]
 801d618:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d61a:	0212      	lsls	r2, r2, #8
 801d61c:	5cc3      	ldrb	r3, [r0, r3]
 801d61e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d622:	431a      	orrs	r2, r3
 801d624:	b293      	uxth	r3, r2
 801d626:	930c      	str	r3, [sp, #48]	; 0x30
 801d628:	2300      	movs	r3, #0
 801d62a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d62e:	9308      	str	r3, [sp, #32]
 801d630:	461a      	mov	r2, r3
 801d632:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d636:	930e      	str	r3, [sp, #56]	; 0x38
 801d638:	f04f 0801 	mov.w	r8, #1
 801d63c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d640:	f8cd 8008 	str.w	r8, [sp, #8]
 801d644:	46c4      	mov	ip, r8
 801d646:	930f      	str	r3, [sp, #60]	; 0x3c
 801d648:	2d00      	cmp	r5, #0
 801d64a:	d07c      	beq.n	801d746 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d64c:	45ac      	cmp	ip, r5
 801d64e:	d26c      	bcs.n	801d72a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d650:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d652:	eba5 050c 	sub.w	r5, r5, ip
 801d656:	455b      	cmp	r3, fp
 801d658:	b2ad      	uxth	r5, r5
 801d65a:	4608      	mov	r0, r1
 801d65c:	d802      	bhi.n	801d664 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d65e:	e070      	b.n	801d742 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d660:	2b00      	cmp	r3, #0
 801d662:	d15c      	bne.n	801d71e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d664:	9b03      	ldr	r3, [sp, #12]
 801d666:	9a02      	ldr	r2, [sp, #8]
 801d668:	785b      	ldrb	r3, [r3, #1]
 801d66a:	9902      	ldr	r1, [sp, #8]
 801d66c:	f1c2 0207 	rsb	r2, r2, #7
 801d670:	4093      	lsls	r3, r2
 801d672:	005b      	lsls	r3, r3, #1
 801d674:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d678:	9b03      	ldr	r3, [sp, #12]
 801d67a:	781b      	ldrb	r3, [r3, #0]
 801d67c:	410b      	asrs	r3, r1
 801d67e:	3101      	adds	r1, #1
 801d680:	b2c9      	uxtb	r1, r1
 801d682:	2908      	cmp	r1, #8
 801d684:	9102      	str	r1, [sp, #8]
 801d686:	9903      	ldr	r1, [sp, #12]
 801d688:	bf0a      	itet	eq
 801d68a:	3102      	addeq	r1, #2
 801d68c:	3101      	addne	r1, #1
 801d68e:	9103      	streq	r1, [sp, #12]
 801d690:	b2db      	uxtb	r3, r3
 801d692:	bf0a      	itet	eq
 801d694:	2100      	moveq	r1, #0
 801d696:	9103      	strne	r1, [sp, #12]
 801d698:	9102      	streq	r1, [sp, #8]
 801d69a:	4313      	orrs	r3, r2
 801d69c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d69e:	b29a      	uxth	r2, r3
 801d6a0:	4291      	cmp	r1, r2
 801d6a2:	d30a      	bcc.n	801d6ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d6a4:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d6a8:	2301      	movs	r3, #1
 801d6aa:	9905      	ldr	r1, [sp, #20]
 801d6ac:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d6b0:	d30f      	bcc.n	801d6d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d6b2:	2100      	movs	r1, #0
 801d6b4:	4698      	mov	r8, r3
 801d6b6:	9100      	str	r1, [sp, #0]
 801d6b8:	e032      	b.n	801d720 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d6ba:	9b05      	ldr	r3, [sp, #20]
 801d6bc:	429a      	cmp	r2, r3
 801d6be:	d318      	bcc.n	801d6f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d6c0:	eb04 0308 	add.w	r3, r4, r8
 801d6c4:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d6c8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d6cc:	f108 0301 	add.w	r3, r8, #1
 801d6d0:	b29b      	uxth	r3, r3
 801d6d2:	9905      	ldr	r1, [sp, #20]
 801d6d4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d6d8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d6dc:	710e      	strb	r6, [r1, #4]
 801d6de:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d6e0:	80ce      	strh	r6, [r1, #6]
 801d6e2:	f108 0601 	add.w	r6, r8, #1
 801d6e6:	714e      	strb	r6, [r1, #5]
 801d6e8:	9905      	ldr	r1, [sp, #20]
 801d6ea:	3101      	adds	r1, #1
 801d6ec:	b289      	uxth	r1, r1
 801d6ee:	9105      	str	r1, [sp, #20]
 801d6f0:	e7df      	b.n	801d6b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d6f2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d6f6:	4611      	mov	r1, r2
 801d6f8:	795b      	ldrb	r3, [r3, #5]
 801d6fa:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d6fe:	4426      	add	r6, r4
 801d700:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d702:	4437      	add	r7, r6
 801d704:	2f00      	cmp	r7, #0
 801d706:	dd06      	ble.n	801d716 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d708:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d70c:	790f      	ldrb	r7, [r1, #4]
 801d70e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d712:	88c9      	ldrh	r1, [r1, #6]
 801d714:	e7f4      	b.n	801d700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d716:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d71a:	b29b      	uxth	r3, r3
 801d71c:	e7c5      	b.n	801d6aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d71e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d720:	920c      	str	r2, [sp, #48]	; 0x30
 801d722:	4601      	mov	r1, r0
 801d724:	9a00      	ldr	r2, [sp, #0]
 801d726:	469c      	mov	ip, r3
 801d728:	e78e      	b.n	801d648 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d72a:	1957      	adds	r7, r2, r5
 801d72c:	ebac 0305 	sub.w	r3, ip, r5
 801d730:	b2ba      	uxth	r2, r7
 801d732:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d736:	9200      	str	r2, [sp, #0]
 801d738:	b29b      	uxth	r3, r3
 801d73a:	2500      	movs	r5, #0
 801d73c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d73e:	455a      	cmp	r2, fp
 801d740:	d88e      	bhi.n	801d660 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d742:	4601      	mov	r1, r0
 801d744:	e749      	b.n	801d5da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d746:	458c      	cmp	ip, r1
 801d748:	bf2c      	ite	cs
 801d74a:	4628      	movcs	r0, r5
 801d74c:	462b      	movcc	r3, r5
 801d74e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d750:	bf27      	ittee	cs
 801d752:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d754:	ebac 0301 	subcs.w	r3, ip, r1
 801d758:	eba1 000c 	subcc.w	r0, r1, ip
 801d75c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d760:	bf2c      	ite	cs
 801d762:	b29b      	uxthcs	r3, r3
 801d764:	b280      	uxthcc	r0, r0
 801d766:	2dff      	cmp	r5, #255	; 0xff
 801d768:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d76a:	eb02 0705 	add.w	r7, r2, r5
 801d76e:	b2bd      	uxth	r5, r7
 801d770:	9500      	str	r5, [sp, #0]
 801d772:	d12f      	bne.n	801d7d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d774:	465e      	mov	r6, fp
 801d776:	9d00      	ldr	r5, [sp, #0]
 801d778:	42aa      	cmp	r2, r5
 801d77a:	f040 8084 	bne.w	801d886 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d77e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d780:	458c      	cmp	ip, r1
 801d782:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d786:	d3d8      	bcc.n	801d73a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d788:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d78a:	9904      	ldr	r1, [sp, #16]
 801d78c:	8812      	ldrh	r2, [r2, #0]
 801d78e:	1a52      	subs	r2, r2, r1
 801d790:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d794:	9a08      	ldr	r2, [sp, #32]
 801d796:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d798:	3201      	adds	r2, #1
 801d79a:	428a      	cmp	r2, r1
 801d79c:	9208      	str	r2, [sp, #32]
 801d79e:	f040 8092 	bne.w	801d8c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d7a2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d7a6:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d7aa:	9b04      	ldr	r3, [sp, #16]
 801d7ac:	eba5 050c 	sub.w	r5, r5, ip
 801d7b0:	b2ad      	uxth	r5, r5
 801d7b2:	2d00      	cmp	r5, #0
 801d7b4:	bf08      	it	eq
 801d7b6:	4619      	moveq	r1, r3
 801d7b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d7ba:	bf18      	it	ne
 801d7bc:	2100      	movne	r1, #0
 801d7be:	3301      	adds	r3, #1
 801d7c0:	930d      	str	r3, [sp, #52]	; 0x34
 801d7c2:	b289      	uxth	r1, r1
 801d7c4:	e700      	b.n	801d5c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d7c6:	bf00      	nop
 801d7c8:	20025998 	.word	0x20025998
 801d7cc:	20025992 	.word	0x20025992
 801d7d0:	fffff7fb 	.word	0xfffff7fb
 801d7d4:	46d9      	mov	r9, fp
 801d7d6:	9d00      	ldr	r5, [sp, #0]
 801d7d8:	42aa      	cmp	r2, r5
 801d7da:	d0d0      	beq.n	801d77e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d7dc:	1c55      	adds	r5, r2, #1
 801d7de:	4422      	add	r2, r4
 801d7e0:	9517      	str	r5, [sp, #92]	; 0x5c
 801d7e2:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d7e6:	9a06      	ldr	r2, [sp, #24]
 801d7e8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d7ec:	4472      	add	r2, lr
 801d7ee:	9212      	str	r2, [sp, #72]	; 0x48
 801d7f0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d7f2:	f8b9 2000 	ldrh.w	r2, [r9]
 801d7f6:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d7fa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d7fc:	1216      	asrs	r6, r2, #8
 801d7fe:	fb1a fa07 	smulbb	sl, sl, r7
 801d802:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d806:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d808:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d80c:	fb06 a607 	mla	r6, r6, r7, sl
 801d810:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d812:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d816:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d818:	10d5      	asrs	r5, r2, #3
 801d81a:	fb1a fa07 	smulbb	sl, sl, r7
 801d81e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d822:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d824:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d828:	fb05 a507 	mla	r5, r5, r7, sl
 801d82c:	9f06      	ldr	r7, [sp, #24]
 801d82e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d832:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d834:	00d2      	lsls	r2, r2, #3
 801d836:	fb1e fe07 	smulbb	lr, lr, r7
 801d83a:	b2d2      	uxtb	r2, r2
 801d83c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d83e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d842:	b2b6      	uxth	r6, r6
 801d844:	fb02 e207 	mla	r2, r2, r7, lr
 801d848:	b292      	uxth	r2, r2
 801d84a:	b2ad      	uxth	r5, r5
 801d84c:	f106 0a01 	add.w	sl, r6, #1
 801d850:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d854:	f102 0e01 	add.w	lr, r2, #1
 801d858:	f105 0a01 	add.w	sl, r5, #1
 801d85c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d860:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d864:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d868:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d86c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d870:	ea4e 0606 	orr.w	r6, lr, r6
 801d874:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d878:	ea46 060a 	orr.w	r6, r6, sl
 801d87c:	f829 6b02 	strh.w	r6, [r9], #2
 801d880:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d884:	e7a7      	b.n	801d7d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d886:	f102 0e01 	add.w	lr, r2, #1
 801d88a:	4422      	add	r2, r4
 801d88c:	9f06      	ldr	r7, [sp, #24]
 801d88e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d892:	9a06      	ldr	r2, [sp, #24]
 801d894:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d898:	eb02 0a05 	add.w	sl, r2, r5
 801d89c:	4a13      	ldr	r2, [pc, #76]	; (801d8ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d89e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d8a2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d8a6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d8aa:	00d2      	lsls	r2, r2, #3
 801d8ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d8b0:	ea49 0202 	orr.w	r2, r9, r2
 801d8b4:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d8b8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d8bc:	f826 2b02 	strh.w	r2, [r6], #2
 801d8c0:	fa1f f28e 	uxth.w	r2, lr
 801d8c4:	e757      	b.n	801d776 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d8c6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d8ca:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d8ce:	1a2d      	subs	r5, r5, r0
 801d8d0:	b2ad      	uxth	r5, r5
 801d8d2:	2d00      	cmp	r5, #0
 801d8d4:	bf18      	it	ne
 801d8d6:	2000      	movne	r0, #0
 801d8d8:	e730      	b.n	801d73c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d8da:	4b05      	ldr	r3, [pc, #20]	; (801d8f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d8dc:	6818      	ldr	r0, [r3, #0]
 801d8de:	6803      	ldr	r3, [r0, #0]
 801d8e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d8e2:	4798      	blx	r3
 801d8e4:	b01f      	add	sp, #124	; 0x7c
 801d8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d8ea:	bf00      	nop
 801d8ec:	fffff800 	.word	0xfffff800
 801d8f0:	20025998 	.word	0x20025998

0801d8f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8f8:	b091      	sub	sp, #68	; 0x44
 801d8fa:	469b      	mov	fp, r3
 801d8fc:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d900:	4616      	mov	r6, r2
 801d902:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d906:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d90a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d90e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d912:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d916:	4604      	mov	r4, r0
 801d918:	460d      	mov	r5, r1
 801d91a:	4640      	mov	r0, r8
 801d91c:	4659      	mov	r1, fp
 801d91e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d922:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d926:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d92a:	f7f5 fb6d 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 801d92e:	4631      	mov	r1, r6
 801d930:	4640      	mov	r0, r8
 801d932:	f7f5 fb69 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 801d936:	4b74      	ldr	r3, [pc, #464]	; (801db08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d938:	8818      	ldrh	r0, [r3, #0]
 801d93a:	4b74      	ldr	r3, [pc, #464]	; (801db0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d93c:	8819      	ldrh	r1, [r3, #0]
 801d93e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d942:	2b00      	cmp	r3, #0
 801d944:	b202      	sxth	r2, r0
 801d946:	b20e      	sxth	r6, r1
 801d948:	da07      	bge.n	801d95a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d94a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d94e:	4463      	add	r3, ip
 801d950:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d954:	2300      	movs	r3, #0
 801d956:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d95a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d95e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d962:	1ad2      	subs	r2, r2, r3
 801d964:	4594      	cmp	ip, r2
 801d966:	bfc4      	itt	gt
 801d968:	1ac2      	subgt	r2, r0, r3
 801d96a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d96e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d972:	2a00      	cmp	r2, #0
 801d974:	da07      	bge.n	801d986 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d976:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d97a:	4462      	add	r2, ip
 801d97c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d980:	2200      	movs	r2, #0
 801d982:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d986:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d98a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d98e:	eba6 060a 	sub.w	r6, r6, sl
 801d992:	42b2      	cmp	r2, r6
 801d994:	bfc4      	itt	gt
 801d996:	eba1 020a 	subgt.w	r2, r1, sl
 801d99a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d99e:	4a5c      	ldr	r2, [pc, #368]	; (801db10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d9a0:	7812      	ldrb	r2, [r2, #0]
 801d9a2:	b9a2      	cbnz	r2, 801d9ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d9a4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d9a8:	4286      	cmp	r6, r0
 801d9aa:	4640      	mov	r0, r8
 801d9ac:	9303      	str	r3, [sp, #12]
 801d9ae:	bf14      	ite	ne
 801d9b0:	2600      	movne	r6, #0
 801d9b2:	2601      	moveq	r6, #1
 801d9b4:	f7f5 fb6b 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 801d9b8:	9b03      	ldr	r3, [sp, #12]
 801d9ba:	b160      	cbz	r0, 801d9d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d9bc:	2300      	movs	r3, #0
 801d9be:	8023      	strh	r3, [r4, #0]
 801d9c0:	8063      	strh	r3, [r4, #2]
 801d9c2:	80a3      	strh	r3, [r4, #4]
 801d9c4:	4620      	mov	r0, r4
 801d9c6:	80e3      	strh	r3, [r4, #6]
 801d9c8:	b011      	add	sp, #68	; 0x44
 801d9ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9ce:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d9d2:	428e      	cmp	r6, r1
 801d9d4:	e7e9      	b.n	801d9aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d9d6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d9da:	9205      	str	r2, [sp, #20]
 801d9dc:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d9e0:	9206      	str	r2, [sp, #24]
 801d9e2:	f8bb 2000 	ldrh.w	r2, [fp]
 801d9e6:	900e      	str	r0, [sp, #56]	; 0x38
 801d9e8:	1a9b      	subs	r3, r3, r2
 801d9ea:	b21b      	sxth	r3, r3
 801d9ec:	9303      	str	r3, [sp, #12]
 801d9ee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d9f2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d9f6:	ebaa 0a03 	sub.w	sl, sl, r3
 801d9fa:	fa0f f38a 	sxth.w	r3, sl
 801d9fe:	9304      	str	r3, [sp, #16]
 801da00:	9b03      	ldr	r3, [sp, #12]
 801da02:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801da06:	9b04      	ldr	r3, [sp, #16]
 801da08:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801da0c:	9b05      	ldr	r3, [sp, #20]
 801da0e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801da12:	a90e      	add	r1, sp, #56	; 0x38
 801da14:	9b06      	ldr	r3, [sp, #24]
 801da16:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801da1a:	a80c      	add	r0, sp, #48	; 0x30
 801da1c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801da20:	f7f8 fc6a 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801da24:	4640      	mov	r0, r8
 801da26:	f7f8 fc3f 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801da2a:	a80e      	add	r0, sp, #56	; 0x38
 801da2c:	f7f8 fc3c 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801da30:	4b38      	ldr	r3, [pc, #224]	; (801db14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801da32:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801da36:	881b      	ldrh	r3, [r3, #0]
 801da38:	9307      	str	r3, [sp, #28]
 801da3a:	682b      	ldr	r3, [r5, #0]
 801da3c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801db18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801da40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801da42:	4628      	mov	r0, r5
 801da44:	4798      	blx	r3
 801da46:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801da4a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801da4e:	4681      	mov	r9, r0
 801da50:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801da54:	f8db 0000 	ldr.w	r0, [fp]
 801da58:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801da5a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801da5e:	6803      	ldr	r3, [r0, #0]
 801da60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801da62:	4798      	blx	r3
 801da64:	4607      	mov	r7, r0
 801da66:	f8db 0000 	ldr.w	r0, [fp]
 801da6a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801da6e:	6803      	ldr	r3, [r0, #0]
 801da70:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801da74:	9109      	str	r1, [sp, #36]	; 0x24
 801da76:	9208      	str	r2, [sp, #32]
 801da78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801da7a:	4798      	blx	r3
 801da7c:	f010 0f01 	tst.w	r0, #1
 801da80:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801da84:	d012      	beq.n	801daac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801da86:	f8db 0000 	ldr.w	r0, [fp]
 801da8a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801da8e:	6803      	ldr	r3, [r0, #0]
 801da90:	9200      	str	r2, [sp, #0]
 801da92:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801da94:	e898 0006 	ldmia.w	r8, {r1, r2}
 801da98:	462b      	mov	r3, r5
 801da9a:	47b0      	blx	r6
 801da9c:	9b03      	ldr	r3, [sp, #12]
 801da9e:	8023      	strh	r3, [r4, #0]
 801daa0:	9b04      	ldr	r3, [sp, #16]
 801daa2:	8063      	strh	r3, [r4, #2]
 801daa4:	9b05      	ldr	r3, [sp, #20]
 801daa6:	80a3      	strh	r3, [r4, #4]
 801daa8:	9b06      	ldr	r3, [sp, #24]
 801daaa:	e78b      	b.n	801d9c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801daac:	fb09 f202 	mul.w	r2, r9, r2
 801dab0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801dab4:	440f      	add	r7, r1
 801dab6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801daba:	b166      	cbz	r6, 801dad6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801dabc:	9a07      	ldr	r2, [sp, #28]
 801dabe:	4592      	cmp	sl, r2
 801dac0:	d109      	bne.n	801dad6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801dac2:	f8db 0000 	ldr.w	r0, [fp]
 801dac6:	6802      	ldr	r2, [r0, #0]
 801dac8:	fb09 f303 	mul.w	r3, r9, r3
 801dacc:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801dace:	4629      	mov	r1, r5
 801dad0:	463a      	mov	r2, r7
 801dad2:	47b0      	blx	r6
 801dad4:	e7e2      	b.n	801da9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801dad6:	fb0a f303 	mul.w	r3, sl, r3
 801dada:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801db18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801dade:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801dae2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801dae6:	4545      	cmp	r5, r8
 801dae8:	d2d8      	bcs.n	801da9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801daea:	f8db 0000 	ldr.w	r0, [fp]
 801daee:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801daf2:	6802      	ldr	r2, [r0, #0]
 801daf4:	4629      	mov	r1, r5
 801daf6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801dafa:	005b      	lsls	r3, r3, #1
 801dafc:	463a      	mov	r2, r7
 801dafe:	47d0      	blx	sl
 801db00:	444f      	add	r7, r9
 801db02:	4435      	add	r5, r6
 801db04:	e7ef      	b.n	801dae6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801db06:	bf00      	nop
 801db08:	2002598c 	.word	0x2002598c
 801db0c:	2002598e 	.word	0x2002598e
 801db10:	20025990 	.word	0x20025990
 801db14:	20025992 	.word	0x20025992
 801db18:	20025998 	.word	0x20025998

0801db1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801db1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801db1e:	4606      	mov	r6, r0
 801db20:	b087      	sub	sp, #28
 801db22:	460c      	mov	r4, r1
 801db24:	4617      	mov	r7, r2
 801db26:	461d      	mov	r5, r3
 801db28:	b333      	cbz	r3, 801db78 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801db2a:	4608      	mov	r0, r1
 801db2c:	f7f5 faaf 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 801db30:	bb10      	cbnz	r0, 801db78 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801db32:	6820      	ldr	r0, [r4, #0]
 801db34:	6861      	ldr	r1, [r4, #4]
 801db36:	4c1c      	ldr	r4, [pc, #112]	; (801dba8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801db38:	ab04      	add	r3, sp, #16
 801db3a:	c303      	stmia	r3!, {r0, r1}
 801db3c:	a804      	add	r0, sp, #16
 801db3e:	f7f8 fbb3 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801db42:	6820      	ldr	r0, [r4, #0]
 801db44:	6803      	ldr	r3, [r0, #0]
 801db46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801db48:	4798      	blx	r3
 801db4a:	2dff      	cmp	r5, #255	; 0xff
 801db4c:	d016      	beq.n	801db7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801db4e:	f010 0f08 	tst.w	r0, #8
 801db52:	6820      	ldr	r0, [r4, #0]
 801db54:	d015      	beq.n	801db82 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801db56:	2400      	movs	r4, #0
 801db58:	6801      	ldr	r1, [r0, #0]
 801db5a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801db5e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801db62:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801db66:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801db6a:	9401      	str	r4, [sp, #4]
 801db6c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801db70:	9400      	str	r4, [sp, #0]
 801db72:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801db74:	4639      	mov	r1, r7
 801db76:	47a0      	blx	r4
 801db78:	b007      	add	sp, #28
 801db7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801db7c:	f010 0f02 	tst.w	r0, #2
 801db80:	e7e7      	b.n	801db52 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801db82:	6803      	ldr	r3, [r0, #0]
 801db84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db86:	4798      	blx	r3
 801db88:	4b08      	ldr	r3, [pc, #32]	; (801dbac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801db8a:	881a      	ldrh	r2, [r3, #0]
 801db8c:	6833      	ldr	r3, [r6, #0]
 801db8e:	e9cd 7500 	strd	r7, r5, [sp]
 801db92:	4601      	mov	r1, r0
 801db94:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801db96:	4630      	mov	r0, r6
 801db98:	ab04      	add	r3, sp, #16
 801db9a:	47a8      	blx	r5
 801db9c:	6820      	ldr	r0, [r4, #0]
 801db9e:	6803      	ldr	r3, [r0, #0]
 801dba0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dba2:	4798      	blx	r3
 801dba4:	e7e8      	b.n	801db78 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801dba6:	bf00      	nop
 801dba8:	20025998 	.word	0x20025998
 801dbac:	20025992 	.word	0x20025992

0801dbb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801dbb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dbb4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801dbb8:	9e08      	ldr	r6, [sp, #32]
 801dbba:	4688      	mov	r8, r1
 801dbbc:	4614      	mov	r4, r2
 801dbbe:	461d      	mov	r5, r3
 801dbc0:	2f00      	cmp	r7, #0
 801dbc2:	f000 80a9 	beq.w	801dd18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dbc6:	4618      	mov	r0, r3
 801dbc8:	f7f5 fa61 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 801dbcc:	2800      	cmp	r0, #0
 801dbce:	f040 80a3 	bne.w	801dd18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dbd2:	f9b5 1000 	ldrsh.w	r1, [r5]
 801dbd6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801dbda:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801dbde:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801dbe2:	fb04 1303 	mla	r3, r4, r3, r1
 801dbe6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801dbea:	4365      	muls	r5, r4
 801dbec:	2fff      	cmp	r7, #255	; 0xff
 801dbee:	eba4 0200 	sub.w	r2, r4, r0
 801dbf2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dbf6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801dbfa:	d04a      	beq.n	801dc92 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801dbfc:	b2bc      	uxth	r4, r7
 801dbfe:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801dc02:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801dc06:	fa5f f788 	uxtb.w	r7, r8
 801dc0a:	b2f3      	uxtb	r3, r6
 801dc0c:	0040      	lsls	r0, r0, #1
 801dc0e:	fb0e fe04 	mul.w	lr, lr, r4
 801dc12:	4367      	muls	r7, r4
 801dc14:	4363      	muls	r3, r4
 801dc16:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801dc1a:	fa1f fc8c 	uxth.w	ip, ip
 801dc1e:	42a9      	cmp	r1, r5
 801dc20:	d27a      	bcs.n	801dd18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dc22:	eb01 0900 	add.w	r9, r1, r0
 801dc26:	4549      	cmp	r1, r9
 801dc28:	d231      	bcs.n	801dc8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801dc2a:	880a      	ldrh	r2, [r1, #0]
 801dc2c:	1214      	asrs	r4, r2, #8
 801dc2e:	10d6      	asrs	r6, r2, #3
 801dc30:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801dc34:	00d2      	lsls	r2, r2, #3
 801dc36:	b2d2      	uxtb	r2, r2
 801dc38:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dc3c:	fb14 f40c 	smulbb	r4, r4, ip
 801dc40:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dc44:	4474      	add	r4, lr
 801dc46:	fb12 f20c 	smulbb	r2, r2, ip
 801dc4a:	b2a4      	uxth	r4, r4
 801dc4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dc50:	441a      	add	r2, r3
 801dc52:	b292      	uxth	r2, r2
 801dc54:	f104 0a01 	add.w	sl, r4, #1
 801dc58:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801dc5c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801dc60:	fb16 f60c 	smulbb	r6, r6, ip
 801dc64:	f102 0a01 	add.w	sl, r2, #1
 801dc68:	443e      	add	r6, r7
 801dc6a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801dc6e:	b2b6      	uxth	r6, r6
 801dc70:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801dc74:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dc78:	4322      	orrs	r2, r4
 801dc7a:	1c74      	adds	r4, r6, #1
 801dc7c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801dc80:	0976      	lsrs	r6, r6, #5
 801dc82:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801dc86:	4332      	orrs	r2, r6
 801dc88:	f821 2b02 	strh.w	r2, [r1], #2
 801dc8c:	e7cb      	b.n	801dc26 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801dc8e:	4441      	add	r1, r8
 801dc90:	e7c5      	b.n	801dc1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801dc92:	4f22      	ldr	r7, [pc, #136]	; (801dd1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801dc94:	0973      	lsrs	r3, r6, #5
 801dc96:	ea08 0707 	and.w	r7, r8, r7
 801dc9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dc9e:	433b      	orrs	r3, r7
 801dca0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801dca4:	4333      	orrs	r3, r6
 801dca6:	07e7      	lsls	r7, r4, #31
 801dca8:	b29b      	uxth	r3, r3
 801dcaa:	d50b      	bpl.n	801dcc4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801dcac:	0040      	lsls	r0, r0, #1
 801dcae:	0052      	lsls	r2, r2, #1
 801dcb0:	42a9      	cmp	r1, r5
 801dcb2:	d231      	bcs.n	801dd18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dcb4:	180c      	adds	r4, r1, r0
 801dcb6:	42a1      	cmp	r1, r4
 801dcb8:	d202      	bcs.n	801dcc0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801dcba:	f821 3b02 	strh.w	r3, [r1], #2
 801dcbe:	e7fa      	b.n	801dcb6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801dcc0:	4411      	add	r1, r2
 801dcc2:	e7f5      	b.n	801dcb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801dcc4:	078e      	lsls	r6, r1, #30
 801dcc6:	d008      	beq.n	801dcda <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801dcc8:	0066      	lsls	r6, r4, #1
 801dcca:	460a      	mov	r2, r1
 801dccc:	42aa      	cmp	r2, r5
 801dcce:	d202      	bcs.n	801dcd6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801dcd0:	8013      	strh	r3, [r2, #0]
 801dcd2:	4432      	add	r2, r6
 801dcd4:	e7fa      	b.n	801dccc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801dcd6:	3102      	adds	r1, #2
 801dcd8:	3801      	subs	r0, #1
 801dcda:	07c2      	lsls	r2, r0, #31
 801dcdc:	d50b      	bpl.n	801dcf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801dcde:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801dce2:	3a01      	subs	r2, #1
 801dce4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801dce8:	0066      	lsls	r6, r4, #1
 801dcea:	42aa      	cmp	r2, r5
 801dcec:	d202      	bcs.n	801dcf4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801dcee:	8013      	strh	r3, [r2, #0]
 801dcf0:	4432      	add	r2, r6
 801dcf2:	e7fa      	b.n	801dcea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801dcf4:	3801      	subs	r0, #1
 801dcf6:	b178      	cbz	r0, 801dd18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dcf8:	1040      	asrs	r0, r0, #1
 801dcfa:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801dcfe:	0080      	lsls	r0, r0, #2
 801dd00:	0064      	lsls	r4, r4, #1
 801dd02:	42a9      	cmp	r1, r5
 801dd04:	d208      	bcs.n	801dd18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dd06:	180e      	adds	r6, r1, r0
 801dd08:	460a      	mov	r2, r1
 801dd0a:	42b2      	cmp	r2, r6
 801dd0c:	d202      	bcs.n	801dd14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801dd0e:	f842 3b04 	str.w	r3, [r2], #4
 801dd12:	e7fa      	b.n	801dd0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801dd14:	4421      	add	r1, r4
 801dd16:	e7f4      	b.n	801dd02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801dd18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dd1c:	00fff800 	.word	0x00fff800

0801dd20 <_ZN8touchgfx8LCD16bppC1Ev>:
 801dd20:	2200      	movs	r2, #0
 801dd22:	4912      	ldr	r1, [pc, #72]	; (801dd6c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801dd24:	6042      	str	r2, [r0, #4]
 801dd26:	6001      	str	r1, [r0, #0]
 801dd28:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801dd2c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801dd30:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801dd34:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801dd38:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801dd3c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801dd40:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801dd44:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801dd48:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801dd4c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801dd50:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801dd54:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801dd58:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801dd5c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801dd60:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801dd64:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801dd68:	4770      	bx	lr
 801dd6a:	bf00      	nop
 801dd6c:	0802c3d0 	.word	0x0802c3d0

0801dd70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801dd70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd74:	460d      	mov	r5, r1
 801dd76:	b08d      	sub	sp, #52	; 0x34
 801dd78:	4604      	mov	r4, r0
 801dd7a:	6808      	ldr	r0, [r1, #0]
 801dd7c:	6849      	ldr	r1, [r1, #4]
 801dd7e:	4699      	mov	r9, r3
 801dd80:	ab08      	add	r3, sp, #32
 801dd82:	c303      	stmia	r3!, {r0, r1}
 801dd84:	6810      	ldr	r0, [r2, #0]
 801dd86:	6851      	ldr	r1, [r2, #4]
 801dd88:	ab0a      	add	r3, sp, #40	; 0x28
 801dd8a:	c303      	stmia	r3!, {r0, r1}
 801dd8c:	a808      	add	r0, sp, #32
 801dd8e:	f7f8 fa8b 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dd92:	4629      	mov	r1, r5
 801dd94:	a80a      	add	r0, sp, #40	; 0x28
 801dd96:	f7f8 faaf 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dd9a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801dd9e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801dda2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801dda6:	4d63      	ldr	r5, [pc, #396]	; (801df34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dda8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801ddac:	6828      	ldr	r0, [r5, #0]
 801ddae:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ddb2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ddb6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ddba:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801ddbe:	440a      	add	r2, r1
 801ddc0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801ddc4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801ddc8:	4413      	add	r3, r2
 801ddca:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ddce:	6803      	ldr	r3, [r0, #0]
 801ddd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ddd2:	4798      	blx	r3
 801ddd4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ddd8:	d119      	bne.n	801de0e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801ddda:	f010 0f20 	tst.w	r0, #32
 801ddde:	6828      	ldr	r0, [r5, #0]
 801dde0:	d018      	beq.n	801de14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801dde2:	2500      	movs	r5, #0
 801dde4:	6801      	ldr	r1, [r0, #0]
 801dde6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ddea:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801ddee:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ddf2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801ddf6:	9502      	str	r5, [sp, #8]
 801ddf8:	b2b6      	uxth	r6, r6
 801ddfa:	fa1f f588 	uxth.w	r5, r8
 801ddfe:	9601      	str	r6, [sp, #4]
 801de00:	9500      	str	r5, [sp, #0]
 801de02:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801de04:	4621      	mov	r1, r4
 801de06:	47a8      	blx	r5
 801de08:	b00d      	add	sp, #52	; 0x34
 801de0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de0e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801de12:	e7e4      	b.n	801ddde <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801de14:	6803      	ldr	r3, [r0, #0]
 801de16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801de18:	4798      	blx	r3
 801de1a:	4947      	ldr	r1, [pc, #284]	; (801df38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801de1c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801de20:	880b      	ldrh	r3, [r1, #0]
 801de22:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801de26:	fb03 5202 	mla	r2, r3, r2, r5
 801de2a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801de2e:	4373      	muls	r3, r6
 801de30:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801de34:	9307      	str	r3, [sp, #28]
 801de36:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801de3a:	9306      	str	r3, [sp, #24]
 801de3c:	468a      	mov	sl, r1
 801de3e:	9b07      	ldr	r3, [sp, #28]
 801de40:	4298      	cmp	r0, r3
 801de42:	d270      	bcs.n	801df26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801de44:	9b06      	ldr	r3, [sp, #24]
 801de46:	4621      	mov	r1, r4
 801de48:	eb00 0b03 	add.w	fp, r0, r3
 801de4c:	4558      	cmp	r0, fp
 801de4e:	d25d      	bcs.n	801df0c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801de50:	f851 4b04 	ldr.w	r4, [r1], #4
 801de54:	0e23      	lsrs	r3, r4, #24
 801de56:	d014      	beq.n	801de82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801de58:	2bff      	cmp	r3, #255	; 0xff
 801de5a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801de5e:	d112      	bne.n	801de86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801de60:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801de64:	d10f      	bne.n	801de86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801de66:	0963      	lsrs	r3, r4, #5
 801de68:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801de6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801de70:	f02c 0c07 	bic.w	ip, ip, #7
 801de74:	ea43 0c0c 	orr.w	ip, r3, ip
 801de78:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801de7c:	ea4c 0404 	orr.w	r4, ip, r4
 801de80:	8004      	strh	r4, [r0, #0]
 801de82:	3002      	adds	r0, #2
 801de84:	e7e2      	b.n	801de4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801de86:	fb09 f303 	mul.w	r3, r9, r3
 801de8a:	8807      	ldrh	r7, [r0, #0]
 801de8c:	1c5a      	adds	r2, r3, #1
 801de8e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801de92:	1212      	asrs	r2, r2, #8
 801de94:	123e      	asrs	r6, r7, #8
 801de96:	b293      	uxth	r3, r2
 801de98:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801de9c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dea0:	43d2      	mvns	r2, r2
 801dea2:	b2d2      	uxtb	r2, r2
 801dea4:	10fd      	asrs	r5, r7, #3
 801dea6:	fb1e fe03 	smulbb	lr, lr, r3
 801deaa:	00ff      	lsls	r7, r7, #3
 801deac:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801deb0:	fb06 e602 	mla	r6, r6, r2, lr
 801deb4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801deb8:	b2ff      	uxtb	r7, r7
 801deba:	fa5f fc8c 	uxtb.w	ip, ip
 801debe:	b2e4      	uxtb	r4, r4
 801dec0:	b2b6      	uxth	r6, r6
 801dec2:	fb1c fc03 	smulbb	ip, ip, r3
 801dec6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801deca:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dece:	fb14 f403 	smulbb	r4, r4, r3
 801ded2:	fb05 c502 	mla	r5, r5, r2, ip
 801ded6:	f106 0e01 	add.w	lr, r6, #1
 801deda:	fb07 4702 	mla	r7, r7, r2, r4
 801dede:	b2ad      	uxth	r5, r5
 801dee0:	b2bf      	uxth	r7, r7
 801dee2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801dee6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801deea:	f105 0c01 	add.w	ip, r5, #1
 801deee:	1c7e      	adds	r6, r7, #1
 801def0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801def4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801def8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801defc:	096d      	lsrs	r5, r5, #5
 801defe:	ea46 060e 	orr.w	r6, r6, lr
 801df02:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801df06:	432e      	orrs	r6, r5
 801df08:	8006      	strh	r6, [r0, #0]
 801df0a:	e7ba      	b.n	801de82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801df0c:	f8ba 3000 	ldrh.w	r3, [sl]
 801df10:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801df14:	eba3 0308 	sub.w	r3, r3, r8
 801df18:	eba4 0408 	sub.w	r4, r4, r8
 801df1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801df20:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801df24:	e78b      	b.n	801de3e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801df26:	4b03      	ldr	r3, [pc, #12]	; (801df34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801df28:	6818      	ldr	r0, [r3, #0]
 801df2a:	6803      	ldr	r3, [r0, #0]
 801df2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801df2e:	4798      	blx	r3
 801df30:	e76a      	b.n	801de08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801df32:	bf00      	nop
 801df34:	20025998 	.word	0x20025998
 801df38:	20025992 	.word	0x20025992

0801df3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801df3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801df40:	460c      	mov	r4, r1
 801df42:	b085      	sub	sp, #20
 801df44:	6810      	ldr	r0, [r2, #0]
 801df46:	6851      	ldr	r1, [r2, #4]
 801df48:	466d      	mov	r5, sp
 801df4a:	c503      	stmia	r5!, {r0, r1}
 801df4c:	6818      	ldr	r0, [r3, #0]
 801df4e:	6859      	ldr	r1, [r3, #4]
 801df50:	4616      	mov	r6, r2
 801df52:	c503      	stmia	r5!, {r0, r1}
 801df54:	4668      	mov	r0, sp
 801df56:	f7f8 f9a7 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801df5a:	4631      	mov	r1, r6
 801df5c:	a802      	add	r0, sp, #8
 801df5e:	f7f8 f9cb 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801df62:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801df66:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801df6a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801df6e:	4d28      	ldr	r5, [pc, #160]	; (801e010 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801df70:	4e28      	ldr	r6, [pc, #160]	; (801e014 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801df72:	6828      	ldr	r0, [r5, #0]
 801df74:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801df78:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801df7c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801df80:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801df84:	f8bd 1000 	ldrh.w	r1, [sp]
 801df88:	440a      	add	r2, r1
 801df8a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801df8e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801df92:	4413      	add	r3, r2
 801df94:	f8ad 300a 	strh.w	r3, [sp, #10]
 801df98:	6803      	ldr	r3, [r0, #0]
 801df9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df9c:	4798      	blx	r3
 801df9e:	8833      	ldrh	r3, [r6, #0]
 801dfa0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801dfa4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801dfa8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801e018 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801dfac:	fb03 1202 	mla	r2, r3, r2, r1
 801dfb0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dfb4:	fb08 f303 	mul.w	r3, r8, r3
 801dfb8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dfbc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801dfc0:	4298      	cmp	r0, r3
 801dfc2:	d21d      	bcs.n	801e000 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801dfc4:	eb00 080c 	add.w	r8, r0, ip
 801dfc8:	4540      	cmp	r0, r8
 801dfca:	d20f      	bcs.n	801dfec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801dfcc:	f854 1b04 	ldr.w	r1, [r4], #4
 801dfd0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801dfd4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801dfd8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dfdc:	ea42 0209 	orr.w	r2, r2, r9
 801dfe0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801dfe4:	430a      	orrs	r2, r1
 801dfe6:	f820 2b02 	strh.w	r2, [r0], #2
 801dfea:	e7ed      	b.n	801dfc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801dfec:	8832      	ldrh	r2, [r6, #0]
 801dfee:	1bd2      	subs	r2, r2, r7
 801dff0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dff4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801dff8:	1bd2      	subs	r2, r2, r7
 801dffa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801dffe:	e7df      	b.n	801dfc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801e000:	6828      	ldr	r0, [r5, #0]
 801e002:	6803      	ldr	r3, [r0, #0]
 801e004:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e006:	4798      	blx	r3
 801e008:	b005      	add	sp, #20
 801e00a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e00e:	bf00      	nop
 801e010:	20025998 	.word	0x20025998
 801e014:	20025992 	.word	0x20025992
 801e018:	fffff800 	.word	0xfffff800

0801e01c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801e01c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e020:	460e      	mov	r6, r1
 801e022:	b08e      	sub	sp, #56	; 0x38
 801e024:	4604      	mov	r4, r0
 801e026:	6808      	ldr	r0, [r1, #0]
 801e028:	6849      	ldr	r1, [r1, #4]
 801e02a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801e204 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801e02e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801e208 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801e032:	461d      	mov	r5, r3
 801e034:	ab0a      	add	r3, sp, #40	; 0x28
 801e036:	c303      	stmia	r3!, {r0, r1}
 801e038:	6810      	ldr	r0, [r2, #0]
 801e03a:	6851      	ldr	r1, [r2, #4]
 801e03c:	ab0c      	add	r3, sp, #48	; 0x30
 801e03e:	c303      	stmia	r3!, {r0, r1}
 801e040:	a80a      	add	r0, sp, #40	; 0x28
 801e042:	f7f8 f931 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e046:	4631      	mov	r1, r6
 801e048:	a80c      	add	r0, sp, #48	; 0x30
 801e04a:	f7f8 f955 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e04e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801e052:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801e056:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e05a:	f8d8 0000 	ldr.w	r0, [r8]
 801e05e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801e062:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801e066:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e06a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e06e:	440c      	add	r4, r1
 801e070:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801e074:	440a      	add	r2, r1
 801e076:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801e07a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801e07e:	4413      	add	r3, r2
 801e080:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e084:	6803      	ldr	r3, [r0, #0]
 801e086:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e088:	4798      	blx	r3
 801e08a:	2dff      	cmp	r5, #255	; 0xff
 801e08c:	d124      	bne.n	801e0d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801e08e:	f010 0f01 	tst.w	r0, #1
 801e092:	f8d8 0000 	ldr.w	r0, [r8]
 801e096:	d022      	beq.n	801e0de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801e098:	2100      	movs	r1, #0
 801e09a:	f8d0 c000 	ldr.w	ip, [r0]
 801e09e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801e0a2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801e0a6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801e0aa:	f04f 0e01 	mov.w	lr, #1
 801e0ae:	f8cd e018 	str.w	lr, [sp, #24]
 801e0b2:	f8b9 e000 	ldrh.w	lr, [r9]
 801e0b6:	9503      	str	r5, [sp, #12]
 801e0b8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801e0bc:	b2b6      	uxth	r6, r6
 801e0be:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e0c2:	9102      	str	r1, [sp, #8]
 801e0c4:	b2bf      	uxth	r7, r7
 801e0c6:	9601      	str	r6, [sp, #4]
 801e0c8:	9700      	str	r7, [sp, #0]
 801e0ca:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801e0ce:	4621      	mov	r1, r4
 801e0d0:	47a8      	blx	r5
 801e0d2:	b00e      	add	sp, #56	; 0x38
 801e0d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e0d8:	f010 0f04 	tst.w	r0, #4
 801e0dc:	e7d9      	b.n	801e092 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801e0de:	6803      	ldr	r3, [r0, #0]
 801e0e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e0e2:	4798      	blx	r3
 801e0e4:	f8b9 3000 	ldrh.w	r3, [r9]
 801e0e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801e0ec:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801e0f0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e0f4:	fb03 1202 	mla	r2, r3, r2, r1
 801e0f8:	ebac 0c07 	sub.w	ip, ip, r7
 801e0fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e100:	435e      	muls	r6, r3
 801e102:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801e106:	2dff      	cmp	r5, #255	; 0xff
 801e108:	eba3 0707 	sub.w	r7, r3, r7
 801e10c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801e110:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e114:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801e118:	d049      	beq.n	801e1ae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801e11a:	43eb      	mvns	r3, r5
 801e11c:	fa1f f985 	uxth.w	r9, r5
 801e120:	b2db      	uxtb	r3, r3
 801e122:	42b0      	cmp	r0, r6
 801e124:	d266      	bcs.n	801e1f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e126:	eb00 0a0e 	add.w	sl, r0, lr
 801e12a:	4550      	cmp	r0, sl
 801e12c:	4621      	mov	r1, r4
 801e12e:	f104 0403 	add.w	r4, r4, #3
 801e132:	d25b      	bcs.n	801e1ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801e134:	8802      	ldrh	r2, [r0, #0]
 801e136:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e13a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801e13e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801e142:	fb11 f109 	smulbb	r1, r1, r9
 801e146:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801e14a:	10d5      	asrs	r5, r2, #3
 801e14c:	fb08 1803 	mla	r8, r8, r3, r1
 801e150:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801e154:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e158:	fb11 f109 	smulbb	r1, r1, r9
 801e15c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e160:	fb05 1503 	mla	r5, r5, r3, r1
 801e164:	00d2      	lsls	r2, r2, #3
 801e166:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e16a:	b2d2      	uxtb	r2, r2
 801e16c:	fb11 f109 	smulbb	r1, r1, r9
 801e170:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e174:	fa1f f888 	uxth.w	r8, r8
 801e178:	fb02 1203 	mla	r2, r2, r3, r1
 801e17c:	b292      	uxth	r2, r2
 801e17e:	f108 0101 	add.w	r1, r8, #1
 801e182:	b2ad      	uxth	r5, r5
 801e184:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801e188:	1c51      	adds	r1, r2, #1
 801e18a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e18e:	1c69      	adds	r1, r5, #1
 801e190:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e194:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801e198:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e19c:	096d      	lsrs	r5, r5, #5
 801e19e:	ea42 0208 	orr.w	r2, r2, r8
 801e1a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e1a6:	432a      	orrs	r2, r5
 801e1a8:	f820 2b02 	strh.w	r2, [r0], #2
 801e1ac:	e7bd      	b.n	801e12a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801e1ae:	4a14      	ldr	r2, [pc, #80]	; (801e200 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801e1b0:	42b0      	cmp	r0, r6
 801e1b2:	d21f      	bcs.n	801e1f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e1b4:	eb00 050e 	add.w	r5, r0, lr
 801e1b8:	42a8      	cmp	r0, r5
 801e1ba:	4621      	mov	r1, r4
 801e1bc:	f104 0403 	add.w	r4, r4, #3
 801e1c0:	d210      	bcs.n	801e1e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801e1c2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801e1c6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e1ca:	00db      	lsls	r3, r3, #3
 801e1cc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801e1d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e1d4:	430b      	orrs	r3, r1
 801e1d6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e1da:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801e1de:	f820 3b02 	strh.w	r3, [r0], #2
 801e1e2:	e7e9      	b.n	801e1b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801e1e4:	4438      	add	r0, r7
 801e1e6:	eb01 040c 	add.w	r4, r1, ip
 801e1ea:	e7e1      	b.n	801e1b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801e1ec:	4438      	add	r0, r7
 801e1ee:	eb01 040c 	add.w	r4, r1, ip
 801e1f2:	e796      	b.n	801e122 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801e1f4:	4b03      	ldr	r3, [pc, #12]	; (801e204 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801e1f6:	6818      	ldr	r0, [r3, #0]
 801e1f8:	6803      	ldr	r3, [r0, #0]
 801e1fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e1fc:	4798      	blx	r3
 801e1fe:	e768      	b.n	801e0d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801e200:	fffff800 	.word	0xfffff800
 801e204:	20025998 	.word	0x20025998
 801e208:	20025992 	.word	0x20025992

0801e20c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801e20c:	b4f0      	push	{r4, r5, r6, r7}
 801e20e:	4616      	mov	r6, r2
 801e210:	2e01      	cmp	r6, #1
 801e212:	461c      	mov	r4, r3
 801e214:	460d      	mov	r5, r1
 801e216:	9a04      	ldr	r2, [sp, #16]
 801e218:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801e21c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801e220:	d012      	beq.n	801e248 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801e222:	d303      	bcc.n	801e22c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801e224:	2e02      	cmp	r6, #2
 801e226:	d00a      	beq.n	801e23e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801e228:	bcf0      	pop	{r4, r5, r6, r7}
 801e22a:	4770      	bx	lr
 801e22c:	6805      	ldr	r5, [r0, #0]
 801e22e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801e232:	68ed      	ldr	r5, [r5, #12]
 801e234:	4613      	mov	r3, r2
 801e236:	46ac      	mov	ip, r5
 801e238:	4622      	mov	r2, r4
 801e23a:	bcf0      	pop	{r4, r5, r6, r7}
 801e23c:	4760      	bx	ip
 801e23e:	4621      	mov	r1, r4
 801e240:	4628      	mov	r0, r5
 801e242:	bcf0      	pop	{r4, r5, r6, r7}
 801e244:	f7ff bd94 	b.w	801dd70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e248:	4621      	mov	r1, r4
 801e24a:	4628      	mov	r0, r5
 801e24c:	bcf0      	pop	{r4, r5, r6, r7}
 801e24e:	f7ff bee5 	b.w	801e01c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801e254 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801e254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e258:	4681      	mov	r9, r0
 801e25a:	b093      	sub	sp, #76	; 0x4c
 801e25c:	6810      	ldr	r0, [r2, #0]
 801e25e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801e262:	4f6d      	ldr	r7, [pc, #436]	; (801e418 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801e264:	4688      	mov	r8, r1
 801e266:	6851      	ldr	r1, [r2, #4]
 801e268:	ac0e      	add	r4, sp, #56	; 0x38
 801e26a:	c403      	stmia	r4!, {r0, r1}
 801e26c:	6818      	ldr	r0, [r3, #0]
 801e26e:	6859      	ldr	r1, [r3, #4]
 801e270:	ac10      	add	r4, sp, #64	; 0x40
 801e272:	4616      	mov	r6, r2
 801e274:	c403      	stmia	r4!, {r0, r1}
 801e276:	a80e      	add	r0, sp, #56	; 0x38
 801e278:	f7f8 f816 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e27c:	4631      	mov	r1, r6
 801e27e:	a810      	add	r0, sp, #64	; 0x40
 801e280:	f7f8 f83a 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e284:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801e288:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801e28c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801e290:	4e62      	ldr	r6, [pc, #392]	; (801e41c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e292:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801e296:	6830      	ldr	r0, [r6, #0]
 801e298:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801e29c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e2a0:	4489      	add	r9, r1
 801e2a2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801e2a6:	440a      	add	r2, r1
 801e2a8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801e2ac:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e2b0:	4413      	add	r3, r2
 801e2b2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801e2b6:	6803      	ldr	r3, [r0, #0]
 801e2b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e2ba:	4798      	blx	r3
 801e2bc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e2c0:	6830      	ldr	r0, [r6, #0]
 801e2c2:	d01d      	beq.n	801e300 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e2c4:	2200      	movs	r2, #0
 801e2c6:	6801      	ldr	r1, [r0, #0]
 801e2c8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801e2cc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e2d0:	220b      	movs	r2, #11
 801e2d2:	9207      	str	r2, [sp, #28]
 801e2d4:	883a      	ldrh	r2, [r7, #0]
 801e2d6:	9206      	str	r2, [sp, #24]
 801e2d8:	2201      	movs	r2, #1
 801e2da:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e2de:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801e2e2:	9203      	str	r2, [sp, #12]
 801e2e4:	b2a4      	uxth	r4, r4
 801e2e6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e2ea:	9200      	str	r2, [sp, #0]
 801e2ec:	b2ad      	uxth	r5, r5
 801e2ee:	9502      	str	r5, [sp, #8]
 801e2f0:	9401      	str	r4, [sp, #4]
 801e2f2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801e2f4:	4642      	mov	r2, r8
 801e2f6:	4649      	mov	r1, r9
 801e2f8:	47a0      	blx	r4
 801e2fa:	b013      	add	sp, #76	; 0x4c
 801e2fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e300:	6803      	ldr	r3, [r0, #0]
 801e302:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e304:	4798      	blx	r3
 801e306:	883b      	ldrh	r3, [r7, #0]
 801e308:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e30c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e310:	fb03 1202 	mla	r2, r3, r2, r1
 801e314:	435d      	muls	r5, r3
 801e316:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e31a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e31e:	920c      	str	r2, [sp, #48]	; 0x30
 801e320:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e324:	1b12      	subs	r2, r2, r4
 801e326:	920d      	str	r2, [sp, #52]	; 0x34
 801e328:	0062      	lsls	r2, r4, #1
 801e32a:	1b1c      	subs	r4, r3, r4
 801e32c:	0063      	lsls	r3, r4, #1
 801e32e:	920a      	str	r2, [sp, #40]	; 0x28
 801e330:	930b      	str	r3, [sp, #44]	; 0x2c
 801e332:	f04f 0e04 	mov.w	lr, #4
 801e336:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e338:	4298      	cmp	r0, r3
 801e33a:	d266      	bcs.n	801e40a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e33c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e33e:	eb00 0b03 	add.w	fp, r0, r3
 801e342:	4558      	cmp	r0, fp
 801e344:	d25c      	bcs.n	801e400 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e346:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e34a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e34e:	f858 2003 	ldr.w	r2, [r8, r3]
 801e352:	0e11      	lsrs	r1, r2, #24
 801e354:	d012      	beq.n	801e37c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e356:	29ff      	cmp	r1, #255	; 0xff
 801e358:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e35c:	d110      	bne.n	801e380 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e35e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e362:	d10d      	bne.n	801e380 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e364:	0953      	lsrs	r3, r2, #5
 801e366:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801e36a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e36e:	f027 0707 	bic.w	r7, r7, #7
 801e372:	431f      	orrs	r7, r3
 801e374:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e378:	433a      	orrs	r2, r7
 801e37a:	8002      	strh	r2, [r0, #0]
 801e37c:	3002      	adds	r0, #2
 801e37e:	e7e0      	b.n	801e342 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e380:	fb0a f101 	mul.w	r1, sl, r1
 801e384:	8806      	ldrh	r6, [r0, #0]
 801e386:	1c4b      	adds	r3, r1, #1
 801e388:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e38c:	1235      	asrs	r5, r6, #8
 801e38e:	10f4      	asrs	r4, r6, #3
 801e390:	121b      	asrs	r3, r3, #8
 801e392:	00f6      	lsls	r6, r6, #3
 801e394:	b299      	uxth	r1, r3
 801e396:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e39a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e39e:	b2f6      	uxtb	r6, r6
 801e3a0:	43db      	mvns	r3, r3
 801e3a2:	b2d2      	uxtb	r2, r2
 801e3a4:	b2db      	uxtb	r3, r3
 801e3a6:	fb1c fc01 	smulbb	ip, ip, r1
 801e3aa:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e3ae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e3b2:	fb12 f201 	smulbb	r2, r2, r1
 801e3b6:	fb05 c503 	mla	r5, r5, r3, ip
 801e3ba:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e3be:	b2ff      	uxtb	r7, r7
 801e3c0:	fb06 2203 	mla	r2, r6, r3, r2
 801e3c4:	b2ad      	uxth	r5, r5
 801e3c6:	fb17 f701 	smulbb	r7, r7, r1
 801e3ca:	b292      	uxth	r2, r2
 801e3cc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e3d0:	fb04 7403 	mla	r4, r4, r3, r7
 801e3d4:	f105 0c01 	add.w	ip, r5, #1
 801e3d8:	1c57      	adds	r7, r2, #1
 801e3da:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e3de:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e3e2:	b2a4      	uxth	r4, r4
 801e3e4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e3e8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e3ec:	433d      	orrs	r5, r7
 801e3ee:	1c67      	adds	r7, r4, #1
 801e3f0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e3f4:	0964      	lsrs	r4, r4, #5
 801e3f6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e3fa:	4325      	orrs	r5, r4
 801e3fc:	8005      	strh	r5, [r0, #0]
 801e3fe:	e7bd      	b.n	801e37c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e400:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e402:	4418      	add	r0, r3
 801e404:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e406:	4499      	add	r9, r3
 801e408:	e795      	b.n	801e336 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e40a:	4b04      	ldr	r3, [pc, #16]	; (801e41c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e40c:	6818      	ldr	r0, [r3, #0]
 801e40e:	6803      	ldr	r3, [r0, #0]
 801e410:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e412:	4798      	blx	r3
 801e414:	e771      	b.n	801e2fa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e416:	bf00      	nop
 801e418:	20025992 	.word	0x20025992
 801e41c:	20025998 	.word	0x20025998

0801e420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e424:	b087      	sub	sp, #28
 801e426:	4680      	mov	r8, r0
 801e428:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e42c:	460d      	mov	r5, r1
 801e42e:	4614      	mov	r4, r2
 801e430:	2e00      	cmp	r6, #0
 801e432:	f000 80b9 	beq.w	801e5a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e436:	6810      	ldr	r0, [r2, #0]
 801e438:	6851      	ldr	r1, [r2, #4]
 801e43a:	af02      	add	r7, sp, #8
 801e43c:	c703      	stmia	r7!, {r0, r1}
 801e43e:	6818      	ldr	r0, [r3, #0]
 801e440:	6859      	ldr	r1, [r3, #4]
 801e442:	af04      	add	r7, sp, #16
 801e444:	c703      	stmia	r7!, {r0, r1}
 801e446:	a802      	add	r0, sp, #8
 801e448:	f7f7 ff2e 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e44c:	4621      	mov	r1, r4
 801e44e:	a804      	add	r0, sp, #16
 801e450:	f7f7 ff52 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e454:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e458:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e45c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e460:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e464:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e468:	eb08 0401 	add.w	r4, r8, r1
 801e46c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e470:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e474:	440a      	add	r2, r1
 801e476:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e47a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e47e:	4413      	add	r3, r2
 801e480:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e484:	4b4a      	ldr	r3, [pc, #296]	; (801e5b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e486:	6818      	ldr	r0, [r3, #0]
 801e488:	6803      	ldr	r3, [r0, #0]
 801e48a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e48c:	4798      	blx	r3
 801e48e:	4b49      	ldr	r3, [pc, #292]	; (801e5b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e490:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e494:	881a      	ldrh	r2, [r3, #0]
 801e496:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e49a:	2eff      	cmp	r6, #255	; 0xff
 801e49c:	fb02 c101 	mla	r1, r2, r1, ip
 801e4a0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e4a4:	fb02 f207 	mul.w	r2, r2, r7
 801e4a8:	f105 0104 	add.w	r1, r5, #4
 801e4ac:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e4b0:	461d      	mov	r5, r3
 801e4b2:	d05a      	beq.n	801e56a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e4b4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e4b8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e4bc:	b2b6      	uxth	r6, r6
 801e4be:	fa1f fe8e 	uxth.w	lr, lr
 801e4c2:	9301      	str	r3, [sp, #4]
 801e4c4:	4282      	cmp	r2, r0
 801e4c6:	d96a      	bls.n	801e59e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e4c8:	eb00 0b0a 	add.w	fp, r0, sl
 801e4cc:	4583      	cmp	fp, r0
 801e4ce:	d940      	bls.n	801e552 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e4d0:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e4d4:	8805      	ldrh	r5, [r0, #0]
 801e4d6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e4da:	122f      	asrs	r7, r5, #8
 801e4dc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e4e0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e4e4:	fb17 f70e 	smulbb	r7, r7, lr
 801e4e8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e4ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e4f0:	00ed      	lsls	r5, r5, #3
 801e4f2:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e4f6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e4fa:	10df      	asrs	r7, r3, #3
 801e4fc:	b2ed      	uxtb	r5, r5
 801e4fe:	00db      	lsls	r3, r3, #3
 801e500:	fa1f fc8c 	uxth.w	ip, ip
 801e504:	fb19 f90e 	smulbb	r9, r9, lr
 801e508:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e50c:	b2db      	uxtb	r3, r3
 801e50e:	fb15 f50e 	smulbb	r5, r5, lr
 801e512:	fb07 9706 	mla	r7, r7, r6, r9
 801e516:	fb03 5306 	mla	r3, r3, r6, r5
 801e51a:	f10c 0901 	add.w	r9, ip, #1
 801e51e:	b29b      	uxth	r3, r3
 801e520:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e524:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e528:	f103 0c01 	add.w	ip, r3, #1
 801e52c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e530:	b2bf      	uxth	r7, r7
 801e532:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e536:	ea4c 0c09 	orr.w	ip, ip, r9
 801e53a:	f107 0901 	add.w	r9, r7, #1
 801e53e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e542:	097f      	lsrs	r7, r7, #5
 801e544:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e548:	ea4c 0c07 	orr.w	ip, ip, r7
 801e54c:	f820 cb02 	strh.w	ip, [r0], #2
 801e550:	e7bc      	b.n	801e4cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e552:	9b01      	ldr	r3, [sp, #4]
 801e554:	881b      	ldrh	r3, [r3, #0]
 801e556:	eba3 0308 	sub.w	r3, r3, r8
 801e55a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e55e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e562:	eba3 0308 	sub.w	r3, r3, r8
 801e566:	441c      	add	r4, r3
 801e568:	e7ac      	b.n	801e4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e56a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e56e:	4282      	cmp	r2, r0
 801e570:	d915      	bls.n	801e59e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e572:	eb00 060a 	add.w	r6, r0, sl
 801e576:	4286      	cmp	r6, r0
 801e578:	d906      	bls.n	801e588 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e57a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e57e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e582:	f820 3b02 	strh.w	r3, [r0], #2
 801e586:	e7f6      	b.n	801e576 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e588:	882b      	ldrh	r3, [r5, #0]
 801e58a:	eba3 0308 	sub.w	r3, r3, r8
 801e58e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e592:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e596:	eba3 0308 	sub.w	r3, r3, r8
 801e59a:	441c      	add	r4, r3
 801e59c:	e7e7      	b.n	801e56e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e59e:	4b04      	ldr	r3, [pc, #16]	; (801e5b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e5a0:	6818      	ldr	r0, [r3, #0]
 801e5a2:	6803      	ldr	r3, [r0, #0]
 801e5a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e5a6:	4798      	blx	r3
 801e5a8:	b007      	add	sp, #28
 801e5aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e5ae:	bf00      	nop
 801e5b0:	20025998 	.word	0x20025998
 801e5b4:	20025992 	.word	0x20025992

0801e5b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e5b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5bc:	b091      	sub	sp, #68	; 0x44
 801e5be:	4680      	mov	r8, r0
 801e5c0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e5c4:	460f      	mov	r7, r1
 801e5c6:	4614      	mov	r4, r2
 801e5c8:	2d00      	cmp	r5, #0
 801e5ca:	d051      	beq.n	801e670 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e5cc:	6810      	ldr	r0, [r2, #0]
 801e5ce:	6851      	ldr	r1, [r2, #4]
 801e5d0:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e7d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e5d4:	ae0c      	add	r6, sp, #48	; 0x30
 801e5d6:	c603      	stmia	r6!, {r0, r1}
 801e5d8:	6818      	ldr	r0, [r3, #0]
 801e5da:	6859      	ldr	r1, [r3, #4]
 801e5dc:	ae0e      	add	r6, sp, #56	; 0x38
 801e5de:	c603      	stmia	r6!, {r0, r1}
 801e5e0:	a80c      	add	r0, sp, #48	; 0x30
 801e5e2:	f7f7 fe61 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e5e6:	4621      	mov	r1, r4
 801e5e8:	a80e      	add	r0, sp, #56	; 0x38
 801e5ea:	f7f7 fe85 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e5ee:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e5f2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e5f6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e5fa:	f8d9 0000 	ldr.w	r0, [r9]
 801e5fe:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e602:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e606:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e60a:	eb08 0401 	add.w	r4, r8, r1
 801e60e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e612:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e7d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e616:	440a      	add	r2, r1
 801e618:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e61c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e620:	4413      	add	r3, r2
 801e622:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e626:	6803      	ldr	r3, [r0, #0]
 801e628:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e62a:	4798      	blx	r3
 801e62c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e630:	f8d9 0000 	ldr.w	r0, [r9]
 801e634:	d01f      	beq.n	801e676 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e636:	2200      	movs	r2, #0
 801e638:	6801      	ldr	r1, [r0, #0]
 801e63a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e63e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e642:	220b      	movs	r2, #11
 801e644:	9207      	str	r2, [sp, #28]
 801e646:	f8b8 2000 	ldrh.w	r2, [r8]
 801e64a:	9206      	str	r2, [sp, #24]
 801e64c:	2201      	movs	r2, #1
 801e64e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e652:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e656:	9203      	str	r2, [sp, #12]
 801e658:	fa1f f28a 	uxth.w	r2, sl
 801e65c:	9202      	str	r2, [sp, #8]
 801e65e:	b2b6      	uxth	r6, r6
 801e660:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e664:	9200      	str	r2, [sp, #0]
 801e666:	9601      	str	r6, [sp, #4]
 801e668:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e66a:	463a      	mov	r2, r7
 801e66c:	4621      	mov	r1, r4
 801e66e:	47a8      	blx	r5
 801e670:	b011      	add	sp, #68	; 0x44
 801e672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e676:	6803      	ldr	r3, [r0, #0]
 801e678:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e67a:	4798      	blx	r3
 801e67c:	f8b8 2000 	ldrh.w	r2, [r8]
 801e680:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e684:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e688:	2dff      	cmp	r5, #255	; 0xff
 801e68a:	fb02 1303 	mla	r3, r2, r3, r1
 801e68e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e692:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e696:	fb0a fa02 	mul.w	sl, sl, r2
 801e69a:	d062      	beq.n	801e762 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e69c:	ea6f 0c05 	mvn.w	ip, r5
 801e6a0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e6a4:	930a      	str	r3, [sp, #40]	; 0x28
 801e6a6:	b2ad      	uxth	r5, r5
 801e6a8:	fa5f fc8c 	uxtb.w	ip, ip
 801e6ac:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e6b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e6b2:	4298      	cmp	r0, r3
 801e6b4:	f080 8085 	bcs.w	801e7c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e6b8:	eb00 0b09 	add.w	fp, r0, r9
 801e6bc:	4558      	cmp	r0, fp
 801e6be:	d246      	bcs.n	801e74e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e6c0:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e6c4:	2303      	movs	r3, #3
 801e6c6:	2204      	movs	r2, #4
 801e6c8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e6cc:	eb07 0a0e 	add.w	sl, r7, lr
 801e6d0:	8803      	ldrh	r3, [r0, #0]
 801e6d2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e6d6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e6da:	1219      	asrs	r1, r3, #8
 801e6dc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e6e0:	fb18 f805 	smulbb	r8, r8, r5
 801e6e4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e6e8:	10da      	asrs	r2, r3, #3
 801e6ea:	fb01 810c 	mla	r1, r1, ip, r8
 801e6ee:	00db      	lsls	r3, r3, #3
 801e6f0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e6f4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e6f8:	b2db      	uxtb	r3, r3
 801e6fa:	fb18 f805 	smulbb	r8, r8, r5
 801e6fe:	fb1e fe05 	smulbb	lr, lr, r5
 801e702:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e706:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e70a:	b289      	uxth	r1, r1
 801e70c:	fb02 820c 	mla	r2, r2, ip, r8
 801e710:	fb03 e30c 	mla	r3, r3, ip, lr
 801e714:	b292      	uxth	r2, r2
 801e716:	b29b      	uxth	r3, r3
 801e718:	f101 0801 	add.w	r8, r1, #1
 801e71c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e720:	f103 0e01 	add.w	lr, r3, #1
 801e724:	f102 0801 	add.w	r8, r2, #1
 801e728:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e72c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e730:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e734:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e738:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e73c:	ea4e 0101 	orr.w	r1, lr, r1
 801e740:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e744:	ea41 0108 	orr.w	r1, r1, r8
 801e748:	f820 1b02 	strh.w	r1, [r0], #2
 801e74c:	e7b6      	b.n	801e6bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e74e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e750:	881b      	ldrh	r3, [r3, #0]
 801e752:	1b9b      	subs	r3, r3, r6
 801e754:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e758:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e75c:	1b9b      	subs	r3, r3, r6
 801e75e:	441c      	add	r4, r3
 801e760:	e7a6      	b.n	801e6b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e762:	491b      	ldr	r1, [pc, #108]	; (801e7d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e764:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e768:	2203      	movs	r2, #3
 801e76a:	2504      	movs	r5, #4
 801e76c:	4550      	cmp	r0, sl
 801e76e:	d228      	bcs.n	801e7c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e770:	eb00 0c09 	add.w	ip, r0, r9
 801e774:	4560      	cmp	r0, ip
 801e776:	4623      	mov	r3, r4
 801e778:	d219      	bcs.n	801e7ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e77a:	f893 e000 	ldrb.w	lr, [r3]
 801e77e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e782:	eb07 0b0e 	add.w	fp, r7, lr
 801e786:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e78a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e78e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e792:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e796:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e79a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e79e:	ea43 030b 	orr.w	r3, r3, fp
 801e7a2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e7a6:	3401      	adds	r4, #1
 801e7a8:	f820 3b02 	strh.w	r3, [r0], #2
 801e7ac:	e7e2      	b.n	801e774 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e7ae:	f8b8 3000 	ldrh.w	r3, [r8]
 801e7b2:	1b9b      	subs	r3, r3, r6
 801e7b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e7b8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e7bc:	1b9b      	subs	r3, r3, r6
 801e7be:	441c      	add	r4, r3
 801e7c0:	e7d4      	b.n	801e76c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e7c2:	4b04      	ldr	r3, [pc, #16]	; (801e7d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e7c4:	6818      	ldr	r0, [r3, #0]
 801e7c6:	6803      	ldr	r3, [r0, #0]
 801e7c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e7ca:	4798      	blx	r3
 801e7cc:	e750      	b.n	801e670 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e7ce:	bf00      	nop
 801e7d0:	fffff800 	.word	0xfffff800
 801e7d4:	20025998 	.word	0x20025998
 801e7d8:	20025992 	.word	0x20025992

0801e7dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e7dc:	b4f0      	push	{r4, r5, r6, r7}
 801e7de:	460c      	mov	r4, r1
 801e7e0:	4611      	mov	r1, r2
 801e7e2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e7e6:	780f      	ldrb	r7, [r1, #0]
 801e7e8:	784e      	ldrb	r6, [r1, #1]
 801e7ea:	2f01      	cmp	r7, #1
 801e7ec:	461a      	mov	r2, r3
 801e7ee:	9b04      	ldr	r3, [sp, #16]
 801e7f0:	d036      	beq.n	801e860 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e7f2:	d31e      	bcc.n	801e832 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e7f4:	2f02      	cmp	r7, #2
 801e7f6:	d14a      	bne.n	801e88e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e7f8:	2e03      	cmp	r6, #3
 801e7fa:	d848      	bhi.n	801e88e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e7fc:	e8df f006 	tbb	[pc, r6]
 801e800:	16140702 	.word	0x16140702
 801e804:	9504      	str	r5, [sp, #16]
 801e806:	4620      	mov	r0, r4
 801e808:	bcf0      	pop	{r4, r5, r6, r7}
 801e80a:	f7ff be09 	b.w	801e420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e80e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e810:	2800      	cmp	r0, #0
 801e812:	d03c      	beq.n	801e88e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e814:	6806      	ldr	r6, [r0, #0]
 801e816:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e81a:	68b5      	ldr	r5, [r6, #8]
 801e81c:	4613      	mov	r3, r2
 801e81e:	46ac      	mov	ip, r5
 801e820:	460a      	mov	r2, r1
 801e822:	4621      	mov	r1, r4
 801e824:	bcf0      	pop	{r4, r5, r6, r7}
 801e826:	4760      	bx	ip
 801e828:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e82a:	e7f1      	b.n	801e810 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e82c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e830:	e7ee      	b.n	801e810 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e832:	2e03      	cmp	r6, #3
 801e834:	d82b      	bhi.n	801e88e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e836:	e8df f006 	tbb	[pc, r6]
 801e83a:	0702      	.short	0x0702
 801e83c:	100e      	.short	0x100e
 801e83e:	9504      	str	r5, [sp, #16]
 801e840:	4620      	mov	r0, r4
 801e842:	bcf0      	pop	{r4, r5, r6, r7}
 801e844:	f7ff bd06 	b.w	801e254 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e848:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e84a:	b300      	cbz	r0, 801e88e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e84c:	6806      	ldr	r6, [r0, #0]
 801e84e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e852:	68f5      	ldr	r5, [r6, #12]
 801e854:	e7e2      	b.n	801e81c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e856:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e858:	e7f7      	b.n	801e84a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e85a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e85e:	e7f4      	b.n	801e84a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e860:	2e03      	cmp	r6, #3
 801e862:	d814      	bhi.n	801e88e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e864:	e8df f006 	tbb	[pc, r6]
 801e868:	100e0702 	.word	0x100e0702
 801e86c:	9504      	str	r5, [sp, #16]
 801e86e:	4620      	mov	r0, r4
 801e870:	bcf0      	pop	{r4, r5, r6, r7}
 801e872:	f7ff bea1 	b.w	801e5b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e876:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e878:	b148      	cbz	r0, 801e88e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e87a:	6806      	ldr	r6, [r0, #0]
 801e87c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e880:	6935      	ldr	r5, [r6, #16]
 801e882:	e7cb      	b.n	801e81c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e884:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e886:	e7f7      	b.n	801e878 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e888:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e88c:	e7f4      	b.n	801e878 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e88e:	bcf0      	pop	{r4, r5, r6, r7}
 801e890:	4770      	bx	lr
	...

0801e894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e898:	4604      	mov	r4, r0
 801e89a:	b087      	sub	sp, #28
 801e89c:	6810      	ldr	r0, [r2, #0]
 801e89e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e8a2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801eadc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e8a6:	460e      	mov	r6, r1
 801e8a8:	6851      	ldr	r1, [r2, #4]
 801e8aa:	ad02      	add	r5, sp, #8
 801e8ac:	c503      	stmia	r5!, {r0, r1}
 801e8ae:	6818      	ldr	r0, [r3, #0]
 801e8b0:	6859      	ldr	r1, [r3, #4]
 801e8b2:	ad04      	add	r5, sp, #16
 801e8b4:	4617      	mov	r7, r2
 801e8b6:	c503      	stmia	r5!, {r0, r1}
 801e8b8:	a802      	add	r0, sp, #8
 801e8ba:	f7f7 fcf5 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e8be:	4639      	mov	r1, r7
 801e8c0:	a804      	add	r0, sp, #16
 801e8c2:	f7f7 fd19 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e8c6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e8ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e8ce:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e8d2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e8d6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e8da:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e8de:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e8e2:	440e      	add	r6, r1
 801e8e4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e8e8:	440a      	add	r2, r1
 801e8ea:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e8ee:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e8f2:	4413      	add	r3, r2
 801e8f4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e8f8:	4b77      	ldr	r3, [pc, #476]	; (801ead8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e8fa:	6818      	ldr	r0, [r3, #0]
 801e8fc:	6803      	ldr	r3, [r0, #0]
 801e8fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e900:	4798      	blx	r3
 801e902:	f8b9 b000 	ldrh.w	fp, [r9]
 801e906:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e90a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e90e:	fb0b 2303 	mla	r3, fp, r3, r2
 801e912:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e916:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e91a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e91e:	fb05 f50b 	mul.w	r5, r5, fp
 801e922:	9300      	str	r3, [sp, #0]
 801e924:	d069      	beq.n	801e9fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e926:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e92a:	4558      	cmp	r0, fp
 801e92c:	f080 80cc 	bcs.w	801eac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e930:	9b00      	ldr	r3, [sp, #0]
 801e932:	18c3      	adds	r3, r0, r3
 801e934:	9301      	str	r3, [sp, #4]
 801e936:	4631      	mov	r1, r6
 801e938:	9b01      	ldr	r3, [sp, #4]
 801e93a:	4298      	cmp	r0, r3
 801e93c:	d24f      	bcs.n	801e9de <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e93e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e942:	2a00      	cmp	r2, #0
 801e944:	d048      	beq.n	801e9d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e946:	fb0a f202 	mul.w	r2, sl, r2
 801e94a:	1c53      	adds	r3, r2, #1
 801e94c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e950:	121b      	asrs	r3, r3, #8
 801e952:	d041      	beq.n	801e9d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e954:	8802      	ldrh	r2, [r0, #0]
 801e956:	f8b4 c000 	ldrh.w	ip, [r4]
 801e95a:	b29e      	uxth	r6, r3
 801e95c:	1215      	asrs	r5, r2, #8
 801e95e:	43db      	mvns	r3, r3
 801e960:	b2db      	uxtb	r3, r3
 801e962:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e966:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e96a:	fb15 f503 	smulbb	r5, r5, r3
 801e96e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e972:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e976:	00d2      	lsls	r2, r2, #3
 801e978:	fb07 5706 	mla	r7, r7, r6, r5
 801e97c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e980:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e984:	b2d2      	uxtb	r2, r2
 801e986:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e98a:	b2bf      	uxth	r7, r7
 801e98c:	fb1e fe03 	smulbb	lr, lr, r3
 801e990:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e994:	fa5f fc8c 	uxtb.w	ip, ip
 801e998:	fb12 f203 	smulbb	r2, r2, r3
 801e99c:	fb05 e506 	mla	r5, r5, r6, lr
 801e9a0:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e9a4:	f107 0e01 	add.w	lr, r7, #1
 801e9a8:	fa1f fc8c 	uxth.w	ip, ip
 801e9ac:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e9b0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e9b4:	f10c 0701 	add.w	r7, ip, #1
 801e9b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e9bc:	b2ad      	uxth	r5, r5
 801e9be:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e9c2:	ea47 070e 	orr.w	r7, r7, lr
 801e9c6:	f105 0e01 	add.w	lr, r5, #1
 801e9ca:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e9ce:	096d      	lsrs	r5, r5, #5
 801e9d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e9d4:	432f      	orrs	r7, r5
 801e9d6:	8007      	strh	r7, [r0, #0]
 801e9d8:	3002      	adds	r0, #2
 801e9da:	3402      	adds	r4, #2
 801e9dc:	e7ac      	b.n	801e938 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e9de:	f8b9 3000 	ldrh.w	r3, [r9]
 801e9e2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e9e6:	eba3 0308 	sub.w	r3, r3, r8
 801e9ea:	eba6 0608 	sub.w	r6, r6, r8
 801e9ee:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e9f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e9f6:	440e      	add	r6, r1
 801e9f8:	e797      	b.n	801e92a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e9fa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e9fe:	42a8      	cmp	r0, r5
 801ea00:	d262      	bcs.n	801eac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801ea02:	9b00      	ldr	r3, [sp, #0]
 801ea04:	4631      	mov	r1, r6
 801ea06:	eb00 0b03 	add.w	fp, r0, r3
 801ea0a:	4558      	cmp	r0, fp
 801ea0c:	d24e      	bcs.n	801eaac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801ea0e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ea12:	b12b      	cbz	r3, 801ea20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801ea14:	2bff      	cmp	r3, #255	; 0xff
 801ea16:	f8b4 e000 	ldrh.w	lr, [r4]
 801ea1a:	d104      	bne.n	801ea26 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801ea1c:	f8a0 e000 	strh.w	lr, [r0]
 801ea20:	3002      	adds	r0, #2
 801ea22:	3402      	adds	r4, #2
 801ea24:	e7f1      	b.n	801ea0a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801ea26:	8802      	ldrh	r2, [r0, #0]
 801ea28:	b29f      	uxth	r7, r3
 801ea2a:	1216      	asrs	r6, r2, #8
 801ea2c:	43db      	mvns	r3, r3
 801ea2e:	b2db      	uxtb	r3, r3
 801ea30:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ea34:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ea38:	fb16 f603 	smulbb	r6, r6, r3
 801ea3c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801ea40:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ea44:	00d2      	lsls	r2, r2, #3
 801ea46:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ea4a:	b2d2      	uxtb	r2, r2
 801ea4c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ea50:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ea54:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ea58:	fb1a fa03 	smulbb	sl, sl, r3
 801ea5c:	fa1f fc8c 	uxth.w	ip, ip
 801ea60:	fb12 f303 	smulbb	r3, r2, r3
 801ea64:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ea68:	fa5f fe8e 	uxtb.w	lr, lr
 801ea6c:	fb06 a607 	mla	r6, r6, r7, sl
 801ea70:	f10c 0201 	add.w	r2, ip, #1
 801ea74:	fb0e 3307 	mla	r3, lr, r7, r3
 801ea78:	b2b6      	uxth	r6, r6
 801ea7a:	b29b      	uxth	r3, r3
 801ea7c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ea80:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801ea84:	f106 0a01 	add.w	sl, r6, #1
 801ea88:	f103 0c01 	add.w	ip, r3, #1
 801ea8c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ea90:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801ea94:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ea98:	0976      	lsrs	r6, r6, #5
 801ea9a:	ea4c 0c02 	orr.w	ip, ip, r2
 801ea9e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801eaa2:	ea4c 0c06 	orr.w	ip, ip, r6
 801eaa6:	f8a0 c000 	strh.w	ip, [r0]
 801eaaa:	e7b9      	b.n	801ea20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801eaac:	f8b9 3000 	ldrh.w	r3, [r9]
 801eab0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801eab4:	eba3 0308 	sub.w	r3, r3, r8
 801eab8:	eba6 0608 	sub.w	r6, r6, r8
 801eabc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801eac0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801eac4:	440e      	add	r6, r1
 801eac6:	e79a      	b.n	801e9fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801eac8:	4b03      	ldr	r3, [pc, #12]	; (801ead8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801eaca:	6818      	ldr	r0, [r3, #0]
 801eacc:	6803      	ldr	r3, [r0, #0]
 801eace:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ead0:	4798      	blx	r3
 801ead2:	b007      	add	sp, #28
 801ead4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ead8:	20025998 	.word	0x20025998
 801eadc:	20025992 	.word	0x20025992

0801eae0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801eae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eae4:	b089      	sub	sp, #36	; 0x24
 801eae6:	4682      	mov	sl, r0
 801eae8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801eaec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801eaee:	460f      	mov	r7, r1
 801eaf0:	4691      	mov	r9, r2
 801eaf2:	4698      	mov	r8, r3
 801eaf4:	2e00      	cmp	r6, #0
 801eaf6:	d03d      	beq.n	801eb74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eaf8:	4608      	mov	r0, r1
 801eafa:	f7fa fe61 	bl	80197c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801eafe:	4605      	mov	r5, r0
 801eb00:	4638      	mov	r0, r7
 801eb02:	f7fa fe91 	bl	8019828 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801eb06:	f8ad 000e 	strh.w	r0, [sp, #14]
 801eb0a:	4638      	mov	r0, r7
 801eb0c:	f8ad 9008 	strh.w	r9, [sp, #8]
 801eb10:	f8ad 500c 	strh.w	r5, [sp, #12]
 801eb14:	f8ad 800a 	strh.w	r8, [sp, #10]
 801eb18:	f7fa ff3e 	bl	8019998 <_ZNK8touchgfx6Bitmap7getDataEv>
 801eb1c:	4605      	mov	r5, r0
 801eb1e:	4638      	mov	r0, r7
 801eb20:	f7fa ff6a 	bl	80199f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801eb24:	4681      	mov	r9, r0
 801eb26:	4638      	mov	r0, r7
 801eb28:	f7fa ffba 	bl	8019aa0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801eb2c:	280b      	cmp	r0, #11
 801eb2e:	d821      	bhi.n	801eb74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eb30:	e8df f000 	tbb	[pc, r0]
 801eb34:	2006aebe 	.word	0x2006aebe
 801eb38:	20202020 	.word	0x20202020
 801eb3c:	b5202020 	.word	0xb5202020
 801eb40:	4bb0      	ldr	r3, [pc, #704]	; (801ee04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801eb42:	6818      	ldr	r0, [r3, #0]
 801eb44:	6803      	ldr	r3, [r0, #0]
 801eb46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eb48:	4798      	blx	r3
 801eb4a:	2eff      	cmp	r6, #255	; 0xff
 801eb4c:	d101      	bne.n	801eb52 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801eb4e:	0683      	lsls	r3, r0, #26
 801eb50:	d506      	bpl.n	801eb60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801eb52:	4633      	mov	r3, r6
 801eb54:	4622      	mov	r2, r4
 801eb56:	a902      	add	r1, sp, #8
 801eb58:	4628      	mov	r0, r5
 801eb5a:	f7ff f909 	bl	801dd70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801eb5e:	e009      	b.n	801eb74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eb60:	4638      	mov	r0, r7
 801eb62:	f7fa fee1 	bl	8019928 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801eb66:	b940      	cbnz	r0, 801eb7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801eb68:	4623      	mov	r3, r4
 801eb6a:	aa02      	add	r2, sp, #8
 801eb6c:	4629      	mov	r1, r5
 801eb6e:	4650      	mov	r0, sl
 801eb70:	f7ff f9e4 	bl	801df3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801eb74:	b009      	add	sp, #36	; 0x24
 801eb76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb7a:	f10d 0818 	add.w	r8, sp, #24
 801eb7e:	4639      	mov	r1, r7
 801eb80:	4640      	mov	r0, r8
 801eb82:	f7fa fe85 	bl	8019890 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801eb86:	e898 0003 	ldmia.w	r8, {r0, r1}
 801eb8a:	af04      	add	r7, sp, #16
 801eb8c:	e887 0003 	stmia.w	r7, {r0, r1}
 801eb90:	4638      	mov	r0, r7
 801eb92:	4621      	mov	r1, r4
 801eb94:	f7f4 fa38 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 801eb98:	4638      	mov	r0, r7
 801eb9a:	f7f4 fa78 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 801eb9e:	2800      	cmp	r0, #0
 801eba0:	d1d7      	bne.n	801eb52 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801eba2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801eba6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ebaa:	4293      	cmp	r3, r2
 801ebac:	dd12      	ble.n	801ebd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801ebae:	1a9b      	subs	r3, r3, r2
 801ebb0:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ebb4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ebb8:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ebbc:	f8ad 201a 	strh.w	r2, [sp, #26]
 801ebc0:	f8ad 101c 	strh.w	r1, [sp, #28]
 801ebc4:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ebc8:	4642      	mov	r2, r8
 801ebca:	4633      	mov	r3, r6
 801ebcc:	a902      	add	r1, sp, #8
 801ebce:	4628      	mov	r0, r5
 801ebd0:	f7ff f8ce 	bl	801dd70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ebd4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ebd8:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ebdc:	4293      	cmp	r3, r2
 801ebde:	dd12      	ble.n	801ec06 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801ebe0:	1a9b      	subs	r3, r3, r2
 801ebe2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ebe6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ebea:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ebee:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ebf2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ebf6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ebfa:	23ff      	movs	r3, #255	; 0xff
 801ebfc:	4642      	mov	r2, r8
 801ebfe:	a902      	add	r1, sp, #8
 801ec00:	4628      	mov	r0, r5
 801ec02:	f7ff f8b5 	bl	801dd70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ec06:	463b      	mov	r3, r7
 801ec08:	aa02      	add	r2, sp, #8
 801ec0a:	4629      	mov	r1, r5
 801ec0c:	4650      	mov	r0, sl
 801ec0e:	f7ff f995 	bl	801df3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ec12:	88a2      	ldrh	r2, [r4, #4]
 801ec14:	8823      	ldrh	r3, [r4, #0]
 801ec16:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ec1a:	4413      	add	r3, r2
 801ec1c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ec20:	440a      	add	r2, r1
 801ec22:	b29b      	uxth	r3, r3
 801ec24:	b292      	uxth	r2, r2
 801ec26:	b211      	sxth	r1, r2
 801ec28:	b218      	sxth	r0, r3
 801ec2a:	4288      	cmp	r0, r1
 801ec2c:	dd12      	ble.n	801ec54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801ec2e:	1a9b      	subs	r3, r3, r2
 801ec30:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ec34:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801ec38:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ec3c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ec40:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ec44:	23ff      	movs	r3, #255	; 0xff
 801ec46:	4642      	mov	r2, r8
 801ec48:	a902      	add	r1, sp, #8
 801ec4a:	4628      	mov	r0, r5
 801ec4c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801ec50:	f7ff f88e 	bl	801dd70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ec54:	88e2      	ldrh	r2, [r4, #6]
 801ec56:	8863      	ldrh	r3, [r4, #2]
 801ec58:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ec5c:	4413      	add	r3, r2
 801ec5e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ec62:	440a      	add	r2, r1
 801ec64:	b29b      	uxth	r3, r3
 801ec66:	b292      	uxth	r2, r2
 801ec68:	b211      	sxth	r1, r2
 801ec6a:	b218      	sxth	r0, r3
 801ec6c:	4288      	cmp	r0, r1
 801ec6e:	dd81      	ble.n	801eb74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ec70:	1a9b      	subs	r3, r3, r2
 801ec72:	f9b4 6000 	ldrsh.w	r6, [r4]
 801ec76:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ec7a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ec7e:	f8ad 6018 	strh.w	r6, [sp, #24]
 801ec82:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ec86:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ec8a:	23ff      	movs	r3, #255	; 0xff
 801ec8c:	4642      	mov	r2, r8
 801ec8e:	e762      	b.n	801eb56 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801ec90:	4633      	mov	r3, r6
 801ec92:	4622      	mov	r2, r4
 801ec94:	a902      	add	r1, sp, #8
 801ec96:	4628      	mov	r0, r5
 801ec98:	f7ff f9c0 	bl	801e01c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ec9c:	e76a      	b.n	801eb74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ec9e:	e9cd 4600 	strd	r4, r6, [sp]
 801eca2:	ab02      	add	r3, sp, #8
 801eca4:	464a      	mov	r2, r9
 801eca6:	4629      	mov	r1, r5
 801eca8:	4650      	mov	r0, sl
 801ecaa:	f7ff fd97 	bl	801e7dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801ecae:	e761      	b.n	801eb74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ecb0:	4638      	mov	r0, r7
 801ecb2:	f7fa fe39 	bl	8019928 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ecb6:	b950      	cbnz	r0, 801ecce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801ecb8:	e9cd 6000 	strd	r6, r0, [sp]
 801ecbc:	f8da 3000 	ldr.w	r3, [sl]
 801ecc0:	aa02      	add	r2, sp, #8
 801ecc2:	68de      	ldr	r6, [r3, #12]
 801ecc4:	4629      	mov	r1, r5
 801ecc6:	4623      	mov	r3, r4
 801ecc8:	4650      	mov	r0, sl
 801ecca:	47b0      	blx	r6
 801eccc:	e752      	b.n	801eb74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ecce:	f10d 0818 	add.w	r8, sp, #24
 801ecd2:	4639      	mov	r1, r7
 801ecd4:	4640      	mov	r0, r8
 801ecd6:	f7fa fddb 	bl	8019890 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801ecda:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ecde:	af04      	add	r7, sp, #16
 801ece0:	e887 0003 	stmia.w	r7, {r0, r1}
 801ece4:	4638      	mov	r0, r7
 801ece6:	4621      	mov	r1, r4
 801ece8:	f7f4 f98e 	bl	8013008 <_ZN8touchgfx4RectaNERKS0_>
 801ecec:	4638      	mov	r0, r7
 801ecee:	f7f4 f9ce 	bl	801308e <_ZNK8touchgfx4Rect7isEmptyEv>
 801ecf2:	b138      	cbz	r0, 801ed04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801ecf4:	9600      	str	r6, [sp, #0]
 801ecf6:	4623      	mov	r3, r4
 801ecf8:	aa02      	add	r2, sp, #8
 801ecfa:	4649      	mov	r1, r9
 801ecfc:	4628      	mov	r0, r5
 801ecfe:	f7ff fdc9 	bl	801e894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ed02:	e737      	b.n	801eb74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ed04:	e9cd 6000 	strd	r6, r0, [sp]
 801ed08:	f8da 3000 	ldr.w	r3, [sl]
 801ed0c:	aa02      	add	r2, sp, #8
 801ed0e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801ed12:	4629      	mov	r1, r5
 801ed14:	463b      	mov	r3, r7
 801ed16:	4650      	mov	r0, sl
 801ed18:	47d8      	blx	fp
 801ed1a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ed1e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ed22:	4293      	cmp	r3, r2
 801ed24:	dd13      	ble.n	801ed4e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801ed26:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ed2a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ed2e:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ed32:	1a9b      	subs	r3, r3, r2
 801ed34:	f8ad 201a 	strh.w	r2, [sp, #26]
 801ed38:	f8ad 101c 	strh.w	r1, [sp, #28]
 801ed3c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ed40:	9600      	str	r6, [sp, #0]
 801ed42:	4643      	mov	r3, r8
 801ed44:	aa02      	add	r2, sp, #8
 801ed46:	4649      	mov	r1, r9
 801ed48:	4628      	mov	r0, r5
 801ed4a:	f7ff fda3 	bl	801e894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ed4e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ed52:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ed56:	4293      	cmp	r3, r2
 801ed58:	dd13      	ble.n	801ed82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801ed5a:	1a9b      	subs	r3, r3, r2
 801ed5c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ed60:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ed64:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ed68:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ed6c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ed70:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ed74:	9600      	str	r6, [sp, #0]
 801ed76:	4643      	mov	r3, r8
 801ed78:	aa02      	add	r2, sp, #8
 801ed7a:	4649      	mov	r1, r9
 801ed7c:	4628      	mov	r0, r5
 801ed7e:	f7ff fd89 	bl	801e894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ed82:	88a2      	ldrh	r2, [r4, #4]
 801ed84:	8823      	ldrh	r3, [r4, #0]
 801ed86:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ed8a:	4413      	add	r3, r2
 801ed8c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ed90:	440a      	add	r2, r1
 801ed92:	b29b      	uxth	r3, r3
 801ed94:	b292      	uxth	r2, r2
 801ed96:	b211      	sxth	r1, r2
 801ed98:	b218      	sxth	r0, r3
 801ed9a:	4288      	cmp	r0, r1
 801ed9c:	dd13      	ble.n	801edc6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801ed9e:	1a9b      	subs	r3, r3, r2
 801eda0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801eda4:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801eda8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801edac:	f8ad 301c 	strh.w	r3, [sp, #28]
 801edb0:	f8ad 001e 	strh.w	r0, [sp, #30]
 801edb4:	9600      	str	r6, [sp, #0]
 801edb6:	4643      	mov	r3, r8
 801edb8:	aa02      	add	r2, sp, #8
 801edba:	4649      	mov	r1, r9
 801edbc:	4628      	mov	r0, r5
 801edbe:	f8ad 701a 	strh.w	r7, [sp, #26]
 801edc2:	f7ff fd67 	bl	801e894 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801edc6:	88e2      	ldrh	r2, [r4, #6]
 801edc8:	8863      	ldrh	r3, [r4, #2]
 801edca:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801edce:	4413      	add	r3, r2
 801edd0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801edd4:	440a      	add	r2, r1
 801edd6:	b29b      	uxth	r3, r3
 801edd8:	b292      	uxth	r2, r2
 801edda:	b211      	sxth	r1, r2
 801eddc:	b218      	sxth	r0, r3
 801edde:	4288      	cmp	r0, r1
 801ede0:	f77f aec8 	ble.w	801eb74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ede4:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ede8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801edec:	f8ad 7018 	strh.w	r7, [sp, #24]
 801edf0:	1a9b      	subs	r3, r3, r2
 801edf2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801edf6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801edfa:	f8ad 001c 	strh.w	r0, [sp, #28]
 801edfe:	9600      	str	r6, [sp, #0]
 801ee00:	4643      	mov	r3, r8
 801ee02:	e779      	b.n	801ecf8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801ee04:	20025998 	.word	0x20025998

0801ee08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801ee08:	b180      	cbz	r0, 801ee2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801ee0a:	2903      	cmp	r1, #3
 801ee0c:	d81c      	bhi.n	801ee48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ee0e:	e8df f001 	tbb	[pc, r1]
 801ee12:	1d02      	.short	0x1d02
 801ee14:	1f08      	.short	0x1f08
 801ee16:	4b10      	ldr	r3, [pc, #64]	; (801ee58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ee18:	8818      	ldrh	r0, [r3, #0]
 801ee1a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ee1e:	4240      	negs	r0, r0
 801ee20:	4770      	bx	lr
 801ee22:	4b0d      	ldr	r3, [pc, #52]	; (801ee58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ee24:	8818      	ldrh	r0, [r3, #0]
 801ee26:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ee2a:	4770      	bx	lr
 801ee2c:	2903      	cmp	r1, #3
 801ee2e:	d80b      	bhi.n	801ee48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ee30:	a301      	add	r3, pc, #4	; (adr r3, 801ee38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ee32:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ee36:	bf00      	nop
 801ee38:	0801ee4d 	.word	0x0801ee4d
 801ee3c:	0801ee23 	.word	0x0801ee23
 801ee40:	0801ee51 	.word	0x0801ee51
 801ee44:	0801ee17 	.word	0x0801ee17
 801ee48:	2000      	movs	r0, #0
 801ee4a:	4770      	bx	lr
 801ee4c:	2001      	movs	r0, #1
 801ee4e:	4770      	bx	lr
 801ee50:	f04f 30ff 	mov.w	r0, #4294967295
 801ee54:	4770      	bx	lr
 801ee56:	bf00      	nop
 801ee58:	20025992 	.word	0x20025992

0801ee5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801ee5c:	b180      	cbz	r0, 801ee80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801ee5e:	2903      	cmp	r1, #3
 801ee60:	d81c      	bhi.n	801ee9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ee62:	e8df f001 	tbb	[pc, r1]
 801ee66:	021d      	.short	0x021d
 801ee68:	071f      	.short	0x071f
 801ee6a:	4b10      	ldr	r3, [pc, #64]	; (801eeac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ee6c:	8818      	ldrh	r0, [r3, #0]
 801ee6e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ee72:	4770      	bx	lr
 801ee74:	4b0d      	ldr	r3, [pc, #52]	; (801eeac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ee76:	8818      	ldrh	r0, [r3, #0]
 801ee78:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ee7c:	4240      	negs	r0, r0
 801ee7e:	4770      	bx	lr
 801ee80:	2903      	cmp	r1, #3
 801ee82:	d80b      	bhi.n	801ee9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ee84:	a301      	add	r3, pc, #4	; (adr r3, 801ee8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801ee86:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ee8a:	bf00      	nop
 801ee8c:	0801ee6b 	.word	0x0801ee6b
 801ee90:	0801eea5 	.word	0x0801eea5
 801ee94:	0801ee75 	.word	0x0801ee75
 801ee98:	0801eea1 	.word	0x0801eea1
 801ee9c:	2000      	movs	r0, #0
 801ee9e:	4770      	bx	lr
 801eea0:	2001      	movs	r0, #1
 801eea2:	4770      	bx	lr
 801eea4:	f04f 30ff 	mov.w	r0, #4294967295
 801eea8:	4770      	bx	lr
 801eeaa:	bf00      	nop
 801eeac:	20025992 	.word	0x20025992

0801eeb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801eeb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eeb4:	b099      	sub	sp, #100	; 0x64
 801eeb6:	910b      	str	r1, [sp, #44]	; 0x2c
 801eeb8:	a914      	add	r1, sp, #80	; 0x50
 801eeba:	e881 000c 	stmia.w	r1, {r2, r3}
 801eebe:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801eec2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801eec6:	f891 900d 	ldrb.w	r9, [r1, #13]
 801eeca:	9309      	str	r3, [sp, #36]	; 0x24
 801eecc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801eed0:	9310      	str	r3, [sp, #64]	; 0x40
 801eed2:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801eed6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801eeda:	930c      	str	r3, [sp, #48]	; 0x30
 801eedc:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801eee0:	798f      	ldrb	r7, [r1, #6]
 801eee2:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801eee6:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801eeea:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801eeee:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801eef2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801eef6:	431f      	orrs	r7, r3
 801eef8:	f000 8195 	beq.w	801f226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eefc:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ef00:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ef04:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ef08:	ea59 0903 	orrs.w	r9, r9, r3
 801ef0c:	f000 818b 	beq.w	801f226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ef10:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ef14:	b29b      	uxth	r3, r3
 801ef16:	2d00      	cmp	r5, #0
 801ef18:	f000 812e 	beq.w	801f178 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ef1c:	1aed      	subs	r5, r5, r3
 801ef1e:	b2ad      	uxth	r5, r5
 801ef20:	042b      	lsls	r3, r5, #16
 801ef22:	d502      	bpl.n	801ef2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ef24:	1b64      	subs	r4, r4, r5
 801ef26:	b224      	sxth	r4, r4
 801ef28:	2500      	movs	r5, #0
 801ef2a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ef2e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801ef32:	428c      	cmp	r4, r1
 801ef34:	b28b      	uxth	r3, r1
 801ef36:	bfbf      	itttt	lt
 801ef38:	18ed      	addlt	r5, r5, r3
 801ef3a:	1b2c      	sublt	r4, r5, r4
 801ef3c:	b2a5      	uxthlt	r5, r4
 801ef3e:	460c      	movlt	r4, r1
 801ef40:	8891      	ldrh	r1, [r2, #4]
 801ef42:	440b      	add	r3, r1
 801ef44:	b21b      	sxth	r3, r3
 801ef46:	930f      	str	r3, [sp, #60]	; 0x3c
 801ef48:	88d3      	ldrh	r3, [r2, #6]
 801ef4a:	8852      	ldrh	r2, [r2, #2]
 801ef4c:	4413      	add	r3, r2
 801ef4e:	b21b      	sxth	r3, r3
 801ef50:	930d      	str	r3, [sp, #52]	; 0x34
 801ef52:	4bbe      	ldr	r3, [pc, #760]	; (801f24c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801ef54:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ef56:	f893 b000 	ldrb.w	fp, [r3]
 801ef5a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801ef5e:	f1dc 0300 	rsbs	r3, ip, #0
 801ef62:	eb43 030c 	adc.w	r3, r3, ip
 801ef66:	930e      	str	r3, [sp, #56]	; 0x38
 801ef68:	4621      	mov	r1, r4
 801ef6a:	4653      	mov	r3, sl
 801ef6c:	a814      	add	r0, sp, #80	; 0x50
 801ef6e:	f7f7 f810 	bl	8015f92 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801ef72:	4621      	mov	r1, r4
 801ef74:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ef78:	4653      	mov	r3, sl
 801ef7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ef7c:	a814      	add	r0, sp, #80	; 0x50
 801ef7e:	f7f7 f825 	bl	8015fcc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ef82:	a918      	add	r1, sp, #96	; 0x60
 801ef84:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ef88:	a817      	add	r0, sp, #92	; 0x5c
 801ef8a:	f7f7 f94b 	bl	8016224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801ef8e:	f1ba 0f00 	cmp.w	sl, #0
 801ef92:	f040 80f4 	bne.w	801f17e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801ef96:	f1bb 0f01 	cmp.w	fp, #1
 801ef9a:	f040 80f8 	bne.w	801f18e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801ef9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801efa0:	2b00      	cmp	r3, #0
 801efa2:	f040 8145 	bne.w	801f230 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801efa6:	b2ba      	uxth	r2, r7
 801efa8:	b905      	cbnz	r5, 801efac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801efaa:	b16e      	cbz	r6, 801efc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801efac:	fb06 5302 	mla	r3, r6, r2, r5
 801efb0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801efb2:	fb08 f303 	mul.w	r3, r8, r3
 801efb6:	4631      	mov	r1, r6
 801efb8:	f003 0607 	and.w	r6, r3, #7
 801efbc:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801efc0:	9328      	str	r3, [sp, #160]	; 0xa0
 801efc2:	eba9 0301 	sub.w	r3, r9, r1
 801efc6:	930a      	str	r3, [sp, #40]	; 0x28
 801efc8:	4651      	mov	r1, sl
 801efca:	980e      	ldr	r0, [sp, #56]	; 0x38
 801efcc:	f7ff ff1c 	bl	801ee08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801efd0:	4681      	mov	r9, r0
 801efd2:	980e      	ldr	r0, [sp, #56]	; 0x38
 801efd4:	f7ff ff42 	bl	801ee5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801efd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801efda:	9909      	ldr	r1, [sp, #36]	; 0x24
 801efdc:	eba3 0a01 	sub.w	sl, r3, r1
 801efe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801efe2:	459a      	cmp	sl, r3
 801efe4:	bfa8      	it	ge
 801efe6:	469a      	movge	sl, r3
 801efe8:	f1ba 0f00 	cmp.w	sl, #0
 801efec:	4683      	mov	fp, r0
 801efee:	f340 811a 	ble.w	801f226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eff2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eff4:	1b64      	subs	r4, r4, r5
 801eff6:	1b1c      	subs	r4, r3, r4
 801eff8:	42bc      	cmp	r4, r7
 801effa:	bfd4      	ite	le
 801effc:	ebc5 0504 	rsble	r5, r5, r4
 801f000:	ebc5 0507 	rsbgt	r5, r5, r7
 801f004:	2d00      	cmp	r5, #0
 801f006:	f340 810e 	ble.w	801f226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f00a:	1b52      	subs	r2, r2, r5
 801f00c:	fb08 f302 	mul.w	r3, r8, r2
 801f010:	930f      	str	r3, [sp, #60]	; 0x3c
 801f012:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f014:	2b00      	cmp	r3, #0
 801f016:	f040 8116 	bne.w	801f246 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801f01a:	4b8d      	ldr	r3, [pc, #564]	; (801f250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801f01c:	6818      	ldr	r0, [r3, #0]
 801f01e:	6803      	ldr	r3, [r0, #0]
 801f020:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f022:	4798      	blx	r3
 801f024:	2301      	movs	r3, #1
 801f026:	fa03 f308 	lsl.w	r3, r3, r8
 801f02a:	4a8a      	ldr	r2, [pc, #552]	; (801f254 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801f02c:	3b01      	subs	r3, #1
 801f02e:	b2db      	uxtb	r3, r3
 801f030:	8811      	ldrh	r1, [r2, #0]
 801f032:	930e      	str	r3, [sp, #56]	; 0x38
 801f034:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801f038:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801f03c:	fb01 2303 	mla	r3, r1, r3, r2
 801f040:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f044:	930a      	str	r3, [sp, #40]	; 0x28
 801f046:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f048:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801f04c:	9313      	str	r3, [sp, #76]	; 0x4c
 801f04e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f050:	0a19      	lsrs	r1, r3, #8
 801f052:	b2cb      	uxtb	r3, r1
 801f054:	9312      	str	r3, [sp, #72]	; 0x48
 801f056:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f058:	b2db      	uxtb	r3, r3
 801f05a:	9311      	str	r3, [sp, #68]	; 0x44
 801f05c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f05e:	095a      	lsrs	r2, r3, #5
 801f060:	4b7d      	ldr	r3, [pc, #500]	; (801f258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801f062:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f066:	400b      	ands	r3, r1
 801f068:	4313      	orrs	r3, r2
 801f06a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f06c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f070:	4313      	orrs	r3, r2
 801f072:	b29b      	uxth	r3, r3
 801f074:	9310      	str	r3, [sp, #64]	; 0x40
 801f076:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f078:	781a      	ldrb	r2, [r3, #0]
 801f07a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801f07e:	4132      	asrs	r2, r6
 801f080:	fb05 b919 	mls	r9, r5, r9, fp
 801f084:	fb03 fb05 	mul.w	fp, r3, r5
 801f088:	b2d2      	uxtb	r2, r2
 801f08a:	930d      	str	r3, [sp, #52]	; 0x34
 801f08c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801f090:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801f094:	f0c0 80f5 	bcc.w	801f282 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801f098:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801f09c:	46ae      	mov	lr, r5
 801f09e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801f0a2:	f0c0 80dd 	bcc.w	801f260 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801f0a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f0a8:	4013      	ands	r3, r2
 801f0aa:	d055      	beq.n	801f158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801f0ac:	20ff      	movs	r0, #255	; 0xff
 801f0ae:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f0b0:	fb90 f1f1 	sdiv	r1, r0, r1
 801f0b4:	434b      	muls	r3, r1
 801f0b6:	2bfe      	cmp	r3, #254	; 0xfe
 801f0b8:	dd03      	ble.n	801f0c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801f0ba:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f0bc:	4281      	cmp	r1, r0
 801f0be:	f000 80cd 	beq.w	801f25c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801f0c2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f0c4:	f8bc 4000 	ldrh.w	r4, [ip]
 801f0c8:	fb11 f303 	smulbb	r3, r1, r3
 801f0cc:	b29b      	uxth	r3, r3
 801f0ce:	1c59      	adds	r1, r3, #1
 801f0d0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f0d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f0d8:	b29f      	uxth	r7, r3
 801f0da:	43db      	mvns	r3, r3
 801f0dc:	b2db      	uxtb	r3, r3
 801f0de:	9309      	str	r3, [sp, #36]	; 0x24
 801f0e0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f0e2:	1220      	asrs	r0, r4, #8
 801f0e4:	fb13 f907 	smulbb	r9, r3, r7
 801f0e8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f0ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0ee:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801f0f2:	fb00 9003 	mla	r0, r0, r3, r9
 801f0f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f0f8:	10e1      	asrs	r1, r4, #3
 801f0fa:	fb13 f907 	smulbb	r9, r3, r7
 801f0fe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f102:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f104:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f108:	fb01 9103 	mla	r1, r1, r3, r9
 801f10c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f10e:	00e4      	lsls	r4, r4, #3
 801f110:	fb13 f707 	smulbb	r7, r3, r7
 801f114:	b2e4      	uxtb	r4, r4
 801f116:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f118:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f11c:	fb04 7403 	mla	r4, r4, r3, r7
 801f120:	b280      	uxth	r0, r0
 801f122:	b2a4      	uxth	r4, r4
 801f124:	1c43      	adds	r3, r0, #1
 801f126:	f104 0901 	add.w	r9, r4, #1
 801f12a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f12e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801f132:	b289      	uxth	r1, r1
 801f134:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801f138:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f13c:	ea49 0000 	orr.w	r0, r9, r0
 801f140:	f101 0901 	add.w	r9, r1, #1
 801f144:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801f148:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f14c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f150:	ea40 0009 	orr.w	r0, r0, r9
 801f154:	f8ac 0000 	strh.w	r0, [ip]
 801f158:	4446      	add	r6, r8
 801f15a:	b2b6      	uxth	r6, r6
 801f15c:	2e07      	cmp	r6, #7
 801f15e:	bf81      	itttt	hi
 801f160:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801f162:	785a      	ldrbhi	r2, [r3, #1]
 801f164:	3301      	addhi	r3, #1
 801f166:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801f168:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f16a:	bf9a      	itte	ls
 801f16c:	fa42 f208 	asrls.w	r2, r2, r8
 801f170:	b2d2      	uxtbls	r2, r2
 801f172:	2600      	movhi	r6, #0
 801f174:	449c      	add	ip, r3
 801f176:	e792      	b.n	801f09e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801f178:	441c      	add	r4, r3
 801f17a:	b224      	sxth	r4, r4
 801f17c:	e6d5      	b.n	801ef2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f17e:	f1ba 0f01 	cmp.w	sl, #1
 801f182:	f47f af0c 	bne.w	801ef9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f186:	f1bb 0f01 	cmp.w	fp, #1
 801f18a:	f47f af08 	bne.w	801ef9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f18e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801f250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801f192:	f8db 0000 	ldr.w	r0, [fp]
 801f196:	6803      	ldr	r3, [r0, #0]
 801f198:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f19a:	4798      	blx	r3
 801f19c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801f1a0:	465a      	mov	r2, fp
 801f1a2:	d006      	beq.n	801f1b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f1a4:	f1b8 0f04 	cmp.w	r8, #4
 801f1a8:	d140      	bne.n	801f22c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801f1aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f1ac:	3300      	adds	r3, #0
 801f1ae:	bf18      	it	ne
 801f1b0:	2301      	movne	r3, #1
 801f1b2:	0580      	lsls	r0, r0, #22
 801f1b4:	d56e      	bpl.n	801f294 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f1b6:	f1b8 0f08 	cmp.w	r8, #8
 801f1ba:	d16b      	bne.n	801f294 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f1bc:	2b00      	cmp	r3, #0
 801f1be:	bf0c      	ite	eq
 801f1c0:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801f1c4:	f44f 7180 	movne.w	r1, #256	; 0x100
 801f1c8:	2d00      	cmp	r5, #0
 801f1ca:	f47f aee8 	bne.w	801ef9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f1ce:	2e00      	cmp	r6, #0
 801f1d0:	f47f aee5 	bne.w	801ef9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f1d4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f1d6:	19e3      	adds	r3, r4, r7
 801f1d8:	4283      	cmp	r3, r0
 801f1da:	f73f aee0 	bgt.w	801ef9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f1de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f1e0:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f1e2:	444b      	add	r3, r9
 801f1e4:	4283      	cmp	r3, r0
 801f1e6:	f73f aeda 	bgt.w	801ef9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f1ea:	6810      	ldr	r0, [r2, #0]
 801f1ec:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801f1f0:	6804      	ldr	r4, [r0, #0]
 801f1f2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801f1f6:	b2bf      	uxth	r7, r7
 801f1f8:	f1b8 0f08 	cmp.w	r8, #8
 801f1fc:	f04f 0500 	mov.w	r5, #0
 801f200:	bf18      	it	ne
 801f202:	3701      	addne	r7, #1
 801f204:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f208:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f20a:	9104      	str	r1, [sp, #16]
 801f20c:	bf18      	it	ne
 801f20e:	f027 0701 	bicne.w	r7, r7, #1
 801f212:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f214:	bf18      	it	ne
 801f216:	b2bf      	uxthne	r7, r7
 801f218:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801f21c:	e9cd 7900 	strd	r7, r9, [sp]
 801f220:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f222:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801f224:	47a0      	blx	r4
 801f226:	b019      	add	sp, #100	; 0x64
 801f228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f22c:	2300      	movs	r3, #0
 801f22e:	e7c0      	b.n	801f1b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f230:	2208      	movs	r2, #8
 801f232:	fb92 f3f8 	sdiv	r3, r2, r8
 801f236:	1e5a      	subs	r2, r3, #1
 801f238:	443a      	add	r2, r7
 801f23a:	fb92 f2f3 	sdiv	r2, r2, r3
 801f23e:	fb12 f203 	smulbb	r2, r2, r3
 801f242:	b292      	uxth	r2, r2
 801f244:	e6b0      	b.n	801efa8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801f246:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f248:	e6ec      	b.n	801f024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801f24a:	bf00      	nop
 801f24c:	20025990 	.word	0x20025990
 801f250:	20025998 	.word	0x20025998
 801f254:	20025992 	.word	0x20025992
 801f258:	00fff800 	.word	0x00fff800
 801f25c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f25e:	e779      	b.n	801f154 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801f260:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f262:	b153      	cbz	r3, 801f27a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801f264:	441e      	add	r6, r3
 801f266:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f268:	b2b6      	uxth	r6, r6
 801f26a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801f26e:	f006 0607 	and.w	r6, r6, #7
 801f272:	781a      	ldrb	r2, [r3, #0]
 801f274:	9328      	str	r3, [sp, #160]	; 0xa0
 801f276:	4132      	asrs	r2, r6
 801f278:	b2d2      	uxtb	r2, r2
 801f27a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f27c:	445b      	add	r3, fp
 801f27e:	930a      	str	r3, [sp, #40]	; 0x28
 801f280:	e706      	b.n	801f090 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f282:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f284:	2b00      	cmp	r3, #0
 801f286:	d1ce      	bne.n	801f226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f288:	4b05      	ldr	r3, [pc, #20]	; (801f2a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f28a:	6818      	ldr	r0, [r3, #0]
 801f28c:	6803      	ldr	r3, [r0, #0]
 801f28e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f290:	4798      	blx	r3
 801f292:	e7c8      	b.n	801f226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f294:	2b00      	cmp	r3, #0
 801f296:	f43f ae82 	beq.w	801ef9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f29a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801f29e:	e793      	b.n	801f1c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f2a0:	20025998 	.word	0x20025998

0801f2a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f2a4:	b538      	push	{r3, r4, r5, lr}
 801f2a6:	4c15      	ldr	r4, [pc, #84]	; (801f2fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f2a8:	7823      	ldrb	r3, [r4, #0]
 801f2aa:	f3bf 8f5b 	dmb	ish
 801f2ae:	07da      	lsls	r2, r3, #31
 801f2b0:	4605      	mov	r5, r0
 801f2b2:	d40b      	bmi.n	801f2cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f2b4:	4620      	mov	r0, r4
 801f2b6:	f007 feb6 	bl	8027026 <__cxa_guard_acquire>
 801f2ba:	b138      	cbz	r0, 801f2cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f2bc:	4620      	mov	r0, r4
 801f2be:	f007 febe 	bl	802703e <__cxa_guard_release>
 801f2c2:	4a0f      	ldr	r2, [pc, #60]	; (801f300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f2c4:	490f      	ldr	r1, [pc, #60]	; (801f304 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f2c6:	4810      	ldr	r0, [pc, #64]	; (801f308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f2c8:	f007 fea6 	bl	8027018 <__aeabi_atexit>
 801f2cc:	4c0f      	ldr	r4, [pc, #60]	; (801f30c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f2ce:	7823      	ldrb	r3, [r4, #0]
 801f2d0:	f3bf 8f5b 	dmb	ish
 801f2d4:	07db      	lsls	r3, r3, #31
 801f2d6:	d40b      	bmi.n	801f2f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f2d8:	4620      	mov	r0, r4
 801f2da:	f007 fea4 	bl	8027026 <__cxa_guard_acquire>
 801f2de:	b138      	cbz	r0, 801f2f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f2e0:	4620      	mov	r0, r4
 801f2e2:	f007 feac 	bl	802703e <__cxa_guard_release>
 801f2e6:	4a06      	ldr	r2, [pc, #24]	; (801f300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f2e8:	4909      	ldr	r1, [pc, #36]	; (801f310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f2ea:	480a      	ldr	r0, [pc, #40]	; (801f314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f2ec:	f007 fe94 	bl	8027018 <__aeabi_atexit>
 801f2f0:	4b05      	ldr	r3, [pc, #20]	; (801f308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f2f2:	612b      	str	r3, [r5, #16]
 801f2f4:	4b07      	ldr	r3, [pc, #28]	; (801f314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f2f6:	616b      	str	r3, [r5, #20]
 801f2f8:	bd38      	pop	{r3, r4, r5, pc}
 801f2fa:	bf00      	nop
 801f2fc:	20025a70 	.word	0x20025a70
 801f300:	20000000 	.word	0x20000000
 801f304:	0801c0b5 	.word	0x0801c0b5
 801f308:	200002f0 	.word	0x200002f0
 801f30c:	20025a74 	.word	0x20025a74
 801f310:	0801c0b3 	.word	0x0801c0b3
 801f314:	200002f4 	.word	0x200002f4

0801f318 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f318:	b538      	push	{r3, r4, r5, lr}
 801f31a:	4c15      	ldr	r4, [pc, #84]	; (801f370 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f31c:	7823      	ldrb	r3, [r4, #0]
 801f31e:	f3bf 8f5b 	dmb	ish
 801f322:	07da      	lsls	r2, r3, #31
 801f324:	4605      	mov	r5, r0
 801f326:	d40b      	bmi.n	801f340 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f328:	4620      	mov	r0, r4
 801f32a:	f007 fe7c 	bl	8027026 <__cxa_guard_acquire>
 801f32e:	b138      	cbz	r0, 801f340 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f330:	4620      	mov	r0, r4
 801f332:	f007 fe84 	bl	802703e <__cxa_guard_release>
 801f336:	4a0f      	ldr	r2, [pc, #60]	; (801f374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f338:	490f      	ldr	r1, [pc, #60]	; (801f378 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f33a:	4810      	ldr	r0, [pc, #64]	; (801f37c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f33c:	f007 fe6c 	bl	8027018 <__aeabi_atexit>
 801f340:	4c0f      	ldr	r4, [pc, #60]	; (801f380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f342:	7823      	ldrb	r3, [r4, #0]
 801f344:	f3bf 8f5b 	dmb	ish
 801f348:	07db      	lsls	r3, r3, #31
 801f34a:	d40b      	bmi.n	801f364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f34c:	4620      	mov	r0, r4
 801f34e:	f007 fe6a 	bl	8027026 <__cxa_guard_acquire>
 801f352:	b138      	cbz	r0, 801f364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f354:	4620      	mov	r0, r4
 801f356:	f007 fe72 	bl	802703e <__cxa_guard_release>
 801f35a:	4a06      	ldr	r2, [pc, #24]	; (801f374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f35c:	4909      	ldr	r1, [pc, #36]	; (801f384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f35e:	480a      	ldr	r0, [pc, #40]	; (801f388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f360:	f007 fe5a 	bl	8027018 <__aeabi_atexit>
 801f364:	4b05      	ldr	r3, [pc, #20]	; (801f37c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f366:	60ab      	str	r3, [r5, #8]
 801f368:	4b07      	ldr	r3, [pc, #28]	; (801f388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f36a:	60eb      	str	r3, [r5, #12]
 801f36c:	bd38      	pop	{r3, r4, r5, pc}
 801f36e:	bf00      	nop
 801f370:	20025a48 	.word	0x20025a48
 801f374:	20000000 	.word	0x20000000
 801f378:	0801c0b9 	.word	0x0801c0b9
 801f37c:	200002c8 	.word	0x200002c8
 801f380:	20025a4c 	.word	0x20025a4c
 801f384:	0801c0b7 	.word	0x0801c0b7
 801f388:	200002cc 	.word	0x200002cc

0801f38c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f38c:	b510      	push	{r4, lr}
 801f38e:	4604      	mov	r4, r0
 801f390:	f7ff ff88 	bl	801f2a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f394:	4620      	mov	r0, r4
 801f396:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f39a:	f7ff bfbd 	b.w	801f318 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f3a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f3a0:	b538      	push	{r3, r4, r5, lr}
 801f3a2:	4c15      	ldr	r4, [pc, #84]	; (801f3f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f3a4:	7823      	ldrb	r3, [r4, #0]
 801f3a6:	f3bf 8f5b 	dmb	ish
 801f3aa:	07da      	lsls	r2, r3, #31
 801f3ac:	4605      	mov	r5, r0
 801f3ae:	d40b      	bmi.n	801f3c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f3b0:	4620      	mov	r0, r4
 801f3b2:	f007 fe38 	bl	8027026 <__cxa_guard_acquire>
 801f3b6:	b138      	cbz	r0, 801f3c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f3b8:	4620      	mov	r0, r4
 801f3ba:	f007 fe40 	bl	802703e <__cxa_guard_release>
 801f3be:	4a0f      	ldr	r2, [pc, #60]	; (801f3fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f3c0:	490f      	ldr	r1, [pc, #60]	; (801f400 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f3c2:	4810      	ldr	r0, [pc, #64]	; (801f404 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f3c4:	f007 fe28 	bl	8027018 <__aeabi_atexit>
 801f3c8:	4c0f      	ldr	r4, [pc, #60]	; (801f408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f3ca:	7823      	ldrb	r3, [r4, #0]
 801f3cc:	f3bf 8f5b 	dmb	ish
 801f3d0:	07db      	lsls	r3, r3, #31
 801f3d2:	d40b      	bmi.n	801f3ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f3d4:	4620      	mov	r0, r4
 801f3d6:	f007 fe26 	bl	8027026 <__cxa_guard_acquire>
 801f3da:	b138      	cbz	r0, 801f3ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f3dc:	4620      	mov	r0, r4
 801f3de:	f007 fe2e 	bl	802703e <__cxa_guard_release>
 801f3e2:	4a06      	ldr	r2, [pc, #24]	; (801f3fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f3e4:	4909      	ldr	r1, [pc, #36]	; (801f40c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f3e6:	480a      	ldr	r0, [pc, #40]	; (801f410 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f3e8:	f007 fe16 	bl	8027018 <__aeabi_atexit>
 801f3ec:	4b05      	ldr	r3, [pc, #20]	; (801f404 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f3ee:	622b      	str	r3, [r5, #32]
 801f3f0:	4b07      	ldr	r3, [pc, #28]	; (801f410 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f3f2:	626b      	str	r3, [r5, #36]	; 0x24
 801f3f4:	bd38      	pop	{r3, r4, r5, pc}
 801f3f6:	bf00      	nop
 801f3f8:	20025a78 	.word	0x20025a78
 801f3fc:	20000000 	.word	0x20000000
 801f400:	0801c0ad 	.word	0x0801c0ad
 801f404:	200002f8 	.word	0x200002f8
 801f408:	20025a7c 	.word	0x20025a7c
 801f40c:	0801c0ab 	.word	0x0801c0ab
 801f410:	200002fc 	.word	0x200002fc

0801f414 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f414:	b538      	push	{r3, r4, r5, lr}
 801f416:	4c15      	ldr	r4, [pc, #84]	; (801f46c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f418:	7823      	ldrb	r3, [r4, #0]
 801f41a:	f3bf 8f5b 	dmb	ish
 801f41e:	07da      	lsls	r2, r3, #31
 801f420:	4605      	mov	r5, r0
 801f422:	d40b      	bmi.n	801f43c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f424:	4620      	mov	r0, r4
 801f426:	f007 fdfe 	bl	8027026 <__cxa_guard_acquire>
 801f42a:	b138      	cbz	r0, 801f43c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f42c:	4620      	mov	r0, r4
 801f42e:	f007 fe06 	bl	802703e <__cxa_guard_release>
 801f432:	4a0f      	ldr	r2, [pc, #60]	; (801f470 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f434:	490f      	ldr	r1, [pc, #60]	; (801f474 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f436:	4810      	ldr	r0, [pc, #64]	; (801f478 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f438:	f007 fdee 	bl	8027018 <__aeabi_atexit>
 801f43c:	4c0f      	ldr	r4, [pc, #60]	; (801f47c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f43e:	7823      	ldrb	r3, [r4, #0]
 801f440:	f3bf 8f5b 	dmb	ish
 801f444:	07db      	lsls	r3, r3, #31
 801f446:	d40b      	bmi.n	801f460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f448:	4620      	mov	r0, r4
 801f44a:	f007 fdec 	bl	8027026 <__cxa_guard_acquire>
 801f44e:	b138      	cbz	r0, 801f460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f450:	4620      	mov	r0, r4
 801f452:	f007 fdf4 	bl	802703e <__cxa_guard_release>
 801f456:	4a06      	ldr	r2, [pc, #24]	; (801f470 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f458:	4909      	ldr	r1, [pc, #36]	; (801f480 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f45a:	480a      	ldr	r0, [pc, #40]	; (801f484 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f45c:	f007 fddc 	bl	8027018 <__aeabi_atexit>
 801f460:	4b05      	ldr	r3, [pc, #20]	; (801f478 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f462:	61ab      	str	r3, [r5, #24]
 801f464:	4b07      	ldr	r3, [pc, #28]	; (801f484 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f466:	61eb      	str	r3, [r5, #28]
 801f468:	bd38      	pop	{r3, r4, r5, pc}
 801f46a:	bf00      	nop
 801f46c:	20025a50 	.word	0x20025a50
 801f470:	20000000 	.word	0x20000000
 801f474:	0801c0b1 	.word	0x0801c0b1
 801f478:	200002d0 	.word	0x200002d0
 801f47c:	20025a54 	.word	0x20025a54
 801f480:	0801c0af 	.word	0x0801c0af
 801f484:	200002d4 	.word	0x200002d4

0801f488 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f488:	b510      	push	{r4, lr}
 801f48a:	4604      	mov	r4, r0
 801f48c:	f7ff ff88 	bl	801f3a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f490:	4620      	mov	r0, r4
 801f492:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f496:	f7ff bfbd 	b.w	801f414 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f49c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f49c:	b538      	push	{r3, r4, r5, lr}
 801f49e:	4c15      	ldr	r4, [pc, #84]	; (801f4f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f4a0:	7823      	ldrb	r3, [r4, #0]
 801f4a2:	f3bf 8f5b 	dmb	ish
 801f4a6:	07da      	lsls	r2, r3, #31
 801f4a8:	4605      	mov	r5, r0
 801f4aa:	d40b      	bmi.n	801f4c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f4ac:	4620      	mov	r0, r4
 801f4ae:	f007 fdba 	bl	8027026 <__cxa_guard_acquire>
 801f4b2:	b138      	cbz	r0, 801f4c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f4b4:	4620      	mov	r0, r4
 801f4b6:	f007 fdc2 	bl	802703e <__cxa_guard_release>
 801f4ba:	4a0f      	ldr	r2, [pc, #60]	; (801f4f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f4bc:	490f      	ldr	r1, [pc, #60]	; (801f4fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f4be:	4810      	ldr	r0, [pc, #64]	; (801f500 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f4c0:	f007 fdaa 	bl	8027018 <__aeabi_atexit>
 801f4c4:	4c0f      	ldr	r4, [pc, #60]	; (801f504 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f4c6:	7823      	ldrb	r3, [r4, #0]
 801f4c8:	f3bf 8f5b 	dmb	ish
 801f4cc:	07db      	lsls	r3, r3, #31
 801f4ce:	d40b      	bmi.n	801f4e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f4d0:	4620      	mov	r0, r4
 801f4d2:	f007 fda8 	bl	8027026 <__cxa_guard_acquire>
 801f4d6:	b138      	cbz	r0, 801f4e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f4d8:	4620      	mov	r0, r4
 801f4da:	f007 fdb0 	bl	802703e <__cxa_guard_release>
 801f4de:	4a06      	ldr	r2, [pc, #24]	; (801f4f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f4e0:	4909      	ldr	r1, [pc, #36]	; (801f508 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f4e2:	480a      	ldr	r0, [pc, #40]	; (801f50c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f4e4:	f007 fd98 	bl	8027018 <__aeabi_atexit>
 801f4e8:	4b05      	ldr	r3, [pc, #20]	; (801f500 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f4ea:	632b      	str	r3, [r5, #48]	; 0x30
 801f4ec:	4b07      	ldr	r3, [pc, #28]	; (801f50c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f4ee:	636b      	str	r3, [r5, #52]	; 0x34
 801f4f0:	bd38      	pop	{r3, r4, r5, pc}
 801f4f2:	bf00      	nop
 801f4f4:	20025a88 	.word	0x20025a88
 801f4f8:	20000000 	.word	0x20000000
 801f4fc:	0801c0a5 	.word	0x0801c0a5
 801f500:	20000308 	.word	0x20000308
 801f504:	20025a8c 	.word	0x20025a8c
 801f508:	0801c0a3 	.word	0x0801c0a3
 801f50c:	2000030c 	.word	0x2000030c

0801f510 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f510:	b538      	push	{r3, r4, r5, lr}
 801f512:	4c15      	ldr	r4, [pc, #84]	; (801f568 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f514:	7823      	ldrb	r3, [r4, #0]
 801f516:	f3bf 8f5b 	dmb	ish
 801f51a:	07da      	lsls	r2, r3, #31
 801f51c:	4605      	mov	r5, r0
 801f51e:	d40b      	bmi.n	801f538 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f520:	4620      	mov	r0, r4
 801f522:	f007 fd80 	bl	8027026 <__cxa_guard_acquire>
 801f526:	b138      	cbz	r0, 801f538 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f528:	4620      	mov	r0, r4
 801f52a:	f007 fd88 	bl	802703e <__cxa_guard_release>
 801f52e:	4a0f      	ldr	r2, [pc, #60]	; (801f56c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f530:	490f      	ldr	r1, [pc, #60]	; (801f570 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f532:	4810      	ldr	r0, [pc, #64]	; (801f574 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f534:	f007 fd70 	bl	8027018 <__aeabi_atexit>
 801f538:	4c0f      	ldr	r4, [pc, #60]	; (801f578 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f53a:	7823      	ldrb	r3, [r4, #0]
 801f53c:	f3bf 8f5b 	dmb	ish
 801f540:	07db      	lsls	r3, r3, #31
 801f542:	d40b      	bmi.n	801f55c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f544:	4620      	mov	r0, r4
 801f546:	f007 fd6e 	bl	8027026 <__cxa_guard_acquire>
 801f54a:	b138      	cbz	r0, 801f55c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f54c:	4620      	mov	r0, r4
 801f54e:	f007 fd76 	bl	802703e <__cxa_guard_release>
 801f552:	4a06      	ldr	r2, [pc, #24]	; (801f56c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f554:	4909      	ldr	r1, [pc, #36]	; (801f57c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f556:	480a      	ldr	r0, [pc, #40]	; (801f580 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f558:	f007 fd5e 	bl	8027018 <__aeabi_atexit>
 801f55c:	4b05      	ldr	r3, [pc, #20]	; (801f574 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f55e:	62ab      	str	r3, [r5, #40]	; 0x28
 801f560:	4b07      	ldr	r3, [pc, #28]	; (801f580 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f562:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f564:	bd38      	pop	{r3, r4, r5, pc}
 801f566:	bf00      	nop
 801f568:	20025a58 	.word	0x20025a58
 801f56c:	20000000 	.word	0x20000000
 801f570:	0801c0a9 	.word	0x0801c0a9
 801f574:	200002d8 	.word	0x200002d8
 801f578:	20025a5c 	.word	0x20025a5c
 801f57c:	0801c0a7 	.word	0x0801c0a7
 801f580:	200002dc 	.word	0x200002dc

0801f584 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f584:	b510      	push	{r4, lr}
 801f586:	4604      	mov	r4, r0
 801f588:	f7ff ff88 	bl	801f49c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f58c:	4620      	mov	r0, r4
 801f58e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f592:	f7ff bfbd 	b.w	801f510 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f598 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f598:	b538      	push	{r3, r4, r5, lr}
 801f59a:	4c15      	ldr	r4, [pc, #84]	; (801f5f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f59c:	7823      	ldrb	r3, [r4, #0]
 801f59e:	f3bf 8f5b 	dmb	ish
 801f5a2:	07da      	lsls	r2, r3, #31
 801f5a4:	4605      	mov	r5, r0
 801f5a6:	d40b      	bmi.n	801f5c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f5a8:	4620      	mov	r0, r4
 801f5aa:	f007 fd3c 	bl	8027026 <__cxa_guard_acquire>
 801f5ae:	b138      	cbz	r0, 801f5c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f5b0:	4620      	mov	r0, r4
 801f5b2:	f007 fd44 	bl	802703e <__cxa_guard_release>
 801f5b6:	4a0f      	ldr	r2, [pc, #60]	; (801f5f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f5b8:	490f      	ldr	r1, [pc, #60]	; (801f5f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f5ba:	4810      	ldr	r0, [pc, #64]	; (801f5fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f5bc:	f007 fd2c 	bl	8027018 <__aeabi_atexit>
 801f5c0:	4c0f      	ldr	r4, [pc, #60]	; (801f600 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f5c2:	7823      	ldrb	r3, [r4, #0]
 801f5c4:	f3bf 8f5b 	dmb	ish
 801f5c8:	07db      	lsls	r3, r3, #31
 801f5ca:	d40b      	bmi.n	801f5e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f5cc:	4620      	mov	r0, r4
 801f5ce:	f007 fd2a 	bl	8027026 <__cxa_guard_acquire>
 801f5d2:	b138      	cbz	r0, 801f5e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f5d4:	4620      	mov	r0, r4
 801f5d6:	f007 fd32 	bl	802703e <__cxa_guard_release>
 801f5da:	4a06      	ldr	r2, [pc, #24]	; (801f5f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f5dc:	4909      	ldr	r1, [pc, #36]	; (801f604 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f5de:	480a      	ldr	r0, [pc, #40]	; (801f608 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f5e0:	f007 fd1a 	bl	8027018 <__aeabi_atexit>
 801f5e4:	4b05      	ldr	r3, [pc, #20]	; (801f5fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f5e6:	652b      	str	r3, [r5, #80]	; 0x50
 801f5e8:	4b07      	ldr	r3, [pc, #28]	; (801f608 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f5ea:	656b      	str	r3, [r5, #84]	; 0x54
 801f5ec:	bd38      	pop	{r3, r4, r5, pc}
 801f5ee:	bf00      	nop
 801f5f0:	20025a90 	.word	0x20025a90
 801f5f4:	20000000 	.word	0x20000000
 801f5f8:	0801c095 	.word	0x0801c095
 801f5fc:	20000310 	.word	0x20000310
 801f600:	20025a94 	.word	0x20025a94
 801f604:	0801c093 	.word	0x0801c093
 801f608:	20000314 	.word	0x20000314

0801f60c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f60c:	b538      	push	{r3, r4, r5, lr}
 801f60e:	4c15      	ldr	r4, [pc, #84]	; (801f664 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f610:	7823      	ldrb	r3, [r4, #0]
 801f612:	f3bf 8f5b 	dmb	ish
 801f616:	07da      	lsls	r2, r3, #31
 801f618:	4605      	mov	r5, r0
 801f61a:	d40b      	bmi.n	801f634 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f61c:	4620      	mov	r0, r4
 801f61e:	f007 fd02 	bl	8027026 <__cxa_guard_acquire>
 801f622:	b138      	cbz	r0, 801f634 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f624:	4620      	mov	r0, r4
 801f626:	f007 fd0a 	bl	802703e <__cxa_guard_release>
 801f62a:	4a0f      	ldr	r2, [pc, #60]	; (801f668 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f62c:	490f      	ldr	r1, [pc, #60]	; (801f66c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f62e:	4810      	ldr	r0, [pc, #64]	; (801f670 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f630:	f007 fcf2 	bl	8027018 <__aeabi_atexit>
 801f634:	4c0f      	ldr	r4, [pc, #60]	; (801f674 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f636:	7823      	ldrb	r3, [r4, #0]
 801f638:	f3bf 8f5b 	dmb	ish
 801f63c:	07db      	lsls	r3, r3, #31
 801f63e:	d40b      	bmi.n	801f658 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f640:	4620      	mov	r0, r4
 801f642:	f007 fcf0 	bl	8027026 <__cxa_guard_acquire>
 801f646:	b138      	cbz	r0, 801f658 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f648:	4620      	mov	r0, r4
 801f64a:	f007 fcf8 	bl	802703e <__cxa_guard_release>
 801f64e:	4a06      	ldr	r2, [pc, #24]	; (801f668 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f650:	4909      	ldr	r1, [pc, #36]	; (801f678 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f652:	480a      	ldr	r0, [pc, #40]	; (801f67c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f654:	f007 fce0 	bl	8027018 <__aeabi_atexit>
 801f658:	4b05      	ldr	r3, [pc, #20]	; (801f670 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f65a:	64ab      	str	r3, [r5, #72]	; 0x48
 801f65c:	4b07      	ldr	r3, [pc, #28]	; (801f67c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f65e:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f660:	bd38      	pop	{r3, r4, r5, pc}
 801f662:	bf00      	nop
 801f664:	20025a98 	.word	0x20025a98
 801f668:	20000000 	.word	0x20000000
 801f66c:	0801c099 	.word	0x0801c099
 801f670:	20000318 	.word	0x20000318
 801f674:	20025a9c 	.word	0x20025a9c
 801f678:	0801c097 	.word	0x0801c097
 801f67c:	2000031c 	.word	0x2000031c

0801f680 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f680:	b538      	push	{r3, r4, r5, lr}
 801f682:	4c15      	ldr	r4, [pc, #84]	; (801f6d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f684:	7823      	ldrb	r3, [r4, #0]
 801f686:	f3bf 8f5b 	dmb	ish
 801f68a:	07da      	lsls	r2, r3, #31
 801f68c:	4605      	mov	r5, r0
 801f68e:	d40b      	bmi.n	801f6a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f690:	4620      	mov	r0, r4
 801f692:	f007 fcc8 	bl	8027026 <__cxa_guard_acquire>
 801f696:	b138      	cbz	r0, 801f6a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f698:	4620      	mov	r0, r4
 801f69a:	f007 fcd0 	bl	802703e <__cxa_guard_release>
 801f69e:	4a0f      	ldr	r2, [pc, #60]	; (801f6dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f6a0:	490f      	ldr	r1, [pc, #60]	; (801f6e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f6a2:	4810      	ldr	r0, [pc, #64]	; (801f6e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f6a4:	f007 fcb8 	bl	8027018 <__aeabi_atexit>
 801f6a8:	4c0f      	ldr	r4, [pc, #60]	; (801f6e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f6aa:	7823      	ldrb	r3, [r4, #0]
 801f6ac:	f3bf 8f5b 	dmb	ish
 801f6b0:	07db      	lsls	r3, r3, #31
 801f6b2:	d40b      	bmi.n	801f6cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f6b4:	4620      	mov	r0, r4
 801f6b6:	f007 fcb6 	bl	8027026 <__cxa_guard_acquire>
 801f6ba:	b138      	cbz	r0, 801f6cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f6bc:	4620      	mov	r0, r4
 801f6be:	f007 fcbe 	bl	802703e <__cxa_guard_release>
 801f6c2:	4a06      	ldr	r2, [pc, #24]	; (801f6dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f6c4:	4909      	ldr	r1, [pc, #36]	; (801f6ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f6c6:	480a      	ldr	r0, [pc, #40]	; (801f6f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f6c8:	f007 fca6 	bl	8027018 <__aeabi_atexit>
 801f6cc:	4b05      	ldr	r3, [pc, #20]	; (801f6e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f6ce:	642b      	str	r3, [r5, #64]	; 0x40
 801f6d0:	4b07      	ldr	r3, [pc, #28]	; (801f6f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f6d2:	646b      	str	r3, [r5, #68]	; 0x44
 801f6d4:	bd38      	pop	{r3, r4, r5, pc}
 801f6d6:	bf00      	nop
 801f6d8:	20025a60 	.word	0x20025a60
 801f6dc:	20000000 	.word	0x20000000
 801f6e0:	0801c09d 	.word	0x0801c09d
 801f6e4:	200002e0 	.word	0x200002e0
 801f6e8:	20025a64 	.word	0x20025a64
 801f6ec:	0801c09b 	.word	0x0801c09b
 801f6f0:	200002e4 	.word	0x200002e4

0801f6f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f6f4:	b538      	push	{r3, r4, r5, lr}
 801f6f6:	4c15      	ldr	r4, [pc, #84]	; (801f74c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f6f8:	7823      	ldrb	r3, [r4, #0]
 801f6fa:	f3bf 8f5b 	dmb	ish
 801f6fe:	07da      	lsls	r2, r3, #31
 801f700:	4605      	mov	r5, r0
 801f702:	d40b      	bmi.n	801f71c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f704:	4620      	mov	r0, r4
 801f706:	f007 fc8e 	bl	8027026 <__cxa_guard_acquire>
 801f70a:	b138      	cbz	r0, 801f71c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f70c:	4620      	mov	r0, r4
 801f70e:	f007 fc96 	bl	802703e <__cxa_guard_release>
 801f712:	4a0f      	ldr	r2, [pc, #60]	; (801f750 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f714:	490f      	ldr	r1, [pc, #60]	; (801f754 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f716:	4810      	ldr	r0, [pc, #64]	; (801f758 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f718:	f007 fc7e 	bl	8027018 <__aeabi_atexit>
 801f71c:	4c0f      	ldr	r4, [pc, #60]	; (801f75c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f71e:	7823      	ldrb	r3, [r4, #0]
 801f720:	f3bf 8f5b 	dmb	ish
 801f724:	07db      	lsls	r3, r3, #31
 801f726:	d40b      	bmi.n	801f740 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f728:	4620      	mov	r0, r4
 801f72a:	f007 fc7c 	bl	8027026 <__cxa_guard_acquire>
 801f72e:	b138      	cbz	r0, 801f740 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f730:	4620      	mov	r0, r4
 801f732:	f007 fc84 	bl	802703e <__cxa_guard_release>
 801f736:	4a06      	ldr	r2, [pc, #24]	; (801f750 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f738:	4909      	ldr	r1, [pc, #36]	; (801f760 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f73a:	480a      	ldr	r0, [pc, #40]	; (801f764 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f73c:	f007 fc6c 	bl	8027018 <__aeabi_atexit>
 801f740:	4b05      	ldr	r3, [pc, #20]	; (801f758 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f742:	63ab      	str	r3, [r5, #56]	; 0x38
 801f744:	4b07      	ldr	r3, [pc, #28]	; (801f764 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f746:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f748:	bd38      	pop	{r3, r4, r5, pc}
 801f74a:	bf00      	nop
 801f74c:	20025a80 	.word	0x20025a80
 801f750:	20000000 	.word	0x20000000
 801f754:	0801c0a1 	.word	0x0801c0a1
 801f758:	20000300 	.word	0x20000300
 801f75c:	20025a84 	.word	0x20025a84
 801f760:	0801c09f 	.word	0x0801c09f
 801f764:	20000304 	.word	0x20000304

0801f768 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f768:	b510      	push	{r4, lr}
 801f76a:	4604      	mov	r4, r0
 801f76c:	f7ff ff14 	bl	801f598 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f770:	4620      	mov	r0, r4
 801f772:	f7ff ff85 	bl	801f680 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f776:	4620      	mov	r0, r4
 801f778:	f7ff ff48 	bl	801f60c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f77c:	4620      	mov	r0, r4
 801f77e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f782:	f7ff bfb7 	b.w	801f6f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f788 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f788:	b538      	push	{r3, r4, r5, lr}
 801f78a:	4c15      	ldr	r4, [pc, #84]	; (801f7e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f78c:	7823      	ldrb	r3, [r4, #0]
 801f78e:	f3bf 8f5b 	dmb	ish
 801f792:	07da      	lsls	r2, r3, #31
 801f794:	4605      	mov	r5, r0
 801f796:	d40b      	bmi.n	801f7b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f798:	4620      	mov	r0, r4
 801f79a:	f007 fc44 	bl	8027026 <__cxa_guard_acquire>
 801f79e:	b138      	cbz	r0, 801f7b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f7a0:	4620      	mov	r0, r4
 801f7a2:	f007 fc4c 	bl	802703e <__cxa_guard_release>
 801f7a6:	4a0f      	ldr	r2, [pc, #60]	; (801f7e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f7a8:	490f      	ldr	r1, [pc, #60]	; (801f7e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f7aa:	4810      	ldr	r0, [pc, #64]	; (801f7ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f7ac:	f007 fc34 	bl	8027018 <__aeabi_atexit>
 801f7b0:	4c0f      	ldr	r4, [pc, #60]	; (801f7f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f7b2:	7823      	ldrb	r3, [r4, #0]
 801f7b4:	f3bf 8f5b 	dmb	ish
 801f7b8:	07db      	lsls	r3, r3, #31
 801f7ba:	d40b      	bmi.n	801f7d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f7bc:	4620      	mov	r0, r4
 801f7be:	f007 fc32 	bl	8027026 <__cxa_guard_acquire>
 801f7c2:	b138      	cbz	r0, 801f7d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f7c4:	4620      	mov	r0, r4
 801f7c6:	f007 fc3a 	bl	802703e <__cxa_guard_release>
 801f7ca:	4a06      	ldr	r2, [pc, #24]	; (801f7e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f7cc:	4909      	ldr	r1, [pc, #36]	; (801f7f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f7ce:	480a      	ldr	r0, [pc, #40]	; (801f7f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f7d0:	f007 fc22 	bl	8027018 <__aeabi_atexit>
 801f7d4:	4b05      	ldr	r3, [pc, #20]	; (801f7ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f7d6:	662b      	str	r3, [r5, #96]	; 0x60
 801f7d8:	4b07      	ldr	r3, [pc, #28]	; (801f7f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f7da:	666b      	str	r3, [r5, #100]	; 0x64
 801f7dc:	bd38      	pop	{r3, r4, r5, pc}
 801f7de:	bf00      	nop
 801f7e0:	20025a68 	.word	0x20025a68
 801f7e4:	20000000 	.word	0x20000000
 801f7e8:	0801c08d 	.word	0x0801c08d
 801f7ec:	200002e8 	.word	0x200002e8
 801f7f0:	20025a6c 	.word	0x20025a6c
 801f7f4:	0801c08b 	.word	0x0801c08b
 801f7f8:	200002ec 	.word	0x200002ec

0801f7fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f7fc:	b538      	push	{r3, r4, r5, lr}
 801f7fe:	4c15      	ldr	r4, [pc, #84]	; (801f854 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f800:	7823      	ldrb	r3, [r4, #0]
 801f802:	f3bf 8f5b 	dmb	ish
 801f806:	07da      	lsls	r2, r3, #31
 801f808:	4605      	mov	r5, r0
 801f80a:	d40b      	bmi.n	801f824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f80c:	4620      	mov	r0, r4
 801f80e:	f007 fc0a 	bl	8027026 <__cxa_guard_acquire>
 801f812:	b138      	cbz	r0, 801f824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f814:	4620      	mov	r0, r4
 801f816:	f007 fc12 	bl	802703e <__cxa_guard_release>
 801f81a:	4a0f      	ldr	r2, [pc, #60]	; (801f858 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f81c:	490f      	ldr	r1, [pc, #60]	; (801f85c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f81e:	4810      	ldr	r0, [pc, #64]	; (801f860 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f820:	f007 fbfa 	bl	8027018 <__aeabi_atexit>
 801f824:	4c0f      	ldr	r4, [pc, #60]	; (801f864 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f826:	7823      	ldrb	r3, [r4, #0]
 801f828:	f3bf 8f5b 	dmb	ish
 801f82c:	07db      	lsls	r3, r3, #31
 801f82e:	d40b      	bmi.n	801f848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f830:	4620      	mov	r0, r4
 801f832:	f007 fbf8 	bl	8027026 <__cxa_guard_acquire>
 801f836:	b138      	cbz	r0, 801f848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f838:	4620      	mov	r0, r4
 801f83a:	f007 fc00 	bl	802703e <__cxa_guard_release>
 801f83e:	4a06      	ldr	r2, [pc, #24]	; (801f858 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f840:	4909      	ldr	r1, [pc, #36]	; (801f868 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f842:	480a      	ldr	r0, [pc, #40]	; (801f86c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f844:	f007 fbe8 	bl	8027018 <__aeabi_atexit>
 801f848:	4b05      	ldr	r3, [pc, #20]	; (801f860 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f84a:	65ab      	str	r3, [r5, #88]	; 0x58
 801f84c:	4b07      	ldr	r3, [pc, #28]	; (801f86c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f84e:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f850:	bd38      	pop	{r3, r4, r5, pc}
 801f852:	bf00      	nop
 801f854:	20025a40 	.word	0x20025a40
 801f858:	20000000 	.word	0x20000000
 801f85c:	0801c091 	.word	0x0801c091
 801f860:	200002c0 	.word	0x200002c0
 801f864:	20025a44 	.word	0x20025a44
 801f868:	0801c08f 	.word	0x0801c08f
 801f86c:	200002c4 	.word	0x200002c4

0801f870 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f870:	b510      	push	{r4, lr}
 801f872:	4604      	mov	r4, r0
 801f874:	f7ff ff88 	bl	801f788 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f878:	4620      	mov	r0, r4
 801f87a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f87e:	f7ff bfbd 	b.w	801f7fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f884:	b538      	push	{r3, r4, r5, lr}
 801f886:	4c15      	ldr	r4, [pc, #84]	; (801f8dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f888:	7823      	ldrb	r3, [r4, #0]
 801f88a:	f3bf 8f5b 	dmb	ish
 801f88e:	07da      	lsls	r2, r3, #31
 801f890:	4605      	mov	r5, r0
 801f892:	d40b      	bmi.n	801f8ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f894:	4620      	mov	r0, r4
 801f896:	f007 fbc6 	bl	8027026 <__cxa_guard_acquire>
 801f89a:	b138      	cbz	r0, 801f8ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f89c:	4620      	mov	r0, r4
 801f89e:	f007 fbce 	bl	802703e <__cxa_guard_release>
 801f8a2:	4a0f      	ldr	r2, [pc, #60]	; (801f8e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f8a4:	490f      	ldr	r1, [pc, #60]	; (801f8e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f8a6:	4810      	ldr	r0, [pc, #64]	; (801f8e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f8a8:	f007 fbb6 	bl	8027018 <__aeabi_atexit>
 801f8ac:	4c0f      	ldr	r4, [pc, #60]	; (801f8ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f8ae:	7823      	ldrb	r3, [r4, #0]
 801f8b0:	f3bf 8f5b 	dmb	ish
 801f8b4:	07db      	lsls	r3, r3, #31
 801f8b6:	d40b      	bmi.n	801f8d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f8b8:	4620      	mov	r0, r4
 801f8ba:	f007 fbb4 	bl	8027026 <__cxa_guard_acquire>
 801f8be:	b138      	cbz	r0, 801f8d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f8c0:	4620      	mov	r0, r4
 801f8c2:	f007 fbbc 	bl	802703e <__cxa_guard_release>
 801f8c6:	4a06      	ldr	r2, [pc, #24]	; (801f8e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f8c8:	4909      	ldr	r1, [pc, #36]	; (801f8f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f8ca:	480a      	ldr	r0, [pc, #40]	; (801f8f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f8cc:	f007 fba4 	bl	8027018 <__aeabi_atexit>
 801f8d0:	4b05      	ldr	r3, [pc, #20]	; (801f8e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f8d2:	672b      	str	r3, [r5, #112]	; 0x70
 801f8d4:	4b07      	ldr	r3, [pc, #28]	; (801f8f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f8d6:	676b      	str	r3, [r5, #116]	; 0x74
 801f8d8:	bd38      	pop	{r3, r4, r5, pc}
 801f8da:	bf00      	nop
 801f8dc:	20025a38 	.word	0x20025a38
 801f8e0:	20000000 	.word	0x20000000
 801f8e4:	0801c085 	.word	0x0801c085
 801f8e8:	200002b8 	.word	0x200002b8
 801f8ec:	20025a3c 	.word	0x20025a3c
 801f8f0:	0801c083 	.word	0x0801c083
 801f8f4:	200002bc 	.word	0x200002bc

0801f8f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f8f8:	b538      	push	{r3, r4, r5, lr}
 801f8fa:	4c15      	ldr	r4, [pc, #84]	; (801f950 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f8fc:	7823      	ldrb	r3, [r4, #0]
 801f8fe:	f3bf 8f5b 	dmb	ish
 801f902:	07da      	lsls	r2, r3, #31
 801f904:	4605      	mov	r5, r0
 801f906:	d40b      	bmi.n	801f920 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f908:	4620      	mov	r0, r4
 801f90a:	f007 fb8c 	bl	8027026 <__cxa_guard_acquire>
 801f90e:	b138      	cbz	r0, 801f920 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f910:	4620      	mov	r0, r4
 801f912:	f007 fb94 	bl	802703e <__cxa_guard_release>
 801f916:	4a0f      	ldr	r2, [pc, #60]	; (801f954 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f918:	490f      	ldr	r1, [pc, #60]	; (801f958 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f91a:	4810      	ldr	r0, [pc, #64]	; (801f95c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f91c:	f007 fb7c 	bl	8027018 <__aeabi_atexit>
 801f920:	4c0f      	ldr	r4, [pc, #60]	; (801f960 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f922:	7823      	ldrb	r3, [r4, #0]
 801f924:	f3bf 8f5b 	dmb	ish
 801f928:	07db      	lsls	r3, r3, #31
 801f92a:	d40b      	bmi.n	801f944 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f92c:	4620      	mov	r0, r4
 801f92e:	f007 fb7a 	bl	8027026 <__cxa_guard_acquire>
 801f932:	b138      	cbz	r0, 801f944 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f934:	4620      	mov	r0, r4
 801f936:	f007 fb82 	bl	802703e <__cxa_guard_release>
 801f93a:	4a06      	ldr	r2, [pc, #24]	; (801f954 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f93c:	4909      	ldr	r1, [pc, #36]	; (801f964 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f93e:	480a      	ldr	r0, [pc, #40]	; (801f968 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f940:	f007 fb6a 	bl	8027018 <__aeabi_atexit>
 801f944:	4b05      	ldr	r3, [pc, #20]	; (801f95c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f946:	66ab      	str	r3, [r5, #104]	; 0x68
 801f948:	4b07      	ldr	r3, [pc, #28]	; (801f968 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f94a:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f94c:	bd38      	pop	{r3, r4, r5, pc}
 801f94e:	bf00      	nop
 801f950:	20025a30 	.word	0x20025a30
 801f954:	20000000 	.word	0x20000000
 801f958:	0801c089 	.word	0x0801c089
 801f95c:	200002b0 	.word	0x200002b0
 801f960:	20025a34 	.word	0x20025a34
 801f964:	0801c087 	.word	0x0801c087
 801f968:	200002b4 	.word	0x200002b4

0801f96c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f96c:	b510      	push	{r4, lr}
 801f96e:	4604      	mov	r4, r0
 801f970:	f7ff ff88 	bl	801f884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f974:	4620      	mov	r0, r4
 801f976:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f97a:	f7ff bfbd 	b.w	801f8f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f97e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f97e:	b510      	push	{r4, lr}
 801f980:	4604      	mov	r4, r0
 801f982:	f7ff fff3 	bl	801f96c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f986:	4620      	mov	r0, r4
 801f988:	f7ff ff72 	bl	801f870 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f98c:	4620      	mov	r0, r4
 801f98e:	f7ff fdf9 	bl	801f584 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f992:	4620      	mov	r0, r4
 801f994:	f7ff fcfa 	bl	801f38c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f998:	4620      	mov	r0, r4
 801f99a:	f7ff fd75 	bl	801f488 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f99e:	4620      	mov	r0, r4
 801f9a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f9a4:	f7ff bee0 	b.w	801f768 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f9a8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f9a8:	b538      	push	{r3, r4, r5, lr}
 801f9aa:	4c0b      	ldr	r4, [pc, #44]	; (801f9d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f9ac:	7823      	ldrb	r3, [r4, #0]
 801f9ae:	f3bf 8f5b 	dmb	ish
 801f9b2:	07db      	lsls	r3, r3, #31
 801f9b4:	4605      	mov	r5, r0
 801f9b6:	d40b      	bmi.n	801f9d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f9b8:	4620      	mov	r0, r4
 801f9ba:	f007 fb34 	bl	8027026 <__cxa_guard_acquire>
 801f9be:	b138      	cbz	r0, 801f9d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f9c0:	4620      	mov	r0, r4
 801f9c2:	f007 fb3c 	bl	802703e <__cxa_guard_release>
 801f9c6:	4a05      	ldr	r2, [pc, #20]	; (801f9dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f9c8:	4905      	ldr	r1, [pc, #20]	; (801f9e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f9ca:	4806      	ldr	r0, [pc, #24]	; (801f9e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f9cc:	f007 fb24 	bl	8027018 <__aeabi_atexit>
 801f9d0:	4b04      	ldr	r3, [pc, #16]	; (801f9e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f9d2:	67ab      	str	r3, [r5, #120]	; 0x78
 801f9d4:	bd38      	pop	{r3, r4, r5, pc}
 801f9d6:	bf00      	nop
 801f9d8:	20025a24 	.word	0x20025a24
 801f9dc:	20000000 	.word	0x20000000
 801f9e0:	0801c081 	.word	0x0801c081
 801f9e4:	200002a8 	.word	0x200002a8

0801f9e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f9e8:	b538      	push	{r3, r4, r5, lr}
 801f9ea:	4c0b      	ldr	r4, [pc, #44]	; (801fa18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f9ec:	7823      	ldrb	r3, [r4, #0]
 801f9ee:	f3bf 8f5b 	dmb	ish
 801f9f2:	07db      	lsls	r3, r3, #31
 801f9f4:	4605      	mov	r5, r0
 801f9f6:	d40b      	bmi.n	801fa10 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f9f8:	4620      	mov	r0, r4
 801f9fa:	f007 fb14 	bl	8027026 <__cxa_guard_acquire>
 801f9fe:	b138      	cbz	r0, 801fa10 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801fa00:	4620      	mov	r0, r4
 801fa02:	f007 fb1c 	bl	802703e <__cxa_guard_release>
 801fa06:	4a05      	ldr	r2, [pc, #20]	; (801fa1c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801fa08:	4905      	ldr	r1, [pc, #20]	; (801fa20 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801fa0a:	4806      	ldr	r0, [pc, #24]	; (801fa24 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801fa0c:	f007 fb04 	bl	8027018 <__aeabi_atexit>
 801fa10:	4b04      	ldr	r3, [pc, #16]	; (801fa24 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801fa12:	67eb      	str	r3, [r5, #124]	; 0x7c
 801fa14:	bd38      	pop	{r3, r4, r5, pc}
 801fa16:	bf00      	nop
 801fa18:	20025a28 	.word	0x20025a28
 801fa1c:	20000000 	.word	0x20000000
 801fa20:	0801c07f 	.word	0x0801c07f
 801fa24:	200002ac 	.word	0x200002ac

0801fa28 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801fa28:	b570      	push	{r4, r5, r6, lr}
 801fa2a:	4d0d      	ldr	r5, [pc, #52]	; (801fa60 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801fa2c:	4c0d      	ldr	r4, [pc, #52]	; (801fa64 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801fa2e:	782b      	ldrb	r3, [r5, #0]
 801fa30:	f3bf 8f5b 	dmb	ish
 801fa34:	f013 0f01 	tst.w	r3, #1
 801fa38:	4606      	mov	r6, r0
 801fa3a:	d10d      	bne.n	801fa58 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801fa3c:	4628      	mov	r0, r5
 801fa3e:	f007 faf2 	bl	8027026 <__cxa_guard_acquire>
 801fa42:	b148      	cbz	r0, 801fa58 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801fa44:	4b08      	ldr	r3, [pc, #32]	; (801fa68 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801fa46:	6023      	str	r3, [r4, #0]
 801fa48:	4628      	mov	r0, r5
 801fa4a:	f007 faf8 	bl	802703e <__cxa_guard_release>
 801fa4e:	4a07      	ldr	r2, [pc, #28]	; (801fa6c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801fa50:	4907      	ldr	r1, [pc, #28]	; (801fa70 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801fa52:	4620      	mov	r0, r4
 801fa54:	f007 fae0 	bl	8027018 <__aeabi_atexit>
 801fa58:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801fa5c:	bd70      	pop	{r4, r5, r6, pc}
 801fa5e:	bf00      	nop
 801fa60:	20025a2c 	.word	0x20025a2c
 801fa64:	20025aa0 	.word	0x20025aa0
 801fa68:	0802c184 	.word	0x0802c184
 801fa6c:	20000000 	.word	0x20000000
 801fa70:	0801c07d 	.word	0x0801c07d

0801fa74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801fa74:	b510      	push	{r4, lr}
 801fa76:	4604      	mov	r4, r0
 801fa78:	f7ff ff96 	bl	801f9a8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801fa7c:	4620      	mov	r0, r4
 801fa7e:	f7ff ffb3 	bl	801f9e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801fa82:	4620      	mov	r0, r4
 801fa84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fa88:	f7ff bfce 	b.w	801fa28 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801fa8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801fa8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa90:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801fa94:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801fa98:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801fa9c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801faa0:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801faa4:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801faa8:	8808      	ldrh	r0, [r1, #0]
 801faaa:	fb05 4c0e 	mla	ip, r5, lr, r4
 801faae:	2d00      	cmp	r5, #0
 801fab0:	eb02 0a0c 	add.w	sl, r2, ip
 801fab4:	f2c0 80b0 	blt.w	801fc18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801fab8:	45ab      	cmp	fp, r5
 801faba:	f340 80ad 	ble.w	801fc18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801fabe:	2c00      	cmp	r4, #0
 801fac0:	f2c0 80a8 	blt.w	801fc14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801fac4:	45a6      	cmp	lr, r4
 801fac6:	f340 80a5 	ble.w	801fc14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801faca:	f812 200c 	ldrb.w	r2, [r2, ip]
 801face:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801fad2:	1c62      	adds	r2, r4, #1
 801fad4:	f100 80a3 	bmi.w	801fc1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801fad8:	4596      	cmp	lr, r2
 801fada:	f340 80a0 	ble.w	801fc1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801fade:	f1b9 0f00 	cmp.w	r9, #0
 801fae2:	f000 809c 	beq.w	801fc1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801fae6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801faea:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801faee:	3501      	adds	r5, #1
 801faf0:	f100 8099 	bmi.w	801fc26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801faf4:	45ab      	cmp	fp, r5
 801faf6:	f340 8096 	ble.w	801fc26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801fafa:	2f00      	cmp	r7, #0
 801fafc:	f000 8093 	beq.w	801fc26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801fb00:	2c00      	cmp	r4, #0
 801fb02:	f2c0 808e 	blt.w	801fc22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801fb06:	45a6      	cmp	lr, r4
 801fb08:	f340 808b 	ble.w	801fc22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801fb0c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801fb10:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801fb14:	3401      	adds	r4, #1
 801fb16:	f100 8089 	bmi.w	801fc2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801fb1a:	45a6      	cmp	lr, r4
 801fb1c:	f340 8086 	ble.w	801fc2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801fb20:	f1b9 0f00 	cmp.w	r9, #0
 801fb24:	f000 8082 	beq.w	801fc2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801fb28:	44d6      	add	lr, sl
 801fb2a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fb2e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801fb32:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801fb36:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801fb3a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801fb3e:	fb19 fe07 	smulbb	lr, r9, r7
 801fb42:	ea44 0808 	orr.w	r8, r4, r8
 801fb46:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801fb4a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801fb4e:	f1c7 0210 	rsb	r2, r7, #16
 801fb52:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801fb56:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fb5a:	ea44 0c0c 	orr.w	ip, r4, ip
 801fb5e:	eba2 0209 	sub.w	r2, r2, r9
 801fb62:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801fb66:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801fb6a:	fb04 f40c 	mul.w	r4, r4, ip
 801fb6e:	fb02 4808 	mla	r8, r2, r8, r4
 801fb72:	041a      	lsls	r2, r3, #16
 801fb74:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fb78:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fb7c:	4313      	orrs	r3, r2
 801fb7e:	042a      	lsls	r2, r5, #16
 801fb80:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fb84:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801fb88:	fb0e 8303 	mla	r3, lr, r3, r8
 801fb8c:	432a      	orrs	r2, r5
 801fb8e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801fb92:	fb07 3202 	mla	r2, r7, r2, r3
 801fb96:	0d53      	lsrs	r3, r2, #21
 801fb98:	0952      	lsrs	r2, r2, #5
 801fb9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fb9e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fba2:	431a      	orrs	r2, r3
 801fba4:	b293      	uxth	r3, r2
 801fba6:	b2b4      	uxth	r4, r6
 801fba8:	1202      	asrs	r2, r0, #8
 801fbaa:	43f6      	mvns	r6, r6
 801fbac:	b2f6      	uxtb	r6, r6
 801fbae:	121d      	asrs	r5, r3, #8
 801fbb0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801fbb4:	fb12 f206 	smulbb	r2, r2, r6
 801fbb8:	10c7      	asrs	r7, r0, #3
 801fbba:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fbbe:	00c0      	lsls	r0, r0, #3
 801fbc0:	fb05 2504 	mla	r5, r5, r4, r2
 801fbc4:	b2c0      	uxtb	r0, r0
 801fbc6:	10da      	asrs	r2, r3, #3
 801fbc8:	00db      	lsls	r3, r3, #3
 801fbca:	b2db      	uxtb	r3, r3
 801fbcc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fbd0:	fb10 f006 	smulbb	r0, r0, r6
 801fbd4:	b2ad      	uxth	r5, r5
 801fbd6:	fb03 0004 	mla	r0, r3, r4, r0
 801fbda:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fbde:	fb17 f706 	smulbb	r7, r7, r6
 801fbe2:	b280      	uxth	r0, r0
 801fbe4:	1c6b      	adds	r3, r5, #1
 801fbe6:	fb02 7204 	mla	r2, r2, r4, r7
 801fbea:	b292      	uxth	r2, r2
 801fbec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fbf0:	1c43      	adds	r3, r0, #1
 801fbf2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801fbf6:	1c50      	adds	r0, r2, #1
 801fbf8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801fbfc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fc00:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fc04:	0952      	lsrs	r2, r2, #5
 801fc06:	432b      	orrs	r3, r5
 801fc08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fc0c:	4313      	orrs	r3, r2
 801fc0e:	800b      	strh	r3, [r1, #0]
 801fc10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc14:	4680      	mov	r8, r0
 801fc16:	e75c      	b.n	801fad2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801fc18:	4684      	mov	ip, r0
 801fc1a:	4680      	mov	r8, r0
 801fc1c:	e767      	b.n	801faee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fc1e:	4684      	mov	ip, r0
 801fc20:	e765      	b.n	801faee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fc22:	4605      	mov	r5, r0
 801fc24:	e776      	b.n	801fb14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801fc26:	4603      	mov	r3, r0
 801fc28:	4605      	mov	r5, r0
 801fc2a:	e782      	b.n	801fb32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801fc2c:	4603      	mov	r3, r0
 801fc2e:	e780      	b.n	801fb32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801fc30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fc30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc34:	b099      	sub	sp, #100	; 0x64
 801fc36:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801fc3a:	9215      	str	r2, [sp, #84]	; 0x54
 801fc3c:	9309      	str	r3, [sp, #36]	; 0x24
 801fc3e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801fc40:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801fc44:	930d      	str	r3, [sp, #52]	; 0x34
 801fc46:	910c      	str	r1, [sp, #48]	; 0x30
 801fc48:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801fc4c:	9016      	str	r0, [sp, #88]	; 0x58
 801fc4e:	6850      	ldr	r0, [r2, #4]
 801fc50:	6812      	ldr	r2, [r2, #0]
 801fc52:	fb00 1303 	mla	r3, r0, r3, r1
 801fc56:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801fc5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fc5c:	681b      	ldr	r3, [r3, #0]
 801fc5e:	930b      	str	r3, [sp, #44]	; 0x2c
 801fc60:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fc62:	685e      	ldr	r6, [r3, #4]
 801fc64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fc66:	43db      	mvns	r3, r3
 801fc68:	b2db      	uxtb	r3, r3
 801fc6a:	3604      	adds	r6, #4
 801fc6c:	930a      	str	r3, [sp, #40]	; 0x28
 801fc6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fc70:	2b00      	cmp	r3, #0
 801fc72:	dc03      	bgt.n	801fc7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801fc74:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801fc76:	2b00      	cmp	r3, #0
 801fc78:	f340 8225 	ble.w	80200c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fc7c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fc7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc82:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fc86:	1e48      	subs	r0, r1, #1
 801fc88:	1e57      	subs	r7, r2, #1
 801fc8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc8c:	2b00      	cmp	r3, #0
 801fc8e:	f340 80e3 	ble.w	801fe58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801fc92:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801fc96:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fc9a:	d406      	bmi.n	801fcaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fc9c:	4584      	cmp	ip, r0
 801fc9e:	da04      	bge.n	801fcaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fca0:	2b00      	cmp	r3, #0
 801fca2:	db02      	blt.n	801fcaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fca4:	42bb      	cmp	r3, r7
 801fca6:	f2c0 80d8 	blt.w	801fe5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fcaa:	f11c 0c01 	adds.w	ip, ip, #1
 801fcae:	f100 80c9 	bmi.w	801fe44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fcb2:	4561      	cmp	r1, ip
 801fcb4:	f2c0 80c6 	blt.w	801fe44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fcb8:	3301      	adds	r3, #1
 801fcba:	f100 80c3 	bmi.w	801fe44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fcbe:	429a      	cmp	r2, r3
 801fcc0:	f2c0 80c0 	blt.w	801fe44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fcc4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801fcc8:	4647      	mov	r7, r8
 801fcca:	f1bb 0f00 	cmp.w	fp, #0
 801fcce:	f340 80e3 	ble.w	801fe98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801fcd2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fcd4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fcd6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fcda:	689b      	ldr	r3, [r3, #8]
 801fcdc:	ea5f 422a 	movs.w	r2, sl, asr #16
 801fce0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fce4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801fce8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fcec:	f100 8121 	bmi.w	801ff32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fcf0:	f103 39ff 	add.w	r9, r3, #4294967295
 801fcf4:	454a      	cmp	r2, r9
 801fcf6:	f280 811c 	bge.w	801ff32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fcfa:	f1bc 0f00 	cmp.w	ip, #0
 801fcfe:	f2c0 8118 	blt.w	801ff32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fd02:	f10e 39ff 	add.w	r9, lr, #4294967295
 801fd06:	45cc      	cmp	ip, r9
 801fd08:	f280 8113 	bge.w	801ff32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fd0c:	b21b      	sxth	r3, r3
 801fd0e:	fb0c 2203 	mla	r2, ip, r3, r2
 801fd12:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fd14:	eb04 0902 	add.w	r9, r4, r2
 801fd18:	5ca2      	ldrb	r2, [r4, r2]
 801fd1a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801fd1e:	2800      	cmp	r0, #0
 801fd20:	f000 80fe 	beq.w	801ff20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801fd24:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fd28:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801fd2c:	9211      	str	r2, [sp, #68]	; 0x44
 801fd2e:	b151      	cbz	r1, 801fd46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fd30:	eb09 0203 	add.w	r2, r9, r3
 801fd34:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fd38:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fd3c:	930f      	str	r3, [sp, #60]	; 0x3c
 801fd3e:	7853      	ldrb	r3, [r2, #1]
 801fd40:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fd44:	9312      	str	r3, [sp, #72]	; 0x48
 801fd46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fd48:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fd4a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fd4e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fd52:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fd56:	ea4c 0c03 	orr.w	ip, ip, r3
 801fd5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fd5c:	041b      	lsls	r3, r3, #16
 801fd5e:	fb10 f201 	smulbb	r2, r0, r1
 801fd62:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801fd66:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fd6a:	10d2      	asrs	r2, r2, #3
 801fd6c:	4323      	orrs	r3, r4
 801fd6e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801fd72:	4353      	muls	r3, r2
 801fd74:	fb09 330c 	mla	r3, r9, ip, r3
 801fd78:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801fd7c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fd80:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fd84:	ea4c 0e0e 	orr.w	lr, ip, lr
 801fd88:	f1c1 0c10 	rsb	ip, r1, #16
 801fd8c:	ebac 0c00 	sub.w	ip, ip, r0
 801fd90:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fd94:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801fd98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fd9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fd9c:	0418      	lsls	r0, r3, #16
 801fd9e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fda2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fda6:	4318      	orrs	r0, r3
 801fda8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801fdac:	fb02 c200 	mla	r2, r2, r0, ip
 801fdb0:	0d53      	lsrs	r3, r2, #21
 801fdb2:	0952      	lsrs	r2, r2, #5
 801fdb4:	8838      	ldrh	r0, [r7, #0]
 801fdb6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fdba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fdbe:	431a      	orrs	r2, r3
 801fdc0:	b292      	uxth	r2, r2
 801fdc2:	1201      	asrs	r1, r0, #8
 801fdc4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801fdc8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801fdcc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fdd0:	fb11 f104 	smulbb	r1, r1, r4
 801fdd4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801fdd8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fddc:	00c0      	lsls	r0, r0, #3
 801fdde:	fb0c 1c03 	mla	ip, ip, r3, r1
 801fde2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fde6:	10d1      	asrs	r1, r2, #3
 801fde8:	b2c0      	uxtb	r0, r0
 801fdea:	00d2      	lsls	r2, r2, #3
 801fdec:	b2d2      	uxtb	r2, r2
 801fdee:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fdf2:	fb1e fe04 	smulbb	lr, lr, r4
 801fdf6:	fb10 f004 	smulbb	r0, r0, r4
 801fdfa:	fa1f fc8c 	uxth.w	ip, ip
 801fdfe:	fb01 e103 	mla	r1, r1, r3, lr
 801fe02:	fb02 0303 	mla	r3, r2, r3, r0
 801fe06:	b29a      	uxth	r2, r3
 801fe08:	f10c 0301 	add.w	r3, ip, #1
 801fe0c:	b289      	uxth	r1, r1
 801fe0e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fe12:	1c53      	adds	r3, r2, #1
 801fe14:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fe18:	1c4a      	adds	r2, r1, #1
 801fe1a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fe1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fe22:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fe26:	0949      	lsrs	r1, r1, #5
 801fe28:	ea43 030c 	orr.w	r3, r3, ip
 801fe2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe30:	430b      	orrs	r3, r1
 801fe32:	803b      	strh	r3, [r7, #0]
 801fe34:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fe36:	449a      	add	sl, r3
 801fe38:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fe3a:	3702      	adds	r7, #2
 801fe3c:	441d      	add	r5, r3
 801fe3e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fe42:	e742      	b.n	801fcca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fe44:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fe46:	449a      	add	sl, r3
 801fe48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fe4a:	441d      	add	r5, r3
 801fe4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe4e:	3b01      	subs	r3, #1
 801fe50:	9309      	str	r3, [sp, #36]	; 0x24
 801fe52:	f108 0802 	add.w	r8, r8, #2
 801fe56:	e718      	b.n	801fc8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fe58:	d023      	beq.n	801fea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fe5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe5c:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fe5e:	3b01      	subs	r3, #1
 801fe60:	fb00 a003 	mla	r0, r0, r3, sl
 801fe64:	1400      	asrs	r0, r0, #16
 801fe66:	f53f af2d 	bmi.w	801fcc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fe6a:	3901      	subs	r1, #1
 801fe6c:	4288      	cmp	r0, r1
 801fe6e:	f6bf af29 	bge.w	801fcc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fe72:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fe74:	fb01 5303 	mla	r3, r1, r3, r5
 801fe78:	141b      	asrs	r3, r3, #16
 801fe7a:	f53f af23 	bmi.w	801fcc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fe7e:	3a01      	subs	r2, #1
 801fe80:	4293      	cmp	r3, r2
 801fe82:	f6bf af1f 	bge.w	801fcc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fe86:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fe8a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fe8e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fe92:	f1be 0f00 	cmp.w	lr, #0
 801fe96:	dc6c      	bgt.n	801ff72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fe98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe9a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fe9e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fea2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fea4:	2b00      	cmp	r3, #0
 801fea6:	f340 810e 	ble.w	80200c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801feaa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801feae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801feb2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801feb6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801feb8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801febc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fec0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fec4:	eef0 6a62 	vmov.f32	s13, s5
 801fec8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fecc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fed0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fed4:	ee16 aa90 	vmov	sl, s13
 801fed8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fedc:	eef0 6a43 	vmov.f32	s13, s6
 801fee0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fee4:	ee12 2a90 	vmov	r2, s5
 801fee8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801feec:	fb92 f3f3 	sdiv	r3, r2, r3
 801fef0:	ee13 2a10 	vmov	r2, s6
 801fef4:	9325      	str	r3, [sp, #148]	; 0x94
 801fef6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fef8:	fb92 f3f3 	sdiv	r3, r2, r3
 801fefc:	9326      	str	r3, [sp, #152]	; 0x98
 801fefe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ff00:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801ff02:	3b01      	subs	r3, #1
 801ff04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff08:	930c      	str	r3, [sp, #48]	; 0x30
 801ff0a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ff0c:	bf08      	it	eq
 801ff0e:	4613      	moveq	r3, r2
 801ff10:	ee16 5a90 	vmov	r5, s13
 801ff14:	9309      	str	r3, [sp, #36]	; 0x24
 801ff16:	eeb0 3a67 	vmov.f32	s6, s15
 801ff1a:	eef0 2a47 	vmov.f32	s5, s14
 801ff1e:	e6a6      	b.n	801fc6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ff20:	2900      	cmp	r1, #0
 801ff22:	f43f af10 	beq.w	801fd46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ff26:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ff2a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ff2e:	930f      	str	r3, [sp, #60]	; 0x3c
 801ff30:	e709      	b.n	801fd46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ff32:	f112 0901 	adds.w	r9, r2, #1
 801ff36:	f53f af7d 	bmi.w	801fe34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ff3a:	454b      	cmp	r3, r9
 801ff3c:	f6ff af7a 	blt.w	801fe34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ff40:	f11c 0901 	adds.w	r9, ip, #1
 801ff44:	f53f af76 	bmi.w	801fe34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ff48:	45ce      	cmp	lr, r9
 801ff4a:	f6ff af73 	blt.w	801fe34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ff4e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ff50:	9202      	str	r2, [sp, #8]
 801ff52:	b21b      	sxth	r3, r3
 801ff54:	fa0f f28e 	sxth.w	r2, lr
 801ff58:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ff5c:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ff60:	9201      	str	r2, [sp, #4]
 801ff62:	9300      	str	r3, [sp, #0]
 801ff64:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ff66:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ff68:	4633      	mov	r3, r6
 801ff6a:	4639      	mov	r1, r7
 801ff6c:	f7ff fd8e 	bl	801fa8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ff70:	e760      	b.n	801fe34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ff72:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ff74:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ff76:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ff7a:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ff7e:	1429      	asrs	r1, r5, #16
 801ff80:	fb03 2101 	mla	r1, r3, r1, r2
 801ff84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ff86:	440a      	add	r2, r1
 801ff88:	5c61      	ldrb	r1, [r4, r1]
 801ff8a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ff8e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ff92:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ff96:	f1bc 0f00 	cmp.w	ip, #0
 801ff9a:	f000 808c 	beq.w	80200b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801ff9e:	7857      	ldrb	r7, [r2, #1]
 801ffa0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ffa4:	9413      	str	r4, [sp, #76]	; 0x4c
 801ffa6:	b140      	cbz	r0, 801ffba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ffa8:	18d7      	adds	r7, r2, r3
 801ffaa:	5cd3      	ldrb	r3, [r2, r3]
 801ffac:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ffb0:	9310      	str	r3, [sp, #64]	; 0x40
 801ffb2:	787b      	ldrb	r3, [r7, #1]
 801ffb4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ffb8:	9314      	str	r3, [sp, #80]	; 0x50
 801ffba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ffbc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ffbe:	fb1c f200 	smulbb	r2, ip, r0
 801ffc2:	041f      	lsls	r7, r3, #16
 801ffc4:	10d2      	asrs	r2, r2, #3
 801ffc6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ffca:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ffce:	431f      	orrs	r7, r3
 801ffd0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ffd4:	9317      	str	r3, [sp, #92]	; 0x5c
 801ffd6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ffd8:	041b      	lsls	r3, r3, #16
 801ffda:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801ffde:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ffe2:	ea43 030b 	orr.w	r3, r3, fp
 801ffe6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ffe8:	4353      	muls	r3, r2
 801ffea:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ffee:	fb04 3707 	mla	r7, r4, r7, r3
 801fff2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fff6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fffa:	ea43 0b01 	orr.w	fp, r3, r1
 801fffe:	f1c0 0110 	rsb	r1, r0, #16
 8020002:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020004:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020006:	eba1 0c0c 	sub.w	ip, r1, ip
 802000a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802000e:	fb0c 770b 	mla	r7, ip, fp, r7
 8020012:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020016:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 802001a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802001e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020022:	ea4c 0c0b 	orr.w	ip, ip, fp
 8020026:	fb02 770c 	mla	r7, r2, ip, r7
 802002a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802002c:	0d79      	lsrs	r1, r7, #21
 802002e:	097f      	lsrs	r7, r7, #5
 8020030:	8812      	ldrh	r2, [r2, #0]
 8020032:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020036:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802003a:	430f      	orrs	r7, r1
 802003c:	b2bb      	uxth	r3, r7
 802003e:	1211      	asrs	r1, r2, #8
 8020040:	1218      	asrs	r0, r3, #8
 8020042:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020046:	fb11 f104 	smulbb	r1, r1, r4
 802004a:	10d7      	asrs	r7, r2, #3
 802004c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020050:	00d2      	lsls	r2, r2, #3
 8020052:	fb00 1009 	mla	r0, r0, r9, r1
 8020056:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802005a:	10d9      	asrs	r1, r3, #3
 802005c:	b2d2      	uxtb	r2, r2
 802005e:	00db      	lsls	r3, r3, #3
 8020060:	fb17 f704 	smulbb	r7, r7, r4
 8020064:	fb12 f204 	smulbb	r2, r2, r4
 8020068:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802006c:	b2db      	uxtb	r3, r3
 802006e:	b280      	uxth	r0, r0
 8020070:	fb01 7109 	mla	r1, r1, r9, r7
 8020074:	fb03 2309 	mla	r3, r3, r9, r2
 8020078:	b29b      	uxth	r3, r3
 802007a:	b289      	uxth	r1, r1
 802007c:	1c42      	adds	r2, r0, #1
 802007e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020082:	1c4f      	adds	r7, r1, #1
 8020084:	1c5a      	adds	r2, r3, #1
 8020086:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802008a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802008e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020092:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020096:	0949      	lsrs	r1, r1, #5
 8020098:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802009a:	4310      	orrs	r0, r2
 802009c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80200a0:	4308      	orrs	r0, r1
 80200a2:	f823 0b02 	strh.w	r0, [r3], #2
 80200a6:	930e      	str	r3, [sp, #56]	; 0x38
 80200a8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80200aa:	449a      	add	sl, r3
 80200ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80200ae:	f10e 3eff 	add.w	lr, lr, #4294967295
 80200b2:	441d      	add	r5, r3
 80200b4:	e6ed      	b.n	801fe92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80200b6:	2800      	cmp	r0, #0
 80200b8:	f43f af7f 	beq.w	801ffba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80200bc:	5cd3      	ldrb	r3, [r2, r3]
 80200be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80200c2:	9310      	str	r3, [sp, #64]	; 0x40
 80200c4:	e779      	b.n	801ffba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80200c6:	b019      	add	sp, #100	; 0x64
 80200c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080200cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80200cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80200d0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80200d4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80200d8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80200dc:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80200e0:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80200e4:	8808      	ldrh	r0, [r1, #0]
 80200e6:	fb08 470e 	mla	r7, r8, lr, r4
 80200ea:	f1b8 0f00 	cmp.w	r8, #0
 80200ee:	eb02 0907 	add.w	r9, r2, r7
 80200f2:	db67      	blt.n	80201c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80200f4:	45c2      	cmp	sl, r8
 80200f6:	dd65      	ble.n	80201c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80200f8:	2c00      	cmp	r4, #0
 80200fa:	db61      	blt.n	80201c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80200fc:	45a6      	cmp	lr, r4
 80200fe:	dd5f      	ble.n	80201c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020100:	5dd2      	ldrb	r2, [r2, r7]
 8020102:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020106:	1c62      	adds	r2, r4, #1
 8020108:	d45f      	bmi.n	80201ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802010a:	4596      	cmp	lr, r2
 802010c:	dd5d      	ble.n	80201ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802010e:	2d00      	cmp	r5, #0
 8020110:	d05b      	beq.n	80201ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020112:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020116:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 802011a:	f118 0801 	adds.w	r8, r8, #1
 802011e:	d458      	bmi.n	80201d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020120:	45c2      	cmp	sl, r8
 8020122:	dd56      	ble.n	80201d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020124:	2e00      	cmp	r6, #0
 8020126:	d054      	beq.n	80201d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020128:	2c00      	cmp	r4, #0
 802012a:	db50      	blt.n	80201ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 802012c:	45a6      	cmp	lr, r4
 802012e:	dd4e      	ble.n	80201ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020130:	f819 200e 	ldrb.w	r2, [r9, lr]
 8020134:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020138:	3401      	adds	r4, #1
 802013a:	d407      	bmi.n	802014c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802013c:	45a6      	cmp	lr, r4
 802013e:	dd05      	ble.n	802014c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020140:	b125      	cbz	r5, 802014c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020142:	44ce      	add	lr, r9
 8020144:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020148:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 802014c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020150:	fb15 f406 	smulbb	r4, r5, r6
 8020154:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020158:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802015c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020160:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020164:	ea43 0c0c 	orr.w	ip, r3, ip
 8020168:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802016c:	f1c6 0310 	rsb	r3, r6, #16
 8020170:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020174:	1b5b      	subs	r3, r3, r5
 8020176:	ea4e 0707 	orr.w	r7, lr, r7
 802017a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802017e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020182:	437d      	muls	r5, r7
 8020184:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020188:	0403      	lsls	r3, r0, #16
 802018a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802018e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020192:	4318      	orrs	r0, r3
 8020194:	0413      	lsls	r3, r2, #16
 8020196:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802019a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802019e:	4313      	orrs	r3, r2
 80201a0:	fb04 c000 	mla	r0, r4, r0, ip
 80201a4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80201a8:	fb06 0003 	mla	r0, r6, r3, r0
 80201ac:	0d43      	lsrs	r3, r0, #21
 80201ae:	0940      	lsrs	r0, r0, #5
 80201b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80201b4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80201b8:	4318      	orrs	r0, r3
 80201ba:	8008      	strh	r0, [r1, #0]
 80201bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80201c0:	4684      	mov	ip, r0
 80201c2:	e7a0      	b.n	8020106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80201c4:	4607      	mov	r7, r0
 80201c6:	4684      	mov	ip, r0
 80201c8:	e7a7      	b.n	802011a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80201ca:	4607      	mov	r7, r0
 80201cc:	e7a5      	b.n	802011a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80201ce:	4602      	mov	r2, r0
 80201d0:	e7b2      	b.n	8020138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80201d2:	4602      	mov	r2, r0
 80201d4:	e7ba      	b.n	802014c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080201d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80201d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201da:	b093      	sub	sp, #76	; 0x4c
 80201dc:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80201e0:	920f      	str	r2, [sp, #60]	; 0x3c
 80201e2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80201e4:	9108      	str	r1, [sp, #32]
 80201e6:	9306      	str	r3, [sp, #24]
 80201e8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80201ec:	9010      	str	r0, [sp, #64]	; 0x40
 80201ee:	6850      	ldr	r0, [r2, #4]
 80201f0:	6812      	ldr	r2, [r2, #0]
 80201f2:	fb00 1303 	mla	r3, r0, r3, r1
 80201f6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80201fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80201fc:	681b      	ldr	r3, [r3, #0]
 80201fe:	9307      	str	r3, [sp, #28]
 8020200:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020202:	685f      	ldr	r7, [r3, #4]
 8020204:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020208:	3704      	adds	r7, #4
 802020a:	9b08      	ldr	r3, [sp, #32]
 802020c:	2b00      	cmp	r3, #0
 802020e:	dc03      	bgt.n	8020218 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020210:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020212:	2b00      	cmp	r3, #0
 8020214:	f340 81b2 	ble.w	802057c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020218:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802021a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802021e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020222:	1e48      	subs	r0, r1, #1
 8020224:	f102 3cff 	add.w	ip, r2, #4294967295
 8020228:	9b06      	ldr	r3, [sp, #24]
 802022a:	2b00      	cmp	r3, #0
 802022c:	f340 80a9 	ble.w	8020382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020230:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020234:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020238:	d406      	bmi.n	8020248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802023a:	4586      	cmp	lr, r0
 802023c:	da04      	bge.n	8020248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802023e:	2b00      	cmp	r3, #0
 8020240:	db02      	blt.n	8020248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020242:	4563      	cmp	r3, ip
 8020244:	f2c0 809e 	blt.w	8020384 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020248:	f11e 0e01 	adds.w	lr, lr, #1
 802024c:	f100 808f 	bmi.w	802036e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020250:	4571      	cmp	r1, lr
 8020252:	f2c0 808c 	blt.w	802036e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020256:	3301      	adds	r3, #1
 8020258:	f100 8089 	bmi.w	802036e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802025c:	429a      	cmp	r2, r3
 802025e:	f2c0 8086 	blt.w	802036e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020262:	f8dd b018 	ldr.w	fp, [sp, #24]
 8020266:	46c8      	mov	r8, r9
 8020268:	f1bb 0f00 	cmp.w	fp, #0
 802026c:	f340 80a6 	ble.w	80203bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8020270:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8020272:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020274:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020278:	689b      	ldr	r3, [r3, #8]
 802027a:	1422      	asrs	r2, r4, #16
 802027c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020280:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020284:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020288:	f100 80e3 	bmi.w	8020452 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802028c:	f103 3aff 	add.w	sl, r3, #4294967295
 8020290:	4552      	cmp	r2, sl
 8020292:	f280 80de 	bge.w	8020452 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020296:	f1bc 0f00 	cmp.w	ip, #0
 802029a:	f2c0 80da 	blt.w	8020452 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802029e:	f10e 3aff 	add.w	sl, lr, #4294967295
 80202a2:	45d4      	cmp	ip, sl
 80202a4:	f280 80d5 	bge.w	8020452 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80202a8:	b21b      	sxth	r3, r3
 80202aa:	fb0c 2203 	mla	r2, ip, r3, r2
 80202ae:	9d07      	ldr	r5, [sp, #28]
 80202b0:	eb05 0a02 	add.w	sl, r5, r2
 80202b4:	5caa      	ldrb	r2, [r5, r2]
 80202b6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80202ba:	2800      	cmp	r0, #0
 80202bc:	f000 80c0 	beq.w	8020440 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80202c0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80202c4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80202c8:	920b      	str	r2, [sp, #44]	; 0x2c
 80202ca:	b151      	cbz	r1, 80202e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80202cc:	eb0a 0203 	add.w	r2, sl, r3
 80202d0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80202d4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80202d8:	9309      	str	r3, [sp, #36]	; 0x24
 80202da:	7853      	ldrb	r3, [r2, #1]
 80202dc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80202e0:	930c      	str	r3, [sp, #48]	; 0x30
 80202e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80202e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80202e6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80202ea:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80202ee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80202f2:	ea4c 0c03 	orr.w	ip, ip, r3
 80202f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80202f8:	041b      	lsls	r3, r3, #16
 80202fa:	fb10 f201 	smulbb	r2, r0, r1
 80202fe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020302:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020306:	10d2      	asrs	r2, r2, #3
 8020308:	432b      	orrs	r3, r5
 802030a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802030e:	4353      	muls	r3, r2
 8020310:	fb0a 330c 	mla	r3, sl, ip, r3
 8020314:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020318:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802031c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020320:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020324:	f1c1 0c10 	rsb	ip, r1, #16
 8020328:	ebac 0c00 	sub.w	ip, ip, r0
 802032c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020330:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020334:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020336:	0418      	lsls	r0, r3, #16
 8020338:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802033c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020340:	4318      	orrs	r0, r3
 8020342:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020346:	fb02 c200 	mla	r2, r2, r0, ip
 802034a:	0d53      	lsrs	r3, r2, #21
 802034c:	0952      	lsrs	r2, r2, #5
 802034e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020352:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020356:	431a      	orrs	r2, r3
 8020358:	f8a8 2000 	strh.w	r2, [r8]
 802035c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802035e:	441c      	add	r4, r3
 8020360:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020362:	f108 0802 	add.w	r8, r8, #2
 8020366:	441e      	add	r6, r3
 8020368:	f10b 3bff 	add.w	fp, fp, #4294967295
 802036c:	e77c      	b.n	8020268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802036e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020370:	441c      	add	r4, r3
 8020372:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020374:	441e      	add	r6, r3
 8020376:	9b06      	ldr	r3, [sp, #24]
 8020378:	3b01      	subs	r3, #1
 802037a:	9306      	str	r3, [sp, #24]
 802037c:	f109 0902 	add.w	r9, r9, #2
 8020380:	e752      	b.n	8020228 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020382:	d020      	beq.n	80203c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8020384:	9b06      	ldr	r3, [sp, #24]
 8020386:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020388:	3b01      	subs	r3, #1
 802038a:	fb00 4003 	mla	r0, r0, r3, r4
 802038e:	1400      	asrs	r0, r0, #16
 8020390:	f53f af67 	bmi.w	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020394:	3901      	subs	r1, #1
 8020396:	4288      	cmp	r0, r1
 8020398:	f6bf af63 	bge.w	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802039c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802039e:	fb01 6303 	mla	r3, r1, r3, r6
 80203a2:	141b      	asrs	r3, r3, #16
 80203a4:	f53f af5d 	bmi.w	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80203a8:	3a01      	subs	r2, #1
 80203aa:	4293      	cmp	r3, r2
 80203ac:	f6bf af59 	bge.w	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80203b0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80203b4:	46ca      	mov	sl, r9
 80203b6:	f1b8 0f00 	cmp.w	r8, #0
 80203ba:	dc67      	bgt.n	802048c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80203bc:	9b06      	ldr	r3, [sp, #24]
 80203be:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80203c2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80203c6:	9b08      	ldr	r3, [sp, #32]
 80203c8:	2b00      	cmp	r3, #0
 80203ca:	f340 80d7 	ble.w	802057c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80203ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 80203d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80203d6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80203da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80203dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80203e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80203e4:	eeb0 6a62 	vmov.f32	s12, s5
 80203e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80203ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80203f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80203f4:	ee16 4a10 	vmov	r4, s12
 80203f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80203fc:	eeb0 6a43 	vmov.f32	s12, s6
 8020400:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020404:	ee12 2a90 	vmov	r2, s5
 8020408:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802040c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020410:	ee13 2a10 	vmov	r2, s6
 8020414:	931f      	str	r3, [sp, #124]	; 0x7c
 8020416:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020418:	fb92 f3f3 	sdiv	r3, r2, r3
 802041c:	9320      	str	r3, [sp, #128]	; 0x80
 802041e:	9b08      	ldr	r3, [sp, #32]
 8020420:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020422:	3b01      	subs	r3, #1
 8020424:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020428:	9308      	str	r3, [sp, #32]
 802042a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802042c:	bf08      	it	eq
 802042e:	4613      	moveq	r3, r2
 8020430:	ee16 6a10 	vmov	r6, s12
 8020434:	9306      	str	r3, [sp, #24]
 8020436:	eeb0 3a67 	vmov.f32	s6, s15
 802043a:	eef0 2a47 	vmov.f32	s5, s14
 802043e:	e6e4      	b.n	802020a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020440:	2900      	cmp	r1, #0
 8020442:	f43f af4e 	beq.w	80202e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020446:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802044a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802044e:	9309      	str	r3, [sp, #36]	; 0x24
 8020450:	e747      	b.n	80202e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020452:	f112 0a01 	adds.w	sl, r2, #1
 8020456:	d481      	bmi.n	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020458:	4553      	cmp	r3, sl
 802045a:	f6ff af7f 	blt.w	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802045e:	f11c 0a01 	adds.w	sl, ip, #1
 8020462:	f53f af7b 	bmi.w	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020466:	45d6      	cmp	lr, sl
 8020468:	f6ff af78 	blt.w	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802046c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020470:	b21b      	sxth	r3, r3
 8020472:	fa0f f28e 	sxth.w	r2, lr
 8020476:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802047a:	9201      	str	r2, [sp, #4]
 802047c:	9300      	str	r3, [sp, #0]
 802047e:	9a07      	ldr	r2, [sp, #28]
 8020480:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020482:	463b      	mov	r3, r7
 8020484:	4641      	mov	r1, r8
 8020486:	f7ff fe21 	bl	80200cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802048a:	e767      	b.n	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802048c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802048e:	9d07      	ldr	r5, [sp, #28]
 8020490:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020494:	1422      	asrs	r2, r4, #16
 8020496:	1431      	asrs	r1, r6, #16
 8020498:	fb03 2101 	mla	r1, r3, r1, r2
 802049c:	9a07      	ldr	r2, [sp, #28]
 802049e:	440a      	add	r2, r1
 80204a0:	5c69      	ldrb	r1, [r5, r1]
 80204a2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80204a6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80204aa:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80204ae:	f1be 0f00 	cmp.w	lr, #0
 80204b2:	d05c      	beq.n	802056e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80204b4:	f892 c001 	ldrb.w	ip, [r2, #1]
 80204b8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80204bc:	950d      	str	r5, [sp, #52]	; 0x34
 80204be:	b150      	cbz	r0, 80204d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80204c0:	eb02 0c03 	add.w	ip, r2, r3
 80204c4:	5cd3      	ldrb	r3, [r2, r3]
 80204c6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80204ca:	930a      	str	r3, [sp, #40]	; 0x28
 80204cc:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80204d0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80204d4:	930e      	str	r3, [sp, #56]	; 0x38
 80204d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80204d8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80204da:	fb1e f200 	smulbb	r2, lr, r0
 80204de:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80204e2:	10d2      	asrs	r2, r2, #3
 80204e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80204e8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80204ec:	ea4c 0c03 	orr.w	ip, ip, r3
 80204f0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80204f4:	9311      	str	r3, [sp, #68]	; 0x44
 80204f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80204f8:	041b      	lsls	r3, r3, #16
 80204fa:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80204fe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020502:	ea43 030b 	orr.w	r3, r3, fp
 8020506:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020508:	4353      	muls	r3, r2
 802050a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802050e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020512:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020516:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802051a:	ea43 0b01 	orr.w	fp, r3, r1
 802051e:	f1c0 0110 	rsb	r1, r0, #16
 8020522:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020524:	eba1 0e0e 	sub.w	lr, r1, lr
 8020528:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 802052c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020530:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020534:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8020538:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802053c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020540:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020544:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020548:	ea4f 535c 	mov.w	r3, ip, lsr #21
 802054c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020550:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020554:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020558:	ea43 0c0c 	orr.w	ip, r3, ip
 802055c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802055e:	f82a cb02 	strh.w	ip, [sl], #2
 8020562:	441c      	add	r4, r3
 8020564:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020566:	f108 38ff 	add.w	r8, r8, #4294967295
 802056a:	441e      	add	r6, r3
 802056c:	e723      	b.n	80203b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802056e:	2800      	cmp	r0, #0
 8020570:	d0b1      	beq.n	80204d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020572:	5cd3      	ldrb	r3, [r2, r3]
 8020574:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020578:	930a      	str	r3, [sp, #40]	; 0x28
 802057a:	e7ac      	b.n	80204d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802057c:	b013      	add	sp, #76	; 0x4c
 802057e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020582 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020582:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020586:	880d      	ldrh	r5, [r1, #0]
 8020588:	b087      	sub	sp, #28
 802058a:	10ef      	asrs	r7, r5, #3
 802058c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020590:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020594:	00ed      	lsls	r5, r5, #3
 8020596:	9701      	str	r7, [sp, #4]
 8020598:	b2ed      	uxtb	r5, r5
 802059a:	9502      	str	r5, [sp, #8]
 802059c:	9d01      	ldr	r5, [sp, #4]
 802059e:	9103      	str	r1, [sp, #12]
 80205a0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80205a4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 80205a8:	9902      	ldr	r1, [sp, #8]
 80205aa:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80205ae:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80205b2:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80205b6:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80205ba:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80205be:	022d      	lsls	r5, r5, #8
 80205c0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80205c4:	fb06 0709 	mla	r7, r6, r9, r0
 80205c8:	430d      	orrs	r5, r1
 80205ca:	2e00      	cmp	r6, #0
 80205cc:	eb02 0c07 	add.w	ip, r2, r7
 80205d0:	9505      	str	r5, [sp, #20]
 80205d2:	f2c0 80b6 	blt.w	8020742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80205d6:	45b3      	cmp	fp, r6
 80205d8:	f340 80b3 	ble.w	8020742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80205dc:	2800      	cmp	r0, #0
 80205de:	f2c0 80ae 	blt.w	802073e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80205e2:	4581      	cmp	r9, r0
 80205e4:	f340 80ab 	ble.w	802073e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80205e8:	5dd7      	ldrb	r7, [r2, r7]
 80205ea:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80205ee:	441f      	add	r7, r3
 80205f0:	1c42      	adds	r2, r0, #1
 80205f2:	f100 80a9 	bmi.w	8020748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80205f6:	4591      	cmp	r9, r2
 80205f8:	f340 80a6 	ble.w	8020748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80205fc:	2c00      	cmp	r4, #0
 80205fe:	f000 80a3 	beq.w	8020748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020602:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020606:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802060a:	441d      	add	r5, r3
 802060c:	3601      	adds	r6, #1
 802060e:	f100 809f 	bmi.w	8020750 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020612:	45b3      	cmp	fp, r6
 8020614:	f340 809c 	ble.w	8020750 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020618:	f1be 0f00 	cmp.w	lr, #0
 802061c:	f000 8098 	beq.w	8020750 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020620:	2800      	cmp	r0, #0
 8020622:	f2c0 8093 	blt.w	802074c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020626:	4581      	cmp	r9, r0
 8020628:	f340 8090 	ble.w	802074c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802062c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020630:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020634:	441e      	add	r6, r3
 8020636:	3001      	adds	r0, #1
 8020638:	f100 808d 	bmi.w	8020756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802063c:	4581      	cmp	r9, r0
 802063e:	f340 808a 	ble.w	8020756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020642:	2c00      	cmp	r4, #0
 8020644:	f000 8087 	beq.w	8020756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020648:	44e1      	add	r9, ip
 802064a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802064e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020652:	4413      	add	r3, r2
 8020654:	b2a4      	uxth	r4, r4
 8020656:	fa1f fe8e 	uxth.w	lr, lr
 802065a:	fb04 fb0e 	mul.w	fp, r4, lr
 802065e:	0124      	lsls	r4, r4, #4
 8020660:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020664:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8020668:	eba4 040b 	sub.w	r4, r4, fp
 802066c:	fa1f f08e 	uxth.w	r0, lr
 8020670:	b2a2      	uxth	r2, r4
 8020672:	78ac      	ldrb	r4, [r5, #2]
 8020674:	f897 c002 	ldrb.w	ip, [r7, #2]
 8020678:	9901      	ldr	r1, [sp, #4]
 802067a:	eba9 0900 	sub.w	r9, r9, r0
 802067e:	fa1f f989 	uxth.w	r9, r9
 8020682:	4354      	muls	r4, r2
 8020684:	fb09 440c 	mla	r4, r9, ip, r4
 8020688:	f896 c002 	ldrb.w	ip, [r6, #2]
 802068c:	fb00 440c 	mla	r4, r0, ip, r4
 8020690:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020694:	fa1f fe88 	uxth.w	lr, r8
 8020698:	ea6f 0808 	mvn.w	r8, r8
 802069c:	fa5f f888 	uxtb.w	r8, r8
 80206a0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80206a4:	fb1a fa08 	smulbb	sl, sl, r8
 80206a8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80206ac:	fb0c ac0e 	mla	ip, ip, lr, sl
 80206b0:	f895 a001 	ldrb.w	sl, [r5, #1]
 80206b4:	787c      	ldrb	r4, [r7, #1]
 80206b6:	782d      	ldrb	r5, [r5, #0]
 80206b8:	783f      	ldrb	r7, [r7, #0]
 80206ba:	fb02 fa0a 	mul.w	sl, r2, sl
 80206be:	fb09 aa04 	mla	sl, r9, r4, sl
 80206c2:	7874      	ldrb	r4, [r6, #1]
 80206c4:	436a      	muls	r2, r5
 80206c6:	7835      	ldrb	r5, [r6, #0]
 80206c8:	fb00 aa04 	mla	sl, r0, r4, sl
 80206cc:	fb09 2207 	mla	r2, r9, r7, r2
 80206d0:	785c      	ldrb	r4, [r3, #1]
 80206d2:	781b      	ldrb	r3, [r3, #0]
 80206d4:	fb00 2005 	mla	r0, r0, r5, r2
 80206d8:	fb0b a404 	mla	r4, fp, r4, sl
 80206dc:	fb0b 0b03 	mla	fp, fp, r3, r0
 80206e0:	9b02      	ldr	r3, [sp, #8]
 80206e2:	fb11 fa08 	smulbb	sl, r1, r8
 80206e6:	fa1f fc8c 	uxth.w	ip, ip
 80206ea:	fb13 f808 	smulbb	r8, r3, r8
 80206ee:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80206f2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80206f6:	fb04 a40e 	mla	r4, r4, lr, sl
 80206fa:	f10c 0301 	add.w	r3, ip, #1
 80206fe:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020702:	fa1f fe8e 	uxth.w	lr, lr
 8020706:	b2a4      	uxth	r4, r4
 8020708:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802070c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020710:	f104 0a01 	add.w	sl, r4, #1
 8020714:	f10e 0c01 	add.w	ip, lr, #1
 8020718:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802071c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020720:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020724:	0964      	lsrs	r4, r4, #5
 8020726:	ea4c 0c03 	orr.w	ip, ip, r3
 802072a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802072e:	9b03      	ldr	r3, [sp, #12]
 8020730:	ea4c 0c04 	orr.w	ip, ip, r4
 8020734:	f8a3 c000 	strh.w	ip, [r3]
 8020738:	b007      	add	sp, #28
 802073a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802073e:	af05      	add	r7, sp, #20
 8020740:	e756      	b.n	80205f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8020742:	ad05      	add	r5, sp, #20
 8020744:	462f      	mov	r7, r5
 8020746:	e761      	b.n	802060c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020748:	ad05      	add	r5, sp, #20
 802074a:	e75f      	b.n	802060c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802074c:	ae05      	add	r6, sp, #20
 802074e:	e772      	b.n	8020636 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020750:	ab05      	add	r3, sp, #20
 8020752:	461e      	mov	r6, r3
 8020754:	e77e      	b.n	8020654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8020756:	ab05      	add	r3, sp, #20
 8020758:	e77c      	b.n	8020654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802075a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802075a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802075e:	b095      	sub	sp, #84	; 0x54
 8020760:	9212      	str	r2, [sp, #72]	; 0x48
 8020762:	9309      	str	r3, [sp, #36]	; 0x24
 8020764:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020766:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802076a:	930f      	str	r3, [sp, #60]	; 0x3c
 802076c:	910e      	str	r1, [sp, #56]	; 0x38
 802076e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8020772:	9013      	str	r0, [sp, #76]	; 0x4c
 8020774:	6850      	ldr	r0, [r2, #4]
 8020776:	6812      	ldr	r2, [r2, #0]
 8020778:	fb00 1303 	mla	r3, r0, r3, r1
 802077c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020780:	930a      	str	r3, [sp, #40]	; 0x28
 8020782:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020784:	681b      	ldr	r3, [r3, #0]
 8020786:	930d      	str	r3, [sp, #52]	; 0x34
 8020788:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802078a:	685c      	ldr	r4, [r3, #4]
 802078c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802078e:	43db      	mvns	r3, r3
 8020790:	b2db      	uxtb	r3, r3
 8020792:	3404      	adds	r4, #4
 8020794:	930b      	str	r3, [sp, #44]	; 0x2c
 8020796:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020798:	2b00      	cmp	r3, #0
 802079a:	dc03      	bgt.n	80207a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802079c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802079e:	2b00      	cmp	r3, #0
 80207a0:	f340 8255 	ble.w	8020c4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80207a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80207a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80207aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80207ae:	1e48      	subs	r0, r1, #1
 80207b0:	1e55      	subs	r5, r2, #1
 80207b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207b4:	2b00      	cmp	r3, #0
 80207b6:	f340 80f9 	ble.w	80209ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80207ba:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80207bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80207be:	1436      	asrs	r6, r6, #16
 80207c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80207c4:	d406      	bmi.n	80207d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80207c6:	4286      	cmp	r6, r0
 80207c8:	da04      	bge.n	80207d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80207ca:	2b00      	cmp	r3, #0
 80207cc:	db02      	blt.n	80207d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80207ce:	42ab      	cmp	r3, r5
 80207d0:	f2c0 80ed 	blt.w	80209ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80207d4:	3601      	adds	r6, #1
 80207d6:	f100 80da 	bmi.w	802098e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80207da:	42b1      	cmp	r1, r6
 80207dc:	f2c0 80d7 	blt.w	802098e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80207e0:	3301      	adds	r3, #1
 80207e2:	f100 80d4 	bmi.w	802098e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80207e6:	429a      	cmp	r2, r3
 80207e8:	f2c0 80d1 	blt.w	802098e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80207ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80207ee:	9311      	str	r3, [sp, #68]	; 0x44
 80207f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80207f2:	930c      	str	r3, [sp, #48]	; 0x30
 80207f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80207f6:	2b00      	cmp	r3, #0
 80207f8:	f340 80fa 	ble.w	80209f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80207fc:	9826      	ldr	r0, [sp, #152]	; 0x98
 80207fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020800:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020802:	68c6      	ldr	r6, [r0, #12]
 8020804:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020806:	141d      	asrs	r5, r3, #16
 8020808:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802080c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802080e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020810:	1400      	asrs	r0, r0, #16
 8020812:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020816:	6892      	ldr	r2, [r2, #8]
 8020818:	f100 813e 	bmi.w	8020a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802081c:	1e57      	subs	r7, r2, #1
 802081e:	42b8      	cmp	r0, r7
 8020820:	f280 813a 	bge.w	8020a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020824:	2d00      	cmp	r5, #0
 8020826:	f2c0 8137 	blt.w	8020a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802082a:	1e77      	subs	r7, r6, #1
 802082c:	42bd      	cmp	r5, r7
 802082e:	f280 8133 	bge.w	8020a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020832:	b212      	sxth	r2, r2
 8020834:	fb05 0002 	mla	r0, r5, r2, r0
 8020838:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802083a:	f815 a000 	ldrb.w	sl, [r5, r0]
 802083e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8020842:	182e      	adds	r6, r5, r0
 8020844:	eb04 050a 	add.w	r5, r4, sl
 8020848:	2b00      	cmp	r3, #0
 802084a:	f000 8117 	beq.w	8020a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802084e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8020852:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020856:	44a4      	add	ip, r4
 8020858:	2900      	cmp	r1, #0
 802085a:	f000 8117 	beq.w	8020a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802085e:	18b0      	adds	r0, r6, r2
 8020860:	5cb2      	ldrb	r2, [r6, r2]
 8020862:	7840      	ldrb	r0, [r0, #1]
 8020864:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020868:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802086c:	4422      	add	r2, r4
 802086e:	4420      	add	r0, r4
 8020870:	b29b      	uxth	r3, r3
 8020872:	b289      	uxth	r1, r1
 8020874:	fb03 f901 	mul.w	r9, r3, r1
 8020878:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802087c:	011b      	lsls	r3, r3, #4
 802087e:	b289      	uxth	r1, r1
 8020880:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020884:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020888:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802088a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802088e:	f8b6 e000 	ldrh.w	lr, [r6]
 8020892:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8020896:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802089a:	eba3 0309 	sub.w	r3, r3, r9
 802089e:	b29b      	uxth	r3, r3
 80208a0:	eba8 0801 	sub.w	r8, r8, r1
 80208a4:	fa1f f888 	uxth.w	r8, r8
 80208a8:	435f      	muls	r7, r3
 80208aa:	fb08 770b 	mla	r7, r8, fp, r7
 80208ae:	f892 b002 	ldrb.w	fp, [r2, #2]
 80208b2:	9310      	str	r3, [sp, #64]	; 0x40
 80208b4:	fb01 770b 	mla	r7, r1, fp, r7
 80208b8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80208bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80208be:	fb09 770b 	mla	r7, r9, fp, r7
 80208c2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80208c6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80208ca:	fb1b fb03 	smulbb	fp, fp, r3
 80208ce:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80208d2:	fb07 b706 	mla	r7, r7, r6, fp
 80208d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80208d8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80208dc:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80208e0:	f89c c000 	ldrb.w	ip, [ip]
 80208e4:	435d      	muls	r5, r3
 80208e6:	fb08 550b 	mla	r5, r8, fp, r5
 80208ea:	f892 b001 	ldrb.w	fp, [r2, #1]
 80208ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80208f0:	fb01 550b 	mla	r5, r1, fp, r5
 80208f4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80208f8:	fb09 550b 	mla	r5, r9, fp, r5
 80208fc:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020900:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020904:	fb1b fb03 	smulbb	fp, fp, r3
 8020908:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802090a:	fb03 f30c 	mul.w	r3, r3, ip
 802090e:	f892 c000 	ldrb.w	ip, [r2]
 8020912:	fb08 330a 	mla	r3, r8, sl, r3
 8020916:	fb01 330c 	mla	r3, r1, ip, r3
 802091a:	f890 c000 	ldrb.w	ip, [r0]
 802091e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020922:	fb09 3c0c 	mla	ip, r9, ip, r3
 8020926:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020928:	fa5f fe8e 	uxtb.w	lr, lr
 802092c:	b2bf      	uxth	r7, r7
 802092e:	fb1e fe03 	smulbb	lr, lr, r3
 8020932:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020936:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802093a:	fb05 b506 	mla	r5, r5, r6, fp
 802093e:	1c7b      	adds	r3, r7, #1
 8020940:	fb0c e606 	mla	r6, ip, r6, lr
 8020944:	b2ad      	uxth	r5, r5
 8020946:	b2b6      	uxth	r6, r6
 8020948:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802094c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8020950:	f105 0b01 	add.w	fp, r5, #1
 8020954:	1c77      	adds	r7, r6, #1
 8020956:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802095a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802095e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020962:	096d      	lsrs	r5, r5, #5
 8020964:	431f      	orrs	r7, r3
 8020966:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802096a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802096c:	433d      	orrs	r5, r7
 802096e:	801d      	strh	r5, [r3, #0]
 8020970:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020972:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020974:	3302      	adds	r3, #2
 8020976:	930c      	str	r3, [sp, #48]	; 0x30
 8020978:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802097a:	4413      	add	r3, r2
 802097c:	931f      	str	r3, [sp, #124]	; 0x7c
 802097e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020980:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020982:	4413      	add	r3, r2
 8020984:	9320      	str	r3, [sp, #128]	; 0x80
 8020986:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020988:	3b01      	subs	r3, #1
 802098a:	9311      	str	r3, [sp, #68]	; 0x44
 802098c:	e732      	b.n	80207f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802098e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020990:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020992:	4433      	add	r3, r6
 8020994:	931f      	str	r3, [sp, #124]	; 0x7c
 8020996:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8020998:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802099a:	4433      	add	r3, r6
 802099c:	9320      	str	r3, [sp, #128]	; 0x80
 802099e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209a0:	3b01      	subs	r3, #1
 80209a2:	9309      	str	r3, [sp, #36]	; 0x24
 80209a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80209a6:	3302      	adds	r3, #2
 80209a8:	930a      	str	r3, [sp, #40]	; 0x28
 80209aa:	e702      	b.n	80207b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80209ac:	d027      	beq.n	80209fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80209ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209b0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80209b2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80209b4:	3b01      	subs	r3, #1
 80209b6:	fb00 5003 	mla	r0, r0, r3, r5
 80209ba:	1400      	asrs	r0, r0, #16
 80209bc:	f53f af16 	bmi.w	80207ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80209c0:	3901      	subs	r1, #1
 80209c2:	4288      	cmp	r0, r1
 80209c4:	f6bf af12 	bge.w	80207ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80209c8:	9922      	ldr	r1, [sp, #136]	; 0x88
 80209ca:	9820      	ldr	r0, [sp, #128]	; 0x80
 80209cc:	fb01 0303 	mla	r3, r1, r3, r0
 80209d0:	141b      	asrs	r3, r3, #16
 80209d2:	f53f af0b 	bmi.w	80207ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80209d6:	3a01      	subs	r2, #1
 80209d8:	4293      	cmp	r3, r2
 80209da:	f6bf af07 	bge.w	80207ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80209de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209e0:	9311      	str	r3, [sp, #68]	; 0x44
 80209e2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80209e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80209e8:	930c      	str	r3, [sp, #48]	; 0x30
 80209ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80209ec:	2b00      	cmp	r3, #0
 80209ee:	dc70      	bgt.n	8020ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80209f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80209f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80209f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80209fc:	930a      	str	r3, [sp, #40]	; 0x28
 80209fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020a00:	2b00      	cmp	r3, #0
 8020a02:	f340 8124 	ble.w	8020c4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020a06:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020a0a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020a0e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020a12:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020a14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020a18:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020a1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020a20:	eef0 6a62 	vmov.f32	s13, s5
 8020a24:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020a28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a2c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020a30:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8020a34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020a38:	eef0 6a43 	vmov.f32	s13, s6
 8020a3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020a40:	ee12 2a90 	vmov	r2, s5
 8020a44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020a48:	fb92 f3f3 	sdiv	r3, r2, r3
 8020a4c:	ee13 2a10 	vmov	r2, s6
 8020a50:	9321      	str	r3, [sp, #132]	; 0x84
 8020a52:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020a54:	fb92 f3f3 	sdiv	r3, r2, r3
 8020a58:	9322      	str	r3, [sp, #136]	; 0x88
 8020a5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020a5c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020a5e:	3b01      	subs	r3, #1
 8020a60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a64:	930e      	str	r3, [sp, #56]	; 0x38
 8020a66:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020a68:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8020a6c:	bf08      	it	eq
 8020a6e:	4613      	moveq	r3, r2
 8020a70:	9309      	str	r3, [sp, #36]	; 0x24
 8020a72:	eeb0 3a67 	vmov.f32	s6, s15
 8020a76:	eef0 2a47 	vmov.f32	s5, s14
 8020a7a:	e68c      	b.n	8020796 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020a7c:	b149      	cbz	r1, 8020a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020a7e:	5cb2      	ldrb	r2, [r6, r2]
 8020a80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020a84:	4422      	add	r2, r4
 8020a86:	4628      	mov	r0, r5
 8020a88:	46ac      	mov	ip, r5
 8020a8a:	e6f1      	b.n	8020870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020a8c:	4628      	mov	r0, r5
 8020a8e:	462a      	mov	r2, r5
 8020a90:	e6ee      	b.n	8020870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020a92:	4628      	mov	r0, r5
 8020a94:	462a      	mov	r2, r5
 8020a96:	e7f7      	b.n	8020a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8020a98:	1c47      	adds	r7, r0, #1
 8020a9a:	f53f af69 	bmi.w	8020970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020a9e:	42ba      	cmp	r2, r7
 8020aa0:	f6ff af66 	blt.w	8020970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020aa4:	1c6f      	adds	r7, r5, #1
 8020aa6:	f53f af63 	bmi.w	8020970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020aaa:	42be      	cmp	r6, r7
 8020aac:	f6ff af60 	blt.w	8020970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020ab0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020ab2:	9002      	str	r0, [sp, #8]
 8020ab4:	b236      	sxth	r6, r6
 8020ab6:	b212      	sxth	r2, r2
 8020ab8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8020abc:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8020ac0:	9200      	str	r2, [sp, #0]
 8020ac2:	9601      	str	r6, [sp, #4]
 8020ac4:	4623      	mov	r3, r4
 8020ac6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8020aca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020acc:	f7ff fd59 	bl	8020582 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8020ad0:	e74e      	b.n	8020970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020ad2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020ad4:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020ad6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8020ad8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020ada:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020ade:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020ae0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020ae4:	142d      	asrs	r5, r5, #16
 8020ae6:	1400      	asrs	r0, r0, #16
 8020ae8:	fb02 5000 	mla	r0, r2, r0, r5
 8020aec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020aee:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020af2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020af6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8020afa:	182e      	adds	r6, r5, r0
 8020afc:	eb04 0509 	add.w	r5, r4, r9
 8020b00:	2b00      	cmp	r3, #0
 8020b02:	f000 8096 	beq.w	8020c32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8020b06:	7877      	ldrb	r7, [r6, #1]
 8020b08:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020b0c:	4427      	add	r7, r4
 8020b0e:	2900      	cmp	r1, #0
 8020b10:	f000 8097 	beq.w	8020c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020b14:	18b0      	adds	r0, r6, r2
 8020b16:	5cb2      	ldrb	r2, [r6, r2]
 8020b18:	7840      	ldrb	r0, [r0, #1]
 8020b1a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020b1e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020b22:	4422      	add	r2, r4
 8020b24:	4420      	add	r0, r4
 8020b26:	b29b      	uxth	r3, r3
 8020b28:	b289      	uxth	r1, r1
 8020b2a:	fb03 f801 	mul.w	r8, r3, r1
 8020b2e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020b30:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020b34:	f8b6 c000 	ldrh.w	ip, [r6]
 8020b38:	78be      	ldrb	r6, [r7, #2]
 8020b3a:	f814 9009 	ldrb.w	r9, [r4, r9]
 8020b3e:	011b      	lsls	r3, r3, #4
 8020b40:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8020b44:	b289      	uxth	r1, r1
 8020b46:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020b4a:	eba3 0308 	sub.w	r3, r3, r8
 8020b4e:	b29b      	uxth	r3, r3
 8020b50:	ebae 0e01 	sub.w	lr, lr, r1
 8020b54:	fa1f fe8e 	uxth.w	lr, lr
 8020b58:	435e      	muls	r6, r3
 8020b5a:	fb0e 660b 	mla	r6, lr, fp, r6
 8020b5e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020b62:	9310      	str	r3, [sp, #64]	; 0x40
 8020b64:	fb01 660b 	mla	r6, r1, fp, r6
 8020b68:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020b6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020b6e:	fb08 660b 	mla	r6, r8, fp, r6
 8020b72:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8020b76:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8020b7a:	fb1b fb03 	smulbb	fp, fp, r3
 8020b7e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020b82:	fb06 b60a 	mla	r6, r6, sl, fp
 8020b86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020b88:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020b8c:	787d      	ldrb	r5, [r7, #1]
 8020b8e:	783f      	ldrb	r7, [r7, #0]
 8020b90:	435d      	muls	r5, r3
 8020b92:	fb0e 550b 	mla	r5, lr, fp, r5
 8020b96:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020b9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020b9c:	fb01 550b 	mla	r5, r1, fp, r5
 8020ba0:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020ba4:	fb08 550b 	mla	r5, r8, fp, r5
 8020ba8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8020bac:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020bb0:	fb1b fb03 	smulbb	fp, fp, r3
 8020bb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020bb6:	437b      	muls	r3, r7
 8020bb8:	7817      	ldrb	r7, [r2, #0]
 8020bba:	fb0e 3309 	mla	r3, lr, r9, r3
 8020bbe:	fb01 3307 	mla	r3, r1, r7, r3
 8020bc2:	7807      	ldrb	r7, [r0, #0]
 8020bc4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020bc8:	fb08 3707 	mla	r7, r8, r7, r3
 8020bcc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020bce:	fa5f fc8c 	uxtb.w	ip, ip
 8020bd2:	fb1c fc03 	smulbb	ip, ip, r3
 8020bd6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020bda:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020bde:	fb05 b50a 	mla	r5, r5, sl, fp
 8020be2:	fb07 c70a 	mla	r7, r7, sl, ip
 8020be6:	b2b6      	uxth	r6, r6
 8020be8:	b2ad      	uxth	r5, r5
 8020bea:	b2bf      	uxth	r7, r7
 8020bec:	1c73      	adds	r3, r6, #1
 8020bee:	1c7a      	adds	r2, r7, #1
 8020bf0:	f105 0b01 	add.w	fp, r5, #1
 8020bf4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020bf8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020bfc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020c00:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020c04:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020c08:	096d      	lsrs	r5, r5, #5
 8020c0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c0c:	4316      	orrs	r6, r2
 8020c0e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020c12:	432e      	orrs	r6, r5
 8020c14:	f823 6b02 	strh.w	r6, [r3], #2
 8020c18:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020c1a:	930c      	str	r3, [sp, #48]	; 0x30
 8020c1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020c1e:	4413      	add	r3, r2
 8020c20:	931f      	str	r3, [sp, #124]	; 0x7c
 8020c22:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020c24:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020c26:	4413      	add	r3, r2
 8020c28:	9320      	str	r3, [sp, #128]	; 0x80
 8020c2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020c2c:	3b01      	subs	r3, #1
 8020c2e:	9311      	str	r3, [sp, #68]	; 0x44
 8020c30:	e6db      	b.n	80209ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020c32:	b149      	cbz	r1, 8020c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020c34:	5cb2      	ldrb	r2, [r6, r2]
 8020c36:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020c3a:	4422      	add	r2, r4
 8020c3c:	4628      	mov	r0, r5
 8020c3e:	462f      	mov	r7, r5
 8020c40:	e771      	b.n	8020b26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020c42:	4628      	mov	r0, r5
 8020c44:	462a      	mov	r2, r5
 8020c46:	e76e      	b.n	8020b26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020c48:	4628      	mov	r0, r5
 8020c4a:	462a      	mov	r2, r5
 8020c4c:	e7f7      	b.n	8020c3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020c4e:	b015      	add	sp, #84	; 0x54
 8020c50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020c54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8020c54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c58:	880f      	ldrh	r7, [r1, #0]
 8020c5a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020c5e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020c62:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8020c66:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8020c6a:	023c      	lsls	r4, r7, #8
 8020c6c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020c70:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020c74:	017c      	lsls	r4, r7, #5
 8020c76:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8020c7a:	00ff      	lsls	r7, r7, #3
 8020c7c:	ea4b 0404 	orr.w	r4, fp, r4
 8020c80:	b2ff      	uxtb	r7, r7
 8020c82:	fb05 ca0e 	mla	sl, r5, lr, ip
 8020c86:	4327      	orrs	r7, r4
 8020c88:	2d00      	cmp	r5, #0
 8020c8a:	eb02 080a 	add.w	r8, r2, sl
 8020c8e:	9701      	str	r7, [sp, #4]
 8020c90:	db7e      	blt.n	8020d90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020c92:	45a9      	cmp	r9, r5
 8020c94:	dd7c      	ble.n	8020d90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020c96:	f1bc 0f00 	cmp.w	ip, #0
 8020c9a:	db77      	blt.n	8020d8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020c9c:	45e6      	cmp	lr, ip
 8020c9e:	dd75      	ble.n	8020d8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020ca0:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020ca4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020ca8:	441f      	add	r7, r3
 8020caa:	f11c 0201 	adds.w	r2, ip, #1
 8020cae:	d472      	bmi.n	8020d96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020cb0:	4596      	cmp	lr, r2
 8020cb2:	dd70      	ble.n	8020d96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020cb4:	2800      	cmp	r0, #0
 8020cb6:	d06e      	beq.n	8020d96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020cb8:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020cbc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020cc0:	441c      	add	r4, r3
 8020cc2:	3501      	adds	r5, #1
 8020cc4:	d46b      	bmi.n	8020d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020cc6:	45a9      	cmp	r9, r5
 8020cc8:	dd69      	ble.n	8020d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020cca:	2e00      	cmp	r6, #0
 8020ccc:	d067      	beq.n	8020d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020cce:	f1bc 0f00 	cmp.w	ip, #0
 8020cd2:	db62      	blt.n	8020d9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020cd4:	45e6      	cmp	lr, ip
 8020cd6:	dd60      	ble.n	8020d9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020cd8:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020cdc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020ce0:	441d      	add	r5, r3
 8020ce2:	f11c 0201 	adds.w	r2, ip, #1
 8020ce6:	d45d      	bmi.n	8020da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020ce8:	4596      	cmp	lr, r2
 8020cea:	dd5b      	ble.n	8020da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020cec:	2800      	cmp	r0, #0
 8020cee:	d059      	beq.n	8020da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020cf0:	44c6      	add	lr, r8
 8020cf2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020cf6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020cfa:	4413      	add	r3, r2
 8020cfc:	b280      	uxth	r0, r0
 8020cfe:	b2b2      	uxth	r2, r6
 8020d00:	fb00 f602 	mul.w	r6, r0, r2
 8020d04:	0100      	lsls	r0, r0, #4
 8020d06:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8020d0a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020d0e:	1b80      	subs	r0, r0, r6
 8020d10:	fa1f fc82 	uxth.w	ip, r2
 8020d14:	b282      	uxth	r2, r0
 8020d16:	78a0      	ldrb	r0, [r4, #2]
 8020d18:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020d1c:	f897 9000 	ldrb.w	r9, [r7]
 8020d20:	787f      	ldrb	r7, [r7, #1]
 8020d22:	eba8 080c 	sub.w	r8, r8, ip
 8020d26:	fa1f f888 	uxth.w	r8, r8
 8020d2a:	4350      	muls	r0, r2
 8020d2c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020d30:	78a8      	ldrb	r0, [r5, #2]
 8020d32:	fb0c e000 	mla	r0, ip, r0, lr
 8020d36:	f893 e002 	ldrb.w	lr, [r3, #2]
 8020d3a:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020d3e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020d42:	f894 e000 	ldrb.w	lr, [r4]
 8020d46:	fb02 fe0e 	mul.w	lr, r2, lr
 8020d4a:	fb08 e909 	mla	r9, r8, r9, lr
 8020d4e:	f895 e000 	ldrb.w	lr, [r5]
 8020d52:	fb0c 990e 	mla	r9, ip, lr, r9
 8020d56:	f893 e000 	ldrb.w	lr, [r3]
 8020d5a:	785b      	ldrb	r3, [r3, #1]
 8020d5c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020d60:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020d64:	ea4e 0e00 	orr.w	lr, lr, r0
 8020d68:	7860      	ldrb	r0, [r4, #1]
 8020d6a:	4350      	muls	r0, r2
 8020d6c:	786a      	ldrb	r2, [r5, #1]
 8020d6e:	fb08 0007 	mla	r0, r8, r7, r0
 8020d72:	fb0c 0202 	mla	r2, ip, r2, r0
 8020d76:	fb06 2303 	mla	r3, r6, r3, r2
 8020d7a:	095b      	lsrs	r3, r3, #5
 8020d7c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d80:	ea4e 0303 	orr.w	r3, lr, r3
 8020d84:	800b      	strh	r3, [r1, #0]
 8020d86:	b003      	add	sp, #12
 8020d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d8c:	af01      	add	r7, sp, #4
 8020d8e:	e78c      	b.n	8020caa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020d90:	ac01      	add	r4, sp, #4
 8020d92:	4627      	mov	r7, r4
 8020d94:	e795      	b.n	8020cc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020d96:	ac01      	add	r4, sp, #4
 8020d98:	e793      	b.n	8020cc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020d9a:	ad01      	add	r5, sp, #4
 8020d9c:	e7a1      	b.n	8020ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020d9e:	ab01      	add	r3, sp, #4
 8020da0:	461d      	mov	r5, r3
 8020da2:	e7ab      	b.n	8020cfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020da4:	ab01      	add	r3, sp, #4
 8020da6:	e7a9      	b.n	8020cfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020da8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020dac:	b08f      	sub	sp, #60	; 0x3c
 8020dae:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020db2:	920c      	str	r2, [sp, #48]	; 0x30
 8020db4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8020db6:	910a      	str	r1, [sp, #40]	; 0x28
 8020db8:	9306      	str	r3, [sp, #24]
 8020dba:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020dbe:	900d      	str	r0, [sp, #52]	; 0x34
 8020dc0:	6850      	ldr	r0, [r2, #4]
 8020dc2:	6812      	ldr	r2, [r2, #0]
 8020dc4:	fb00 1303 	mla	r3, r0, r3, r1
 8020dc8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020dcc:	9307      	str	r3, [sp, #28]
 8020dce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020dd0:	681b      	ldr	r3, [r3, #0]
 8020dd2:	9308      	str	r3, [sp, #32]
 8020dd4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020dd6:	685c      	ldr	r4, [r3, #4]
 8020dd8:	3404      	adds	r4, #4
 8020dda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ddc:	2b00      	cmp	r3, #0
 8020dde:	dc03      	bgt.n	8020de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020de0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020de2:	2b00      	cmp	r3, #0
 8020de4:	f340 81d6 	ble.w	8021194 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020de8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020dea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020dee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020df2:	1e48      	subs	r0, r1, #1
 8020df4:	1e56      	subs	r6, r2, #1
 8020df6:	9b06      	ldr	r3, [sp, #24]
 8020df8:	2b00      	cmp	r3, #0
 8020dfa:	f340 80b7 	ble.w	8020f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020dfe:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020e02:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020e06:	d406      	bmi.n	8020e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020e08:	4287      	cmp	r7, r0
 8020e0a:	da04      	bge.n	8020e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020e0c:	2b00      	cmp	r3, #0
 8020e0e:	db02      	blt.n	8020e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020e10:	42b3      	cmp	r3, r6
 8020e12:	f2c0 80ac 	blt.w	8020f6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020e16:	3701      	adds	r7, #1
 8020e18:	f100 809d 	bmi.w	8020f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020e1c:	42b9      	cmp	r1, r7
 8020e1e:	f2c0 809a 	blt.w	8020f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020e22:	3301      	adds	r3, #1
 8020e24:	f100 8097 	bmi.w	8020f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020e28:	429a      	cmp	r2, r3
 8020e2a:	f2c0 8094 	blt.w	8020f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020e2e:	9b06      	ldr	r3, [sp, #24]
 8020e30:	930b      	str	r3, [sp, #44]	; 0x2c
 8020e32:	9b07      	ldr	r3, [sp, #28]
 8020e34:	9309      	str	r3, [sp, #36]	; 0x24
 8020e36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020e38:	2b00      	cmp	r3, #0
 8020e3a:	f340 80b5 	ble.w	8020fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020e3e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020e40:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020e42:	68c7      	ldr	r7, [r0, #12]
 8020e44:	6892      	ldr	r2, [r2, #8]
 8020e46:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020e4a:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020e4e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020e52:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020e56:	f100 80fb 	bmi.w	8021050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e5a:	f102 3cff 	add.w	ip, r2, #4294967295
 8020e5e:	4560      	cmp	r0, ip
 8020e60:	f280 80f6 	bge.w	8021050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e64:	2e00      	cmp	r6, #0
 8020e66:	f2c0 80f3 	blt.w	8021050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e6a:	f107 3cff 	add.w	ip, r7, #4294967295
 8020e6e:	4566      	cmp	r6, ip
 8020e70:	f280 80ee 	bge.w	8021050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020e74:	b212      	sxth	r2, r2
 8020e76:	fb06 0002 	mla	r0, r6, r2, r0
 8020e7a:	9e08      	ldr	r6, [sp, #32]
 8020e7c:	1837      	adds	r7, r6, r0
 8020e7e:	5c30      	ldrb	r0, [r6, r0]
 8020e80:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020e84:	eb04 0c08 	add.w	ip, r4, r8
 8020e88:	2b00      	cmp	r3, #0
 8020e8a:	f000 80d3 	beq.w	8021034 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020e8e:	787e      	ldrb	r6, [r7, #1]
 8020e90:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020e94:	4426      	add	r6, r4
 8020e96:	2900      	cmp	r1, #0
 8020e98:	f000 80d4 	beq.w	8021044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020e9c:	18b8      	adds	r0, r7, r2
 8020e9e:	5cba      	ldrb	r2, [r7, r2]
 8020ea0:	7840      	ldrb	r0, [r0, #1]
 8020ea2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020ea6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020eaa:	4422      	add	r2, r4
 8020eac:	4420      	add	r0, r4
 8020eae:	b29b      	uxth	r3, r3
 8020eb0:	b289      	uxth	r1, r1
 8020eb2:	fb03 f901 	mul.w	r9, r3, r1
 8020eb6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020eba:	011b      	lsls	r3, r3, #4
 8020ebc:	b289      	uxth	r1, r1
 8020ebe:	78b7      	ldrb	r7, [r6, #2]
 8020ec0:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020ec4:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020ec8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020ecc:	eba3 0309 	sub.w	r3, r3, r9
 8020ed0:	b29b      	uxth	r3, r3
 8020ed2:	ebae 0e01 	sub.w	lr, lr, r1
 8020ed6:	fa1f fe8e 	uxth.w	lr, lr
 8020eda:	435f      	muls	r7, r3
 8020edc:	fb0e 770a 	mla	r7, lr, sl, r7
 8020ee0:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020ee4:	fb01 770a 	mla	r7, r1, sl, r7
 8020ee8:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020eec:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020ef0:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020ef4:	f896 8000 	ldrb.w	r8, [r6]
 8020ef8:	7876      	ldrb	r6, [r6, #1]
 8020efa:	fb03 f808 	mul.w	r8, r3, r8
 8020efe:	fb0e 8807 	mla	r8, lr, r7, r8
 8020f02:	7817      	ldrb	r7, [r2, #0]
 8020f04:	fb01 8807 	mla	r8, r1, r7, r8
 8020f08:	7807      	ldrb	r7, [r0, #0]
 8020f0a:	fb09 8707 	mla	r7, r9, r7, r8
 8020f0e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020f12:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020f16:	ea47 070a 	orr.w	r7, r7, sl
 8020f1a:	4373      	muls	r3, r6
 8020f1c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020f20:	fb0e 330c 	mla	r3, lr, ip, r3
 8020f24:	fb01 310a 	mla	r1, r1, sl, r3
 8020f28:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020f2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f2e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020f32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020f36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020f3a:	ea47 070a 	orr.w	r7, r7, sl
 8020f3e:	801f      	strh	r7, [r3, #0]
 8020f40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f42:	3302      	adds	r3, #2
 8020f44:	9309      	str	r3, [sp, #36]	; 0x24
 8020f46:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020f48:	449b      	add	fp, r3
 8020f4a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020f4c:	441d      	add	r5, r3
 8020f4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f50:	3b01      	subs	r3, #1
 8020f52:	930b      	str	r3, [sp, #44]	; 0x2c
 8020f54:	e76f      	b.n	8020e36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020f56:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020f58:	449b      	add	fp, r3
 8020f5a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020f5c:	441d      	add	r5, r3
 8020f5e:	9b06      	ldr	r3, [sp, #24]
 8020f60:	3b01      	subs	r3, #1
 8020f62:	9306      	str	r3, [sp, #24]
 8020f64:	9b07      	ldr	r3, [sp, #28]
 8020f66:	3302      	adds	r3, #2
 8020f68:	9307      	str	r3, [sp, #28]
 8020f6a:	e744      	b.n	8020df6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020f6c:	d023      	beq.n	8020fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020f6e:	9b06      	ldr	r3, [sp, #24]
 8020f70:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020f72:	3b01      	subs	r3, #1
 8020f74:	fb00 b003 	mla	r0, r0, r3, fp
 8020f78:	1400      	asrs	r0, r0, #16
 8020f7a:	f53f af58 	bmi.w	8020e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020f7e:	3901      	subs	r1, #1
 8020f80:	4288      	cmp	r0, r1
 8020f82:	f6bf af54 	bge.w	8020e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020f86:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020f88:	fb01 5303 	mla	r3, r1, r3, r5
 8020f8c:	141b      	asrs	r3, r3, #16
 8020f8e:	f53f af4e 	bmi.w	8020e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020f92:	3a01      	subs	r2, #1
 8020f94:	4293      	cmp	r3, r2
 8020f96:	f6bf af4a 	bge.w	8020e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020f9a:	9b06      	ldr	r3, [sp, #24]
 8020f9c:	9309      	str	r3, [sp, #36]	; 0x24
 8020f9e:	9b07      	ldr	r3, [sp, #28]
 8020fa0:	930b      	str	r3, [sp, #44]	; 0x2c
 8020fa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020fa4:	2b00      	cmp	r3, #0
 8020fa6:	dc70      	bgt.n	802108a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020fa8:	9b06      	ldr	r3, [sp, #24]
 8020faa:	9a07      	ldr	r2, [sp, #28]
 8020fac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020fb0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020fb4:	9307      	str	r3, [sp, #28]
 8020fb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020fb8:	2b00      	cmp	r3, #0
 8020fba:	f340 80eb 	ble.w	8021194 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020fbe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020fc2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020fc6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020fca:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020fcc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020fd0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020fd4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020fd8:	eef0 6a62 	vmov.f32	s13, s5
 8020fdc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020fe0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020fe4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020fe8:	ee16 ba90 	vmov	fp, s13
 8020fec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020ff0:	eef0 6a43 	vmov.f32	s13, s6
 8020ff4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020ff8:	ee12 2a90 	vmov	r2, s5
 8020ffc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021000:	fb92 f3f3 	sdiv	r3, r2, r3
 8021004:	ee13 2a10 	vmov	r2, s6
 8021008:	931b      	str	r3, [sp, #108]	; 0x6c
 802100a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802100c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021010:	931c      	str	r3, [sp, #112]	; 0x70
 8021012:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021014:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021016:	3b01      	subs	r3, #1
 8021018:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802101c:	930a      	str	r3, [sp, #40]	; 0x28
 802101e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021020:	bf08      	it	eq
 8021022:	4613      	moveq	r3, r2
 8021024:	ee16 5a90 	vmov	r5, s13
 8021028:	9306      	str	r3, [sp, #24]
 802102a:	eeb0 3a67 	vmov.f32	s6, s15
 802102e:	eef0 2a47 	vmov.f32	s5, s14
 8021032:	e6d2      	b.n	8020dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8021034:	b149      	cbz	r1, 802104a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021036:	5cba      	ldrb	r2, [r7, r2]
 8021038:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802103c:	4422      	add	r2, r4
 802103e:	4660      	mov	r0, ip
 8021040:	4666      	mov	r6, ip
 8021042:	e734      	b.n	8020eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021044:	4660      	mov	r0, ip
 8021046:	4662      	mov	r2, ip
 8021048:	e731      	b.n	8020eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802104a:	4660      	mov	r0, ip
 802104c:	4662      	mov	r2, ip
 802104e:	e7f7      	b.n	8021040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8021050:	f110 0c01 	adds.w	ip, r0, #1
 8021054:	f53f af74 	bmi.w	8020f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021058:	4562      	cmp	r2, ip
 802105a:	f6ff af71 	blt.w	8020f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802105e:	f116 0c01 	adds.w	ip, r6, #1
 8021062:	f53f af6d 	bmi.w	8020f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021066:	4567      	cmp	r7, ip
 8021068:	f6ff af6a 	blt.w	8020f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802106c:	b23f      	sxth	r7, r7
 802106e:	b212      	sxth	r2, r2
 8021070:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021074:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021078:	9200      	str	r2, [sp, #0]
 802107a:	9701      	str	r7, [sp, #4]
 802107c:	4623      	mov	r3, r4
 802107e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8021082:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021084:	f7ff fde6 	bl	8020c54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021088:	e75a      	b.n	8020f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802108a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802108c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021090:	ea4f 462b 	mov.w	r6, fp, asr #16
 8021094:	1428      	asrs	r0, r5, #16
 8021096:	fb02 6000 	mla	r0, r2, r0, r6
 802109a:	9e08      	ldr	r6, [sp, #32]
 802109c:	f816 8000 	ldrb.w	r8, [r6, r0]
 80210a0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80210a4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80210a8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80210ac:	1837      	adds	r7, r6, r0
 80210ae:	eb04 0c08 	add.w	ip, r4, r8
 80210b2:	2b00      	cmp	r3, #0
 80210b4:	d060      	beq.n	8021178 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80210b6:	787e      	ldrb	r6, [r7, #1]
 80210b8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80210bc:	4426      	add	r6, r4
 80210be:	2900      	cmp	r1, #0
 80210c0:	d062      	beq.n	8021188 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80210c2:	18b8      	adds	r0, r7, r2
 80210c4:	5cba      	ldrb	r2, [r7, r2]
 80210c6:	7840      	ldrb	r0, [r0, #1]
 80210c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80210cc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80210d0:	4422      	add	r2, r4
 80210d2:	4420      	add	r0, r4
 80210d4:	b29b      	uxth	r3, r3
 80210d6:	b289      	uxth	r1, r1
 80210d8:	fb03 f901 	mul.w	r9, r3, r1
 80210dc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80210e0:	011b      	lsls	r3, r3, #4
 80210e2:	b289      	uxth	r1, r1
 80210e4:	78b7      	ldrb	r7, [r6, #2]
 80210e6:	f89c a002 	ldrb.w	sl, [ip, #2]
 80210ea:	f89c c001 	ldrb.w	ip, [ip, #1]
 80210ee:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80210f2:	eba3 0309 	sub.w	r3, r3, r9
 80210f6:	b29b      	uxth	r3, r3
 80210f8:	ebae 0e01 	sub.w	lr, lr, r1
 80210fc:	fa1f fe8e 	uxth.w	lr, lr
 8021100:	435f      	muls	r7, r3
 8021102:	fb0e 770a 	mla	r7, lr, sl, r7
 8021106:	f892 a002 	ldrb.w	sl, [r2, #2]
 802110a:	fb01 770a 	mla	r7, r1, sl, r7
 802110e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021112:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021116:	f814 7008 	ldrb.w	r7, [r4, r8]
 802111a:	f896 8000 	ldrb.w	r8, [r6]
 802111e:	7876      	ldrb	r6, [r6, #1]
 8021120:	fb03 f808 	mul.w	r8, r3, r8
 8021124:	fb0e 8807 	mla	r8, lr, r7, r8
 8021128:	7817      	ldrb	r7, [r2, #0]
 802112a:	fb01 8807 	mla	r8, r1, r7, r8
 802112e:	7807      	ldrb	r7, [r0, #0]
 8021130:	fb09 8707 	mla	r7, r9, r7, r8
 8021134:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021138:	4373      	muls	r3, r6
 802113a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802113e:	7856      	ldrb	r6, [r2, #1]
 8021140:	ea47 070a 	orr.w	r7, r7, sl
 8021144:	fb0e 330c 	mla	r3, lr, ip, r3
 8021148:	f890 a001 	ldrb.w	sl, [r0, #1]
 802114c:	fb01 3306 	mla	r3, r1, r6, r3
 8021150:	fb09 3a0a 	mla	sl, r9, sl, r3
 8021154:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021158:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802115a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802115e:	ea47 070a 	orr.w	r7, r7, sl
 8021162:	f823 7b02 	strh.w	r7, [r3], #2
 8021166:	930b      	str	r3, [sp, #44]	; 0x2c
 8021168:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802116a:	449b      	add	fp, r3
 802116c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802116e:	441d      	add	r5, r3
 8021170:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021172:	3b01      	subs	r3, #1
 8021174:	9309      	str	r3, [sp, #36]	; 0x24
 8021176:	e714      	b.n	8020fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8021178:	b149      	cbz	r1, 802118e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802117a:	5cba      	ldrb	r2, [r7, r2]
 802117c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021180:	4422      	add	r2, r4
 8021182:	4660      	mov	r0, ip
 8021184:	4666      	mov	r6, ip
 8021186:	e7a5      	b.n	80210d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021188:	4660      	mov	r0, ip
 802118a:	4662      	mov	r2, ip
 802118c:	e7a2      	b.n	80210d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802118e:	4660      	mov	r0, ip
 8021190:	4662      	mov	r2, ip
 8021192:	e7f7      	b.n	8021184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8021194:	b00f      	add	sp, #60	; 0x3c
 8021196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802119a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802119a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802119e:	b085      	sub	sp, #20
 80211a0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 80211a4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80211a8:	9102      	str	r1, [sp, #8]
 80211aa:	2c00      	cmp	r4, #0
 80211ac:	fb04 710c 	mla	r1, r4, ip, r7
 80211b0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80211b4:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80211b8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80211bc:	eb02 0e01 	add.w	lr, r2, r1
 80211c0:	f2c0 8122 	blt.w	8021408 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80211c4:	45a0      	cmp	r8, r4
 80211c6:	f340 811f 	ble.w	8021408 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80211ca:	2f00      	cmp	r7, #0
 80211cc:	f2c0 811a 	blt.w	8021404 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80211d0:	45bc      	cmp	ip, r7
 80211d2:	f340 8117 	ble.w	8021404 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80211d6:	5c52      	ldrb	r2, [r2, r1]
 80211d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80211dc:	1c7a      	adds	r2, r7, #1
 80211de:	f100 8116 	bmi.w	802140e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80211e2:	4594      	cmp	ip, r2
 80211e4:	f340 8113 	ble.w	802140e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80211e8:	2e00      	cmp	r6, #0
 80211ea:	f000 8112 	beq.w	8021412 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80211ee:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80211f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80211f6:	3401      	adds	r4, #1
 80211f8:	f100 810f 	bmi.w	802141a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80211fc:	45a0      	cmp	r8, r4
 80211fe:	f340 810c 	ble.w	802141a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021202:	2800      	cmp	r0, #0
 8021204:	f000 810c 	beq.w	8021420 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021208:	2f00      	cmp	r7, #0
 802120a:	f2c0 8104 	blt.w	8021416 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802120e:	45bc      	cmp	ip, r7
 8021210:	f340 8101 	ble.w	8021416 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021214:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021218:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802121c:	3701      	adds	r7, #1
 802121e:	f100 8102 	bmi.w	8021426 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021222:	45bc      	cmp	ip, r7
 8021224:	f340 80ff 	ble.w	8021426 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021228:	2e00      	cmp	r6, #0
 802122a:	f000 80fe 	beq.w	802142a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802122e:	44f4      	add	ip, lr
 8021230:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021234:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021238:	b2b6      	uxth	r6, r6
 802123a:	b280      	uxth	r0, r0
 802123c:	fb00 fe06 	mul.w	lr, r0, r6
 8021240:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021244:	0136      	lsls	r6, r6, #4
 8021246:	eba6 070e 	sub.w	r7, r6, lr
 802124a:	b280      	uxth	r0, r0
 802124c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021250:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021254:	b2bf      	uxth	r7, r7
 8021256:	1a1b      	subs	r3, r3, r0
 8021258:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802125c:	b29b      	uxth	r3, r3
 802125e:	fb0a f607 	mul.w	r6, sl, r7
 8021262:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021266:	fb0b 6603 	mla	r6, fp, r3, r6
 802126a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802126e:	fb00 6609 	mla	r6, r0, r9, r6
 8021272:	fb0e 6608 	mla	r6, lr, r8, r6
 8021276:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802127a:	9600      	str	r6, [sp, #0]
 802127c:	2e00      	cmp	r6, #0
 802127e:	f000 80be 	beq.w	80213fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8021282:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021286:	fb0b fc0c 	mul.w	ip, fp, ip
 802128a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802128e:	fb0b f505 	mul.w	r5, fp, r5
 8021292:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021296:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802129a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802129e:	44dc      	add	ip, fp
 80212a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212a4:	9501      	str	r5, [sp, #4]
 80212a6:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80212aa:	9503      	str	r5, [sp, #12]
 80212ac:	9d01      	ldr	r5, [sp, #4]
 80212ae:	9e02      	ldr	r6, [sp, #8]
 80212b0:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80212b4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80212b8:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80212bc:	fb0a fc0c 	mul.w	ip, sl, ip
 80212c0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80212c4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80212c8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80212cc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80212d0:	4465      	add	r5, ip
 80212d2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80212d6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80212da:	fb09 fc0c 	mul.w	ip, r9, ip
 80212de:	fb09 f904 	mul.w	r9, r9, r4
 80212e2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80212e6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80212ea:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80212ee:	fb08 f404 	mul.w	r4, r8, r4
 80212f2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80212f6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80212fa:	fb08 f802 	mul.w	r8, r8, r2
 80212fe:	fb0a fa01 	mul.w	sl, sl, r1
 8021302:	0a22      	lsrs	r2, r4, #8
 8021304:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021308:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802130c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021310:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021314:	4414      	add	r4, r2
 8021316:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802131a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802131e:	0a2d      	lsrs	r5, r5, #8
 8021320:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021324:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021328:	9a03      	ldr	r2, [sp, #12]
 802132a:	8836      	ldrh	r6, [r6, #0]
 802132c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021330:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021334:	437d      	muls	r5, r7
 8021336:	4461      	add	r1, ip
 8021338:	0a24      	lsrs	r4, r4, #8
 802133a:	fb02 5503 	mla	r5, r2, r3, r5
 802133e:	0a09      	lsrs	r1, r1, #8
 8021340:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021344:	fb04 540e 	mla	r4, r4, lr, r5
 8021348:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802134c:	fb01 4100 	mla	r1, r1, r0, r4
 8021350:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021354:	0a09      	lsrs	r1, r1, #8
 8021356:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802135a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802135e:	fb07 f70a 	mul.w	r7, r7, sl
 8021362:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021366:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802136a:	fb03 7101 	mla	r1, r3, r1, r7
 802136e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021372:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021376:	fb0e 1e08 	mla	lr, lr, r8, r1
 802137a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802137e:	fb00 e101 	mla	r1, r0, r1, lr
 8021382:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8021386:	9a00      	ldr	r2, [sp, #0]
 8021388:	b287      	uxth	r7, r0
 802138a:	437a      	muls	r2, r7
 802138c:	0a09      	lsrs	r1, r1, #8
 802138e:	1c53      	adds	r3, r2, #1
 8021390:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021394:	4321      	orrs	r1, r4
 8021396:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802139a:	1235      	asrs	r5, r6, #8
 802139c:	0c0a      	lsrs	r2, r1, #16
 802139e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80213a2:	b2db      	uxtb	r3, r3
 80213a4:	fb12 f207 	smulbb	r2, r2, r7
 80213a8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80213ac:	fb05 2503 	mla	r5, r5, r3, r2
 80213b0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80213b4:	10f2      	asrs	r2, r6, #3
 80213b6:	b2c8      	uxtb	r0, r1
 80213b8:	00f6      	lsls	r6, r6, #3
 80213ba:	fb14 f407 	smulbb	r4, r4, r7
 80213be:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80213c2:	b2f6      	uxtb	r6, r6
 80213c4:	fb10 f007 	smulbb	r0, r0, r7
 80213c8:	fb02 4203 	mla	r2, r2, r3, r4
 80213cc:	b2ad      	uxth	r5, r5
 80213ce:	fb06 0303 	mla	r3, r6, r3, r0
 80213d2:	b299      	uxth	r1, r3
 80213d4:	b294      	uxth	r4, r2
 80213d6:	1c6b      	adds	r3, r5, #1
 80213d8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80213dc:	1c62      	adds	r2, r4, #1
 80213de:	1c4b      	adds	r3, r1, #1
 80213e0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80213e4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80213e8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80213ec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80213f0:	0952      	lsrs	r2, r2, #5
 80213f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80213f6:	432b      	orrs	r3, r5
 80213f8:	4313      	orrs	r3, r2
 80213fa:	9a02      	ldr	r2, [sp, #8]
 80213fc:	8013      	strh	r3, [r2, #0]
 80213fe:	b005      	add	sp, #20
 8021400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021404:	2500      	movs	r5, #0
 8021406:	e6e9      	b.n	80211dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021408:	2100      	movs	r1, #0
 802140a:	460d      	mov	r5, r1
 802140c:	e6f3      	b.n	80211f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802140e:	2100      	movs	r1, #0
 8021410:	e6f1      	b.n	80211f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021412:	4631      	mov	r1, r6
 8021414:	e6ef      	b.n	80211f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021416:	2400      	movs	r4, #0
 8021418:	e700      	b.n	802121c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802141a:	2200      	movs	r2, #0
 802141c:	4614      	mov	r4, r2
 802141e:	e70b      	b.n	8021238 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021420:	4602      	mov	r2, r0
 8021422:	4604      	mov	r4, r0
 8021424:	e708      	b.n	8021238 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021426:	2200      	movs	r2, #0
 8021428:	e706      	b.n	8021238 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802142a:	4632      	mov	r2, r6
 802142c:	e704      	b.n	8021238 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802142e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802142e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021432:	b09f      	sub	sp, #124	; 0x7c
 8021434:	921b      	str	r2, [sp, #108]	; 0x6c
 8021436:	9309      	str	r3, [sp, #36]	; 0x24
 8021438:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802143a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802143e:	931c      	str	r3, [sp, #112]	; 0x70
 8021440:	9119      	str	r1, [sp, #100]	; 0x64
 8021442:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8021446:	901d      	str	r0, [sp, #116]	; 0x74
 8021448:	6850      	ldr	r0, [r2, #4]
 802144a:	6812      	ldr	r2, [r2, #0]
 802144c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802144e:	fb00 1303 	mla	r3, r0, r3, r1
 8021452:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021456:	930c      	str	r3, [sp, #48]	; 0x30
 8021458:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802145a:	681b      	ldr	r3, [r3, #0]
 802145c:	9312      	str	r3, [sp, #72]	; 0x48
 802145e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021460:	685e      	ldr	r6, [r3, #4]
 8021462:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8021466:	930d      	str	r3, [sp, #52]	; 0x34
 8021468:	3604      	adds	r6, #4
 802146a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802146c:	2b00      	cmp	r3, #0
 802146e:	dc03      	bgt.n	8021478 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021470:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021472:	2b00      	cmp	r3, #0
 8021474:	f340 8388 	ble.w	8021b88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021478:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802147a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802147e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021482:	1e48      	subs	r0, r1, #1
 8021484:	1e57      	subs	r7, r2, #1
 8021486:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021488:	2b00      	cmp	r3, #0
 802148a:	f340 8195 	ble.w	80217b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802148e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021490:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021494:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021498:	d406      	bmi.n	80214a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802149a:	4584      	cmp	ip, r0
 802149c:	da04      	bge.n	80214a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802149e:	2b00      	cmp	r3, #0
 80214a0:	db02      	blt.n	80214a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80214a2:	42bb      	cmp	r3, r7
 80214a4:	f2c0 8189 	blt.w	80217ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80214a8:	f11c 0c01 	adds.w	ip, ip, #1
 80214ac:	f100 8177 	bmi.w	802179e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80214b0:	4561      	cmp	r1, ip
 80214b2:	f2c0 8174 	blt.w	802179e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80214b6:	3301      	adds	r3, #1
 80214b8:	f100 8171 	bmi.w	802179e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80214bc:	429a      	cmp	r2, r3
 80214be:	f2c0 816e 	blt.w	802179e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80214c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214c4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80214c6:	931a      	str	r3, [sp, #104]	; 0x68
 80214c8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80214ca:	2b00      	cmp	r3, #0
 80214cc:	f340 8193 	ble.w	80217f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80214d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80214d2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80214d6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80214d8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80214dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80214de:	141b      	asrs	r3, r3, #16
 80214e0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80214e4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80214e8:	f100 81d6 	bmi.w	8021898 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80214ec:	f100 38ff 	add.w	r8, r0, #4294967295
 80214f0:	4543      	cmp	r3, r8
 80214f2:	f280 81d1 	bge.w	8021898 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80214f6:	f1bc 0f00 	cmp.w	ip, #0
 80214fa:	f2c0 81cd 	blt.w	8021898 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80214fe:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021502:	45c4      	cmp	ip, r8
 8021504:	f280 81c8 	bge.w	8021898 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021508:	b200      	sxth	r0, r0
 802150a:	fb0c 3300 	mla	r3, ip, r0, r3
 802150e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021510:	eb04 0803 	add.w	r8, r4, r3
 8021514:	5ce3      	ldrb	r3, [r4, r3]
 8021516:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802151a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802151e:	2a00      	cmp	r2, #0
 8021520:	f000 81af 	beq.w	8021882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021524:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021528:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802152c:	940e      	str	r4, [sp, #56]	; 0x38
 802152e:	0e24      	lsrs	r4, r4, #24
 8021530:	9415      	str	r4, [sp, #84]	; 0x54
 8021532:	b179      	cbz	r1, 8021554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021534:	eb08 0c00 	add.w	ip, r8, r0
 8021538:	f818 0000 	ldrb.w	r0, [r8, r0]
 802153c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021540:	900a      	str	r0, [sp, #40]	; 0x28
 8021542:	0e00      	lsrs	r0, r0, #24
 8021544:	9013      	str	r0, [sp, #76]	; 0x4c
 8021546:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802154a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802154e:	900f      	str	r0, [sp, #60]	; 0x3c
 8021550:	0e00      	lsrs	r0, r0, #24
 8021552:	9016      	str	r0, [sp, #88]	; 0x58
 8021554:	b292      	uxth	r2, r2
 8021556:	b289      	uxth	r1, r1
 8021558:	fb02 f901 	mul.w	r9, r2, r1
 802155c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021560:	0112      	lsls	r2, r2, #4
 8021562:	eba2 0809 	sub.w	r8, r2, r9
 8021566:	b289      	uxth	r1, r1
 8021568:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802156c:	9815      	ldr	r0, [sp, #84]	; 0x54
 802156e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021570:	fa1f f888 	uxth.w	r8, r8
 8021574:	1a52      	subs	r2, r2, r1
 8021576:	b292      	uxth	r2, r2
 8021578:	fb08 f000 	mul.w	r0, r8, r0
 802157c:	fb02 000e 	mla	r0, r2, lr, r0
 8021580:	fb01 0004 	mla	r0, r1, r4, r0
 8021584:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021586:	fb09 0004 	mla	r0, r9, r4, r0
 802158a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802158e:	2800      	cmp	r0, #0
 8021590:	f000 80fa 	beq.w	8021788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021594:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021598:	d01b      	beq.n	80215d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802159a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802159e:	fb0e fa0a 	mul.w	sl, lr, sl
 80215a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80215a6:	fb0e fe03 	mul.w	lr, lr, r3
 80215aa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80215ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80215b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80215b6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80215ba:	4453      	add	r3, sl
 80215bc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80215c0:	0a1b      	lsrs	r3, r3, #8
 80215c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80215c6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80215ca:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80215ce:	ea43 030c 	orr.w	r3, r3, ip
 80215d2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80215d4:	2cff      	cmp	r4, #255	; 0xff
 80215d6:	d021      	beq.n	802161c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80215d8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80215da:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80215de:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80215e0:	fb04 fb0b 	mul.w	fp, r4, fp
 80215e4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80215e6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80215ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80215ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80215f0:	fb04 fa0a 	mul.w	sl, r4, sl
 80215f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80215f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80215fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021600:	44de      	add	lr, fp
 8021602:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021606:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802160a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802160e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021612:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021616:	ea4e 040a 	orr.w	r4, lr, sl
 802161a:	940e      	str	r4, [sp, #56]	; 0x38
 802161c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802161e:	2cff      	cmp	r4, #255	; 0xff
 8021620:	d021      	beq.n	8021666 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021622:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021624:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021628:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802162a:	fb04 fb0b 	mul.w	fp, r4, fp
 802162e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021630:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021634:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021636:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802163a:	fb04 fa0a 	mul.w	sl, r4, sl
 802163e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021642:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021646:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802164a:	44de      	add	lr, fp
 802164c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021650:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021654:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021658:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802165c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021660:	ea4e 040a 	orr.w	r4, lr, sl
 8021664:	940a      	str	r4, [sp, #40]	; 0x28
 8021666:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021668:	2cff      	cmp	r4, #255	; 0xff
 802166a:	d021      	beq.n	80216b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802166c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802166e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021672:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021674:	fb04 fb0b 	mul.w	fp, r4, fp
 8021678:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802167a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802167e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021680:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021684:	fb04 fa0a 	mul.w	sl, r4, sl
 8021688:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802168c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021690:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021694:	44de      	add	lr, fp
 8021696:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802169a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802169e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80216a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80216a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80216aa:	ea4e 040a 	orr.w	r4, lr, sl
 80216ae:	940f      	str	r4, [sp, #60]	; 0x3c
 80216b0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80216b2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80216b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80216b8:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80216bc:	fb08 fc0c 	mul.w	ip, r8, ip
 80216c0:	fb02 cc0e 	mla	ip, r2, lr, ip
 80216c4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80216c8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80216ca:	fb01 cc0e 	mla	ip, r1, lr, ip
 80216ce:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80216d2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80216d4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80216d8:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80216dc:	fb08 f80e 	mul.w	r8, r8, lr
 80216e0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80216e4:	fb02 8303 	mla	r3, r2, r3, r8
 80216e8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80216ea:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80216ec:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80216f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80216f2:	fb01 330a 	mla	r3, r1, sl, r3
 80216f6:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80216fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80216fc:	fb09 3901 	mla	r9, r9, r1, r3
 8021700:	4342      	muls	r2, r0
 8021702:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021706:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802170a:	883b      	ldrh	r3, [r7, #0]
 802170c:	1c50      	adds	r0, r2, #1
 802170e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021712:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021716:	ea4c 0c09 	orr.w	ip, ip, r9
 802171a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802171e:	1219      	asrs	r1, r3, #8
 8021720:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021724:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021728:	b2c0      	uxtb	r0, r0
 802172a:	fb12 f204 	smulbb	r2, r2, r4
 802172e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021732:	fb01 2100 	mla	r1, r1, r0, r2
 8021736:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802173a:	10da      	asrs	r2, r3, #3
 802173c:	fa5f fc8c 	uxtb.w	ip, ip
 8021740:	00db      	lsls	r3, r3, #3
 8021742:	fb1c fc04 	smulbb	ip, ip, r4
 8021746:	b2db      	uxtb	r3, r3
 8021748:	b289      	uxth	r1, r1
 802174a:	fb03 c300 	mla	r3, r3, r0, ip
 802174e:	fa1f fc83 	uxth.w	ip, r3
 8021752:	1c4b      	adds	r3, r1, #1
 8021754:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021758:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802175c:	fb1e fe04 	smulbb	lr, lr, r4
 8021760:	f10c 0301 	add.w	r3, ip, #1
 8021764:	fb02 e200 	mla	r2, r2, r0, lr
 8021768:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802176c:	b292      	uxth	r2, r2
 802176e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021772:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021776:	430b      	orrs	r3, r1
 8021778:	1c51      	adds	r1, r2, #1
 802177a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802177e:	0952      	lsrs	r2, r2, #5
 8021780:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021784:	4313      	orrs	r3, r2
 8021786:	803b      	strh	r3, [r7, #0]
 8021788:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802178a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802178c:	441a      	add	r2, r3
 802178e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021790:	9229      	str	r2, [sp, #164]	; 0xa4
 8021792:	441d      	add	r5, r3
 8021794:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021796:	3b01      	subs	r3, #1
 8021798:	3702      	adds	r7, #2
 802179a:	931a      	str	r3, [sp, #104]	; 0x68
 802179c:	e694      	b.n	80214c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802179e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80217a0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80217a2:	441c      	add	r4, r3
 80217a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80217a6:	9429      	str	r4, [sp, #164]	; 0xa4
 80217a8:	441d      	add	r5, r3
 80217aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217ac:	3b01      	subs	r3, #1
 80217ae:	9309      	str	r3, [sp, #36]	; 0x24
 80217b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80217b2:	3302      	adds	r3, #2
 80217b4:	930c      	str	r3, [sp, #48]	; 0x30
 80217b6:	e666      	b.n	8021486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80217b8:	d024      	beq.n	8021804 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80217ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217bc:	982b      	ldr	r0, [sp, #172]	; 0xac
 80217be:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80217c0:	3b01      	subs	r3, #1
 80217c2:	fb00 4003 	mla	r0, r0, r3, r4
 80217c6:	1400      	asrs	r0, r0, #16
 80217c8:	f53f ae7b 	bmi.w	80214c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80217cc:	3901      	subs	r1, #1
 80217ce:	4288      	cmp	r0, r1
 80217d0:	f6bf ae77 	bge.w	80214c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80217d4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80217d6:	fb01 5303 	mla	r3, r1, r3, r5
 80217da:	141b      	asrs	r3, r3, #16
 80217dc:	f53f ae71 	bmi.w	80214c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80217e0:	3a01      	subs	r2, #1
 80217e2:	4293      	cmp	r3, r2
 80217e4:	f6bf ae6d 	bge.w	80214c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80217e8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80217ec:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80217f0:	f1bb 0f00 	cmp.w	fp, #0
 80217f4:	dc70      	bgt.n	80218d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80217f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217f8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80217fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80217fe:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021802:	930c      	str	r3, [sp, #48]	; 0x30
 8021804:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021806:	2b00      	cmp	r3, #0
 8021808:	f340 81be 	ble.w	8021b88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802180c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021810:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021814:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021818:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802181a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802181e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021822:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021826:	eef0 6a62 	vmov.f32	s13, s5
 802182a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802182e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021832:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021836:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802183a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802183e:	eef0 6a43 	vmov.f32	s13, s6
 8021842:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021846:	ee12 2a90 	vmov	r2, s5
 802184a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802184e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021852:	ee13 2a10 	vmov	r2, s6
 8021856:	932b      	str	r3, [sp, #172]	; 0xac
 8021858:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802185a:	fb92 f3f3 	sdiv	r3, r2, r3
 802185e:	932c      	str	r3, [sp, #176]	; 0xb0
 8021860:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021862:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8021864:	3b01      	subs	r3, #1
 8021866:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802186a:	9319      	str	r3, [sp, #100]	; 0x64
 802186c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802186e:	bf08      	it	eq
 8021870:	4613      	moveq	r3, r2
 8021872:	ee16 5a90 	vmov	r5, s13
 8021876:	9309      	str	r3, [sp, #36]	; 0x24
 8021878:	eeb0 3a67 	vmov.f32	s6, s15
 802187c:	eef0 2a47 	vmov.f32	s5, s14
 8021880:	e5f3      	b.n	802146a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021882:	2900      	cmp	r1, #0
 8021884:	f43f ae66 	beq.w	8021554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021888:	f818 0000 	ldrb.w	r0, [r8, r0]
 802188c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021890:	900a      	str	r0, [sp, #40]	; 0x28
 8021892:	0e00      	lsrs	r0, r0, #24
 8021894:	9013      	str	r0, [sp, #76]	; 0x4c
 8021896:	e65d      	b.n	8021554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021898:	f113 0801 	adds.w	r8, r3, #1
 802189c:	f53f af74 	bmi.w	8021788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80218a0:	4540      	cmp	r0, r8
 80218a2:	f6ff af71 	blt.w	8021788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80218a6:	f11c 0801 	adds.w	r8, ip, #1
 80218aa:	f53f af6d 	bmi.w	8021788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80218ae:	45c6      	cmp	lr, r8
 80218b0:	f6ff af6a 	blt.w	8021788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80218b4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80218b6:	9302      	str	r3, [sp, #8]
 80218b8:	b200      	sxth	r0, r0
 80218ba:	fa0f f38e 	sxth.w	r3, lr
 80218be:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80218c2:	e9cd c203 	strd	ip, r2, [sp, #12]
 80218c6:	9301      	str	r3, [sp, #4]
 80218c8:	9000      	str	r0, [sp, #0]
 80218ca:	4633      	mov	r3, r6
 80218cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80218ce:	981d      	ldr	r0, [sp, #116]	; 0x74
 80218d0:	4639      	mov	r1, r7
 80218d2:	f7ff fc62 	bl	802119a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80218d6:	e757      	b.n	8021788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80218d8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80218da:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80218dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80218e0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80218e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80218e6:	1427      	asrs	r7, r4, #16
 80218e8:	142b      	asrs	r3, r5, #16
 80218ea:	fb01 7303 	mla	r3, r1, r3, r7
 80218ee:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80218f0:	18e7      	adds	r7, r4, r3
 80218f2:	5ce3      	ldrb	r3, [r4, r3]
 80218f4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80218f8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80218fc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021900:	2a00      	cmp	r2, #0
 8021902:	f000 8137 	beq.w	8021b74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021906:	f897 e001 	ldrb.w	lr, [r7, #1]
 802190a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802190e:	9410      	str	r4, [sp, #64]	; 0x40
 8021910:	0e24      	lsrs	r4, r4, #24
 8021912:	9417      	str	r4, [sp, #92]	; 0x5c
 8021914:	b170      	cbz	r0, 8021934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021916:	eb07 0e01 	add.w	lr, r7, r1
 802191a:	5c79      	ldrb	r1, [r7, r1]
 802191c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021920:	910b      	str	r1, [sp, #44]	; 0x2c
 8021922:	0e09      	lsrs	r1, r1, #24
 8021924:	9114      	str	r1, [sp, #80]	; 0x50
 8021926:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802192a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802192e:	9111      	str	r1, [sp, #68]	; 0x44
 8021930:	0e09      	lsrs	r1, r1, #24
 8021932:	9118      	str	r1, [sp, #96]	; 0x60
 8021934:	b292      	uxth	r2, r2
 8021936:	b280      	uxth	r0, r0
 8021938:	fb02 f800 	mul.w	r8, r2, r0
 802193c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021940:	0112      	lsls	r2, r2, #4
 8021942:	eba2 0e08 	sub.w	lr, r2, r8
 8021946:	b280      	uxth	r0, r0
 8021948:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802194c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802194e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021950:	fa1f fe8e 	uxth.w	lr, lr
 8021954:	1a12      	subs	r2, r2, r0
 8021956:	b292      	uxth	r2, r2
 8021958:	fb0e f101 	mul.w	r1, lr, r1
 802195c:	fb02 110c 	mla	r1, r2, ip, r1
 8021960:	fb00 1104 	mla	r1, r0, r4, r1
 8021964:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021966:	fb08 1104 	mla	r1, r8, r4, r1
 802196a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802196e:	2900      	cmp	r1, #0
 8021970:	f000 80f5 	beq.w	8021b5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021974:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021978:	d019      	beq.n	80219ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802197a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802197e:	fb0c fa0a 	mul.w	sl, ip, sl
 8021982:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021986:	fb0c fc03 	mul.w	ip, ip, r3
 802198a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802198e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021992:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021996:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802199a:	4453      	add	r3, sl
 802199c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80219a0:	0a1b      	lsrs	r3, r3, #8
 80219a2:	0a3f      	lsrs	r7, r7, #8
 80219a4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80219a8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80219ac:	433b      	orrs	r3, r7
 80219ae:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80219b0:	2cff      	cmp	r4, #255	; 0xff
 80219b2:	d020      	beq.n	80219f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80219b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80219b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80219ba:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80219bc:	4367      	muls	r7, r4
 80219be:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80219c0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80219c4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80219c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80219ca:	fb04 fa0a 	mul.w	sl, r4, sl
 80219ce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80219d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80219d6:	44bc      	add	ip, r7
 80219d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80219dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80219e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80219e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80219e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80219ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80219f0:	ea4c 040a 	orr.w	r4, ip, sl
 80219f4:	9410      	str	r4, [sp, #64]	; 0x40
 80219f6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80219f8:	2cff      	cmp	r4, #255	; 0xff
 80219fa:	d020      	beq.n	8021a3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80219fc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80219fe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021a02:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021a04:	4367      	muls	r7, r4
 8021a06:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021a08:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021a0c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021a0e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021a12:	fb04 fa0a 	mul.w	sl, r4, sl
 8021a16:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021a1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a1e:	44bc      	add	ip, r7
 8021a20:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021a24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021a28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021a30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021a38:	ea4c 040a 	orr.w	r4, ip, sl
 8021a3c:	940b      	str	r4, [sp, #44]	; 0x2c
 8021a3e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021a40:	2cff      	cmp	r4, #255	; 0xff
 8021a42:	d020      	beq.n	8021a86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8021a44:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021a46:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021a4a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021a4c:	4367      	muls	r7, r4
 8021a4e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021a50:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021a54:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021a56:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021a5a:	fb04 fa0a 	mul.w	sl, r4, sl
 8021a5e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021a62:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a66:	44bc      	add	ip, r7
 8021a68:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021a6c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021a70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021a78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021a80:	ea4c 040a 	orr.w	r4, ip, sl
 8021a84:	9411      	str	r4, [sp, #68]	; 0x44
 8021a86:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021a88:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021a8c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021a8e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021a92:	fb0e f707 	mul.w	r7, lr, r7
 8021a96:	fb02 770c 	mla	r7, r2, ip, r7
 8021a9a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021a9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021aa0:	fb00 770c 	mla	r7, r0, ip, r7
 8021aa4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021aa8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021aaa:	fb08 770c 	mla	r7, r8, ip, r7
 8021aae:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021ab2:	fb0e fe0c 	mul.w	lr, lr, ip
 8021ab6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021aba:	fb02 e303 	mla	r3, r2, r3, lr
 8021abe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021ac0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021ac2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021ac6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8021ac8:	fb00 330a 	mla	r3, r0, sl, r3
 8021acc:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8021ad0:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021ad4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021ad6:	f8b9 0000 	ldrh.w	r0, [r9]
 8021ada:	434b      	muls	r3, r1
 8021adc:	0a3f      	lsrs	r7, r7, #8
 8021ade:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021ae2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021ae6:	1c59      	adds	r1, r3, #1
 8021ae8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021aec:	ea47 070c 	orr.w	r7, r7, ip
 8021af0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021af4:	1202      	asrs	r2, r0, #8
 8021af6:	0c3b      	lsrs	r3, r7, #16
 8021af8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021afc:	b2c9      	uxtb	r1, r1
 8021afe:	fb13 f304 	smulbb	r3, r3, r4
 8021b02:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021b06:	fb02 3201 	mla	r2, r2, r1, r3
 8021b0a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021b0e:	10c3      	asrs	r3, r0, #3
 8021b10:	b2ff      	uxtb	r7, r7
 8021b12:	00c0      	lsls	r0, r0, #3
 8021b14:	b292      	uxth	r2, r2
 8021b16:	fb1c fc04 	smulbb	ip, ip, r4
 8021b1a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021b1e:	b2c0      	uxtb	r0, r0
 8021b20:	fb17 f704 	smulbb	r7, r7, r4
 8021b24:	fb03 c301 	mla	r3, r3, r1, ip
 8021b28:	fb00 7001 	mla	r0, r0, r1, r7
 8021b2c:	f102 0c01 	add.w	ip, r2, #1
 8021b30:	b280      	uxth	r0, r0
 8021b32:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8021b36:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8021b3a:	1c42      	adds	r2, r0, #1
 8021b3c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021b40:	b29b      	uxth	r3, r3
 8021b42:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021b46:	ea42 020c 	orr.w	r2, r2, ip
 8021b4a:	f103 0c01 	add.w	ip, r3, #1
 8021b4e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021b52:	095b      	lsrs	r3, r3, #5
 8021b54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b58:	431a      	orrs	r2, r3
 8021b5a:	f8a9 2000 	strh.w	r2, [r9]
 8021b5e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021b60:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021b62:	441a      	add	r2, r3
 8021b64:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021b66:	9229      	str	r2, [sp, #164]	; 0xa4
 8021b68:	f109 0902 	add.w	r9, r9, #2
 8021b6c:	441d      	add	r5, r3
 8021b6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021b72:	e63d      	b.n	80217f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021b74:	2800      	cmp	r0, #0
 8021b76:	f43f aedd 	beq.w	8021934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021b7a:	5c79      	ldrb	r1, [r7, r1]
 8021b7c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021b80:	910b      	str	r1, [sp, #44]	; 0x2c
 8021b82:	0e09      	lsrs	r1, r1, #24
 8021b84:	9114      	str	r1, [sp, #80]	; 0x50
 8021b86:	e6d5      	b.n	8021934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021b88:	b01f      	add	sp, #124	; 0x7c
 8021b8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021b8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8021b8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b92:	b089      	sub	sp, #36	; 0x24
 8021b94:	9101      	str	r1, [sp, #4]
 8021b96:	9801      	ldr	r0, [sp, #4]
 8021b98:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8021b9c:	8800      	ldrh	r0, [r0, #0]
 8021b9e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021ba2:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8021ba6:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8021baa:	1206      	asrs	r6, r0, #8
 8021bac:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8021bb0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021bb4:	9602      	str	r6, [sp, #8]
 8021bb6:	10c6      	asrs	r6, r0, #3
 8021bb8:	00c0      	lsls	r0, r0, #3
 8021bba:	b2c0      	uxtb	r0, r0
 8021bbc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021bc0:	9004      	str	r0, [sp, #16]
 8021bc2:	2f00      	cmp	r7, #0
 8021bc4:	fb07 100c 	mla	r0, r7, ip, r1
 8021bc8:	9603      	str	r6, [sp, #12]
 8021bca:	eb02 0e00 	add.w	lr, r2, r0
 8021bce:	f2c0 810a 	blt.w	8021de6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021bd2:	45b8      	cmp	r8, r7
 8021bd4:	f340 8107 	ble.w	8021de6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021bd8:	2900      	cmp	r1, #0
 8021bda:	f2c0 8102 	blt.w	8021de2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021bde:	458c      	cmp	ip, r1
 8021be0:	f340 80ff 	ble.w	8021de2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021be4:	5c12      	ldrb	r2, [r2, r0]
 8021be6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8021bea:	1c4a      	adds	r2, r1, #1
 8021bec:	f100 80fe 	bmi.w	8021dec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021bf0:	4594      	cmp	ip, r2
 8021bf2:	f340 80fb 	ble.w	8021dec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021bf6:	2d00      	cmp	r5, #0
 8021bf8:	f000 80fa 	beq.w	8021df0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021bfc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021c00:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021c04:	3701      	adds	r7, #1
 8021c06:	f100 80f7 	bmi.w	8021df8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021c0a:	45b8      	cmp	r8, r7
 8021c0c:	f340 80f4 	ble.w	8021df8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021c10:	2c00      	cmp	r4, #0
 8021c12:	f000 80f4 	beq.w	8021dfe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8021c16:	2900      	cmp	r1, #0
 8021c18:	eb0e 020c 	add.w	r2, lr, ip
 8021c1c:	f2c0 80ea 	blt.w	8021df4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021c20:	458c      	cmp	ip, r1
 8021c22:	f340 80e7 	ble.w	8021df4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021c26:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8021c2a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021c2e:	3101      	adds	r1, #1
 8021c30:	f100 80e8 	bmi.w	8021e04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021c34:	458c      	cmp	ip, r1
 8021c36:	f340 80e5 	ble.w	8021e04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021c3a:	2d00      	cmp	r5, #0
 8021c3c:	f000 80e4 	beq.w	8021e08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8021c40:	7852      	ldrb	r2, [r2, #1]
 8021c42:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021c46:	0e0b      	lsrs	r3, r1, #24
 8021c48:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8021c4c:	9300      	str	r3, [sp, #0]
 8021c4e:	b2a4      	uxth	r4, r4
 8021c50:	b2ab      	uxth	r3, r5
 8021c52:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8021c56:	fb03 f904 	mul.w	r9, r3, r4
 8021c5a:	fb0a f505 	mul.w	r5, sl, r5
 8021c5e:	011b      	lsls	r3, r3, #4
 8021c60:	eba3 0e09 	sub.w	lr, r3, r9
 8021c64:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8021c68:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021c6c:	0a28      	lsrs	r0, r5, #8
 8021c6e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021c72:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8021c76:	4405      	add	r5, r0
 8021c78:	0a2d      	lsrs	r5, r5, #8
 8021c7a:	fb0a f303 	mul.w	r3, sl, r3
 8021c7e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021c82:	9005      	str	r0, [sp, #20]
 8021c84:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8021c88:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021c8c:	0a1b      	lsrs	r3, r3, #8
 8021c8e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021c92:	9306      	str	r3, [sp, #24]
 8021c94:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8021c98:	fb0b f303 	mul.w	r3, fp, r3
 8021c9c:	0a1d      	lsrs	r5, r3, #8
 8021c9e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021ca2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8021ca6:	fb0b f606 	mul.w	r6, fp, r6
 8021caa:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021cae:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021cb2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021cb6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021cba:	fb08 f707 	mul.w	r7, r8, r7
 8021cbe:	441d      	add	r5, r3
 8021cc0:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021cc4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021cc8:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021ccc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021cd0:	fb08 fc0c 	mul.w	ip, r8, ip
 8021cd4:	0a1b      	lsrs	r3, r3, #8
 8021cd6:	9307      	str	r3, [sp, #28]
 8021cd8:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021cdc:	0e0b      	lsrs	r3, r1, #24
 8021cde:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021ce2:	435f      	muls	r7, r3
 8021ce4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021ce8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021cec:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021cf0:	4460      	add	r0, ip
 8021cf2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021cf6:	b2a4      	uxth	r4, r4
 8021cf8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021cfc:	0a2d      	lsrs	r5, r5, #8
 8021cfe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021d02:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021d06:	fa1f fe8e 	uxth.w	lr, lr
 8021d0a:	4359      	muls	r1, r3
 8021d0c:	1b12      	subs	r2, r2, r4
 8021d0e:	9b05      	ldr	r3, [sp, #20]
 8021d10:	44bc      	add	ip, r7
 8021d12:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021d16:	b292      	uxth	r2, r2
 8021d18:	fb05 f50e 	mul.w	r5, r5, lr
 8021d1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021d20:	fb03 5502 	mla	r5, r3, r2, r5
 8021d24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021d28:	9b06      	ldr	r3, [sp, #24]
 8021d2a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021d2e:	0a36      	lsrs	r6, r6, #8
 8021d30:	0a00      	lsrs	r0, r0, #8
 8021d32:	fb0c 5509 	mla	r5, ip, r9, r5
 8021d36:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021d3a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021d3e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021d42:	fb00 5504 	mla	r5, r0, r4, r5
 8021d46:	fb0e f606 	mul.w	r6, lr, r6
 8021d4a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021d4e:	0a09      	lsrs	r1, r1, #8
 8021d50:	9b07      	ldr	r3, [sp, #28]
 8021d52:	fb02 6000 	mla	r0, r2, r0, r6
 8021d56:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021d5a:	fb09 0001 	mla	r0, r9, r1, r0
 8021d5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021d62:	fb0e fe0b 	mul.w	lr, lr, fp
 8021d66:	fb04 0003 	mla	r0, r4, r3, r0
 8021d6a:	fb02 e20a 	mla	r2, r2, sl, lr
 8021d6e:	9b00      	ldr	r3, [sp, #0]
 8021d70:	fb04 2408 	mla	r4, r4, r8, r2
 8021d74:	fb09 4903 	mla	r9, r9, r3, r4
 8021d78:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021d7c:	9b02      	ldr	r3, [sp, #8]
 8021d7e:	9a04      	ldr	r2, [sp, #16]
 8021d80:	fa5f f989 	uxtb.w	r9, r9
 8021d84:	fb03 f109 	mul.w	r1, r3, r9
 8021d88:	9b03      	ldr	r3, [sp, #12]
 8021d8a:	0a2d      	lsrs	r5, r5, #8
 8021d8c:	0a00      	lsrs	r0, r0, #8
 8021d8e:	fb03 f309 	mul.w	r3, r3, r9
 8021d92:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8021d96:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021d9a:	4305      	orrs	r5, r0
 8021d9c:	fb02 f909 	mul.w	r9, r2, r9
 8021da0:	1c58      	adds	r0, r3, #1
 8021da2:	1c4a      	adds	r2, r1, #1
 8021da4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021da8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021dac:	0a2b      	lsrs	r3, r5, #8
 8021dae:	0c2a      	lsrs	r2, r5, #16
 8021db0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021db4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021db8:	00db      	lsls	r3, r3, #3
 8021dba:	0212      	lsls	r2, r2, #8
 8021dbc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021dc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021dc4:	4313      	orrs	r3, r2
 8021dc6:	f109 0201 	add.w	r2, r9, #1
 8021dca:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021dce:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021dd2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021dd6:	431d      	orrs	r5, r3
 8021dd8:	9b01      	ldr	r3, [sp, #4]
 8021dda:	801d      	strh	r5, [r3, #0]
 8021ddc:	b009      	add	sp, #36	; 0x24
 8021dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021de2:	2000      	movs	r0, #0
 8021de4:	e701      	b.n	8021bea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021de6:	2600      	movs	r6, #0
 8021de8:	4630      	mov	r0, r6
 8021dea:	e70b      	b.n	8021c04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021dec:	2600      	movs	r6, #0
 8021dee:	e709      	b.n	8021c04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021df0:	462e      	mov	r6, r5
 8021df2:	e707      	b.n	8021c04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021df4:	2700      	movs	r7, #0
 8021df6:	e71a      	b.n	8021c2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021df8:	2100      	movs	r1, #0
 8021dfa:	460f      	mov	r7, r1
 8021dfc:	e723      	b.n	8021c46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021dfe:	4621      	mov	r1, r4
 8021e00:	4627      	mov	r7, r4
 8021e02:	e720      	b.n	8021c46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021e04:	2100      	movs	r1, #0
 8021e06:	e71e      	b.n	8021c46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021e08:	4629      	mov	r1, r5
 8021e0a:	e71c      	b.n	8021c46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021e0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e10:	b09b      	sub	sp, #108	; 0x6c
 8021e12:	9218      	str	r2, [sp, #96]	; 0x60
 8021e14:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021e16:	9116      	str	r1, [sp, #88]	; 0x58
 8021e18:	9307      	str	r3, [sp, #28]
 8021e1a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021e1e:	9019      	str	r0, [sp, #100]	; 0x64
 8021e20:	6850      	ldr	r0, [r2, #4]
 8021e22:	6812      	ldr	r2, [r2, #0]
 8021e24:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021e26:	fb00 1303 	mla	r3, r0, r3, r1
 8021e2a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021e2e:	930a      	str	r3, [sp, #40]	; 0x28
 8021e30:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021e32:	681b      	ldr	r3, [r3, #0]
 8021e34:	930f      	str	r3, [sp, #60]	; 0x3c
 8021e36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021e38:	685e      	ldr	r6, [r3, #4]
 8021e3a:	3604      	adds	r6, #4
 8021e3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021e3e:	2b00      	cmp	r3, #0
 8021e40:	dc03      	bgt.n	8021e4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021e42:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021e44:	2b00      	cmp	r3, #0
 8021e46:	f340 8373 	ble.w	8022530 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021e4a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021e4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021e54:	1e48      	subs	r0, r1, #1
 8021e56:	1e57      	subs	r7, r2, #1
 8021e58:	9b07      	ldr	r3, [sp, #28]
 8021e5a:	2b00      	cmp	r3, #0
 8021e5c:	f340 8190 	ble.w	8022180 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021e60:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021e62:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021e66:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021e6a:	d406      	bmi.n	8021e7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021e6c:	4584      	cmp	ip, r0
 8021e6e:	da04      	bge.n	8021e7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021e70:	2b00      	cmp	r3, #0
 8021e72:	db02      	blt.n	8021e7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021e74:	42bb      	cmp	r3, r7
 8021e76:	f2c0 8184 	blt.w	8022182 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021e7a:	f11c 0c01 	adds.w	ip, ip, #1
 8021e7e:	f100 8172 	bmi.w	8022166 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021e82:	4561      	cmp	r1, ip
 8021e84:	f2c0 816f 	blt.w	8022166 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021e88:	3301      	adds	r3, #1
 8021e8a:	f100 816c 	bmi.w	8022166 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021e8e:	429a      	cmp	r2, r3
 8021e90:	f2c0 8169 	blt.w	8022166 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021e94:	9b07      	ldr	r3, [sp, #28]
 8021e96:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021e98:	9317      	str	r3, [sp, #92]	; 0x5c
 8021e9a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021e9c:	2b00      	cmp	r3, #0
 8021e9e:	f340 818e 	ble.w	80221be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021ea2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021ea4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021ea8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021eaa:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021eae:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021eb0:	141b      	asrs	r3, r3, #16
 8021eb2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021eb6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021eba:	f100 81d1 	bmi.w	8022260 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021ebe:	f101 38ff 	add.w	r8, r1, #4294967295
 8021ec2:	4543      	cmp	r3, r8
 8021ec4:	f280 81cc 	bge.w	8022260 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021ec8:	f1bc 0f00 	cmp.w	ip, #0
 8021ecc:	f2c0 81c8 	blt.w	8022260 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021ed0:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021ed4:	45c4      	cmp	ip, r8
 8021ed6:	f280 81c3 	bge.w	8022260 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021eda:	b209      	sxth	r1, r1
 8021edc:	fb0c 3301 	mla	r3, ip, r1, r3
 8021ee0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021ee2:	eb04 0803 	add.w	r8, r4, r3
 8021ee6:	5ce3      	ldrb	r3, [r4, r3]
 8021ee8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021eec:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021ef0:	2a00      	cmp	r2, #0
 8021ef2:	f000 81aa 	beq.w	802224a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021ef6:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021efa:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021efe:	940b      	str	r4, [sp, #44]	; 0x2c
 8021f00:	0e24      	lsrs	r4, r4, #24
 8021f02:	9412      	str	r4, [sp, #72]	; 0x48
 8021f04:	b178      	cbz	r0, 8021f26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021f06:	eb08 0c01 	add.w	ip, r8, r1
 8021f0a:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021f0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021f12:	9108      	str	r1, [sp, #32]
 8021f14:	0e09      	lsrs	r1, r1, #24
 8021f16:	9110      	str	r1, [sp, #64]	; 0x40
 8021f18:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021f1c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021f20:	910c      	str	r1, [sp, #48]	; 0x30
 8021f22:	0e09      	lsrs	r1, r1, #24
 8021f24:	9113      	str	r1, [sp, #76]	; 0x4c
 8021f26:	b292      	uxth	r2, r2
 8021f28:	b280      	uxth	r0, r0
 8021f2a:	fb02 f900 	mul.w	r9, r2, r0
 8021f2e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021f32:	0112      	lsls	r2, r2, #4
 8021f34:	eba2 0809 	sub.w	r8, r2, r9
 8021f38:	b280      	uxth	r0, r0
 8021f3a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021f3e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021f40:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021f42:	fa1f f888 	uxth.w	r8, r8
 8021f46:	1a12      	subs	r2, r2, r0
 8021f48:	b292      	uxth	r2, r2
 8021f4a:	fb08 f101 	mul.w	r1, r8, r1
 8021f4e:	fb02 110e 	mla	r1, r2, lr, r1
 8021f52:	fb00 1104 	mla	r1, r0, r4, r1
 8021f56:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021f58:	fb09 1104 	mla	r1, r9, r4, r1
 8021f5c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021f60:	2900      	cmp	r1, #0
 8021f62:	f000 80f5 	beq.w	8022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021f66:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021f6a:	d01b      	beq.n	8021fa4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021f6c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021f70:	fb0e fa0a 	mul.w	sl, lr, sl
 8021f74:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021f78:	fb0e fe03 	mul.w	lr, lr, r3
 8021f7c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021f80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021f84:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021f88:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021f8c:	4453      	add	r3, sl
 8021f8e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021f92:	0a1b      	lsrs	r3, r3, #8
 8021f94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f98:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021f9c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021fa0:	ea43 030c 	orr.w	r3, r3, ip
 8021fa4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021fa6:	2cff      	cmp	r4, #255	; 0xff
 8021fa8:	d021      	beq.n	8021fee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021faa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021fac:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021fb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021fb2:	fb04 fb0b 	mul.w	fp, r4, fp
 8021fb6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021fb8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021fbc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021fbe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021fc2:	fb04 fa0a 	mul.w	sl, r4, sl
 8021fc6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021fca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021fce:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021fd2:	44de      	add	lr, fp
 8021fd4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021fd8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021fdc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021fe0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021fe4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021fe8:	ea4e 040a 	orr.w	r4, lr, sl
 8021fec:	940b      	str	r4, [sp, #44]	; 0x2c
 8021fee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021ff0:	2cff      	cmp	r4, #255	; 0xff
 8021ff2:	d021      	beq.n	8022038 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021ff4:	9c08      	ldr	r4, [sp, #32]
 8021ff6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021ffa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021ffc:	fb04 fb0b 	mul.w	fp, r4, fp
 8022000:	9c08      	ldr	r4, [sp, #32]
 8022002:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022006:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022008:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802200c:	fb04 fa0a 	mul.w	sl, r4, sl
 8022010:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022014:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022018:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802201c:	44de      	add	lr, fp
 802201e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022022:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022026:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802202a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802202e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022032:	ea4e 040a 	orr.w	r4, lr, sl
 8022036:	9408      	str	r4, [sp, #32]
 8022038:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802203a:	2cff      	cmp	r4, #255	; 0xff
 802203c:	d021      	beq.n	8022082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802203e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022040:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022044:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022046:	fb04 fb0b 	mul.w	fp, r4, fp
 802204a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802204c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022050:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022052:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022056:	fb04 fa0a 	mul.w	sl, r4, sl
 802205a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802205e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022062:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022066:	44de      	add	lr, fp
 8022068:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802206c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022070:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022074:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022078:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802207c:	ea4e 040a 	orr.w	r4, lr, sl
 8022080:	940c      	str	r4, [sp, #48]	; 0x30
 8022082:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022084:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022088:	9c08      	ldr	r4, [sp, #32]
 802208a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802208e:	fb08 fc0c 	mul.w	ip, r8, ip
 8022092:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022096:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802209a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802209c:	fb00 cc0e 	mla	ip, r0, lr, ip
 80220a0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80220a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80220a6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80220aa:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80220ae:	fb08 f80e 	mul.w	r8, r8, lr
 80220b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80220b6:	fb02 8303 	mla	r3, r2, r3, r8
 80220ba:	9a08      	ldr	r2, [sp, #32]
 80220bc:	f8b7 8000 	ldrh.w	r8, [r7]
 80220c0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80220c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80220c6:	fb00 330a 	mla	r3, r0, sl, r3
 80220ca:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80220ce:	fb09 3900 	mla	r9, r9, r0, r3
 80220d2:	43c9      	mvns	r1, r1
 80220d4:	ea4f 2228 	mov.w	r2, r8, asr #8
 80220d8:	fa5f fe81 	uxtb.w	lr, r1
 80220dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220e0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80220e4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80220e8:	fb02 f20e 	mul.w	r2, r2, lr
 80220ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80220f0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80220f4:	ea4c 0c09 	orr.w	ip, ip, r9
 80220f8:	1c53      	adds	r3, r2, #1
 80220fa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80220fe:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8022102:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8022106:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802210a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802210e:	4a63      	ldr	r2, [pc, #396]	; (802229c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022110:	fb00 f00e 	mul.w	r0, r0, lr
 8022114:	b2db      	uxtb	r3, r3
 8022116:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802211a:	1c43      	adds	r3, r0, #1
 802211c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022120:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8022124:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022128:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802212c:	b2c9      	uxtb	r1, r1
 802212e:	00db      	lsls	r3, r3, #3
 8022130:	fb01 f10e 	mul.w	r1, r1, lr
 8022134:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022138:	4313      	orrs	r3, r2
 802213a:	1c4a      	adds	r2, r1, #1
 802213c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022140:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022144:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022148:	ea4c 0c03 	orr.w	ip, ip, r3
 802214c:	f8a7 c000 	strh.w	ip, [r7]
 8022150:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022152:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022154:	441a      	add	r2, r3
 8022156:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022158:	9225      	str	r2, [sp, #148]	; 0x94
 802215a:	441d      	add	r5, r3
 802215c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802215e:	3b01      	subs	r3, #1
 8022160:	3702      	adds	r7, #2
 8022162:	9317      	str	r3, [sp, #92]	; 0x5c
 8022164:	e699      	b.n	8021e9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022166:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022168:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802216a:	441c      	add	r4, r3
 802216c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802216e:	9425      	str	r4, [sp, #148]	; 0x94
 8022170:	441d      	add	r5, r3
 8022172:	9b07      	ldr	r3, [sp, #28]
 8022174:	3b01      	subs	r3, #1
 8022176:	9307      	str	r3, [sp, #28]
 8022178:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802217a:	3302      	adds	r3, #2
 802217c:	930a      	str	r3, [sp, #40]	; 0x28
 802217e:	e66b      	b.n	8021e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022180:	d024      	beq.n	80221cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8022182:	9b07      	ldr	r3, [sp, #28]
 8022184:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022186:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022188:	3b01      	subs	r3, #1
 802218a:	fb00 4003 	mla	r0, r0, r3, r4
 802218e:	1400      	asrs	r0, r0, #16
 8022190:	f53f ae80 	bmi.w	8021e94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022194:	3901      	subs	r1, #1
 8022196:	4288      	cmp	r0, r1
 8022198:	f6bf ae7c 	bge.w	8021e94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802219c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802219e:	fb01 5303 	mla	r3, r1, r3, r5
 80221a2:	141b      	asrs	r3, r3, #16
 80221a4:	f53f ae76 	bmi.w	8021e94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80221a8:	3a01      	subs	r2, #1
 80221aa:	4293      	cmp	r3, r2
 80221ac:	f6bf ae72 	bge.w	8021e94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80221b0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80221b4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80221b8:	f1bb 0f00 	cmp.w	fp, #0
 80221bc:	dc70      	bgt.n	80222a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80221be:	9b07      	ldr	r3, [sp, #28]
 80221c0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80221c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80221c6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80221ca:	930a      	str	r3, [sp, #40]	; 0x28
 80221cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80221ce:	2b00      	cmp	r3, #0
 80221d0:	f340 81ae 	ble.w	8022530 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80221d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80221d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80221dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80221e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80221e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80221e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80221ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80221ee:	eef0 6a62 	vmov.f32	s13, s5
 80221f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80221f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80221fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80221fe:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8022202:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022206:	eef0 6a43 	vmov.f32	s13, s6
 802220a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802220e:	ee12 2a90 	vmov	r2, s5
 8022212:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022216:	fb92 f3f3 	sdiv	r3, r2, r3
 802221a:	ee13 2a10 	vmov	r2, s6
 802221e:	9327      	str	r3, [sp, #156]	; 0x9c
 8022220:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022222:	fb92 f3f3 	sdiv	r3, r2, r3
 8022226:	9328      	str	r3, [sp, #160]	; 0xa0
 8022228:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802222a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802222c:	3b01      	subs	r3, #1
 802222e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022232:	9316      	str	r3, [sp, #88]	; 0x58
 8022234:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022236:	bf08      	it	eq
 8022238:	4613      	moveq	r3, r2
 802223a:	ee16 5a90 	vmov	r5, s13
 802223e:	9307      	str	r3, [sp, #28]
 8022240:	eeb0 3a67 	vmov.f32	s6, s15
 8022244:	eef0 2a47 	vmov.f32	s5, s14
 8022248:	e5f8      	b.n	8021e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802224a:	2800      	cmp	r0, #0
 802224c:	f43f ae6b 	beq.w	8021f26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022250:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022254:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022258:	9108      	str	r1, [sp, #32]
 802225a:	0e09      	lsrs	r1, r1, #24
 802225c:	9110      	str	r1, [sp, #64]	; 0x40
 802225e:	e662      	b.n	8021f26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022260:	f113 0801 	adds.w	r8, r3, #1
 8022264:	f53f af74 	bmi.w	8022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022268:	4541      	cmp	r1, r8
 802226a:	f6ff af71 	blt.w	8022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802226e:	f11c 0801 	adds.w	r8, ip, #1
 8022272:	f53f af6d 	bmi.w	8022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022276:	45c6      	cmp	lr, r8
 8022278:	f6ff af6a 	blt.w	8022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802227c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022280:	b209      	sxth	r1, r1
 8022282:	fa0f f38e 	sxth.w	r3, lr
 8022286:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802228a:	9301      	str	r3, [sp, #4]
 802228c:	9100      	str	r1, [sp, #0]
 802228e:	4633      	mov	r3, r6
 8022290:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022292:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022294:	4639      	mov	r1, r7
 8022296:	f7ff fc7a 	bl	8021b8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802229a:	e759      	b.n	8022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802229c:	fffff800 	.word	0xfffff800
 80222a0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80222a2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80222a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80222a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80222aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80222ae:	1427      	asrs	r7, r4, #16
 80222b0:	142b      	asrs	r3, r5, #16
 80222b2:	fb01 7303 	mla	r3, r1, r3, r7
 80222b6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80222b8:	18e7      	adds	r7, r4, r3
 80222ba:	5ce3      	ldrb	r3, [r4, r3]
 80222bc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80222c0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80222c4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80222c8:	2a00      	cmp	r2, #0
 80222ca:	f000 8127 	beq.w	802251c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80222ce:	f897 e001 	ldrb.w	lr, [r7, #1]
 80222d2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80222d6:	940d      	str	r4, [sp, #52]	; 0x34
 80222d8:	0e24      	lsrs	r4, r4, #24
 80222da:	9414      	str	r4, [sp, #80]	; 0x50
 80222dc:	b170      	cbz	r0, 80222fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80222de:	eb07 0e01 	add.w	lr, r7, r1
 80222e2:	5c79      	ldrb	r1, [r7, r1]
 80222e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80222e8:	9109      	str	r1, [sp, #36]	; 0x24
 80222ea:	0e09      	lsrs	r1, r1, #24
 80222ec:	9111      	str	r1, [sp, #68]	; 0x44
 80222ee:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80222f2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80222f6:	910e      	str	r1, [sp, #56]	; 0x38
 80222f8:	0e09      	lsrs	r1, r1, #24
 80222fa:	9115      	str	r1, [sp, #84]	; 0x54
 80222fc:	b292      	uxth	r2, r2
 80222fe:	b280      	uxth	r0, r0
 8022300:	fb02 f800 	mul.w	r8, r2, r0
 8022304:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022308:	0112      	lsls	r2, r2, #4
 802230a:	eba2 0e08 	sub.w	lr, r2, r8
 802230e:	b280      	uxth	r0, r0
 8022310:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022314:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022316:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022318:	fa1f fe8e 	uxth.w	lr, lr
 802231c:	1a09      	subs	r1, r1, r0
 802231e:	b289      	uxth	r1, r1
 8022320:	fb0e f202 	mul.w	r2, lr, r2
 8022324:	fb01 220c 	mla	r2, r1, ip, r2
 8022328:	fb00 2204 	mla	r2, r0, r4, r2
 802232c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802232e:	fb08 2204 	mla	r2, r8, r4, r2
 8022332:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022336:	2a00      	cmp	r2, #0
 8022338:	f000 80e5 	beq.w	8022506 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802233c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022340:	d019      	beq.n	8022376 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8022342:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022346:	fb0c fa0a 	mul.w	sl, ip, sl
 802234a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802234e:	fb0c fc03 	mul.w	ip, ip, r3
 8022352:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022356:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802235a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802235e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022362:	4453      	add	r3, sl
 8022364:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022368:	0a1b      	lsrs	r3, r3, #8
 802236a:	0a3f      	lsrs	r7, r7, #8
 802236c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022370:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022374:	433b      	orrs	r3, r7
 8022376:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022378:	2cff      	cmp	r4, #255	; 0xff
 802237a:	d020      	beq.n	80223be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 802237c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802237e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022382:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022384:	4367      	muls	r7, r4
 8022386:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022388:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802238c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802238e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022392:	fb04 fa0a 	mul.w	sl, r4, sl
 8022396:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802239a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802239e:	44bc      	add	ip, r7
 80223a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80223a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80223a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223b8:	ea4c 040a 	orr.w	r4, ip, sl
 80223bc:	940d      	str	r4, [sp, #52]	; 0x34
 80223be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80223c0:	2cff      	cmp	r4, #255	; 0xff
 80223c2:	d020      	beq.n	8022406 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80223c4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80223c6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80223ca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80223cc:	4367      	muls	r7, r4
 80223ce:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80223d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80223d4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80223d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80223da:	fb04 fa0a 	mul.w	sl, r4, sl
 80223de:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80223e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223e6:	44bc      	add	ip, r7
 80223e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80223ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80223f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022400:	ea4c 040a 	orr.w	r4, ip, sl
 8022404:	9409      	str	r4, [sp, #36]	; 0x24
 8022406:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022408:	2cff      	cmp	r4, #255	; 0xff
 802240a:	d020      	beq.n	802244e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 802240c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802240e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022412:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022414:	4367      	muls	r7, r4
 8022416:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022418:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802241c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802241e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022422:	fb04 fa0a 	mul.w	sl, r4, sl
 8022426:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802242a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802242e:	44bc      	add	ip, r7
 8022430:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022434:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022438:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802243c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022440:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022444:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022448:	ea4c 040a 	orr.w	r4, ip, sl
 802244c:	940e      	str	r4, [sp, #56]	; 0x38
 802244e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022450:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022454:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022456:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802245a:	fb0e f707 	mul.w	r7, lr, r7
 802245e:	fb01 770c 	mla	r7, r1, ip, r7
 8022462:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022466:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022468:	fb00 770c 	mla	r7, r0, ip, r7
 802246c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022470:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022472:	fb08 770c 	mla	r7, r8, ip, r7
 8022476:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802247a:	fb0e fe0c 	mul.w	lr, lr, ip
 802247e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022482:	fb01 e303 	mla	r3, r1, r3, lr
 8022486:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022488:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802248c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802248e:	fb00 330a 	mla	r3, r0, sl, r3
 8022492:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8022496:	fb08 3c0c 	mla	ip, r8, ip, r3
 802249a:	f8b9 3000 	ldrh.w	r3, [r9]
 802249e:	43d2      	mvns	r2, r2
 80224a0:	1218      	asrs	r0, r3, #8
 80224a2:	b2d2      	uxtb	r2, r2
 80224a4:	10d9      	asrs	r1, r3, #3
 80224a6:	0a3f      	lsrs	r7, r7, #8
 80224a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224ac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80224b0:	00db      	lsls	r3, r3, #3
 80224b2:	4350      	muls	r0, r2
 80224b4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80224b8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80224bc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80224c0:	b2db      	uxtb	r3, r3
 80224c2:	ea47 070c 	orr.w	r7, r7, ip
 80224c6:	4351      	muls	r1, r2
 80224c8:	4353      	muls	r3, r2
 80224ca:	1c42      	adds	r2, r0, #1
 80224cc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80224d0:	0c3a      	lsrs	r2, r7, #16
 80224d2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80224d6:	4a18      	ldr	r2, [pc, #96]	; (8022538 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80224d8:	b2c0      	uxtb	r0, r0
 80224da:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80224de:	1c4a      	adds	r2, r1, #1
 80224e0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80224e4:	0a3a      	lsrs	r2, r7, #8
 80224e6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80224ea:	00c9      	lsls	r1, r1, #3
 80224ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80224f0:	4301      	orrs	r1, r0
 80224f2:	1c58      	adds	r0, r3, #1
 80224f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80224f8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80224fc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022500:	4308      	orrs	r0, r1
 8022502:	f8a9 0000 	strh.w	r0, [r9]
 8022506:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022508:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802250a:	441a      	add	r2, r3
 802250c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802250e:	9225      	str	r2, [sp, #148]	; 0x94
 8022510:	f109 0902 	add.w	r9, r9, #2
 8022514:	441d      	add	r5, r3
 8022516:	f10b 3bff 	add.w	fp, fp, #4294967295
 802251a:	e64d      	b.n	80221b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 802251c:	2800      	cmp	r0, #0
 802251e:	f43f aeed 	beq.w	80222fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022522:	5c79      	ldrb	r1, [r7, r1]
 8022524:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022528:	9109      	str	r1, [sp, #36]	; 0x24
 802252a:	0e09      	lsrs	r1, r1, #24
 802252c:	9111      	str	r1, [sp, #68]	; 0x44
 802252e:	e6e5      	b.n	80222fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022530:	b01b      	add	sp, #108	; 0x6c
 8022532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022536:	bf00      	nop
 8022538:	fffff800 	.word	0xfffff800

0802253c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802253c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022540:	b085      	sub	sp, #20
 8022542:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022546:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802254a:	9103      	str	r1, [sp, #12]
 802254c:	fb00 7406 	mla	r4, r0, r6, r7
 8022550:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022554:	2800      	cmp	r0, #0
 8022556:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802255a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802255e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022562:	9501      	str	r5, [sp, #4]
 8022564:	eb03 0904 	add.w	r9, r3, r4
 8022568:	f2c0 8150 	blt.w	802280c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802256c:	4583      	cmp	fp, r0
 802256e:	f340 814d 	ble.w	802280c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022572:	2f00      	cmp	r7, #0
 8022574:	f2c0 8146 	blt.w	8022804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022578:	42be      	cmp	r6, r7
 802257a:	f340 8143 	ble.w	8022804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802257e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022582:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8022586:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802258a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802258e:	4355      	muls	r5, r2
 8022590:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022594:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022598:	fb0c f203 	mul.w	r2, ip, r3
 802259c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80225a0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80225a4:	441d      	add	r5, r3
 80225a6:	f102 0320 	add.w	r3, r2, #32
 80225aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80225ae:	0a1b      	lsrs	r3, r3, #8
 80225b0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80225b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80225b8:	431c      	orrs	r4, r3
 80225ba:	1c7b      	adds	r3, r7, #1
 80225bc:	f100 812b 	bmi.w	8022816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80225c0:	429e      	cmp	r6, r3
 80225c2:	f340 8128 	ble.w	8022816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80225c6:	2900      	cmp	r1, #0
 80225c8:	f000 8128 	beq.w	802281c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80225cc:	9a01      	ldr	r2, [sp, #4]
 80225ce:	f899 3001 	ldrb.w	r3, [r9, #1]
 80225d2:	8855      	ldrh	r5, [r2, #2]
 80225d4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80225d8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80225dc:	fb08 f802 	mul.w	r8, r8, r2
 80225e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80225e4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80225e8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80225ec:	435d      	muls	r5, r3
 80225ee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80225f2:	44d0      	add	r8, sl
 80225f4:	f105 0a20 	add.w	sl, r5, #32
 80225f8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80225fc:	0a2d      	lsrs	r5, r5, #8
 80225fe:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022602:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022606:	432a      	orrs	r2, r5
 8022608:	3001      	adds	r0, #1
 802260a:	f100 810d 	bmi.w	8022828 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802260e:	4583      	cmp	fp, r0
 8022610:	f340 810a 	ble.w	8022828 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022614:	f1be 0f00 	cmp.w	lr, #0
 8022618:	f000 810b 	beq.w	8022832 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802261c:	2f00      	cmp	r7, #0
 802261e:	f2c0 8100 	blt.w	8022822 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022622:	42be      	cmp	r6, r7
 8022624:	f340 80fd 	ble.w	8022822 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022628:	9801      	ldr	r0, [sp, #4]
 802262a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802262e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022632:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022636:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802263a:	fb0a fa00 	mul.w	sl, sl, r0
 802263e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022642:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022646:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802264a:	fb05 f808 	mul.w	r8, r5, r8
 802264e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022652:	4482      	add	sl, r0
 8022654:	f108 0020 	add.w	r0, r8, #32
 8022658:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802265c:	0a00      	lsrs	r0, r0, #8
 802265e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022662:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022666:	ea4b 0b00 	orr.w	fp, fp, r0
 802266a:	3701      	adds	r7, #1
 802266c:	f100 80e6 	bmi.w	802283c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022670:	42be      	cmp	r6, r7
 8022672:	f340 80e3 	ble.w	802283c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022676:	2900      	cmp	r1, #0
 8022678:	f000 80e3 	beq.w	8022842 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802267c:	3601      	adds	r6, #1
 802267e:	9801      	ldr	r0, [sp, #4]
 8022680:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022684:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022688:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802268c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022690:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022694:	fb09 f906 	mul.w	r9, r9, r6
 8022698:	fb07 f800 	mul.w	r8, r7, r0
 802269c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80226a0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80226a4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80226a8:	44d1      	add	r9, sl
 80226aa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80226ae:	f108 0020 	add.w	r0, r8, #32
 80226b2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80226b6:	0a00      	lsrs	r0, r0, #8
 80226b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226bc:	4330      	orrs	r0, r6
 80226be:	b28e      	uxth	r6, r1
 80226c0:	fa1f f98e 	uxth.w	r9, lr
 80226c4:	fb06 f809 	mul.w	r8, r6, r9
 80226c8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80226cc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80226d0:	0136      	lsls	r6, r6, #4
 80226d2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226d6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80226da:	9601      	str	r6, [sp, #4]
 80226dc:	ea4a 0404 	orr.w	r4, sl, r4
 80226e0:	fa1f f689 	uxth.w	r6, r9
 80226e4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80226e8:	fb11 f90e 	smulbb	r9, r1, lr
 80226ec:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80226f0:	9602      	str	r6, [sp, #8]
 80226f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226f6:	4626      	mov	r6, r4
 80226f8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80226fc:	f1ce 0410 	rsb	r4, lr, #16
 8022700:	1a64      	subs	r4, r4, r1
 8022702:	ea4a 0202 	orr.w	r2, sl, r2
 8022706:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802270a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802270e:	434a      	muls	r2, r1
 8022710:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022714:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022718:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802271c:	fb04 2406 	mla	r4, r4, r6, r2
 8022720:	ea4a 0000 	orr.w	r0, sl, r0
 8022724:	fb09 4200 	mla	r2, r9, r0, r4
 8022728:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802272c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022730:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022734:	ea44 0b0b 	orr.w	fp, r4, fp
 8022738:	9c01      	ldr	r4, [sp, #4]
 802273a:	9e02      	ldr	r6, [sp, #8]
 802273c:	9903      	ldr	r1, [sp, #12]
 802273e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8022742:	1ba4      	subs	r4, r4, r6
 8022744:	9e01      	ldr	r6, [sp, #4]
 8022746:	8808      	ldrh	r0, [r1, #0]
 8022748:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 802274c:	eba6 0608 	sub.w	r6, r6, r8
 8022750:	b2b6      	uxth	r6, r6
 8022752:	b2a4      	uxth	r4, r4
 8022754:	4373      	muls	r3, r6
 8022756:	fb0c 3304 	mla	r3, ip, r4, r3
 802275a:	9c02      	ldr	r4, [sp, #8]
 802275c:	fb04 3505 	mla	r5, r4, r5, r3
 8022760:	fb08 5707 	mla	r7, r8, r7, r5
 8022764:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022768:	b289      	uxth	r1, r1
 802276a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802276e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022772:	434f      	muls	r7, r1
 8022774:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022778:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802277c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022780:	1c7b      	adds	r3, r7, #1
 8022782:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022786:	ea42 0e0e 	orr.w	lr, r2, lr
 802278a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802278e:	fa1f f28e 	uxth.w	r2, lr
 8022792:	1203      	asrs	r3, r0, #8
 8022794:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8022798:	b2ff      	uxtb	r7, r7
 802279a:	1215      	asrs	r5, r2, #8
 802279c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80227a0:	fb13 f307 	smulbb	r3, r3, r7
 80227a4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80227a8:	fb05 3501 	mla	r5, r5, r1, r3
 80227ac:	10c3      	asrs	r3, r0, #3
 80227ae:	10d4      	asrs	r4, r2, #3
 80227b0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80227b4:	fb13 f307 	smulbb	r3, r3, r7
 80227b8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80227bc:	fb04 3401 	mla	r4, r4, r1, r3
 80227c0:	00c3      	lsls	r3, r0, #3
 80227c2:	00d2      	lsls	r2, r2, #3
 80227c4:	b2db      	uxtb	r3, r3
 80227c6:	fb13 f307 	smulbb	r3, r3, r7
 80227ca:	b2d2      	uxtb	r2, r2
 80227cc:	fb02 3101 	mla	r1, r2, r1, r3
 80227d0:	b2ad      	uxth	r5, r5
 80227d2:	b289      	uxth	r1, r1
 80227d4:	b2a4      	uxth	r4, r4
 80227d6:	1c6b      	adds	r3, r5, #1
 80227d8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80227dc:	1c62      	adds	r2, r4, #1
 80227de:	1c4b      	adds	r3, r1, #1
 80227e0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80227e4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80227e8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80227ec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80227f0:	0964      	lsrs	r4, r4, #5
 80227f2:	432b      	orrs	r3, r5
 80227f4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80227f8:	9a03      	ldr	r2, [sp, #12]
 80227fa:	4323      	orrs	r3, r4
 80227fc:	8013      	strh	r3, [r2, #0]
 80227fe:	b005      	add	sp, #20
 8022800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022804:	f04f 0c00 	mov.w	ip, #0
 8022808:	4664      	mov	r4, ip
 802280a:	e6d6      	b.n	80225ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802280c:	2300      	movs	r3, #0
 802280e:	469c      	mov	ip, r3
 8022810:	461a      	mov	r2, r3
 8022812:	461c      	mov	r4, r3
 8022814:	e6f8      	b.n	8022608 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022816:	2300      	movs	r3, #0
 8022818:	461a      	mov	r2, r3
 802281a:	e6f5      	b.n	8022608 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802281c:	460b      	mov	r3, r1
 802281e:	460a      	mov	r2, r1
 8022820:	e6f2      	b.n	8022608 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022822:	2500      	movs	r5, #0
 8022824:	46ab      	mov	fp, r5
 8022826:	e720      	b.n	802266a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8022828:	2700      	movs	r7, #0
 802282a:	463d      	mov	r5, r7
 802282c:	4638      	mov	r0, r7
 802282e:	46bb      	mov	fp, r7
 8022830:	e745      	b.n	80226be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022832:	4677      	mov	r7, lr
 8022834:	4675      	mov	r5, lr
 8022836:	4670      	mov	r0, lr
 8022838:	46f3      	mov	fp, lr
 802283a:	e740      	b.n	80226be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802283c:	2700      	movs	r7, #0
 802283e:	4638      	mov	r0, r7
 8022840:	e73d      	b.n	80226be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022842:	460f      	mov	r7, r1
 8022844:	4608      	mov	r0, r1
 8022846:	e73a      	b.n	80226be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08022848 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802284c:	b097      	sub	sp, #92	; 0x5c
 802284e:	9214      	str	r2, [sp, #80]	; 0x50
 8022850:	9308      	str	r3, [sp, #32]
 8022852:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022854:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8022858:	9312      	str	r3, [sp, #72]	; 0x48
 802285a:	9111      	str	r1, [sp, #68]	; 0x44
 802285c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022860:	9015      	str	r0, [sp, #84]	; 0x54
 8022862:	6850      	ldr	r0, [r2, #4]
 8022864:	6812      	ldr	r2, [r2, #0]
 8022866:	fb00 1303 	mla	r3, r0, r3, r1
 802286a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802286e:	9309      	str	r3, [sp, #36]	; 0x24
 8022870:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022872:	681b      	ldr	r3, [r3, #0]
 8022874:	930b      	str	r3, [sp, #44]	; 0x2c
 8022876:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022878:	685b      	ldr	r3, [r3, #4]
 802287a:	930c      	str	r3, [sp, #48]	; 0x30
 802287c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022880:	930a      	str	r3, [sp, #40]	; 0x28
 8022882:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022884:	2b00      	cmp	r3, #0
 8022886:	dc03      	bgt.n	8022890 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022888:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802288a:	2b00      	cmp	r3, #0
 802288c:	f340 83cb 	ble.w	8023026 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022890:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022892:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022896:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802289a:	1e48      	subs	r0, r1, #1
 802289c:	1e55      	subs	r5, r2, #1
 802289e:	9b08      	ldr	r3, [sp, #32]
 80228a0:	2b00      	cmp	r3, #0
 80228a2:	f340 81a3 	ble.w	8022bec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80228a6:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80228a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80228aa:	1436      	asrs	r6, r6, #16
 80228ac:	ea4f 4323 	mov.w	r3, r3, asr #16
 80228b0:	d406      	bmi.n	80228c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80228b2:	4286      	cmp	r6, r0
 80228b4:	da04      	bge.n	80228c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80228b6:	2b00      	cmp	r3, #0
 80228b8:	db02      	blt.n	80228c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80228ba:	42ab      	cmp	r3, r5
 80228bc:	f2c0 8197 	blt.w	8022bee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80228c0:	3601      	adds	r6, #1
 80228c2:	f100 8184 	bmi.w	8022bce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80228c6:	42b1      	cmp	r1, r6
 80228c8:	f2c0 8181 	blt.w	8022bce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80228cc:	3301      	adds	r3, #1
 80228ce:	f100 817e 	bmi.w	8022bce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80228d2:	429a      	cmp	r2, r3
 80228d4:	f2c0 817b 	blt.w	8022bce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80228d8:	9b08      	ldr	r3, [sp, #32]
 80228da:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80228dc:	9313      	str	r3, [sp, #76]	; 0x4c
 80228de:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80228e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80228e4:	2b00      	cmp	r3, #0
 80228e6:	f340 81a4 	ble.w	8022c32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80228ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80228ec:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80228ee:	1418      	asrs	r0, r3, #16
 80228f0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80228f2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80228f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80228f8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80228fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228fe:	142d      	asrs	r5, r5, #16
 8022900:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022904:	f100 81f8 	bmi.w	8022cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022908:	f102 3eff 	add.w	lr, r2, #4294967295
 802290c:	4575      	cmp	r5, lr
 802290e:	f280 81f3 	bge.w	8022cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022912:	2800      	cmp	r0, #0
 8022914:	f2c0 81f0 	blt.w	8022cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022918:	f103 3eff 	add.w	lr, r3, #4294967295
 802291c:	4570      	cmp	r0, lr
 802291e:	f280 81eb 	bge.w	8022cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022922:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022924:	b212      	sxth	r2, r2
 8022926:	fb00 5002 	mla	r0, r0, r2, r5
 802292a:	fa1f fe81 	uxth.w	lr, r1
 802292e:	eb03 0a00 	add.w	sl, r3, r0
 8022932:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8022936:	f813 9000 	ldrb.w	r9, [r3, r0]
 802293a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802293e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022942:	b29b      	uxth	r3, r3
 8022944:	f1bc 0f00 	cmp.w	ip, #0
 8022948:	f000 81b9 	beq.w	8022cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802294c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022950:	940d      	str	r4, [sp, #52]	; 0x34
 8022952:	eb0a 0b02 	add.w	fp, sl, r2
 8022956:	fa1f fa8c 	uxth.w	sl, ip
 802295a:	fb0a fe0e 	mul.w	lr, sl, lr
 802295e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022962:	fa1f fa8a 	uxth.w	sl, sl
 8022966:	eba5 050e 	sub.w	r5, r5, lr
 802296a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802296e:	940e      	str	r4, [sp, #56]	; 0x38
 8022970:	eba3 030a 	sub.w	r3, r3, sl
 8022974:	b2ad      	uxth	r5, r5
 8022976:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022978:	b29b      	uxth	r3, r3
 802297a:	fb08 f505 	mul.w	r5, r8, r5
 802297e:	fb09 5303 	mla	r3, r9, r3, r5
 8022982:	fb0a 3304 	mla	r3, sl, r4, r3
 8022986:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022988:	fb0e 3304 	mla	r3, lr, r4, r3
 802298c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022990:	2b00      	cmp	r3, #0
 8022992:	f000 810f 	beq.w	8022bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022996:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022998:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802299c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80229a0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80229a4:	f000 8190 	beq.w	8022cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80229a8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80229ac:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80229b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80229b4:	fb09 f000 	mul.w	r0, r9, r0
 80229b8:	fb0a fe0e 	mul.w	lr, sl, lr
 80229bc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80229c0:	f100 0b20 	add.w	fp, r0, #32
 80229c4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80229c8:	44ce      	add	lr, r9
 80229ca:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80229ce:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80229d2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80229d6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80229da:	ea4e 0909 	orr.w	r9, lr, r9
 80229de:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80229e2:	8868      	ldrh	r0, [r5, #2]
 80229e4:	d019      	beq.n	8022a1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80229e6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80229ea:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80229ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80229f2:	fb08 f800 	mul.w	r8, r8, r0
 80229f6:	fb0a fe0e 	mul.w	lr, sl, lr
 80229fa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80229fe:	f108 0b20 	add.w	fp, r8, #32
 8022a02:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022a06:	4486      	add	lr, r0
 8022a08:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022a0c:	0a00      	lsrs	r0, r0, #8
 8022a0e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022a12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022a16:	ea4e 0000 	orr.w	r0, lr, r0
 8022a1a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022a1e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022a22:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022a26:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022a2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022a2e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022a32:	ea4e 0909 	orr.w	r9, lr, r9
 8022a36:	ea4a 0000 	orr.w	r0, sl, r0
 8022a3a:	f1bc 0f00 	cmp.w	ip, #0
 8022a3e:	f000 8145 	beq.w	8022ccc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8022a42:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8022a46:	3a01      	subs	r2, #1
 8022a48:	0052      	lsls	r2, r2, #1
 8022a4a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022a4c:	3202      	adds	r2, #2
 8022a4e:	2cff      	cmp	r4, #255	; 0xff
 8022a50:	eb05 0e02 	add.w	lr, r5, r2
 8022a54:	5aaa      	ldrh	r2, [r5, r2]
 8022a56:	d018      	beq.n	8022a8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8022a58:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022a5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a60:	fb04 fa02 	mul.w	sl, r4, r2
 8022a64:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022a68:	fb08 f805 	mul.w	r8, r8, r5
 8022a6c:	f10a 0520 	add.w	r5, sl, #32
 8022a70:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022a74:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022a78:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022a7c:	4442      	add	r2, r8
 8022a7e:	0a2d      	lsrs	r5, r5, #8
 8022a80:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022a84:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022a88:	432a      	orrs	r2, r5
 8022a8a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022a8c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022a90:	2cff      	cmp	r4, #255	; 0xff
 8022a92:	d01a      	beq.n	8022aca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8022a94:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022a98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022a9c:	fb04 fa05 	mul.w	sl, r4, r5
 8022aa0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022aa4:	fb08 f80e 	mul.w	r8, r8, lr
 8022aa8:	f10a 0e20 	add.w	lr, sl, #32
 8022aac:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022ab0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022ab4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022ab8:	4445      	add	r5, r8
 8022aba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022abe:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022ac2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022ac6:	ea45 050e 	orr.w	r5, r5, lr
 8022aca:	fb1c fe01 	smulbb	lr, ip, r1
 8022ace:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022ad2:	f1cc 0810 	rsb	r8, ip, #16
 8022ad6:	eba8 0801 	sub.w	r8, r8, r1
 8022ada:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022ade:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022ae2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022ae6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022aea:	4341      	muls	r1, r0
 8022aec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022af0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022af4:	ea4a 0202 	orr.w	r2, sl, r2
 8022af8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022afc:	fb09 1108 	mla	r1, r9, r8, r1
 8022b00:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022b04:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022b08:	fb0c 1102 	mla	r1, ip, r2, r1
 8022b0c:	ea4b 0505 	orr.w	r5, fp, r5
 8022b10:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022b14:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022b18:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022b1c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022b20:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022b24:	ea42 0e0e 	orr.w	lr, r2, lr
 8022b28:	fa1f f28e 	uxth.w	r2, lr
 8022b2c:	2bff      	cmp	r3, #255	; 0xff
 8022b2e:	d103      	bne.n	8022b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022b30:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022b32:	29ff      	cmp	r1, #255	; 0xff
 8022b34:	f000 80de 	beq.w	8022cf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8022b38:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022b3a:	8838      	ldrh	r0, [r7, #0]
 8022b3c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022b3e:	434b      	muls	r3, r1
 8022b40:	f103 0c01 	add.w	ip, r3, #1
 8022b44:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8022b48:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022b4c:	fa5f fc83 	uxtb.w	ip, r3
 8022b50:	1203      	asrs	r3, r0, #8
 8022b52:	1215      	asrs	r5, r2, #8
 8022b54:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022b58:	fb13 f30c 	smulbb	r3, r3, ip
 8022b5c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022b60:	fb05 3501 	mla	r5, r5, r1, r3
 8022b64:	10c3      	asrs	r3, r0, #3
 8022b66:	10d1      	asrs	r1, r2, #3
 8022b68:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022b6c:	fb13 f30c 	smulbb	r3, r3, ip
 8022b70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022b74:	fb01 3104 	mla	r1, r1, r4, r3
 8022b78:	00c3      	lsls	r3, r0, #3
 8022b7a:	00d2      	lsls	r2, r2, #3
 8022b7c:	b2db      	uxtb	r3, r3
 8022b7e:	b2d2      	uxtb	r2, r2
 8022b80:	fb13 f30c 	smulbb	r3, r3, ip
 8022b84:	b2ad      	uxth	r5, r5
 8022b86:	fb02 3304 	mla	r3, r2, r4, r3
 8022b8a:	b29a      	uxth	r2, r3
 8022b8c:	1c6b      	adds	r3, r5, #1
 8022b8e:	b289      	uxth	r1, r1
 8022b90:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022b94:	1c53      	adds	r3, r2, #1
 8022b96:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022b9a:	1c4a      	adds	r2, r1, #1
 8022b9c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022ba0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022ba4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022ba8:	0949      	lsrs	r1, r1, #5
 8022baa:	432b      	orrs	r3, r5
 8022bac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022bb0:	430b      	orrs	r3, r1
 8022bb2:	803b      	strh	r3, [r7, #0]
 8022bb4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022bb6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022bb8:	4413      	add	r3, r2
 8022bba:	9321      	str	r3, [sp, #132]	; 0x84
 8022bbc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022bbe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bc0:	441a      	add	r2, r3
 8022bc2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022bc4:	9222      	str	r2, [sp, #136]	; 0x88
 8022bc6:	3b01      	subs	r3, #1
 8022bc8:	3702      	adds	r7, #2
 8022bca:	9313      	str	r3, [sp, #76]	; 0x4c
 8022bcc:	e689      	b.n	80228e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022bce:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022bd0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8022bd2:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8022bd4:	4433      	add	r3, r6
 8022bd6:	9321      	str	r3, [sp, #132]	; 0x84
 8022bd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bda:	441c      	add	r4, r3
 8022bdc:	9b08      	ldr	r3, [sp, #32]
 8022bde:	9422      	str	r4, [sp, #136]	; 0x88
 8022be0:	3b01      	subs	r3, #1
 8022be2:	9308      	str	r3, [sp, #32]
 8022be4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022be6:	3302      	adds	r3, #2
 8022be8:	9309      	str	r3, [sp, #36]	; 0x24
 8022bea:	e658      	b.n	802289e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022bec:	d028      	beq.n	8022c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022bee:	9b08      	ldr	r3, [sp, #32]
 8022bf0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022bf2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022bf4:	3b01      	subs	r3, #1
 8022bf6:	fb00 5003 	mla	r0, r0, r3, r5
 8022bfa:	1400      	asrs	r0, r0, #16
 8022bfc:	f53f ae6c 	bmi.w	80228d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c00:	3901      	subs	r1, #1
 8022c02:	4288      	cmp	r0, r1
 8022c04:	f6bf ae68 	bge.w	80228d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c08:	9924      	ldr	r1, [sp, #144]	; 0x90
 8022c0a:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022c0c:	fb01 0303 	mla	r3, r1, r3, r0
 8022c10:	141b      	asrs	r3, r3, #16
 8022c12:	f53f ae61 	bmi.w	80228d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c16:	3a01      	subs	r2, #1
 8022c18:	4293      	cmp	r3, r2
 8022c1a:	f6bf ae5d 	bge.w	80228d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c1e:	9b08      	ldr	r3, [sp, #32]
 8022c20:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022c24:	9313      	str	r3, [sp, #76]	; 0x4c
 8022c26:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022c2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022c2c:	2b00      	cmp	r3, #0
 8022c2e:	f300 8082 	bgt.w	8022d36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022c32:	9b08      	ldr	r3, [sp, #32]
 8022c34:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022c38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c3a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022c3e:	9309      	str	r3, [sp, #36]	; 0x24
 8022c40:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022c42:	2b00      	cmp	r3, #0
 8022c44:	f340 81ef 	ble.w	8023026 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022c48:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022c4c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022c50:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022c54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022c5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022c5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022c62:	eef0 6a62 	vmov.f32	s13, s5
 8022c66:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022c6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022c72:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8022c76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022c7a:	eef0 6a43 	vmov.f32	s13, s6
 8022c7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022c82:	ee12 2a90 	vmov	r2, s5
 8022c86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022c8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c8e:	ee13 2a10 	vmov	r2, s6
 8022c92:	9323      	str	r3, [sp, #140]	; 0x8c
 8022c94:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c96:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c9a:	9324      	str	r3, [sp, #144]	; 0x90
 8022c9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022c9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022ca0:	3b01      	subs	r3, #1
 8022ca2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ca6:	9311      	str	r3, [sp, #68]	; 0x44
 8022ca8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022caa:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022cae:	bf08      	it	eq
 8022cb0:	4613      	moveq	r3, r2
 8022cb2:	9308      	str	r3, [sp, #32]
 8022cb4:	eeb0 3a67 	vmov.f32	s6, s15
 8022cb8:	eef0 2a47 	vmov.f32	s5, s14
 8022cbc:	e5e1      	b.n	8022882 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022cbe:	fb08 f505 	mul.w	r5, r8, r5
 8022cc2:	fb09 5303 	mla	r3, r9, r3, r5
 8022cc6:	e661      	b.n	802298c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8022cc8:	4681      	mov	r9, r0
 8022cca:	e688      	b.n	80229de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022ccc:	f1c1 0210 	rsb	r2, r1, #16
 8022cd0:	4341      	muls	r1, r0
 8022cd2:	fb09 1902 	mla	r9, r9, r2, r1
 8022cd6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022cda:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022cde:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022ce2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ce6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022cea:	ea42 0909 	orr.w	r9, r2, r9
 8022cee:	fa1f f289 	uxth.w	r2, r9
 8022cf2:	e71b      	b.n	8022b2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022cf4:	803a      	strh	r2, [r7, #0]
 8022cf6:	e75d      	b.n	8022bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022cf8:	f115 0e01 	adds.w	lr, r5, #1
 8022cfc:	f53f af5a 	bmi.w	8022bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d00:	4572      	cmp	r2, lr
 8022d02:	f6ff af57 	blt.w	8022bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d06:	f110 0e01 	adds.w	lr, r0, #1
 8022d0a:	f53f af53 	bmi.w	8022bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d0e:	4573      	cmp	r3, lr
 8022d10:	f6ff af50 	blt.w	8022bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d14:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d16:	9502      	str	r5, [sp, #8]
 8022d18:	b21b      	sxth	r3, r3
 8022d1a:	b212      	sxth	r2, r2
 8022d1c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022d20:	9301      	str	r3, [sp, #4]
 8022d22:	9200      	str	r2, [sp, #0]
 8022d24:	e9cd c405 	strd	ip, r4, [sp, #20]
 8022d28:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022d2c:	4639      	mov	r1, r7
 8022d2e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022d30:	f7ff fc04 	bl	802253c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022d34:	e73e      	b.n	8022bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022d36:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022d38:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022d3c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022d3e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022d42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022d44:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022d48:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022d4a:	141f      	asrs	r7, r3, #16
 8022d4c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022d4e:	141b      	asrs	r3, r3, #16
 8022d50:	fb01 3707 	mla	r7, r1, r7, r3
 8022d54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022d56:	fa1f fc82 	uxth.w	ip, r2
 8022d5a:	eb03 0a07 	add.w	sl, r3, r7
 8022d5e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022d62:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022d66:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022d6a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022d6e:	b29b      	uxth	r3, r3
 8022d70:	2d00      	cmp	r5, #0
 8022d72:	f000 813d 	beq.w	8022ff0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022d76:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022d7a:	940f      	str	r4, [sp, #60]	; 0x3c
 8022d7c:	eb0a 0b01 	add.w	fp, sl, r1
 8022d80:	fa1f fa85 	uxth.w	sl, r5
 8022d84:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d88:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022d8c:	fa1f fa8a 	uxth.w	sl, sl
 8022d90:	eba0 000c 	sub.w	r0, r0, ip
 8022d94:	eba3 030a 	sub.w	r3, r3, sl
 8022d98:	b280      	uxth	r0, r0
 8022d9a:	fb08 f000 	mul.w	r0, r8, r0
 8022d9e:	b29b      	uxth	r3, r3
 8022da0:	fb09 0303 	mla	r3, r9, r3, r0
 8022da4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022da6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022daa:	9410      	str	r4, [sp, #64]	; 0x40
 8022dac:	fb0a 3300 	mla	r3, sl, r0, r3
 8022db0:	fb0c 3304 	mla	r3, ip, r4, r3
 8022db4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022db8:	2b00      	cmp	r3, #0
 8022dba:	f000 810b 	beq.w	8022fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022dbe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022dc0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022dc2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022dc6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022dca:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022dce:	f000 8114 	beq.w	8022ffa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022dd2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022dd6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022dda:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022dde:	fb09 f707 	mul.w	r7, r9, r7
 8022de2:	fb0a fc0c 	mul.w	ip, sl, ip
 8022de6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022dea:	f107 0b20 	add.w	fp, r7, #32
 8022dee:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022df2:	44cc      	add	ip, r9
 8022df4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022df8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022dfc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022e00:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022e04:	ea4c 0909 	orr.w	r9, ip, r9
 8022e08:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022e0c:	8847      	ldrh	r7, [r0, #2]
 8022e0e:	d019      	beq.n	8022e44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022e10:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022e14:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022e18:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022e1c:	fb08 f807 	mul.w	r8, r8, r7
 8022e20:	fb0a fc0c 	mul.w	ip, sl, ip
 8022e24:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022e28:	f108 0b20 	add.w	fp, r8, #32
 8022e2c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022e30:	44bc      	add	ip, r7
 8022e32:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022e36:	0a3f      	lsrs	r7, r7, #8
 8022e38:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022e3c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022e40:	ea4c 0707 	orr.w	r7, ip, r7
 8022e44:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022e48:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022e4c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022e50:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022e54:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022e58:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022e5c:	ea4c 0909 	orr.w	r9, ip, r9
 8022e60:	ea4a 0707 	orr.w	r7, sl, r7
 8022e64:	2d00      	cmp	r5, #0
 8022e66:	f000 80ca 	beq.w	8022ffe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022e6a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022e6e:	3901      	subs	r1, #1
 8022e70:	0049      	lsls	r1, r1, #1
 8022e72:	3102      	adds	r1, #2
 8022e74:	eb00 0c01 	add.w	ip, r0, r1
 8022e78:	5a41      	ldrh	r1, [r0, r1]
 8022e7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022e7c:	28ff      	cmp	r0, #255	; 0xff
 8022e7e:	d019      	beq.n	8022eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022e80:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022e82:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022e86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022e8a:	fb04 fa01 	mul.w	sl, r4, r1
 8022e8e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022e92:	fb08 f800 	mul.w	r8, r8, r0
 8022e96:	f10a 0020 	add.w	r0, sl, #32
 8022e9a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022e9e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022ea2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022ea6:	4441      	add	r1, r8
 8022ea8:	0a00      	lsrs	r0, r0, #8
 8022eaa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022eae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022eb2:	4301      	orrs	r1, r0
 8022eb4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022eb6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022eba:	2cff      	cmp	r4, #255	; 0xff
 8022ebc:	d01a      	beq.n	8022ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022ebe:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022ec2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022ec6:	fb04 fa00 	mul.w	sl, r4, r0
 8022eca:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022ece:	fb08 f80c 	mul.w	r8, r8, ip
 8022ed2:	f10a 0c20 	add.w	ip, sl, #32
 8022ed6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022eda:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022ede:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022ee2:	4440      	add	r0, r8
 8022ee4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ee8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022eec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022ef0:	ea40 000c 	orr.w	r0, r0, ip
 8022ef4:	fb15 fc02 	smulbb	ip, r5, r2
 8022ef8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022efc:	f1c5 0810 	rsb	r8, r5, #16
 8022f00:	eba8 0802 	sub.w	r8, r8, r2
 8022f04:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022f08:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022f0c:	437a      	muls	r2, r7
 8022f0e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022f12:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022f16:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f1a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022f1e:	fb09 2208 	mla	r2, r9, r8, r2
 8022f22:	ea4a 0101 	orr.w	r1, sl, r1
 8022f26:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022f2a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f2e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f32:	fb05 2201 	mla	r2, r5, r1, r2
 8022f36:	ea4b 0000 	orr.w	r0, fp, r0
 8022f3a:	fb0c 2200 	mla	r2, ip, r0, r2
 8022f3e:	0d57      	lsrs	r7, r2, #21
 8022f40:	0952      	lsrs	r2, r2, #5
 8022f42:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022f46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f4a:	433a      	orrs	r2, r7
 8022f4c:	2bff      	cmp	r3, #255	; 0xff
 8022f4e:	b292      	uxth	r2, r2
 8022f50:	d102      	bne.n	8022f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022f52:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022f54:	29ff      	cmp	r1, #255	; 0xff
 8022f56:	d063      	beq.n	8023020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022f58:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022f5a:	f8be 1000 	ldrh.w	r1, [lr]
 8022f5e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022f60:	4343      	muls	r3, r0
 8022f62:	1c58      	adds	r0, r3, #1
 8022f64:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022f68:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022f6c:	1208      	asrs	r0, r1, #8
 8022f6e:	b2db      	uxtb	r3, r3
 8022f70:	1215      	asrs	r5, r2, #8
 8022f72:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022f76:	fb10 f003 	smulbb	r0, r0, r3
 8022f7a:	10cf      	asrs	r7, r1, #3
 8022f7c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022f80:	00c9      	lsls	r1, r1, #3
 8022f82:	fb05 0504 	mla	r5, r5, r4, r0
 8022f86:	b2c9      	uxtb	r1, r1
 8022f88:	10d0      	asrs	r0, r2, #3
 8022f8a:	00d2      	lsls	r2, r2, #3
 8022f8c:	fb11 f103 	smulbb	r1, r1, r3
 8022f90:	b2d2      	uxtb	r2, r2
 8022f92:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022f96:	fb02 1204 	mla	r2, r2, r4, r1
 8022f9a:	fb17 f703 	smulbb	r7, r7, r3
 8022f9e:	b2ad      	uxth	r5, r5
 8022fa0:	b292      	uxth	r2, r2
 8022fa2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022fa6:	fb00 7004 	mla	r0, r0, r4, r7
 8022faa:	1c6b      	adds	r3, r5, #1
 8022fac:	1c57      	adds	r7, r2, #1
 8022fae:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022fb2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022fb6:	b280      	uxth	r0, r0
 8022fb8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022fbc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022fc0:	433d      	orrs	r5, r7
 8022fc2:	1c47      	adds	r7, r0, #1
 8022fc4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022fc8:	097f      	lsrs	r7, r7, #5
 8022fca:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022fce:	433d      	orrs	r5, r7
 8022fd0:	f8ae 5000 	strh.w	r5, [lr]
 8022fd4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022fd6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022fd8:	4413      	add	r3, r2
 8022fda:	9321      	str	r3, [sp, #132]	; 0x84
 8022fdc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022fde:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fe0:	441a      	add	r2, r3
 8022fe2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022fe4:	9222      	str	r2, [sp, #136]	; 0x88
 8022fe6:	3b01      	subs	r3, #1
 8022fe8:	f10e 0e02 	add.w	lr, lr, #2
 8022fec:	9313      	str	r3, [sp, #76]	; 0x4c
 8022fee:	e61c      	b.n	8022c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022ff0:	fb08 f000 	mul.w	r0, r8, r0
 8022ff4:	fb09 0303 	mla	r3, r9, r3, r0
 8022ff8:	e6dc      	b.n	8022db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022ffa:	46b9      	mov	r9, r7
 8022ffc:	e704      	b.n	8022e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022ffe:	f1c2 0110 	rsb	r1, r2, #16
 8023002:	437a      	muls	r2, r7
 8023004:	fb09 2901 	mla	r9, r9, r1, r2
 8023008:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802300c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023010:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023014:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023018:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802301c:	4302      	orrs	r2, r0
 802301e:	e795      	b.n	8022f4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8023020:	f8ae 2000 	strh.w	r2, [lr]
 8023024:	e7d6      	b.n	8022fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023026:	b017      	add	sp, #92	; 0x5c
 8023028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802302c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 802302c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023030:	b085      	sub	sp, #20
 8023032:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8023036:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802303a:	9103      	str	r1, [sp, #12]
 802303c:	fb00 7406 	mla	r4, r0, r6, r7
 8023040:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8023044:	2800      	cmp	r0, #0
 8023046:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802304a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802304e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023052:	9501      	str	r5, [sp, #4]
 8023054:	eb02 0904 	add.w	r9, r2, r4
 8023058:	f2c0 8141 	blt.w	80232de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802305c:	4583      	cmp	fp, r0
 802305e:	f340 813e 	ble.w	80232de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023062:	2f00      	cmp	r7, #0
 8023064:	f2c0 8137 	blt.w	80232d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023068:	42be      	cmp	r6, r7
 802306a:	f340 8134 	ble.w	80232d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802306e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8023072:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8023076:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802307a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802307e:	4355      	muls	r5, r2
 8023080:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023084:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023088:	fb0c f203 	mul.w	r2, ip, r3
 802308c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023090:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023094:	441d      	add	r5, r3
 8023096:	f102 0320 	add.w	r3, r2, #32
 802309a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802309e:	0a1b      	lsrs	r3, r3, #8
 80230a0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80230a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80230a8:	431c      	orrs	r4, r3
 80230aa:	1c7b      	adds	r3, r7, #1
 80230ac:	f100 811c 	bmi.w	80232e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80230b0:	429e      	cmp	r6, r3
 80230b2:	f340 8119 	ble.w	80232e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80230b6:	2900      	cmp	r1, #0
 80230b8:	f000 8119 	beq.w	80232ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80230bc:	9a01      	ldr	r2, [sp, #4]
 80230be:	f899 3001 	ldrb.w	r3, [r9, #1]
 80230c2:	8855      	ldrh	r5, [r2, #2]
 80230c4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80230c8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80230cc:	fb08 f802 	mul.w	r8, r8, r2
 80230d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80230d4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80230d8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80230dc:	435d      	muls	r5, r3
 80230de:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80230e2:	44d0      	add	r8, sl
 80230e4:	f105 0a20 	add.w	sl, r5, #32
 80230e8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80230ec:	0a2d      	lsrs	r5, r5, #8
 80230ee:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80230f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80230f6:	432a      	orrs	r2, r5
 80230f8:	3001      	adds	r0, #1
 80230fa:	f100 80fe 	bmi.w	80232fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80230fe:	4583      	cmp	fp, r0
 8023100:	f340 80fb 	ble.w	80232fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023104:	f1be 0f00 	cmp.w	lr, #0
 8023108:	f000 80fc 	beq.w	8023304 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 802310c:	2f00      	cmp	r7, #0
 802310e:	f2c0 80f1 	blt.w	80232f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023112:	42be      	cmp	r6, r7
 8023114:	f340 80ee 	ble.w	80232f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023118:	9801      	ldr	r0, [sp, #4]
 802311a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802311e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8023122:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023126:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802312a:	fb0a fa00 	mul.w	sl, sl, r0
 802312e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023132:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8023136:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802313a:	fb05 f808 	mul.w	r8, r5, r8
 802313e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023142:	4482      	add	sl, r0
 8023144:	f108 0020 	add.w	r0, r8, #32
 8023148:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802314c:	0a00      	lsrs	r0, r0, #8
 802314e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023152:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023156:	ea4b 0b00 	orr.w	fp, fp, r0
 802315a:	3701      	adds	r7, #1
 802315c:	f100 80d7 	bmi.w	802330e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023160:	42be      	cmp	r6, r7
 8023162:	f340 80d4 	ble.w	802330e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023166:	2900      	cmp	r1, #0
 8023168:	f000 80d4 	beq.w	8023314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 802316c:	3601      	adds	r6, #1
 802316e:	9801      	ldr	r0, [sp, #4]
 8023170:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023174:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023178:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802317c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023180:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023184:	fb09 f906 	mul.w	r9, r9, r6
 8023188:	fb07 f800 	mul.w	r8, r7, r0
 802318c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023190:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023194:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023198:	44d1      	add	r9, sl
 802319a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802319e:	f108 0020 	add.w	r0, r8, #32
 80231a2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80231a6:	0a00      	lsrs	r0, r0, #8
 80231a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80231ac:	4330      	orrs	r0, r6
 80231ae:	b28e      	uxth	r6, r1
 80231b0:	fa1f f98e 	uxth.w	r9, lr
 80231b4:	fb06 f809 	mul.w	r8, r6, r9
 80231b8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80231bc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80231c0:	0136      	lsls	r6, r6, #4
 80231c2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80231c6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80231ca:	9601      	str	r6, [sp, #4]
 80231cc:	ea4a 0404 	orr.w	r4, sl, r4
 80231d0:	fa1f f689 	uxth.w	r6, r9
 80231d4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80231d8:	fb11 f90e 	smulbb	r9, r1, lr
 80231dc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80231e0:	9602      	str	r6, [sp, #8]
 80231e2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80231e6:	4626      	mov	r6, r4
 80231e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80231ec:	f1ce 0410 	rsb	r4, lr, #16
 80231f0:	1a64      	subs	r4, r4, r1
 80231f2:	ea4a 0202 	orr.w	r2, sl, r2
 80231f6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80231fa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80231fe:	434a      	muls	r2, r1
 8023200:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023204:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023208:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802320c:	fb04 2406 	mla	r4, r4, r6, r2
 8023210:	ea4a 0000 	orr.w	r0, sl, r0
 8023214:	fb09 4200 	mla	r2, r9, r0, r4
 8023218:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802321c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023220:	9801      	ldr	r0, [sp, #4]
 8023222:	9903      	ldr	r1, [sp, #12]
 8023224:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023228:	ea44 0b0b 	orr.w	fp, r4, fp
 802322c:	9c02      	ldr	r4, [sp, #8]
 802322e:	8809      	ldrh	r1, [r1, #0]
 8023230:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023234:	1b00      	subs	r0, r0, r4
 8023236:	9c01      	ldr	r4, [sp, #4]
 8023238:	eba4 0608 	sub.w	r6, r4, r8
 802323c:	b2b6      	uxth	r6, r6
 802323e:	b280      	uxth	r0, r0
 8023240:	4373      	muls	r3, r6
 8023242:	fb0c 3300 	mla	r3, ip, r0, r3
 8023246:	9802      	ldr	r0, [sp, #8]
 8023248:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802324c:	fb00 3505 	mla	r5, r0, r5, r3
 8023250:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8023254:	fb08 5707 	mla	r7, r8, r7, r5
 8023258:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802325c:	120b      	asrs	r3, r1, #8
 802325e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023262:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8023266:	b2ff      	uxtb	r7, r7
 8023268:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802326c:	10c8      	asrs	r0, r1, #3
 802326e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023272:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023276:	00c9      	lsls	r1, r1, #3
 8023278:	437b      	muls	r3, r7
 802327a:	ea42 0e0e 	orr.w	lr, r2, lr
 802327e:	b2c9      	uxtb	r1, r1
 8023280:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023284:	fa1f f28e 	uxth.w	r2, lr
 8023288:	4378      	muls	r0, r7
 802328a:	434f      	muls	r7, r1
 802328c:	1c59      	adds	r1, r3, #1
 802328e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023292:	1213      	asrs	r3, r2, #8
 8023294:	f023 0307 	bic.w	r3, r3, #7
 8023298:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802329c:	1c41      	adds	r1, r0, #1
 802329e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80232a2:	10d1      	asrs	r1, r2, #3
 80232a4:	f021 0103 	bic.w	r1, r1, #3
 80232a8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80232ac:	021b      	lsls	r3, r3, #8
 80232ae:	00c9      	lsls	r1, r1, #3
 80232b0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80232b4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80232b8:	430b      	orrs	r3, r1
 80232ba:	1c79      	adds	r1, r7, #1
 80232bc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80232c0:	00d2      	lsls	r2, r2, #3
 80232c2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80232c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80232ca:	431a      	orrs	r2, r3
 80232cc:	9b03      	ldr	r3, [sp, #12]
 80232ce:	801a      	strh	r2, [r3, #0]
 80232d0:	b005      	add	sp, #20
 80232d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232d6:	f04f 0c00 	mov.w	ip, #0
 80232da:	4664      	mov	r4, ip
 80232dc:	e6e5      	b.n	80230aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80232de:	2300      	movs	r3, #0
 80232e0:	469c      	mov	ip, r3
 80232e2:	461a      	mov	r2, r3
 80232e4:	461c      	mov	r4, r3
 80232e6:	e707      	b.n	80230f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80232e8:	2300      	movs	r3, #0
 80232ea:	461a      	mov	r2, r3
 80232ec:	e704      	b.n	80230f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80232ee:	460b      	mov	r3, r1
 80232f0:	460a      	mov	r2, r1
 80232f2:	e701      	b.n	80230f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80232f4:	2500      	movs	r5, #0
 80232f6:	46ab      	mov	fp, r5
 80232f8:	e72f      	b.n	802315a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80232fa:	2700      	movs	r7, #0
 80232fc:	463d      	mov	r5, r7
 80232fe:	4638      	mov	r0, r7
 8023300:	46bb      	mov	fp, r7
 8023302:	e754      	b.n	80231ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023304:	4677      	mov	r7, lr
 8023306:	4675      	mov	r5, lr
 8023308:	4670      	mov	r0, lr
 802330a:	46f3      	mov	fp, lr
 802330c:	e74f      	b.n	80231ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802330e:	2700      	movs	r7, #0
 8023310:	4638      	mov	r0, r7
 8023312:	e74c      	b.n	80231ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023314:	460f      	mov	r7, r1
 8023316:	4608      	mov	r0, r1
 8023318:	e749      	b.n	80231ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0802331c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802331c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023320:	b093      	sub	sp, #76	; 0x4c
 8023322:	9210      	str	r2, [sp, #64]	; 0x40
 8023324:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023326:	910e      	str	r1, [sp, #56]	; 0x38
 8023328:	9306      	str	r3, [sp, #24]
 802332a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802332e:	9011      	str	r0, [sp, #68]	; 0x44
 8023330:	6850      	ldr	r0, [r2, #4]
 8023332:	6812      	ldr	r2, [r2, #0]
 8023334:	fb00 1303 	mla	r3, r0, r3, r1
 8023338:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802333c:	9307      	str	r3, [sp, #28]
 802333e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023340:	681b      	ldr	r3, [r3, #0]
 8023342:	9308      	str	r3, [sp, #32]
 8023344:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023346:	685b      	ldr	r3, [r3, #4]
 8023348:	9309      	str	r3, [sp, #36]	; 0x24
 802334a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802334c:	2b00      	cmp	r3, #0
 802334e:	dc03      	bgt.n	8023358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023350:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023352:	2b00      	cmp	r3, #0
 8023354:	f340 83b4 	ble.w	8023ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023358:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802335a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802335e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023362:	1e48      	subs	r0, r1, #1
 8023364:	1e55      	subs	r5, r2, #1
 8023366:	9b06      	ldr	r3, [sp, #24]
 8023368:	2b00      	cmp	r3, #0
 802336a:	f340 8163 	ble.w	8023634 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802336e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8023370:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023372:	1436      	asrs	r6, r6, #16
 8023374:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023378:	d406      	bmi.n	8023388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802337a:	4286      	cmp	r6, r0
 802337c:	da04      	bge.n	8023388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802337e:	2b00      	cmp	r3, #0
 8023380:	db02      	blt.n	8023388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023382:	42ab      	cmp	r3, r5
 8023384:	f2c0 8157 	blt.w	8023636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8023388:	3601      	adds	r6, #1
 802338a:	f100 8144 	bmi.w	8023616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802338e:	42b1      	cmp	r1, r6
 8023390:	f2c0 8141 	blt.w	8023616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023394:	3301      	adds	r3, #1
 8023396:	f100 813e 	bmi.w	8023616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802339a:	429a      	cmp	r2, r3
 802339c:	f2c0 813b 	blt.w	8023616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80233a0:	9b06      	ldr	r3, [sp, #24]
 80233a2:	9f07      	ldr	r7, [sp, #28]
 80233a4:	930f      	str	r3, [sp, #60]	; 0x3c
 80233a6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80233aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80233ac:	2b00      	cmp	r3, #0
 80233ae:	f340 8164 	ble.w	802367a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80233b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80233b4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80233b6:	1418      	asrs	r0, r3, #16
 80233b8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80233ba:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80233be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80233c0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80233c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80233c6:	142d      	asrs	r5, r5, #16
 80233c8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80233cc:	f100 81ee 	bmi.w	80237ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80233d0:	f102 3eff 	add.w	lr, r2, #4294967295
 80233d4:	4575      	cmp	r5, lr
 80233d6:	f280 81e9 	bge.w	80237ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80233da:	2800      	cmp	r0, #0
 80233dc:	f2c0 81e6 	blt.w	80237ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80233e0:	f103 3eff 	add.w	lr, r3, #4294967295
 80233e4:	4570      	cmp	r0, lr
 80233e6:	f280 81e1 	bge.w	80237ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80233ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80233ec:	b212      	sxth	r2, r2
 80233ee:	fb00 5002 	mla	r0, r0, r2, r5
 80233f2:	fa1f fe81 	uxth.w	lr, r1
 80233f6:	eb03 0a00 	add.w	sl, r3, r0
 80233fa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80233fe:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023402:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023406:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802340a:	b29b      	uxth	r3, r3
 802340c:	f1bc 0f00 	cmp.w	ip, #0
 8023410:	f000 8179 	beq.w	8023706 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023414:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023418:	940a      	str	r4, [sp, #40]	; 0x28
 802341a:	eb0a 0b02 	add.w	fp, sl, r2
 802341e:	fa1f fa8c 	uxth.w	sl, ip
 8023422:	fb0a fe0e 	mul.w	lr, sl, lr
 8023426:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802342a:	fa1f fa8a 	uxth.w	sl, sl
 802342e:	eba5 050e 	sub.w	r5, r5, lr
 8023432:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023436:	940b      	str	r4, [sp, #44]	; 0x2c
 8023438:	eba3 030a 	sub.w	r3, r3, sl
 802343c:	b2ad      	uxth	r5, r5
 802343e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023440:	b29b      	uxth	r3, r3
 8023442:	fb08 f505 	mul.w	r5, r8, r5
 8023446:	fb09 5303 	mla	r3, r9, r3, r5
 802344a:	fb0a 3304 	mla	r3, sl, r4, r3
 802344e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023450:	fb0e 3304 	mla	r3, lr, r4, r3
 8023454:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023458:	2b00      	cmp	r3, #0
 802345a:	f000 80cf 	beq.w	80235fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802345e:	9c08      	ldr	r4, [sp, #32]
 8023460:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023464:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023468:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802346c:	f000 8150 	beq.w	8023710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023470:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023474:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023478:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802347c:	fb09 f000 	mul.w	r0, r9, r0
 8023480:	fb0a fe0e 	mul.w	lr, sl, lr
 8023484:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023488:	f100 0b20 	add.w	fp, r0, #32
 802348c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023490:	44ce      	add	lr, r9
 8023492:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8023496:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802349a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802349e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80234a2:	ea4e 0909 	orr.w	r9, lr, r9
 80234a6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80234aa:	8868      	ldrh	r0, [r5, #2]
 80234ac:	d019      	beq.n	80234e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80234ae:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80234b2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80234b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80234ba:	fb08 f800 	mul.w	r8, r8, r0
 80234be:	fb0a fe0e 	mul.w	lr, sl, lr
 80234c2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80234c6:	f108 0b20 	add.w	fp, r8, #32
 80234ca:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80234ce:	4486      	add	lr, r0
 80234d0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80234d4:	0a00      	lsrs	r0, r0, #8
 80234d6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80234da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80234de:	ea4e 0000 	orr.w	r0, lr, r0
 80234e2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80234e6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80234ea:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80234ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80234f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80234f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80234fa:	ea4e 0909 	orr.w	r9, lr, r9
 80234fe:	ea4a 0000 	orr.w	r0, sl, r0
 8023502:	f1bc 0f00 	cmp.w	ip, #0
 8023506:	f000 8105 	beq.w	8023714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802350a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802350e:	3a01      	subs	r2, #1
 8023510:	0052      	lsls	r2, r2, #1
 8023512:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023514:	3202      	adds	r2, #2
 8023516:	2cff      	cmp	r4, #255	; 0xff
 8023518:	eb05 0e02 	add.w	lr, r5, r2
 802351c:	5aaa      	ldrh	r2, [r5, r2]
 802351e:	d018      	beq.n	8023552 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023520:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023524:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023528:	fb04 fa02 	mul.w	sl, r4, r2
 802352c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023530:	fb08 f805 	mul.w	r8, r8, r5
 8023534:	f10a 0520 	add.w	r5, sl, #32
 8023538:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802353c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023540:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023544:	4442      	add	r2, r8
 8023546:	0a2d      	lsrs	r5, r5, #8
 8023548:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802354c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023550:	432a      	orrs	r2, r5
 8023552:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023554:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023558:	2cff      	cmp	r4, #255	; 0xff
 802355a:	d01a      	beq.n	8023592 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802355c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023560:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023564:	fb04 fa05 	mul.w	sl, r4, r5
 8023568:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802356c:	fb08 f80e 	mul.w	r8, r8, lr
 8023570:	f10a 0e20 	add.w	lr, sl, #32
 8023574:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023578:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802357c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023580:	4445      	add	r5, r8
 8023582:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023586:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802358a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802358e:	ea45 050e 	orr.w	r5, r5, lr
 8023592:	fb1c fe01 	smulbb	lr, ip, r1
 8023596:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802359a:	f1cc 0810 	rsb	r8, ip, #16
 802359e:	eba8 0801 	sub.w	r8, r8, r1
 80235a2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80235a6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80235aa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80235ae:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80235b2:	4341      	muls	r1, r0
 80235b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80235b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80235bc:	ea4a 0202 	orr.w	r2, sl, r2
 80235c0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80235c4:	fb09 1108 	mla	r1, r9, r8, r1
 80235c8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80235cc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80235d0:	fb0c 1102 	mla	r1, ip, r2, r1
 80235d4:	ea4b 0505 	orr.w	r5, fp, r5
 80235d8:	fb0e 1e05 	mla	lr, lr, r5, r1
 80235dc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80235e0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80235e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80235e8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80235ec:	ea42 0e0e 	orr.w	lr, r2, lr
 80235f0:	fa1f f28e 	uxth.w	r2, lr
 80235f4:	2bff      	cmp	r3, #255	; 0xff
 80235f6:	f040 80a1 	bne.w	802373c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80235fa:	803a      	strh	r2, [r7, #0]
 80235fc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80235fe:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023600:	4413      	add	r3, r2
 8023602:	931d      	str	r3, [sp, #116]	; 0x74
 8023604:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023606:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023608:	441a      	add	r2, r3
 802360a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802360c:	921e      	str	r2, [sp, #120]	; 0x78
 802360e:	3b01      	subs	r3, #1
 8023610:	3702      	adds	r7, #2
 8023612:	930f      	str	r3, [sp, #60]	; 0x3c
 8023614:	e6c9      	b.n	80233aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023616:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023618:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802361a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802361c:	4433      	add	r3, r6
 802361e:	931d      	str	r3, [sp, #116]	; 0x74
 8023620:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023622:	441c      	add	r4, r3
 8023624:	9b06      	ldr	r3, [sp, #24]
 8023626:	941e      	str	r4, [sp, #120]	; 0x78
 8023628:	3b01      	subs	r3, #1
 802362a:	9306      	str	r3, [sp, #24]
 802362c:	9b07      	ldr	r3, [sp, #28]
 802362e:	3302      	adds	r3, #2
 8023630:	9307      	str	r3, [sp, #28]
 8023632:	e698      	b.n	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023634:	d028      	beq.n	8023688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023636:	9b06      	ldr	r3, [sp, #24]
 8023638:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802363a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802363c:	3b01      	subs	r3, #1
 802363e:	fb00 5003 	mla	r0, r0, r3, r5
 8023642:	1400      	asrs	r0, r0, #16
 8023644:	f53f aeac 	bmi.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023648:	3901      	subs	r1, #1
 802364a:	4288      	cmp	r0, r1
 802364c:	f6bf aea8 	bge.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023650:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023652:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023654:	fb01 0303 	mla	r3, r1, r3, r0
 8023658:	141b      	asrs	r3, r3, #16
 802365a:	f53f aea1 	bmi.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802365e:	3a01      	subs	r2, #1
 8023660:	4293      	cmp	r3, r2
 8023662:	f6bf ae9d 	bge.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023666:	9b06      	ldr	r3, [sp, #24]
 8023668:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802366c:	930f      	str	r3, [sp, #60]	; 0x3c
 802366e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023672:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023674:	2b00      	cmp	r3, #0
 8023676:	f300 80b6 	bgt.w	80237e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802367a:	9b06      	ldr	r3, [sp, #24]
 802367c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023680:	9b07      	ldr	r3, [sp, #28]
 8023682:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023686:	9307      	str	r3, [sp, #28]
 8023688:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802368a:	2b00      	cmp	r3, #0
 802368c:	f340 8218 	ble.w	8023ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023690:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023694:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023698:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802369c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802369e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80236a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80236a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80236aa:	eef0 6a62 	vmov.f32	s13, s5
 80236ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80236b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80236b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80236ba:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80236be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80236c2:	eef0 6a43 	vmov.f32	s13, s6
 80236c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80236ca:	ee12 2a90 	vmov	r2, s5
 80236ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80236d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80236d6:	ee13 2a10 	vmov	r2, s6
 80236da:	931f      	str	r3, [sp, #124]	; 0x7c
 80236dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80236de:	fb92 f3f3 	sdiv	r3, r2, r3
 80236e2:	9320      	str	r3, [sp, #128]	; 0x80
 80236e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80236e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80236e8:	3b01      	subs	r3, #1
 80236ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80236ee:	930e      	str	r3, [sp, #56]	; 0x38
 80236f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80236f2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80236f6:	bf08      	it	eq
 80236f8:	4613      	moveq	r3, r2
 80236fa:	9306      	str	r3, [sp, #24]
 80236fc:	eeb0 3a67 	vmov.f32	s6, s15
 8023700:	eef0 2a47 	vmov.f32	s5, s14
 8023704:	e621      	b.n	802334a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8023706:	fb08 f505 	mul.w	r5, r8, r5
 802370a:	fb09 5303 	mla	r3, r9, r3, r5
 802370e:	e6a1      	b.n	8023454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023710:	4681      	mov	r9, r0
 8023712:	e6c8      	b.n	80234a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023714:	f1c1 0210 	rsb	r2, r1, #16
 8023718:	4341      	muls	r1, r0
 802371a:	fb09 1902 	mla	r9, r9, r2, r1
 802371e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023722:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023726:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802372a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802372e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023732:	ea42 0909 	orr.w	r9, r2, r9
 8023736:	fa1f f289 	uxth.w	r2, r9
 802373a:	e75b      	b.n	80235f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802373c:	f8b7 c000 	ldrh.w	ip, [r7]
 8023740:	43db      	mvns	r3, r3
 8023742:	ea4f 202c 	mov.w	r0, ip, asr #8
 8023746:	fa5f fe83 	uxtb.w	lr, r3
 802374a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802374e:	fb00 f00e 	mul.w	r0, r0, lr
 8023752:	1c41      	adds	r1, r0, #1
 8023754:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023758:	1211      	asrs	r1, r2, #8
 802375a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802375e:	f021 0107 	bic.w	r1, r1, #7
 8023762:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023766:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802376a:	48d7      	ldr	r0, [pc, #860]	; (8023ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802376c:	fb05 f50e 	mul.w	r5, r5, lr
 8023770:	b2c9      	uxtb	r1, r1
 8023772:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8023776:	1c69      	adds	r1, r5, #1
 8023778:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802377c:	10d1      	asrs	r1, r2, #3
 802377e:	f021 0103 	bic.w	r1, r1, #3
 8023782:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8023786:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802378a:	b2db      	uxtb	r3, r3
 802378c:	00c9      	lsls	r1, r1, #3
 802378e:	fb03 f30e 	mul.w	r3, r3, lr
 8023792:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023796:	4301      	orrs	r1, r0
 8023798:	1c58      	adds	r0, r3, #1
 802379a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802379e:	00d2      	lsls	r2, r2, #3
 80237a0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80237a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80237a8:	430a      	orrs	r2, r1
 80237aa:	e726      	b.n	80235fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80237ac:	f115 0e01 	adds.w	lr, r5, #1
 80237b0:	f53f af24 	bmi.w	80235fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80237b4:	4572      	cmp	r2, lr
 80237b6:	f6ff af21 	blt.w	80235fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80237ba:	f110 0e01 	adds.w	lr, r0, #1
 80237be:	f53f af1d 	bmi.w	80235fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80237c2:	4573      	cmp	r3, lr
 80237c4:	f6ff af1a 	blt.w	80235fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80237c8:	b21b      	sxth	r3, r3
 80237ca:	b212      	sxth	r2, r2
 80237cc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80237d0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80237d4:	9301      	str	r3, [sp, #4]
 80237d6:	9200      	str	r2, [sp, #0]
 80237d8:	4639      	mov	r1, r7
 80237da:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80237de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80237e0:	f7ff fc24 	bl	802302c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80237e4:	e70a      	b.n	80235fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80237e6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80237e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80237ec:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80237ee:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80237f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80237f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80237f8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80237fa:	141f      	asrs	r7, r3, #16
 80237fc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80237fe:	141b      	asrs	r3, r3, #16
 8023800:	fb01 3707 	mla	r7, r1, r7, r3
 8023804:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023806:	fa1f fc82 	uxth.w	ip, r2
 802380a:	eb03 0a07 	add.w	sl, r3, r7
 802380e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023812:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023816:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802381a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802381e:	b29b      	uxth	r3, r3
 8023820:	2d00      	cmp	r5, #0
 8023822:	f000 80fe 	beq.w	8023a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8023826:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802382a:	940c      	str	r4, [sp, #48]	; 0x30
 802382c:	eb0a 0b01 	add.w	fp, sl, r1
 8023830:	fa1f fa85 	uxth.w	sl, r5
 8023834:	fb0a fc0c 	mul.w	ip, sl, ip
 8023838:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802383c:	fa1f fa8a 	uxth.w	sl, sl
 8023840:	eba0 000c 	sub.w	r0, r0, ip
 8023844:	eba3 030a 	sub.w	r3, r3, sl
 8023848:	b280      	uxth	r0, r0
 802384a:	fb08 f000 	mul.w	r0, r8, r0
 802384e:	b29b      	uxth	r3, r3
 8023850:	fb09 0303 	mla	r3, r9, r3, r0
 8023854:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023856:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802385a:	940d      	str	r4, [sp, #52]	; 0x34
 802385c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023860:	fb0c 3304 	mla	r3, ip, r4, r3
 8023864:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023868:	2b00      	cmp	r3, #0
 802386a:	f000 80cc 	beq.w	8023a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802386e:	9808      	ldr	r0, [sp, #32]
 8023870:	9c08      	ldr	r4, [sp, #32]
 8023872:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023876:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802387a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802387e:	f000 80d5 	beq.w	8023a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023882:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023886:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802388a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802388e:	fb09 f707 	mul.w	r7, r9, r7
 8023892:	fb0a fc0c 	mul.w	ip, sl, ip
 8023896:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802389a:	f107 0b20 	add.w	fp, r7, #32
 802389e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80238a2:	44cc      	add	ip, r9
 80238a4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80238a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80238ac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80238b0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80238b4:	ea4c 0909 	orr.w	r9, ip, r9
 80238b8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80238bc:	8847      	ldrh	r7, [r0, #2]
 80238be:	d019      	beq.n	80238f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80238c0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80238c4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80238c8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80238cc:	fb08 f807 	mul.w	r8, r8, r7
 80238d0:	fb0a fc0c 	mul.w	ip, sl, ip
 80238d4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80238d8:	f108 0b20 	add.w	fp, r8, #32
 80238dc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80238e0:	44bc      	add	ip, r7
 80238e2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80238e6:	0a3f      	lsrs	r7, r7, #8
 80238e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80238ec:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80238f0:	ea4c 0707 	orr.w	r7, ip, r7
 80238f4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80238f8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80238fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023900:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023904:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023908:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802390c:	ea4c 0909 	orr.w	r9, ip, r9
 8023910:	ea4a 0707 	orr.w	r7, sl, r7
 8023914:	2d00      	cmp	r5, #0
 8023916:	f000 808b 	beq.w	8023a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802391a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802391e:	3901      	subs	r1, #1
 8023920:	0049      	lsls	r1, r1, #1
 8023922:	3102      	adds	r1, #2
 8023924:	eb00 0c01 	add.w	ip, r0, r1
 8023928:	5a41      	ldrh	r1, [r0, r1]
 802392a:	980c      	ldr	r0, [sp, #48]	; 0x30
 802392c:	28ff      	cmp	r0, #255	; 0xff
 802392e:	d019      	beq.n	8023964 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023930:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023932:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023936:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802393a:	fb04 fa01 	mul.w	sl, r4, r1
 802393e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023942:	fb08 f800 	mul.w	r8, r8, r0
 8023946:	f10a 0020 	add.w	r0, sl, #32
 802394a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802394e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023952:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023956:	4441      	add	r1, r8
 8023958:	0a00      	lsrs	r0, r0, #8
 802395a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802395e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023962:	4301      	orrs	r1, r0
 8023964:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023966:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802396a:	2cff      	cmp	r4, #255	; 0xff
 802396c:	d01a      	beq.n	80239a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802396e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023972:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023976:	fb04 fa00 	mul.w	sl, r4, r0
 802397a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802397e:	fb08 f80c 	mul.w	r8, r8, ip
 8023982:	f10a 0c20 	add.w	ip, sl, #32
 8023986:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802398a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802398e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023992:	4440      	add	r0, r8
 8023994:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023998:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802399c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80239a0:	ea40 000c 	orr.w	r0, r0, ip
 80239a4:	fb15 fc02 	smulbb	ip, r5, r2
 80239a8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80239ac:	f1c5 0810 	rsb	r8, r5, #16
 80239b0:	eba8 0802 	sub.w	r8, r8, r2
 80239b4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80239b8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80239bc:	437a      	muls	r2, r7
 80239be:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80239c2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80239c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80239ca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80239ce:	fb09 2208 	mla	r2, r9, r8, r2
 80239d2:	ea4a 0101 	orr.w	r1, sl, r1
 80239d6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80239da:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80239de:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80239e2:	fb05 2201 	mla	r2, r5, r1, r2
 80239e6:	ea4b 0000 	orr.w	r0, fp, r0
 80239ea:	fb0c 2200 	mla	r2, ip, r0, r2
 80239ee:	0d57      	lsrs	r7, r2, #21
 80239f0:	0952      	lsrs	r2, r2, #5
 80239f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80239f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80239fa:	433a      	orrs	r2, r7
 80239fc:	2bff      	cmp	r3, #255	; 0xff
 80239fe:	b292      	uxth	r2, r2
 8023a00:	d127      	bne.n	8023a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8023a02:	f8ae 2000 	strh.w	r2, [lr]
 8023a06:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023a08:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023a0a:	4413      	add	r3, r2
 8023a0c:	931d      	str	r3, [sp, #116]	; 0x74
 8023a0e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023a10:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a12:	441a      	add	r2, r3
 8023a14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023a16:	921e      	str	r2, [sp, #120]	; 0x78
 8023a18:	3b01      	subs	r3, #1
 8023a1a:	f10e 0e02 	add.w	lr, lr, #2
 8023a1e:	930f      	str	r3, [sp, #60]	; 0x3c
 8023a20:	e627      	b.n	8023672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023a22:	fb08 f000 	mul.w	r0, r8, r0
 8023a26:	fb09 0303 	mla	r3, r9, r3, r0
 8023a2a:	e71b      	b.n	8023864 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8023a2c:	46b9      	mov	r9, r7
 8023a2e:	e743      	b.n	80238b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8023a30:	f1c2 0110 	rsb	r1, r2, #16
 8023a34:	437a      	muls	r2, r7
 8023a36:	fb09 2901 	mla	r9, r9, r1, r2
 8023a3a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023a3e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023a42:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023a46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a4a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023a4e:	4302      	orrs	r2, r0
 8023a50:	e7d4      	b.n	80239fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8023a52:	f8be 7000 	ldrh.w	r7, [lr]
 8023a56:	4c1c      	ldr	r4, [pc, #112]	; (8023ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023a58:	43db      	mvns	r3, r3
 8023a5a:	1238      	asrs	r0, r7, #8
 8023a5c:	fa5f fc83 	uxtb.w	ip, r3
 8023a60:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023a64:	10fd      	asrs	r5, r7, #3
 8023a66:	fb00 f00c 	mul.w	r0, r0, ip
 8023a6a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023a6e:	fb05 f10c 	mul.w	r1, r5, ip
 8023a72:	1c45      	adds	r5, r0, #1
 8023a74:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023a78:	1215      	asrs	r5, r2, #8
 8023a7a:	f025 0507 	bic.w	r5, r5, #7
 8023a7e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023a82:	1c4d      	adds	r5, r1, #1
 8023a84:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8023a88:	10d1      	asrs	r1, r2, #3
 8023a8a:	f021 0103 	bic.w	r1, r1, #3
 8023a8e:	00fb      	lsls	r3, r7, #3
 8023a90:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023a94:	b2db      	uxtb	r3, r3
 8023a96:	b2c0      	uxtb	r0, r0
 8023a98:	00c9      	lsls	r1, r1, #3
 8023a9a:	fb03 f30c 	mul.w	r3, r3, ip
 8023a9e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023aa2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8023aa6:	4308      	orrs	r0, r1
 8023aa8:	1c59      	adds	r1, r3, #1
 8023aaa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023aae:	00d2      	lsls	r2, r2, #3
 8023ab0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023ab4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8023ab8:	4318      	orrs	r0, r3
 8023aba:	f8ae 0000 	strh.w	r0, [lr]
 8023abe:	e7a2      	b.n	8023a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023ac0:	b013      	add	sp, #76	; 0x4c
 8023ac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ac6:	bf00      	nop
 8023ac8:	fffff800 	.word	0xfffff800

08023acc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8023acc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023ad0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8023ad4:	fb05 4c03 	mla	ip, r5, r3, r4
 8023ad8:	2d00      	cmp	r5, #0
 8023ada:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8023ade:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8023ae2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8023ae6:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8023aea:	8808      	ldrh	r0, [r1, #0]
 8023aec:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8023af0:	f2c0 80a7 	blt.w	8023c42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023af4:	45aa      	cmp	sl, r5
 8023af6:	f340 80a4 	ble.w	8023c42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023afa:	2c00      	cmp	r4, #0
 8023afc:	f2c0 809f 	blt.w	8023c3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023b00:	42a3      	cmp	r3, r4
 8023b02:	f340 809c 	ble.w	8023c3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023b06:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8023b0a:	1c62      	adds	r2, r4, #1
 8023b0c:	f100 809c 	bmi.w	8023c48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023b10:	4293      	cmp	r3, r2
 8023b12:	f340 8099 	ble.w	8023c48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023b16:	f1b9 0f00 	cmp.w	r9, #0
 8023b1a:	f000 8095 	beq.w	8023c48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023b1e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023b22:	3501      	adds	r5, #1
 8023b24:	f100 8094 	bmi.w	8023c50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023b28:	45aa      	cmp	sl, r5
 8023b2a:	f340 8091 	ble.w	8023c50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023b2e:	2f00      	cmp	r7, #0
 8023b30:	f000 808e 	beq.w	8023c50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023b34:	2c00      	cmp	r4, #0
 8023b36:	f2c0 8089 	blt.w	8023c4c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023b3a:	42a3      	cmp	r3, r4
 8023b3c:	f340 8086 	ble.w	8023c4c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023b40:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8023b44:	3401      	adds	r4, #1
 8023b46:	f100 8086 	bmi.w	8023c56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023b4a:	42a3      	cmp	r3, r4
 8023b4c:	f340 8083 	ble.w	8023c56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023b50:	f1b9 0f00 	cmp.w	r9, #0
 8023b54:	d07f      	beq.n	8023c56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023b56:	3301      	adds	r3, #1
 8023b58:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8023b5c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8023b60:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023b64:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8023b68:	fb19 fe07 	smulbb	lr, r9, r7
 8023b6c:	ea44 0808 	orr.w	r8, r4, r8
 8023b70:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023b74:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8023b78:	f1c7 0210 	rsb	r2, r7, #16
 8023b7c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023b80:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023b84:	ea44 0c0c 	orr.w	ip, r4, ip
 8023b88:	eba2 0209 	sub.w	r2, r2, r9
 8023b8c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023b90:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023b94:	fb04 f40c 	mul.w	r4, r4, ip
 8023b98:	fb02 4808 	mla	r8, r2, r8, r4
 8023b9c:	041a      	lsls	r2, r3, #16
 8023b9e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023ba2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023ba6:	4313      	orrs	r3, r2
 8023ba8:	042a      	lsls	r2, r5, #16
 8023baa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023bae:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023bb2:	fb0e 8303 	mla	r3, lr, r3, r8
 8023bb6:	432a      	orrs	r2, r5
 8023bb8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8023bbc:	fb07 3202 	mla	r2, r7, r2, r3
 8023bc0:	0d53      	lsrs	r3, r2, #21
 8023bc2:	0952      	lsrs	r2, r2, #5
 8023bc4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023bc8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023bcc:	431a      	orrs	r2, r3
 8023bce:	b293      	uxth	r3, r2
 8023bd0:	b2b4      	uxth	r4, r6
 8023bd2:	1202      	asrs	r2, r0, #8
 8023bd4:	43f6      	mvns	r6, r6
 8023bd6:	b2f6      	uxtb	r6, r6
 8023bd8:	121d      	asrs	r5, r3, #8
 8023bda:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023bde:	fb12 f206 	smulbb	r2, r2, r6
 8023be2:	10c7      	asrs	r7, r0, #3
 8023be4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023be8:	00c0      	lsls	r0, r0, #3
 8023bea:	fb05 2504 	mla	r5, r5, r4, r2
 8023bee:	b2c0      	uxtb	r0, r0
 8023bf0:	10da      	asrs	r2, r3, #3
 8023bf2:	00db      	lsls	r3, r3, #3
 8023bf4:	b2db      	uxtb	r3, r3
 8023bf6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023bfa:	fb10 f006 	smulbb	r0, r0, r6
 8023bfe:	b2ad      	uxth	r5, r5
 8023c00:	fb03 0004 	mla	r0, r3, r4, r0
 8023c04:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023c08:	fb17 f706 	smulbb	r7, r7, r6
 8023c0c:	b280      	uxth	r0, r0
 8023c0e:	1c6b      	adds	r3, r5, #1
 8023c10:	fb02 7204 	mla	r2, r2, r4, r7
 8023c14:	b292      	uxth	r2, r2
 8023c16:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023c1a:	1c43      	adds	r3, r0, #1
 8023c1c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023c20:	1c50      	adds	r0, r2, #1
 8023c22:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8023c26:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023c2a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023c2e:	0952      	lsrs	r2, r2, #5
 8023c30:	432b      	orrs	r3, r5
 8023c32:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c36:	4313      	orrs	r3, r2
 8023c38:	800b      	strh	r3, [r1, #0]
 8023c3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023c3e:	4680      	mov	r8, r0
 8023c40:	e763      	b.n	8023b0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8023c42:	4684      	mov	ip, r0
 8023c44:	4680      	mov	r8, r0
 8023c46:	e76c      	b.n	8023b22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023c48:	4684      	mov	ip, r0
 8023c4a:	e76a      	b.n	8023b22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023c4c:	4605      	mov	r5, r0
 8023c4e:	e779      	b.n	8023b44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8023c50:	4603      	mov	r3, r0
 8023c52:	4605      	mov	r5, r0
 8023c54:	e782      	b.n	8023b5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8023c56:	4603      	mov	r3, r0
 8023c58:	e780      	b.n	8023b5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08023c5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023c5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c5e:	b093      	sub	sp, #76	; 0x4c
 8023c60:	461d      	mov	r5, r3
 8023c62:	9210      	str	r2, [sp, #64]	; 0x40
 8023c64:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023c66:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8023c6a:	920b      	str	r2, [sp, #44]	; 0x2c
 8023c6c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023c70:	910a      	str	r1, [sp, #40]	; 0x28
 8023c72:	6859      	ldr	r1, [r3, #4]
 8023c74:	681b      	ldr	r3, [r3, #0]
 8023c76:	9011      	str	r0, [sp, #68]	; 0x44
 8023c78:	fb01 2707 	mla	r7, r1, r7, r2
 8023c7c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023c80:	9307      	str	r3, [sp, #28]
 8023c82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c84:	681b      	ldr	r3, [r3, #0]
 8023c86:	9309      	str	r3, [sp, #36]	; 0x24
 8023c88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023c8a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023c8e:	43db      	mvns	r3, r3
 8023c90:	b2db      	uxtb	r3, r3
 8023c92:	9308      	str	r3, [sp, #32]
 8023c94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023c96:	2b00      	cmp	r3, #0
 8023c98:	dc03      	bgt.n	8023ca2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023c9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023c9c:	2b00      	cmp	r3, #0
 8023c9e:	f340 8203 	ble.w	80240a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023ca2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023ca4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ca8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023cac:	1e48      	subs	r0, r1, #1
 8023cae:	f102 3cff 	add.w	ip, r2, #4294967295
 8023cb2:	2d00      	cmp	r5, #0
 8023cb4:	f340 80da 	ble.w	8023e6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023cb8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023cbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023cc0:	d406      	bmi.n	8023cd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023cc2:	4586      	cmp	lr, r0
 8023cc4:	da04      	bge.n	8023cd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023cc6:	2b00      	cmp	r3, #0
 8023cc8:	db02      	blt.n	8023cd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023cca:	4563      	cmp	r3, ip
 8023ccc:	f2c0 80cf 	blt.w	8023e6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023cd0:	f11e 0e01 	adds.w	lr, lr, #1
 8023cd4:	f100 80c1 	bmi.w	8023e5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023cd8:	4571      	cmp	r1, lr
 8023cda:	f2c0 80be 	blt.w	8023e5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023cde:	3301      	adds	r3, #1
 8023ce0:	f100 80bb 	bmi.w	8023e5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023ce4:	429a      	cmp	r2, r3
 8023ce6:	f2c0 80b8 	blt.w	8023e5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023cea:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023cee:	46a9      	mov	r9, r5
 8023cf0:	f1b9 0f00 	cmp.w	r9, #0
 8023cf4:	f340 80d8 	ble.w	8023ea8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8023cf8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023cfa:	1421      	asrs	r1, r4, #16
 8023cfc:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023d00:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023d04:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023d08:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023d0c:	f100 8111 	bmi.w	8023f32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023d10:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023d14:	4551      	cmp	r1, sl
 8023d16:	f280 810c 	bge.w	8023f32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023d1a:	2800      	cmp	r0, #0
 8023d1c:	f2c0 8109 	blt.w	8023f32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023d20:	f103 3aff 	add.w	sl, r3, #4294967295
 8023d24:	4550      	cmp	r0, sl
 8023d26:	f280 8104 	bge.w	8023f32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023d2a:	fa0f f38e 	sxth.w	r3, lr
 8023d2e:	fb00 1103 	mla	r1, r0, r3, r1
 8023d32:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023d34:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8023d38:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023d3c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023d40:	f1bc 0f00 	cmp.w	ip, #0
 8023d44:	d007      	beq.n	8023d56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8023d46:	005b      	lsls	r3, r3, #1
 8023d48:	eb0a 0003 	add.w	r0, sl, r3
 8023d4c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023d50:	930c      	str	r3, [sp, #48]	; 0x30
 8023d52:	8843      	ldrh	r3, [r0, #2]
 8023d54:	930d      	str	r3, [sp, #52]	; 0x34
 8023d56:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8023d5a:	fb12 f30c 	smulbb	r3, r2, ip
 8023d5e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023d62:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023d66:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023d6a:	10db      	asrs	r3, r3, #3
 8023d6c:	ea40 000e 	orr.w	r0, r0, lr
 8023d70:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023d74:	f1cc 0e10 	rsb	lr, ip, #16
 8023d78:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023d7c:	ebae 0e02 	sub.w	lr, lr, r2
 8023d80:	ea4a 0101 	orr.w	r1, sl, r1
 8023d84:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023d88:	4351      	muls	r1, r2
 8023d8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023d8c:	9f08      	ldr	r7, [sp, #32]
 8023d8e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023d92:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023d96:	0410      	lsls	r0, r2, #16
 8023d98:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023d9c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023da0:	4310      	orrs	r0, r2
 8023da2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023da4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023da6:	0412      	lsls	r2, r2, #16
 8023da8:	fb03 e000 	mla	r0, r3, r0, lr
 8023dac:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023db0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023db4:	ea42 020e 	orr.w	r2, r2, lr
 8023db8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023dbc:	fb03 0302 	mla	r3, r3, r2, r0
 8023dc0:	0d5a      	lsrs	r2, r3, #21
 8023dc2:	095b      	lsrs	r3, r3, #5
 8023dc4:	f8b8 0000 	ldrh.w	r0, [r8]
 8023dc8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023dcc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023dd0:	4313      	orrs	r3, r2
 8023dd2:	b29b      	uxth	r3, r3
 8023dd4:	1201      	asrs	r1, r0, #8
 8023dd6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8023dda:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023dde:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023de2:	fb11 f107 	smulbb	r1, r1, r7
 8023de6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023dea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023dee:	00c0      	lsls	r0, r0, #3
 8023df0:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023df4:	b2c0      	uxtb	r0, r0
 8023df6:	10d9      	asrs	r1, r3, #3
 8023df8:	00db      	lsls	r3, r3, #3
 8023dfa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023dfe:	b2db      	uxtb	r3, r3
 8023e00:	fb10 f007 	smulbb	r0, r0, r7
 8023e04:	fa1f fc8c 	uxth.w	ip, ip
 8023e08:	fb03 0302 	mla	r3, r3, r2, r0
 8023e0c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023e10:	fb1e fe07 	smulbb	lr, lr, r7
 8023e14:	fb01 e102 	mla	r1, r1, r2, lr
 8023e18:	b29a      	uxth	r2, r3
 8023e1a:	f10c 0301 	add.w	r3, ip, #1
 8023e1e:	b289      	uxth	r1, r1
 8023e20:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023e24:	1c53      	adds	r3, r2, #1
 8023e26:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e2a:	1c4a      	adds	r2, r1, #1
 8023e2c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023e30:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023e34:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023e38:	0949      	lsrs	r1, r1, #5
 8023e3a:	ea43 030c 	orr.w	r3, r3, ip
 8023e3e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023e42:	430b      	orrs	r3, r1
 8023e44:	f8a8 3000 	strh.w	r3, [r8]
 8023e48:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023e4a:	441c      	add	r4, r3
 8023e4c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e4e:	f108 0802 	add.w	r8, r8, #2
 8023e52:	441e      	add	r6, r3
 8023e54:	f109 39ff 	add.w	r9, r9, #4294967295
 8023e58:	e74a      	b.n	8023cf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023e5a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023e5c:	441c      	add	r4, r3
 8023e5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e60:	441e      	add	r6, r3
 8023e62:	9b07      	ldr	r3, [sp, #28]
 8023e64:	3302      	adds	r3, #2
 8023e66:	3d01      	subs	r5, #1
 8023e68:	9307      	str	r3, [sp, #28]
 8023e6a:	e722      	b.n	8023cb2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023e6c:	d022      	beq.n	8023eb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023e6e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023e70:	1e6b      	subs	r3, r5, #1
 8023e72:	fb00 4003 	mla	r0, r0, r3, r4
 8023e76:	1400      	asrs	r0, r0, #16
 8023e78:	f53f af37 	bmi.w	8023cea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023e7c:	3901      	subs	r1, #1
 8023e7e:	4288      	cmp	r0, r1
 8023e80:	f6bf af33 	bge.w	8023cea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023e84:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023e86:	fb01 6303 	mla	r3, r1, r3, r6
 8023e8a:	141b      	asrs	r3, r3, #16
 8023e8c:	f53f af2d 	bmi.w	8023cea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023e90:	3a01      	subs	r2, #1
 8023e92:	4293      	cmp	r3, r2
 8023e94:	f6bf af29 	bge.w	8023cea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023e98:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023e9c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023ea0:	46a8      	mov	r8, r5
 8023ea2:	f1b8 0f00 	cmp.w	r8, #0
 8023ea6:	dc5e      	bgt.n	8023f66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023ea8:	9b07      	ldr	r3, [sp, #28]
 8023eaa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023eae:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023eb2:	9307      	str	r3, [sp, #28]
 8023eb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023eb6:	2b00      	cmp	r3, #0
 8023eb8:	f340 80f6 	ble.w	80240a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023ebc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023ec0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023ec4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023ec8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023eca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023ece:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023ed2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023ed6:	eef0 6a62 	vmov.f32	s13, s5
 8023eda:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023ede:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023ee2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023ee6:	ee16 4a90 	vmov	r4, s13
 8023eea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023eee:	eef0 6a43 	vmov.f32	s13, s6
 8023ef2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023ef6:	ee12 2a90 	vmov	r2, s5
 8023efa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023efe:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f02:	ee13 2a10 	vmov	r2, s6
 8023f06:	931f      	str	r3, [sp, #124]	; 0x7c
 8023f08:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f0e:	9320      	str	r3, [sp, #128]	; 0x80
 8023f10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f12:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023f14:	3b01      	subs	r3, #1
 8023f16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f1a:	930a      	str	r3, [sp, #40]	; 0x28
 8023f1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f1e:	ee16 6a90 	vmov	r6, s13
 8023f22:	bf14      	ite	ne
 8023f24:	461d      	movne	r5, r3
 8023f26:	4615      	moveq	r5, r2
 8023f28:	eeb0 3a67 	vmov.f32	s6, s15
 8023f2c:	eef0 2a47 	vmov.f32	s5, s14
 8023f30:	e6b0      	b.n	8023c94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023f32:	f111 0a01 	adds.w	sl, r1, #1
 8023f36:	d487      	bmi.n	8023e48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023f38:	45d6      	cmp	lr, sl
 8023f3a:	db85      	blt.n	8023e48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023f3c:	f110 0a01 	adds.w	sl, r0, #1
 8023f40:	d482      	bmi.n	8023e48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023f42:	4553      	cmp	r3, sl
 8023f44:	db80      	blt.n	8023e48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023f46:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023f48:	9101      	str	r1, [sp, #4]
 8023f4a:	b21b      	sxth	r3, r3
 8023f4c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023f50:	9300      	str	r3, [sp, #0]
 8023f52:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023f56:	fa0f f38e 	sxth.w	r3, lr
 8023f5a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023f5c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023f5e:	4641      	mov	r1, r8
 8023f60:	f7ff fdb4 	bl	8023acc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023f64:	e770      	b.n	8023e48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023f66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023f68:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023f6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023f6e:	1430      	asrs	r0, r6, #16
 8023f70:	1423      	asrs	r3, r4, #16
 8023f72:	fb01 3000 	mla	r0, r1, r0, r3
 8023f76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023f78:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023f7c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023f80:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023f84:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023f88:	8858      	ldrh	r0, [r3, #2]
 8023f8a:	f1be 0f00 	cmp.w	lr, #0
 8023f8e:	d00b      	beq.n	8023fa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023f90:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023f94:	3901      	subs	r1, #1
 8023f96:	0049      	lsls	r1, r1, #1
 8023f98:	3102      	adds	r1, #2
 8023f9a:	eb03 0b01 	add.w	fp, r3, r1
 8023f9e:	5a5b      	ldrh	r3, [r3, r1]
 8023fa0:	930e      	str	r3, [sp, #56]	; 0x38
 8023fa2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023fa6:	930f      	str	r3, [sp, #60]	; 0x3c
 8023fa8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023fac:	fb12 f30e 	smulbb	r3, r2, lr
 8023fb0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023fb4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023fb8:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023fbc:	10db      	asrs	r3, r3, #3
 8023fbe:	ea41 010c 	orr.w	r1, r1, ip
 8023fc2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023fc6:	f1ce 0c10 	rsb	ip, lr, #16
 8023fca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023fce:	ebac 0c02 	sub.w	ip, ip, r2
 8023fd2:	ea4b 0000 	orr.w	r0, fp, r0
 8023fd6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023fda:	4350      	muls	r0, r2
 8023fdc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023fde:	9f08      	ldr	r7, [sp, #32]
 8023fe0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023fe4:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023fe8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023fec:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023ff0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023ff2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023ff4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023ff8:	0412      	lsls	r2, r2, #16
 8023ffa:	ea4b 0101 	orr.w	r1, fp, r1
 8023ffe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024002:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024006:	fb03 c101 	mla	r1, r3, r1, ip
 802400a:	4302      	orrs	r2, r0
 802400c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024010:	fb03 1202 	mla	r2, r3, r2, r1
 8024014:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024018:	0952      	lsrs	r2, r2, #5
 802401a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802401e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8024022:	f8b9 2000 	ldrh.w	r2, [r9]
 8024026:	ea4b 0303 	orr.w	r3, fp, r3
 802402a:	b29b      	uxth	r3, r3
 802402c:	1211      	asrs	r1, r2, #8
 802402e:	1218      	asrs	r0, r3, #8
 8024030:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024034:	fb11 f107 	smulbb	r1, r1, r7
 8024038:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 802403c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024040:	00d2      	lsls	r2, r2, #3
 8024042:	fb00 100a 	mla	r0, r0, sl, r1
 8024046:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802404a:	10d9      	asrs	r1, r3, #3
 802404c:	b2d2      	uxtb	r2, r2
 802404e:	00db      	lsls	r3, r3, #3
 8024050:	fb1c fc07 	smulbb	ip, ip, r7
 8024054:	fb12 f207 	smulbb	r2, r2, r7
 8024058:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802405c:	b2db      	uxtb	r3, r3
 802405e:	b280      	uxth	r0, r0
 8024060:	fb01 c10a 	mla	r1, r1, sl, ip
 8024064:	fb03 230a 	mla	r3, r3, sl, r2
 8024068:	b29b      	uxth	r3, r3
 802406a:	b289      	uxth	r1, r1
 802406c:	1c42      	adds	r2, r0, #1
 802406e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024072:	f101 0c01 	add.w	ip, r1, #1
 8024076:	1c5a      	adds	r2, r3, #1
 8024078:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802407c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024080:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024082:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024086:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802408a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802408e:	4310      	orrs	r0, r2
 8024090:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024094:	441c      	add	r4, r3
 8024096:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024098:	ea40 000c 	orr.w	r0, r0, ip
 802409c:	f829 0b02 	strh.w	r0, [r9], #2
 80240a0:	441e      	add	r6, r3
 80240a2:	f108 38ff 	add.w	r8, r8, #4294967295
 80240a6:	e6fc      	b.n	8023ea2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80240a8:	b013      	add	sp, #76	; 0x4c
 80240aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080240ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80240ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80240b2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80240b6:	fb0e 4703 	mla	r7, lr, r3, r4
 80240ba:	f1be 0f00 	cmp.w	lr, #0
 80240be:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80240c2:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80240c6:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80240ca:	8808      	ldrh	r0, [r1, #0]
 80240cc:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80240d0:	db60      	blt.n	8024194 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80240d2:	45f1      	cmp	r9, lr
 80240d4:	dd5e      	ble.n	8024194 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80240d6:	2c00      	cmp	r4, #0
 80240d8:	db5a      	blt.n	8024190 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80240da:	42a3      	cmp	r3, r4
 80240dc:	dd58      	ble.n	8024190 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80240de:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80240e2:	1c62      	adds	r2, r4, #1
 80240e4:	d459      	bmi.n	802419a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80240e6:	4293      	cmp	r3, r2
 80240e8:	dd57      	ble.n	802419a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80240ea:	2d00      	cmp	r5, #0
 80240ec:	d055      	beq.n	802419a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80240ee:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80240f2:	f11e 0e01 	adds.w	lr, lr, #1
 80240f6:	d454      	bmi.n	80241a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80240f8:	45f1      	cmp	r9, lr
 80240fa:	dd52      	ble.n	80241a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80240fc:	2e00      	cmp	r6, #0
 80240fe:	d050      	beq.n	80241a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024100:	2c00      	cmp	r4, #0
 8024102:	db4c      	blt.n	802419e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024104:	42a3      	cmp	r3, r4
 8024106:	dd4a      	ble.n	802419e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024108:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 802410c:	3401      	adds	r4, #1
 802410e:	d405      	bmi.n	802411c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024110:	42a3      	cmp	r3, r4
 8024112:	dd03      	ble.n	802411c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024114:	b115      	cbz	r5, 802411c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024116:	3301      	adds	r3, #1
 8024118:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 802411c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024120:	fb15 f406 	smulbb	r4, r5, r6
 8024124:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024128:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802412c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024130:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8024134:	ea43 0c0c 	orr.w	ip, r3, ip
 8024138:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802413c:	f1c6 0310 	rsb	r3, r6, #16
 8024140:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024144:	1b5b      	subs	r3, r3, r5
 8024146:	ea4e 0707 	orr.w	r7, lr, r7
 802414a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802414e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024152:	437d      	muls	r5, r7
 8024154:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024158:	0403      	lsls	r3, r0, #16
 802415a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802415e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024162:	4318      	orrs	r0, r3
 8024164:	0413      	lsls	r3, r2, #16
 8024166:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802416a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802416e:	4313      	orrs	r3, r2
 8024170:	fb04 c000 	mla	r0, r4, r0, ip
 8024174:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024178:	fb06 0003 	mla	r0, r6, r3, r0
 802417c:	0d43      	lsrs	r3, r0, #21
 802417e:	0940      	lsrs	r0, r0, #5
 8024180:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024184:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024188:	4318      	orrs	r0, r3
 802418a:	8008      	strh	r0, [r1, #0]
 802418c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024190:	4684      	mov	ip, r0
 8024192:	e7a6      	b.n	80240e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8024194:	4607      	mov	r7, r0
 8024196:	4684      	mov	ip, r0
 8024198:	e7ab      	b.n	80240f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802419a:	4607      	mov	r7, r0
 802419c:	e7a9      	b.n	80240f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802419e:	4602      	mov	r2, r0
 80241a0:	e7b4      	b.n	802410c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80241a2:	4602      	mov	r2, r0
 80241a4:	e7ba      	b.n	802411c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080241a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80241a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80241aa:	b08f      	sub	sp, #60	; 0x3c
 80241ac:	461d      	mov	r5, r3
 80241ae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80241b0:	920c      	str	r2, [sp, #48]	; 0x30
 80241b2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80241b6:	9107      	str	r1, [sp, #28]
 80241b8:	6859      	ldr	r1, [r3, #4]
 80241ba:	681b      	ldr	r3, [r3, #0]
 80241bc:	900d      	str	r0, [sp, #52]	; 0x34
 80241be:	fb01 2707 	mla	r7, r1, r7, r2
 80241c2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80241c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80241c8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80241cc:	f8d3 8000 	ldr.w	r8, [r3]
 80241d0:	9b07      	ldr	r3, [sp, #28]
 80241d2:	2b00      	cmp	r3, #0
 80241d4:	dc03      	bgt.n	80241de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80241d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80241d8:	2b00      	cmp	r3, #0
 80241da:	f340 8181 	ble.w	80244e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80241de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80241e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80241e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80241e8:	1e48      	subs	r0, r1, #1
 80241ea:	f102 3cff 	add.w	ip, r2, #4294967295
 80241ee:	2d00      	cmp	r5, #0
 80241f0:	f340 809b 	ble.w	802432a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80241f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80241f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80241fc:	d406      	bmi.n	802420c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80241fe:	4586      	cmp	lr, r0
 8024200:	da04      	bge.n	802420c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024202:	2b00      	cmp	r3, #0
 8024204:	db02      	blt.n	802420c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024206:	4563      	cmp	r3, ip
 8024208:	f2c0 8090 	blt.w	802432c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802420c:	f11e 0e01 	adds.w	lr, lr, #1
 8024210:	f100 8084 	bmi.w	802431c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024214:	4571      	cmp	r1, lr
 8024216:	f2c0 8081 	blt.w	802431c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802421a:	3301      	adds	r3, #1
 802421c:	d47e      	bmi.n	802431c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802421e:	429a      	cmp	r2, r3
 8024220:	db7c      	blt.n	802431c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024222:	46aa      	mov	sl, r5
 8024224:	46b9      	mov	r9, r7
 8024226:	f1ba 0f00 	cmp.w	sl, #0
 802422a:	f340 8099 	ble.w	8024360 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802422e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024230:	1421      	asrs	r1, r4, #16
 8024232:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024236:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802423a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802423e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024242:	f100 80d0 	bmi.w	80243e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024246:	f10e 3bff 	add.w	fp, lr, #4294967295
 802424a:	4559      	cmp	r1, fp
 802424c:	f280 80cb 	bge.w	80243e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024250:	2800      	cmp	r0, #0
 8024252:	f2c0 80c8 	blt.w	80243e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024256:	f103 3bff 	add.w	fp, r3, #4294967295
 802425a:	4558      	cmp	r0, fp
 802425c:	f280 80c3 	bge.w	80243e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024260:	fa0f fe8e 	sxth.w	lr, lr
 8024264:	fb00 110e 	mla	r1, r0, lr, r1
 8024268:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802426c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024270:	8841      	ldrh	r1, [r0, #2]
 8024272:	f1bc 0f00 	cmp.w	ip, #0
 8024276:	d00b      	beq.n	8024290 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8024278:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 802427c:	3b01      	subs	r3, #1
 802427e:	005b      	lsls	r3, r3, #1
 8024280:	3302      	adds	r3, #2
 8024282:	eb00 0e03 	add.w	lr, r0, r3
 8024286:	5ac3      	ldrh	r3, [r0, r3]
 8024288:	9308      	str	r3, [sp, #32]
 802428a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802428e:	9309      	str	r3, [sp, #36]	; 0x24
 8024290:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8024294:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024298:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802429c:	ea40 000b 	orr.w	r0, r0, fp
 80242a0:	fb12 f30c 	smulbb	r3, r2, ip
 80242a4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80242a8:	10db      	asrs	r3, r3, #3
 80242aa:	f1cc 0e10 	rsb	lr, ip, #16
 80242ae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80242b2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80242b6:	ebae 0e02 	sub.w	lr, lr, r2
 80242ba:	ea4b 0101 	orr.w	r1, fp, r1
 80242be:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80242c2:	4351      	muls	r1, r2
 80242c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80242c6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80242ca:	fb0e 1e00 	mla	lr, lr, r0, r1
 80242ce:	0410      	lsls	r0, r2, #16
 80242d0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80242d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80242d8:	4310      	orrs	r0, r2
 80242da:	9a08      	ldr	r2, [sp, #32]
 80242dc:	9908      	ldr	r1, [sp, #32]
 80242de:	0412      	lsls	r2, r2, #16
 80242e0:	fb03 e000 	mla	r0, r3, r0, lr
 80242e4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80242e8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80242ec:	ea42 020e 	orr.w	r2, r2, lr
 80242f0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80242f4:	fb03 0302 	mla	r3, r3, r2, r0
 80242f8:	0d5a      	lsrs	r2, r3, #21
 80242fa:	095b      	lsrs	r3, r3, #5
 80242fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024300:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024304:	4313      	orrs	r3, r2
 8024306:	f8a9 3000 	strh.w	r3, [r9]
 802430a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802430c:	441c      	add	r4, r3
 802430e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024310:	f109 0902 	add.w	r9, r9, #2
 8024314:	441e      	add	r6, r3
 8024316:	f10a 3aff 	add.w	sl, sl, #4294967295
 802431a:	e784      	b.n	8024226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802431c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802431e:	441c      	add	r4, r3
 8024320:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024322:	3d01      	subs	r5, #1
 8024324:	441e      	add	r6, r3
 8024326:	3702      	adds	r7, #2
 8024328:	e761      	b.n	80241ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802432a:	d01d      	beq.n	8024368 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802432c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802432e:	1e6b      	subs	r3, r5, #1
 8024330:	fb00 4003 	mla	r0, r0, r3, r4
 8024334:	1400      	asrs	r0, r0, #16
 8024336:	f53f af74 	bmi.w	8024222 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802433a:	3901      	subs	r1, #1
 802433c:	4288      	cmp	r0, r1
 802433e:	f6bf af70 	bge.w	8024222 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024342:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024344:	fb01 6303 	mla	r3, r1, r3, r6
 8024348:	141b      	asrs	r3, r3, #16
 802434a:	f53f af6a 	bmi.w	8024222 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802434e:	3a01      	subs	r2, #1
 8024350:	4293      	cmp	r3, r2
 8024352:	f6bf af66 	bge.w	8024222 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024356:	46a9      	mov	r9, r5
 8024358:	46ba      	mov	sl, r7
 802435a:	f1b9 0f00 	cmp.w	r9, #0
 802435e:	dc5a      	bgt.n	8024416 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8024360:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024364:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8024368:	9b07      	ldr	r3, [sp, #28]
 802436a:	2b00      	cmp	r3, #0
 802436c:	f340 80b8 	ble.w	80244e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024370:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024374:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024378:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802437c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802437e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024382:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024386:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802438a:	eef0 6a62 	vmov.f32	s13, s5
 802438e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024392:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024396:	ee77 2a62 	vsub.f32	s5, s14, s5
 802439a:	ee16 4a90 	vmov	r4, s13
 802439e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80243a2:	eef0 6a43 	vmov.f32	s13, s6
 80243a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80243aa:	ee12 2a90 	vmov	r2, s5
 80243ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80243b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80243b6:	ee13 2a10 	vmov	r2, s6
 80243ba:	931b      	str	r3, [sp, #108]	; 0x6c
 80243bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80243be:	fb92 f3f3 	sdiv	r3, r2, r3
 80243c2:	931c      	str	r3, [sp, #112]	; 0x70
 80243c4:	9b07      	ldr	r3, [sp, #28]
 80243c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80243c8:	3b01      	subs	r3, #1
 80243ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243ce:	9307      	str	r3, [sp, #28]
 80243d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80243d2:	ee16 6a90 	vmov	r6, s13
 80243d6:	bf14      	ite	ne
 80243d8:	461d      	movne	r5, r3
 80243da:	4615      	moveq	r5, r2
 80243dc:	eeb0 3a67 	vmov.f32	s6, s15
 80243e0:	eef0 2a47 	vmov.f32	s5, s14
 80243e4:	e6f4      	b.n	80241d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80243e6:	f111 0b01 	adds.w	fp, r1, #1
 80243ea:	d48e      	bmi.n	802430a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80243ec:	45de      	cmp	lr, fp
 80243ee:	db8c      	blt.n	802430a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80243f0:	f110 0b01 	adds.w	fp, r0, #1
 80243f4:	d489      	bmi.n	802430a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80243f6:	455b      	cmp	r3, fp
 80243f8:	db87      	blt.n	802430a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80243fa:	b21b      	sxth	r3, r3
 80243fc:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024400:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024404:	9300      	str	r3, [sp, #0]
 8024406:	4642      	mov	r2, r8
 8024408:	fa0f f38e 	sxth.w	r3, lr
 802440c:	4649      	mov	r1, r9
 802440e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024410:	f7ff fe4d 	bl	80240ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024414:	e779      	b.n	802430a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024416:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024418:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802441c:	1420      	asrs	r0, r4, #16
 802441e:	1431      	asrs	r1, r6, #16
 8024420:	fb03 0101 	mla	r1, r3, r1, r0
 8024424:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024428:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802442c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024430:	8841      	ldrh	r1, [r0, #2]
 8024432:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024436:	f1be 0f00 	cmp.w	lr, #0
 802443a:	d00b      	beq.n	8024454 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802443c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024440:	3b01      	subs	r3, #1
 8024442:	005b      	lsls	r3, r3, #1
 8024444:	3302      	adds	r3, #2
 8024446:	eb00 0b03 	add.w	fp, r0, r3
 802444a:	5ac3      	ldrh	r3, [r0, r3]
 802444c:	930a      	str	r3, [sp, #40]	; 0x28
 802444e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024452:	930b      	str	r3, [sp, #44]	; 0x2c
 8024454:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8024458:	fb12 f30e 	smulbb	r3, r2, lr
 802445c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024460:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024464:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024468:	10db      	asrs	r3, r3, #3
 802446a:	ea40 000c 	orr.w	r0, r0, ip
 802446e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024472:	f1ce 0c10 	rsb	ip, lr, #16
 8024476:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802447a:	ebac 0c02 	sub.w	ip, ip, r2
 802447e:	ea4b 0101 	orr.w	r1, fp, r1
 8024482:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024486:	4351      	muls	r1, r2
 8024488:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802448a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802448e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024492:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024496:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802449a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802449c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802449e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80244a2:	0412      	lsls	r2, r2, #16
 80244a4:	ea4b 0000 	orr.w	r0, fp, r0
 80244a8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80244ac:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80244b0:	fb03 c000 	mla	r0, r3, r0, ip
 80244b4:	ea42 0b0b 	orr.w	fp, r2, fp
 80244b8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80244bc:	fb03 000b 	mla	r0, r3, fp, r0
 80244c0:	0d43      	lsrs	r3, r0, #21
 80244c2:	0940      	lsrs	r0, r0, #5
 80244c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80244c8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80244cc:	4318      	orrs	r0, r3
 80244ce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80244d0:	f82a 0b02 	strh.w	r0, [sl], #2
 80244d4:	441c      	add	r4, r3
 80244d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80244d8:	f109 39ff 	add.w	r9, r9, #4294967295
 80244dc:	441e      	add	r6, r3
 80244de:	e73c      	b.n	802435a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80244e0:	b00f      	add	sp, #60	; 0x3c
 80244e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080244e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80244e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244ea:	b085      	sub	sp, #20
 80244ec:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80244f0:	9102      	str	r1, [sp, #8]
 80244f2:	2c00      	cmp	r4, #0
 80244f4:	fb04 7103 	mla	r1, r4, r3, r7
 80244f8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80244fc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024500:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024504:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024508:	f2c0 811b 	blt.w	8024742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802450c:	45a6      	cmp	lr, r4
 802450e:	f340 8118 	ble.w	8024742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024512:	2f00      	cmp	r7, #0
 8024514:	f2c0 8113 	blt.w	802473e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024518:	42bb      	cmp	r3, r7
 802451a:	f340 8110 	ble.w	802473e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802451e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024522:	1c7a      	adds	r2, r7, #1
 8024524:	f100 8110 	bmi.w	8024748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024528:	4293      	cmp	r3, r2
 802452a:	f340 810d 	ble.w	8024748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802452e:	2e00      	cmp	r6, #0
 8024530:	f000 810c 	beq.w	802474c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024534:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024538:	3401      	adds	r4, #1
 802453a:	f100 810b 	bmi.w	8024754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802453e:	45a6      	cmp	lr, r4
 8024540:	f340 8108 	ble.w	8024754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024544:	2800      	cmp	r0, #0
 8024546:	f000 8108 	beq.w	802475a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802454a:	2f00      	cmp	r7, #0
 802454c:	f2c0 8100 	blt.w	8024750 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024550:	42bb      	cmp	r3, r7
 8024552:	f340 80fd 	ble.w	8024750 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024556:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802455a:	3701      	adds	r7, #1
 802455c:	f100 8100 	bmi.w	8024760 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024560:	42bb      	cmp	r3, r7
 8024562:	f340 80fd 	ble.w	8024760 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024566:	2e00      	cmp	r6, #0
 8024568:	f000 80fc 	beq.w	8024764 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802456c:	3301      	adds	r3, #1
 802456e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024572:	b2b6      	uxth	r6, r6
 8024574:	b280      	uxth	r0, r0
 8024576:	fb00 fe06 	mul.w	lr, r0, r6
 802457a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802457e:	0136      	lsls	r6, r6, #4
 8024580:	eba6 070e 	sub.w	r7, r6, lr
 8024584:	b280      	uxth	r0, r0
 8024586:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802458a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802458e:	b2bf      	uxth	r7, r7
 8024590:	1a1b      	subs	r3, r3, r0
 8024592:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024596:	b29b      	uxth	r3, r3
 8024598:	fb0a f607 	mul.w	r6, sl, r7
 802459c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80245a0:	fb0b 6603 	mla	r6, fp, r3, r6
 80245a4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80245a8:	fb00 6609 	mla	r6, r0, r9, r6
 80245ac:	fb0e 6608 	mla	r6, lr, r8, r6
 80245b0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80245b4:	9600      	str	r6, [sp, #0]
 80245b6:	2e00      	cmp	r6, #0
 80245b8:	f000 80be 	beq.w	8024738 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80245bc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80245c0:	fb0b fc0c 	mul.w	ip, fp, ip
 80245c4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80245c8:	fb0b f505 	mul.w	r5, fp, r5
 80245cc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80245d0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80245d4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80245d8:	44dc      	add	ip, fp
 80245da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245de:	9501      	str	r5, [sp, #4]
 80245e0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80245e4:	9503      	str	r5, [sp, #12]
 80245e6:	9d01      	ldr	r5, [sp, #4]
 80245e8:	9e02      	ldr	r6, [sp, #8]
 80245ea:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80245ee:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80245f2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80245f6:	fb0a fc0c 	mul.w	ip, sl, ip
 80245fa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80245fe:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024602:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024606:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802460a:	4465      	add	r5, ip
 802460c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024610:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024614:	fb09 fc0c 	mul.w	ip, r9, ip
 8024618:	fb09 f904 	mul.w	r9, r9, r4
 802461c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024620:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024624:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024628:	fb08 f404 	mul.w	r4, r8, r4
 802462c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024630:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024634:	fb08 f802 	mul.w	r8, r8, r2
 8024638:	fb0a fa01 	mul.w	sl, sl, r1
 802463c:	0a22      	lsrs	r2, r4, #8
 802463e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024642:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024646:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802464a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802464e:	4414      	add	r4, r2
 8024650:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024654:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024658:	0a2d      	lsrs	r5, r5, #8
 802465a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802465e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024662:	9a03      	ldr	r2, [sp, #12]
 8024664:	8836      	ldrh	r6, [r6, #0]
 8024666:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802466a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802466e:	437d      	muls	r5, r7
 8024670:	4461      	add	r1, ip
 8024672:	0a24      	lsrs	r4, r4, #8
 8024674:	fb02 5503 	mla	r5, r2, r3, r5
 8024678:	0a09      	lsrs	r1, r1, #8
 802467a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802467e:	fb04 540e 	mla	r4, r4, lr, r5
 8024682:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024686:	fb01 4100 	mla	r1, r1, r0, r4
 802468a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802468e:	0a09      	lsrs	r1, r1, #8
 8024690:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024694:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024698:	fb07 f70a 	mul.w	r7, r7, sl
 802469c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80246a0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80246a4:	fb03 7101 	mla	r1, r3, r1, r7
 80246a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80246ac:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80246b0:	fb0e 1e08 	mla	lr, lr, r8, r1
 80246b4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80246b8:	fb00 e101 	mla	r1, r0, r1, lr
 80246bc:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80246c0:	9a00      	ldr	r2, [sp, #0]
 80246c2:	b287      	uxth	r7, r0
 80246c4:	437a      	muls	r2, r7
 80246c6:	0a09      	lsrs	r1, r1, #8
 80246c8:	1c53      	adds	r3, r2, #1
 80246ca:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80246ce:	4321      	orrs	r1, r4
 80246d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80246d4:	1235      	asrs	r5, r6, #8
 80246d6:	0c0a      	lsrs	r2, r1, #16
 80246d8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80246dc:	b2db      	uxtb	r3, r3
 80246de:	fb12 f207 	smulbb	r2, r2, r7
 80246e2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80246e6:	fb05 2503 	mla	r5, r5, r3, r2
 80246ea:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80246ee:	10f2      	asrs	r2, r6, #3
 80246f0:	b2c8      	uxtb	r0, r1
 80246f2:	00f6      	lsls	r6, r6, #3
 80246f4:	fb14 f407 	smulbb	r4, r4, r7
 80246f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80246fc:	b2f6      	uxtb	r6, r6
 80246fe:	fb10 f007 	smulbb	r0, r0, r7
 8024702:	fb02 4203 	mla	r2, r2, r3, r4
 8024706:	b2ad      	uxth	r5, r5
 8024708:	fb06 0303 	mla	r3, r6, r3, r0
 802470c:	b299      	uxth	r1, r3
 802470e:	b294      	uxth	r4, r2
 8024710:	1c6b      	adds	r3, r5, #1
 8024712:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024716:	1c62      	adds	r2, r4, #1
 8024718:	1c4b      	adds	r3, r1, #1
 802471a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802471e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024722:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024726:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802472a:	0952      	lsrs	r2, r2, #5
 802472c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024730:	432b      	orrs	r3, r5
 8024732:	4313      	orrs	r3, r2
 8024734:	9a02      	ldr	r2, [sp, #8]
 8024736:	8013      	strh	r3, [r2, #0]
 8024738:	b005      	add	sp, #20
 802473a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802473e:	2500      	movs	r5, #0
 8024740:	e6ef      	b.n	8024522 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8024742:	2100      	movs	r1, #0
 8024744:	460d      	mov	r5, r1
 8024746:	e6f7      	b.n	8024538 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024748:	2100      	movs	r1, #0
 802474a:	e6f5      	b.n	8024538 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802474c:	4631      	mov	r1, r6
 802474e:	e6f3      	b.n	8024538 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024750:	2400      	movs	r4, #0
 8024752:	e702      	b.n	802455a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8024754:	2200      	movs	r2, #0
 8024756:	4614      	mov	r4, r2
 8024758:	e70b      	b.n	8024572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802475a:	4602      	mov	r2, r0
 802475c:	4604      	mov	r4, r0
 802475e:	e708      	b.n	8024572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024760:	2200      	movs	r2, #0
 8024762:	e706      	b.n	8024572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024764:	4632      	mov	r2, r6
 8024766:	e704      	b.n	8024572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08024768 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802476c:	b09d      	sub	sp, #116	; 0x74
 802476e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8024772:	9219      	str	r2, [sp, #100]	; 0x64
 8024774:	9307      	str	r3, [sp, #28]
 8024776:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8024778:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802477c:	931a      	str	r3, [sp, #104]	; 0x68
 802477e:	9117      	str	r1, [sp, #92]	; 0x5c
 8024780:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024784:	901b      	str	r0, [sp, #108]	; 0x6c
 8024786:	6850      	ldr	r0, [r2, #4]
 8024788:	6812      	ldr	r2, [r2, #0]
 802478a:	fb00 1303 	mla	r3, r0, r3, r1
 802478e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024792:	930a      	str	r3, [sp, #40]	; 0x28
 8024794:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024796:	681b      	ldr	r3, [r3, #0]
 8024798:	9310      	str	r3, [sp, #64]	; 0x40
 802479a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802479e:	930b      	str	r3, [sp, #44]	; 0x2c
 80247a0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80247a2:	2b00      	cmp	r3, #0
 80247a4:	dc03      	bgt.n	80247ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80247a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80247a8:	2b00      	cmp	r3, #0
 80247aa:	f340 8375 	ble.w	8024e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80247ae:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80247b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80247b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80247b8:	1e48      	subs	r0, r1, #1
 80247ba:	1e57      	subs	r7, r2, #1
 80247bc:	9b07      	ldr	r3, [sp, #28]
 80247be:	2b00      	cmp	r3, #0
 80247c0:	f340 818e 	ble.w	8024ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80247c4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80247c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80247cc:	d406      	bmi.n	80247dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80247ce:	4584      	cmp	ip, r0
 80247d0:	da04      	bge.n	80247dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80247d2:	2b00      	cmp	r3, #0
 80247d4:	db02      	blt.n	80247dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80247d6:	42bb      	cmp	r3, r7
 80247d8:	f2c0 8183 	blt.w	8024ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80247dc:	f11c 0c01 	adds.w	ip, ip, #1
 80247e0:	f100 8173 	bmi.w	8024aca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80247e4:	4561      	cmp	r1, ip
 80247e6:	f2c0 8170 	blt.w	8024aca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80247ea:	3301      	adds	r3, #1
 80247ec:	f100 816d 	bmi.w	8024aca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80247f0:	429a      	cmp	r2, r3
 80247f2:	f2c0 816a 	blt.w	8024aca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80247f6:	9b07      	ldr	r3, [sp, #28]
 80247f8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80247fa:	9318      	str	r3, [sp, #96]	; 0x60
 80247fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80247fe:	2b00      	cmp	r3, #0
 8024800:	f340 818c 	ble.w	8024b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024804:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8024806:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024808:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802480c:	689b      	ldr	r3, [r3, #8]
 802480e:	1422      	asrs	r2, r4, #16
 8024810:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024814:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024818:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802481c:	f100 81cd 	bmi.w	8024bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024820:	f103 38ff 	add.w	r8, r3, #4294967295
 8024824:	4542      	cmp	r2, r8
 8024826:	f280 81c8 	bge.w	8024bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802482a:	f1bc 0f00 	cmp.w	ip, #0
 802482e:	f2c0 81c4 	blt.w	8024bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024832:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024836:	45c4      	cmp	ip, r8
 8024838:	f280 81bf 	bge.w	8024bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802483c:	b21b      	sxth	r3, r3
 802483e:	fb0c 2203 	mla	r2, ip, r3, r2
 8024842:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024844:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024848:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802484c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024850:	2800      	cmp	r0, #0
 8024852:	f000 81a9 	beq.w	8024ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8024856:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802485a:	950c      	str	r5, [sp, #48]	; 0x30
 802485c:	0e2d      	lsrs	r5, r5, #24
 802485e:	9513      	str	r5, [sp, #76]	; 0x4c
 8024860:	b181      	cbz	r1, 8024884 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024862:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024866:	3b01      	subs	r3, #1
 8024868:	009b      	lsls	r3, r3, #2
 802486a:	3304      	adds	r3, #4
 802486c:	eb08 0c03 	add.w	ip, r8, r3
 8024870:	f858 3003 	ldr.w	r3, [r8, r3]
 8024874:	9308      	str	r3, [sp, #32]
 8024876:	0e1b      	lsrs	r3, r3, #24
 8024878:	9311      	str	r3, [sp, #68]	; 0x44
 802487a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802487e:	930d      	str	r3, [sp, #52]	; 0x34
 8024880:	0e1b      	lsrs	r3, r3, #24
 8024882:	9314      	str	r3, [sp, #80]	; 0x50
 8024884:	b280      	uxth	r0, r0
 8024886:	b289      	uxth	r1, r1
 8024888:	fb00 f901 	mul.w	r9, r0, r1
 802488c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024890:	0100      	lsls	r0, r0, #4
 8024892:	eba0 0809 	sub.w	r8, r0, r9
 8024896:	b289      	uxth	r1, r1
 8024898:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802489c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802489e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80248a0:	fa1f f888 	uxth.w	r8, r8
 80248a4:	1a5b      	subs	r3, r3, r1
 80248a6:	b29b      	uxth	r3, r3
 80248a8:	fb08 f000 	mul.w	r0, r8, r0
 80248ac:	fb03 000e 	mla	r0, r3, lr, r0
 80248b0:	fb01 0005 	mla	r0, r1, r5, r0
 80248b4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80248b6:	fb09 0005 	mla	r0, r9, r5, r0
 80248ba:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80248be:	2800      	cmp	r0, #0
 80248c0:	f000 80fa 	beq.w	8024ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80248c4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80248c8:	d01b      	beq.n	8024902 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80248ca:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80248ce:	fb0e fa0a 	mul.w	sl, lr, sl
 80248d2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80248d6:	fb0e fe02 	mul.w	lr, lr, r2
 80248da:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80248de:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80248e2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80248e6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80248ea:	4452      	add	r2, sl
 80248ec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80248f0:	0a12      	lsrs	r2, r2, #8
 80248f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80248f6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80248fa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80248fe:	ea42 020c 	orr.w	r2, r2, ip
 8024902:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024904:	2dff      	cmp	r5, #255	; 0xff
 8024906:	d021      	beq.n	802494c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024908:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802490a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802490e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024910:	fb05 fb0b 	mul.w	fp, r5, fp
 8024914:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024916:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802491a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802491c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024920:	fb05 fa0a 	mul.w	sl, r5, sl
 8024924:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024928:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802492c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024930:	44de      	add	lr, fp
 8024932:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024936:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802493a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802493e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024942:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024946:	ea4e 050a 	orr.w	r5, lr, sl
 802494a:	950c      	str	r5, [sp, #48]	; 0x30
 802494c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802494e:	2dff      	cmp	r5, #255	; 0xff
 8024950:	d021      	beq.n	8024996 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8024952:	9d08      	ldr	r5, [sp, #32]
 8024954:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024958:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802495a:	fb05 fb0b 	mul.w	fp, r5, fp
 802495e:	9d08      	ldr	r5, [sp, #32]
 8024960:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024964:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024966:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802496a:	fb05 fa0a 	mul.w	sl, r5, sl
 802496e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024972:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024976:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802497a:	44de      	add	lr, fp
 802497c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024980:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024984:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024988:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802498c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024990:	ea4e 050a 	orr.w	r5, lr, sl
 8024994:	9508      	str	r5, [sp, #32]
 8024996:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024998:	2dff      	cmp	r5, #255	; 0xff
 802499a:	d021      	beq.n	80249e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802499c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802499e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80249a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80249a4:	fb05 fb0b 	mul.w	fp, r5, fp
 80249a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80249aa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80249ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80249b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80249b4:	fb05 fa0a 	mul.w	sl, r5, sl
 80249b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80249bc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80249c0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80249c4:	44de      	add	lr, fp
 80249c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80249ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80249ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80249d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80249d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80249da:	ea4e 050a 	orr.w	r5, lr, sl
 80249de:	950d      	str	r5, [sp, #52]	; 0x34
 80249e0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80249e2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80249e6:	9d08      	ldr	r5, [sp, #32]
 80249e8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80249ec:	fb08 fc0c 	mul.w	ip, r8, ip
 80249f0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80249f4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80249f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80249fa:	fb01 cc0e 	mla	ip, r1, lr, ip
 80249fe:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024a02:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024a04:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024a08:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024a0c:	fb08 f80e 	mul.w	r8, r8, lr
 8024a10:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024a14:	fb03 8202 	mla	r2, r3, r2, r8
 8024a18:	9b08      	ldr	r3, [sp, #32]
 8024a1a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024a1c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8024a20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024a22:	fb01 220a 	mla	r2, r1, sl, r2
 8024a26:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8024a2a:	fb09 2901 	mla	r9, r9, r1, r2
 8024a2e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024a30:	883b      	ldrh	r3, [r7, #0]
 8024a32:	4342      	muls	r2, r0
 8024a34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a38:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024a3c:	1c50      	adds	r0, r2, #1
 8024a3e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a42:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024a46:	ea4c 0c09 	orr.w	ip, ip, r9
 8024a4a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8024a4e:	1219      	asrs	r1, r3, #8
 8024a50:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024a54:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024a58:	b2c0      	uxtb	r0, r0
 8024a5a:	fb12 f205 	smulbb	r2, r2, r5
 8024a5e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024a62:	fb01 2100 	mla	r1, r1, r0, r2
 8024a66:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8024a6a:	10da      	asrs	r2, r3, #3
 8024a6c:	fa5f fc8c 	uxtb.w	ip, ip
 8024a70:	00db      	lsls	r3, r3, #3
 8024a72:	fb1c fc05 	smulbb	ip, ip, r5
 8024a76:	b2db      	uxtb	r3, r3
 8024a78:	b289      	uxth	r1, r1
 8024a7a:	fb03 c300 	mla	r3, r3, r0, ip
 8024a7e:	fa1f fc83 	uxth.w	ip, r3
 8024a82:	1c4b      	adds	r3, r1, #1
 8024a84:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024a88:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024a8c:	fb1e fe05 	smulbb	lr, lr, r5
 8024a90:	f10c 0301 	add.w	r3, ip, #1
 8024a94:	fb02 e200 	mla	r2, r2, r0, lr
 8024a98:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024a9c:	b292      	uxth	r2, r2
 8024a9e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024aa2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024aa6:	430b      	orrs	r3, r1
 8024aa8:	1c51      	adds	r1, r2, #1
 8024aaa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024aae:	0952      	lsrs	r2, r2, #5
 8024ab0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ab4:	4313      	orrs	r3, r2
 8024ab6:	803b      	strh	r3, [r7, #0]
 8024ab8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024aba:	441c      	add	r4, r3
 8024abc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024abe:	441e      	add	r6, r3
 8024ac0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024ac2:	3b01      	subs	r3, #1
 8024ac4:	3702      	adds	r7, #2
 8024ac6:	9318      	str	r3, [sp, #96]	; 0x60
 8024ac8:	e698      	b.n	80247fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024aca:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024acc:	441c      	add	r4, r3
 8024ace:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024ad0:	441e      	add	r6, r3
 8024ad2:	9b07      	ldr	r3, [sp, #28]
 8024ad4:	3b01      	subs	r3, #1
 8024ad6:	9307      	str	r3, [sp, #28]
 8024ad8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024ada:	3302      	adds	r3, #2
 8024adc:	930a      	str	r3, [sp, #40]	; 0x28
 8024ade:	e66d      	b.n	80247bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024ae0:	d023      	beq.n	8024b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024ae2:	9b07      	ldr	r3, [sp, #28]
 8024ae4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8024ae6:	3b01      	subs	r3, #1
 8024ae8:	fb00 4003 	mla	r0, r0, r3, r4
 8024aec:	1400      	asrs	r0, r0, #16
 8024aee:	f53f ae82 	bmi.w	80247f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024af2:	3901      	subs	r1, #1
 8024af4:	4288      	cmp	r0, r1
 8024af6:	f6bf ae7e 	bge.w	80247f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024afa:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8024afc:	fb01 6303 	mla	r3, r1, r3, r6
 8024b00:	141b      	asrs	r3, r3, #16
 8024b02:	f53f ae78 	bmi.w	80247f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024b06:	3a01      	subs	r2, #1
 8024b08:	4293      	cmp	r3, r2
 8024b0a:	f6bf ae74 	bge.w	80247f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024b0e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024b12:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024b16:	f1bb 0f00 	cmp.w	fp, #0
 8024b1a:	dc6c      	bgt.n	8024bf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024b1c:	9b07      	ldr	r3, [sp, #28]
 8024b1e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024b22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024b24:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024b28:	930a      	str	r3, [sp, #40]	; 0x28
 8024b2a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024b2c:	2b00      	cmp	r3, #0
 8024b2e:	f340 81b3 	ble.w	8024e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024b32:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024b36:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024b3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024b3e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024b40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024b44:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024b48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024b4c:	eef0 6a62 	vmov.f32	s13, s5
 8024b50:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024b54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b58:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024b5c:	ee16 4a90 	vmov	r4, s13
 8024b60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024b64:	eef0 6a43 	vmov.f32	s13, s6
 8024b68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024b6c:	ee12 2a90 	vmov	r2, s5
 8024b70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024b74:	fb92 f3f3 	sdiv	r3, r2, r3
 8024b78:	ee13 2a10 	vmov	r2, s6
 8024b7c:	9329      	str	r3, [sp, #164]	; 0xa4
 8024b7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024b80:	fb92 f3f3 	sdiv	r3, r2, r3
 8024b84:	932a      	str	r3, [sp, #168]	; 0xa8
 8024b86:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024b88:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8024b8a:	3b01      	subs	r3, #1
 8024b8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b90:	9317      	str	r3, [sp, #92]	; 0x5c
 8024b92:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024b94:	bf08      	it	eq
 8024b96:	4613      	moveq	r3, r2
 8024b98:	ee16 6a90 	vmov	r6, s13
 8024b9c:	9307      	str	r3, [sp, #28]
 8024b9e:	eeb0 3a67 	vmov.f32	s6, s15
 8024ba2:	eef0 2a47 	vmov.f32	s5, s14
 8024ba6:	e5fb      	b.n	80247a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024ba8:	2900      	cmp	r1, #0
 8024baa:	f43f ae6b 	beq.w	8024884 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024bae:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024bb2:	9308      	str	r3, [sp, #32]
 8024bb4:	0e1b      	lsrs	r3, r3, #24
 8024bb6:	9311      	str	r3, [sp, #68]	; 0x44
 8024bb8:	e664      	b.n	8024884 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024bba:	f112 0801 	adds.w	r8, r2, #1
 8024bbe:	f53f af7b 	bmi.w	8024ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024bc2:	4543      	cmp	r3, r8
 8024bc4:	f6ff af78 	blt.w	8024ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024bc8:	f11c 0801 	adds.w	r8, ip, #1
 8024bcc:	f53f af74 	bmi.w	8024ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024bd0:	45c6      	cmp	lr, r8
 8024bd2:	f6ff af71 	blt.w	8024ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024bd6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8024bd8:	9201      	str	r2, [sp, #4]
 8024bda:	fa0f f28e 	sxth.w	r2, lr
 8024bde:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8024be2:	e9cd c002 	strd	ip, r0, [sp, #8]
 8024be6:	9200      	str	r2, [sp, #0]
 8024be8:	b21b      	sxth	r3, r3
 8024bea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024bec:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024bee:	4639      	mov	r1, r7
 8024bf0:	f7ff fc79 	bl	80244e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024bf4:	e760      	b.n	8024ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024bf6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024bf8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024bfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024bfe:	1427      	asrs	r7, r4, #16
 8024c00:	1433      	asrs	r3, r6, #16
 8024c02:	fb01 7303 	mla	r3, r1, r3, r7
 8024c06:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8024c0a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024c0e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024c12:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024c16:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024c1a:	2a00      	cmp	r2, #0
 8024c1c:	f000 8133 	beq.w	8024e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024c20:	687d      	ldr	r5, [r7, #4]
 8024c22:	950e      	str	r5, [sp, #56]	; 0x38
 8024c24:	0e2d      	lsrs	r5, r5, #24
 8024c26:	9515      	str	r5, [sp, #84]	; 0x54
 8024c28:	b178      	cbz	r0, 8024c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024c2a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024c2e:	3901      	subs	r1, #1
 8024c30:	0089      	lsls	r1, r1, #2
 8024c32:	3104      	adds	r1, #4
 8024c34:	eb07 0e01 	add.w	lr, r7, r1
 8024c38:	5879      	ldr	r1, [r7, r1]
 8024c3a:	9109      	str	r1, [sp, #36]	; 0x24
 8024c3c:	0e09      	lsrs	r1, r1, #24
 8024c3e:	9112      	str	r1, [sp, #72]	; 0x48
 8024c40:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024c44:	910f      	str	r1, [sp, #60]	; 0x3c
 8024c46:	0e09      	lsrs	r1, r1, #24
 8024c48:	9116      	str	r1, [sp, #88]	; 0x58
 8024c4a:	b292      	uxth	r2, r2
 8024c4c:	b280      	uxth	r0, r0
 8024c4e:	fb02 f800 	mul.w	r8, r2, r0
 8024c52:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024c56:	0112      	lsls	r2, r2, #4
 8024c58:	eba2 0e08 	sub.w	lr, r2, r8
 8024c5c:	b280      	uxth	r0, r0
 8024c5e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024c62:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024c64:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024c66:	fa1f fe8e 	uxth.w	lr, lr
 8024c6a:	1a12      	subs	r2, r2, r0
 8024c6c:	b292      	uxth	r2, r2
 8024c6e:	fb0e f101 	mul.w	r1, lr, r1
 8024c72:	fb02 110c 	mla	r1, r2, ip, r1
 8024c76:	fb00 1105 	mla	r1, r0, r5, r1
 8024c7a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024c7c:	fb08 1105 	mla	r1, r8, r5, r1
 8024c80:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024c84:	2900      	cmp	r1, #0
 8024c86:	f000 80f5 	beq.w	8024e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8024c8a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024c8e:	d019      	beq.n	8024cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024c90:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024c94:	fb0c fa0a 	mul.w	sl, ip, sl
 8024c98:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024c9c:	fb0c fc03 	mul.w	ip, ip, r3
 8024ca0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024ca4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024ca8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024cac:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024cb0:	4453      	add	r3, sl
 8024cb2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024cb6:	0a1b      	lsrs	r3, r3, #8
 8024cb8:	0a3f      	lsrs	r7, r7, #8
 8024cba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024cbe:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024cc2:	433b      	orrs	r3, r7
 8024cc4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024cc6:	2dff      	cmp	r5, #255	; 0xff
 8024cc8:	d020      	beq.n	8024d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8024cca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024ccc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024cd0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024cd2:	436f      	muls	r7, r5
 8024cd4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024cd6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024cda:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024cdc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024ce0:	fb05 fa0a 	mul.w	sl, r5, sl
 8024ce4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024ce8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024cec:	44bc      	add	ip, r7
 8024cee:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024cf2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024cf6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024cfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024cfe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d06:	ea4c 050a 	orr.w	r5, ip, sl
 8024d0a:	950e      	str	r5, [sp, #56]	; 0x38
 8024d0c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024d0e:	2dff      	cmp	r5, #255	; 0xff
 8024d10:	d020      	beq.n	8024d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024d12:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024d14:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024d18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024d1a:	436f      	muls	r7, r5
 8024d1c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024d1e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024d22:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024d24:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024d28:	fb05 fa0a 	mul.w	sl, r5, sl
 8024d2c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024d30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d34:	44bc      	add	ip, r7
 8024d36:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024d3a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024d3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d4a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d4e:	ea4c 050a 	orr.w	r5, ip, sl
 8024d52:	9509      	str	r5, [sp, #36]	; 0x24
 8024d54:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024d56:	2dff      	cmp	r5, #255	; 0xff
 8024d58:	d020      	beq.n	8024d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8024d5a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024d5c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024d60:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024d62:	436f      	muls	r7, r5
 8024d64:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024d66:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024d6a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024d6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024d70:	fb05 fa0a 	mul.w	sl, r5, sl
 8024d74:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024d78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d7c:	44bc      	add	ip, r7
 8024d7e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024d82:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024d86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d96:	ea4c 050a 	orr.w	r5, ip, sl
 8024d9a:	950f      	str	r5, [sp, #60]	; 0x3c
 8024d9c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024d9e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024da2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024da4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024da8:	fb0e f707 	mul.w	r7, lr, r7
 8024dac:	fb02 770c 	mla	r7, r2, ip, r7
 8024db0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024db4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024db6:	fb00 770c 	mla	r7, r0, ip, r7
 8024dba:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024dbe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024dc0:	fb08 770c 	mla	r7, r8, ip, r7
 8024dc4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024dc8:	fb0e fe0c 	mul.w	lr, lr, ip
 8024dcc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024dd0:	fb02 e303 	mla	r3, r2, r3, lr
 8024dd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024dd6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024dd8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024ddc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024dde:	fb00 330a 	mla	r3, r0, sl, r3
 8024de2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024de6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024dea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024dec:	f8b9 0000 	ldrh.w	r0, [r9]
 8024df0:	4359      	muls	r1, r3
 8024df2:	0a3f      	lsrs	r7, r7, #8
 8024df4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024df8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024dfc:	1c4b      	adds	r3, r1, #1
 8024dfe:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024e02:	ea47 070c 	orr.w	r7, r7, ip
 8024e06:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024e0a:	1202      	asrs	r2, r0, #8
 8024e0c:	0c3b      	lsrs	r3, r7, #16
 8024e0e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024e12:	b2c9      	uxtb	r1, r1
 8024e14:	fb13 f305 	smulbb	r3, r3, r5
 8024e18:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024e1c:	fb02 3201 	mla	r2, r2, r1, r3
 8024e20:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024e24:	10c3      	asrs	r3, r0, #3
 8024e26:	b2ff      	uxtb	r7, r7
 8024e28:	00c0      	lsls	r0, r0, #3
 8024e2a:	b2c0      	uxtb	r0, r0
 8024e2c:	fb17 f705 	smulbb	r7, r7, r5
 8024e30:	fb00 7001 	mla	r0, r0, r1, r7
 8024e34:	b292      	uxth	r2, r2
 8024e36:	fb1c fc05 	smulbb	ip, ip, r5
 8024e3a:	b280      	uxth	r0, r0
 8024e3c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024e40:	fb03 c301 	mla	r3, r3, r1, ip
 8024e44:	1c51      	adds	r1, r2, #1
 8024e46:	f100 0c01 	add.w	ip, r0, #1
 8024e4a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024e4e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024e52:	b29b      	uxth	r3, r3
 8024e54:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024e58:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024e5c:	ea4c 0202 	orr.w	r2, ip, r2
 8024e60:	f103 0c01 	add.w	ip, r3, #1
 8024e64:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024e68:	095b      	lsrs	r3, r3, #5
 8024e6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024e6e:	431a      	orrs	r2, r3
 8024e70:	f8a9 2000 	strh.w	r2, [r9]
 8024e74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024e76:	441c      	add	r4, r3
 8024e78:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024e7a:	f109 0902 	add.w	r9, r9, #2
 8024e7e:	441e      	add	r6, r3
 8024e80:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024e84:	e647      	b.n	8024b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024e86:	2800      	cmp	r0, #0
 8024e88:	f43f aedf 	beq.w	8024c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024e8c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024e90:	9109      	str	r1, [sp, #36]	; 0x24
 8024e92:	0e09      	lsrs	r1, r1, #24
 8024e94:	9112      	str	r1, [sp, #72]	; 0x48
 8024e96:	e6d8      	b.n	8024c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024e98:	b01d      	add	sp, #116	; 0x74
 8024e9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024e9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024ea2:	b085      	sub	sp, #20
 8024ea4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024ea8:	9102      	str	r1, [sp, #8]
 8024eaa:	2c00      	cmp	r4, #0
 8024eac:	fb04 7103 	mla	r1, r4, r3, r7
 8024eb0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024eb4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024eb8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024ebc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024ec0:	f2c0 810c 	blt.w	80250dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024ec4:	45a6      	cmp	lr, r4
 8024ec6:	f340 8109 	ble.w	80250dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024eca:	2f00      	cmp	r7, #0
 8024ecc:	f2c0 8104 	blt.w	80250d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024ed0:	42bb      	cmp	r3, r7
 8024ed2:	f340 8101 	ble.w	80250d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024ed6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024eda:	1c7a      	adds	r2, r7, #1
 8024edc:	f100 8101 	bmi.w	80250e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024ee0:	4293      	cmp	r3, r2
 8024ee2:	f340 80fe 	ble.w	80250e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024ee6:	2e00      	cmp	r6, #0
 8024ee8:	f000 80fd 	beq.w	80250e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024eec:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024ef0:	3401      	adds	r4, #1
 8024ef2:	f100 80fc 	bmi.w	80250ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024ef6:	45a6      	cmp	lr, r4
 8024ef8:	f340 80f9 	ble.w	80250ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024efc:	2800      	cmp	r0, #0
 8024efe:	f000 80f9 	beq.w	80250f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024f02:	2f00      	cmp	r7, #0
 8024f04:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024f08:	f2c0 80ef 	blt.w	80250ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024f0c:	42bb      	cmp	r3, r7
 8024f0e:	f340 80ec 	ble.w	80250ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024f12:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024f16:	3701      	adds	r7, #1
 8024f18:	f100 80ef 	bmi.w	80250fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024f1c:	42bb      	cmp	r3, r7
 8024f1e:	f340 80ec 	ble.w	80250fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024f22:	2e00      	cmp	r6, #0
 8024f24:	f000 80eb 	beq.w	80250fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024f28:	6852      	ldr	r2, [r2, #4]
 8024f2a:	b2b6      	uxth	r6, r6
 8024f2c:	b280      	uxth	r0, r0
 8024f2e:	fb00 fe06 	mul.w	lr, r0, r6
 8024f32:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024f36:	0136      	lsls	r6, r6, #4
 8024f38:	eba6 070e 	sub.w	r7, r6, lr
 8024f3c:	b280      	uxth	r0, r0
 8024f3e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024f42:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024f46:	b2bf      	uxth	r7, r7
 8024f48:	1a1b      	subs	r3, r3, r0
 8024f4a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024f4e:	b29b      	uxth	r3, r3
 8024f50:	fb07 f60a 	mul.w	r6, r7, sl
 8024f54:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024f58:	fb0b 6603 	mla	r6, fp, r3, r6
 8024f5c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024f60:	fb00 6609 	mla	r6, r0, r9, r6
 8024f64:	fb0e 6608 	mla	r6, lr, r8, r6
 8024f68:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024f6c:	9600      	str	r6, [sp, #0]
 8024f6e:	2e00      	cmp	r6, #0
 8024f70:	f000 80af 	beq.w	80250d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024f74:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024f78:	fb0b fc0c 	mul.w	ip, fp, ip
 8024f7c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024f80:	fb0b f505 	mul.w	r5, fp, r5
 8024f84:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024f88:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024f8c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024f90:	44dc      	add	ip, fp
 8024f92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f96:	9501      	str	r5, [sp, #4]
 8024f98:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024f9c:	9503      	str	r5, [sp, #12]
 8024f9e:	9d01      	ldr	r5, [sp, #4]
 8024fa0:	9e02      	ldr	r6, [sp, #8]
 8024fa2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024fa6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024faa:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024fae:	fb0a fc0c 	mul.w	ip, sl, ip
 8024fb2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024fb6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024fba:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024fbe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024fc2:	4465      	add	r5, ip
 8024fc4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024fc8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024fcc:	fb09 fc0c 	mul.w	ip, r9, ip
 8024fd0:	fb09 f904 	mul.w	r9, r9, r4
 8024fd4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024fd8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024fdc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024fe0:	fb08 f404 	mul.w	r4, r8, r4
 8024fe4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024fe8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024fec:	fb08 f802 	mul.w	r8, r8, r2
 8024ff0:	fb0a fa01 	mul.w	sl, sl, r1
 8024ff4:	0a22      	lsrs	r2, r4, #8
 8024ff6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024ffa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024ffe:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8025002:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8025006:	4414      	add	r4, r2
 8025008:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802500c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025010:	0a2d      	lsrs	r5, r5, #8
 8025012:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8025016:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802501a:	9a03      	ldr	r2, [sp, #12]
 802501c:	8836      	ldrh	r6, [r6, #0]
 802501e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025022:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025026:	437d      	muls	r5, r7
 8025028:	4461      	add	r1, ip
 802502a:	0a24      	lsrs	r4, r4, #8
 802502c:	fb02 5503 	mla	r5, r2, r3, r5
 8025030:	0a09      	lsrs	r1, r1, #8
 8025032:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8025036:	fb04 540e 	mla	r4, r4, lr, r5
 802503a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802503e:	fb01 4100 	mla	r1, r1, r0, r4
 8025042:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025046:	0a09      	lsrs	r1, r1, #8
 8025048:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802504c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025050:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025054:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025058:	fb07 f70a 	mul.w	r7, r7, sl
 802505c:	fb03 7101 	mla	r1, r3, r1, r7
 8025060:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025064:	9b00      	ldr	r3, [sp, #0]
 8025066:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802506a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802506e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025072:	fb00 e101 	mla	r1, r0, r1, lr
 8025076:	43da      	mvns	r2, r3
 8025078:	1233      	asrs	r3, r6, #8
 802507a:	b2d2      	uxtb	r2, r2
 802507c:	10f0      	asrs	r0, r6, #3
 802507e:	0a09      	lsrs	r1, r1, #8
 8025080:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025084:	00f6      	lsls	r6, r6, #3
 8025086:	4353      	muls	r3, r2
 8025088:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802508c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025090:	b2f6      	uxtb	r6, r6
 8025092:	4321      	orrs	r1, r4
 8025094:	4350      	muls	r0, r2
 8025096:	4356      	muls	r6, r2
 8025098:	1c5a      	adds	r2, r3, #1
 802509a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802509e:	0c0b      	lsrs	r3, r1, #16
 80250a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80250a4:	1c42      	adds	r2, r0, #1
 80250a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80250aa:	0a0a      	lsrs	r2, r1, #8
 80250ac:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80250b0:	021b      	lsls	r3, r3, #8
 80250b2:	00d2      	lsls	r2, r2, #3
 80250b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80250b8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80250bc:	4313      	orrs	r3, r2
 80250be:	1c72      	adds	r2, r6, #1
 80250c0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80250c4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80250c8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80250cc:	4319      	orrs	r1, r3
 80250ce:	9b02      	ldr	r3, [sp, #8]
 80250d0:	8019      	strh	r1, [r3, #0]
 80250d2:	b005      	add	sp, #20
 80250d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80250d8:	2500      	movs	r5, #0
 80250da:	e6fe      	b.n	8024eda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80250dc:	2100      	movs	r1, #0
 80250de:	460d      	mov	r5, r1
 80250e0:	e706      	b.n	8024ef0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80250e2:	2100      	movs	r1, #0
 80250e4:	e704      	b.n	8024ef0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80250e6:	4631      	mov	r1, r6
 80250e8:	e702      	b.n	8024ef0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80250ea:	2400      	movs	r4, #0
 80250ec:	e713      	b.n	8024f16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80250ee:	2200      	movs	r2, #0
 80250f0:	4614      	mov	r4, r2
 80250f2:	e71a      	b.n	8024f2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80250f4:	4602      	mov	r2, r0
 80250f6:	4604      	mov	r4, r0
 80250f8:	e717      	b.n	8024f2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80250fa:	2200      	movs	r2, #0
 80250fc:	e715      	b.n	8024f2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80250fe:	4632      	mov	r2, r6
 8025100:	e713      	b.n	8024f2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08025104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025108:	b09b      	sub	sp, #108	; 0x6c
 802510a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802510e:	9218      	str	r2, [sp, #96]	; 0x60
 8025110:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8025112:	9116      	str	r1, [sp, #88]	; 0x58
 8025114:	9307      	str	r3, [sp, #28]
 8025116:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802511a:	9019      	str	r0, [sp, #100]	; 0x64
 802511c:	6850      	ldr	r0, [r2, #4]
 802511e:	6812      	ldr	r2, [r2, #0]
 8025120:	fb00 1303 	mla	r3, r0, r3, r1
 8025124:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025128:	930a      	str	r3, [sp, #40]	; 0x28
 802512a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802512c:	681b      	ldr	r3, [r3, #0]
 802512e:	930f      	str	r3, [sp, #60]	; 0x3c
 8025130:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025132:	2b00      	cmp	r3, #0
 8025134:	dc03      	bgt.n	802513e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025136:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025138:	2b00      	cmp	r3, #0
 802513a:	f340 8386 	ble.w	802584a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802513e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025140:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025144:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025148:	1e48      	subs	r0, r1, #1
 802514a:	1e57      	subs	r7, r2, #1
 802514c:	9b07      	ldr	r3, [sp, #28]
 802514e:	2b00      	cmp	r3, #0
 8025150:	f340 8166 	ble.w	8025420 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8025154:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025158:	ea4f 4326 	mov.w	r3, r6, asr #16
 802515c:	d406      	bmi.n	802516c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802515e:	4584      	cmp	ip, r0
 8025160:	da04      	bge.n	802516c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025162:	2b00      	cmp	r3, #0
 8025164:	db02      	blt.n	802516c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025166:	42bb      	cmp	r3, r7
 8025168:	f2c0 815b 	blt.w	8025422 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802516c:	f11c 0c01 	adds.w	ip, ip, #1
 8025170:	f100 814b 	bmi.w	802540a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025174:	4561      	cmp	r1, ip
 8025176:	f2c0 8148 	blt.w	802540a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802517a:	3301      	adds	r3, #1
 802517c:	f100 8145 	bmi.w	802540a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025180:	429a      	cmp	r2, r3
 8025182:	f2c0 8142 	blt.w	802540a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025186:	9b07      	ldr	r3, [sp, #28]
 8025188:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802518a:	9317      	str	r3, [sp, #92]	; 0x5c
 802518c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802518e:	2b00      	cmp	r3, #0
 8025190:	f340 8165 	ble.w	802545e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8025194:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8025196:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025198:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802519c:	689b      	ldr	r3, [r3, #8]
 802519e:	1422      	asrs	r2, r4, #16
 80251a0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80251a4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80251a8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80251ac:	f100 81d5 	bmi.w	802555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80251b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80251b4:	4542      	cmp	r2, r8
 80251b6:	f280 81d0 	bge.w	802555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80251ba:	f1bc 0f00 	cmp.w	ip, #0
 80251be:	f2c0 81cc 	blt.w	802555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80251c2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80251c6:	45c4      	cmp	ip, r8
 80251c8:	f280 81c7 	bge.w	802555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80251cc:	b21b      	sxth	r3, r3
 80251ce:	fb0c 2203 	mla	r2, ip, r3, r2
 80251d2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80251d4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80251d8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80251dc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80251e0:	2900      	cmp	r1, #0
 80251e2:	f000 8182 	beq.w	80254ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80251e6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80251ea:	950b      	str	r5, [sp, #44]	; 0x2c
 80251ec:	0e2d      	lsrs	r5, r5, #24
 80251ee:	9512      	str	r5, [sp, #72]	; 0x48
 80251f0:	b180      	cbz	r0, 8025214 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80251f2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80251f6:	3b01      	subs	r3, #1
 80251f8:	009b      	lsls	r3, r3, #2
 80251fa:	3304      	adds	r3, #4
 80251fc:	eb08 0c03 	add.w	ip, r8, r3
 8025200:	f858 3003 	ldr.w	r3, [r8, r3]
 8025204:	9308      	str	r3, [sp, #32]
 8025206:	0e1b      	lsrs	r3, r3, #24
 8025208:	9310      	str	r3, [sp, #64]	; 0x40
 802520a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802520e:	930c      	str	r3, [sp, #48]	; 0x30
 8025210:	0e1b      	lsrs	r3, r3, #24
 8025212:	9313      	str	r3, [sp, #76]	; 0x4c
 8025214:	b289      	uxth	r1, r1
 8025216:	b280      	uxth	r0, r0
 8025218:	fb01 f900 	mul.w	r9, r1, r0
 802521c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025220:	0109      	lsls	r1, r1, #4
 8025222:	eba1 0809 	sub.w	r8, r1, r9
 8025226:	b280      	uxth	r0, r0
 8025228:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 802522c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802522e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025230:	fa1f f888 	uxth.w	r8, r8
 8025234:	1a09      	subs	r1, r1, r0
 8025236:	b289      	uxth	r1, r1
 8025238:	fb08 f303 	mul.w	r3, r8, r3
 802523c:	fb01 330e 	mla	r3, r1, lr, r3
 8025240:	fb00 3305 	mla	r3, r0, r5, r3
 8025244:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025246:	fb09 3305 	mla	r3, r9, r5, r3
 802524a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802524e:	2b00      	cmp	r3, #0
 8025250:	f000 80d2 	beq.w	80253f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025254:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025258:	d01b      	beq.n	8025292 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802525a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802525e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025262:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025266:	fb0e fe02 	mul.w	lr, lr, r2
 802526a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802526e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025272:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025276:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802527a:	4452      	add	r2, sl
 802527c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025280:	0a12      	lsrs	r2, r2, #8
 8025282:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025286:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802528a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802528e:	ea42 020c 	orr.w	r2, r2, ip
 8025292:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025294:	2dff      	cmp	r5, #255	; 0xff
 8025296:	d021      	beq.n	80252dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8025298:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802529a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802529e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80252a0:	fb05 fb0b 	mul.w	fp, r5, fp
 80252a4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80252a6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80252aa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80252ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80252b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80252b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80252b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80252bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80252c0:	44de      	add	lr, fp
 80252c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80252c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80252ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80252ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80252d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80252d6:	ea4e 050a 	orr.w	r5, lr, sl
 80252da:	950b      	str	r5, [sp, #44]	; 0x2c
 80252dc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80252de:	2dff      	cmp	r5, #255	; 0xff
 80252e0:	d021      	beq.n	8025326 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80252e2:	9d08      	ldr	r5, [sp, #32]
 80252e4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80252e8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80252ea:	fb05 fb0b 	mul.w	fp, r5, fp
 80252ee:	9d08      	ldr	r5, [sp, #32]
 80252f0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80252f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80252f6:	fb05 fa0e 	mul.w	sl, r5, lr
 80252fa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80252fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025302:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025306:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802530a:	44de      	add	lr, fp
 802530c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025310:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025314:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025318:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802531c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025320:	ea4e 050a 	orr.w	r5, lr, sl
 8025324:	9508      	str	r5, [sp, #32]
 8025326:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025328:	2dff      	cmp	r5, #255	; 0xff
 802532a:	d021      	beq.n	8025370 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802532c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802532e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025332:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025334:	fb05 fb0b 	mul.w	fp, r5, fp
 8025338:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802533a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802533e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025340:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025344:	fb05 fa0a 	mul.w	sl, r5, sl
 8025348:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802534c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025350:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025354:	44de      	add	lr, fp
 8025356:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802535a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802535e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025362:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025366:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802536a:	ea4e 050a 	orr.w	r5, lr, sl
 802536e:	950c      	str	r5, [sp, #48]	; 0x30
 8025370:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025372:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025376:	9d08      	ldr	r5, [sp, #32]
 8025378:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802537c:	fb08 fc0c 	mul.w	ip, r8, ip
 8025380:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025384:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025388:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802538a:	fb00 cc0e 	mla	ip, r0, lr, ip
 802538e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025392:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025394:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025398:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802539c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80253a0:	fb08 f80e 	mul.w	r8, r8, lr
 80253a4:	fb01 8202 	mla	r2, r1, r2, r8
 80253a8:	9908      	ldr	r1, [sp, #32]
 80253aa:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80253ae:	990c      	ldr	r1, [sp, #48]	; 0x30
 80253b0:	fb00 220a 	mla	r2, r0, sl, r2
 80253b4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80253b8:	fb09 2900 	mla	r9, r9, r0, r2
 80253bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80253c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80253c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80253c8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80253cc:	ea4c 0c09 	orr.w	ip, ip, r9
 80253d0:	2bff      	cmp	r3, #255	; 0xff
 80253d2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80253d6:	f040 8091 	bne.w	80254fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80253da:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80253de:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80253e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80253e6:	f022 0207 	bic.w	r2, r2, #7
 80253ea:	431a      	orrs	r2, r3
 80253ec:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80253f0:	ea4c 0c02 	orr.w	ip, ip, r2
 80253f4:	f8a7 c000 	strh.w	ip, [r7]
 80253f8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80253fa:	441c      	add	r4, r3
 80253fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80253fe:	441e      	add	r6, r3
 8025400:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025402:	3b01      	subs	r3, #1
 8025404:	3702      	adds	r7, #2
 8025406:	9317      	str	r3, [sp, #92]	; 0x5c
 8025408:	e6c0      	b.n	802518c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802540a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802540c:	441c      	add	r4, r3
 802540e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025410:	441e      	add	r6, r3
 8025412:	9b07      	ldr	r3, [sp, #28]
 8025414:	3b01      	subs	r3, #1
 8025416:	9307      	str	r3, [sp, #28]
 8025418:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802541a:	3302      	adds	r3, #2
 802541c:	930a      	str	r3, [sp, #40]	; 0x28
 802541e:	e695      	b.n	802514c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025420:	d024      	beq.n	802546c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025422:	9b07      	ldr	r3, [sp, #28]
 8025424:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025426:	3b01      	subs	r3, #1
 8025428:	fb00 4003 	mla	r0, r0, r3, r4
 802542c:	1400      	asrs	r0, r0, #16
 802542e:	f53f aeaa 	bmi.w	8025186 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025432:	3901      	subs	r1, #1
 8025434:	4288      	cmp	r0, r1
 8025436:	f6bf aea6 	bge.w	8025186 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802543a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802543c:	fb01 6303 	mla	r3, r1, r3, r6
 8025440:	141b      	asrs	r3, r3, #16
 8025442:	f53f aea0 	bmi.w	8025186 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025446:	3a01      	subs	r2, #1
 8025448:	4293      	cmp	r3, r2
 802544a:	f6bf ae9c 	bge.w	8025186 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802544e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025452:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8025456:	f1bb 0f00 	cmp.w	fp, #0
 802545a:	f300 809a 	bgt.w	8025592 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802545e:	9b07      	ldr	r3, [sp, #28]
 8025460:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025464:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025466:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802546a:	930a      	str	r3, [sp, #40]	; 0x28
 802546c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802546e:	2b00      	cmp	r3, #0
 8025470:	f340 81eb 	ble.w	802584a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025474:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025478:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802547c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025480:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025482:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025486:	ee31 1a05 	vadd.f32	s2, s2, s10
 802548a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802548e:	eef0 6a62 	vmov.f32	s13, s5
 8025492:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025496:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802549a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802549e:	ee16 4a90 	vmov	r4, s13
 80254a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80254a6:	eef0 6a43 	vmov.f32	s13, s6
 80254aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80254ae:	ee12 2a90 	vmov	r2, s5
 80254b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80254b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80254ba:	ee13 2a10 	vmov	r2, s6
 80254be:	9327      	str	r3, [sp, #156]	; 0x9c
 80254c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80254c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80254c6:	9328      	str	r3, [sp, #160]	; 0xa0
 80254c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80254ca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80254cc:	3b01      	subs	r3, #1
 80254ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80254d2:	9316      	str	r3, [sp, #88]	; 0x58
 80254d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80254d6:	bf08      	it	eq
 80254d8:	4613      	moveq	r3, r2
 80254da:	ee16 6a90 	vmov	r6, s13
 80254de:	9307      	str	r3, [sp, #28]
 80254e0:	eeb0 3a67 	vmov.f32	s6, s15
 80254e4:	eef0 2a47 	vmov.f32	s5, s14
 80254e8:	e622      	b.n	8025130 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80254ea:	2800      	cmp	r0, #0
 80254ec:	f43f ae92 	beq.w	8025214 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80254f0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80254f4:	9308      	str	r3, [sp, #32]
 80254f6:	0e1b      	lsrs	r3, r3, #24
 80254f8:	9310      	str	r3, [sp, #64]	; 0x40
 80254fa:	e68b      	b.n	8025214 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80254fc:	8839      	ldrh	r1, [r7, #0]
 80254fe:	4dd4      	ldr	r5, [pc, #848]	; (8025850 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025500:	43db      	mvns	r3, r3
 8025502:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8025506:	fa5f f883 	uxtb.w	r8, r3
 802550a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802550e:	fb0e fe08 	mul.w	lr, lr, r8
 8025512:	10c8      	asrs	r0, r1, #3
 8025514:	00cb      	lsls	r3, r1, #3
 8025516:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802551a:	f10e 0101 	add.w	r1, lr, #1
 802551e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025522:	fb00 f008 	mul.w	r0, r0, r8
 8025526:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802552a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802552e:	f100 0e01 	add.w	lr, r0, #1
 8025532:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8025536:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802553a:	b2db      	uxtb	r3, r3
 802553c:	b2c9      	uxtb	r1, r1
 802553e:	00d2      	lsls	r2, r2, #3
 8025540:	fb03 f308 	mul.w	r3, r3, r8
 8025544:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8025548:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802554c:	430a      	orrs	r2, r1
 802554e:	1c59      	adds	r1, r3, #1
 8025550:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025554:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025558:	e748      	b.n	80253ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802555a:	f112 0801 	adds.w	r8, r2, #1
 802555e:	f53f af4b 	bmi.w	80253f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025562:	4543      	cmp	r3, r8
 8025564:	f6ff af48 	blt.w	80253f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025568:	f11c 0801 	adds.w	r8, ip, #1
 802556c:	f53f af44 	bmi.w	80253f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025570:	45c6      	cmp	lr, r8
 8025572:	f6ff af41 	blt.w	80253f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025576:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802557a:	fa0f f28e 	sxth.w	r2, lr
 802557e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025582:	9200      	str	r2, [sp, #0]
 8025584:	b21b      	sxth	r3, r3
 8025586:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025588:	9819      	ldr	r0, [sp, #100]	; 0x64
 802558a:	4639      	mov	r1, r7
 802558c:	f7ff fc87 	bl	8024e9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025590:	e732      	b.n	80253f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025592:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025594:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025596:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802559a:	1421      	asrs	r1, r4, #16
 802559c:	1433      	asrs	r3, r6, #16
 802559e:	fb07 1303 	mla	r3, r7, r3, r1
 80255a2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80255a4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80255a8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80255ac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80255b0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80255b4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80255b8:	2a00      	cmp	r2, #0
 80255ba:	f000 8107 	beq.w	80257cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80255be:	684d      	ldr	r5, [r1, #4]
 80255c0:	950d      	str	r5, [sp, #52]	; 0x34
 80255c2:	0e2d      	lsrs	r5, r5, #24
 80255c4:	9514      	str	r5, [sp, #80]	; 0x50
 80255c6:	b178      	cbz	r0, 80255e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80255c8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80255cc:	3f01      	subs	r7, #1
 80255ce:	00bf      	lsls	r7, r7, #2
 80255d0:	3704      	adds	r7, #4
 80255d2:	eb01 0e07 	add.w	lr, r1, r7
 80255d6:	59c9      	ldr	r1, [r1, r7]
 80255d8:	9109      	str	r1, [sp, #36]	; 0x24
 80255da:	0e09      	lsrs	r1, r1, #24
 80255dc:	9111      	str	r1, [sp, #68]	; 0x44
 80255de:	f8de 1004 	ldr.w	r1, [lr, #4]
 80255e2:	910e      	str	r1, [sp, #56]	; 0x38
 80255e4:	0e09      	lsrs	r1, r1, #24
 80255e6:	9115      	str	r1, [sp, #84]	; 0x54
 80255e8:	b292      	uxth	r2, r2
 80255ea:	b280      	uxth	r0, r0
 80255ec:	fb02 f900 	mul.w	r9, r2, r0
 80255f0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80255f4:	0112      	lsls	r2, r2, #4
 80255f6:	eba2 0e09 	sub.w	lr, r2, r9
 80255fa:	b280      	uxth	r0, r0
 80255fc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025600:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025602:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025604:	fa1f fe8e 	uxth.w	lr, lr
 8025608:	1a09      	subs	r1, r1, r0
 802560a:	b289      	uxth	r1, r1
 802560c:	fb0e f202 	mul.w	r2, lr, r2
 8025610:	fb01 220c 	mla	r2, r1, ip, r2
 8025614:	fb00 2205 	mla	r2, r0, r5, r2
 8025618:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802561a:	fb09 2205 	mla	r2, r9, r5, r2
 802561e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025622:	2a00      	cmp	r2, #0
 8025624:	f000 80c9 	beq.w	80257ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025628:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802562c:	d019      	beq.n	8025662 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802562e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025632:	fb0c fa0a 	mul.w	sl, ip, sl
 8025636:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802563a:	fb0c fc03 	mul.w	ip, ip, r3
 802563e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025642:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025646:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802564a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802564e:	4453      	add	r3, sl
 8025650:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025654:	0a1b      	lsrs	r3, r3, #8
 8025656:	0a3f      	lsrs	r7, r7, #8
 8025658:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802565c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025660:	433b      	orrs	r3, r7
 8025662:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025664:	2dff      	cmp	r5, #255	; 0xff
 8025666:	d020      	beq.n	80256aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8025668:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802566a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802566e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025670:	436f      	muls	r7, r5
 8025672:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025674:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025678:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802567a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802567e:	fb05 fa0a 	mul.w	sl, r5, sl
 8025682:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025686:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802568a:	44bc      	add	ip, r7
 802568c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025690:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025694:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025698:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802569c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80256a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80256a4:	ea4c 050a 	orr.w	r5, ip, sl
 80256a8:	950d      	str	r5, [sp, #52]	; 0x34
 80256aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256ac:	2dff      	cmp	r5, #255	; 0xff
 80256ae:	d020      	beq.n	80256f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80256b0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80256b2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80256b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256b8:	436f      	muls	r7, r5
 80256ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80256bc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80256c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256c2:	fb05 fa0c 	mul.w	sl, r5, ip
 80256c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80256ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80256ce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80256d2:	44bc      	add	ip, r7
 80256d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80256d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80256dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80256e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80256e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80256e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80256ec:	ea4c 050a 	orr.w	r5, ip, sl
 80256f0:	9509      	str	r5, [sp, #36]	; 0x24
 80256f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80256f4:	2dff      	cmp	r5, #255	; 0xff
 80256f6:	d020      	beq.n	802573a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80256f8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80256fa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80256fe:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025700:	436f      	muls	r7, r5
 8025702:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025704:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025708:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802570a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802570e:	fb05 fa0a 	mul.w	sl, r5, sl
 8025712:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025716:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802571a:	44bc      	add	ip, r7
 802571c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025720:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025728:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802572c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025730:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025734:	ea4c 050a 	orr.w	r5, ip, sl
 8025738:	950e      	str	r5, [sp, #56]	; 0x38
 802573a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802573c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025740:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025742:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025746:	fb0e f707 	mul.w	r7, lr, r7
 802574a:	fb01 770c 	mla	r7, r1, ip, r7
 802574e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025752:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025754:	fb00 770c 	mla	r7, r0, ip, r7
 8025758:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802575c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802575e:	fb09 770c 	mla	r7, r9, ip, r7
 8025762:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025766:	fb0e fe0c 	mul.w	lr, lr, ip
 802576a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802576e:	fb01 e303 	mla	r3, r1, r3, lr
 8025772:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025774:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025778:	990e      	ldr	r1, [sp, #56]	; 0x38
 802577a:	fb00 330a 	mla	r3, r0, sl, r3
 802577e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025782:	fb09 3c0c 	mla	ip, r9, ip, r3
 8025786:	0a3f      	lsrs	r7, r7, #8
 8025788:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802578c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025790:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025794:	ea47 070c 	orr.w	r7, r7, ip
 8025798:	2aff      	cmp	r2, #255	; 0xff
 802579a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802579e:	d11e      	bne.n	80257de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80257a0:	097a      	lsrs	r2, r7, #5
 80257a2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80257a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80257aa:	f023 0307 	bic.w	r3, r3, #7
 80257ae:	4313      	orrs	r3, r2
 80257b0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80257b4:	431f      	orrs	r7, r3
 80257b6:	f8a8 7000 	strh.w	r7, [r8]
 80257ba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80257bc:	441c      	add	r4, r3
 80257be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257c0:	f108 0802 	add.w	r8, r8, #2
 80257c4:	441e      	add	r6, r3
 80257c6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80257ca:	e644      	b.n	8025456 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80257cc:	2800      	cmp	r0, #0
 80257ce:	f43f af0b 	beq.w	80255e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80257d2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80257d6:	9109      	str	r1, [sp, #36]	; 0x24
 80257d8:	0e09      	lsrs	r1, r1, #24
 80257da:	9111      	str	r1, [sp, #68]	; 0x44
 80257dc:	e704      	b.n	80255e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80257de:	f8b8 1000 	ldrh.w	r1, [r8]
 80257e2:	43d2      	mvns	r2, r2
 80257e4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80257e8:	fa5f fe82 	uxtb.w	lr, r2
 80257ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80257f0:	fb0c fc0e 	mul.w	ip, ip, lr
 80257f4:	10c8      	asrs	r0, r1, #3
 80257f6:	00ca      	lsls	r2, r1, #3
 80257f8:	f10c 0101 	add.w	r1, ip, #1
 80257fc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025800:	0c39      	lsrs	r1, r7, #16
 8025802:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025806:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802580a:	4911      	ldr	r1, [pc, #68]	; (8025850 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802580c:	fb00 f00e 	mul.w	r0, r0, lr
 8025810:	fa5f fc8c 	uxtb.w	ip, ip
 8025814:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8025818:	b2d2      	uxtb	r2, r2
 802581a:	1c41      	adds	r1, r0, #1
 802581c:	fb02 f20e 	mul.w	r2, r2, lr
 8025820:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025824:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025828:	1c51      	adds	r1, r2, #1
 802582a:	00c0      	lsls	r0, r0, #3
 802582c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025830:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025834:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025838:	ea4c 0c00 	orr.w	ip, ip, r0
 802583c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025840:	ea47 0c0c 	orr.w	ip, r7, ip
 8025844:	f8a8 c000 	strh.w	ip, [r8]
 8025848:	e7b7      	b.n	80257ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802584a:	b01b      	add	sp, #108	; 0x6c
 802584c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025850:	fffff800 	.word	0xfffff800

08025854 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8025854:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025858:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802585c:	2d00      	cmp	r5, #0
 802585e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025862:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025866:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802586a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802586e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025872:	f2c0 808c 	blt.w	802598e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025876:	45a9      	cmp	r9, r5
 8025878:	f340 8089 	ble.w	802598e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802587c:	2800      	cmp	r0, #0
 802587e:	f2c0 8084 	blt.w	802598a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025882:	4580      	cmp	r8, r0
 8025884:	f340 8081 	ble.w	802598a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025888:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802588c:	f01e 0f01 	tst.w	lr, #1
 8025890:	5d16      	ldrb	r6, [r2, r4]
 8025892:	bf0c      	ite	eq
 8025894:	f006 060f 	andeq.w	r6, r6, #15
 8025898:	1136      	asrne	r6, r6, #4
 802589a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802589e:	b2f6      	uxtb	r6, r6
 80258a0:	1c44      	adds	r4, r0, #1
 80258a2:	d477      	bmi.n	8025994 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80258a4:	45a0      	cmp	r8, r4
 80258a6:	dd75      	ble.n	8025994 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80258a8:	2f00      	cmp	r7, #0
 80258aa:	d075      	beq.n	8025998 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80258ac:	f10e 0a01 	add.w	sl, lr, #1
 80258b0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80258b4:	f01a 0f01 	tst.w	sl, #1
 80258b8:	5d14      	ldrb	r4, [r2, r4]
 80258ba:	bf0c      	ite	eq
 80258bc:	f004 040f 	andeq.w	r4, r4, #15
 80258c0:	1124      	asrne	r4, r4, #4
 80258c2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80258c6:	b2e4      	uxtb	r4, r4
 80258c8:	3501      	adds	r5, #1
 80258ca:	d469      	bmi.n	80259a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80258cc:	45a9      	cmp	r9, r5
 80258ce:	dd67      	ble.n	80259a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80258d0:	f1bc 0f00 	cmp.w	ip, #0
 80258d4:	d067      	beq.n	80259a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80258d6:	2800      	cmp	r0, #0
 80258d8:	db60      	blt.n	802599c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80258da:	4580      	cmp	r8, r0
 80258dc:	dd5e      	ble.n	802599c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80258de:	eb03 090e 	add.w	r9, r3, lr
 80258e2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80258e6:	f019 0f01 	tst.w	r9, #1
 80258ea:	5d55      	ldrb	r5, [r2, r5]
 80258ec:	bf0c      	ite	eq
 80258ee:	f005 050f 	andeq.w	r5, r5, #15
 80258f2:	112d      	asrne	r5, r5, #4
 80258f4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80258f8:	b2ed      	uxtb	r5, r5
 80258fa:	3001      	adds	r0, #1
 80258fc:	d456      	bmi.n	80259ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80258fe:	4580      	cmp	r8, r0
 8025900:	dd54      	ble.n	80259ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025902:	2f00      	cmp	r7, #0
 8025904:	d054      	beq.n	80259b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8025906:	3301      	adds	r3, #1
 8025908:	449e      	add	lr, r3
 802590a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802590e:	f01e 0f01 	tst.w	lr, #1
 8025912:	5cd0      	ldrb	r0, [r2, r3]
 8025914:	bf0c      	ite	eq
 8025916:	f000 000f 	andeq.w	r0, r0, #15
 802591a:	1100      	asrne	r0, r0, #4
 802591c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025920:	b2c3      	uxtb	r3, r0
 8025922:	b2ba      	uxth	r2, r7
 8025924:	fa1f fc8c 	uxth.w	ip, ip
 8025928:	fb02 f00c 	mul.w	r0, r2, ip
 802592c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025930:	0112      	lsls	r2, r2, #4
 8025932:	fa1f fc8c 	uxth.w	ip, ip
 8025936:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802593a:	1a12      	subs	r2, r2, r0
 802593c:	eba7 070c 	sub.w	r7, r7, ip
 8025940:	b292      	uxth	r2, r2
 8025942:	b2bf      	uxth	r7, r7
 8025944:	4362      	muls	r2, r4
 8025946:	fb06 2207 	mla	r2, r6, r7, r2
 802594a:	fb0c 2505 	mla	r5, ip, r5, r2
 802594e:	fb00 5303 	mla	r3, r0, r3, r5
 8025952:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025956:	b1b3      	cbz	r3, 8025986 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025958:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802595c:	435a      	muls	r2, r3
 802595e:	1c53      	adds	r3, r2, #1
 8025960:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025964:	4a2d      	ldr	r2, [pc, #180]	; (8025a1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8025966:	121b      	asrs	r3, r3, #8
 8025968:	6812      	ldr	r2, [r2, #0]
 802596a:	2bff      	cmp	r3, #255	; 0xff
 802596c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8025970:	d120      	bne.n	80259b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8025972:	4b2b      	ldr	r3, [pc, #172]	; (8025a20 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8025974:	0950      	lsrs	r0, r2, #5
 8025976:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802597a:	4033      	ands	r3, r6
 802597c:	4318      	orrs	r0, r3
 802597e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025982:	4302      	orrs	r2, r0
 8025984:	800a      	strh	r2, [r1, #0]
 8025986:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802598a:	2600      	movs	r6, #0
 802598c:	e788      	b.n	80258a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802598e:	2400      	movs	r4, #0
 8025990:	4626      	mov	r6, r4
 8025992:	e799      	b.n	80258c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025994:	2400      	movs	r4, #0
 8025996:	e797      	b.n	80258c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025998:	463c      	mov	r4, r7
 802599a:	e795      	b.n	80258c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802599c:	2500      	movs	r5, #0
 802599e:	e7ac      	b.n	80258fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80259a0:	2300      	movs	r3, #0
 80259a2:	461d      	mov	r5, r3
 80259a4:	e7bd      	b.n	8025922 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80259a6:	4663      	mov	r3, ip
 80259a8:	4665      	mov	r5, ip
 80259aa:	e7ba      	b.n	8025922 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80259ac:	2300      	movs	r3, #0
 80259ae:	e7b8      	b.n	8025922 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80259b0:	463b      	mov	r3, r7
 80259b2:	e7b6      	b.n	8025922 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80259b4:	880d      	ldrh	r5, [r1, #0]
 80259b6:	b29f      	uxth	r7, r3
 80259b8:	122c      	asrs	r4, r5, #8
 80259ba:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80259be:	43db      	mvns	r3, r3
 80259c0:	b2db      	uxtb	r3, r3
 80259c2:	fb10 f007 	smulbb	r0, r0, r7
 80259c6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80259ca:	fb04 0403 	mla	r4, r4, r3, r0
 80259ce:	b2f6      	uxtb	r6, r6
 80259d0:	10e8      	asrs	r0, r5, #3
 80259d2:	b2d2      	uxtb	r2, r2
 80259d4:	00ed      	lsls	r5, r5, #3
 80259d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80259da:	fb12 f207 	smulbb	r2, r2, r7
 80259de:	fb16 f607 	smulbb	r6, r6, r7
 80259e2:	b2ed      	uxtb	r5, r5
 80259e4:	b2a4      	uxth	r4, r4
 80259e6:	fb00 6603 	mla	r6, r0, r3, r6
 80259ea:	fb05 2303 	mla	r3, r5, r3, r2
 80259ee:	b29a      	uxth	r2, r3
 80259f0:	1c63      	adds	r3, r4, #1
 80259f2:	b2b0      	uxth	r0, r6
 80259f4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80259f8:	1c53      	adds	r3, r2, #1
 80259fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80259fe:	1c42      	adds	r2, r0, #1
 8025a00:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025a04:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025a08:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025a0c:	0940      	lsrs	r0, r0, #5
 8025a0e:	4323      	orrs	r3, r4
 8025a10:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025a14:	4303      	orrs	r3, r0
 8025a16:	800b      	strh	r3, [r1, #0]
 8025a18:	e7b5      	b.n	8025986 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025a1a:	bf00      	nop
 8025a1c:	200259a0 	.word	0x200259a0
 8025a20:	00fff800 	.word	0x00fff800

08025a24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a28:	b097      	sub	sp, #92	; 0x5c
 8025a2a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8025a2e:	9214      	str	r2, [sp, #80]	; 0x50
 8025a30:	9309      	str	r3, [sp, #36]	; 0x24
 8025a32:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025a34:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025a38:	910d      	str	r1, [sp, #52]	; 0x34
 8025a3a:	930f      	str	r3, [sp, #60]	; 0x3c
 8025a3c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025a40:	9015      	str	r0, [sp, #84]	; 0x54
 8025a42:	6850      	ldr	r0, [r2, #4]
 8025a44:	6812      	ldr	r2, [r2, #0]
 8025a46:	fb00 1303 	mla	r3, r0, r3, r1
 8025a4a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025a4e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025a50:	689b      	ldr	r3, [r3, #8]
 8025a52:	3301      	adds	r3, #1
 8025a54:	f023 0301 	bic.w	r3, r3, #1
 8025a58:	930a      	str	r3, [sp, #40]	; 0x28
 8025a5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025a5c:	681f      	ldr	r7, [r3, #0]
 8025a5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025a60:	2b00      	cmp	r3, #0
 8025a62:	dc03      	bgt.n	8025a6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025a64:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8025a66:	2b00      	cmp	r3, #0
 8025a68:	f340 8287 	ble.w	8025f7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025a6c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025a6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025a72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025a76:	1e48      	subs	r0, r1, #1
 8025a78:	f102 3cff 	add.w	ip, r2, #4294967295
 8025a7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025a7e:	2b00      	cmp	r3, #0
 8025a80:	f340 80c4 	ble.w	8025c0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8025a84:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025a88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025a8c:	d406      	bmi.n	8025a9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025a8e:	4586      	cmp	lr, r0
 8025a90:	da04      	bge.n	8025a9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025a92:	2b00      	cmp	r3, #0
 8025a94:	db02      	blt.n	8025a9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025a96:	4563      	cmp	r3, ip
 8025a98:	f2c0 80b9 	blt.w	8025c0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025a9c:	f11e 0e01 	adds.w	lr, lr, #1
 8025aa0:	f100 80aa 	bmi.w	8025bf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025aa4:	4571      	cmp	r1, lr
 8025aa6:	f2c0 80a7 	blt.w	8025bf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025aaa:	3301      	adds	r3, #1
 8025aac:	f100 80a4 	bmi.w	8025bf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025ab0:	429a      	cmp	r2, r3
 8025ab2:	f2c0 80a1 	blt.w	8025bf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025ab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025ab8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8025abc:	930e      	str	r3, [sp, #56]	; 0x38
 8025abe:	46c8      	mov	r8, r9
 8025ac0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025ac2:	2b00      	cmp	r3, #0
 8025ac4:	f340 80c3 	ble.w	8025c4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8025ac8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025aca:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025ace:	1423      	asrs	r3, r4, #16
 8025ad0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025ad4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025ad8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025adc:	f100 814d 	bmi.w	8025d7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025ae0:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025ae4:	455b      	cmp	r3, fp
 8025ae6:	f280 8148 	bge.w	8025d7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025aea:	2800      	cmp	r0, #0
 8025aec:	f2c0 8145 	blt.w	8025d7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025af0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025af4:	4558      	cmp	r0, fp
 8025af6:	f280 8140 	bge.w	8025d7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025afa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025afc:	fb00 3305 	mla	r3, r0, r5, r3
 8025b00:	0858      	lsrs	r0, r3, #1
 8025b02:	07dd      	lsls	r5, r3, #31
 8025b04:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025b08:	bf54      	ite	pl
 8025b0a:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025b0e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025b12:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025b16:	fa5f fc8c 	uxtb.w	ip, ip
 8025b1a:	2a00      	cmp	r2, #0
 8025b1c:	f000 80db 	beq.w	8025cd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8025b20:	1c58      	adds	r0, r3, #1
 8025b22:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025b26:	07c0      	lsls	r0, r0, #31
 8025b28:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025b2c:	bf54      	ite	pl
 8025b2e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025b32:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025b36:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025b3a:	fa5f f08e 	uxtb.w	r0, lr
 8025b3e:	9010      	str	r0, [sp, #64]	; 0x40
 8025b40:	b1c9      	cbz	r1, 8025b76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025b42:	4453      	add	r3, sl
 8025b44:	0858      	lsrs	r0, r3, #1
 8025b46:	07dd      	lsls	r5, r3, #31
 8025b48:	5c38      	ldrb	r0, [r7, r0]
 8025b4a:	bf54      	ite	pl
 8025b4c:	f000 000f 	andpl.w	r0, r0, #15
 8025b50:	1100      	asrmi	r0, r0, #4
 8025b52:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025b56:	3301      	adds	r3, #1
 8025b58:	b2c0      	uxtb	r0, r0
 8025b5a:	900b      	str	r0, [sp, #44]	; 0x2c
 8025b5c:	0858      	lsrs	r0, r3, #1
 8025b5e:	07dd      	lsls	r5, r3, #31
 8025b60:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025b64:	bf54      	ite	pl
 8025b66:	f00e 030f 	andpl.w	r3, lr, #15
 8025b6a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8025b6e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025b72:	b2db      	uxtb	r3, r3
 8025b74:	9311      	str	r3, [sp, #68]	; 0x44
 8025b76:	b292      	uxth	r2, r2
 8025b78:	b289      	uxth	r1, r1
 8025b7a:	fb02 f301 	mul.w	r3, r2, r1
 8025b7e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025b82:	0112      	lsls	r2, r2, #4
 8025b84:	b289      	uxth	r1, r1
 8025b86:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025b8a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025b8c:	1ad2      	subs	r2, r2, r3
 8025b8e:	1a40      	subs	r0, r0, r1
 8025b90:	b292      	uxth	r2, r2
 8025b92:	436a      	muls	r2, r5
 8025b94:	b280      	uxth	r0, r0
 8025b96:	fb0c 2c00 	mla	ip, ip, r0, r2
 8025b9a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025b9c:	fb01 c102 	mla	r1, r1, r2, ip
 8025ba0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025ba2:	fb03 1302 	mla	r3, r3, r2, r1
 8025ba6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025baa:	b1db      	cbz	r3, 8025be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025bac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025bae:	4353      	muls	r3, r2
 8025bb0:	1c5a      	adds	r2, r3, #1
 8025bb2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025bb6:	4ac6      	ldr	r2, [pc, #792]	; (8025ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025bb8:	121b      	asrs	r3, r3, #8
 8025bba:	6812      	ldr	r2, [r2, #0]
 8025bbc:	2bff      	cmp	r3, #255	; 0xff
 8025bbe:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025bc2:	f040 8099 	bne.w	8025cf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8025bc6:	0953      	lsrs	r3, r2, #5
 8025bc8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025bcc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025bd0:	f02c 0c07 	bic.w	ip, ip, #7
 8025bd4:	ea43 0c0c 	orr.w	ip, r3, ip
 8025bd8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025bdc:	ea4c 0202 	orr.w	r2, ip, r2
 8025be0:	f8a8 2000 	strh.w	r2, [r8]
 8025be4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025be6:	441c      	add	r4, r3
 8025be8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025bea:	441e      	add	r6, r3
 8025bec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025bee:	3b01      	subs	r3, #1
 8025bf0:	f108 0802 	add.w	r8, r8, #2
 8025bf4:	930e      	str	r3, [sp, #56]	; 0x38
 8025bf6:	e763      	b.n	8025ac0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8025bf8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025bfa:	441c      	add	r4, r3
 8025bfc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025bfe:	441e      	add	r6, r3
 8025c00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025c02:	3b01      	subs	r3, #1
 8025c04:	9309      	str	r3, [sp, #36]	; 0x24
 8025c06:	f109 0902 	add.w	r9, r9, #2
 8025c0a:	e737      	b.n	8025a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025c0c:	d024      	beq.n	8025c58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025c0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025c10:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025c12:	3b01      	subs	r3, #1
 8025c14:	fb00 4003 	mla	r0, r0, r3, r4
 8025c18:	1400      	asrs	r0, r0, #16
 8025c1a:	f53f af4c 	bmi.w	8025ab6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025c1e:	3901      	subs	r1, #1
 8025c20:	4288      	cmp	r0, r1
 8025c22:	f6bf af48 	bge.w	8025ab6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025c26:	9924      	ldr	r1, [sp, #144]	; 0x90
 8025c28:	fb01 6303 	mla	r3, r1, r3, r6
 8025c2c:	141b      	asrs	r3, r3, #16
 8025c2e:	f53f af42 	bmi.w	8025ab6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025c32:	3a01      	subs	r2, #1
 8025c34:	4293      	cmp	r3, r2
 8025c36:	f6bf af3e 	bge.w	8025ab6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025c3a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8025c3e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8025c42:	930e      	str	r3, [sp, #56]	; 0x38
 8025c44:	46c8      	mov	r8, r9
 8025c46:	f1bb 0f00 	cmp.w	fp, #0
 8025c4a:	f300 80b7 	bgt.w	8025dbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025c4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025c50:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025c54:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025c58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025c5a:	2b00      	cmp	r3, #0
 8025c5c:	f340 818d 	ble.w	8025f7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025c60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025c64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025c68:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025c6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025c6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025c72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025c76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025c7a:	eef0 6a62 	vmov.f32	s13, s5
 8025c7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025c82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025c86:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025c8a:	ee16 4a90 	vmov	r4, s13
 8025c8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025c92:	eef0 6a43 	vmov.f32	s13, s6
 8025c96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025c9a:	ee12 2a90 	vmov	r2, s5
 8025c9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025ca2:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ca6:	ee13 2a10 	vmov	r2, s6
 8025caa:	9323      	str	r3, [sp, #140]	; 0x8c
 8025cac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025cae:	fb92 f3f3 	sdiv	r3, r2, r3
 8025cb2:	9324      	str	r3, [sp, #144]	; 0x90
 8025cb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025cb6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025cb8:	3b01      	subs	r3, #1
 8025cba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025cbe:	930d      	str	r3, [sp, #52]	; 0x34
 8025cc0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025cc2:	bf08      	it	eq
 8025cc4:	4613      	moveq	r3, r2
 8025cc6:	ee16 6a90 	vmov	r6, s13
 8025cca:	9309      	str	r3, [sp, #36]	; 0x24
 8025ccc:	eeb0 3a67 	vmov.f32	s6, s15
 8025cd0:	eef0 2a47 	vmov.f32	s5, s14
 8025cd4:	e6c3      	b.n	8025a5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025cd6:	2900      	cmp	r1, #0
 8025cd8:	f43f af4d 	beq.w	8025b76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025cdc:	eb0a 0003 	add.w	r0, sl, r3
 8025ce0:	0843      	lsrs	r3, r0, #1
 8025ce2:	07c0      	lsls	r0, r0, #31
 8025ce4:	5cfb      	ldrb	r3, [r7, r3]
 8025ce6:	bf54      	ite	pl
 8025ce8:	f003 030f 	andpl.w	r3, r3, #15
 8025cec:	111b      	asrmi	r3, r3, #4
 8025cee:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025cf2:	b2db      	uxtb	r3, r3
 8025cf4:	930b      	str	r3, [sp, #44]	; 0x2c
 8025cf6:	e73e      	b.n	8025b76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025cf8:	f8b8 e000 	ldrh.w	lr, [r8]
 8025cfc:	fa1f fb83 	uxth.w	fp, r3
 8025d00:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025d04:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025d08:	43db      	mvns	r3, r3
 8025d0a:	b2db      	uxtb	r3, r3
 8025d0c:	fb11 f10b 	smulbb	r1, r1, fp
 8025d10:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025d14:	fb00 1003 	mla	r0, r0, r3, r1
 8025d18:	fa5f fc8c 	uxtb.w	ip, ip
 8025d1c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025d20:	b2d2      	uxtb	r2, r2
 8025d22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025d26:	b280      	uxth	r0, r0
 8025d28:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025d2c:	fb1c fc0b 	smulbb	ip, ip, fp
 8025d30:	fa5f fe8e 	uxtb.w	lr, lr
 8025d34:	fb12 fb0b 	smulbb	fp, r2, fp
 8025d38:	fb01 cc03 	mla	ip, r1, r3, ip
 8025d3c:	fb0e bb03 	mla	fp, lr, r3, fp
 8025d40:	1c43      	adds	r3, r0, #1
 8025d42:	fa1f fc8c 	uxth.w	ip, ip
 8025d46:	fa1f fb8b 	uxth.w	fp, fp
 8025d4a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025d4e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025d52:	f10c 0101 	add.w	r1, ip, #1
 8025d56:	f10b 0001 	add.w	r0, fp, #1
 8025d5a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025d5e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025d62:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025d66:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025d6a:	4318      	orrs	r0, r3
 8025d6c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025d70:	ea40 000c 	orr.w	r0, r0, ip
 8025d74:	f8a8 0000 	strh.w	r0, [r8]
 8025d78:	e734      	b.n	8025be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025d7a:	f113 0b01 	adds.w	fp, r3, #1
 8025d7e:	f53f af31 	bmi.w	8025be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025d82:	45dc      	cmp	ip, fp
 8025d84:	f6ff af2e 	blt.w	8025be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025d88:	f110 0b01 	adds.w	fp, r0, #1
 8025d8c:	f53f af2a 	bmi.w	8025be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025d90:	45de      	cmp	lr, fp
 8025d92:	f6ff af27 	blt.w	8025be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025d96:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025d98:	9302      	str	r3, [sp, #8]
 8025d9a:	fa0f f38e 	sxth.w	r3, lr
 8025d9e:	9301      	str	r3, [sp, #4]
 8025da0:	fa0f f38c 	sxth.w	r3, ip
 8025da4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025da8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025dac:	9300      	str	r3, [sp, #0]
 8025dae:	463a      	mov	r2, r7
 8025db0:	4653      	mov	r3, sl
 8025db2:	4641      	mov	r1, r8
 8025db4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025db6:	f7ff fd4d 	bl	8025854 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025dba:	e713      	b.n	8025be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025dbc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025dbe:	1422      	asrs	r2, r4, #16
 8025dc0:	1433      	asrs	r3, r6, #16
 8025dc2:	fb05 2303 	mla	r3, r5, r3, r2
 8025dc6:	085a      	lsrs	r2, r3, #1
 8025dc8:	07dd      	lsls	r5, r3, #31
 8025dca:	5cba      	ldrb	r2, [r7, r2]
 8025dcc:	bf54      	ite	pl
 8025dce:	f002 020f 	andpl.w	r2, r2, #15
 8025dd2:	1112      	asrmi	r2, r2, #4
 8025dd4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025dd8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025ddc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025de0:	b2d2      	uxtb	r2, r2
 8025de2:	2900      	cmp	r1, #0
 8025de4:	d076      	beq.n	8025ed4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025de6:	f103 0e01 	add.w	lr, r3, #1
 8025dea:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025dee:	f01e 0f01 	tst.w	lr, #1
 8025df2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025df6:	bf0c      	ite	eq
 8025df8:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025dfc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025e00:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025e04:	fa5f f58c 	uxtb.w	r5, ip
 8025e08:	9512      	str	r5, [sp, #72]	; 0x48
 8025e0a:	b300      	cbz	r0, 8025e4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025e0c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025e0e:	442b      	add	r3, r5
 8025e10:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025e14:	07dd      	lsls	r5, r3, #31
 8025e16:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025e1a:	bf54      	ite	pl
 8025e1c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025e20:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025e24:	3301      	adds	r3, #1
 8025e26:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025e2a:	fa5f f58c 	uxtb.w	r5, ip
 8025e2e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025e32:	950c      	str	r5, [sp, #48]	; 0x30
 8025e34:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025e38:	07dd      	lsls	r5, r3, #31
 8025e3a:	bf54      	ite	pl
 8025e3c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025e40:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025e44:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025e48:	fa5f f38c 	uxtb.w	r3, ip
 8025e4c:	9313      	str	r3, [sp, #76]	; 0x4c
 8025e4e:	b289      	uxth	r1, r1
 8025e50:	b280      	uxth	r0, r0
 8025e52:	fb01 f300 	mul.w	r3, r1, r0
 8025e56:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025e5a:	0109      	lsls	r1, r1, #4
 8025e5c:	b280      	uxth	r0, r0
 8025e5e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025e62:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025e64:	1ac9      	subs	r1, r1, r3
 8025e66:	ebac 0c00 	sub.w	ip, ip, r0
 8025e6a:	b289      	uxth	r1, r1
 8025e6c:	4369      	muls	r1, r5
 8025e6e:	fa1f fc8c 	uxth.w	ip, ip
 8025e72:	fb02 120c 	mla	r2, r2, ip, r1
 8025e76:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025e78:	fb00 2001 	mla	r0, r0, r1, r2
 8025e7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025e7e:	fb03 0302 	mla	r3, r3, r2, r0
 8025e82:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025e86:	b1d3      	cbz	r3, 8025ebe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025e88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025e8a:	4353      	muls	r3, r2
 8025e8c:	1c5a      	adds	r2, r3, #1
 8025e8e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025e92:	4a0f      	ldr	r2, [pc, #60]	; (8025ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025e94:	121b      	asrs	r3, r3, #8
 8025e96:	6812      	ldr	r2, [r2, #0]
 8025e98:	2bff      	cmp	r3, #255	; 0xff
 8025e9a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025e9e:	d12d      	bne.n	8025efc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025ea0:	0953      	lsrs	r3, r2, #5
 8025ea2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025ea6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025eaa:	f02c 0c07 	bic.w	ip, ip, #7
 8025eae:	ea43 0c0c 	orr.w	ip, r3, ip
 8025eb2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025eb6:	ea4c 0202 	orr.w	r2, ip, r2
 8025eba:	f8a8 2000 	strh.w	r2, [r8]
 8025ebe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025ec0:	441c      	add	r4, r3
 8025ec2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ec4:	f108 0802 	add.w	r8, r8, #2
 8025ec8:	441e      	add	r6, r3
 8025eca:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025ece:	e6ba      	b.n	8025c46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025ed0:	200259a0 	.word	0x200259a0
 8025ed4:	2800      	cmp	r0, #0
 8025ed6:	d0ba      	beq.n	8025e4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025ed8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025eda:	442b      	add	r3, r5
 8025edc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025ee0:	07db      	lsls	r3, r3, #31
 8025ee2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025ee6:	bf54      	ite	pl
 8025ee8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025eec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025ef0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025ef4:	fa5f f38c 	uxtb.w	r3, ip
 8025ef8:	930c      	str	r3, [sp, #48]	; 0x30
 8025efa:	e7a8      	b.n	8025e4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025efc:	f8b8 e000 	ldrh.w	lr, [r8]
 8025f00:	fa1f fa83 	uxth.w	sl, r3
 8025f04:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025f08:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025f0c:	43db      	mvns	r3, r3
 8025f0e:	b2db      	uxtb	r3, r3
 8025f10:	fb11 f10a 	smulbb	r1, r1, sl
 8025f14:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025f18:	fb00 1003 	mla	r0, r0, r3, r1
 8025f1c:	b2d2      	uxtb	r2, r2
 8025f1e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025f22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025f26:	fa5f fe8e 	uxtb.w	lr, lr
 8025f2a:	fb12 f20a 	smulbb	r2, r2, sl
 8025f2e:	fb0e 2203 	mla	r2, lr, r3, r2
 8025f32:	fa5f fc8c 	uxtb.w	ip, ip
 8025f36:	b280      	uxth	r0, r0
 8025f38:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025f3c:	b292      	uxth	r2, r2
 8025f3e:	fb1c fc0a 	smulbb	ip, ip, sl
 8025f42:	fb01 cc03 	mla	ip, r1, r3, ip
 8025f46:	1c43      	adds	r3, r0, #1
 8025f48:	1c51      	adds	r1, r2, #1
 8025f4a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025f4e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025f52:	fa1f fc8c 	uxth.w	ip, ip
 8025f56:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025f5a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025f5e:	4308      	orrs	r0, r1
 8025f60:	f10c 0101 	add.w	r1, ip, #1
 8025f64:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025f68:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025f6c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025f70:	ea40 000c 	orr.w	r0, r0, ip
 8025f74:	f8a8 0000 	strh.w	r0, [r8]
 8025f78:	e7a1      	b.n	8025ebe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025f7a:	b017      	add	sp, #92	; 0x5c
 8025f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025f80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025f80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025f84:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025f88:	2d00      	cmp	r5, #0
 8025f8a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025f8e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025f92:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025f96:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025f9a:	fb05 0e03 	mla	lr, r5, r3, r0
 8025f9e:	f2c0 80b0 	blt.w	8026102 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025fa2:	45a9      	cmp	r9, r5
 8025fa4:	f340 80ad 	ble.w	8026102 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025fa8:	2800      	cmp	r0, #0
 8025faa:	f2c0 80a8 	blt.w	80260fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025fae:	4580      	cmp	r8, r0
 8025fb0:	f340 80a5 	ble.w	80260fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025fb4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025fb8:	f01e 0f01 	tst.w	lr, #1
 8025fbc:	5d16      	ldrb	r6, [r2, r4]
 8025fbe:	bf0c      	ite	eq
 8025fc0:	f006 060f 	andeq.w	r6, r6, #15
 8025fc4:	1136      	asrne	r6, r6, #4
 8025fc6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025fca:	b2f6      	uxtb	r6, r6
 8025fcc:	1c44      	adds	r4, r0, #1
 8025fce:	f100 809b 	bmi.w	8026108 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025fd2:	45a0      	cmp	r8, r4
 8025fd4:	f340 8098 	ble.w	8026108 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025fd8:	2f00      	cmp	r7, #0
 8025fda:	f000 8097 	beq.w	802610c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025fde:	f10e 0a01 	add.w	sl, lr, #1
 8025fe2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025fe6:	f01a 0f01 	tst.w	sl, #1
 8025fea:	5d14      	ldrb	r4, [r2, r4]
 8025fec:	bf0c      	ite	eq
 8025fee:	f004 040f 	andeq.w	r4, r4, #15
 8025ff2:	1124      	asrne	r4, r4, #4
 8025ff4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025ff8:	b2e4      	uxtb	r4, r4
 8025ffa:	3501      	adds	r5, #1
 8025ffc:	f100 808a 	bmi.w	8026114 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026000:	45a9      	cmp	r9, r5
 8026002:	f340 8087 	ble.w	8026114 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026006:	f1bc 0f00 	cmp.w	ip, #0
 802600a:	f000 8086 	beq.w	802611a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802600e:	2800      	cmp	r0, #0
 8026010:	db7e      	blt.n	8026110 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026012:	4580      	cmp	r8, r0
 8026014:	dd7c      	ble.n	8026110 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026016:	eb03 090e 	add.w	r9, r3, lr
 802601a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802601e:	f019 0f01 	tst.w	r9, #1
 8026022:	5d55      	ldrb	r5, [r2, r5]
 8026024:	bf0c      	ite	eq
 8026026:	f005 050f 	andeq.w	r5, r5, #15
 802602a:	112d      	asrne	r5, r5, #4
 802602c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026030:	b2ed      	uxtb	r5, r5
 8026032:	3001      	adds	r0, #1
 8026034:	d474      	bmi.n	8026120 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026036:	4580      	cmp	r8, r0
 8026038:	dd72      	ble.n	8026120 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802603a:	2f00      	cmp	r7, #0
 802603c:	d072      	beq.n	8026124 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802603e:	3301      	adds	r3, #1
 8026040:	449e      	add	lr, r3
 8026042:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026046:	f01e 0f01 	tst.w	lr, #1
 802604a:	5cd0      	ldrb	r0, [r2, r3]
 802604c:	bf0c      	ite	eq
 802604e:	f000 000f 	andeq.w	r0, r0, #15
 8026052:	1100      	asrne	r0, r0, #4
 8026054:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026058:	b2c3      	uxtb	r3, r0
 802605a:	b2ba      	uxth	r2, r7
 802605c:	fa1f fc8c 	uxth.w	ip, ip
 8026060:	fb02 f00c 	mul.w	r0, r2, ip
 8026064:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026068:	0112      	lsls	r2, r2, #4
 802606a:	fa1f fc8c 	uxth.w	ip, ip
 802606e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026072:	1a12      	subs	r2, r2, r0
 8026074:	eba7 070c 	sub.w	r7, r7, ip
 8026078:	b292      	uxth	r2, r2
 802607a:	b2bf      	uxth	r7, r7
 802607c:	4362      	muls	r2, r4
 802607e:	fb06 2207 	mla	r2, r6, r7, r2
 8026082:	fb0c 2505 	mla	r5, ip, r5, r2
 8026086:	fb00 5303 	mla	r3, r0, r3, r5
 802608a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802608e:	b3a3      	cbz	r3, 80260fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8026090:	4a25      	ldr	r2, [pc, #148]	; (8026128 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8026092:	880e      	ldrh	r6, [r1, #0]
 8026094:	6815      	ldr	r5, [r2, #0]
 8026096:	1234      	asrs	r4, r6, #8
 8026098:	b29a      	uxth	r2, r3
 802609a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802609e:	43db      	mvns	r3, r3
 80260a0:	b2db      	uxtb	r3, r3
 80260a2:	fb10 f002 	smulbb	r0, r0, r2
 80260a6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80260aa:	fb04 0403 	mla	r4, r4, r3, r0
 80260ae:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80260b2:	10f0      	asrs	r0, r6, #3
 80260b4:	b2ed      	uxtb	r5, r5
 80260b6:	00f6      	lsls	r6, r6, #3
 80260b8:	fb17 f702 	smulbb	r7, r7, r2
 80260bc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80260c0:	fb15 f202 	smulbb	r2, r5, r2
 80260c4:	b2f6      	uxtb	r6, r6
 80260c6:	b2a4      	uxth	r4, r4
 80260c8:	fb00 7003 	mla	r0, r0, r3, r7
 80260cc:	fb06 2303 	mla	r3, r6, r3, r2
 80260d0:	b29a      	uxth	r2, r3
 80260d2:	1c63      	adds	r3, r4, #1
 80260d4:	b280      	uxth	r0, r0
 80260d6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80260da:	1c53      	adds	r3, r2, #1
 80260dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80260e0:	1c42      	adds	r2, r0, #1
 80260e2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80260e6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80260ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80260ee:	0940      	lsrs	r0, r0, #5
 80260f0:	4323      	orrs	r3, r4
 80260f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80260f6:	4303      	orrs	r3, r0
 80260f8:	800b      	strh	r3, [r1, #0]
 80260fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80260fe:	2600      	movs	r6, #0
 8026100:	e764      	b.n	8025fcc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8026102:	2400      	movs	r4, #0
 8026104:	4626      	mov	r6, r4
 8026106:	e778      	b.n	8025ffa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026108:	2400      	movs	r4, #0
 802610a:	e776      	b.n	8025ffa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802610c:	463c      	mov	r4, r7
 802610e:	e774      	b.n	8025ffa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026110:	2500      	movs	r5, #0
 8026112:	e78e      	b.n	8026032 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8026114:	2300      	movs	r3, #0
 8026116:	461d      	mov	r5, r3
 8026118:	e79f      	b.n	802605a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802611a:	4663      	mov	r3, ip
 802611c:	4665      	mov	r5, ip
 802611e:	e79c      	b.n	802605a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026120:	2300      	movs	r3, #0
 8026122:	e79a      	b.n	802605a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026124:	463b      	mov	r3, r7
 8026126:	e798      	b.n	802605a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026128:	200259a0 	.word	0x200259a0

0802612c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802612c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026130:	b093      	sub	sp, #76	; 0x4c
 8026132:	461d      	mov	r5, r3
 8026134:	920c      	str	r2, [sp, #48]	; 0x30
 8026136:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026138:	9107      	str	r1, [sp, #28]
 802613a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802613e:	9011      	str	r0, [sp, #68]	; 0x44
 8026140:	6850      	ldr	r0, [r2, #4]
 8026142:	6812      	ldr	r2, [r2, #0]
 8026144:	fb00 1303 	mla	r3, r0, r3, r1
 8026148:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802614c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802614e:	689b      	ldr	r3, [r3, #8]
 8026150:	3301      	adds	r3, #1
 8026152:	f023 0301 	bic.w	r3, r3, #1
 8026156:	9306      	str	r3, [sp, #24]
 8026158:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802615a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802615e:	681f      	ldr	r7, [r3, #0]
 8026160:	9b07      	ldr	r3, [sp, #28]
 8026162:	2b00      	cmp	r3, #0
 8026164:	dc03      	bgt.n	802616e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8026166:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026168:	2b00      	cmp	r3, #0
 802616a:	f340 8267 	ble.w	802663c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802616e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026170:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026174:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026178:	1e48      	subs	r0, r1, #1
 802617a:	f102 3cff 	add.w	ip, r2, #4294967295
 802617e:	2d00      	cmp	r5, #0
 8026180:	f340 80b8 	ble.w	80262f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8026184:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026188:	ea4f 4326 	mov.w	r3, r6, asr #16
 802618c:	d406      	bmi.n	802619c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802618e:	4586      	cmp	lr, r0
 8026190:	da04      	bge.n	802619c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026192:	2b00      	cmp	r3, #0
 8026194:	db02      	blt.n	802619c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026196:	4563      	cmp	r3, ip
 8026198:	f2c0 80ad 	blt.w	80262f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 802619c:	f11e 0e01 	adds.w	lr, lr, #1
 80261a0:	f100 80a0 	bmi.w	80262e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80261a4:	4571      	cmp	r1, lr
 80261a6:	f2c0 809d 	blt.w	80262e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80261aa:	3301      	adds	r3, #1
 80261ac:	f100 809a 	bmi.w	80262e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80261b0:	429a      	cmp	r2, r3
 80261b2:	f2c0 8097 	blt.w	80262e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80261b6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80261ba:	9509      	str	r5, [sp, #36]	; 0x24
 80261bc:	46c8      	mov	r8, r9
 80261be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80261c0:	2b00      	cmp	r3, #0
 80261c2:	f340 80b6 	ble.w	8026332 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80261c6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80261ca:	9308      	str	r3, [sp, #32]
 80261cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80261ce:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80261d2:	1423      	asrs	r3, r4, #16
 80261d4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80261d8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80261dc:	f100 813e 	bmi.w	802645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80261e0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80261e4:	455b      	cmp	r3, fp
 80261e6:	f280 8139 	bge.w	802645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80261ea:	2800      	cmp	r0, #0
 80261ec:	f2c0 8136 	blt.w	802645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80261f0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80261f4:	4558      	cmp	r0, fp
 80261f6:	f280 8131 	bge.w	802645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80261fa:	9a06      	ldr	r2, [sp, #24]
 80261fc:	fb00 3302 	mla	r3, r0, r2, r3
 8026200:	0858      	lsrs	r0, r3, #1
 8026202:	07da      	lsls	r2, r3, #31
 8026204:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026208:	9a08      	ldr	r2, [sp, #32]
 802620a:	bf54      	ite	pl
 802620c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026210:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026214:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026218:	fa5f fc8c 	uxtb.w	ip, ip
 802621c:	2a00      	cmp	r2, #0
 802621e:	f000 80cb 	beq.w	80263b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026222:	1c58      	adds	r0, r3, #1
 8026224:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026228:	07c0      	lsls	r0, r0, #31
 802622a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802622e:	bf54      	ite	pl
 8026230:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026234:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026238:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802623c:	fa5f fe8e 	uxtb.w	lr, lr
 8026240:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026244:	b1b9      	cbz	r1, 8026276 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026246:	4453      	add	r3, sl
 8026248:	0858      	lsrs	r0, r3, #1
 802624a:	07da      	lsls	r2, r3, #31
 802624c:	5c38      	ldrb	r0, [r7, r0]
 802624e:	bf54      	ite	pl
 8026250:	f000 000f 	andpl.w	r0, r0, #15
 8026254:	1100      	asrmi	r0, r0, #4
 8026256:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802625a:	b2c0      	uxtb	r0, r0
 802625c:	900a      	str	r0, [sp, #40]	; 0x28
 802625e:	1c58      	adds	r0, r3, #1
 8026260:	0843      	lsrs	r3, r0, #1
 8026262:	07c2      	lsls	r2, r0, #31
 8026264:	5cfb      	ldrb	r3, [r7, r3]
 8026266:	bf54      	ite	pl
 8026268:	f003 030f 	andpl.w	r3, r3, #15
 802626c:	111b      	asrmi	r3, r3, #4
 802626e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026272:	b2db      	uxtb	r3, r3
 8026274:	930e      	str	r3, [sp, #56]	; 0x38
 8026276:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802627a:	b289      	uxth	r1, r1
 802627c:	fb02 f301 	mul.w	r3, r2, r1
 8026280:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026284:	0112      	lsls	r2, r2, #4
 8026286:	b289      	uxth	r1, r1
 8026288:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802628c:	1a40      	subs	r0, r0, r1
 802628e:	fa1f fe80 	uxth.w	lr, r0
 8026292:	1ad2      	subs	r2, r2, r3
 8026294:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026296:	b292      	uxth	r2, r2
 8026298:	4342      	muls	r2, r0
 802629a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802629e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80262a0:	fb01 c102 	mla	r1, r1, r2, ip
 80262a4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80262a6:	fb03 1302 	mla	r3, r3, r2, r1
 80262aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80262ae:	2bff      	cmp	r3, #255	; 0xff
 80262b0:	f040 8093 	bne.w	80263da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80262b4:	4bbe      	ldr	r3, [pc, #760]	; (80265b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80262b6:	681a      	ldr	r2, [r3, #0]
 80262b8:	4bbe      	ldr	r3, [pc, #760]	; (80265b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80262ba:	0951      	lsrs	r1, r2, #5
 80262bc:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80262c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80262c4:	430b      	orrs	r3, r1
 80262c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80262ca:	4313      	orrs	r3, r2
 80262cc:	f8a8 3000 	strh.w	r3, [r8]
 80262d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80262d2:	441c      	add	r4, r3
 80262d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80262d6:	441e      	add	r6, r3
 80262d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80262da:	3b01      	subs	r3, #1
 80262dc:	f108 0802 	add.w	r8, r8, #2
 80262e0:	9309      	str	r3, [sp, #36]	; 0x24
 80262e2:	e76c      	b.n	80261be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80262e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80262e6:	441c      	add	r4, r3
 80262e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80262ea:	3d01      	subs	r5, #1
 80262ec:	441e      	add	r6, r3
 80262ee:	f109 0902 	add.w	r9, r9, #2
 80262f2:	e744      	b.n	802617e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80262f4:	d021      	beq.n	802633a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80262f6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80262f8:	1e6b      	subs	r3, r5, #1
 80262fa:	fb00 4003 	mla	r0, r0, r3, r4
 80262fe:	1400      	asrs	r0, r0, #16
 8026300:	f53f af59 	bmi.w	80261b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026304:	3901      	subs	r1, #1
 8026306:	4288      	cmp	r0, r1
 8026308:	f6bf af55 	bge.w	80261b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802630c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802630e:	fb01 6303 	mla	r3, r1, r3, r6
 8026312:	141b      	asrs	r3, r3, #16
 8026314:	f53f af4f 	bmi.w	80261b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026318:	3a01      	subs	r2, #1
 802631a:	4293      	cmp	r3, r2
 802631c:	f6bf af4b 	bge.w	80261b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026320:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8026324:	9308      	str	r3, [sp, #32]
 8026326:	46a8      	mov	r8, r5
 8026328:	46ce      	mov	lr, r9
 802632a:	f1b8 0f00 	cmp.w	r8, #0
 802632e:	f300 80b5 	bgt.w	802649c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026332:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026336:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802633a:	9b07      	ldr	r3, [sp, #28]
 802633c:	2b00      	cmp	r3, #0
 802633e:	f340 817d 	ble.w	802663c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026342:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026346:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802634a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802634e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026350:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026354:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026358:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802635c:	eef0 6a62 	vmov.f32	s13, s5
 8026360:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026364:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026368:	ee77 2a62 	vsub.f32	s5, s14, s5
 802636c:	ee16 4a90 	vmov	r4, s13
 8026370:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026374:	eef0 6a43 	vmov.f32	s13, s6
 8026378:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802637c:	ee12 2a90 	vmov	r2, s5
 8026380:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026384:	fb92 f3f3 	sdiv	r3, r2, r3
 8026388:	ee13 2a10 	vmov	r2, s6
 802638c:	931f      	str	r3, [sp, #124]	; 0x7c
 802638e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026390:	fb92 f3f3 	sdiv	r3, r2, r3
 8026394:	9320      	str	r3, [sp, #128]	; 0x80
 8026396:	9b07      	ldr	r3, [sp, #28]
 8026398:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802639a:	3b01      	subs	r3, #1
 802639c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80263a0:	9307      	str	r3, [sp, #28]
 80263a2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80263a4:	ee16 6a90 	vmov	r6, s13
 80263a8:	bf14      	ite	ne
 80263aa:	461d      	movne	r5, r3
 80263ac:	4615      	moveq	r5, r2
 80263ae:	eeb0 3a67 	vmov.f32	s6, s15
 80263b2:	eef0 2a47 	vmov.f32	s5, s14
 80263b6:	e6d3      	b.n	8026160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80263b8:	2900      	cmp	r1, #0
 80263ba:	f43f af5c 	beq.w	8026276 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80263be:	eb0a 0003 	add.w	r0, sl, r3
 80263c2:	0843      	lsrs	r3, r0, #1
 80263c4:	07c0      	lsls	r0, r0, #31
 80263c6:	5cfb      	ldrb	r3, [r7, r3]
 80263c8:	bf54      	ite	pl
 80263ca:	f003 030f 	andpl.w	r3, r3, #15
 80263ce:	111b      	asrmi	r3, r3, #4
 80263d0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80263d4:	b2db      	uxtb	r3, r3
 80263d6:	930a      	str	r3, [sp, #40]	; 0x28
 80263d8:	e74d      	b.n	8026276 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80263da:	2b00      	cmp	r3, #0
 80263dc:	f43f af78 	beq.w	80262d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80263e0:	4a73      	ldr	r2, [pc, #460]	; (80265b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80263e2:	f8b8 c000 	ldrh.w	ip, [r8]
 80263e6:	6810      	ldr	r0, [r2, #0]
 80263e8:	fa1f fe83 	uxth.w	lr, r3
 80263ec:	ea4f 212c 	mov.w	r1, ip, asr #8
 80263f0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80263f4:	43db      	mvns	r3, r3
 80263f6:	b2db      	uxtb	r3, r3
 80263f8:	fb12 f20e 	smulbb	r2, r2, lr
 80263fc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026400:	fb01 2103 	mla	r1, r1, r3, r2
 8026404:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026408:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802640c:	b2c0      	uxtb	r0, r0
 802640e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026412:	fb1b fb0e 	smulbb	fp, fp, lr
 8026416:	b289      	uxth	r1, r1
 8026418:	fb10 fe0e 	smulbb	lr, r0, lr
 802641c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026420:	fa5f fc8c 	uxtb.w	ip, ip
 8026424:	fb02 b203 	mla	r2, r2, r3, fp
 8026428:	1c48      	adds	r0, r1, #1
 802642a:	fb0c e303 	mla	r3, ip, r3, lr
 802642e:	b292      	uxth	r2, r2
 8026430:	b29b      	uxth	r3, r3
 8026432:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8026436:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802643a:	f102 0b01 	add.w	fp, r2, #1
 802643e:	1c59      	adds	r1, r3, #1
 8026440:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026444:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026448:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802644c:	0952      	lsrs	r2, r2, #5
 802644e:	4301      	orrs	r1, r0
 8026450:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026454:	4311      	orrs	r1, r2
 8026456:	f8a8 1000 	strh.w	r1, [r8]
 802645a:	e739      	b.n	80262d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802645c:	f113 0b01 	adds.w	fp, r3, #1
 8026460:	f53f af36 	bmi.w	80262d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026464:	45dc      	cmp	ip, fp
 8026466:	f6ff af33 	blt.w	80262d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802646a:	f110 0b01 	adds.w	fp, r0, #1
 802646e:	f53f af2f 	bmi.w	80262d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026472:	45de      	cmp	lr, fp
 8026474:	f6ff af2c 	blt.w	80262d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026478:	9a08      	ldr	r2, [sp, #32]
 802647a:	9302      	str	r3, [sp, #8]
 802647c:	fa0f f38e 	sxth.w	r3, lr
 8026480:	9301      	str	r3, [sp, #4]
 8026482:	fa0f f38c 	sxth.w	r3, ip
 8026486:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802648a:	9105      	str	r1, [sp, #20]
 802648c:	9300      	str	r3, [sp, #0]
 802648e:	463a      	mov	r2, r7
 8026490:	4653      	mov	r3, sl
 8026492:	4641      	mov	r1, r8
 8026494:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026496:	f7ff fd73 	bl	8025f80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802649a:	e719      	b.n	80262d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802649c:	9906      	ldr	r1, [sp, #24]
 802649e:	1422      	asrs	r2, r4, #16
 80264a0:	1433      	asrs	r3, r6, #16
 80264a2:	fb01 2303 	mla	r3, r1, r3, r2
 80264a6:	085a      	lsrs	r2, r3, #1
 80264a8:	07d9      	lsls	r1, r3, #31
 80264aa:	5cba      	ldrb	r2, [r7, r2]
 80264ac:	bf54      	ite	pl
 80264ae:	f002 020f 	andpl.w	r2, r2, #15
 80264b2:	1112      	asrmi	r2, r2, #4
 80264b4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80264b8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80264bc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80264c0:	b2d2      	uxtb	r2, r2
 80264c2:	2800      	cmp	r0, #0
 80264c4:	d062      	beq.n	802658c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80264c6:	f103 0a01 	add.w	sl, r3, #1
 80264ca:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80264ce:	f01a 0f01 	tst.w	sl, #1
 80264d2:	5c79      	ldrb	r1, [r7, r1]
 80264d4:	bf0c      	ite	eq
 80264d6:	f001 010f 	andeq.w	r1, r1, #15
 80264da:	1109      	asrne	r1, r1, #4
 80264dc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80264e0:	b2c9      	uxtb	r1, r1
 80264e2:	910f      	str	r1, [sp, #60]	; 0x3c
 80264e4:	f1bc 0f00 	cmp.w	ip, #0
 80264e8:	d019      	beq.n	802651e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80264ea:	9908      	ldr	r1, [sp, #32]
 80264ec:	440b      	add	r3, r1
 80264ee:	0859      	lsrs	r1, r3, #1
 80264f0:	f013 0f01 	tst.w	r3, #1
 80264f4:	5c79      	ldrb	r1, [r7, r1]
 80264f6:	bf0c      	ite	eq
 80264f8:	f001 010f 	andeq.w	r1, r1, #15
 80264fc:	1109      	asrne	r1, r1, #4
 80264fe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026502:	b2c9      	uxtb	r1, r1
 8026504:	3301      	adds	r3, #1
 8026506:	910b      	str	r1, [sp, #44]	; 0x2c
 8026508:	0859      	lsrs	r1, r3, #1
 802650a:	07db      	lsls	r3, r3, #31
 802650c:	5c79      	ldrb	r1, [r7, r1]
 802650e:	bf54      	ite	pl
 8026510:	f001 010f 	andpl.w	r1, r1, #15
 8026514:	1109      	asrmi	r1, r1, #4
 8026516:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802651a:	b2c9      	uxtb	r1, r1
 802651c:	9110      	str	r1, [sp, #64]	; 0x40
 802651e:	b280      	uxth	r0, r0
 8026520:	fa1f fc8c 	uxth.w	ip, ip
 8026524:	fb00 f30c 	mul.w	r3, r0, ip
 8026528:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802652c:	0100      	lsls	r0, r0, #4
 802652e:	fa1f fc8c 	uxth.w	ip, ip
 8026532:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8026536:	eba1 010c 	sub.w	r1, r1, ip
 802653a:	fa1f fa81 	uxth.w	sl, r1
 802653e:	1ac0      	subs	r0, r0, r3
 8026540:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026542:	b280      	uxth	r0, r0
 8026544:	4348      	muls	r0, r1
 8026546:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8026548:	fb02 020a 	mla	r2, r2, sl, r0
 802654c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026550:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026552:	fb03 c302 	mla	r3, r3, r2, ip
 8026556:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802655a:	2bff      	cmp	r3, #255	; 0xff
 802655c:	d12c      	bne.n	80265b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802655e:	4b14      	ldr	r3, [pc, #80]	; (80265b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026560:	681a      	ldr	r2, [r3, #0]
 8026562:	4b14      	ldr	r3, [pc, #80]	; (80265b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026564:	0951      	lsrs	r1, r2, #5
 8026566:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802656a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802656e:	430b      	orrs	r3, r1
 8026570:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026574:	4313      	orrs	r3, r2
 8026576:	f8ae 3000 	strh.w	r3, [lr]
 802657a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802657c:	441c      	add	r4, r3
 802657e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026580:	f10e 0e02 	add.w	lr, lr, #2
 8026584:	441e      	add	r6, r3
 8026586:	f108 38ff 	add.w	r8, r8, #4294967295
 802658a:	e6ce      	b.n	802632a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802658c:	f1bc 0f00 	cmp.w	ip, #0
 8026590:	d0c5      	beq.n	802651e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026592:	9908      	ldr	r1, [sp, #32]
 8026594:	440b      	add	r3, r1
 8026596:	0859      	lsrs	r1, r3, #1
 8026598:	07db      	lsls	r3, r3, #31
 802659a:	5c79      	ldrb	r1, [r7, r1]
 802659c:	bf54      	ite	pl
 802659e:	f001 010f 	andpl.w	r1, r1, #15
 80265a2:	1109      	asrmi	r1, r1, #4
 80265a4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80265a8:	b2c9      	uxtb	r1, r1
 80265aa:	910b      	str	r1, [sp, #44]	; 0x2c
 80265ac:	e7b7      	b.n	802651e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80265ae:	bf00      	nop
 80265b0:	200259a0 	.word	0x200259a0
 80265b4:	fffff800 	.word	0xfffff800
 80265b8:	2b00      	cmp	r3, #0
 80265ba:	d0de      	beq.n	802657a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80265bc:	4a21      	ldr	r2, [pc, #132]	; (8026644 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80265be:	f8be c000 	ldrh.w	ip, [lr]
 80265c2:	6810      	ldr	r0, [r2, #0]
 80265c4:	fa1f fa83 	uxth.w	sl, r3
 80265c8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80265cc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80265d0:	43db      	mvns	r3, r3
 80265d2:	b2db      	uxtb	r3, r3
 80265d4:	fb12 f20a 	smulbb	r2, r2, sl
 80265d8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80265dc:	fb01 2103 	mla	r1, r1, r3, r2
 80265e0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80265e4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80265e8:	b2c0      	uxtb	r0, r0
 80265ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80265ee:	fa5f fc8c 	uxtb.w	ip, ip
 80265f2:	fb10 f00a 	smulbb	r0, r0, sl
 80265f6:	fb0c 0003 	mla	r0, ip, r3, r0
 80265fa:	b289      	uxth	r1, r1
 80265fc:	fb1b fb0a 	smulbb	fp, fp, sl
 8026600:	b280      	uxth	r0, r0
 8026602:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026606:	fb02 b203 	mla	r2, r2, r3, fp
 802660a:	1c4b      	adds	r3, r1, #1
 802660c:	f100 0b01 	add.w	fp, r0, #1
 8026610:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026614:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026618:	b292      	uxth	r2, r2
 802661a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802661e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026622:	ea4b 0101 	orr.w	r1, fp, r1
 8026626:	f102 0b01 	add.w	fp, r2, #1
 802662a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802662e:	0952      	lsrs	r2, r2, #5
 8026630:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026634:	4311      	orrs	r1, r2
 8026636:	f8ae 1000 	strh.w	r1, [lr]
 802663a:	e79e      	b.n	802657a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802663c:	b013      	add	sp, #76	; 0x4c
 802663e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026642:	bf00      	nop
 8026644:	200259a0 	.word	0x200259a0

08026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8026648:	b570      	push	{r4, r5, r6, lr}
 802664a:	1208      	asrs	r0, r1, #8
 802664c:	b29e      	uxth	r6, r3
 802664e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026652:	1213      	asrs	r3, r2, #8
 8026654:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026658:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802665c:	fb13 f305 	smulbb	r3, r3, r5
 8026660:	fb10 f006 	smulbb	r0, r0, r6
 8026664:	4418      	add	r0, r3
 8026666:	10cc      	asrs	r4, r1, #3
 8026668:	10d3      	asrs	r3, r2, #3
 802666a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802666e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026672:	fb13 f305 	smulbb	r3, r3, r5
 8026676:	fb14 f406 	smulbb	r4, r4, r6
 802667a:	00c9      	lsls	r1, r1, #3
 802667c:	00d2      	lsls	r2, r2, #3
 802667e:	441c      	add	r4, r3
 8026680:	b2d2      	uxtb	r2, r2
 8026682:	b2cb      	uxtb	r3, r1
 8026684:	fb12 f205 	smulbb	r2, r2, r5
 8026688:	b280      	uxth	r0, r0
 802668a:	fb13 f306 	smulbb	r3, r3, r6
 802668e:	4413      	add	r3, r2
 8026690:	1c42      	adds	r2, r0, #1
 8026692:	b29b      	uxth	r3, r3
 8026694:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026698:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802669c:	1c58      	adds	r0, r3, #1
 802669e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80266a2:	b2a4      	uxth	r4, r4
 80266a4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80266a8:	4310      	orrs	r0, r2
 80266aa:	1c62      	adds	r2, r4, #1
 80266ac:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80266b0:	0964      	lsrs	r4, r4, #5
 80266b2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80266b6:	4320      	orrs	r0, r4
 80266b8:	bd70      	pop	{r4, r5, r6, pc}
	...

080266bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80266bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266c0:	b08f      	sub	sp, #60	; 0x3c
 80266c2:	461c      	mov	r4, r3
 80266c4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80266c8:	9004      	str	r0, [sp, #16]
 80266ca:	460d      	mov	r5, r1
 80266cc:	4616      	mov	r6, r2
 80266ce:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80266d0:	2f00      	cmp	r7, #0
 80266d2:	f000 80f6 	beq.w	80268c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80266d6:	6820      	ldr	r0, [r4, #0]
 80266d8:	6861      	ldr	r1, [r4, #4]
 80266da:	aa0a      	add	r2, sp, #40	; 0x28
 80266dc:	c203      	stmia	r2!, {r0, r1}
 80266de:	6818      	ldr	r0, [r3, #0]
 80266e0:	6859      	ldr	r1, [r3, #4]
 80266e2:	aa0c      	add	r2, sp, #48	; 0x30
 80266e4:	c203      	stmia	r2!, {r0, r1}
 80266e6:	a80a      	add	r0, sp, #40	; 0x28
 80266e8:	f7ef fdde 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80266ec:	4621      	mov	r1, r4
 80266ee:	a80c      	add	r0, sp, #48	; 0x30
 80266f0:	f7ef fe02 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80266f4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80266f8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80266fc:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026700:	f002 0301 	and.w	r3, r2, #1
 8026704:	9306      	str	r3, [sp, #24]
 8026706:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802670a:	f003 0101 	and.w	r1, r3, #1
 802670e:	9105      	str	r1, [sp, #20]
 8026710:	9805      	ldr	r0, [sp, #20]
 8026712:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026716:	4403      	add	r3, r0
 8026718:	fb01 2303 	mla	r3, r1, r3, r2
 802671c:	f04f 0802 	mov.w	r8, #2
 8026720:	fb93 f3f8 	sdiv	r3, r3, r8
 8026724:	441d      	add	r5, r3
 8026726:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802672a:	441a      	add	r2, r3
 802672c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026730:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026734:	4419      	add	r1, r3
 8026736:	4b64      	ldr	r3, [pc, #400]	; (80268c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026738:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802673c:	6818      	ldr	r0, [r3, #0]
 802673e:	6803      	ldr	r3, [r0, #0]
 8026740:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026742:	4798      	blx	r3
 8026744:	4a61      	ldr	r2, [pc, #388]	; (80268cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8026746:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802674a:	8813      	ldrh	r3, [r2, #0]
 802674c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8026750:	2fff      	cmp	r7, #255	; 0xff
 8026752:	fb03 a404 	mla	r4, r3, r4, sl
 8026756:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802675a:	f106 0604 	add.w	r6, r6, #4
 802675e:	4611      	mov	r1, r2
 8026760:	fb03 fb0b 	mul.w	fp, r3, fp
 8026764:	d06b      	beq.n	802683e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8026766:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802676a:	9303      	str	r3, [sp, #12]
 802676c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026770:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026774:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026778:	9b07      	ldr	r3, [sp, #28]
 802677a:	42a3      	cmp	r3, r4
 802677c:	f240 809c 	bls.w	80268b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026780:	9b06      	ldr	r3, [sp, #24]
 8026782:	2b00      	cmp	r3, #0
 8026784:	d039      	beq.n	80267fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8026786:	782b      	ldrb	r3, [r5, #0]
 8026788:	8822      	ldrh	r2, [r4, #0]
 802678a:	9804      	ldr	r0, [sp, #16]
 802678c:	f003 030f 	and.w	r3, r3, #15
 8026790:	f105 0801 	add.w	r8, r5, #1
 8026794:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026798:	9b03      	ldr	r3, [sp, #12]
 802679a:	9300      	str	r3, [sp, #0]
 802679c:	463b      	mov	r3, r7
 802679e:	f7ff ff53 	bl	8026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80267a2:	f824 0b02 	strh.w	r0, [r4], #2
 80267a6:	f109 3bff 	add.w	fp, r9, #4294967295
 80267aa:	f1bb 0f01 	cmp.w	fp, #1
 80267ae:	46a2      	mov	sl, r4
 80267b0:	f104 0404 	add.w	r4, r4, #4
 80267b4:	dd24      	ble.n	8026800 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80267b6:	f898 3000 	ldrb.w	r3, [r8]
 80267ba:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80267be:	9804      	ldr	r0, [sp, #16]
 80267c0:	091b      	lsrs	r3, r3, #4
 80267c2:	f1ab 0b02 	sub.w	fp, fp, #2
 80267c6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80267ca:	9b03      	ldr	r3, [sp, #12]
 80267cc:	9300      	str	r3, [sp, #0]
 80267ce:	463b      	mov	r3, r7
 80267d0:	f7ff ff3a 	bl	8026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80267d4:	f824 0c04 	strh.w	r0, [r4, #-4]
 80267d8:	f818 3b01 	ldrb.w	r3, [r8], #1
 80267dc:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80267e0:	9804      	ldr	r0, [sp, #16]
 80267e2:	f003 030f 	and.w	r3, r3, #15
 80267e6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80267ea:	9b03      	ldr	r3, [sp, #12]
 80267ec:	9300      	str	r3, [sp, #0]
 80267ee:	463b      	mov	r3, r7
 80267f0:	f7ff ff2a 	bl	8026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80267f4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80267f8:	e7d7      	b.n	80267aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80267fa:	46a8      	mov	r8, r5
 80267fc:	46cb      	mov	fp, r9
 80267fe:	e7d4      	b.n	80267aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026800:	d10e      	bne.n	8026820 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026802:	f898 3000 	ldrb.w	r3, [r8]
 8026806:	f8ba 2000 	ldrh.w	r2, [sl]
 802680a:	9804      	ldr	r0, [sp, #16]
 802680c:	091b      	lsrs	r3, r3, #4
 802680e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026812:	9b03      	ldr	r3, [sp, #12]
 8026814:	9300      	str	r3, [sp, #0]
 8026816:	463b      	mov	r3, r7
 8026818:	f7ff ff16 	bl	8026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802681c:	f82a 0b02 	strh.w	r0, [sl], #2
 8026820:	9b08      	ldr	r3, [sp, #32]
 8026822:	9a05      	ldr	r2, [sp, #20]
 8026824:	881c      	ldrh	r4, [r3, #0]
 8026826:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802682a:	eba4 0409 	sub.w	r4, r4, r9
 802682e:	4413      	add	r3, r2
 8026830:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8026834:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026836:	fb93 f3f2 	sdiv	r3, r3, r2
 802683a:	441d      	add	r5, r3
 802683c:	e79c      	b.n	8026778 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802683e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8026842:	45a3      	cmp	fp, r4
 8026844:	d938      	bls.n	80268b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026846:	9b06      	ldr	r3, [sp, #24]
 8026848:	b1f3      	cbz	r3, 8026888 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802684a:	782b      	ldrb	r3, [r5, #0]
 802684c:	f003 030f 	and.w	r3, r3, #15
 8026850:	1c6a      	adds	r2, r5, #1
 8026852:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026856:	8023      	strh	r3, [r4, #0]
 8026858:	f109 30ff 	add.w	r0, r9, #4294967295
 802685c:	3402      	adds	r4, #2
 802685e:	2801      	cmp	r0, #1
 8026860:	4623      	mov	r3, r4
 8026862:	f104 0404 	add.w	r4, r4, #4
 8026866:	dd12      	ble.n	802688e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8026868:	7813      	ldrb	r3, [r2, #0]
 802686a:	091b      	lsrs	r3, r3, #4
 802686c:	3802      	subs	r0, #2
 802686e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026872:	f824 3c04 	strh.w	r3, [r4, #-4]
 8026876:	f812 3b01 	ldrb.w	r3, [r2], #1
 802687a:	f003 030f 	and.w	r3, r3, #15
 802687e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026882:	f824 3c02 	strh.w	r3, [r4, #-2]
 8026886:	e7ea      	b.n	802685e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026888:	462a      	mov	r2, r5
 802688a:	4648      	mov	r0, r9
 802688c:	e7e7      	b.n	802685e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802688e:	d106      	bne.n	802689e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026890:	7812      	ldrb	r2, [r2, #0]
 8026892:	0912      	lsrs	r2, r2, #4
 8026894:	3302      	adds	r3, #2
 8026896:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802689a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802689e:	880c      	ldrh	r4, [r1, #0]
 80268a0:	9a05      	ldr	r2, [sp, #20]
 80268a2:	eba4 0409 	sub.w	r4, r4, r9
 80268a6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80268aa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80268ae:	4413      	add	r3, r2
 80268b0:	fb93 f3f8 	sdiv	r3, r3, r8
 80268b4:	441d      	add	r5, r3
 80268b6:	e7c4      	b.n	8026842 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80268b8:	4b03      	ldr	r3, [pc, #12]	; (80268c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80268ba:	6818      	ldr	r0, [r3, #0]
 80268bc:	6803      	ldr	r3, [r0, #0]
 80268be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80268c0:	4798      	blx	r3
 80268c2:	b00f      	add	sp, #60	; 0x3c
 80268c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80268c8:	20025998 	.word	0x20025998
 80268cc:	20025992 	.word	0x20025992

080268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80268d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80268d2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80268d6:	2dff      	cmp	r5, #255	; 0xff
 80268d8:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80268dc:	d10c      	bne.n	80268f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80268de:	2bff      	cmp	r3, #255	; 0xff
 80268e0:	d10a      	bne.n	80268f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80268e2:	4b25      	ldr	r3, [pc, #148]	; (8026978 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80268e4:	0948      	lsrs	r0, r1, #5
 80268e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80268ea:	403b      	ands	r3, r7
 80268ec:	4318      	orrs	r0, r3
 80268ee:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80268f2:	4308      	orrs	r0, r1
 80268f4:	b280      	uxth	r0, r0
 80268f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80268f8:	fb15 f503 	smulbb	r5, r5, r3
 80268fc:	b2ab      	uxth	r3, r5
 80268fe:	1c5d      	adds	r5, r3, #1
 8026900:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026904:	1214      	asrs	r4, r2, #8
 8026906:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802690a:	fa1f fc85 	uxth.w	ip, r5
 802690e:	10d6      	asrs	r6, r2, #3
 8026910:	00d0      	lsls	r0, r2, #3
 8026912:	43ed      	mvns	r5, r5
 8026914:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026918:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802691c:	b2eb      	uxtb	r3, r5
 802691e:	b2c0      	uxtb	r0, r0
 8026920:	fb12 f20c 	smulbb	r2, r2, ip
 8026924:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026928:	fb04 2403 	mla	r4, r4, r3, r2
 802692c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026930:	b2c8      	uxtb	r0, r1
 8026932:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8026936:	b2fd      	uxtb	r5, r7
 8026938:	fb10 f00c 	smulbb	r0, r0, ip
 802693c:	b2a4      	uxth	r4, r4
 802693e:	fb02 0003 	mla	r0, r2, r3, r0
 8026942:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8026946:	fb15 f50c 	smulbb	r5, r5, ip
 802694a:	fb06 5503 	mla	r5, r6, r3, r5
 802694e:	b283      	uxth	r3, r0
 8026950:	1c60      	adds	r0, r4, #1
 8026952:	b2ad      	uxth	r5, r5
 8026954:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8026958:	1c58      	adds	r0, r3, #1
 802695a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802695e:	1c6b      	adds	r3, r5, #1
 8026960:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026964:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026968:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802696c:	096d      	lsrs	r5, r5, #5
 802696e:	4320      	orrs	r0, r4
 8026970:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026974:	4328      	orrs	r0, r5
 8026976:	e7be      	b.n	80268f6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8026978:	00fff800 	.word	0x00fff800

0802697c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802697c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026980:	461c      	mov	r4, r3
 8026982:	b08d      	sub	sp, #52	; 0x34
 8026984:	460d      	mov	r5, r1
 8026986:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8026988:	6861      	ldr	r1, [r4, #4]
 802698a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802698e:	4680      	mov	r8, r0
 8026990:	6820      	ldr	r0, [r4, #0]
 8026992:	4616      	mov	r6, r2
 8026994:	aa08      	add	r2, sp, #32
 8026996:	c203      	stmia	r2!, {r0, r1}
 8026998:	6818      	ldr	r0, [r3, #0]
 802699a:	6859      	ldr	r1, [r3, #4]
 802699c:	aa0a      	add	r2, sp, #40	; 0x28
 802699e:	c203      	stmia	r2!, {r0, r1}
 80269a0:	a808      	add	r0, sp, #32
 80269a2:	f7ef fc81 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80269a6:	4621      	mov	r1, r4
 80269a8:	a80a      	add	r0, sp, #40	; 0x28
 80269aa:	f7ef fca5 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80269ae:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80269b2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80269b6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80269ba:	f002 0301 	and.w	r3, r2, #1
 80269be:	9303      	str	r3, [sp, #12]
 80269c0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80269c4:	f003 0101 	and.w	r1, r3, #1
 80269c8:	9102      	str	r1, [sp, #8]
 80269ca:	9802      	ldr	r0, [sp, #8]
 80269cc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80269d0:	4403      	add	r3, r0
 80269d2:	fb01 2303 	mla	r3, r1, r3, r2
 80269d6:	f04f 0a02 	mov.w	sl, #2
 80269da:	fb93 f3fa 	sdiv	r3, r3, sl
 80269de:	441d      	add	r5, r3
 80269e0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80269e4:	441a      	add	r2, r3
 80269e6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80269ea:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80269ee:	4a3f      	ldr	r2, [pc, #252]	; (8026aec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80269f0:	9205      	str	r2, [sp, #20]
 80269f2:	4419      	add	r1, r3
 80269f4:	6810      	ldr	r0, [r2, #0]
 80269f6:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80269fa:	6803      	ldr	r3, [r0, #0]
 80269fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80269fe:	4798      	blx	r3
 8026a00:	4b3b      	ldr	r3, [pc, #236]	; (8026af0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026a02:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8026a06:	8819      	ldrh	r1, [r3, #0]
 8026a08:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8026a0c:	fb01 c404 	mla	r4, r1, r4, ip
 8026a10:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026a14:	434f      	muls	r7, r1
 8026a16:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8026a1a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8026a1e:	3604      	adds	r6, #4
 8026a20:	9204      	str	r2, [sp, #16]
 8026a22:	9b04      	ldr	r3, [sp, #16]
 8026a24:	429c      	cmp	r4, r3
 8026a26:	d258      	bcs.n	8026ada <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8026a28:	9b03      	ldr	r3, [sp, #12]
 8026a2a:	2b00      	cmp	r3, #0
 8026a2c:	d034      	beq.n	8026a98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8026a2e:	782b      	ldrb	r3, [r5, #0]
 8026a30:	f003 030f 	and.w	r3, r3, #15
 8026a34:	1c6f      	adds	r7, r5, #1
 8026a36:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026a3a:	0e0b      	lsrs	r3, r1, #24
 8026a3c:	d006      	beq.n	8026a4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8026a3e:	8822      	ldrh	r2, [r4, #0]
 8026a40:	9300      	str	r3, [sp, #0]
 8026a42:	4640      	mov	r0, r8
 8026a44:	464b      	mov	r3, r9
 8026a46:	f7ff ff43 	bl	80268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026a4a:	8020      	strh	r0, [r4, #0]
 8026a4c:	3402      	adds	r4, #2
 8026a4e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8026a52:	f1ba 0f01 	cmp.w	sl, #1
 8026a56:	dd22      	ble.n	8026a9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8026a58:	783b      	ldrb	r3, [r7, #0]
 8026a5a:	091b      	lsrs	r3, r3, #4
 8026a5c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026a60:	0e0b      	lsrs	r3, r1, #24
 8026a62:	d006      	beq.n	8026a72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8026a64:	8822      	ldrh	r2, [r4, #0]
 8026a66:	9300      	str	r3, [sp, #0]
 8026a68:	4640      	mov	r0, r8
 8026a6a:	464b      	mov	r3, r9
 8026a6c:	f7ff ff30 	bl	80268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026a70:	8020      	strh	r0, [r4, #0]
 8026a72:	f817 3b01 	ldrb.w	r3, [r7], #1
 8026a76:	f003 030f 	and.w	r3, r3, #15
 8026a7a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026a7e:	0e0b      	lsrs	r3, r1, #24
 8026a80:	d006      	beq.n	8026a90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026a82:	8862      	ldrh	r2, [r4, #2]
 8026a84:	9300      	str	r3, [sp, #0]
 8026a86:	4640      	mov	r0, r8
 8026a88:	464b      	mov	r3, r9
 8026a8a:	f7ff ff21 	bl	80268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026a8e:	8060      	strh	r0, [r4, #2]
 8026a90:	3404      	adds	r4, #4
 8026a92:	f1aa 0a02 	sub.w	sl, sl, #2
 8026a96:	e7dc      	b.n	8026a52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026a98:	462f      	mov	r7, r5
 8026a9a:	46da      	mov	sl, fp
 8026a9c:	e7d9      	b.n	8026a52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026a9e:	d10d      	bne.n	8026abc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026aa0:	783b      	ldrb	r3, [r7, #0]
 8026aa2:	091b      	lsrs	r3, r3, #4
 8026aa4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026aa8:	0e0b      	lsrs	r3, r1, #24
 8026aaa:	d006      	beq.n	8026aba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8026aac:	8822      	ldrh	r2, [r4, #0]
 8026aae:	9300      	str	r3, [sp, #0]
 8026ab0:	4640      	mov	r0, r8
 8026ab2:	464b      	mov	r3, r9
 8026ab4:	f7ff ff0c 	bl	80268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026ab8:	8020      	strh	r0, [r4, #0]
 8026aba:	3402      	adds	r4, #2
 8026abc:	9b06      	ldr	r3, [sp, #24]
 8026abe:	9a02      	ldr	r2, [sp, #8]
 8026ac0:	881b      	ldrh	r3, [r3, #0]
 8026ac2:	eba3 030b 	sub.w	r3, r3, fp
 8026ac6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8026aca:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026ace:	4413      	add	r3, r2
 8026ad0:	9a07      	ldr	r2, [sp, #28]
 8026ad2:	fb93 f3f2 	sdiv	r3, r3, r2
 8026ad6:	441d      	add	r5, r3
 8026ad8:	e7a3      	b.n	8026a22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8026ada:	9b05      	ldr	r3, [sp, #20]
 8026adc:	6818      	ldr	r0, [r3, #0]
 8026ade:	6803      	ldr	r3, [r0, #0]
 8026ae0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026ae2:	4798      	blx	r3
 8026ae4:	b00d      	add	sp, #52	; 0x34
 8026ae6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026aea:	bf00      	nop
 8026aec:	20025998 	.word	0x20025998
 8026af0:	20025992 	.word	0x20025992

08026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8026af4:	b570      	push	{r4, r5, r6, lr}
 8026af6:	1214      	asrs	r4, r2, #8
 8026af8:	788d      	ldrb	r5, [r1, #2]
 8026afa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8026afe:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026b02:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026b06:	fb15 f503 	smulbb	r5, r5, r3
 8026b0a:	fb04 5506 	mla	r5, r4, r6, r5
 8026b0e:	10d0      	asrs	r0, r2, #3
 8026b10:	784c      	ldrb	r4, [r1, #1]
 8026b12:	7809      	ldrb	r1, [r1, #0]
 8026b14:	00d2      	lsls	r2, r2, #3
 8026b16:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026b1a:	b2d2      	uxtb	r2, r2
 8026b1c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026b20:	fb14 f403 	smulbb	r4, r4, r3
 8026b24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8026b28:	fb11 f303 	smulbb	r3, r1, r3
 8026b2c:	fb00 4406 	mla	r4, r0, r6, r4
 8026b30:	fb02 3306 	mla	r3, r2, r6, r3
 8026b34:	b2ad      	uxth	r5, r5
 8026b36:	b29b      	uxth	r3, r3
 8026b38:	b2a4      	uxth	r4, r4
 8026b3a:	1c68      	adds	r0, r5, #1
 8026b3c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8026b40:	1c62      	adds	r2, r4, #1
 8026b42:	1c58      	adds	r0, r3, #1
 8026b44:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026b48:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026b4c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026b50:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026b54:	0964      	lsrs	r4, r4, #5
 8026b56:	4328      	orrs	r0, r5
 8026b58:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026b5c:	4320      	orrs	r0, r4
 8026b5e:	bd70      	pop	{r4, r5, r6, pc}

08026b60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8026b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026b64:	b08f      	sub	sp, #60	; 0x3c
 8026b66:	461c      	mov	r4, r3
 8026b68:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026b6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026b6e:	4682      	mov	sl, r0
 8026b70:	460e      	mov	r6, r1
 8026b72:	4615      	mov	r5, r2
 8026b74:	2f00      	cmp	r7, #0
 8026b76:	f000 8142 	beq.w	8026dfe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8026b7a:	6820      	ldr	r0, [r4, #0]
 8026b7c:	6861      	ldr	r1, [r4, #4]
 8026b7e:	aa0a      	add	r2, sp, #40	; 0x28
 8026b80:	c203      	stmia	r2!, {r0, r1}
 8026b82:	6818      	ldr	r0, [r3, #0]
 8026b84:	6859      	ldr	r1, [r3, #4]
 8026b86:	aa0c      	add	r2, sp, #48	; 0x30
 8026b88:	c203      	stmia	r2!, {r0, r1}
 8026b8a:	a80a      	add	r0, sp, #40	; 0x28
 8026b8c:	f7ef fb8c 	bl	80162a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026b90:	4621      	mov	r1, r4
 8026b92:	a80c      	add	r0, sp, #48	; 0x30
 8026b94:	f7ef fbb0 	bl	80162f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026b98:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026b9c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026ba0:	f002 0301 	and.w	r3, r2, #1
 8026ba4:	9306      	str	r3, [sp, #24]
 8026ba6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026baa:	f003 0101 	and.w	r1, r3, #1
 8026bae:	9105      	str	r1, [sp, #20]
 8026bb0:	9805      	ldr	r0, [sp, #20]
 8026bb2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026bb6:	4403      	add	r3, r0
 8026bb8:	fb01 2303 	mla	r3, r1, r3, r2
 8026bbc:	f04f 0802 	mov.w	r8, #2
 8026bc0:	fb93 f3f8 	sdiv	r3, r3, r8
 8026bc4:	441e      	add	r6, r3
 8026bc6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8026bca:	441a      	add	r2, r3
 8026bcc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026bd0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026bd4:	4419      	add	r1, r3
 8026bd6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8026bda:	9303      	str	r3, [sp, #12]
 8026bdc:	4b89      	ldr	r3, [pc, #548]	; (8026e04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026bde:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026be2:	6818      	ldr	r0, [r3, #0]
 8026be4:	6803      	ldr	r3, [r0, #0]
 8026be6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026be8:	4798      	blx	r3
 8026bea:	4a87      	ldr	r2, [pc, #540]	; (8026e08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026bec:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026bf0:	8813      	ldrh	r3, [r2, #0]
 8026bf2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8026bf6:	2fff      	cmp	r7, #255	; 0xff
 8026bf8:	fb03 9404 	mla	r4, r3, r4, r9
 8026bfc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026c00:	f105 0504 	add.w	r5, r5, #4
 8026c04:	4694      	mov	ip, r2
 8026c06:	fb03 f30b 	mul.w	r3, r3, fp
 8026c0a:	d071      	beq.n	8026cf0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026c0c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026c10:	43f9      	mvns	r1, r7
 8026c12:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026c16:	b2c9      	uxtb	r1, r1
 8026c18:	9104      	str	r1, [sp, #16]
 8026c1a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026c1e:	9b07      	ldr	r3, [sp, #28]
 8026c20:	42a3      	cmp	r3, r4
 8026c22:	f240 80e7 	bls.w	8026df4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026c26:	9b06      	ldr	r3, [sp, #24]
 8026c28:	2b00      	cmp	r3, #0
 8026c2a:	d03d      	beq.n	8026ca8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026c2c:	7831      	ldrb	r1, [r6, #0]
 8026c2e:	9b04      	ldr	r3, [sp, #16]
 8026c30:	8822      	ldrh	r2, [r4, #0]
 8026c32:	9300      	str	r3, [sp, #0]
 8026c34:	f001 010f 	and.w	r1, r1, #15
 8026c38:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026c3c:	463b      	mov	r3, r7
 8026c3e:	4429      	add	r1, r5
 8026c40:	4650      	mov	r0, sl
 8026c42:	f7ff ff57 	bl	8026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026c46:	9b03      	ldr	r3, [sp, #12]
 8026c48:	f824 0b02 	strh.w	r0, [r4], #2
 8026c4c:	f106 0801 	add.w	r8, r6, #1
 8026c50:	f103 3bff 	add.w	fp, r3, #4294967295
 8026c54:	f1bb 0f01 	cmp.w	fp, #1
 8026c58:	46a1      	mov	r9, r4
 8026c5a:	f104 0404 	add.w	r4, r4, #4
 8026c5e:	dd27      	ble.n	8026cb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026c60:	f898 1000 	ldrb.w	r1, [r8]
 8026c64:	9b04      	ldr	r3, [sp, #16]
 8026c66:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026c6a:	9300      	str	r3, [sp, #0]
 8026c6c:	0909      	lsrs	r1, r1, #4
 8026c6e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026c72:	463b      	mov	r3, r7
 8026c74:	4429      	add	r1, r5
 8026c76:	4650      	mov	r0, sl
 8026c78:	f7ff ff3c 	bl	8026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026c7c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026c80:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026c84:	9b04      	ldr	r3, [sp, #16]
 8026c86:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026c8a:	9300      	str	r3, [sp, #0]
 8026c8c:	f001 010f 	and.w	r1, r1, #15
 8026c90:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026c94:	463b      	mov	r3, r7
 8026c96:	4429      	add	r1, r5
 8026c98:	4650      	mov	r0, sl
 8026c9a:	f7ff ff2b 	bl	8026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026c9e:	f1ab 0b02 	sub.w	fp, fp, #2
 8026ca2:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026ca6:	e7d5      	b.n	8026c54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026ca8:	46b0      	mov	r8, r6
 8026caa:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026cae:	e7d1      	b.n	8026c54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026cb0:	d10f      	bne.n	8026cd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026cb2:	f898 1000 	ldrb.w	r1, [r8]
 8026cb6:	9b04      	ldr	r3, [sp, #16]
 8026cb8:	f8b9 2000 	ldrh.w	r2, [r9]
 8026cbc:	9300      	str	r3, [sp, #0]
 8026cbe:	0909      	lsrs	r1, r1, #4
 8026cc0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026cc4:	463b      	mov	r3, r7
 8026cc6:	4429      	add	r1, r5
 8026cc8:	4650      	mov	r0, sl
 8026cca:	f7ff ff13 	bl	8026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026cce:	f829 0b02 	strh.w	r0, [r9], #2
 8026cd2:	9b08      	ldr	r3, [sp, #32]
 8026cd4:	9a05      	ldr	r2, [sp, #20]
 8026cd6:	881c      	ldrh	r4, [r3, #0]
 8026cd8:	9b03      	ldr	r3, [sp, #12]
 8026cda:	1ae4      	subs	r4, r4, r3
 8026cdc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026ce0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026ce4:	4413      	add	r3, r2
 8026ce6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026ce8:	fb93 f3f2 	sdiv	r3, r3, r2
 8026cec:	441e      	add	r6, r3
 8026cee:	e796      	b.n	8026c1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026cf0:	4f46      	ldr	r7, [pc, #280]	; (8026e0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026cf2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026cf6:	42a3      	cmp	r3, r4
 8026cf8:	d97c      	bls.n	8026df4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026cfa:	9a06      	ldr	r2, [sp, #24]
 8026cfc:	2a00      	cmp	r2, #0
 8026cfe:	d054      	beq.n	8026daa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026d00:	7830      	ldrb	r0, [r6, #0]
 8026d02:	f000 000f 	and.w	r0, r0, #15
 8026d06:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026d0a:	eb05 0e00 	add.w	lr, r5, r0
 8026d0e:	5c28      	ldrb	r0, [r5, r0]
 8026d10:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026d14:	f89e e001 	ldrb.w	lr, [lr, #1]
 8026d18:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026d1c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026d20:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026d24:	ea42 020e 	orr.w	r2, r2, lr
 8026d28:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026d2c:	f824 2b02 	strh.w	r2, [r4], #2
 8026d30:	9a03      	ldr	r2, [sp, #12]
 8026d32:	1c71      	adds	r1, r6, #1
 8026d34:	f102 3eff 	add.w	lr, r2, #4294967295
 8026d38:	f1be 0f01 	cmp.w	lr, #1
 8026d3c:	4620      	mov	r0, r4
 8026d3e:	f104 0404 	add.w	r4, r4, #4
 8026d42:	dd36      	ble.n	8026db2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026d44:	7808      	ldrb	r0, [r1, #0]
 8026d46:	0900      	lsrs	r0, r0, #4
 8026d48:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026d4c:	eb05 0a00 	add.w	sl, r5, r0
 8026d50:	f1ae 0e02 	sub.w	lr, lr, #2
 8026d54:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026d58:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026d5c:	00d2      	lsls	r2, r2, #3
 8026d5e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026d62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026d66:	ea49 0202 	orr.w	r2, r9, r2
 8026d6a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026d6e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026d72:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026d76:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026d7a:	f000 000f 	and.w	r0, r0, #15
 8026d7e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026d82:	eb05 0a00 	add.w	sl, r5, r0
 8026d86:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026d8a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026d8e:	00d2      	lsls	r2, r2, #3
 8026d90:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026d94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026d98:	ea49 0202 	orr.w	r2, r9, r2
 8026d9c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026da0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026da4:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026da8:	e7c6      	b.n	8026d38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026daa:	4631      	mov	r1, r6
 8026dac:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026db0:	e7c2      	b.n	8026d38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026db2:	d111      	bne.n	8026dd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026db4:	7809      	ldrb	r1, [r1, #0]
 8026db6:	0909      	lsrs	r1, r1, #4
 8026db8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026dbc:	186c      	adds	r4, r5, r1
 8026dbe:	5c69      	ldrb	r1, [r5, r1]
 8026dc0:	78a2      	ldrb	r2, [r4, #2]
 8026dc2:	7864      	ldrb	r4, [r4, #1]
 8026dc4:	00e4      	lsls	r4, r4, #3
 8026dc6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026dca:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026dce:	4322      	orrs	r2, r4
 8026dd0:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026dd4:	f820 2b02 	strh.w	r2, [r0], #2
 8026dd8:	9a03      	ldr	r2, [sp, #12]
 8026dda:	f8bc 4000 	ldrh.w	r4, [ip]
 8026dde:	9905      	ldr	r1, [sp, #20]
 8026de0:	1aa4      	subs	r4, r4, r2
 8026de2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8026de6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026dea:	440a      	add	r2, r1
 8026dec:	fb92 f2f8 	sdiv	r2, r2, r8
 8026df0:	4416      	add	r6, r2
 8026df2:	e780      	b.n	8026cf6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026df4:	4b03      	ldr	r3, [pc, #12]	; (8026e04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026df6:	6818      	ldr	r0, [r3, #0]
 8026df8:	6803      	ldr	r3, [r0, #0]
 8026dfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026dfc:	4798      	blx	r3
 8026dfe:	b00f      	add	sp, #60	; 0x3c
 8026e00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e04:	20025998 	.word	0x20025998
 8026e08:	20025992 	.word	0x20025992
 8026e0c:	fffff800 	.word	0xfffff800

08026e10 <CRC_Lock>:
 8026e10:	b530      	push	{r4, r5, lr}
 8026e12:	4a20      	ldr	r2, [pc, #128]	; (8026e94 <CRC_Lock+0x84>)
 8026e14:	6813      	ldr	r3, [r2, #0]
 8026e16:	f023 0301 	bic.w	r3, r3, #1
 8026e1a:	6013      	str	r3, [r2, #0]
 8026e1c:	4b1e      	ldr	r3, [pc, #120]	; (8026e98 <CRC_Lock+0x88>)
 8026e1e:	681a      	ldr	r2, [r3, #0]
 8026e20:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026e24:	4022      	ands	r2, r4
 8026e26:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026e2a:	42aa      	cmp	r2, r5
 8026e2c:	d005      	beq.n	8026e3a <CRC_Lock+0x2a>
 8026e2e:	681b      	ldr	r3, [r3, #0]
 8026e30:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026e34:	4023      	ands	r3, r4
 8026e36:	4293      	cmp	r3, r2
 8026e38:	d124      	bne.n	8026e84 <CRC_Lock+0x74>
 8026e3a:	4b18      	ldr	r3, [pc, #96]	; (8026e9c <CRC_Lock+0x8c>)
 8026e3c:	681b      	ldr	r3, [r3, #0]
 8026e3e:	bb0b      	cbnz	r3, 8026e84 <CRC_Lock+0x74>
 8026e40:	4b17      	ldr	r3, [pc, #92]	; (8026ea0 <CRC_Lock+0x90>)
 8026e42:	681a      	ldr	r2, [r3, #0]
 8026e44:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026e48:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026e4c:	d00d      	beq.n	8026e6a <CRC_Lock+0x5a>
 8026e4e:	681a      	ldr	r2, [r3, #0]
 8026e50:	f240 4483 	movw	r4, #1155	; 0x483
 8026e54:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026e58:	42a2      	cmp	r2, r4
 8026e5a:	d006      	beq.n	8026e6a <CRC_Lock+0x5a>
 8026e5c:	681b      	ldr	r3, [r3, #0]
 8026e5e:	f240 4285 	movw	r2, #1157	; 0x485
 8026e62:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026e66:	4293      	cmp	r3, r2
 8026e68:	d10c      	bne.n	8026e84 <CRC_Lock+0x74>
 8026e6a:	4b0e      	ldr	r3, [pc, #56]	; (8026ea4 <CRC_Lock+0x94>)
 8026e6c:	2201      	movs	r2, #1
 8026e6e:	601a      	str	r2, [r3, #0]
 8026e70:	681a      	ldr	r2, [r3, #0]
 8026e72:	2a00      	cmp	r2, #0
 8026e74:	d1fc      	bne.n	8026e70 <CRC_Lock+0x60>
 8026e76:	4b0c      	ldr	r3, [pc, #48]	; (8026ea8 <CRC_Lock+0x98>)
 8026e78:	6018      	str	r0, [r3, #0]
 8026e7a:	6818      	ldr	r0, [r3, #0]
 8026e7c:	1a43      	subs	r3, r0, r1
 8026e7e:	4258      	negs	r0, r3
 8026e80:	4158      	adcs	r0, r3
 8026e82:	bd30      	pop	{r4, r5, pc}
 8026e84:	4b09      	ldr	r3, [pc, #36]	; (8026eac <CRC_Lock+0x9c>)
 8026e86:	2201      	movs	r2, #1
 8026e88:	601a      	str	r2, [r3, #0]
 8026e8a:	681a      	ldr	r2, [r3, #0]
 8026e8c:	2a00      	cmp	r2, #0
 8026e8e:	d1fc      	bne.n	8026e8a <CRC_Lock+0x7a>
 8026e90:	4b07      	ldr	r3, [pc, #28]	; (8026eb0 <CRC_Lock+0xa0>)
 8026e92:	e7f1      	b.n	8026e78 <CRC_Lock+0x68>
 8026e94:	e0002000 	.word	0xe0002000
 8026e98:	e000ed00 	.word	0xe000ed00
 8026e9c:	e0042000 	.word	0xe0042000
 8026ea0:	5c001000 	.word	0x5c001000
 8026ea4:	58024c08 	.word	0x58024c08
 8026ea8:	58024c00 	.word	0x58024c00
 8026eac:	40023008 	.word	0x40023008
 8026eb0:	40023000 	.word	0x40023000

08026eb4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026eb4:	6101      	str	r1, [r0, #16]
 8026eb6:	4770      	bx	lr

08026eb8 <_ZN8touchgfx8Gestures4tickEv>:
 8026eb8:	7b83      	ldrb	r3, [r0, #14]
 8026eba:	b14b      	cbz	r3, 8026ed0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026ebc:	8903      	ldrh	r3, [r0, #8]
 8026ebe:	3301      	adds	r3, #1
 8026ec0:	b29b      	uxth	r3, r3
 8026ec2:	2b07      	cmp	r3, #7
 8026ec4:	8103      	strh	r3, [r0, #8]
 8026ec6:	bf81      	itttt	hi
 8026ec8:	2300      	movhi	r3, #0
 8026eca:	8143      	strhhi	r3, [r0, #10]
 8026ecc:	8183      	strhhi	r3, [r0, #12]
 8026ece:	7383      	strbhi	r3, [r0, #14]
 8026ed0:	4770      	bx	lr
	...

08026ed4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026ed4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026ed8:	4698      	mov	r8, r3
 8026eda:	8883      	ldrh	r3, [r0, #4]
 8026edc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026ee0:	eba8 0303 	sub.w	r3, r8, r3
 8026ee4:	b21b      	sxth	r3, r3
 8026ee6:	4604      	mov	r4, r0
 8026ee8:	2b00      	cmp	r3, #0
 8026eea:	4617      	mov	r7, r2
 8026eec:	4a18      	ldr	r2, [pc, #96]	; (8026f50 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026eee:	9200      	str	r2, [sp, #0]
 8026ef0:	bfb8      	it	lt
 8026ef2:	425b      	neglt	r3, r3
 8026ef4:	8aa2      	ldrh	r2, [r4, #20]
 8026ef6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026efa:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026efe:	b21b      	sxth	r3, r3
 8026f00:	460e      	mov	r6, r1
 8026f02:	4293      	cmp	r3, r2
 8026f04:	88c1      	ldrh	r1, [r0, #6]
 8026f06:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026f0a:	f04f 0000 	mov.w	r0, #0
 8026f0e:	f88d 0004 	strb.w	r0, [sp, #4]
 8026f12:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026f16:	dc07      	bgt.n	8026f28 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026f18:	1a69      	subs	r1, r5, r1
 8026f1a:	b209      	sxth	r1, r1
 8026f1c:	2900      	cmp	r1, #0
 8026f1e:	bfb8      	it	lt
 8026f20:	4249      	neglt	r1, r1
 8026f22:	b209      	sxth	r1, r1
 8026f24:	428a      	cmp	r2, r1
 8026f26:	da10      	bge.n	8026f4a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026f28:	6920      	ldr	r0, [r4, #16]
 8026f2a:	6803      	ldr	r3, [r0, #0]
 8026f2c:	4669      	mov	r1, sp
 8026f2e:	685b      	ldr	r3, [r3, #4]
 8026f30:	4798      	blx	r3
 8026f32:	eba8 0606 	sub.w	r6, r8, r6
 8026f36:	2300      	movs	r3, #0
 8026f38:	1bef      	subs	r7, r5, r7
 8026f3a:	2001      	movs	r0, #1
 8026f3c:	8123      	strh	r3, [r4, #8]
 8026f3e:	8166      	strh	r6, [r4, #10]
 8026f40:	81a7      	strh	r7, [r4, #12]
 8026f42:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026f46:	80e5      	strh	r5, [r4, #6]
 8026f48:	73a0      	strb	r0, [r4, #14]
 8026f4a:	b004      	add	sp, #16
 8026f4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026f50:	0802c0f0 	.word	0x0802c0f0

08026f54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026f54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026f56:	461e      	mov	r6, r3
 8026f58:	1e4b      	subs	r3, r1, #1
 8026f5a:	2b01      	cmp	r3, #1
 8026f5c:	b085      	sub	sp, #20
 8026f5e:	4604      	mov	r4, r0
 8026f60:	460d      	mov	r5, r1
 8026f62:	4617      	mov	r7, r2
 8026f64:	d84b      	bhi.n	8026ffe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026f66:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026f6a:	1cd3      	adds	r3, r2, #3
 8026f6c:	b29b      	uxth	r3, r3
 8026f6e:	2b06      	cmp	r3, #6
 8026f70:	d916      	bls.n	8026fa0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026f72:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8027014 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026f76:	f8cd c004 	str.w	ip, [sp, #4]
 8026f7a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026f7e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026f82:	6900      	ldr	r0, [r0, #16]
 8026f84:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026f88:	f04f 0c00 	mov.w	ip, #0
 8026f8c:	f88d c008 	strb.w	ip, [sp, #8]
 8026f90:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026f94:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026f98:	6803      	ldr	r3, [r0, #0]
 8026f9a:	a901      	add	r1, sp, #4
 8026f9c:	689b      	ldr	r3, [r3, #8]
 8026f9e:	4798      	blx	r3
 8026fa0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026fa4:	1cd3      	adds	r3, r2, #3
 8026fa6:	b29b      	uxth	r3, r3
 8026fa8:	2b06      	cmp	r3, #6
 8026faa:	d916      	bls.n	8026fda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026fac:	f8df c064 	ldr.w	ip, [pc, #100]	; 8027014 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026fb0:	f8cd c004 	str.w	ip, [sp, #4]
 8026fb4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026fb8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026fbc:	6920      	ldr	r0, [r4, #16]
 8026fbe:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026fc2:	f04f 0c01 	mov.w	ip, #1
 8026fc6:	f88d c008 	strb.w	ip, [sp, #8]
 8026fca:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026fce:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026fd2:	6803      	ldr	r3, [r0, #0]
 8026fd4:	a901      	add	r1, sp, #4
 8026fd6:	689b      	ldr	r3, [r3, #8]
 8026fd8:	4798      	blx	r3
 8026fda:	4b0d      	ldr	r3, [pc, #52]	; (8027010 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026fdc:	9301      	str	r3, [sp, #4]
 8026fde:	6920      	ldr	r0, [r4, #16]
 8026fe0:	f88d 5008 	strb.w	r5, [sp, #8]
 8026fe4:	2300      	movs	r3, #0
 8026fe6:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026fea:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026fee:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026ff2:	6803      	ldr	r3, [r0, #0]
 8026ff4:	a901      	add	r1, sp, #4
 8026ff6:	681b      	ldr	r3, [r3, #0]
 8026ff8:	4798      	blx	r3
 8026ffa:	b005      	add	sp, #20
 8026ffc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026ffe:	2900      	cmp	r1, #0
 8027000:	d1eb      	bne.n	8026fda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027002:	80a2      	strh	r2, [r4, #4]
 8027004:	80c6      	strh	r6, [r0, #6]
 8027006:	60a1      	str	r1, [r4, #8]
 8027008:	81a1      	strh	r1, [r4, #12]
 802700a:	73a1      	strb	r1, [r4, #14]
 802700c:	e7e5      	b.n	8026fda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802700e:	bf00      	nop
 8027010:	0802c0dc 	.word	0x0802c0dc
 8027014:	0802c104 	.word	0x0802c104

08027018 <__aeabi_atexit>:
 8027018:	460b      	mov	r3, r1
 802701a:	4601      	mov	r1, r0
 802701c:	4618      	mov	r0, r3
 802701e:	f002 b803 	b.w	8029028 <__cxa_atexit>

08027022 <_ZdlPvj>:
 8027022:	f000 b812 	b.w	802704a <_ZdlPv>

08027026 <__cxa_guard_acquire>:
 8027026:	6803      	ldr	r3, [r0, #0]
 8027028:	07db      	lsls	r3, r3, #31
 802702a:	d406      	bmi.n	802703a <__cxa_guard_acquire+0x14>
 802702c:	7843      	ldrb	r3, [r0, #1]
 802702e:	b103      	cbz	r3, 8027032 <__cxa_guard_acquire+0xc>
 8027030:	deff      	udf	#255	; 0xff
 8027032:	2301      	movs	r3, #1
 8027034:	7043      	strb	r3, [r0, #1]
 8027036:	4618      	mov	r0, r3
 8027038:	4770      	bx	lr
 802703a:	2000      	movs	r0, #0
 802703c:	4770      	bx	lr

0802703e <__cxa_guard_release>:
 802703e:	2301      	movs	r3, #1
 8027040:	6003      	str	r3, [r0, #0]
 8027042:	4770      	bx	lr

08027044 <__cxa_pure_virtual>:
 8027044:	b508      	push	{r3, lr}
 8027046:	f000 f80f 	bl	8027068 <_ZSt9terminatev>

0802704a <_ZdlPv>:
 802704a:	f001 bf39 	b.w	8028ec0 <free>

0802704e <_ZN10__cxxabiv111__terminateEPFvvE>:
 802704e:	b508      	push	{r3, lr}
 8027050:	4780      	blx	r0
 8027052:	f001 ff01 	bl	8028e58 <abort>
	...

08027058 <_ZSt13get_terminatev>:
 8027058:	4b02      	ldr	r3, [pc, #8]	; (8027064 <_ZSt13get_terminatev+0xc>)
 802705a:	6818      	ldr	r0, [r3, #0]
 802705c:	f3bf 8f5b 	dmb	ish
 8027060:	4770      	bx	lr
 8027062:	bf00      	nop
 8027064:	20000320 	.word	0x20000320

08027068 <_ZSt9terminatev>:
 8027068:	b508      	push	{r3, lr}
 802706a:	f7ff fff5 	bl	8027058 <_ZSt13get_terminatev>
 802706e:	f7ff ffee 	bl	802704e <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08027074 <pow>:
 8027074:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027076:	ed2d 8b02 	vpush	{d8}
 802707a:	eeb0 8a40 	vmov.f32	s16, s0
 802707e:	eef0 8a60 	vmov.f32	s17, s1
 8027082:	ec55 4b11 	vmov	r4, r5, d1
 8027086:	f000 fa53 	bl	8027530 <__ieee754_pow>
 802708a:	4622      	mov	r2, r4
 802708c:	462b      	mov	r3, r5
 802708e:	4620      	mov	r0, r4
 8027090:	4629      	mov	r1, r5
 8027092:	ec57 6b10 	vmov	r6, r7, d0
 8027096:	f7d9 fd59 	bl	8000b4c <__aeabi_dcmpun>
 802709a:	2800      	cmp	r0, #0
 802709c:	d13b      	bne.n	8027116 <pow+0xa2>
 802709e:	ec51 0b18 	vmov	r0, r1, d8
 80270a2:	2200      	movs	r2, #0
 80270a4:	2300      	movs	r3, #0
 80270a6:	f7d9 fd1f 	bl	8000ae8 <__aeabi_dcmpeq>
 80270aa:	b1b8      	cbz	r0, 80270dc <pow+0x68>
 80270ac:	2200      	movs	r2, #0
 80270ae:	2300      	movs	r3, #0
 80270b0:	4620      	mov	r0, r4
 80270b2:	4629      	mov	r1, r5
 80270b4:	f7d9 fd18 	bl	8000ae8 <__aeabi_dcmpeq>
 80270b8:	2800      	cmp	r0, #0
 80270ba:	d146      	bne.n	802714a <pow+0xd6>
 80270bc:	ec45 4b10 	vmov	d0, r4, r5
 80270c0:	f000 f8a2 	bl	8027208 <finite>
 80270c4:	b338      	cbz	r0, 8027116 <pow+0xa2>
 80270c6:	2200      	movs	r2, #0
 80270c8:	2300      	movs	r3, #0
 80270ca:	4620      	mov	r0, r4
 80270cc:	4629      	mov	r1, r5
 80270ce:	f7d9 fd15 	bl	8000afc <__aeabi_dcmplt>
 80270d2:	b300      	cbz	r0, 8027116 <pow+0xa2>
 80270d4:	f002 f970 	bl	80293b8 <__errno>
 80270d8:	2322      	movs	r3, #34	; 0x22
 80270da:	e01b      	b.n	8027114 <pow+0xa0>
 80270dc:	ec47 6b10 	vmov	d0, r6, r7
 80270e0:	f000 f892 	bl	8027208 <finite>
 80270e4:	b9e0      	cbnz	r0, 8027120 <pow+0xac>
 80270e6:	eeb0 0a48 	vmov.f32	s0, s16
 80270ea:	eef0 0a68 	vmov.f32	s1, s17
 80270ee:	f000 f88b 	bl	8027208 <finite>
 80270f2:	b1a8      	cbz	r0, 8027120 <pow+0xac>
 80270f4:	ec45 4b10 	vmov	d0, r4, r5
 80270f8:	f000 f886 	bl	8027208 <finite>
 80270fc:	b180      	cbz	r0, 8027120 <pow+0xac>
 80270fe:	4632      	mov	r2, r6
 8027100:	463b      	mov	r3, r7
 8027102:	4630      	mov	r0, r6
 8027104:	4639      	mov	r1, r7
 8027106:	f7d9 fd21 	bl	8000b4c <__aeabi_dcmpun>
 802710a:	2800      	cmp	r0, #0
 802710c:	d0e2      	beq.n	80270d4 <pow+0x60>
 802710e:	f002 f953 	bl	80293b8 <__errno>
 8027112:	2321      	movs	r3, #33	; 0x21
 8027114:	6003      	str	r3, [r0, #0]
 8027116:	ecbd 8b02 	vpop	{d8}
 802711a:	ec47 6b10 	vmov	d0, r6, r7
 802711e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8027120:	2200      	movs	r2, #0
 8027122:	2300      	movs	r3, #0
 8027124:	4630      	mov	r0, r6
 8027126:	4639      	mov	r1, r7
 8027128:	f7d9 fcde 	bl	8000ae8 <__aeabi_dcmpeq>
 802712c:	2800      	cmp	r0, #0
 802712e:	d0f2      	beq.n	8027116 <pow+0xa2>
 8027130:	eeb0 0a48 	vmov.f32	s0, s16
 8027134:	eef0 0a68 	vmov.f32	s1, s17
 8027138:	f000 f866 	bl	8027208 <finite>
 802713c:	2800      	cmp	r0, #0
 802713e:	d0ea      	beq.n	8027116 <pow+0xa2>
 8027140:	ec45 4b10 	vmov	d0, r4, r5
 8027144:	f000 f860 	bl	8027208 <finite>
 8027148:	e7c3      	b.n	80270d2 <pow+0x5e>
 802714a:	4f01      	ldr	r7, [pc, #4]	; (8027150 <pow+0xdc>)
 802714c:	2600      	movs	r6, #0
 802714e:	e7e2      	b.n	8027116 <pow+0xa2>
 8027150:	3ff00000 	.word	0x3ff00000
 8027154:	00000000 	.word	0x00000000

08027158 <sin>:
 8027158:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802715a:	ec53 2b10 	vmov	r2, r3, d0
 802715e:	4828      	ldr	r0, [pc, #160]	; (8027200 <sin+0xa8>)
 8027160:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8027164:	4281      	cmp	r1, r0
 8027166:	dc07      	bgt.n	8027178 <sin+0x20>
 8027168:	ed9f 1b23 	vldr	d1, [pc, #140]	; 80271f8 <sin+0xa0>
 802716c:	2000      	movs	r0, #0
 802716e:	b005      	add	sp, #20
 8027170:	f85d eb04 	ldr.w	lr, [sp], #4
 8027174:	f000 b91c 	b.w	80273b0 <__kernel_sin>
 8027178:	4822      	ldr	r0, [pc, #136]	; (8027204 <sin+0xac>)
 802717a:	4281      	cmp	r1, r0
 802717c:	dd09      	ble.n	8027192 <sin+0x3a>
 802717e:	ee10 0a10 	vmov	r0, s0
 8027182:	4619      	mov	r1, r3
 8027184:	f7d9 f890 	bl	80002a8 <__aeabi_dsub>
 8027188:	ec41 0b10 	vmov	d0, r0, r1
 802718c:	b005      	add	sp, #20
 802718e:	f85d fb04 	ldr.w	pc, [sp], #4
 8027192:	4668      	mov	r0, sp
 8027194:	f000 fef8 	bl	8027f88 <__ieee754_rem_pio2>
 8027198:	f000 0003 	and.w	r0, r0, #3
 802719c:	2801      	cmp	r0, #1
 802719e:	d00c      	beq.n	80271ba <sin+0x62>
 80271a0:	2802      	cmp	r0, #2
 80271a2:	d011      	beq.n	80271c8 <sin+0x70>
 80271a4:	b9f0      	cbnz	r0, 80271e4 <sin+0x8c>
 80271a6:	ed9d 1b02 	vldr	d1, [sp, #8]
 80271aa:	ed9d 0b00 	vldr	d0, [sp]
 80271ae:	2001      	movs	r0, #1
 80271b0:	f000 f8fe 	bl	80273b0 <__kernel_sin>
 80271b4:	ec51 0b10 	vmov	r0, r1, d0
 80271b8:	e7e6      	b.n	8027188 <sin+0x30>
 80271ba:	ed9d 1b02 	vldr	d1, [sp, #8]
 80271be:	ed9d 0b00 	vldr	d0, [sp]
 80271c2:	f000 f82d 	bl	8027220 <__kernel_cos>
 80271c6:	e7f5      	b.n	80271b4 <sin+0x5c>
 80271c8:	ed9d 1b02 	vldr	d1, [sp, #8]
 80271cc:	ed9d 0b00 	vldr	d0, [sp]
 80271d0:	2001      	movs	r0, #1
 80271d2:	f000 f8ed 	bl	80273b0 <__kernel_sin>
 80271d6:	ec53 2b10 	vmov	r2, r3, d0
 80271da:	ee10 0a10 	vmov	r0, s0
 80271de:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 80271e2:	e7d1      	b.n	8027188 <sin+0x30>
 80271e4:	ed9d 1b02 	vldr	d1, [sp, #8]
 80271e8:	ed9d 0b00 	vldr	d0, [sp]
 80271ec:	f000 f818 	bl	8027220 <__kernel_cos>
 80271f0:	e7f1      	b.n	80271d6 <sin+0x7e>
 80271f2:	bf00      	nop
 80271f4:	f3af 8000 	nop.w
	...
 8027200:	3fe921fb 	.word	0x3fe921fb
 8027204:	7fefffff 	.word	0x7fefffff

08027208 <finite>:
 8027208:	b082      	sub	sp, #8
 802720a:	ed8d 0b00 	vstr	d0, [sp]
 802720e:	9801      	ldr	r0, [sp, #4]
 8027210:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 8027214:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8027218:	0fc0      	lsrs	r0, r0, #31
 802721a:	b002      	add	sp, #8
 802721c:	4770      	bx	lr
	...

08027220 <__kernel_cos>:
 8027220:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027224:	ec57 6b10 	vmov	r6, r7, d0
 8027228:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 802722c:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8027230:	ed8d 1b00 	vstr	d1, [sp]
 8027234:	da07      	bge.n	8027246 <__kernel_cos+0x26>
 8027236:	ee10 0a10 	vmov	r0, s0
 802723a:	4639      	mov	r1, r7
 802723c:	f7d9 fc9c 	bl	8000b78 <__aeabi_d2iz>
 8027240:	2800      	cmp	r0, #0
 8027242:	f000 8088 	beq.w	8027356 <__kernel_cos+0x136>
 8027246:	4632      	mov	r2, r6
 8027248:	463b      	mov	r3, r7
 802724a:	4630      	mov	r0, r6
 802724c:	4639      	mov	r1, r7
 802724e:	f7d9 f9e3 	bl	8000618 <__aeabi_dmul>
 8027252:	4b51      	ldr	r3, [pc, #324]	; (8027398 <__kernel_cos+0x178>)
 8027254:	2200      	movs	r2, #0
 8027256:	4604      	mov	r4, r0
 8027258:	460d      	mov	r5, r1
 802725a:	f7d9 f9dd 	bl	8000618 <__aeabi_dmul>
 802725e:	a340      	add	r3, pc, #256	; (adr r3, 8027360 <__kernel_cos+0x140>)
 8027260:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027264:	4682      	mov	sl, r0
 8027266:	468b      	mov	fp, r1
 8027268:	4620      	mov	r0, r4
 802726a:	4629      	mov	r1, r5
 802726c:	f7d9 f9d4 	bl	8000618 <__aeabi_dmul>
 8027270:	a33d      	add	r3, pc, #244	; (adr r3, 8027368 <__kernel_cos+0x148>)
 8027272:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027276:	f7d9 f819 	bl	80002ac <__adddf3>
 802727a:	4622      	mov	r2, r4
 802727c:	462b      	mov	r3, r5
 802727e:	f7d9 f9cb 	bl	8000618 <__aeabi_dmul>
 8027282:	a33b      	add	r3, pc, #236	; (adr r3, 8027370 <__kernel_cos+0x150>)
 8027284:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027288:	f7d9 f80e 	bl	80002a8 <__aeabi_dsub>
 802728c:	4622      	mov	r2, r4
 802728e:	462b      	mov	r3, r5
 8027290:	f7d9 f9c2 	bl	8000618 <__aeabi_dmul>
 8027294:	a338      	add	r3, pc, #224	; (adr r3, 8027378 <__kernel_cos+0x158>)
 8027296:	e9d3 2300 	ldrd	r2, r3, [r3]
 802729a:	f7d9 f807 	bl	80002ac <__adddf3>
 802729e:	4622      	mov	r2, r4
 80272a0:	462b      	mov	r3, r5
 80272a2:	f7d9 f9b9 	bl	8000618 <__aeabi_dmul>
 80272a6:	a336      	add	r3, pc, #216	; (adr r3, 8027380 <__kernel_cos+0x160>)
 80272a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80272ac:	f7d8 fffc 	bl	80002a8 <__aeabi_dsub>
 80272b0:	4622      	mov	r2, r4
 80272b2:	462b      	mov	r3, r5
 80272b4:	f7d9 f9b0 	bl	8000618 <__aeabi_dmul>
 80272b8:	a333      	add	r3, pc, #204	; (adr r3, 8027388 <__kernel_cos+0x168>)
 80272ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80272be:	f7d8 fff5 	bl	80002ac <__adddf3>
 80272c2:	4622      	mov	r2, r4
 80272c4:	462b      	mov	r3, r5
 80272c6:	f7d9 f9a7 	bl	8000618 <__aeabi_dmul>
 80272ca:	4622      	mov	r2, r4
 80272cc:	462b      	mov	r3, r5
 80272ce:	f7d9 f9a3 	bl	8000618 <__aeabi_dmul>
 80272d2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80272d6:	4604      	mov	r4, r0
 80272d8:	460d      	mov	r5, r1
 80272da:	4630      	mov	r0, r6
 80272dc:	4639      	mov	r1, r7
 80272de:	f7d9 f99b 	bl	8000618 <__aeabi_dmul>
 80272e2:	460b      	mov	r3, r1
 80272e4:	4602      	mov	r2, r0
 80272e6:	4629      	mov	r1, r5
 80272e8:	4620      	mov	r0, r4
 80272ea:	f7d8 ffdd 	bl	80002a8 <__aeabi_dsub>
 80272ee:	4b2b      	ldr	r3, [pc, #172]	; (802739c <__kernel_cos+0x17c>)
 80272f0:	4598      	cmp	r8, r3
 80272f2:	4606      	mov	r6, r0
 80272f4:	460f      	mov	r7, r1
 80272f6:	dc10      	bgt.n	802731a <__kernel_cos+0xfa>
 80272f8:	4602      	mov	r2, r0
 80272fa:	460b      	mov	r3, r1
 80272fc:	4650      	mov	r0, sl
 80272fe:	4659      	mov	r1, fp
 8027300:	f7d8 ffd2 	bl	80002a8 <__aeabi_dsub>
 8027304:	460b      	mov	r3, r1
 8027306:	4926      	ldr	r1, [pc, #152]	; (80273a0 <__kernel_cos+0x180>)
 8027308:	4602      	mov	r2, r0
 802730a:	2000      	movs	r0, #0
 802730c:	f7d8 ffcc 	bl	80002a8 <__aeabi_dsub>
 8027310:	ec41 0b10 	vmov	d0, r0, r1
 8027314:	b003      	add	sp, #12
 8027316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802731a:	4b22      	ldr	r3, [pc, #136]	; (80273a4 <__kernel_cos+0x184>)
 802731c:	4920      	ldr	r1, [pc, #128]	; (80273a0 <__kernel_cos+0x180>)
 802731e:	4598      	cmp	r8, r3
 8027320:	bfcc      	ite	gt
 8027322:	4d21      	ldrgt	r5, [pc, #132]	; (80273a8 <__kernel_cos+0x188>)
 8027324:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8027328:	2400      	movs	r4, #0
 802732a:	4622      	mov	r2, r4
 802732c:	462b      	mov	r3, r5
 802732e:	2000      	movs	r0, #0
 8027330:	f7d8 ffba 	bl	80002a8 <__aeabi_dsub>
 8027334:	4622      	mov	r2, r4
 8027336:	4680      	mov	r8, r0
 8027338:	4689      	mov	r9, r1
 802733a:	462b      	mov	r3, r5
 802733c:	4650      	mov	r0, sl
 802733e:	4659      	mov	r1, fp
 8027340:	f7d8 ffb2 	bl	80002a8 <__aeabi_dsub>
 8027344:	4632      	mov	r2, r6
 8027346:	463b      	mov	r3, r7
 8027348:	f7d8 ffae 	bl	80002a8 <__aeabi_dsub>
 802734c:	4602      	mov	r2, r0
 802734e:	460b      	mov	r3, r1
 8027350:	4640      	mov	r0, r8
 8027352:	4649      	mov	r1, r9
 8027354:	e7da      	b.n	802730c <__kernel_cos+0xec>
 8027356:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8027390 <__kernel_cos+0x170>
 802735a:	e7db      	b.n	8027314 <__kernel_cos+0xf4>
 802735c:	f3af 8000 	nop.w
 8027360:	be8838d4 	.word	0xbe8838d4
 8027364:	bda8fae9 	.word	0xbda8fae9
 8027368:	bdb4b1c4 	.word	0xbdb4b1c4
 802736c:	3e21ee9e 	.word	0x3e21ee9e
 8027370:	809c52ad 	.word	0x809c52ad
 8027374:	3e927e4f 	.word	0x3e927e4f
 8027378:	19cb1590 	.word	0x19cb1590
 802737c:	3efa01a0 	.word	0x3efa01a0
 8027380:	16c15177 	.word	0x16c15177
 8027384:	3f56c16c 	.word	0x3f56c16c
 8027388:	5555554c 	.word	0x5555554c
 802738c:	3fa55555 	.word	0x3fa55555
 8027390:	00000000 	.word	0x00000000
 8027394:	3ff00000 	.word	0x3ff00000
 8027398:	3fe00000 	.word	0x3fe00000
 802739c:	3fd33332 	.word	0x3fd33332
 80273a0:	3ff00000 	.word	0x3ff00000
 80273a4:	3fe90000 	.word	0x3fe90000
 80273a8:	3fd20000 	.word	0x3fd20000
 80273ac:	00000000 	.word	0x00000000

080273b0 <__kernel_sin>:
 80273b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80273b4:	ed2d 8b04 	vpush	{d8-d9}
 80273b8:	eeb0 8a41 	vmov.f32	s16, s2
 80273bc:	eef0 8a61 	vmov.f32	s17, s3
 80273c0:	ec55 4b10 	vmov	r4, r5, d0
 80273c4:	b083      	sub	sp, #12
 80273c6:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80273ca:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 80273ce:	9001      	str	r0, [sp, #4]
 80273d0:	da06      	bge.n	80273e0 <__kernel_sin+0x30>
 80273d2:	ee10 0a10 	vmov	r0, s0
 80273d6:	4629      	mov	r1, r5
 80273d8:	f7d9 fbce 	bl	8000b78 <__aeabi_d2iz>
 80273dc:	2800      	cmp	r0, #0
 80273de:	d051      	beq.n	8027484 <__kernel_sin+0xd4>
 80273e0:	4622      	mov	r2, r4
 80273e2:	462b      	mov	r3, r5
 80273e4:	4620      	mov	r0, r4
 80273e6:	4629      	mov	r1, r5
 80273e8:	f7d9 f916 	bl	8000618 <__aeabi_dmul>
 80273ec:	4682      	mov	sl, r0
 80273ee:	468b      	mov	fp, r1
 80273f0:	4602      	mov	r2, r0
 80273f2:	460b      	mov	r3, r1
 80273f4:	4620      	mov	r0, r4
 80273f6:	4629      	mov	r1, r5
 80273f8:	f7d9 f90e 	bl	8000618 <__aeabi_dmul>
 80273fc:	a341      	add	r3, pc, #260	; (adr r3, 8027504 <__kernel_sin+0x154>)
 80273fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027402:	4680      	mov	r8, r0
 8027404:	4689      	mov	r9, r1
 8027406:	4650      	mov	r0, sl
 8027408:	4659      	mov	r1, fp
 802740a:	f7d9 f905 	bl	8000618 <__aeabi_dmul>
 802740e:	a33f      	add	r3, pc, #252	; (adr r3, 802750c <__kernel_sin+0x15c>)
 8027410:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027414:	f7d8 ff48 	bl	80002a8 <__aeabi_dsub>
 8027418:	4652      	mov	r2, sl
 802741a:	465b      	mov	r3, fp
 802741c:	f7d9 f8fc 	bl	8000618 <__aeabi_dmul>
 8027420:	a33c      	add	r3, pc, #240	; (adr r3, 8027514 <__kernel_sin+0x164>)
 8027422:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027426:	f7d8 ff41 	bl	80002ac <__adddf3>
 802742a:	4652      	mov	r2, sl
 802742c:	465b      	mov	r3, fp
 802742e:	f7d9 f8f3 	bl	8000618 <__aeabi_dmul>
 8027432:	a33a      	add	r3, pc, #232	; (adr r3, 802751c <__kernel_sin+0x16c>)
 8027434:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027438:	f7d8 ff36 	bl	80002a8 <__aeabi_dsub>
 802743c:	4652      	mov	r2, sl
 802743e:	465b      	mov	r3, fp
 8027440:	f7d9 f8ea 	bl	8000618 <__aeabi_dmul>
 8027444:	a337      	add	r3, pc, #220	; (adr r3, 8027524 <__kernel_sin+0x174>)
 8027446:	e9d3 2300 	ldrd	r2, r3, [r3]
 802744a:	f7d8 ff2f 	bl	80002ac <__adddf3>
 802744e:	9b01      	ldr	r3, [sp, #4]
 8027450:	4606      	mov	r6, r0
 8027452:	460f      	mov	r7, r1
 8027454:	b9eb      	cbnz	r3, 8027492 <__kernel_sin+0xe2>
 8027456:	4602      	mov	r2, r0
 8027458:	460b      	mov	r3, r1
 802745a:	4650      	mov	r0, sl
 802745c:	4659      	mov	r1, fp
 802745e:	f7d9 f8db 	bl	8000618 <__aeabi_dmul>
 8027462:	a325      	add	r3, pc, #148	; (adr r3, 80274f8 <__kernel_sin+0x148>)
 8027464:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027468:	f7d8 ff1e 	bl	80002a8 <__aeabi_dsub>
 802746c:	4642      	mov	r2, r8
 802746e:	464b      	mov	r3, r9
 8027470:	f7d9 f8d2 	bl	8000618 <__aeabi_dmul>
 8027474:	4602      	mov	r2, r0
 8027476:	460b      	mov	r3, r1
 8027478:	4620      	mov	r0, r4
 802747a:	4629      	mov	r1, r5
 802747c:	f7d8 ff16 	bl	80002ac <__adddf3>
 8027480:	4604      	mov	r4, r0
 8027482:	460d      	mov	r5, r1
 8027484:	ec45 4b10 	vmov	d0, r4, r5
 8027488:	b003      	add	sp, #12
 802748a:	ecbd 8b04 	vpop	{d8-d9}
 802748e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027492:	4b1b      	ldr	r3, [pc, #108]	; (8027500 <__kernel_sin+0x150>)
 8027494:	ec51 0b18 	vmov	r0, r1, d8
 8027498:	2200      	movs	r2, #0
 802749a:	f7d9 f8bd 	bl	8000618 <__aeabi_dmul>
 802749e:	4632      	mov	r2, r6
 80274a0:	ec41 0b19 	vmov	d9, r0, r1
 80274a4:	463b      	mov	r3, r7
 80274a6:	4640      	mov	r0, r8
 80274a8:	4649      	mov	r1, r9
 80274aa:	f7d9 f8b5 	bl	8000618 <__aeabi_dmul>
 80274ae:	4602      	mov	r2, r0
 80274b0:	460b      	mov	r3, r1
 80274b2:	ec51 0b19 	vmov	r0, r1, d9
 80274b6:	f7d8 fef7 	bl	80002a8 <__aeabi_dsub>
 80274ba:	4652      	mov	r2, sl
 80274bc:	465b      	mov	r3, fp
 80274be:	f7d9 f8ab 	bl	8000618 <__aeabi_dmul>
 80274c2:	ec53 2b18 	vmov	r2, r3, d8
 80274c6:	f7d8 feef 	bl	80002a8 <__aeabi_dsub>
 80274ca:	a30b      	add	r3, pc, #44	; (adr r3, 80274f8 <__kernel_sin+0x148>)
 80274cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80274d0:	4606      	mov	r6, r0
 80274d2:	460f      	mov	r7, r1
 80274d4:	4640      	mov	r0, r8
 80274d6:	4649      	mov	r1, r9
 80274d8:	f7d9 f89e 	bl	8000618 <__aeabi_dmul>
 80274dc:	4602      	mov	r2, r0
 80274de:	460b      	mov	r3, r1
 80274e0:	4630      	mov	r0, r6
 80274e2:	4639      	mov	r1, r7
 80274e4:	f7d8 fee2 	bl	80002ac <__adddf3>
 80274e8:	4602      	mov	r2, r0
 80274ea:	460b      	mov	r3, r1
 80274ec:	4620      	mov	r0, r4
 80274ee:	4629      	mov	r1, r5
 80274f0:	f7d8 feda 	bl	80002a8 <__aeabi_dsub>
 80274f4:	e7c4      	b.n	8027480 <__kernel_sin+0xd0>
 80274f6:	bf00      	nop
 80274f8:	55555549 	.word	0x55555549
 80274fc:	3fc55555 	.word	0x3fc55555
 8027500:	3fe00000 	.word	0x3fe00000
 8027504:	5acfd57c 	.word	0x5acfd57c
 8027508:	3de5d93a 	.word	0x3de5d93a
 802750c:	8a2b9ceb 	.word	0x8a2b9ceb
 8027510:	3e5ae5e6 	.word	0x3e5ae5e6
 8027514:	57b1fe7d 	.word	0x57b1fe7d
 8027518:	3ec71de3 	.word	0x3ec71de3
 802751c:	19c161d5 	.word	0x19c161d5
 8027520:	3f2a01a0 	.word	0x3f2a01a0
 8027524:	1110f8a6 	.word	0x1110f8a6
 8027528:	3f811111 	.word	0x3f811111
 802752c:	00000000 	.word	0x00000000

08027530 <__ieee754_pow>:
 8027530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027534:	ed2d 8b06 	vpush	{d8-d10}
 8027538:	b089      	sub	sp, #36	; 0x24
 802753a:	ed8d 1b00 	vstr	d1, [sp]
 802753e:	e9dd 2900 	ldrd	r2, r9, [sp]
 8027542:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 8027546:	ea58 0102 	orrs.w	r1, r8, r2
 802754a:	ec57 6b10 	vmov	r6, r7, d0
 802754e:	d115      	bne.n	802757c <__ieee754_pow+0x4c>
 8027550:	19b3      	adds	r3, r6, r6
 8027552:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 8027556:	4152      	adcs	r2, r2
 8027558:	4299      	cmp	r1, r3
 802755a:	4b89      	ldr	r3, [pc, #548]	; (8027780 <__ieee754_pow+0x250>)
 802755c:	4193      	sbcs	r3, r2
 802755e:	f080 84d1 	bcs.w	8027f04 <__ieee754_pow+0x9d4>
 8027562:	e9dd 2300 	ldrd	r2, r3, [sp]
 8027566:	4630      	mov	r0, r6
 8027568:	4639      	mov	r1, r7
 802756a:	f7d8 fe9f 	bl	80002ac <__adddf3>
 802756e:	ec41 0b10 	vmov	d0, r0, r1
 8027572:	b009      	add	sp, #36	; 0x24
 8027574:	ecbd 8b06 	vpop	{d8-d10}
 8027578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802757c:	4b81      	ldr	r3, [pc, #516]	; (8027784 <__ieee754_pow+0x254>)
 802757e:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 8027582:	429c      	cmp	r4, r3
 8027584:	ee10 aa10 	vmov	sl, s0
 8027588:	463d      	mov	r5, r7
 802758a:	dc06      	bgt.n	802759a <__ieee754_pow+0x6a>
 802758c:	d101      	bne.n	8027592 <__ieee754_pow+0x62>
 802758e:	2e00      	cmp	r6, #0
 8027590:	d1e7      	bne.n	8027562 <__ieee754_pow+0x32>
 8027592:	4598      	cmp	r8, r3
 8027594:	dc01      	bgt.n	802759a <__ieee754_pow+0x6a>
 8027596:	d10f      	bne.n	80275b8 <__ieee754_pow+0x88>
 8027598:	b172      	cbz	r2, 80275b8 <__ieee754_pow+0x88>
 802759a:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 802759e:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 80275a2:	ea55 050a 	orrs.w	r5, r5, sl
 80275a6:	d1dc      	bne.n	8027562 <__ieee754_pow+0x32>
 80275a8:	e9dd 3200 	ldrd	r3, r2, [sp]
 80275ac:	18db      	adds	r3, r3, r3
 80275ae:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 80275b2:	4152      	adcs	r2, r2
 80275b4:	429d      	cmp	r5, r3
 80275b6:	e7d0      	b.n	802755a <__ieee754_pow+0x2a>
 80275b8:	2d00      	cmp	r5, #0
 80275ba:	da3b      	bge.n	8027634 <__ieee754_pow+0x104>
 80275bc:	4b72      	ldr	r3, [pc, #456]	; (8027788 <__ieee754_pow+0x258>)
 80275be:	4598      	cmp	r8, r3
 80275c0:	dc51      	bgt.n	8027666 <__ieee754_pow+0x136>
 80275c2:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 80275c6:	4598      	cmp	r8, r3
 80275c8:	f340 84ab 	ble.w	8027f22 <__ieee754_pow+0x9f2>
 80275cc:	ea4f 5328 	mov.w	r3, r8, asr #20
 80275d0:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 80275d4:	2b14      	cmp	r3, #20
 80275d6:	dd0f      	ble.n	80275f8 <__ieee754_pow+0xc8>
 80275d8:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 80275dc:	fa22 f103 	lsr.w	r1, r2, r3
 80275e0:	fa01 f303 	lsl.w	r3, r1, r3
 80275e4:	4293      	cmp	r3, r2
 80275e6:	f040 849c 	bne.w	8027f22 <__ieee754_pow+0x9f2>
 80275ea:	f001 0101 	and.w	r1, r1, #1
 80275ee:	f1c1 0302 	rsb	r3, r1, #2
 80275f2:	9304      	str	r3, [sp, #16]
 80275f4:	b182      	cbz	r2, 8027618 <__ieee754_pow+0xe8>
 80275f6:	e05f      	b.n	80276b8 <__ieee754_pow+0x188>
 80275f8:	2a00      	cmp	r2, #0
 80275fa:	d15b      	bne.n	80276b4 <__ieee754_pow+0x184>
 80275fc:	f1c3 0314 	rsb	r3, r3, #20
 8027600:	fa48 f103 	asr.w	r1, r8, r3
 8027604:	fa01 f303 	lsl.w	r3, r1, r3
 8027608:	4543      	cmp	r3, r8
 802760a:	f040 8487 	bne.w	8027f1c <__ieee754_pow+0x9ec>
 802760e:	f001 0101 	and.w	r1, r1, #1
 8027612:	f1c1 0302 	rsb	r3, r1, #2
 8027616:	9304      	str	r3, [sp, #16]
 8027618:	4b5c      	ldr	r3, [pc, #368]	; (802778c <__ieee754_pow+0x25c>)
 802761a:	4598      	cmp	r8, r3
 802761c:	d132      	bne.n	8027684 <__ieee754_pow+0x154>
 802761e:	f1b9 0f00 	cmp.w	r9, #0
 8027622:	f280 8477 	bge.w	8027f14 <__ieee754_pow+0x9e4>
 8027626:	4959      	ldr	r1, [pc, #356]	; (802778c <__ieee754_pow+0x25c>)
 8027628:	4632      	mov	r2, r6
 802762a:	463b      	mov	r3, r7
 802762c:	2000      	movs	r0, #0
 802762e:	f7d9 f91d 	bl	800086c <__aeabi_ddiv>
 8027632:	e79c      	b.n	802756e <__ieee754_pow+0x3e>
 8027634:	2300      	movs	r3, #0
 8027636:	9304      	str	r3, [sp, #16]
 8027638:	2a00      	cmp	r2, #0
 802763a:	d13d      	bne.n	80276b8 <__ieee754_pow+0x188>
 802763c:	4b51      	ldr	r3, [pc, #324]	; (8027784 <__ieee754_pow+0x254>)
 802763e:	4598      	cmp	r8, r3
 8027640:	d1ea      	bne.n	8027618 <__ieee754_pow+0xe8>
 8027642:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8027646:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 802764a:	ea53 030a 	orrs.w	r3, r3, sl
 802764e:	f000 8459 	beq.w	8027f04 <__ieee754_pow+0x9d4>
 8027652:	4b4f      	ldr	r3, [pc, #316]	; (8027790 <__ieee754_pow+0x260>)
 8027654:	429c      	cmp	r4, r3
 8027656:	dd08      	ble.n	802766a <__ieee754_pow+0x13a>
 8027658:	f1b9 0f00 	cmp.w	r9, #0
 802765c:	f2c0 8456 	blt.w	8027f0c <__ieee754_pow+0x9dc>
 8027660:	e9dd 0100 	ldrd	r0, r1, [sp]
 8027664:	e783      	b.n	802756e <__ieee754_pow+0x3e>
 8027666:	2302      	movs	r3, #2
 8027668:	e7e5      	b.n	8027636 <__ieee754_pow+0x106>
 802766a:	f1b9 0f00 	cmp.w	r9, #0
 802766e:	f04f 0000 	mov.w	r0, #0
 8027672:	f04f 0100 	mov.w	r1, #0
 8027676:	f6bf af7a 	bge.w	802756e <__ieee754_pow+0x3e>
 802767a:	e9dd 0300 	ldrd	r0, r3, [sp]
 802767e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8027682:	e774      	b.n	802756e <__ieee754_pow+0x3e>
 8027684:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 8027688:	d106      	bne.n	8027698 <__ieee754_pow+0x168>
 802768a:	4632      	mov	r2, r6
 802768c:	463b      	mov	r3, r7
 802768e:	4630      	mov	r0, r6
 8027690:	4639      	mov	r1, r7
 8027692:	f7d8 ffc1 	bl	8000618 <__aeabi_dmul>
 8027696:	e76a      	b.n	802756e <__ieee754_pow+0x3e>
 8027698:	4b3e      	ldr	r3, [pc, #248]	; (8027794 <__ieee754_pow+0x264>)
 802769a:	4599      	cmp	r9, r3
 802769c:	d10c      	bne.n	80276b8 <__ieee754_pow+0x188>
 802769e:	2d00      	cmp	r5, #0
 80276a0:	db0a      	blt.n	80276b8 <__ieee754_pow+0x188>
 80276a2:	ec47 6b10 	vmov	d0, r6, r7
 80276a6:	b009      	add	sp, #36	; 0x24
 80276a8:	ecbd 8b06 	vpop	{d8-d10}
 80276ac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80276b0:	f000 bf28 	b.w	8028504 <__ieee754_sqrt>
 80276b4:	2300      	movs	r3, #0
 80276b6:	9304      	str	r3, [sp, #16]
 80276b8:	ec47 6b10 	vmov	d0, r6, r7
 80276bc:	f000 fe6a 	bl	8028394 <fabs>
 80276c0:	ec51 0b10 	vmov	r0, r1, d0
 80276c4:	f1ba 0f00 	cmp.w	sl, #0
 80276c8:	d129      	bne.n	802771e <__ieee754_pow+0x1ee>
 80276ca:	b124      	cbz	r4, 80276d6 <__ieee754_pow+0x1a6>
 80276cc:	4b2f      	ldr	r3, [pc, #188]	; (802778c <__ieee754_pow+0x25c>)
 80276ce:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 80276d2:	429a      	cmp	r2, r3
 80276d4:	d123      	bne.n	802771e <__ieee754_pow+0x1ee>
 80276d6:	f1b9 0f00 	cmp.w	r9, #0
 80276da:	da05      	bge.n	80276e8 <__ieee754_pow+0x1b8>
 80276dc:	4602      	mov	r2, r0
 80276de:	460b      	mov	r3, r1
 80276e0:	2000      	movs	r0, #0
 80276e2:	492a      	ldr	r1, [pc, #168]	; (802778c <__ieee754_pow+0x25c>)
 80276e4:	f7d9 f8c2 	bl	800086c <__aeabi_ddiv>
 80276e8:	2d00      	cmp	r5, #0
 80276ea:	f6bf af40 	bge.w	802756e <__ieee754_pow+0x3e>
 80276ee:	9b04      	ldr	r3, [sp, #16]
 80276f0:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 80276f4:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80276f8:	431c      	orrs	r4, r3
 80276fa:	d108      	bne.n	802770e <__ieee754_pow+0x1de>
 80276fc:	4602      	mov	r2, r0
 80276fe:	460b      	mov	r3, r1
 8027700:	4610      	mov	r0, r2
 8027702:	4619      	mov	r1, r3
 8027704:	f7d8 fdd0 	bl	80002a8 <__aeabi_dsub>
 8027708:	4602      	mov	r2, r0
 802770a:	460b      	mov	r3, r1
 802770c:	e78f      	b.n	802762e <__ieee754_pow+0xfe>
 802770e:	9b04      	ldr	r3, [sp, #16]
 8027710:	2b01      	cmp	r3, #1
 8027712:	f47f af2c 	bne.w	802756e <__ieee754_pow+0x3e>
 8027716:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 802771a:	4619      	mov	r1, r3
 802771c:	e727      	b.n	802756e <__ieee754_pow+0x3e>
 802771e:	0feb      	lsrs	r3, r5, #31
 8027720:	3b01      	subs	r3, #1
 8027722:	9306      	str	r3, [sp, #24]
 8027724:	9a06      	ldr	r2, [sp, #24]
 8027726:	9b04      	ldr	r3, [sp, #16]
 8027728:	4313      	orrs	r3, r2
 802772a:	d102      	bne.n	8027732 <__ieee754_pow+0x202>
 802772c:	4632      	mov	r2, r6
 802772e:	463b      	mov	r3, r7
 8027730:	e7e6      	b.n	8027700 <__ieee754_pow+0x1d0>
 8027732:	4b19      	ldr	r3, [pc, #100]	; (8027798 <__ieee754_pow+0x268>)
 8027734:	4598      	cmp	r8, r3
 8027736:	f340 80fb 	ble.w	8027930 <__ieee754_pow+0x400>
 802773a:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 802773e:	4598      	cmp	r8, r3
 8027740:	4b13      	ldr	r3, [pc, #76]	; (8027790 <__ieee754_pow+0x260>)
 8027742:	dd0c      	ble.n	802775e <__ieee754_pow+0x22e>
 8027744:	429c      	cmp	r4, r3
 8027746:	dc0f      	bgt.n	8027768 <__ieee754_pow+0x238>
 8027748:	f1b9 0f00 	cmp.w	r9, #0
 802774c:	da0f      	bge.n	802776e <__ieee754_pow+0x23e>
 802774e:	2000      	movs	r0, #0
 8027750:	b009      	add	sp, #36	; 0x24
 8027752:	ecbd 8b06 	vpop	{d8-d10}
 8027756:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802775a:	f000 beca 	b.w	80284f2 <__math_oflow>
 802775e:	429c      	cmp	r4, r3
 8027760:	dbf2      	blt.n	8027748 <__ieee754_pow+0x218>
 8027762:	4b0a      	ldr	r3, [pc, #40]	; (802778c <__ieee754_pow+0x25c>)
 8027764:	429c      	cmp	r4, r3
 8027766:	dd19      	ble.n	802779c <__ieee754_pow+0x26c>
 8027768:	f1b9 0f00 	cmp.w	r9, #0
 802776c:	dcef      	bgt.n	802774e <__ieee754_pow+0x21e>
 802776e:	2000      	movs	r0, #0
 8027770:	b009      	add	sp, #36	; 0x24
 8027772:	ecbd 8b06 	vpop	{d8-d10}
 8027776:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802777a:	f000 beb1 	b.w	80284e0 <__math_uflow>
 802777e:	bf00      	nop
 8027780:	fff00000 	.word	0xfff00000
 8027784:	7ff00000 	.word	0x7ff00000
 8027788:	433fffff 	.word	0x433fffff
 802778c:	3ff00000 	.word	0x3ff00000
 8027790:	3fefffff 	.word	0x3fefffff
 8027794:	3fe00000 	.word	0x3fe00000
 8027798:	41e00000 	.word	0x41e00000
 802779c:	4b60      	ldr	r3, [pc, #384]	; (8027920 <__ieee754_pow+0x3f0>)
 802779e:	2200      	movs	r2, #0
 80277a0:	f7d8 fd82 	bl	80002a8 <__aeabi_dsub>
 80277a4:	a354      	add	r3, pc, #336	; (adr r3, 80278f8 <__ieee754_pow+0x3c8>)
 80277a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80277aa:	4604      	mov	r4, r0
 80277ac:	460d      	mov	r5, r1
 80277ae:	f7d8 ff33 	bl	8000618 <__aeabi_dmul>
 80277b2:	a353      	add	r3, pc, #332	; (adr r3, 8027900 <__ieee754_pow+0x3d0>)
 80277b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80277b8:	4606      	mov	r6, r0
 80277ba:	460f      	mov	r7, r1
 80277bc:	4620      	mov	r0, r4
 80277be:	4629      	mov	r1, r5
 80277c0:	f7d8 ff2a 	bl	8000618 <__aeabi_dmul>
 80277c4:	4b57      	ldr	r3, [pc, #348]	; (8027924 <__ieee754_pow+0x3f4>)
 80277c6:	4682      	mov	sl, r0
 80277c8:	468b      	mov	fp, r1
 80277ca:	2200      	movs	r2, #0
 80277cc:	4620      	mov	r0, r4
 80277ce:	4629      	mov	r1, r5
 80277d0:	f7d8 ff22 	bl	8000618 <__aeabi_dmul>
 80277d4:	4602      	mov	r2, r0
 80277d6:	460b      	mov	r3, r1
 80277d8:	a14b      	add	r1, pc, #300	; (adr r1, 8027908 <__ieee754_pow+0x3d8>)
 80277da:	e9d1 0100 	ldrd	r0, r1, [r1]
 80277de:	f7d8 fd63 	bl	80002a8 <__aeabi_dsub>
 80277e2:	4622      	mov	r2, r4
 80277e4:	462b      	mov	r3, r5
 80277e6:	f7d8 ff17 	bl	8000618 <__aeabi_dmul>
 80277ea:	4602      	mov	r2, r0
 80277ec:	460b      	mov	r3, r1
 80277ee:	2000      	movs	r0, #0
 80277f0:	494d      	ldr	r1, [pc, #308]	; (8027928 <__ieee754_pow+0x3f8>)
 80277f2:	f7d8 fd59 	bl	80002a8 <__aeabi_dsub>
 80277f6:	4622      	mov	r2, r4
 80277f8:	4680      	mov	r8, r0
 80277fa:	4689      	mov	r9, r1
 80277fc:	462b      	mov	r3, r5
 80277fe:	4620      	mov	r0, r4
 8027800:	4629      	mov	r1, r5
 8027802:	f7d8 ff09 	bl	8000618 <__aeabi_dmul>
 8027806:	4602      	mov	r2, r0
 8027808:	460b      	mov	r3, r1
 802780a:	4640      	mov	r0, r8
 802780c:	4649      	mov	r1, r9
 802780e:	f7d8 ff03 	bl	8000618 <__aeabi_dmul>
 8027812:	a33f      	add	r3, pc, #252	; (adr r3, 8027910 <__ieee754_pow+0x3e0>)
 8027814:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027818:	f7d8 fefe 	bl	8000618 <__aeabi_dmul>
 802781c:	4602      	mov	r2, r0
 802781e:	460b      	mov	r3, r1
 8027820:	4650      	mov	r0, sl
 8027822:	4659      	mov	r1, fp
 8027824:	f7d8 fd40 	bl	80002a8 <__aeabi_dsub>
 8027828:	4602      	mov	r2, r0
 802782a:	460b      	mov	r3, r1
 802782c:	4680      	mov	r8, r0
 802782e:	4689      	mov	r9, r1
 8027830:	4630      	mov	r0, r6
 8027832:	4639      	mov	r1, r7
 8027834:	f7d8 fd3a 	bl	80002ac <__adddf3>
 8027838:	2000      	movs	r0, #0
 802783a:	4632      	mov	r2, r6
 802783c:	463b      	mov	r3, r7
 802783e:	4604      	mov	r4, r0
 8027840:	460d      	mov	r5, r1
 8027842:	f7d8 fd31 	bl	80002a8 <__aeabi_dsub>
 8027846:	4602      	mov	r2, r0
 8027848:	460b      	mov	r3, r1
 802784a:	4640      	mov	r0, r8
 802784c:	4649      	mov	r1, r9
 802784e:	f7d8 fd2b 	bl	80002a8 <__aeabi_dsub>
 8027852:	9b04      	ldr	r3, [sp, #16]
 8027854:	9a06      	ldr	r2, [sp, #24]
 8027856:	3b01      	subs	r3, #1
 8027858:	4313      	orrs	r3, r2
 802785a:	4682      	mov	sl, r0
 802785c:	468b      	mov	fp, r1
 802785e:	f040 81e7 	bne.w	8027c30 <__ieee754_pow+0x700>
 8027862:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 8027918 <__ieee754_pow+0x3e8>
 8027866:	eeb0 8a47 	vmov.f32	s16, s14
 802786a:	eef0 8a67 	vmov.f32	s17, s15
 802786e:	e9dd 6700 	ldrd	r6, r7, [sp]
 8027872:	2600      	movs	r6, #0
 8027874:	4632      	mov	r2, r6
 8027876:	463b      	mov	r3, r7
 8027878:	e9dd 0100 	ldrd	r0, r1, [sp]
 802787c:	f7d8 fd14 	bl	80002a8 <__aeabi_dsub>
 8027880:	4622      	mov	r2, r4
 8027882:	462b      	mov	r3, r5
 8027884:	f7d8 fec8 	bl	8000618 <__aeabi_dmul>
 8027888:	e9dd 2300 	ldrd	r2, r3, [sp]
 802788c:	4680      	mov	r8, r0
 802788e:	4689      	mov	r9, r1
 8027890:	4650      	mov	r0, sl
 8027892:	4659      	mov	r1, fp
 8027894:	f7d8 fec0 	bl	8000618 <__aeabi_dmul>
 8027898:	4602      	mov	r2, r0
 802789a:	460b      	mov	r3, r1
 802789c:	4640      	mov	r0, r8
 802789e:	4649      	mov	r1, r9
 80278a0:	f7d8 fd04 	bl	80002ac <__adddf3>
 80278a4:	4632      	mov	r2, r6
 80278a6:	463b      	mov	r3, r7
 80278a8:	4680      	mov	r8, r0
 80278aa:	4689      	mov	r9, r1
 80278ac:	4620      	mov	r0, r4
 80278ae:	4629      	mov	r1, r5
 80278b0:	f7d8 feb2 	bl	8000618 <__aeabi_dmul>
 80278b4:	460b      	mov	r3, r1
 80278b6:	4604      	mov	r4, r0
 80278b8:	460d      	mov	r5, r1
 80278ba:	4602      	mov	r2, r0
 80278bc:	4649      	mov	r1, r9
 80278be:	4640      	mov	r0, r8
 80278c0:	f7d8 fcf4 	bl	80002ac <__adddf3>
 80278c4:	4b19      	ldr	r3, [pc, #100]	; (802792c <__ieee754_pow+0x3fc>)
 80278c6:	4299      	cmp	r1, r3
 80278c8:	ec45 4b19 	vmov	d9, r4, r5
 80278cc:	4606      	mov	r6, r0
 80278ce:	460f      	mov	r7, r1
 80278d0:	468b      	mov	fp, r1
 80278d2:	f340 82f0 	ble.w	8027eb6 <__ieee754_pow+0x986>
 80278d6:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 80278da:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 80278de:	4303      	orrs	r3, r0
 80278e0:	f000 81e4 	beq.w	8027cac <__ieee754_pow+0x77c>
 80278e4:	ec51 0b18 	vmov	r0, r1, d8
 80278e8:	2200      	movs	r2, #0
 80278ea:	2300      	movs	r3, #0
 80278ec:	f7d9 f906 	bl	8000afc <__aeabi_dcmplt>
 80278f0:	3800      	subs	r0, #0
 80278f2:	bf18      	it	ne
 80278f4:	2001      	movne	r0, #1
 80278f6:	e72b      	b.n	8027750 <__ieee754_pow+0x220>
 80278f8:	60000000 	.word	0x60000000
 80278fc:	3ff71547 	.word	0x3ff71547
 8027900:	f85ddf44 	.word	0xf85ddf44
 8027904:	3e54ae0b 	.word	0x3e54ae0b
 8027908:	55555555 	.word	0x55555555
 802790c:	3fd55555 	.word	0x3fd55555
 8027910:	652b82fe 	.word	0x652b82fe
 8027914:	3ff71547 	.word	0x3ff71547
 8027918:	00000000 	.word	0x00000000
 802791c:	bff00000 	.word	0xbff00000
 8027920:	3ff00000 	.word	0x3ff00000
 8027924:	3fd00000 	.word	0x3fd00000
 8027928:	3fe00000 	.word	0x3fe00000
 802792c:	408fffff 	.word	0x408fffff
 8027930:	4bd5      	ldr	r3, [pc, #852]	; (8027c88 <__ieee754_pow+0x758>)
 8027932:	402b      	ands	r3, r5
 8027934:	2200      	movs	r2, #0
 8027936:	b92b      	cbnz	r3, 8027944 <__ieee754_pow+0x414>
 8027938:	4bd4      	ldr	r3, [pc, #848]	; (8027c8c <__ieee754_pow+0x75c>)
 802793a:	f7d8 fe6d 	bl	8000618 <__aeabi_dmul>
 802793e:	f06f 0234 	mvn.w	r2, #52	; 0x34
 8027942:	460c      	mov	r4, r1
 8027944:	1523      	asrs	r3, r4, #20
 8027946:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 802794a:	4413      	add	r3, r2
 802794c:	9305      	str	r3, [sp, #20]
 802794e:	4bd0      	ldr	r3, [pc, #832]	; (8027c90 <__ieee754_pow+0x760>)
 8027950:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8027954:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8027958:	429c      	cmp	r4, r3
 802795a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 802795e:	dd08      	ble.n	8027972 <__ieee754_pow+0x442>
 8027960:	4bcc      	ldr	r3, [pc, #816]	; (8027c94 <__ieee754_pow+0x764>)
 8027962:	429c      	cmp	r4, r3
 8027964:	f340 8162 	ble.w	8027c2c <__ieee754_pow+0x6fc>
 8027968:	9b05      	ldr	r3, [sp, #20]
 802796a:	3301      	adds	r3, #1
 802796c:	9305      	str	r3, [sp, #20]
 802796e:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 8027972:	2400      	movs	r4, #0
 8027974:	00e3      	lsls	r3, r4, #3
 8027976:	9307      	str	r3, [sp, #28]
 8027978:	4bc7      	ldr	r3, [pc, #796]	; (8027c98 <__ieee754_pow+0x768>)
 802797a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 802797e:	ed93 7b00 	vldr	d7, [r3]
 8027982:	4629      	mov	r1, r5
 8027984:	ec53 2b17 	vmov	r2, r3, d7
 8027988:	eeb0 9a47 	vmov.f32	s18, s14
 802798c:	eef0 9a67 	vmov.f32	s19, s15
 8027990:	4682      	mov	sl, r0
 8027992:	f7d8 fc89 	bl	80002a8 <__aeabi_dsub>
 8027996:	4652      	mov	r2, sl
 8027998:	4606      	mov	r6, r0
 802799a:	460f      	mov	r7, r1
 802799c:	462b      	mov	r3, r5
 802799e:	ec51 0b19 	vmov	r0, r1, d9
 80279a2:	f7d8 fc83 	bl	80002ac <__adddf3>
 80279a6:	4602      	mov	r2, r0
 80279a8:	460b      	mov	r3, r1
 80279aa:	2000      	movs	r0, #0
 80279ac:	49bb      	ldr	r1, [pc, #748]	; (8027c9c <__ieee754_pow+0x76c>)
 80279ae:	f7d8 ff5d 	bl	800086c <__aeabi_ddiv>
 80279b2:	ec41 0b1a 	vmov	d10, r0, r1
 80279b6:	4602      	mov	r2, r0
 80279b8:	460b      	mov	r3, r1
 80279ba:	4630      	mov	r0, r6
 80279bc:	4639      	mov	r1, r7
 80279be:	f7d8 fe2b 	bl	8000618 <__aeabi_dmul>
 80279c2:	2300      	movs	r3, #0
 80279c4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80279c8:	9302      	str	r3, [sp, #8]
 80279ca:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80279ce:	46ab      	mov	fp, r5
 80279d0:	106d      	asrs	r5, r5, #1
 80279d2:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 80279d6:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 80279da:	ec41 0b18 	vmov	d8, r0, r1
 80279de:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 80279e2:	2200      	movs	r2, #0
 80279e4:	4640      	mov	r0, r8
 80279e6:	4649      	mov	r1, r9
 80279e8:	4614      	mov	r4, r2
 80279ea:	461d      	mov	r5, r3
 80279ec:	f7d8 fe14 	bl	8000618 <__aeabi_dmul>
 80279f0:	4602      	mov	r2, r0
 80279f2:	460b      	mov	r3, r1
 80279f4:	4630      	mov	r0, r6
 80279f6:	4639      	mov	r1, r7
 80279f8:	f7d8 fc56 	bl	80002a8 <__aeabi_dsub>
 80279fc:	ec53 2b19 	vmov	r2, r3, d9
 8027a00:	4606      	mov	r6, r0
 8027a02:	460f      	mov	r7, r1
 8027a04:	4620      	mov	r0, r4
 8027a06:	4629      	mov	r1, r5
 8027a08:	f7d8 fc4e 	bl	80002a8 <__aeabi_dsub>
 8027a0c:	4602      	mov	r2, r0
 8027a0e:	460b      	mov	r3, r1
 8027a10:	4650      	mov	r0, sl
 8027a12:	4659      	mov	r1, fp
 8027a14:	f7d8 fc48 	bl	80002a8 <__aeabi_dsub>
 8027a18:	4642      	mov	r2, r8
 8027a1a:	464b      	mov	r3, r9
 8027a1c:	f7d8 fdfc 	bl	8000618 <__aeabi_dmul>
 8027a20:	4602      	mov	r2, r0
 8027a22:	460b      	mov	r3, r1
 8027a24:	4630      	mov	r0, r6
 8027a26:	4639      	mov	r1, r7
 8027a28:	f7d8 fc3e 	bl	80002a8 <__aeabi_dsub>
 8027a2c:	ec53 2b1a 	vmov	r2, r3, d10
 8027a30:	f7d8 fdf2 	bl	8000618 <__aeabi_dmul>
 8027a34:	ec53 2b18 	vmov	r2, r3, d8
 8027a38:	ec41 0b19 	vmov	d9, r0, r1
 8027a3c:	ec51 0b18 	vmov	r0, r1, d8
 8027a40:	f7d8 fdea 	bl	8000618 <__aeabi_dmul>
 8027a44:	a37c      	add	r3, pc, #496	; (adr r3, 8027c38 <__ieee754_pow+0x708>)
 8027a46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027a4a:	4604      	mov	r4, r0
 8027a4c:	460d      	mov	r5, r1
 8027a4e:	f7d8 fde3 	bl	8000618 <__aeabi_dmul>
 8027a52:	a37b      	add	r3, pc, #492	; (adr r3, 8027c40 <__ieee754_pow+0x710>)
 8027a54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027a58:	f7d8 fc28 	bl	80002ac <__adddf3>
 8027a5c:	4622      	mov	r2, r4
 8027a5e:	462b      	mov	r3, r5
 8027a60:	f7d8 fdda 	bl	8000618 <__aeabi_dmul>
 8027a64:	a378      	add	r3, pc, #480	; (adr r3, 8027c48 <__ieee754_pow+0x718>)
 8027a66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027a6a:	f7d8 fc1f 	bl	80002ac <__adddf3>
 8027a6e:	4622      	mov	r2, r4
 8027a70:	462b      	mov	r3, r5
 8027a72:	f7d8 fdd1 	bl	8000618 <__aeabi_dmul>
 8027a76:	a376      	add	r3, pc, #472	; (adr r3, 8027c50 <__ieee754_pow+0x720>)
 8027a78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027a7c:	f7d8 fc16 	bl	80002ac <__adddf3>
 8027a80:	4622      	mov	r2, r4
 8027a82:	462b      	mov	r3, r5
 8027a84:	f7d8 fdc8 	bl	8000618 <__aeabi_dmul>
 8027a88:	a373      	add	r3, pc, #460	; (adr r3, 8027c58 <__ieee754_pow+0x728>)
 8027a8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027a8e:	f7d8 fc0d 	bl	80002ac <__adddf3>
 8027a92:	4622      	mov	r2, r4
 8027a94:	462b      	mov	r3, r5
 8027a96:	f7d8 fdbf 	bl	8000618 <__aeabi_dmul>
 8027a9a:	a371      	add	r3, pc, #452	; (adr r3, 8027c60 <__ieee754_pow+0x730>)
 8027a9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027aa0:	f7d8 fc04 	bl	80002ac <__adddf3>
 8027aa4:	4622      	mov	r2, r4
 8027aa6:	4606      	mov	r6, r0
 8027aa8:	460f      	mov	r7, r1
 8027aaa:	462b      	mov	r3, r5
 8027aac:	4620      	mov	r0, r4
 8027aae:	4629      	mov	r1, r5
 8027ab0:	f7d8 fdb2 	bl	8000618 <__aeabi_dmul>
 8027ab4:	4602      	mov	r2, r0
 8027ab6:	460b      	mov	r3, r1
 8027ab8:	4630      	mov	r0, r6
 8027aba:	4639      	mov	r1, r7
 8027abc:	f7d8 fdac 	bl	8000618 <__aeabi_dmul>
 8027ac0:	4642      	mov	r2, r8
 8027ac2:	4604      	mov	r4, r0
 8027ac4:	460d      	mov	r5, r1
 8027ac6:	464b      	mov	r3, r9
 8027ac8:	ec51 0b18 	vmov	r0, r1, d8
 8027acc:	f7d8 fbee 	bl	80002ac <__adddf3>
 8027ad0:	ec53 2b19 	vmov	r2, r3, d9
 8027ad4:	f7d8 fda0 	bl	8000618 <__aeabi_dmul>
 8027ad8:	4622      	mov	r2, r4
 8027ada:	462b      	mov	r3, r5
 8027adc:	f7d8 fbe6 	bl	80002ac <__adddf3>
 8027ae0:	4642      	mov	r2, r8
 8027ae2:	4682      	mov	sl, r0
 8027ae4:	468b      	mov	fp, r1
 8027ae6:	464b      	mov	r3, r9
 8027ae8:	4640      	mov	r0, r8
 8027aea:	4649      	mov	r1, r9
 8027aec:	f7d8 fd94 	bl	8000618 <__aeabi_dmul>
 8027af0:	4b6b      	ldr	r3, [pc, #428]	; (8027ca0 <__ieee754_pow+0x770>)
 8027af2:	2200      	movs	r2, #0
 8027af4:	4606      	mov	r6, r0
 8027af6:	460f      	mov	r7, r1
 8027af8:	f7d8 fbd8 	bl	80002ac <__adddf3>
 8027afc:	4652      	mov	r2, sl
 8027afe:	465b      	mov	r3, fp
 8027b00:	f7d8 fbd4 	bl	80002ac <__adddf3>
 8027b04:	2000      	movs	r0, #0
 8027b06:	4604      	mov	r4, r0
 8027b08:	460d      	mov	r5, r1
 8027b0a:	4602      	mov	r2, r0
 8027b0c:	460b      	mov	r3, r1
 8027b0e:	4640      	mov	r0, r8
 8027b10:	4649      	mov	r1, r9
 8027b12:	f7d8 fd81 	bl	8000618 <__aeabi_dmul>
 8027b16:	4b62      	ldr	r3, [pc, #392]	; (8027ca0 <__ieee754_pow+0x770>)
 8027b18:	4680      	mov	r8, r0
 8027b1a:	4689      	mov	r9, r1
 8027b1c:	2200      	movs	r2, #0
 8027b1e:	4620      	mov	r0, r4
 8027b20:	4629      	mov	r1, r5
 8027b22:	f7d8 fbc1 	bl	80002a8 <__aeabi_dsub>
 8027b26:	4632      	mov	r2, r6
 8027b28:	463b      	mov	r3, r7
 8027b2a:	f7d8 fbbd 	bl	80002a8 <__aeabi_dsub>
 8027b2e:	4602      	mov	r2, r0
 8027b30:	460b      	mov	r3, r1
 8027b32:	4650      	mov	r0, sl
 8027b34:	4659      	mov	r1, fp
 8027b36:	f7d8 fbb7 	bl	80002a8 <__aeabi_dsub>
 8027b3a:	ec53 2b18 	vmov	r2, r3, d8
 8027b3e:	f7d8 fd6b 	bl	8000618 <__aeabi_dmul>
 8027b42:	4622      	mov	r2, r4
 8027b44:	4606      	mov	r6, r0
 8027b46:	460f      	mov	r7, r1
 8027b48:	462b      	mov	r3, r5
 8027b4a:	ec51 0b19 	vmov	r0, r1, d9
 8027b4e:	f7d8 fd63 	bl	8000618 <__aeabi_dmul>
 8027b52:	4602      	mov	r2, r0
 8027b54:	460b      	mov	r3, r1
 8027b56:	4630      	mov	r0, r6
 8027b58:	4639      	mov	r1, r7
 8027b5a:	f7d8 fba7 	bl	80002ac <__adddf3>
 8027b5e:	4606      	mov	r6, r0
 8027b60:	460f      	mov	r7, r1
 8027b62:	4602      	mov	r2, r0
 8027b64:	460b      	mov	r3, r1
 8027b66:	4640      	mov	r0, r8
 8027b68:	4649      	mov	r1, r9
 8027b6a:	f7d8 fb9f 	bl	80002ac <__adddf3>
 8027b6e:	a33e      	add	r3, pc, #248	; (adr r3, 8027c68 <__ieee754_pow+0x738>)
 8027b70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027b74:	2000      	movs	r0, #0
 8027b76:	4604      	mov	r4, r0
 8027b78:	460d      	mov	r5, r1
 8027b7a:	f7d8 fd4d 	bl	8000618 <__aeabi_dmul>
 8027b7e:	4642      	mov	r2, r8
 8027b80:	ec41 0b18 	vmov	d8, r0, r1
 8027b84:	464b      	mov	r3, r9
 8027b86:	4620      	mov	r0, r4
 8027b88:	4629      	mov	r1, r5
 8027b8a:	f7d8 fb8d 	bl	80002a8 <__aeabi_dsub>
 8027b8e:	4602      	mov	r2, r0
 8027b90:	460b      	mov	r3, r1
 8027b92:	4630      	mov	r0, r6
 8027b94:	4639      	mov	r1, r7
 8027b96:	f7d8 fb87 	bl	80002a8 <__aeabi_dsub>
 8027b9a:	a335      	add	r3, pc, #212	; (adr r3, 8027c70 <__ieee754_pow+0x740>)
 8027b9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027ba0:	f7d8 fd3a 	bl	8000618 <__aeabi_dmul>
 8027ba4:	a334      	add	r3, pc, #208	; (adr r3, 8027c78 <__ieee754_pow+0x748>)
 8027ba6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027baa:	4606      	mov	r6, r0
 8027bac:	460f      	mov	r7, r1
 8027bae:	4620      	mov	r0, r4
 8027bb0:	4629      	mov	r1, r5
 8027bb2:	f7d8 fd31 	bl	8000618 <__aeabi_dmul>
 8027bb6:	4602      	mov	r2, r0
 8027bb8:	460b      	mov	r3, r1
 8027bba:	4630      	mov	r0, r6
 8027bbc:	4639      	mov	r1, r7
 8027bbe:	f7d8 fb75 	bl	80002ac <__adddf3>
 8027bc2:	9a07      	ldr	r2, [sp, #28]
 8027bc4:	4b37      	ldr	r3, [pc, #220]	; (8027ca4 <__ieee754_pow+0x774>)
 8027bc6:	4413      	add	r3, r2
 8027bc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027bcc:	f7d8 fb6e 	bl	80002ac <__adddf3>
 8027bd0:	4682      	mov	sl, r0
 8027bd2:	9805      	ldr	r0, [sp, #20]
 8027bd4:	468b      	mov	fp, r1
 8027bd6:	f7d8 fcb5 	bl	8000544 <__aeabi_i2d>
 8027bda:	9a07      	ldr	r2, [sp, #28]
 8027bdc:	4b32      	ldr	r3, [pc, #200]	; (8027ca8 <__ieee754_pow+0x778>)
 8027bde:	4413      	add	r3, r2
 8027be0:	e9d3 8900 	ldrd	r8, r9, [r3]
 8027be4:	4606      	mov	r6, r0
 8027be6:	460f      	mov	r7, r1
 8027be8:	4652      	mov	r2, sl
 8027bea:	465b      	mov	r3, fp
 8027bec:	ec51 0b18 	vmov	r0, r1, d8
 8027bf0:	f7d8 fb5c 	bl	80002ac <__adddf3>
 8027bf4:	4642      	mov	r2, r8
 8027bf6:	464b      	mov	r3, r9
 8027bf8:	f7d8 fb58 	bl	80002ac <__adddf3>
 8027bfc:	4632      	mov	r2, r6
 8027bfe:	463b      	mov	r3, r7
 8027c00:	f7d8 fb54 	bl	80002ac <__adddf3>
 8027c04:	2000      	movs	r0, #0
 8027c06:	4632      	mov	r2, r6
 8027c08:	463b      	mov	r3, r7
 8027c0a:	4604      	mov	r4, r0
 8027c0c:	460d      	mov	r5, r1
 8027c0e:	f7d8 fb4b 	bl	80002a8 <__aeabi_dsub>
 8027c12:	4642      	mov	r2, r8
 8027c14:	464b      	mov	r3, r9
 8027c16:	f7d8 fb47 	bl	80002a8 <__aeabi_dsub>
 8027c1a:	ec53 2b18 	vmov	r2, r3, d8
 8027c1e:	f7d8 fb43 	bl	80002a8 <__aeabi_dsub>
 8027c22:	4602      	mov	r2, r0
 8027c24:	460b      	mov	r3, r1
 8027c26:	4650      	mov	r0, sl
 8027c28:	4659      	mov	r1, fp
 8027c2a:	e610      	b.n	802784e <__ieee754_pow+0x31e>
 8027c2c:	2401      	movs	r4, #1
 8027c2e:	e6a1      	b.n	8027974 <__ieee754_pow+0x444>
 8027c30:	ed9f 7b13 	vldr	d7, [pc, #76]	; 8027c80 <__ieee754_pow+0x750>
 8027c34:	e617      	b.n	8027866 <__ieee754_pow+0x336>
 8027c36:	bf00      	nop
 8027c38:	4a454eef 	.word	0x4a454eef
 8027c3c:	3fca7e28 	.word	0x3fca7e28
 8027c40:	93c9db65 	.word	0x93c9db65
 8027c44:	3fcd864a 	.word	0x3fcd864a
 8027c48:	a91d4101 	.word	0xa91d4101
 8027c4c:	3fd17460 	.word	0x3fd17460
 8027c50:	518f264d 	.word	0x518f264d
 8027c54:	3fd55555 	.word	0x3fd55555
 8027c58:	db6fabff 	.word	0xdb6fabff
 8027c5c:	3fdb6db6 	.word	0x3fdb6db6
 8027c60:	33333303 	.word	0x33333303
 8027c64:	3fe33333 	.word	0x3fe33333
 8027c68:	e0000000 	.word	0xe0000000
 8027c6c:	3feec709 	.word	0x3feec709
 8027c70:	dc3a03fd 	.word	0xdc3a03fd
 8027c74:	3feec709 	.word	0x3feec709
 8027c78:	145b01f5 	.word	0x145b01f5
 8027c7c:	be3e2fe0 	.word	0xbe3e2fe0
 8027c80:	00000000 	.word	0x00000000
 8027c84:	3ff00000 	.word	0x3ff00000
 8027c88:	7ff00000 	.word	0x7ff00000
 8027c8c:	43400000 	.word	0x43400000
 8027c90:	0003988e 	.word	0x0003988e
 8027c94:	000bb679 	.word	0x000bb679
 8027c98:	0802c420 	.word	0x0802c420
 8027c9c:	3ff00000 	.word	0x3ff00000
 8027ca0:	40080000 	.word	0x40080000
 8027ca4:	0802c440 	.word	0x0802c440
 8027ca8:	0802c430 	.word	0x0802c430
 8027cac:	a3b3      	add	r3, pc, #716	; (adr r3, 8027f7c <__ieee754_pow+0xa4c>)
 8027cae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027cb2:	4640      	mov	r0, r8
 8027cb4:	4649      	mov	r1, r9
 8027cb6:	f7d8 faf9 	bl	80002ac <__adddf3>
 8027cba:	4622      	mov	r2, r4
 8027cbc:	ec41 0b1a 	vmov	d10, r0, r1
 8027cc0:	462b      	mov	r3, r5
 8027cc2:	4630      	mov	r0, r6
 8027cc4:	4639      	mov	r1, r7
 8027cc6:	f7d8 faef 	bl	80002a8 <__aeabi_dsub>
 8027cca:	4602      	mov	r2, r0
 8027ccc:	460b      	mov	r3, r1
 8027cce:	ec51 0b1a 	vmov	r0, r1, d10
 8027cd2:	f7d8 ff31 	bl	8000b38 <__aeabi_dcmpgt>
 8027cd6:	2800      	cmp	r0, #0
 8027cd8:	f47f ae04 	bne.w	80278e4 <__ieee754_pow+0x3b4>
 8027cdc:	4aa2      	ldr	r2, [pc, #648]	; (8027f68 <__ieee754_pow+0xa38>)
 8027cde:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8027ce2:	4293      	cmp	r3, r2
 8027ce4:	f340 8107 	ble.w	8027ef6 <__ieee754_pow+0x9c6>
 8027ce8:	151b      	asrs	r3, r3, #20
 8027cea:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8027cee:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 8027cf2:	fa4a fa03 	asr.w	sl, sl, r3
 8027cf6:	44da      	add	sl, fp
 8027cf8:	f3ca 510a 	ubfx	r1, sl, #20, #11
 8027cfc:	489b      	ldr	r0, [pc, #620]	; (8027f6c <__ieee754_pow+0xa3c>)
 8027cfe:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 8027d02:	4108      	asrs	r0, r1
 8027d04:	ea00 030a 	and.w	r3, r0, sl
 8027d08:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 8027d0c:	f1c1 0114 	rsb	r1, r1, #20
 8027d10:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8027d14:	fa4a fa01 	asr.w	sl, sl, r1
 8027d18:	f1bb 0f00 	cmp.w	fp, #0
 8027d1c:	f04f 0200 	mov.w	r2, #0
 8027d20:	4620      	mov	r0, r4
 8027d22:	4629      	mov	r1, r5
 8027d24:	bfb8      	it	lt
 8027d26:	f1ca 0a00 	rsblt	sl, sl, #0
 8027d2a:	f7d8 fabd 	bl	80002a8 <__aeabi_dsub>
 8027d2e:	ec41 0b19 	vmov	d9, r0, r1
 8027d32:	4642      	mov	r2, r8
 8027d34:	464b      	mov	r3, r9
 8027d36:	ec51 0b19 	vmov	r0, r1, d9
 8027d3a:	f7d8 fab7 	bl	80002ac <__adddf3>
 8027d3e:	a37a      	add	r3, pc, #488	; (adr r3, 8027f28 <__ieee754_pow+0x9f8>)
 8027d40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027d44:	2000      	movs	r0, #0
 8027d46:	4604      	mov	r4, r0
 8027d48:	460d      	mov	r5, r1
 8027d4a:	f7d8 fc65 	bl	8000618 <__aeabi_dmul>
 8027d4e:	ec53 2b19 	vmov	r2, r3, d9
 8027d52:	4606      	mov	r6, r0
 8027d54:	460f      	mov	r7, r1
 8027d56:	4620      	mov	r0, r4
 8027d58:	4629      	mov	r1, r5
 8027d5a:	f7d8 faa5 	bl	80002a8 <__aeabi_dsub>
 8027d5e:	4602      	mov	r2, r0
 8027d60:	460b      	mov	r3, r1
 8027d62:	4640      	mov	r0, r8
 8027d64:	4649      	mov	r1, r9
 8027d66:	f7d8 fa9f 	bl	80002a8 <__aeabi_dsub>
 8027d6a:	a371      	add	r3, pc, #452	; (adr r3, 8027f30 <__ieee754_pow+0xa00>)
 8027d6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027d70:	f7d8 fc52 	bl	8000618 <__aeabi_dmul>
 8027d74:	a370      	add	r3, pc, #448	; (adr r3, 8027f38 <__ieee754_pow+0xa08>)
 8027d76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027d7a:	4680      	mov	r8, r0
 8027d7c:	4689      	mov	r9, r1
 8027d7e:	4620      	mov	r0, r4
 8027d80:	4629      	mov	r1, r5
 8027d82:	f7d8 fc49 	bl	8000618 <__aeabi_dmul>
 8027d86:	4602      	mov	r2, r0
 8027d88:	460b      	mov	r3, r1
 8027d8a:	4640      	mov	r0, r8
 8027d8c:	4649      	mov	r1, r9
 8027d8e:	f7d8 fa8d 	bl	80002ac <__adddf3>
 8027d92:	4604      	mov	r4, r0
 8027d94:	460d      	mov	r5, r1
 8027d96:	4602      	mov	r2, r0
 8027d98:	460b      	mov	r3, r1
 8027d9a:	4630      	mov	r0, r6
 8027d9c:	4639      	mov	r1, r7
 8027d9e:	f7d8 fa85 	bl	80002ac <__adddf3>
 8027da2:	4632      	mov	r2, r6
 8027da4:	463b      	mov	r3, r7
 8027da6:	4680      	mov	r8, r0
 8027da8:	4689      	mov	r9, r1
 8027daa:	f7d8 fa7d 	bl	80002a8 <__aeabi_dsub>
 8027dae:	4602      	mov	r2, r0
 8027db0:	460b      	mov	r3, r1
 8027db2:	4620      	mov	r0, r4
 8027db4:	4629      	mov	r1, r5
 8027db6:	f7d8 fa77 	bl	80002a8 <__aeabi_dsub>
 8027dba:	4642      	mov	r2, r8
 8027dbc:	4606      	mov	r6, r0
 8027dbe:	460f      	mov	r7, r1
 8027dc0:	464b      	mov	r3, r9
 8027dc2:	4640      	mov	r0, r8
 8027dc4:	4649      	mov	r1, r9
 8027dc6:	f7d8 fc27 	bl	8000618 <__aeabi_dmul>
 8027dca:	a35d      	add	r3, pc, #372	; (adr r3, 8027f40 <__ieee754_pow+0xa10>)
 8027dcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027dd0:	4604      	mov	r4, r0
 8027dd2:	460d      	mov	r5, r1
 8027dd4:	f7d8 fc20 	bl	8000618 <__aeabi_dmul>
 8027dd8:	a35b      	add	r3, pc, #364	; (adr r3, 8027f48 <__ieee754_pow+0xa18>)
 8027dda:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027dde:	f7d8 fa63 	bl	80002a8 <__aeabi_dsub>
 8027de2:	4622      	mov	r2, r4
 8027de4:	462b      	mov	r3, r5
 8027de6:	f7d8 fc17 	bl	8000618 <__aeabi_dmul>
 8027dea:	a359      	add	r3, pc, #356	; (adr r3, 8027f50 <__ieee754_pow+0xa20>)
 8027dec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027df0:	f7d8 fa5c 	bl	80002ac <__adddf3>
 8027df4:	4622      	mov	r2, r4
 8027df6:	462b      	mov	r3, r5
 8027df8:	f7d8 fc0e 	bl	8000618 <__aeabi_dmul>
 8027dfc:	a356      	add	r3, pc, #344	; (adr r3, 8027f58 <__ieee754_pow+0xa28>)
 8027dfe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027e02:	f7d8 fa51 	bl	80002a8 <__aeabi_dsub>
 8027e06:	4622      	mov	r2, r4
 8027e08:	462b      	mov	r3, r5
 8027e0a:	f7d8 fc05 	bl	8000618 <__aeabi_dmul>
 8027e0e:	a354      	add	r3, pc, #336	; (adr r3, 8027f60 <__ieee754_pow+0xa30>)
 8027e10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027e14:	f7d8 fa4a 	bl	80002ac <__adddf3>
 8027e18:	4622      	mov	r2, r4
 8027e1a:	462b      	mov	r3, r5
 8027e1c:	f7d8 fbfc 	bl	8000618 <__aeabi_dmul>
 8027e20:	4602      	mov	r2, r0
 8027e22:	460b      	mov	r3, r1
 8027e24:	4640      	mov	r0, r8
 8027e26:	4649      	mov	r1, r9
 8027e28:	f7d8 fa3e 	bl	80002a8 <__aeabi_dsub>
 8027e2c:	4604      	mov	r4, r0
 8027e2e:	460d      	mov	r5, r1
 8027e30:	4602      	mov	r2, r0
 8027e32:	460b      	mov	r3, r1
 8027e34:	4640      	mov	r0, r8
 8027e36:	4649      	mov	r1, r9
 8027e38:	f7d8 fbee 	bl	8000618 <__aeabi_dmul>
 8027e3c:	2200      	movs	r2, #0
 8027e3e:	ec41 0b19 	vmov	d9, r0, r1
 8027e42:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8027e46:	4620      	mov	r0, r4
 8027e48:	4629      	mov	r1, r5
 8027e4a:	f7d8 fa2d 	bl	80002a8 <__aeabi_dsub>
 8027e4e:	4602      	mov	r2, r0
 8027e50:	460b      	mov	r3, r1
 8027e52:	ec51 0b19 	vmov	r0, r1, d9
 8027e56:	f7d8 fd09 	bl	800086c <__aeabi_ddiv>
 8027e5a:	4632      	mov	r2, r6
 8027e5c:	4604      	mov	r4, r0
 8027e5e:	460d      	mov	r5, r1
 8027e60:	463b      	mov	r3, r7
 8027e62:	4640      	mov	r0, r8
 8027e64:	4649      	mov	r1, r9
 8027e66:	f7d8 fbd7 	bl	8000618 <__aeabi_dmul>
 8027e6a:	4632      	mov	r2, r6
 8027e6c:	463b      	mov	r3, r7
 8027e6e:	f7d8 fa1d 	bl	80002ac <__adddf3>
 8027e72:	4602      	mov	r2, r0
 8027e74:	460b      	mov	r3, r1
 8027e76:	4620      	mov	r0, r4
 8027e78:	4629      	mov	r1, r5
 8027e7a:	f7d8 fa15 	bl	80002a8 <__aeabi_dsub>
 8027e7e:	4642      	mov	r2, r8
 8027e80:	464b      	mov	r3, r9
 8027e82:	f7d8 fa11 	bl	80002a8 <__aeabi_dsub>
 8027e86:	460b      	mov	r3, r1
 8027e88:	4602      	mov	r2, r0
 8027e8a:	4939      	ldr	r1, [pc, #228]	; (8027f70 <__ieee754_pow+0xa40>)
 8027e8c:	2000      	movs	r0, #0
 8027e8e:	f7d8 fa0b 	bl	80002a8 <__aeabi_dsub>
 8027e92:	ec41 0b10 	vmov	d0, r0, r1
 8027e96:	ee10 3a90 	vmov	r3, s1
 8027e9a:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 8027e9e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8027ea2:	da2b      	bge.n	8027efc <__ieee754_pow+0x9cc>
 8027ea4:	4650      	mov	r0, sl
 8027ea6:	f000 fa7f 	bl	80283a8 <scalbn>
 8027eaa:	ec51 0b10 	vmov	r0, r1, d0
 8027eae:	ec53 2b18 	vmov	r2, r3, d8
 8027eb2:	f7ff bbee 	b.w	8027692 <__ieee754_pow+0x162>
 8027eb6:	4b2f      	ldr	r3, [pc, #188]	; (8027f74 <__ieee754_pow+0xa44>)
 8027eb8:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8027ebc:	429e      	cmp	r6, r3
 8027ebe:	f77f af0d 	ble.w	8027cdc <__ieee754_pow+0x7ac>
 8027ec2:	4b2d      	ldr	r3, [pc, #180]	; (8027f78 <__ieee754_pow+0xa48>)
 8027ec4:	440b      	add	r3, r1
 8027ec6:	4303      	orrs	r3, r0
 8027ec8:	d009      	beq.n	8027ede <__ieee754_pow+0x9ae>
 8027eca:	ec51 0b18 	vmov	r0, r1, d8
 8027ece:	2200      	movs	r2, #0
 8027ed0:	2300      	movs	r3, #0
 8027ed2:	f7d8 fe13 	bl	8000afc <__aeabi_dcmplt>
 8027ed6:	3800      	subs	r0, #0
 8027ed8:	bf18      	it	ne
 8027eda:	2001      	movne	r0, #1
 8027edc:	e448      	b.n	8027770 <__ieee754_pow+0x240>
 8027ede:	4622      	mov	r2, r4
 8027ee0:	462b      	mov	r3, r5
 8027ee2:	f7d8 f9e1 	bl	80002a8 <__aeabi_dsub>
 8027ee6:	4642      	mov	r2, r8
 8027ee8:	464b      	mov	r3, r9
 8027eea:	f7d8 fe1b 	bl	8000b24 <__aeabi_dcmpge>
 8027eee:	2800      	cmp	r0, #0
 8027ef0:	f43f aef4 	beq.w	8027cdc <__ieee754_pow+0x7ac>
 8027ef4:	e7e9      	b.n	8027eca <__ieee754_pow+0x99a>
 8027ef6:	f04f 0a00 	mov.w	sl, #0
 8027efa:	e71a      	b.n	8027d32 <__ieee754_pow+0x802>
 8027efc:	ec51 0b10 	vmov	r0, r1, d0
 8027f00:	4619      	mov	r1, r3
 8027f02:	e7d4      	b.n	8027eae <__ieee754_pow+0x97e>
 8027f04:	491a      	ldr	r1, [pc, #104]	; (8027f70 <__ieee754_pow+0xa40>)
 8027f06:	2000      	movs	r0, #0
 8027f08:	f7ff bb31 	b.w	802756e <__ieee754_pow+0x3e>
 8027f0c:	2000      	movs	r0, #0
 8027f0e:	2100      	movs	r1, #0
 8027f10:	f7ff bb2d 	b.w	802756e <__ieee754_pow+0x3e>
 8027f14:	4630      	mov	r0, r6
 8027f16:	4639      	mov	r1, r7
 8027f18:	f7ff bb29 	b.w	802756e <__ieee754_pow+0x3e>
 8027f1c:	9204      	str	r2, [sp, #16]
 8027f1e:	f7ff bb7b 	b.w	8027618 <__ieee754_pow+0xe8>
 8027f22:	2300      	movs	r3, #0
 8027f24:	f7ff bb65 	b.w	80275f2 <__ieee754_pow+0xc2>
 8027f28:	00000000 	.word	0x00000000
 8027f2c:	3fe62e43 	.word	0x3fe62e43
 8027f30:	fefa39ef 	.word	0xfefa39ef
 8027f34:	3fe62e42 	.word	0x3fe62e42
 8027f38:	0ca86c39 	.word	0x0ca86c39
 8027f3c:	be205c61 	.word	0xbe205c61
 8027f40:	72bea4d0 	.word	0x72bea4d0
 8027f44:	3e663769 	.word	0x3e663769
 8027f48:	c5d26bf1 	.word	0xc5d26bf1
 8027f4c:	3ebbbd41 	.word	0x3ebbbd41
 8027f50:	af25de2c 	.word	0xaf25de2c
 8027f54:	3f11566a 	.word	0x3f11566a
 8027f58:	16bebd93 	.word	0x16bebd93
 8027f5c:	3f66c16c 	.word	0x3f66c16c
 8027f60:	5555553e 	.word	0x5555553e
 8027f64:	3fc55555 	.word	0x3fc55555
 8027f68:	3fe00000 	.word	0x3fe00000
 8027f6c:	fff00000 	.word	0xfff00000
 8027f70:	3ff00000 	.word	0x3ff00000
 8027f74:	4090cbff 	.word	0x4090cbff
 8027f78:	3f6f3400 	.word	0x3f6f3400
 8027f7c:	652b82fe 	.word	0x652b82fe
 8027f80:	3c971547 	.word	0x3c971547
 8027f84:	00000000 	.word	0x00000000

08027f88 <__ieee754_rem_pio2>:
 8027f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027f8c:	ed2d 8b02 	vpush	{d8}
 8027f90:	ec55 4b10 	vmov	r4, r5, d0
 8027f94:	4bca      	ldr	r3, [pc, #808]	; (80282c0 <__ieee754_rem_pio2+0x338>)
 8027f96:	b08b      	sub	sp, #44	; 0x2c
 8027f98:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 8027f9c:	4598      	cmp	r8, r3
 8027f9e:	4682      	mov	sl, r0
 8027fa0:	9502      	str	r5, [sp, #8]
 8027fa2:	dc08      	bgt.n	8027fb6 <__ieee754_rem_pio2+0x2e>
 8027fa4:	2200      	movs	r2, #0
 8027fa6:	2300      	movs	r3, #0
 8027fa8:	ed80 0b00 	vstr	d0, [r0]
 8027fac:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8027fb0:	f04f 0b00 	mov.w	fp, #0
 8027fb4:	e028      	b.n	8028008 <__ieee754_rem_pio2+0x80>
 8027fb6:	4bc3      	ldr	r3, [pc, #780]	; (80282c4 <__ieee754_rem_pio2+0x33c>)
 8027fb8:	4598      	cmp	r8, r3
 8027fba:	dc78      	bgt.n	80280ae <__ieee754_rem_pio2+0x126>
 8027fbc:	9b02      	ldr	r3, [sp, #8]
 8027fbe:	4ec2      	ldr	r6, [pc, #776]	; (80282c8 <__ieee754_rem_pio2+0x340>)
 8027fc0:	2b00      	cmp	r3, #0
 8027fc2:	ee10 0a10 	vmov	r0, s0
 8027fc6:	a3b0      	add	r3, pc, #704	; (adr r3, 8028288 <__ieee754_rem_pio2+0x300>)
 8027fc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027fcc:	4629      	mov	r1, r5
 8027fce:	dd39      	ble.n	8028044 <__ieee754_rem_pio2+0xbc>
 8027fd0:	f7d8 f96a 	bl	80002a8 <__aeabi_dsub>
 8027fd4:	45b0      	cmp	r8, r6
 8027fd6:	4604      	mov	r4, r0
 8027fd8:	460d      	mov	r5, r1
 8027fda:	d01b      	beq.n	8028014 <__ieee754_rem_pio2+0x8c>
 8027fdc:	a3ac      	add	r3, pc, #688	; (adr r3, 8028290 <__ieee754_rem_pio2+0x308>)
 8027fde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027fe2:	f7d8 f961 	bl	80002a8 <__aeabi_dsub>
 8027fe6:	4602      	mov	r2, r0
 8027fe8:	460b      	mov	r3, r1
 8027fea:	e9ca 2300 	strd	r2, r3, [sl]
 8027fee:	4620      	mov	r0, r4
 8027ff0:	4629      	mov	r1, r5
 8027ff2:	f7d8 f959 	bl	80002a8 <__aeabi_dsub>
 8027ff6:	a3a6      	add	r3, pc, #664	; (adr r3, 8028290 <__ieee754_rem_pio2+0x308>)
 8027ff8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8027ffc:	f7d8 f954 	bl	80002a8 <__aeabi_dsub>
 8028000:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8028004:	f04f 0b01 	mov.w	fp, #1
 8028008:	4658      	mov	r0, fp
 802800a:	b00b      	add	sp, #44	; 0x2c
 802800c:	ecbd 8b02 	vpop	{d8}
 8028010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028014:	a3a0      	add	r3, pc, #640	; (adr r3, 8028298 <__ieee754_rem_pio2+0x310>)
 8028016:	e9d3 2300 	ldrd	r2, r3, [r3]
 802801a:	f7d8 f945 	bl	80002a8 <__aeabi_dsub>
 802801e:	a3a0      	add	r3, pc, #640	; (adr r3, 80282a0 <__ieee754_rem_pio2+0x318>)
 8028020:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028024:	4604      	mov	r4, r0
 8028026:	460d      	mov	r5, r1
 8028028:	f7d8 f93e 	bl	80002a8 <__aeabi_dsub>
 802802c:	4602      	mov	r2, r0
 802802e:	460b      	mov	r3, r1
 8028030:	e9ca 2300 	strd	r2, r3, [sl]
 8028034:	4620      	mov	r0, r4
 8028036:	4629      	mov	r1, r5
 8028038:	f7d8 f936 	bl	80002a8 <__aeabi_dsub>
 802803c:	a398      	add	r3, pc, #608	; (adr r3, 80282a0 <__ieee754_rem_pio2+0x318>)
 802803e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028042:	e7db      	b.n	8027ffc <__ieee754_rem_pio2+0x74>
 8028044:	f7d8 f932 	bl	80002ac <__adddf3>
 8028048:	45b0      	cmp	r8, r6
 802804a:	4604      	mov	r4, r0
 802804c:	460d      	mov	r5, r1
 802804e:	d016      	beq.n	802807e <__ieee754_rem_pio2+0xf6>
 8028050:	a38f      	add	r3, pc, #572	; (adr r3, 8028290 <__ieee754_rem_pio2+0x308>)
 8028052:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028056:	f7d8 f929 	bl	80002ac <__adddf3>
 802805a:	4602      	mov	r2, r0
 802805c:	460b      	mov	r3, r1
 802805e:	e9ca 2300 	strd	r2, r3, [sl]
 8028062:	4620      	mov	r0, r4
 8028064:	4629      	mov	r1, r5
 8028066:	f7d8 f91f 	bl	80002a8 <__aeabi_dsub>
 802806a:	a389      	add	r3, pc, #548	; (adr r3, 8028290 <__ieee754_rem_pio2+0x308>)
 802806c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028070:	f7d8 f91c 	bl	80002ac <__adddf3>
 8028074:	f04f 3bff 	mov.w	fp, #4294967295
 8028078:	e9ca 0102 	strd	r0, r1, [sl, #8]
 802807c:	e7c4      	b.n	8028008 <__ieee754_rem_pio2+0x80>
 802807e:	a386      	add	r3, pc, #536	; (adr r3, 8028298 <__ieee754_rem_pio2+0x310>)
 8028080:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028084:	f7d8 f912 	bl	80002ac <__adddf3>
 8028088:	a385      	add	r3, pc, #532	; (adr r3, 80282a0 <__ieee754_rem_pio2+0x318>)
 802808a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802808e:	4604      	mov	r4, r0
 8028090:	460d      	mov	r5, r1
 8028092:	f7d8 f90b 	bl	80002ac <__adddf3>
 8028096:	4602      	mov	r2, r0
 8028098:	460b      	mov	r3, r1
 802809a:	e9ca 2300 	strd	r2, r3, [sl]
 802809e:	4620      	mov	r0, r4
 80280a0:	4629      	mov	r1, r5
 80280a2:	f7d8 f901 	bl	80002a8 <__aeabi_dsub>
 80280a6:	a37e      	add	r3, pc, #504	; (adr r3, 80282a0 <__ieee754_rem_pio2+0x318>)
 80280a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80280ac:	e7e0      	b.n	8028070 <__ieee754_rem_pio2+0xe8>
 80280ae:	4b87      	ldr	r3, [pc, #540]	; (80282cc <__ieee754_rem_pio2+0x344>)
 80280b0:	4598      	cmp	r8, r3
 80280b2:	f300 80d8 	bgt.w	8028266 <__ieee754_rem_pio2+0x2de>
 80280b6:	f000 f96d 	bl	8028394 <fabs>
 80280ba:	ec55 4b10 	vmov	r4, r5, d0
 80280be:	ee10 0a10 	vmov	r0, s0
 80280c2:	a379      	add	r3, pc, #484	; (adr r3, 80282a8 <__ieee754_rem_pio2+0x320>)
 80280c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80280c8:	4629      	mov	r1, r5
 80280ca:	f7d8 faa5 	bl	8000618 <__aeabi_dmul>
 80280ce:	4b80      	ldr	r3, [pc, #512]	; (80282d0 <__ieee754_rem_pio2+0x348>)
 80280d0:	2200      	movs	r2, #0
 80280d2:	f7d8 f8eb 	bl	80002ac <__adddf3>
 80280d6:	f7d8 fd4f 	bl	8000b78 <__aeabi_d2iz>
 80280da:	4683      	mov	fp, r0
 80280dc:	f7d8 fa32 	bl	8000544 <__aeabi_i2d>
 80280e0:	4602      	mov	r2, r0
 80280e2:	460b      	mov	r3, r1
 80280e4:	ec43 2b18 	vmov	d8, r2, r3
 80280e8:	a367      	add	r3, pc, #412	; (adr r3, 8028288 <__ieee754_rem_pio2+0x300>)
 80280ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80280ee:	f7d8 fa93 	bl	8000618 <__aeabi_dmul>
 80280f2:	4602      	mov	r2, r0
 80280f4:	460b      	mov	r3, r1
 80280f6:	4620      	mov	r0, r4
 80280f8:	4629      	mov	r1, r5
 80280fa:	f7d8 f8d5 	bl	80002a8 <__aeabi_dsub>
 80280fe:	a364      	add	r3, pc, #400	; (adr r3, 8028290 <__ieee754_rem_pio2+0x308>)
 8028100:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028104:	4606      	mov	r6, r0
 8028106:	460f      	mov	r7, r1
 8028108:	ec51 0b18 	vmov	r0, r1, d8
 802810c:	f7d8 fa84 	bl	8000618 <__aeabi_dmul>
 8028110:	f1bb 0f1f 	cmp.w	fp, #31
 8028114:	4604      	mov	r4, r0
 8028116:	460d      	mov	r5, r1
 8028118:	dc0d      	bgt.n	8028136 <__ieee754_rem_pio2+0x1ae>
 802811a:	4b6e      	ldr	r3, [pc, #440]	; (80282d4 <__ieee754_rem_pio2+0x34c>)
 802811c:	f10b 32ff 	add.w	r2, fp, #4294967295
 8028120:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8028124:	4543      	cmp	r3, r8
 8028126:	d006      	beq.n	8028136 <__ieee754_rem_pio2+0x1ae>
 8028128:	4622      	mov	r2, r4
 802812a:	462b      	mov	r3, r5
 802812c:	4630      	mov	r0, r6
 802812e:	4639      	mov	r1, r7
 8028130:	f7d8 f8ba 	bl	80002a8 <__aeabi_dsub>
 8028134:	e00e      	b.n	8028154 <__ieee754_rem_pio2+0x1cc>
 8028136:	462b      	mov	r3, r5
 8028138:	4622      	mov	r2, r4
 802813a:	4630      	mov	r0, r6
 802813c:	4639      	mov	r1, r7
 802813e:	f7d8 f8b3 	bl	80002a8 <__aeabi_dsub>
 8028142:	ea4f 5328 	mov.w	r3, r8, asr #20
 8028146:	9303      	str	r3, [sp, #12]
 8028148:	f3c1 530a 	ubfx	r3, r1, #20, #11
 802814c:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 8028150:	2b10      	cmp	r3, #16
 8028152:	dc02      	bgt.n	802815a <__ieee754_rem_pio2+0x1d2>
 8028154:	e9ca 0100 	strd	r0, r1, [sl]
 8028158:	e039      	b.n	80281ce <__ieee754_rem_pio2+0x246>
 802815a:	a34f      	add	r3, pc, #316	; (adr r3, 8028298 <__ieee754_rem_pio2+0x310>)
 802815c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028160:	ec51 0b18 	vmov	r0, r1, d8
 8028164:	f7d8 fa58 	bl	8000618 <__aeabi_dmul>
 8028168:	4604      	mov	r4, r0
 802816a:	460d      	mov	r5, r1
 802816c:	4602      	mov	r2, r0
 802816e:	460b      	mov	r3, r1
 8028170:	4630      	mov	r0, r6
 8028172:	4639      	mov	r1, r7
 8028174:	f7d8 f898 	bl	80002a8 <__aeabi_dsub>
 8028178:	4602      	mov	r2, r0
 802817a:	460b      	mov	r3, r1
 802817c:	4680      	mov	r8, r0
 802817e:	4689      	mov	r9, r1
 8028180:	4630      	mov	r0, r6
 8028182:	4639      	mov	r1, r7
 8028184:	f7d8 f890 	bl	80002a8 <__aeabi_dsub>
 8028188:	4622      	mov	r2, r4
 802818a:	462b      	mov	r3, r5
 802818c:	f7d8 f88c 	bl	80002a8 <__aeabi_dsub>
 8028190:	a343      	add	r3, pc, #268	; (adr r3, 80282a0 <__ieee754_rem_pio2+0x318>)
 8028192:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028196:	4604      	mov	r4, r0
 8028198:	460d      	mov	r5, r1
 802819a:	ec51 0b18 	vmov	r0, r1, d8
 802819e:	f7d8 fa3b 	bl	8000618 <__aeabi_dmul>
 80281a2:	4622      	mov	r2, r4
 80281a4:	462b      	mov	r3, r5
 80281a6:	f7d8 f87f 	bl	80002a8 <__aeabi_dsub>
 80281aa:	4602      	mov	r2, r0
 80281ac:	460b      	mov	r3, r1
 80281ae:	4604      	mov	r4, r0
 80281b0:	460d      	mov	r5, r1
 80281b2:	4640      	mov	r0, r8
 80281b4:	4649      	mov	r1, r9
 80281b6:	f7d8 f877 	bl	80002a8 <__aeabi_dsub>
 80281ba:	9a03      	ldr	r2, [sp, #12]
 80281bc:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80281c0:	1ad3      	subs	r3, r2, r3
 80281c2:	2b31      	cmp	r3, #49	; 0x31
 80281c4:	dc24      	bgt.n	8028210 <__ieee754_rem_pio2+0x288>
 80281c6:	e9ca 0100 	strd	r0, r1, [sl]
 80281ca:	4646      	mov	r6, r8
 80281cc:	464f      	mov	r7, r9
 80281ce:	e9da 8900 	ldrd	r8, r9, [sl]
 80281d2:	4630      	mov	r0, r6
 80281d4:	4642      	mov	r2, r8
 80281d6:	464b      	mov	r3, r9
 80281d8:	4639      	mov	r1, r7
 80281da:	f7d8 f865 	bl	80002a8 <__aeabi_dsub>
 80281de:	462b      	mov	r3, r5
 80281e0:	4622      	mov	r2, r4
 80281e2:	f7d8 f861 	bl	80002a8 <__aeabi_dsub>
 80281e6:	9b02      	ldr	r3, [sp, #8]
 80281e8:	2b00      	cmp	r3, #0
 80281ea:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80281ee:	f6bf af0b 	bge.w	8028008 <__ieee754_rem_pio2+0x80>
 80281f2:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80281f6:	f8ca 3004 	str.w	r3, [sl, #4]
 80281fa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80281fe:	f8ca 8000 	str.w	r8, [sl]
 8028202:	f8ca 0008 	str.w	r0, [sl, #8]
 8028206:	f8ca 300c 	str.w	r3, [sl, #12]
 802820a:	f1cb 0b00 	rsb	fp, fp, #0
 802820e:	e6fb      	b.n	8028008 <__ieee754_rem_pio2+0x80>
 8028210:	a327      	add	r3, pc, #156	; (adr r3, 80282b0 <__ieee754_rem_pio2+0x328>)
 8028212:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028216:	ec51 0b18 	vmov	r0, r1, d8
 802821a:	f7d8 f9fd 	bl	8000618 <__aeabi_dmul>
 802821e:	4604      	mov	r4, r0
 8028220:	460d      	mov	r5, r1
 8028222:	4602      	mov	r2, r0
 8028224:	460b      	mov	r3, r1
 8028226:	4640      	mov	r0, r8
 8028228:	4649      	mov	r1, r9
 802822a:	f7d8 f83d 	bl	80002a8 <__aeabi_dsub>
 802822e:	4602      	mov	r2, r0
 8028230:	460b      	mov	r3, r1
 8028232:	4606      	mov	r6, r0
 8028234:	460f      	mov	r7, r1
 8028236:	4640      	mov	r0, r8
 8028238:	4649      	mov	r1, r9
 802823a:	f7d8 f835 	bl	80002a8 <__aeabi_dsub>
 802823e:	4622      	mov	r2, r4
 8028240:	462b      	mov	r3, r5
 8028242:	f7d8 f831 	bl	80002a8 <__aeabi_dsub>
 8028246:	a31c      	add	r3, pc, #112	; (adr r3, 80282b8 <__ieee754_rem_pio2+0x330>)
 8028248:	e9d3 2300 	ldrd	r2, r3, [r3]
 802824c:	4604      	mov	r4, r0
 802824e:	460d      	mov	r5, r1
 8028250:	ec51 0b18 	vmov	r0, r1, d8
 8028254:	f7d8 f9e0 	bl	8000618 <__aeabi_dmul>
 8028258:	4622      	mov	r2, r4
 802825a:	462b      	mov	r3, r5
 802825c:	f7d8 f824 	bl	80002a8 <__aeabi_dsub>
 8028260:	4604      	mov	r4, r0
 8028262:	460d      	mov	r5, r1
 8028264:	e760      	b.n	8028128 <__ieee754_rem_pio2+0x1a0>
 8028266:	4b1c      	ldr	r3, [pc, #112]	; (80282d8 <__ieee754_rem_pio2+0x350>)
 8028268:	4598      	cmp	r8, r3
 802826a:	dd37      	ble.n	80282dc <__ieee754_rem_pio2+0x354>
 802826c:	ee10 2a10 	vmov	r2, s0
 8028270:	462b      	mov	r3, r5
 8028272:	4620      	mov	r0, r4
 8028274:	4629      	mov	r1, r5
 8028276:	f7d8 f817 	bl	80002a8 <__aeabi_dsub>
 802827a:	e9ca 0102 	strd	r0, r1, [sl, #8]
 802827e:	e9ca 0100 	strd	r0, r1, [sl]
 8028282:	e695      	b.n	8027fb0 <__ieee754_rem_pio2+0x28>
 8028284:	f3af 8000 	nop.w
 8028288:	54400000 	.word	0x54400000
 802828c:	3ff921fb 	.word	0x3ff921fb
 8028290:	1a626331 	.word	0x1a626331
 8028294:	3dd0b461 	.word	0x3dd0b461
 8028298:	1a600000 	.word	0x1a600000
 802829c:	3dd0b461 	.word	0x3dd0b461
 80282a0:	2e037073 	.word	0x2e037073
 80282a4:	3ba3198a 	.word	0x3ba3198a
 80282a8:	6dc9c883 	.word	0x6dc9c883
 80282ac:	3fe45f30 	.word	0x3fe45f30
 80282b0:	2e000000 	.word	0x2e000000
 80282b4:	3ba3198a 	.word	0x3ba3198a
 80282b8:	252049c1 	.word	0x252049c1
 80282bc:	397b839a 	.word	0x397b839a
 80282c0:	3fe921fb 	.word	0x3fe921fb
 80282c4:	4002d97b 	.word	0x4002d97b
 80282c8:	3ff921fb 	.word	0x3ff921fb
 80282cc:	413921fb 	.word	0x413921fb
 80282d0:	3fe00000 	.word	0x3fe00000
 80282d4:	0802c450 	.word	0x0802c450
 80282d8:	7fefffff 	.word	0x7fefffff
 80282dc:	ea4f 5628 	mov.w	r6, r8, asr #20
 80282e0:	f2a6 4616 	subw	r6, r6, #1046	; 0x416
 80282e4:	eba8 5106 	sub.w	r1, r8, r6, lsl #20
 80282e8:	4620      	mov	r0, r4
 80282ea:	460d      	mov	r5, r1
 80282ec:	f7d8 fc44 	bl	8000b78 <__aeabi_d2iz>
 80282f0:	f7d8 f928 	bl	8000544 <__aeabi_i2d>
 80282f4:	4602      	mov	r2, r0
 80282f6:	460b      	mov	r3, r1
 80282f8:	4620      	mov	r0, r4
 80282fa:	4629      	mov	r1, r5
 80282fc:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8028300:	f7d7 ffd2 	bl	80002a8 <__aeabi_dsub>
 8028304:	4b21      	ldr	r3, [pc, #132]	; (802838c <__ieee754_rem_pio2+0x404>)
 8028306:	2200      	movs	r2, #0
 8028308:	f7d8 f986 	bl	8000618 <__aeabi_dmul>
 802830c:	460d      	mov	r5, r1
 802830e:	4604      	mov	r4, r0
 8028310:	f7d8 fc32 	bl	8000b78 <__aeabi_d2iz>
 8028314:	f7d8 f916 	bl	8000544 <__aeabi_i2d>
 8028318:	4602      	mov	r2, r0
 802831a:	460b      	mov	r3, r1
 802831c:	4620      	mov	r0, r4
 802831e:	4629      	mov	r1, r5
 8028320:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8028324:	f7d7 ffc0 	bl	80002a8 <__aeabi_dsub>
 8028328:	4b18      	ldr	r3, [pc, #96]	; (802838c <__ieee754_rem_pio2+0x404>)
 802832a:	2200      	movs	r2, #0
 802832c:	f7d8 f974 	bl	8000618 <__aeabi_dmul>
 8028330:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8028334:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8028338:	2703      	movs	r7, #3
 802833a:	2400      	movs	r4, #0
 802833c:	2500      	movs	r5, #0
 802833e:	e978 0102 	ldrd	r0, r1, [r8, #-8]!
 8028342:	4622      	mov	r2, r4
 8028344:	462b      	mov	r3, r5
 8028346:	46b9      	mov	r9, r7
 8028348:	3f01      	subs	r7, #1
 802834a:	f7d8 fbcd 	bl	8000ae8 <__aeabi_dcmpeq>
 802834e:	2800      	cmp	r0, #0
 8028350:	d1f5      	bne.n	802833e <__ieee754_rem_pio2+0x3b6>
 8028352:	4b0f      	ldr	r3, [pc, #60]	; (8028390 <__ieee754_rem_pio2+0x408>)
 8028354:	9301      	str	r3, [sp, #4]
 8028356:	2302      	movs	r3, #2
 8028358:	9300      	str	r3, [sp, #0]
 802835a:	4632      	mov	r2, r6
 802835c:	464b      	mov	r3, r9
 802835e:	4651      	mov	r1, sl
 8028360:	a804      	add	r0, sp, #16
 8028362:	f000 f9a9 	bl	80286b8 <__kernel_rem_pio2>
 8028366:	9b02      	ldr	r3, [sp, #8]
 8028368:	2b00      	cmp	r3, #0
 802836a:	4683      	mov	fp, r0
 802836c:	f6bf ae4c 	bge.w	8028008 <__ieee754_rem_pio2+0x80>
 8028370:	e9da 2100 	ldrd	r2, r1, [sl]
 8028374:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8028378:	e9ca 2300 	strd	r2, r3, [sl]
 802837c:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 8028380:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8028384:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8028388:	e73f      	b.n	802820a <__ieee754_rem_pio2+0x282>
 802838a:	bf00      	nop
 802838c:	41700000 	.word	0x41700000
 8028390:	0802c4d0 	.word	0x0802c4d0

08028394 <fabs>:
 8028394:	ec51 0b10 	vmov	r0, r1, d0
 8028398:	ee10 2a10 	vmov	r2, s0
 802839c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80283a0:	ec43 2b10 	vmov	d0, r2, r3
 80283a4:	4770      	bx	lr
	...

080283a8 <scalbn>:
 80283a8:	b570      	push	{r4, r5, r6, lr}
 80283aa:	ec55 4b10 	vmov	r4, r5, d0
 80283ae:	f3c5 510a 	ubfx	r1, r5, #20, #11
 80283b2:	4606      	mov	r6, r0
 80283b4:	462b      	mov	r3, r5
 80283b6:	b999      	cbnz	r1, 80283e0 <scalbn+0x38>
 80283b8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80283bc:	4323      	orrs	r3, r4
 80283be:	d03f      	beq.n	8028440 <scalbn+0x98>
 80283c0:	4b35      	ldr	r3, [pc, #212]	; (8028498 <scalbn+0xf0>)
 80283c2:	4629      	mov	r1, r5
 80283c4:	ee10 0a10 	vmov	r0, s0
 80283c8:	2200      	movs	r2, #0
 80283ca:	f7d8 f925 	bl	8000618 <__aeabi_dmul>
 80283ce:	4b33      	ldr	r3, [pc, #204]	; (802849c <scalbn+0xf4>)
 80283d0:	429e      	cmp	r6, r3
 80283d2:	4604      	mov	r4, r0
 80283d4:	460d      	mov	r5, r1
 80283d6:	da10      	bge.n	80283fa <scalbn+0x52>
 80283d8:	a327      	add	r3, pc, #156	; (adr r3, 8028478 <scalbn+0xd0>)
 80283da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80283de:	e01f      	b.n	8028420 <scalbn+0x78>
 80283e0:	f240 72ff 	movw	r2, #2047	; 0x7ff
 80283e4:	4291      	cmp	r1, r2
 80283e6:	d10c      	bne.n	8028402 <scalbn+0x5a>
 80283e8:	ee10 2a10 	vmov	r2, s0
 80283ec:	4620      	mov	r0, r4
 80283ee:	4629      	mov	r1, r5
 80283f0:	f7d7 ff5c 	bl	80002ac <__adddf3>
 80283f4:	4604      	mov	r4, r0
 80283f6:	460d      	mov	r5, r1
 80283f8:	e022      	b.n	8028440 <scalbn+0x98>
 80283fa:	460b      	mov	r3, r1
 80283fc:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8028400:	3936      	subs	r1, #54	; 0x36
 8028402:	f24c 3250 	movw	r2, #50000	; 0xc350
 8028406:	4296      	cmp	r6, r2
 8028408:	dd0d      	ble.n	8028426 <scalbn+0x7e>
 802840a:	2d00      	cmp	r5, #0
 802840c:	a11c      	add	r1, pc, #112	; (adr r1, 8028480 <scalbn+0xd8>)
 802840e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8028412:	da02      	bge.n	802841a <scalbn+0x72>
 8028414:	a11c      	add	r1, pc, #112	; (adr r1, 8028488 <scalbn+0xe0>)
 8028416:	e9d1 0100 	ldrd	r0, r1, [r1]
 802841a:	a319      	add	r3, pc, #100	; (adr r3, 8028480 <scalbn+0xd8>)
 802841c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028420:	f7d8 f8fa 	bl	8000618 <__aeabi_dmul>
 8028424:	e7e6      	b.n	80283f4 <scalbn+0x4c>
 8028426:	1872      	adds	r2, r6, r1
 8028428:	f240 71fe 	movw	r1, #2046	; 0x7fe
 802842c:	428a      	cmp	r2, r1
 802842e:	dcec      	bgt.n	802840a <scalbn+0x62>
 8028430:	2a00      	cmp	r2, #0
 8028432:	dd08      	ble.n	8028446 <scalbn+0x9e>
 8028434:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8028438:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 802843c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8028440:	ec45 4b10 	vmov	d0, r4, r5
 8028444:	bd70      	pop	{r4, r5, r6, pc}
 8028446:	f112 0f35 	cmn.w	r2, #53	; 0x35
 802844a:	da08      	bge.n	802845e <scalbn+0xb6>
 802844c:	2d00      	cmp	r5, #0
 802844e:	a10a      	add	r1, pc, #40	; (adr r1, 8028478 <scalbn+0xd0>)
 8028450:	e9d1 0100 	ldrd	r0, r1, [r1]
 8028454:	dac0      	bge.n	80283d8 <scalbn+0x30>
 8028456:	a10e      	add	r1, pc, #56	; (adr r1, 8028490 <scalbn+0xe8>)
 8028458:	e9d1 0100 	ldrd	r0, r1, [r1]
 802845c:	e7bc      	b.n	80283d8 <scalbn+0x30>
 802845e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8028462:	3236      	adds	r2, #54	; 0x36
 8028464:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8028468:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 802846c:	4620      	mov	r0, r4
 802846e:	4b0c      	ldr	r3, [pc, #48]	; (80284a0 <scalbn+0xf8>)
 8028470:	2200      	movs	r2, #0
 8028472:	e7d5      	b.n	8028420 <scalbn+0x78>
 8028474:	f3af 8000 	nop.w
 8028478:	c2f8f359 	.word	0xc2f8f359
 802847c:	01a56e1f 	.word	0x01a56e1f
 8028480:	8800759c 	.word	0x8800759c
 8028484:	7e37e43c 	.word	0x7e37e43c
 8028488:	8800759c 	.word	0x8800759c
 802848c:	fe37e43c 	.word	0xfe37e43c
 8028490:	c2f8f359 	.word	0xc2f8f359
 8028494:	81a56e1f 	.word	0x81a56e1f
 8028498:	43500000 	.word	0x43500000
 802849c:	ffff3cb0 	.word	0xffff3cb0
 80284a0:	3c900000 	.word	0x3c900000

080284a4 <with_errno>:
 80284a4:	b570      	push	{r4, r5, r6, lr}
 80284a6:	4604      	mov	r4, r0
 80284a8:	460d      	mov	r5, r1
 80284aa:	4616      	mov	r6, r2
 80284ac:	f000 ff84 	bl	80293b8 <__errno>
 80284b0:	4629      	mov	r1, r5
 80284b2:	6006      	str	r6, [r0, #0]
 80284b4:	4620      	mov	r0, r4
 80284b6:	bd70      	pop	{r4, r5, r6, pc}

080284b8 <xflow>:
 80284b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80284ba:	4614      	mov	r4, r2
 80284bc:	461d      	mov	r5, r3
 80284be:	b108      	cbz	r0, 80284c4 <xflow+0xc>
 80284c0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80284c4:	e9cd 2300 	strd	r2, r3, [sp]
 80284c8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80284cc:	4620      	mov	r0, r4
 80284ce:	4629      	mov	r1, r5
 80284d0:	f7d8 f8a2 	bl	8000618 <__aeabi_dmul>
 80284d4:	2222      	movs	r2, #34	; 0x22
 80284d6:	b003      	add	sp, #12
 80284d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80284dc:	f7ff bfe2 	b.w	80284a4 <with_errno>

080284e0 <__math_uflow>:
 80284e0:	b508      	push	{r3, lr}
 80284e2:	2200      	movs	r2, #0
 80284e4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80284e8:	f7ff ffe6 	bl	80284b8 <xflow>
 80284ec:	ec41 0b10 	vmov	d0, r0, r1
 80284f0:	bd08      	pop	{r3, pc}

080284f2 <__math_oflow>:
 80284f2:	b508      	push	{r3, lr}
 80284f4:	2200      	movs	r2, #0
 80284f6:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 80284fa:	f7ff ffdd 	bl	80284b8 <xflow>
 80284fe:	ec41 0b10 	vmov	d0, r0, r1
 8028502:	bd08      	pop	{r3, pc}

08028504 <__ieee754_sqrt>:
 8028504:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028508:	ec55 4b10 	vmov	r4, r5, d0
 802850c:	4e67      	ldr	r6, [pc, #412]	; (80286ac <__ieee754_sqrt+0x1a8>)
 802850e:	43ae      	bics	r6, r5
 8028510:	ee10 0a10 	vmov	r0, s0
 8028514:	ee10 2a10 	vmov	r2, s0
 8028518:	4629      	mov	r1, r5
 802851a:	462b      	mov	r3, r5
 802851c:	d10d      	bne.n	802853a <__ieee754_sqrt+0x36>
 802851e:	f7d8 f87b 	bl	8000618 <__aeabi_dmul>
 8028522:	4602      	mov	r2, r0
 8028524:	460b      	mov	r3, r1
 8028526:	4620      	mov	r0, r4
 8028528:	4629      	mov	r1, r5
 802852a:	f7d7 febf 	bl	80002ac <__adddf3>
 802852e:	4604      	mov	r4, r0
 8028530:	460d      	mov	r5, r1
 8028532:	ec45 4b10 	vmov	d0, r4, r5
 8028536:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802853a:	2d00      	cmp	r5, #0
 802853c:	dc0b      	bgt.n	8028556 <__ieee754_sqrt+0x52>
 802853e:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8028542:	4326      	orrs	r6, r4
 8028544:	d0f5      	beq.n	8028532 <__ieee754_sqrt+0x2e>
 8028546:	b135      	cbz	r5, 8028556 <__ieee754_sqrt+0x52>
 8028548:	f7d7 feae 	bl	80002a8 <__aeabi_dsub>
 802854c:	4602      	mov	r2, r0
 802854e:	460b      	mov	r3, r1
 8028550:	f7d8 f98c 	bl	800086c <__aeabi_ddiv>
 8028554:	e7eb      	b.n	802852e <__ieee754_sqrt+0x2a>
 8028556:	1509      	asrs	r1, r1, #20
 8028558:	f000 808d 	beq.w	8028676 <__ieee754_sqrt+0x172>
 802855c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8028560:	f2a1 36ff 	subw	r6, r1, #1023	; 0x3ff
 8028564:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8028568:	07c9      	lsls	r1, r1, #31
 802856a:	bf5c      	itt	pl
 802856c:	005b      	lslpl	r3, r3, #1
 802856e:	eb03 73d2 	addpl.w	r3, r3, r2, lsr #31
 8028572:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8028576:	bf58      	it	pl
 8028578:	0052      	lslpl	r2, r2, #1
 802857a:	2500      	movs	r5, #0
 802857c:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8028580:	1076      	asrs	r6, r6, #1
 8028582:	0052      	lsls	r2, r2, #1
 8028584:	f04f 0e16 	mov.w	lr, #22
 8028588:	46ac      	mov	ip, r5
 802858a:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 802858e:	eb0c 0001 	add.w	r0, ip, r1
 8028592:	4298      	cmp	r0, r3
 8028594:	bfde      	ittt	le
 8028596:	1a1b      	suble	r3, r3, r0
 8028598:	eb00 0c01 	addle.w	ip, r0, r1
 802859c:	186d      	addle	r5, r5, r1
 802859e:	005b      	lsls	r3, r3, #1
 80285a0:	f1be 0e01 	subs.w	lr, lr, #1
 80285a4:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 80285a8:	ea4f 0151 	mov.w	r1, r1, lsr #1
 80285ac:	ea4f 0242 	mov.w	r2, r2, lsl #1
 80285b0:	d1ed      	bne.n	802858e <__ieee754_sqrt+0x8a>
 80285b2:	4674      	mov	r4, lr
 80285b4:	2720      	movs	r7, #32
 80285b6:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80285ba:	4563      	cmp	r3, ip
 80285bc:	eb01 000e 	add.w	r0, r1, lr
 80285c0:	dc02      	bgt.n	80285c8 <__ieee754_sqrt+0xc4>
 80285c2:	d113      	bne.n	80285ec <__ieee754_sqrt+0xe8>
 80285c4:	4290      	cmp	r0, r2
 80285c6:	d811      	bhi.n	80285ec <__ieee754_sqrt+0xe8>
 80285c8:	2800      	cmp	r0, #0
 80285ca:	eb00 0e01 	add.w	lr, r0, r1
 80285ce:	da57      	bge.n	8028680 <__ieee754_sqrt+0x17c>
 80285d0:	f1be 0f00 	cmp.w	lr, #0
 80285d4:	db54      	blt.n	8028680 <__ieee754_sqrt+0x17c>
 80285d6:	f10c 0801 	add.w	r8, ip, #1
 80285da:	eba3 030c 	sub.w	r3, r3, ip
 80285de:	4290      	cmp	r0, r2
 80285e0:	bf88      	it	hi
 80285e2:	f103 33ff 	addhi.w	r3, r3, #4294967295
 80285e6:	1a12      	subs	r2, r2, r0
 80285e8:	440c      	add	r4, r1
 80285ea:	46c4      	mov	ip, r8
 80285ec:	005b      	lsls	r3, r3, #1
 80285ee:	3f01      	subs	r7, #1
 80285f0:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 80285f4:	ea4f 0151 	mov.w	r1, r1, lsr #1
 80285f8:	ea4f 0242 	mov.w	r2, r2, lsl #1
 80285fc:	d1dd      	bne.n	80285ba <__ieee754_sqrt+0xb6>
 80285fe:	4313      	orrs	r3, r2
 8028600:	d01b      	beq.n	802863a <__ieee754_sqrt+0x136>
 8028602:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 80286b0 <__ieee754_sqrt+0x1ac>
 8028606:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 80286b4 <__ieee754_sqrt+0x1b0>
 802860a:	e9da 0100 	ldrd	r0, r1, [sl]
 802860e:	e9db 2300 	ldrd	r2, r3, [fp]
 8028612:	f7d7 fe49 	bl	80002a8 <__aeabi_dsub>
 8028616:	e9da 8900 	ldrd	r8, r9, [sl]
 802861a:	4602      	mov	r2, r0
 802861c:	460b      	mov	r3, r1
 802861e:	4640      	mov	r0, r8
 8028620:	4649      	mov	r1, r9
 8028622:	f7d8 fa75 	bl	8000b10 <__aeabi_dcmple>
 8028626:	b140      	cbz	r0, 802863a <__ieee754_sqrt+0x136>
 8028628:	f1b4 3fff 	cmp.w	r4, #4294967295
 802862c:	e9da 0100 	ldrd	r0, r1, [sl]
 8028630:	e9db 2300 	ldrd	r2, r3, [fp]
 8028634:	d126      	bne.n	8028684 <__ieee754_sqrt+0x180>
 8028636:	3501      	adds	r5, #1
 8028638:	463c      	mov	r4, r7
 802863a:	106a      	asrs	r2, r5, #1
 802863c:	0863      	lsrs	r3, r4, #1
 802863e:	07e9      	lsls	r1, r5, #31
 8028640:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
 8028644:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
 8028648:	bf48      	it	mi
 802864a:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 802864e:	eb02 5506 	add.w	r5, r2, r6, lsl #20
 8028652:	461c      	mov	r4, r3
 8028654:	e76d      	b.n	8028532 <__ieee754_sqrt+0x2e>
 8028656:	0ad3      	lsrs	r3, r2, #11
 8028658:	3815      	subs	r0, #21
 802865a:	0552      	lsls	r2, r2, #21
 802865c:	2b00      	cmp	r3, #0
 802865e:	d0fa      	beq.n	8028656 <__ieee754_sqrt+0x152>
 8028660:	02dc      	lsls	r4, r3, #11
 8028662:	d50a      	bpl.n	802867a <__ieee754_sqrt+0x176>
 8028664:	f1c1 0420 	rsb	r4, r1, #32
 8028668:	fa22 f404 	lsr.w	r4, r2, r4
 802866c:	1e4d      	subs	r5, r1, #1
 802866e:	408a      	lsls	r2, r1
 8028670:	4323      	orrs	r3, r4
 8028672:	1b41      	subs	r1, r0, r5
 8028674:	e772      	b.n	802855c <__ieee754_sqrt+0x58>
 8028676:	4608      	mov	r0, r1
 8028678:	e7f0      	b.n	802865c <__ieee754_sqrt+0x158>
 802867a:	005b      	lsls	r3, r3, #1
 802867c:	3101      	adds	r1, #1
 802867e:	e7ef      	b.n	8028660 <__ieee754_sqrt+0x15c>
 8028680:	46e0      	mov	r8, ip
 8028682:	e7aa      	b.n	80285da <__ieee754_sqrt+0xd6>
 8028684:	f7d7 fe12 	bl	80002ac <__adddf3>
 8028688:	e9da 8900 	ldrd	r8, r9, [sl]
 802868c:	4602      	mov	r2, r0
 802868e:	460b      	mov	r3, r1
 8028690:	4640      	mov	r0, r8
 8028692:	4649      	mov	r1, r9
 8028694:	f7d8 fa32 	bl	8000afc <__aeabi_dcmplt>
 8028698:	b120      	cbz	r0, 80286a4 <__ieee754_sqrt+0x1a0>
 802869a:	1ca0      	adds	r0, r4, #2
 802869c:	bf08      	it	eq
 802869e:	3501      	addeq	r5, #1
 80286a0:	3402      	adds	r4, #2
 80286a2:	e7ca      	b.n	802863a <__ieee754_sqrt+0x136>
 80286a4:	3401      	adds	r4, #1
 80286a6:	f024 0401 	bic.w	r4, r4, #1
 80286aa:	e7c6      	b.n	802863a <__ieee754_sqrt+0x136>
 80286ac:	7ff00000 	.word	0x7ff00000
 80286b0:	20000328 	.word	0x20000328
 80286b4:	20000330 	.word	0x20000330

080286b8 <__kernel_rem_pio2>:
 80286b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80286bc:	ed2d 8b02 	vpush	{d8}
 80286c0:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 80286c4:	f112 0f14 	cmn.w	r2, #20
 80286c8:	9306      	str	r3, [sp, #24]
 80286ca:	9104      	str	r1, [sp, #16]
 80286cc:	4bc2      	ldr	r3, [pc, #776]	; (80289d8 <__kernel_rem_pio2+0x320>)
 80286ce:	99a4      	ldr	r1, [sp, #656]	; 0x290
 80286d0:	9009      	str	r0, [sp, #36]	; 0x24
 80286d2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80286d6:	9300      	str	r3, [sp, #0]
 80286d8:	9b06      	ldr	r3, [sp, #24]
 80286da:	f103 33ff 	add.w	r3, r3, #4294967295
 80286de:	bfa8      	it	ge
 80286e0:	1ed4      	subge	r4, r2, #3
 80286e2:	9305      	str	r3, [sp, #20]
 80286e4:	bfb2      	itee	lt
 80286e6:	2400      	movlt	r4, #0
 80286e8:	2318      	movge	r3, #24
 80286ea:	fb94 f4f3 	sdivge	r4, r4, r3
 80286ee:	f06f 0317 	mvn.w	r3, #23
 80286f2:	fb04 3303 	mla	r3, r4, r3, r3
 80286f6:	eb03 0a02 	add.w	sl, r3, r2
 80286fa:	9b00      	ldr	r3, [sp, #0]
 80286fc:	9a05      	ldr	r2, [sp, #20]
 80286fe:	ed9f 8bb2 	vldr	d8, [pc, #712]	; 80289c8 <__kernel_rem_pio2+0x310>
 8028702:	eb03 0802 	add.w	r8, r3, r2
 8028706:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8028708:	1aa7      	subs	r7, r4, r2
 802870a:	ae20      	add	r6, sp, #128	; 0x80
 802870c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8028710:	2500      	movs	r5, #0
 8028712:	4545      	cmp	r5, r8
 8028714:	dd13      	ble.n	802873e <__kernel_rem_pio2+0x86>
 8028716:	9b06      	ldr	r3, [sp, #24]
 8028718:	aa20      	add	r2, sp, #128	; 0x80
 802871a:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 802871e:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 8028722:	f04f 0800 	mov.w	r8, #0
 8028726:	9b00      	ldr	r3, [sp, #0]
 8028728:	4598      	cmp	r8, r3
 802872a:	dc31      	bgt.n	8028790 <__kernel_rem_pio2+0xd8>
 802872c:	ed9f 7ba6 	vldr	d7, [pc, #664]	; 80289c8 <__kernel_rem_pio2+0x310>
 8028730:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8028734:	ed8d 7b02 	vstr	d7, [sp, #8]
 8028738:	462f      	mov	r7, r5
 802873a:	2600      	movs	r6, #0
 802873c:	e01b      	b.n	8028776 <__kernel_rem_pio2+0xbe>
 802873e:	42ef      	cmn	r7, r5
 8028740:	d407      	bmi.n	8028752 <__kernel_rem_pio2+0x9a>
 8028742:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8028746:	f7d7 fefd 	bl	8000544 <__aeabi_i2d>
 802874a:	e8e6 0102 	strd	r0, r1, [r6], #8
 802874e:	3501      	adds	r5, #1
 8028750:	e7df      	b.n	8028712 <__kernel_rem_pio2+0x5a>
 8028752:	ec51 0b18 	vmov	r0, r1, d8
 8028756:	e7f8      	b.n	802874a <__kernel_rem_pio2+0x92>
 8028758:	e9d7 2300 	ldrd	r2, r3, [r7]
 802875c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8028760:	f7d7 ff5a 	bl	8000618 <__aeabi_dmul>
 8028764:	4602      	mov	r2, r0
 8028766:	460b      	mov	r3, r1
 8028768:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802876c:	f7d7 fd9e 	bl	80002ac <__adddf3>
 8028770:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8028774:	3601      	adds	r6, #1
 8028776:	9b05      	ldr	r3, [sp, #20]
 8028778:	429e      	cmp	r6, r3
 802877a:	f1a7 0708 	sub.w	r7, r7, #8
 802877e:	ddeb      	ble.n	8028758 <__kernel_rem_pio2+0xa0>
 8028780:	ed9d 7b02 	vldr	d7, [sp, #8]
 8028784:	f108 0801 	add.w	r8, r8, #1
 8028788:	ecab 7b02 	vstmia	fp!, {d7}
 802878c:	3508      	adds	r5, #8
 802878e:	e7ca      	b.n	8028726 <__kernel_rem_pio2+0x6e>
 8028790:	9b00      	ldr	r3, [sp, #0]
 8028792:	aa0c      	add	r2, sp, #48	; 0x30
 8028794:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8028798:	930b      	str	r3, [sp, #44]	; 0x2c
 802879a:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 802879c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80287a0:	9c00      	ldr	r4, [sp, #0]
 80287a2:	930a      	str	r3, [sp, #40]	; 0x28
 80287a4:	00e3      	lsls	r3, r4, #3
 80287a6:	9308      	str	r3, [sp, #32]
 80287a8:	ab98      	add	r3, sp, #608	; 0x260
 80287aa:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80287ae:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 80287b2:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 80287b6:	ab70      	add	r3, sp, #448	; 0x1c0
 80287b8:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 80287bc:	46c3      	mov	fp, r8
 80287be:	46a1      	mov	r9, r4
 80287c0:	f1b9 0f00 	cmp.w	r9, #0
 80287c4:	f1a5 0508 	sub.w	r5, r5, #8
 80287c8:	dc77      	bgt.n	80288ba <__kernel_rem_pio2+0x202>
 80287ca:	ec47 6b10 	vmov	d0, r6, r7
 80287ce:	4650      	mov	r0, sl
 80287d0:	f7ff fdea 	bl	80283a8 <scalbn>
 80287d4:	ec57 6b10 	vmov	r6, r7, d0
 80287d8:	2200      	movs	r2, #0
 80287da:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 80287de:	ee10 0a10 	vmov	r0, s0
 80287e2:	4639      	mov	r1, r7
 80287e4:	f7d7 ff18 	bl	8000618 <__aeabi_dmul>
 80287e8:	ec41 0b10 	vmov	d0, r0, r1
 80287ec:	f000 fab4 	bl	8028d58 <floor>
 80287f0:	4b7a      	ldr	r3, [pc, #488]	; (80289dc <__kernel_rem_pio2+0x324>)
 80287f2:	ec51 0b10 	vmov	r0, r1, d0
 80287f6:	2200      	movs	r2, #0
 80287f8:	f7d7 ff0e 	bl	8000618 <__aeabi_dmul>
 80287fc:	4602      	mov	r2, r0
 80287fe:	460b      	mov	r3, r1
 8028800:	4630      	mov	r0, r6
 8028802:	4639      	mov	r1, r7
 8028804:	f7d7 fd50 	bl	80002a8 <__aeabi_dsub>
 8028808:	460f      	mov	r7, r1
 802880a:	4606      	mov	r6, r0
 802880c:	f7d8 f9b4 	bl	8000b78 <__aeabi_d2iz>
 8028810:	9002      	str	r0, [sp, #8]
 8028812:	f7d7 fe97 	bl	8000544 <__aeabi_i2d>
 8028816:	4602      	mov	r2, r0
 8028818:	460b      	mov	r3, r1
 802881a:	4630      	mov	r0, r6
 802881c:	4639      	mov	r1, r7
 802881e:	f7d7 fd43 	bl	80002a8 <__aeabi_dsub>
 8028822:	f1ba 0f00 	cmp.w	sl, #0
 8028826:	4606      	mov	r6, r0
 8028828:	460f      	mov	r7, r1
 802882a:	dd6d      	ble.n	8028908 <__kernel_rem_pio2+0x250>
 802882c:	1e61      	subs	r1, r4, #1
 802882e:	ab0c      	add	r3, sp, #48	; 0x30
 8028830:	9d02      	ldr	r5, [sp, #8]
 8028832:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8028836:	f1ca 0018 	rsb	r0, sl, #24
 802883a:	fa43 f200 	asr.w	r2, r3, r0
 802883e:	4415      	add	r5, r2
 8028840:	4082      	lsls	r2, r0
 8028842:	1a9b      	subs	r3, r3, r2
 8028844:	aa0c      	add	r2, sp, #48	; 0x30
 8028846:	9502      	str	r5, [sp, #8]
 8028848:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 802884c:	f1ca 0217 	rsb	r2, sl, #23
 8028850:	fa43 fb02 	asr.w	fp, r3, r2
 8028854:	f1bb 0f00 	cmp.w	fp, #0
 8028858:	dd65      	ble.n	8028926 <__kernel_rem_pio2+0x26e>
 802885a:	9b02      	ldr	r3, [sp, #8]
 802885c:	2200      	movs	r2, #0
 802885e:	3301      	adds	r3, #1
 8028860:	9302      	str	r3, [sp, #8]
 8028862:	4615      	mov	r5, r2
 8028864:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8028868:	4294      	cmp	r4, r2
 802886a:	f300 809f 	bgt.w	80289ac <__kernel_rem_pio2+0x2f4>
 802886e:	f1ba 0f00 	cmp.w	sl, #0
 8028872:	dd07      	ble.n	8028884 <__kernel_rem_pio2+0x1cc>
 8028874:	f1ba 0f01 	cmp.w	sl, #1
 8028878:	f000 80c1 	beq.w	80289fe <__kernel_rem_pio2+0x346>
 802887c:	f1ba 0f02 	cmp.w	sl, #2
 8028880:	f000 80c7 	beq.w	8028a12 <__kernel_rem_pio2+0x35a>
 8028884:	f1bb 0f02 	cmp.w	fp, #2
 8028888:	d14d      	bne.n	8028926 <__kernel_rem_pio2+0x26e>
 802888a:	4632      	mov	r2, r6
 802888c:	463b      	mov	r3, r7
 802888e:	4954      	ldr	r1, [pc, #336]	; (80289e0 <__kernel_rem_pio2+0x328>)
 8028890:	2000      	movs	r0, #0
 8028892:	f7d7 fd09 	bl	80002a8 <__aeabi_dsub>
 8028896:	4606      	mov	r6, r0
 8028898:	460f      	mov	r7, r1
 802889a:	2d00      	cmp	r5, #0
 802889c:	d043      	beq.n	8028926 <__kernel_rem_pio2+0x26e>
 802889e:	4650      	mov	r0, sl
 80288a0:	ed9f 0b4b 	vldr	d0, [pc, #300]	; 80289d0 <__kernel_rem_pio2+0x318>
 80288a4:	f7ff fd80 	bl	80283a8 <scalbn>
 80288a8:	4630      	mov	r0, r6
 80288aa:	4639      	mov	r1, r7
 80288ac:	ec53 2b10 	vmov	r2, r3, d0
 80288b0:	f7d7 fcfa 	bl	80002a8 <__aeabi_dsub>
 80288b4:	4606      	mov	r6, r0
 80288b6:	460f      	mov	r7, r1
 80288b8:	e035      	b.n	8028926 <__kernel_rem_pio2+0x26e>
 80288ba:	4b4a      	ldr	r3, [pc, #296]	; (80289e4 <__kernel_rem_pio2+0x32c>)
 80288bc:	2200      	movs	r2, #0
 80288be:	4630      	mov	r0, r6
 80288c0:	4639      	mov	r1, r7
 80288c2:	f7d7 fea9 	bl	8000618 <__aeabi_dmul>
 80288c6:	f7d8 f957 	bl	8000b78 <__aeabi_d2iz>
 80288ca:	f7d7 fe3b 	bl	8000544 <__aeabi_i2d>
 80288ce:	4602      	mov	r2, r0
 80288d0:	460b      	mov	r3, r1
 80288d2:	ec43 2b18 	vmov	d8, r2, r3
 80288d6:	4b44      	ldr	r3, [pc, #272]	; (80289e8 <__kernel_rem_pio2+0x330>)
 80288d8:	2200      	movs	r2, #0
 80288da:	f7d7 fe9d 	bl	8000618 <__aeabi_dmul>
 80288de:	4602      	mov	r2, r0
 80288e0:	460b      	mov	r3, r1
 80288e2:	4630      	mov	r0, r6
 80288e4:	4639      	mov	r1, r7
 80288e6:	f7d7 fcdf 	bl	80002a8 <__aeabi_dsub>
 80288ea:	f7d8 f945 	bl	8000b78 <__aeabi_d2iz>
 80288ee:	e9d5 2300 	ldrd	r2, r3, [r5]
 80288f2:	f84b 0b04 	str.w	r0, [fp], #4
 80288f6:	ec51 0b18 	vmov	r0, r1, d8
 80288fa:	f7d7 fcd7 	bl	80002ac <__adddf3>
 80288fe:	f109 39ff 	add.w	r9, r9, #4294967295
 8028902:	4606      	mov	r6, r0
 8028904:	460f      	mov	r7, r1
 8028906:	e75b      	b.n	80287c0 <__kernel_rem_pio2+0x108>
 8028908:	d106      	bne.n	8028918 <__kernel_rem_pio2+0x260>
 802890a:	1e63      	subs	r3, r4, #1
 802890c:	aa0c      	add	r2, sp, #48	; 0x30
 802890e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8028912:	ea4f 5be3 	mov.w	fp, r3, asr #23
 8028916:	e79d      	b.n	8028854 <__kernel_rem_pio2+0x19c>
 8028918:	4b34      	ldr	r3, [pc, #208]	; (80289ec <__kernel_rem_pio2+0x334>)
 802891a:	2200      	movs	r2, #0
 802891c:	f7d8 f902 	bl	8000b24 <__aeabi_dcmpge>
 8028920:	2800      	cmp	r0, #0
 8028922:	d140      	bne.n	80289a6 <__kernel_rem_pio2+0x2ee>
 8028924:	4683      	mov	fp, r0
 8028926:	2200      	movs	r2, #0
 8028928:	2300      	movs	r3, #0
 802892a:	4630      	mov	r0, r6
 802892c:	4639      	mov	r1, r7
 802892e:	f7d8 f8db 	bl	8000ae8 <__aeabi_dcmpeq>
 8028932:	2800      	cmp	r0, #0
 8028934:	f000 80c1 	beq.w	8028aba <__kernel_rem_pio2+0x402>
 8028938:	1e65      	subs	r5, r4, #1
 802893a:	462b      	mov	r3, r5
 802893c:	2200      	movs	r2, #0
 802893e:	9900      	ldr	r1, [sp, #0]
 8028940:	428b      	cmp	r3, r1
 8028942:	da6d      	bge.n	8028a20 <__kernel_rem_pio2+0x368>
 8028944:	2a00      	cmp	r2, #0
 8028946:	f000 808a 	beq.w	8028a5e <__kernel_rem_pio2+0x3a6>
 802894a:	ab0c      	add	r3, sp, #48	; 0x30
 802894c:	f1aa 0a18 	sub.w	sl, sl, #24
 8028950:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8028954:	2b00      	cmp	r3, #0
 8028956:	f000 80ae 	beq.w	8028ab6 <__kernel_rem_pio2+0x3fe>
 802895a:	4650      	mov	r0, sl
 802895c:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 80289d0 <__kernel_rem_pio2+0x318>
 8028960:	f7ff fd22 	bl	80283a8 <scalbn>
 8028964:	1c6b      	adds	r3, r5, #1
 8028966:	00da      	lsls	r2, r3, #3
 8028968:	9205      	str	r2, [sp, #20]
 802896a:	ec57 6b10 	vmov	r6, r7, d0
 802896e:	aa70      	add	r2, sp, #448	; 0x1c0
 8028970:	f8df 9070 	ldr.w	r9, [pc, #112]	; 80289e4 <__kernel_rem_pio2+0x32c>
 8028974:	eb02 0ac3 	add.w	sl, r2, r3, lsl #3
 8028978:	462c      	mov	r4, r5
 802897a:	f04f 0800 	mov.w	r8, #0
 802897e:	2c00      	cmp	r4, #0
 8028980:	f280 80d4 	bge.w	8028b2c <__kernel_rem_pio2+0x474>
 8028984:	462c      	mov	r4, r5
 8028986:	2c00      	cmp	r4, #0
 8028988:	f2c0 8102 	blt.w	8028b90 <__kernel_rem_pio2+0x4d8>
 802898c:	4b18      	ldr	r3, [pc, #96]	; (80289f0 <__kernel_rem_pio2+0x338>)
 802898e:	461e      	mov	r6, r3
 8028990:	ab70      	add	r3, sp, #448	; 0x1c0
 8028992:	eb03 08c4 	add.w	r8, r3, r4, lsl #3
 8028996:	1b2b      	subs	r3, r5, r4
 8028998:	f04f 0900 	mov.w	r9, #0
 802899c:	f04f 0a00 	mov.w	sl, #0
 80289a0:	2700      	movs	r7, #0
 80289a2:	9306      	str	r3, [sp, #24]
 80289a4:	e0e6      	b.n	8028b74 <__kernel_rem_pio2+0x4bc>
 80289a6:	f04f 0b02 	mov.w	fp, #2
 80289aa:	e756      	b.n	802885a <__kernel_rem_pio2+0x1a2>
 80289ac:	f8d8 3000 	ldr.w	r3, [r8]
 80289b0:	bb05      	cbnz	r5, 80289f4 <__kernel_rem_pio2+0x33c>
 80289b2:	b123      	cbz	r3, 80289be <__kernel_rem_pio2+0x306>
 80289b4:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 80289b8:	f8c8 3000 	str.w	r3, [r8]
 80289bc:	2301      	movs	r3, #1
 80289be:	3201      	adds	r2, #1
 80289c0:	f108 0804 	add.w	r8, r8, #4
 80289c4:	461d      	mov	r5, r3
 80289c6:	e74f      	b.n	8028868 <__kernel_rem_pio2+0x1b0>
	...
 80289d4:	3ff00000 	.word	0x3ff00000
 80289d8:	0802c618 	.word	0x0802c618
 80289dc:	40200000 	.word	0x40200000
 80289e0:	3ff00000 	.word	0x3ff00000
 80289e4:	3e700000 	.word	0x3e700000
 80289e8:	41700000 	.word	0x41700000
 80289ec:	3fe00000 	.word	0x3fe00000
 80289f0:	0802c5d8 	.word	0x0802c5d8
 80289f4:	1acb      	subs	r3, r1, r3
 80289f6:	f8c8 3000 	str.w	r3, [r8]
 80289fa:	462b      	mov	r3, r5
 80289fc:	e7df      	b.n	80289be <__kernel_rem_pio2+0x306>
 80289fe:	1e62      	subs	r2, r4, #1
 8028a00:	ab0c      	add	r3, sp, #48	; 0x30
 8028a02:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8028a06:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8028a0a:	a90c      	add	r1, sp, #48	; 0x30
 8028a0c:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8028a10:	e738      	b.n	8028884 <__kernel_rem_pio2+0x1cc>
 8028a12:	1e62      	subs	r2, r4, #1
 8028a14:	ab0c      	add	r3, sp, #48	; 0x30
 8028a16:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8028a1a:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8028a1e:	e7f4      	b.n	8028a0a <__kernel_rem_pio2+0x352>
 8028a20:	a90c      	add	r1, sp, #48	; 0x30
 8028a22:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8028a26:	3b01      	subs	r3, #1
 8028a28:	430a      	orrs	r2, r1
 8028a2a:	e788      	b.n	802893e <__kernel_rem_pio2+0x286>
 8028a2c:	3301      	adds	r3, #1
 8028a2e:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8028a32:	2900      	cmp	r1, #0
 8028a34:	d0fa      	beq.n	8028a2c <__kernel_rem_pio2+0x374>
 8028a36:	9a08      	ldr	r2, [sp, #32]
 8028a38:	f502 7218 	add.w	r2, r2, #608	; 0x260
 8028a3c:	446a      	add	r2, sp
 8028a3e:	3a98      	subs	r2, #152	; 0x98
 8028a40:	9208      	str	r2, [sp, #32]
 8028a42:	9a06      	ldr	r2, [sp, #24]
 8028a44:	a920      	add	r1, sp, #128	; 0x80
 8028a46:	18a2      	adds	r2, r4, r2
 8028a48:	18e3      	adds	r3, r4, r3
 8028a4a:	f104 0801 	add.w	r8, r4, #1
 8028a4e:	eb01 05c2 	add.w	r5, r1, r2, lsl #3
 8028a52:	9302      	str	r3, [sp, #8]
 8028a54:	9b02      	ldr	r3, [sp, #8]
 8028a56:	4543      	cmp	r3, r8
 8028a58:	da04      	bge.n	8028a64 <__kernel_rem_pio2+0x3ac>
 8028a5a:	461c      	mov	r4, r3
 8028a5c:	e6a2      	b.n	80287a4 <__kernel_rem_pio2+0xec>
 8028a5e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8028a60:	2301      	movs	r3, #1
 8028a62:	e7e4      	b.n	8028a2e <__kernel_rem_pio2+0x376>
 8028a64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028a66:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8028a6a:	f7d7 fd6b 	bl	8000544 <__aeabi_i2d>
 8028a6e:	e8e5 0102 	strd	r0, r1, [r5], #8
 8028a72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028a74:	46ab      	mov	fp, r5
 8028a76:	461c      	mov	r4, r3
 8028a78:	f04f 0900 	mov.w	r9, #0
 8028a7c:	2600      	movs	r6, #0
 8028a7e:	2700      	movs	r7, #0
 8028a80:	9b05      	ldr	r3, [sp, #20]
 8028a82:	4599      	cmp	r9, r3
 8028a84:	dd06      	ble.n	8028a94 <__kernel_rem_pio2+0x3dc>
 8028a86:	9b08      	ldr	r3, [sp, #32]
 8028a88:	e8e3 6702 	strd	r6, r7, [r3], #8
 8028a8c:	f108 0801 	add.w	r8, r8, #1
 8028a90:	9308      	str	r3, [sp, #32]
 8028a92:	e7df      	b.n	8028a54 <__kernel_rem_pio2+0x39c>
 8028a94:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8028a98:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8028a9c:	f7d7 fdbc 	bl	8000618 <__aeabi_dmul>
 8028aa0:	4602      	mov	r2, r0
 8028aa2:	460b      	mov	r3, r1
 8028aa4:	4630      	mov	r0, r6
 8028aa6:	4639      	mov	r1, r7
 8028aa8:	f7d7 fc00 	bl	80002ac <__adddf3>
 8028aac:	f109 0901 	add.w	r9, r9, #1
 8028ab0:	4606      	mov	r6, r0
 8028ab2:	460f      	mov	r7, r1
 8028ab4:	e7e4      	b.n	8028a80 <__kernel_rem_pio2+0x3c8>
 8028ab6:	3d01      	subs	r5, #1
 8028ab8:	e747      	b.n	802894a <__kernel_rem_pio2+0x292>
 8028aba:	ec47 6b10 	vmov	d0, r6, r7
 8028abe:	f1ca 0000 	rsb	r0, sl, #0
 8028ac2:	f7ff fc71 	bl	80283a8 <scalbn>
 8028ac6:	ec57 6b10 	vmov	r6, r7, d0
 8028aca:	4ba0      	ldr	r3, [pc, #640]	; (8028d4c <__kernel_rem_pio2+0x694>)
 8028acc:	ee10 0a10 	vmov	r0, s0
 8028ad0:	2200      	movs	r2, #0
 8028ad2:	4639      	mov	r1, r7
 8028ad4:	f7d8 f826 	bl	8000b24 <__aeabi_dcmpge>
 8028ad8:	b1f8      	cbz	r0, 8028b1a <__kernel_rem_pio2+0x462>
 8028ada:	4b9d      	ldr	r3, [pc, #628]	; (8028d50 <__kernel_rem_pio2+0x698>)
 8028adc:	2200      	movs	r2, #0
 8028ade:	4630      	mov	r0, r6
 8028ae0:	4639      	mov	r1, r7
 8028ae2:	f7d7 fd99 	bl	8000618 <__aeabi_dmul>
 8028ae6:	f7d8 f847 	bl	8000b78 <__aeabi_d2iz>
 8028aea:	4680      	mov	r8, r0
 8028aec:	f7d7 fd2a 	bl	8000544 <__aeabi_i2d>
 8028af0:	4b96      	ldr	r3, [pc, #600]	; (8028d4c <__kernel_rem_pio2+0x694>)
 8028af2:	2200      	movs	r2, #0
 8028af4:	f7d7 fd90 	bl	8000618 <__aeabi_dmul>
 8028af8:	460b      	mov	r3, r1
 8028afa:	4602      	mov	r2, r0
 8028afc:	4639      	mov	r1, r7
 8028afe:	4630      	mov	r0, r6
 8028b00:	f7d7 fbd2 	bl	80002a8 <__aeabi_dsub>
 8028b04:	f7d8 f838 	bl	8000b78 <__aeabi_d2iz>
 8028b08:	1c65      	adds	r5, r4, #1
 8028b0a:	ab0c      	add	r3, sp, #48	; 0x30
 8028b0c:	f10a 0a18 	add.w	sl, sl, #24
 8028b10:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8028b14:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8028b18:	e71f      	b.n	802895a <__kernel_rem_pio2+0x2a2>
 8028b1a:	4630      	mov	r0, r6
 8028b1c:	4639      	mov	r1, r7
 8028b1e:	f7d8 f82b 	bl	8000b78 <__aeabi_d2iz>
 8028b22:	ab0c      	add	r3, sp, #48	; 0x30
 8028b24:	4625      	mov	r5, r4
 8028b26:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8028b2a:	e716      	b.n	802895a <__kernel_rem_pio2+0x2a2>
 8028b2c:	ab0c      	add	r3, sp, #48	; 0x30
 8028b2e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8028b32:	f7d7 fd07 	bl	8000544 <__aeabi_i2d>
 8028b36:	4632      	mov	r2, r6
 8028b38:	463b      	mov	r3, r7
 8028b3a:	f7d7 fd6d 	bl	8000618 <__aeabi_dmul>
 8028b3e:	4642      	mov	r2, r8
 8028b40:	e96a 0102 	strd	r0, r1, [sl, #-8]!
 8028b44:	464b      	mov	r3, r9
 8028b46:	4630      	mov	r0, r6
 8028b48:	4639      	mov	r1, r7
 8028b4a:	f7d7 fd65 	bl	8000618 <__aeabi_dmul>
 8028b4e:	3c01      	subs	r4, #1
 8028b50:	4606      	mov	r6, r0
 8028b52:	460f      	mov	r7, r1
 8028b54:	e713      	b.n	802897e <__kernel_rem_pio2+0x2c6>
 8028b56:	e8f8 2302 	ldrd	r2, r3, [r8], #8
 8028b5a:	e8f6 0102 	ldrd	r0, r1, [r6], #8
 8028b5e:	f7d7 fd5b 	bl	8000618 <__aeabi_dmul>
 8028b62:	4602      	mov	r2, r0
 8028b64:	460b      	mov	r3, r1
 8028b66:	4648      	mov	r0, r9
 8028b68:	4651      	mov	r1, sl
 8028b6a:	f7d7 fb9f 	bl	80002ac <__adddf3>
 8028b6e:	3701      	adds	r7, #1
 8028b70:	4681      	mov	r9, r0
 8028b72:	468a      	mov	sl, r1
 8028b74:	9b00      	ldr	r3, [sp, #0]
 8028b76:	429f      	cmp	r7, r3
 8028b78:	dc02      	bgt.n	8028b80 <__kernel_rem_pio2+0x4c8>
 8028b7a:	9b06      	ldr	r3, [sp, #24]
 8028b7c:	429f      	cmp	r7, r3
 8028b7e:	ddea      	ble.n	8028b56 <__kernel_rem_pio2+0x49e>
 8028b80:	9a06      	ldr	r2, [sp, #24]
 8028b82:	ab48      	add	r3, sp, #288	; 0x120
 8028b84:	eb03 06c2 	add.w	r6, r3, r2, lsl #3
 8028b88:	e9c6 9a00 	strd	r9, sl, [r6]
 8028b8c:	3c01      	subs	r4, #1
 8028b8e:	e6fa      	b.n	8028986 <__kernel_rem_pio2+0x2ce>
 8028b90:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8028b92:	2b02      	cmp	r3, #2
 8028b94:	dc0b      	bgt.n	8028bae <__kernel_rem_pio2+0x4f6>
 8028b96:	2b00      	cmp	r3, #0
 8028b98:	dc39      	bgt.n	8028c0e <__kernel_rem_pio2+0x556>
 8028b9a:	d05d      	beq.n	8028c58 <__kernel_rem_pio2+0x5a0>
 8028b9c:	9b02      	ldr	r3, [sp, #8]
 8028b9e:	f003 0007 	and.w	r0, r3, #7
 8028ba2:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 8028ba6:	ecbd 8b02 	vpop	{d8}
 8028baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028bae:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8028bb0:	2b03      	cmp	r3, #3
 8028bb2:	d1f3      	bne.n	8028b9c <__kernel_rem_pio2+0x4e4>
 8028bb4:	9b05      	ldr	r3, [sp, #20]
 8028bb6:	9500      	str	r5, [sp, #0]
 8028bb8:	f503 7318 	add.w	r3, r3, #608	; 0x260
 8028bbc:	eb0d 0403 	add.w	r4, sp, r3
 8028bc0:	f5a4 74a4 	sub.w	r4, r4, #328	; 0x148
 8028bc4:	46a2      	mov	sl, r4
 8028bc6:	9b00      	ldr	r3, [sp, #0]
 8028bc8:	2b00      	cmp	r3, #0
 8028bca:	f1aa 0a08 	sub.w	sl, sl, #8
 8028bce:	dc69      	bgt.n	8028ca4 <__kernel_rem_pio2+0x5ec>
 8028bd0:	46aa      	mov	sl, r5
 8028bd2:	f1ba 0f01 	cmp.w	sl, #1
 8028bd6:	f1a4 0408 	sub.w	r4, r4, #8
 8028bda:	f300 8083 	bgt.w	8028ce4 <__kernel_rem_pio2+0x62c>
 8028bde:	9c05      	ldr	r4, [sp, #20]
 8028be0:	ab48      	add	r3, sp, #288	; 0x120
 8028be2:	441c      	add	r4, r3
 8028be4:	2000      	movs	r0, #0
 8028be6:	2100      	movs	r1, #0
 8028be8:	2d01      	cmp	r5, #1
 8028bea:	f300 809a 	bgt.w	8028d22 <__kernel_rem_pio2+0x66a>
 8028bee:	e9dd 7848 	ldrd	r7, r8, [sp, #288]	; 0x120
 8028bf2:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 8028bf6:	f1bb 0f00 	cmp.w	fp, #0
 8028bfa:	f040 8098 	bne.w	8028d2e <__kernel_rem_pio2+0x676>
 8028bfe:	9b04      	ldr	r3, [sp, #16]
 8028c00:	e9c3 7800 	strd	r7, r8, [r3]
 8028c04:	e9c3 5602 	strd	r5, r6, [r3, #8]
 8028c08:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8028c0c:	e7c6      	b.n	8028b9c <__kernel_rem_pio2+0x4e4>
 8028c0e:	9e05      	ldr	r6, [sp, #20]
 8028c10:	ab48      	add	r3, sp, #288	; 0x120
 8028c12:	441e      	add	r6, r3
 8028c14:	462c      	mov	r4, r5
 8028c16:	2000      	movs	r0, #0
 8028c18:	2100      	movs	r1, #0
 8028c1a:	2c00      	cmp	r4, #0
 8028c1c:	da33      	bge.n	8028c86 <__kernel_rem_pio2+0x5ce>
 8028c1e:	f1bb 0f00 	cmp.w	fp, #0
 8028c22:	d036      	beq.n	8028c92 <__kernel_rem_pio2+0x5da>
 8028c24:	4602      	mov	r2, r0
 8028c26:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8028c2a:	9c04      	ldr	r4, [sp, #16]
 8028c2c:	e9c4 2300 	strd	r2, r3, [r4]
 8028c30:	4602      	mov	r2, r0
 8028c32:	460b      	mov	r3, r1
 8028c34:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 8028c38:	f7d7 fb36 	bl	80002a8 <__aeabi_dsub>
 8028c3c:	ae4a      	add	r6, sp, #296	; 0x128
 8028c3e:	2401      	movs	r4, #1
 8028c40:	42a5      	cmp	r5, r4
 8028c42:	da29      	bge.n	8028c98 <__kernel_rem_pio2+0x5e0>
 8028c44:	f1bb 0f00 	cmp.w	fp, #0
 8028c48:	d002      	beq.n	8028c50 <__kernel_rem_pio2+0x598>
 8028c4a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8028c4e:	4619      	mov	r1, r3
 8028c50:	9b04      	ldr	r3, [sp, #16]
 8028c52:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8028c56:	e7a1      	b.n	8028b9c <__kernel_rem_pio2+0x4e4>
 8028c58:	9c05      	ldr	r4, [sp, #20]
 8028c5a:	ab48      	add	r3, sp, #288	; 0x120
 8028c5c:	441c      	add	r4, r3
 8028c5e:	2000      	movs	r0, #0
 8028c60:	2100      	movs	r1, #0
 8028c62:	2d00      	cmp	r5, #0
 8028c64:	da09      	bge.n	8028c7a <__kernel_rem_pio2+0x5c2>
 8028c66:	f1bb 0f00 	cmp.w	fp, #0
 8028c6a:	d002      	beq.n	8028c72 <__kernel_rem_pio2+0x5ba>
 8028c6c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8028c70:	4619      	mov	r1, r3
 8028c72:	9b04      	ldr	r3, [sp, #16]
 8028c74:	e9c3 0100 	strd	r0, r1, [r3]
 8028c78:	e790      	b.n	8028b9c <__kernel_rem_pio2+0x4e4>
 8028c7a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8028c7e:	f7d7 fb15 	bl	80002ac <__adddf3>
 8028c82:	3d01      	subs	r5, #1
 8028c84:	e7ed      	b.n	8028c62 <__kernel_rem_pio2+0x5aa>
 8028c86:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
 8028c8a:	f7d7 fb0f 	bl	80002ac <__adddf3>
 8028c8e:	3c01      	subs	r4, #1
 8028c90:	e7c3      	b.n	8028c1a <__kernel_rem_pio2+0x562>
 8028c92:	4602      	mov	r2, r0
 8028c94:	460b      	mov	r3, r1
 8028c96:	e7c8      	b.n	8028c2a <__kernel_rem_pio2+0x572>
 8028c98:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8028c9c:	f7d7 fb06 	bl	80002ac <__adddf3>
 8028ca0:	3401      	adds	r4, #1
 8028ca2:	e7cd      	b.n	8028c40 <__kernel_rem_pio2+0x588>
 8028ca4:	e9da 8900 	ldrd	r8, r9, [sl]
 8028ca8:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 8028cac:	9b00      	ldr	r3, [sp, #0]
 8028cae:	3b01      	subs	r3, #1
 8028cb0:	9300      	str	r3, [sp, #0]
 8028cb2:	4632      	mov	r2, r6
 8028cb4:	463b      	mov	r3, r7
 8028cb6:	4640      	mov	r0, r8
 8028cb8:	4649      	mov	r1, r9
 8028cba:	f7d7 faf7 	bl	80002ac <__adddf3>
 8028cbe:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8028cc2:	4602      	mov	r2, r0
 8028cc4:	460b      	mov	r3, r1
 8028cc6:	4640      	mov	r0, r8
 8028cc8:	4649      	mov	r1, r9
 8028cca:	f7d7 faed 	bl	80002a8 <__aeabi_dsub>
 8028cce:	4632      	mov	r2, r6
 8028cd0:	463b      	mov	r3, r7
 8028cd2:	f7d7 faeb 	bl	80002ac <__adddf3>
 8028cd6:	ed9d 7b06 	vldr	d7, [sp, #24]
 8028cda:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8028cde:	ed8a 7b00 	vstr	d7, [sl]
 8028ce2:	e770      	b.n	8028bc6 <__kernel_rem_pio2+0x50e>
 8028ce4:	e9d4 8900 	ldrd	r8, r9, [r4]
 8028ce8:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8028cec:	4640      	mov	r0, r8
 8028cee:	4632      	mov	r2, r6
 8028cf0:	463b      	mov	r3, r7
 8028cf2:	4649      	mov	r1, r9
 8028cf4:	f7d7 fada 	bl	80002ac <__adddf3>
 8028cf8:	e9cd 0100 	strd	r0, r1, [sp]
 8028cfc:	4602      	mov	r2, r0
 8028cfe:	460b      	mov	r3, r1
 8028d00:	4640      	mov	r0, r8
 8028d02:	4649      	mov	r1, r9
 8028d04:	f7d7 fad0 	bl	80002a8 <__aeabi_dsub>
 8028d08:	4632      	mov	r2, r6
 8028d0a:	463b      	mov	r3, r7
 8028d0c:	f7d7 face 	bl	80002ac <__adddf3>
 8028d10:	ed9d 7b00 	vldr	d7, [sp]
 8028d14:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8028d18:	ed84 7b00 	vstr	d7, [r4]
 8028d1c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8028d20:	e757      	b.n	8028bd2 <__kernel_rem_pio2+0x51a>
 8028d22:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8028d26:	f7d7 fac1 	bl	80002ac <__adddf3>
 8028d2a:	3d01      	subs	r5, #1
 8028d2c:	e75c      	b.n	8028be8 <__kernel_rem_pio2+0x530>
 8028d2e:	9b04      	ldr	r3, [sp, #16]
 8028d30:	9a04      	ldr	r2, [sp, #16]
 8028d32:	601f      	str	r7, [r3, #0]
 8028d34:	f108 4400 	add.w	r4, r8, #2147483648	; 0x80000000
 8028d38:	605c      	str	r4, [r3, #4]
 8028d3a:	609d      	str	r5, [r3, #8]
 8028d3c:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8028d40:	60d3      	str	r3, [r2, #12]
 8028d42:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8028d46:	6110      	str	r0, [r2, #16]
 8028d48:	6153      	str	r3, [r2, #20]
 8028d4a:	e727      	b.n	8028b9c <__kernel_rem_pio2+0x4e4>
 8028d4c:	41700000 	.word	0x41700000
 8028d50:	3e700000 	.word	0x3e700000
 8028d54:	00000000 	.word	0x00000000

08028d58 <floor>:
 8028d58:	ec51 0b10 	vmov	r0, r1, d0
 8028d5c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8028d60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028d64:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
 8028d68:	2e13      	cmp	r6, #19
 8028d6a:	ee10 5a10 	vmov	r5, s0
 8028d6e:	ee10 8a10 	vmov	r8, s0
 8028d72:	460c      	mov	r4, r1
 8028d74:	dc31      	bgt.n	8028dda <floor+0x82>
 8028d76:	2e00      	cmp	r6, #0
 8028d78:	da14      	bge.n	8028da4 <floor+0x4c>
 8028d7a:	a333      	add	r3, pc, #204	; (adr r3, 8028e48 <floor+0xf0>)
 8028d7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028d80:	f7d7 fa94 	bl	80002ac <__adddf3>
 8028d84:	2200      	movs	r2, #0
 8028d86:	2300      	movs	r3, #0
 8028d88:	f7d7 fed6 	bl	8000b38 <__aeabi_dcmpgt>
 8028d8c:	b138      	cbz	r0, 8028d9e <floor+0x46>
 8028d8e:	2c00      	cmp	r4, #0
 8028d90:	da53      	bge.n	8028e3a <floor+0xe2>
 8028d92:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8028d96:	4325      	orrs	r5, r4
 8028d98:	d052      	beq.n	8028e40 <floor+0xe8>
 8028d9a:	4c2d      	ldr	r4, [pc, #180]	; (8028e50 <floor+0xf8>)
 8028d9c:	2500      	movs	r5, #0
 8028d9e:	4621      	mov	r1, r4
 8028da0:	4628      	mov	r0, r5
 8028da2:	e024      	b.n	8028dee <floor+0x96>
 8028da4:	4f2b      	ldr	r7, [pc, #172]	; (8028e54 <floor+0xfc>)
 8028da6:	4137      	asrs	r7, r6
 8028da8:	ea01 0307 	and.w	r3, r1, r7
 8028dac:	4303      	orrs	r3, r0
 8028dae:	d01e      	beq.n	8028dee <floor+0x96>
 8028db0:	a325      	add	r3, pc, #148	; (adr r3, 8028e48 <floor+0xf0>)
 8028db2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028db6:	f7d7 fa79 	bl	80002ac <__adddf3>
 8028dba:	2200      	movs	r2, #0
 8028dbc:	2300      	movs	r3, #0
 8028dbe:	f7d7 febb 	bl	8000b38 <__aeabi_dcmpgt>
 8028dc2:	2800      	cmp	r0, #0
 8028dc4:	d0eb      	beq.n	8028d9e <floor+0x46>
 8028dc6:	2c00      	cmp	r4, #0
 8028dc8:	bfbe      	ittt	lt
 8028dca:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8028dce:	4133      	asrlt	r3, r6
 8028dd0:	18e4      	addlt	r4, r4, r3
 8028dd2:	ea24 0407 	bic.w	r4, r4, r7
 8028dd6:	2500      	movs	r5, #0
 8028dd8:	e7e1      	b.n	8028d9e <floor+0x46>
 8028dda:	2e33      	cmp	r6, #51	; 0x33
 8028ddc:	dd0b      	ble.n	8028df6 <floor+0x9e>
 8028dde:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8028de2:	d104      	bne.n	8028dee <floor+0x96>
 8028de4:	ee10 2a10 	vmov	r2, s0
 8028de8:	460b      	mov	r3, r1
 8028dea:	f7d7 fa5f 	bl	80002ac <__adddf3>
 8028dee:	ec41 0b10 	vmov	d0, r0, r1
 8028df2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028df6:	f2a3 4313 	subw	r3, r3, #1043	; 0x413
 8028dfa:	f04f 37ff 	mov.w	r7, #4294967295
 8028dfe:	40df      	lsrs	r7, r3
 8028e00:	4238      	tst	r0, r7
 8028e02:	d0f4      	beq.n	8028dee <floor+0x96>
 8028e04:	a310      	add	r3, pc, #64	; (adr r3, 8028e48 <floor+0xf0>)
 8028e06:	e9d3 2300 	ldrd	r2, r3, [r3]
 8028e0a:	f7d7 fa4f 	bl	80002ac <__adddf3>
 8028e0e:	2200      	movs	r2, #0
 8028e10:	2300      	movs	r3, #0
 8028e12:	f7d7 fe91 	bl	8000b38 <__aeabi_dcmpgt>
 8028e16:	2800      	cmp	r0, #0
 8028e18:	d0c1      	beq.n	8028d9e <floor+0x46>
 8028e1a:	2c00      	cmp	r4, #0
 8028e1c:	da0a      	bge.n	8028e34 <floor+0xdc>
 8028e1e:	2e14      	cmp	r6, #20
 8028e20:	d101      	bne.n	8028e26 <floor+0xce>
 8028e22:	3401      	adds	r4, #1
 8028e24:	e006      	b.n	8028e34 <floor+0xdc>
 8028e26:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8028e2a:	2301      	movs	r3, #1
 8028e2c:	40b3      	lsls	r3, r6
 8028e2e:	441d      	add	r5, r3
 8028e30:	45a8      	cmp	r8, r5
 8028e32:	d8f6      	bhi.n	8028e22 <floor+0xca>
 8028e34:	ea25 0507 	bic.w	r5, r5, r7
 8028e38:	e7b1      	b.n	8028d9e <floor+0x46>
 8028e3a:	2500      	movs	r5, #0
 8028e3c:	462c      	mov	r4, r5
 8028e3e:	e7ae      	b.n	8028d9e <floor+0x46>
 8028e40:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8028e44:	e7ab      	b.n	8028d9e <floor+0x46>
 8028e46:	bf00      	nop
 8028e48:	8800759c 	.word	0x8800759c
 8028e4c:	7e37e43c 	.word	0x7e37e43c
 8028e50:	bff00000 	.word	0xbff00000
 8028e54:	000fffff 	.word	0x000fffff

08028e58 <abort>:
 8028e58:	b508      	push	{r3, lr}
 8028e5a:	2006      	movs	r0, #6
 8028e5c:	f000 fa3a 	bl	80292d4 <raise>
 8028e60:	2001      	movs	r0, #1
 8028e62:	f7dc f8fb 	bl	800505c <_exit>
	...

08028e68 <__assert_func>:
 8028e68:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8028e6a:	4614      	mov	r4, r2
 8028e6c:	461a      	mov	r2, r3
 8028e6e:	4b09      	ldr	r3, [pc, #36]	; (8028e94 <__assert_func+0x2c>)
 8028e70:	681b      	ldr	r3, [r3, #0]
 8028e72:	4605      	mov	r5, r0
 8028e74:	68d8      	ldr	r0, [r3, #12]
 8028e76:	b14c      	cbz	r4, 8028e8c <__assert_func+0x24>
 8028e78:	4b07      	ldr	r3, [pc, #28]	; (8028e98 <__assert_func+0x30>)
 8028e7a:	9100      	str	r1, [sp, #0]
 8028e7c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8028e80:	4906      	ldr	r1, [pc, #24]	; (8028e9c <__assert_func+0x34>)
 8028e82:	462b      	mov	r3, r5
 8028e84:	f000 f982 	bl	802918c <fiprintf>
 8028e88:	f7ff ffe6 	bl	8028e58 <abort>
 8028e8c:	4b04      	ldr	r3, [pc, #16]	; (8028ea0 <__assert_func+0x38>)
 8028e8e:	461c      	mov	r4, r3
 8028e90:	e7f3      	b.n	8028e7a <__assert_func+0x12>
 8028e92:	bf00      	nop
 8028e94:	20000390 	.word	0x20000390
 8028e98:	0802c628 	.word	0x0802c628
 8028e9c:	0802c635 	.word	0x0802c635
 8028ea0:	0802c663 	.word	0x0802c663

08028ea4 <atexit>:
 8028ea4:	2300      	movs	r3, #0
 8028ea6:	4601      	mov	r1, r0
 8028ea8:	461a      	mov	r2, r3
 8028eaa:	4618      	mov	r0, r3
 8028eac:	f000 bac0 	b.w	8029430 <__register_exitproc>

08028eb0 <malloc>:
 8028eb0:	4b02      	ldr	r3, [pc, #8]	; (8028ebc <malloc+0xc>)
 8028eb2:	4601      	mov	r1, r0
 8028eb4:	6818      	ldr	r0, [r3, #0]
 8028eb6:	f000 b82b 	b.w	8028f10 <_malloc_r>
 8028eba:	bf00      	nop
 8028ebc:	20000390 	.word	0x20000390

08028ec0 <free>:
 8028ec0:	4b02      	ldr	r3, [pc, #8]	; (8028ecc <free+0xc>)
 8028ec2:	4601      	mov	r1, r0
 8028ec4:	6818      	ldr	r0, [r3, #0]
 8028ec6:	f000 bb11 	b.w	80294ec <_free_r>
 8028eca:	bf00      	nop
 8028ecc:	20000390 	.word	0x20000390

08028ed0 <sbrk_aligned>:
 8028ed0:	b570      	push	{r4, r5, r6, lr}
 8028ed2:	4e0e      	ldr	r6, [pc, #56]	; (8028f0c <sbrk_aligned+0x3c>)
 8028ed4:	460c      	mov	r4, r1
 8028ed6:	6831      	ldr	r1, [r6, #0]
 8028ed8:	4605      	mov	r5, r0
 8028eda:	b911      	cbnz	r1, 8028ee2 <sbrk_aligned+0x12>
 8028edc:	f000 fa4a 	bl	8029374 <_sbrk_r>
 8028ee0:	6030      	str	r0, [r6, #0]
 8028ee2:	4621      	mov	r1, r4
 8028ee4:	4628      	mov	r0, r5
 8028ee6:	f000 fa45 	bl	8029374 <_sbrk_r>
 8028eea:	1c43      	adds	r3, r0, #1
 8028eec:	d00a      	beq.n	8028f04 <sbrk_aligned+0x34>
 8028eee:	1cc4      	adds	r4, r0, #3
 8028ef0:	f024 0403 	bic.w	r4, r4, #3
 8028ef4:	42a0      	cmp	r0, r4
 8028ef6:	d007      	beq.n	8028f08 <sbrk_aligned+0x38>
 8028ef8:	1a21      	subs	r1, r4, r0
 8028efa:	4628      	mov	r0, r5
 8028efc:	f000 fa3a 	bl	8029374 <_sbrk_r>
 8028f00:	3001      	adds	r0, #1
 8028f02:	d101      	bne.n	8028f08 <sbrk_aligned+0x38>
 8028f04:	f04f 34ff 	mov.w	r4, #4294967295
 8028f08:	4620      	mov	r0, r4
 8028f0a:	bd70      	pop	{r4, r5, r6, pc}
 8028f0c:	200262e8 	.word	0x200262e8

08028f10 <_malloc_r>:
 8028f10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028f14:	1ccd      	adds	r5, r1, #3
 8028f16:	f025 0503 	bic.w	r5, r5, #3
 8028f1a:	3508      	adds	r5, #8
 8028f1c:	2d0c      	cmp	r5, #12
 8028f1e:	bf38      	it	cc
 8028f20:	250c      	movcc	r5, #12
 8028f22:	2d00      	cmp	r5, #0
 8028f24:	4607      	mov	r7, r0
 8028f26:	db01      	blt.n	8028f2c <_malloc_r+0x1c>
 8028f28:	42a9      	cmp	r1, r5
 8028f2a:	d905      	bls.n	8028f38 <_malloc_r+0x28>
 8028f2c:	230c      	movs	r3, #12
 8028f2e:	603b      	str	r3, [r7, #0]
 8028f30:	2600      	movs	r6, #0
 8028f32:	4630      	mov	r0, r6
 8028f34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028f38:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802900c <_malloc_r+0xfc>
 8028f3c:	f000 f868 	bl	8029010 <__malloc_lock>
 8028f40:	f8d8 3000 	ldr.w	r3, [r8]
 8028f44:	461c      	mov	r4, r3
 8028f46:	bb5c      	cbnz	r4, 8028fa0 <_malloc_r+0x90>
 8028f48:	4629      	mov	r1, r5
 8028f4a:	4638      	mov	r0, r7
 8028f4c:	f7ff ffc0 	bl	8028ed0 <sbrk_aligned>
 8028f50:	1c43      	adds	r3, r0, #1
 8028f52:	4604      	mov	r4, r0
 8028f54:	d155      	bne.n	8029002 <_malloc_r+0xf2>
 8028f56:	f8d8 4000 	ldr.w	r4, [r8]
 8028f5a:	4626      	mov	r6, r4
 8028f5c:	2e00      	cmp	r6, #0
 8028f5e:	d145      	bne.n	8028fec <_malloc_r+0xdc>
 8028f60:	2c00      	cmp	r4, #0
 8028f62:	d048      	beq.n	8028ff6 <_malloc_r+0xe6>
 8028f64:	6823      	ldr	r3, [r4, #0]
 8028f66:	4631      	mov	r1, r6
 8028f68:	4638      	mov	r0, r7
 8028f6a:	eb04 0903 	add.w	r9, r4, r3
 8028f6e:	f000 fa01 	bl	8029374 <_sbrk_r>
 8028f72:	4581      	cmp	r9, r0
 8028f74:	d13f      	bne.n	8028ff6 <_malloc_r+0xe6>
 8028f76:	6821      	ldr	r1, [r4, #0]
 8028f78:	1a6d      	subs	r5, r5, r1
 8028f7a:	4629      	mov	r1, r5
 8028f7c:	4638      	mov	r0, r7
 8028f7e:	f7ff ffa7 	bl	8028ed0 <sbrk_aligned>
 8028f82:	3001      	adds	r0, #1
 8028f84:	d037      	beq.n	8028ff6 <_malloc_r+0xe6>
 8028f86:	6823      	ldr	r3, [r4, #0]
 8028f88:	442b      	add	r3, r5
 8028f8a:	6023      	str	r3, [r4, #0]
 8028f8c:	f8d8 3000 	ldr.w	r3, [r8]
 8028f90:	2b00      	cmp	r3, #0
 8028f92:	d038      	beq.n	8029006 <_malloc_r+0xf6>
 8028f94:	685a      	ldr	r2, [r3, #4]
 8028f96:	42a2      	cmp	r2, r4
 8028f98:	d12b      	bne.n	8028ff2 <_malloc_r+0xe2>
 8028f9a:	2200      	movs	r2, #0
 8028f9c:	605a      	str	r2, [r3, #4]
 8028f9e:	e00f      	b.n	8028fc0 <_malloc_r+0xb0>
 8028fa0:	6822      	ldr	r2, [r4, #0]
 8028fa2:	1b52      	subs	r2, r2, r5
 8028fa4:	d41f      	bmi.n	8028fe6 <_malloc_r+0xd6>
 8028fa6:	2a0b      	cmp	r2, #11
 8028fa8:	d917      	bls.n	8028fda <_malloc_r+0xca>
 8028faa:	1961      	adds	r1, r4, r5
 8028fac:	42a3      	cmp	r3, r4
 8028fae:	6025      	str	r5, [r4, #0]
 8028fb0:	bf18      	it	ne
 8028fb2:	6059      	strne	r1, [r3, #4]
 8028fb4:	6863      	ldr	r3, [r4, #4]
 8028fb6:	bf08      	it	eq
 8028fb8:	f8c8 1000 	streq.w	r1, [r8]
 8028fbc:	5162      	str	r2, [r4, r5]
 8028fbe:	604b      	str	r3, [r1, #4]
 8028fc0:	4638      	mov	r0, r7
 8028fc2:	f104 060b 	add.w	r6, r4, #11
 8028fc6:	f000 f829 	bl	802901c <__malloc_unlock>
 8028fca:	f026 0607 	bic.w	r6, r6, #7
 8028fce:	1d23      	adds	r3, r4, #4
 8028fd0:	1af2      	subs	r2, r6, r3
 8028fd2:	d0ae      	beq.n	8028f32 <_malloc_r+0x22>
 8028fd4:	1b9b      	subs	r3, r3, r6
 8028fd6:	50a3      	str	r3, [r4, r2]
 8028fd8:	e7ab      	b.n	8028f32 <_malloc_r+0x22>
 8028fda:	42a3      	cmp	r3, r4
 8028fdc:	6862      	ldr	r2, [r4, #4]
 8028fde:	d1dd      	bne.n	8028f9c <_malloc_r+0x8c>
 8028fe0:	f8c8 2000 	str.w	r2, [r8]
 8028fe4:	e7ec      	b.n	8028fc0 <_malloc_r+0xb0>
 8028fe6:	4623      	mov	r3, r4
 8028fe8:	6864      	ldr	r4, [r4, #4]
 8028fea:	e7ac      	b.n	8028f46 <_malloc_r+0x36>
 8028fec:	4634      	mov	r4, r6
 8028fee:	6876      	ldr	r6, [r6, #4]
 8028ff0:	e7b4      	b.n	8028f5c <_malloc_r+0x4c>
 8028ff2:	4613      	mov	r3, r2
 8028ff4:	e7cc      	b.n	8028f90 <_malloc_r+0x80>
 8028ff6:	230c      	movs	r3, #12
 8028ff8:	603b      	str	r3, [r7, #0]
 8028ffa:	4638      	mov	r0, r7
 8028ffc:	f000 f80e 	bl	802901c <__malloc_unlock>
 8029000:	e797      	b.n	8028f32 <_malloc_r+0x22>
 8029002:	6025      	str	r5, [r4, #0]
 8029004:	e7dc      	b.n	8028fc0 <_malloc_r+0xb0>
 8029006:	605b      	str	r3, [r3, #4]
 8029008:	deff      	udf	#255	; 0xff
 802900a:	bf00      	nop
 802900c:	200262e4 	.word	0x200262e4

08029010 <__malloc_lock>:
 8029010:	4801      	ldr	r0, [pc, #4]	; (8029018 <__malloc_lock+0x8>)
 8029012:	f000 b9fc 	b.w	802940e <__retarget_lock_acquire_recursive>
 8029016:	bf00      	nop
 8029018:	2002642d 	.word	0x2002642d

0802901c <__malloc_unlock>:
 802901c:	4801      	ldr	r0, [pc, #4]	; (8029024 <__malloc_unlock+0x8>)
 802901e:	f000 b9f7 	b.w	8029410 <__retarget_lock_release_recursive>
 8029022:	bf00      	nop
 8029024:	2002642d 	.word	0x2002642d

08029028 <__cxa_atexit>:
 8029028:	b510      	push	{r4, lr}
 802902a:	4c05      	ldr	r4, [pc, #20]	; (8029040 <__cxa_atexit+0x18>)
 802902c:	4613      	mov	r3, r2
 802902e:	b12c      	cbz	r4, 802903c <__cxa_atexit+0x14>
 8029030:	460a      	mov	r2, r1
 8029032:	4601      	mov	r1, r0
 8029034:	2002      	movs	r0, #2
 8029036:	f000 f9fb 	bl	8029430 <__register_exitproc>
 802903a:	bd10      	pop	{r4, pc}
 802903c:	4620      	mov	r0, r4
 802903e:	e7fc      	b.n	802903a <__cxa_atexit+0x12>
 8029040:	08029431 	.word	0x08029431

08029044 <std>:
 8029044:	2300      	movs	r3, #0
 8029046:	b510      	push	{r4, lr}
 8029048:	4604      	mov	r4, r0
 802904a:	e9c0 3300 	strd	r3, r3, [r0]
 802904e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8029052:	6083      	str	r3, [r0, #8]
 8029054:	8181      	strh	r1, [r0, #12]
 8029056:	6643      	str	r3, [r0, #100]	; 0x64
 8029058:	81c2      	strh	r2, [r0, #14]
 802905a:	6183      	str	r3, [r0, #24]
 802905c:	4619      	mov	r1, r3
 802905e:	2208      	movs	r2, #8
 8029060:	305c      	adds	r0, #92	; 0x5c
 8029062:	f000 f906 	bl	8029272 <memset>
 8029066:	4b0d      	ldr	r3, [pc, #52]	; (802909c <std+0x58>)
 8029068:	6263      	str	r3, [r4, #36]	; 0x24
 802906a:	4b0d      	ldr	r3, [pc, #52]	; (80290a0 <std+0x5c>)
 802906c:	62a3      	str	r3, [r4, #40]	; 0x28
 802906e:	4b0d      	ldr	r3, [pc, #52]	; (80290a4 <std+0x60>)
 8029070:	62e3      	str	r3, [r4, #44]	; 0x2c
 8029072:	4b0d      	ldr	r3, [pc, #52]	; (80290a8 <std+0x64>)
 8029074:	6323      	str	r3, [r4, #48]	; 0x30
 8029076:	4b0d      	ldr	r3, [pc, #52]	; (80290ac <std+0x68>)
 8029078:	6224      	str	r4, [r4, #32]
 802907a:	429c      	cmp	r4, r3
 802907c:	d006      	beq.n	802908c <std+0x48>
 802907e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8029082:	4294      	cmp	r4, r2
 8029084:	d002      	beq.n	802908c <std+0x48>
 8029086:	33d0      	adds	r3, #208	; 0xd0
 8029088:	429c      	cmp	r4, r3
 802908a:	d105      	bne.n	8029098 <std+0x54>
 802908c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8029090:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029094:	f000 b9ba 	b.w	802940c <__retarget_lock_init_recursive>
 8029098:	bd10      	pop	{r4, pc}
 802909a:	bf00      	nop
 802909c:	080291ed 	.word	0x080291ed
 80290a0:	0802920f 	.word	0x0802920f
 80290a4:	08029247 	.word	0x08029247
 80290a8:	0802926b 	.word	0x0802926b
 80290ac:	200262ec 	.word	0x200262ec

080290b0 <stdio_exit_handler>:
 80290b0:	4a02      	ldr	r2, [pc, #8]	; (80290bc <stdio_exit_handler+0xc>)
 80290b2:	4903      	ldr	r1, [pc, #12]	; (80290c0 <stdio_exit_handler+0x10>)
 80290b4:	4803      	ldr	r0, [pc, #12]	; (80290c4 <stdio_exit_handler+0x14>)
 80290b6:	f000 b87b 	b.w	80291b0 <_fwalk_sglue>
 80290ba:	bf00      	nop
 80290bc:	20000338 	.word	0x20000338
 80290c0:	08029c39 	.word	0x08029c39
 80290c4:	20000344 	.word	0x20000344

080290c8 <cleanup_stdio>:
 80290c8:	6841      	ldr	r1, [r0, #4]
 80290ca:	4b0c      	ldr	r3, [pc, #48]	; (80290fc <cleanup_stdio+0x34>)
 80290cc:	4299      	cmp	r1, r3
 80290ce:	b510      	push	{r4, lr}
 80290d0:	4604      	mov	r4, r0
 80290d2:	d001      	beq.n	80290d8 <cleanup_stdio+0x10>
 80290d4:	f000 fdb0 	bl	8029c38 <_fflush_r>
 80290d8:	68a1      	ldr	r1, [r4, #8]
 80290da:	4b09      	ldr	r3, [pc, #36]	; (8029100 <cleanup_stdio+0x38>)
 80290dc:	4299      	cmp	r1, r3
 80290de:	d002      	beq.n	80290e6 <cleanup_stdio+0x1e>
 80290e0:	4620      	mov	r0, r4
 80290e2:	f000 fda9 	bl	8029c38 <_fflush_r>
 80290e6:	68e1      	ldr	r1, [r4, #12]
 80290e8:	4b06      	ldr	r3, [pc, #24]	; (8029104 <cleanup_stdio+0x3c>)
 80290ea:	4299      	cmp	r1, r3
 80290ec:	d004      	beq.n	80290f8 <cleanup_stdio+0x30>
 80290ee:	4620      	mov	r0, r4
 80290f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80290f4:	f000 bda0 	b.w	8029c38 <_fflush_r>
 80290f8:	bd10      	pop	{r4, pc}
 80290fa:	bf00      	nop
 80290fc:	200262ec 	.word	0x200262ec
 8029100:	20026354 	.word	0x20026354
 8029104:	200263bc 	.word	0x200263bc

08029108 <global_stdio_init.part.0>:
 8029108:	b510      	push	{r4, lr}
 802910a:	4b0b      	ldr	r3, [pc, #44]	; (8029138 <global_stdio_init.part.0+0x30>)
 802910c:	4c0b      	ldr	r4, [pc, #44]	; (802913c <global_stdio_init.part.0+0x34>)
 802910e:	4a0c      	ldr	r2, [pc, #48]	; (8029140 <global_stdio_init.part.0+0x38>)
 8029110:	601a      	str	r2, [r3, #0]
 8029112:	4620      	mov	r0, r4
 8029114:	2200      	movs	r2, #0
 8029116:	2104      	movs	r1, #4
 8029118:	f7ff ff94 	bl	8029044 <std>
 802911c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8029120:	2201      	movs	r2, #1
 8029122:	2109      	movs	r1, #9
 8029124:	f7ff ff8e 	bl	8029044 <std>
 8029128:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802912c:	2202      	movs	r2, #2
 802912e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029132:	2112      	movs	r1, #18
 8029134:	f7ff bf86 	b.w	8029044 <std>
 8029138:	20026424 	.word	0x20026424
 802913c:	200262ec 	.word	0x200262ec
 8029140:	080290b1 	.word	0x080290b1

08029144 <__sfp_lock_acquire>:
 8029144:	4801      	ldr	r0, [pc, #4]	; (802914c <__sfp_lock_acquire+0x8>)
 8029146:	f000 b962 	b.w	802940e <__retarget_lock_acquire_recursive>
 802914a:	bf00      	nop
 802914c:	2002642e 	.word	0x2002642e

08029150 <__sfp_lock_release>:
 8029150:	4801      	ldr	r0, [pc, #4]	; (8029158 <__sfp_lock_release+0x8>)
 8029152:	f000 b95d 	b.w	8029410 <__retarget_lock_release_recursive>
 8029156:	bf00      	nop
 8029158:	2002642e 	.word	0x2002642e

0802915c <__sinit>:
 802915c:	b510      	push	{r4, lr}
 802915e:	4604      	mov	r4, r0
 8029160:	f7ff fff0 	bl	8029144 <__sfp_lock_acquire>
 8029164:	6a23      	ldr	r3, [r4, #32]
 8029166:	b11b      	cbz	r3, 8029170 <__sinit+0x14>
 8029168:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802916c:	f7ff bff0 	b.w	8029150 <__sfp_lock_release>
 8029170:	4b04      	ldr	r3, [pc, #16]	; (8029184 <__sinit+0x28>)
 8029172:	6223      	str	r3, [r4, #32]
 8029174:	4b04      	ldr	r3, [pc, #16]	; (8029188 <__sinit+0x2c>)
 8029176:	681b      	ldr	r3, [r3, #0]
 8029178:	2b00      	cmp	r3, #0
 802917a:	d1f5      	bne.n	8029168 <__sinit+0xc>
 802917c:	f7ff ffc4 	bl	8029108 <global_stdio_init.part.0>
 8029180:	e7f2      	b.n	8029168 <__sinit+0xc>
 8029182:	bf00      	nop
 8029184:	080290c9 	.word	0x080290c9
 8029188:	20026424 	.word	0x20026424

0802918c <fiprintf>:
 802918c:	b40e      	push	{r1, r2, r3}
 802918e:	b503      	push	{r0, r1, lr}
 8029190:	4601      	mov	r1, r0
 8029192:	ab03      	add	r3, sp, #12
 8029194:	4805      	ldr	r0, [pc, #20]	; (80291ac <fiprintf+0x20>)
 8029196:	f853 2b04 	ldr.w	r2, [r3], #4
 802919a:	6800      	ldr	r0, [r0, #0]
 802919c:	9301      	str	r3, [sp, #4]
 802919e:	f000 fa1b 	bl	80295d8 <_vfiprintf_r>
 80291a2:	b002      	add	sp, #8
 80291a4:	f85d eb04 	ldr.w	lr, [sp], #4
 80291a8:	b003      	add	sp, #12
 80291aa:	4770      	bx	lr
 80291ac:	20000390 	.word	0x20000390

080291b0 <_fwalk_sglue>:
 80291b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80291b4:	4607      	mov	r7, r0
 80291b6:	4688      	mov	r8, r1
 80291b8:	4614      	mov	r4, r2
 80291ba:	2600      	movs	r6, #0
 80291bc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80291c0:	f1b9 0901 	subs.w	r9, r9, #1
 80291c4:	d505      	bpl.n	80291d2 <_fwalk_sglue+0x22>
 80291c6:	6824      	ldr	r4, [r4, #0]
 80291c8:	2c00      	cmp	r4, #0
 80291ca:	d1f7      	bne.n	80291bc <_fwalk_sglue+0xc>
 80291cc:	4630      	mov	r0, r6
 80291ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80291d2:	89ab      	ldrh	r3, [r5, #12]
 80291d4:	2b01      	cmp	r3, #1
 80291d6:	d907      	bls.n	80291e8 <_fwalk_sglue+0x38>
 80291d8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80291dc:	3301      	adds	r3, #1
 80291de:	d003      	beq.n	80291e8 <_fwalk_sglue+0x38>
 80291e0:	4629      	mov	r1, r5
 80291e2:	4638      	mov	r0, r7
 80291e4:	47c0      	blx	r8
 80291e6:	4306      	orrs	r6, r0
 80291e8:	3568      	adds	r5, #104	; 0x68
 80291ea:	e7e9      	b.n	80291c0 <_fwalk_sglue+0x10>

080291ec <__sread>:
 80291ec:	b510      	push	{r4, lr}
 80291ee:	460c      	mov	r4, r1
 80291f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80291f4:	f000 f898 	bl	8029328 <_read_r>
 80291f8:	2800      	cmp	r0, #0
 80291fa:	bfab      	itete	ge
 80291fc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80291fe:	89a3      	ldrhlt	r3, [r4, #12]
 8029200:	181b      	addge	r3, r3, r0
 8029202:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8029206:	bfac      	ite	ge
 8029208:	6563      	strge	r3, [r4, #84]	; 0x54
 802920a:	81a3      	strhlt	r3, [r4, #12]
 802920c:	bd10      	pop	{r4, pc}

0802920e <__swrite>:
 802920e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029212:	461f      	mov	r7, r3
 8029214:	898b      	ldrh	r3, [r1, #12]
 8029216:	05db      	lsls	r3, r3, #23
 8029218:	4605      	mov	r5, r0
 802921a:	460c      	mov	r4, r1
 802921c:	4616      	mov	r6, r2
 802921e:	d505      	bpl.n	802922c <__swrite+0x1e>
 8029220:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029224:	2302      	movs	r3, #2
 8029226:	2200      	movs	r2, #0
 8029228:	f000 f86c 	bl	8029304 <_lseek_r>
 802922c:	89a3      	ldrh	r3, [r4, #12]
 802922e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029232:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8029236:	81a3      	strh	r3, [r4, #12]
 8029238:	4632      	mov	r2, r6
 802923a:	463b      	mov	r3, r7
 802923c:	4628      	mov	r0, r5
 802923e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029242:	f000 b8a7 	b.w	8029394 <_write_r>

08029246 <__sseek>:
 8029246:	b510      	push	{r4, lr}
 8029248:	460c      	mov	r4, r1
 802924a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802924e:	f000 f859 	bl	8029304 <_lseek_r>
 8029252:	1c43      	adds	r3, r0, #1
 8029254:	89a3      	ldrh	r3, [r4, #12]
 8029256:	bf15      	itete	ne
 8029258:	6560      	strne	r0, [r4, #84]	; 0x54
 802925a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802925e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8029262:	81a3      	strheq	r3, [r4, #12]
 8029264:	bf18      	it	ne
 8029266:	81a3      	strhne	r3, [r4, #12]
 8029268:	bd10      	pop	{r4, pc}

0802926a <__sclose>:
 802926a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802926e:	f000 b839 	b.w	80292e4 <_close_r>

08029272 <memset>:
 8029272:	4402      	add	r2, r0
 8029274:	4603      	mov	r3, r0
 8029276:	4293      	cmp	r3, r2
 8029278:	d100      	bne.n	802927c <memset+0xa>
 802927a:	4770      	bx	lr
 802927c:	f803 1b01 	strb.w	r1, [r3], #1
 8029280:	e7f9      	b.n	8029276 <memset+0x4>

08029282 <_raise_r>:
 8029282:	291f      	cmp	r1, #31
 8029284:	b538      	push	{r3, r4, r5, lr}
 8029286:	4604      	mov	r4, r0
 8029288:	460d      	mov	r5, r1
 802928a:	d904      	bls.n	8029296 <_raise_r+0x14>
 802928c:	2316      	movs	r3, #22
 802928e:	6003      	str	r3, [r0, #0]
 8029290:	f04f 30ff 	mov.w	r0, #4294967295
 8029294:	bd38      	pop	{r3, r4, r5, pc}
 8029296:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8029298:	b112      	cbz	r2, 80292a0 <_raise_r+0x1e>
 802929a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802929e:	b94b      	cbnz	r3, 80292b4 <_raise_r+0x32>
 80292a0:	4620      	mov	r0, r4
 80292a2:	f000 f865 	bl	8029370 <_getpid_r>
 80292a6:	462a      	mov	r2, r5
 80292a8:	4601      	mov	r1, r0
 80292aa:	4620      	mov	r0, r4
 80292ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80292b0:	f000 b84c 	b.w	802934c <_kill_r>
 80292b4:	2b01      	cmp	r3, #1
 80292b6:	d00a      	beq.n	80292ce <_raise_r+0x4c>
 80292b8:	1c59      	adds	r1, r3, #1
 80292ba:	d103      	bne.n	80292c4 <_raise_r+0x42>
 80292bc:	2316      	movs	r3, #22
 80292be:	6003      	str	r3, [r0, #0]
 80292c0:	2001      	movs	r0, #1
 80292c2:	e7e7      	b.n	8029294 <_raise_r+0x12>
 80292c4:	2400      	movs	r4, #0
 80292c6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80292ca:	4628      	mov	r0, r5
 80292cc:	4798      	blx	r3
 80292ce:	2000      	movs	r0, #0
 80292d0:	e7e0      	b.n	8029294 <_raise_r+0x12>
	...

080292d4 <raise>:
 80292d4:	4b02      	ldr	r3, [pc, #8]	; (80292e0 <raise+0xc>)
 80292d6:	4601      	mov	r1, r0
 80292d8:	6818      	ldr	r0, [r3, #0]
 80292da:	f7ff bfd2 	b.w	8029282 <_raise_r>
 80292de:	bf00      	nop
 80292e0:	20000390 	.word	0x20000390

080292e4 <_close_r>:
 80292e4:	b538      	push	{r3, r4, r5, lr}
 80292e6:	4d06      	ldr	r5, [pc, #24]	; (8029300 <_close_r+0x1c>)
 80292e8:	2300      	movs	r3, #0
 80292ea:	4604      	mov	r4, r0
 80292ec:	4608      	mov	r0, r1
 80292ee:	602b      	str	r3, [r5, #0]
 80292f0:	f7db fef7 	bl	80050e2 <_close>
 80292f4:	1c43      	adds	r3, r0, #1
 80292f6:	d102      	bne.n	80292fe <_close_r+0x1a>
 80292f8:	682b      	ldr	r3, [r5, #0]
 80292fa:	b103      	cbz	r3, 80292fe <_close_r+0x1a>
 80292fc:	6023      	str	r3, [r4, #0]
 80292fe:	bd38      	pop	{r3, r4, r5, pc}
 8029300:	20026428 	.word	0x20026428

08029304 <_lseek_r>:
 8029304:	b538      	push	{r3, r4, r5, lr}
 8029306:	4d07      	ldr	r5, [pc, #28]	; (8029324 <_lseek_r+0x20>)
 8029308:	4604      	mov	r4, r0
 802930a:	4608      	mov	r0, r1
 802930c:	4611      	mov	r1, r2
 802930e:	2200      	movs	r2, #0
 8029310:	602a      	str	r2, [r5, #0]
 8029312:	461a      	mov	r2, r3
 8029314:	f7db ff0c 	bl	8005130 <_lseek>
 8029318:	1c43      	adds	r3, r0, #1
 802931a:	d102      	bne.n	8029322 <_lseek_r+0x1e>
 802931c:	682b      	ldr	r3, [r5, #0]
 802931e:	b103      	cbz	r3, 8029322 <_lseek_r+0x1e>
 8029320:	6023      	str	r3, [r4, #0]
 8029322:	bd38      	pop	{r3, r4, r5, pc}
 8029324:	20026428 	.word	0x20026428

08029328 <_read_r>:
 8029328:	b538      	push	{r3, r4, r5, lr}
 802932a:	4d07      	ldr	r5, [pc, #28]	; (8029348 <_read_r+0x20>)
 802932c:	4604      	mov	r4, r0
 802932e:	4608      	mov	r0, r1
 8029330:	4611      	mov	r1, r2
 8029332:	2200      	movs	r2, #0
 8029334:	602a      	str	r2, [r5, #0]
 8029336:	461a      	mov	r2, r3
 8029338:	f7db fe9a 	bl	8005070 <_read>
 802933c:	1c43      	adds	r3, r0, #1
 802933e:	d102      	bne.n	8029346 <_read_r+0x1e>
 8029340:	682b      	ldr	r3, [r5, #0]
 8029342:	b103      	cbz	r3, 8029346 <_read_r+0x1e>
 8029344:	6023      	str	r3, [r4, #0]
 8029346:	bd38      	pop	{r3, r4, r5, pc}
 8029348:	20026428 	.word	0x20026428

0802934c <_kill_r>:
 802934c:	b538      	push	{r3, r4, r5, lr}
 802934e:	4d07      	ldr	r5, [pc, #28]	; (802936c <_kill_r+0x20>)
 8029350:	2300      	movs	r3, #0
 8029352:	4604      	mov	r4, r0
 8029354:	4608      	mov	r0, r1
 8029356:	4611      	mov	r1, r2
 8029358:	602b      	str	r3, [r5, #0]
 802935a:	f7db fe6f 	bl	800503c <_kill>
 802935e:	1c43      	adds	r3, r0, #1
 8029360:	d102      	bne.n	8029368 <_kill_r+0x1c>
 8029362:	682b      	ldr	r3, [r5, #0]
 8029364:	b103      	cbz	r3, 8029368 <_kill_r+0x1c>
 8029366:	6023      	str	r3, [r4, #0]
 8029368:	bd38      	pop	{r3, r4, r5, pc}
 802936a:	bf00      	nop
 802936c:	20026428 	.word	0x20026428

08029370 <_getpid_r>:
 8029370:	f7db be5c 	b.w	800502c <_getpid>

08029374 <_sbrk_r>:
 8029374:	b538      	push	{r3, r4, r5, lr}
 8029376:	4d06      	ldr	r5, [pc, #24]	; (8029390 <_sbrk_r+0x1c>)
 8029378:	2300      	movs	r3, #0
 802937a:	4604      	mov	r4, r0
 802937c:	4608      	mov	r0, r1
 802937e:	602b      	str	r3, [r5, #0]
 8029380:	f7db fee4 	bl	800514c <_sbrk>
 8029384:	1c43      	adds	r3, r0, #1
 8029386:	d102      	bne.n	802938e <_sbrk_r+0x1a>
 8029388:	682b      	ldr	r3, [r5, #0]
 802938a:	b103      	cbz	r3, 802938e <_sbrk_r+0x1a>
 802938c:	6023      	str	r3, [r4, #0]
 802938e:	bd38      	pop	{r3, r4, r5, pc}
 8029390:	20026428 	.word	0x20026428

08029394 <_write_r>:
 8029394:	b538      	push	{r3, r4, r5, lr}
 8029396:	4d07      	ldr	r5, [pc, #28]	; (80293b4 <_write_r+0x20>)
 8029398:	4604      	mov	r4, r0
 802939a:	4608      	mov	r0, r1
 802939c:	4611      	mov	r1, r2
 802939e:	2200      	movs	r2, #0
 80293a0:	602a      	str	r2, [r5, #0]
 80293a2:	461a      	mov	r2, r3
 80293a4:	f7db fe81 	bl	80050aa <_write>
 80293a8:	1c43      	adds	r3, r0, #1
 80293aa:	d102      	bne.n	80293b2 <_write_r+0x1e>
 80293ac:	682b      	ldr	r3, [r5, #0]
 80293ae:	b103      	cbz	r3, 80293b2 <_write_r+0x1e>
 80293b0:	6023      	str	r3, [r4, #0]
 80293b2:	bd38      	pop	{r3, r4, r5, pc}
 80293b4:	20026428 	.word	0x20026428

080293b8 <__errno>:
 80293b8:	4b01      	ldr	r3, [pc, #4]	; (80293c0 <__errno+0x8>)
 80293ba:	6818      	ldr	r0, [r3, #0]
 80293bc:	4770      	bx	lr
 80293be:	bf00      	nop
 80293c0:	20000390 	.word	0x20000390

080293c4 <__libc_init_array>:
 80293c4:	b570      	push	{r4, r5, r6, lr}
 80293c6:	4d0d      	ldr	r5, [pc, #52]	; (80293fc <__libc_init_array+0x38>)
 80293c8:	4c0d      	ldr	r4, [pc, #52]	; (8029400 <__libc_init_array+0x3c>)
 80293ca:	1b64      	subs	r4, r4, r5
 80293cc:	10a4      	asrs	r4, r4, #2
 80293ce:	2600      	movs	r6, #0
 80293d0:	42a6      	cmp	r6, r4
 80293d2:	d109      	bne.n	80293e8 <__libc_init_array+0x24>
 80293d4:	4d0b      	ldr	r5, [pc, #44]	; (8029404 <__libc_init_array+0x40>)
 80293d6:	4c0c      	ldr	r4, [pc, #48]	; (8029408 <__libc_init_array+0x44>)
 80293d8:	f000 fd70 	bl	8029ebc <_init>
 80293dc:	1b64      	subs	r4, r4, r5
 80293de:	10a4      	asrs	r4, r4, #2
 80293e0:	2600      	movs	r6, #0
 80293e2:	42a6      	cmp	r6, r4
 80293e4:	d105      	bne.n	80293f2 <__libc_init_array+0x2e>
 80293e6:	bd70      	pop	{r4, r5, r6, pc}
 80293e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80293ec:	4798      	blx	r3
 80293ee:	3601      	adds	r6, #1
 80293f0:	e7ee      	b.n	80293d0 <__libc_init_array+0xc>
 80293f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80293f6:	4798      	blx	r3
 80293f8:	3601      	adds	r6, #1
 80293fa:	e7f2      	b.n	80293e2 <__libc_init_array+0x1e>
 80293fc:	0805d020 	.word	0x0805d020
 8029400:	0805d020 	.word	0x0805d020
 8029404:	0805d020 	.word	0x0805d020
 8029408:	0805d038 	.word	0x0805d038

0802940c <__retarget_lock_init_recursive>:
 802940c:	4770      	bx	lr

0802940e <__retarget_lock_acquire_recursive>:
 802940e:	4770      	bx	lr

08029410 <__retarget_lock_release_recursive>:
 8029410:	4770      	bx	lr

08029412 <memcpy>:
 8029412:	440a      	add	r2, r1
 8029414:	4291      	cmp	r1, r2
 8029416:	f100 33ff 	add.w	r3, r0, #4294967295
 802941a:	d100      	bne.n	802941e <memcpy+0xc>
 802941c:	4770      	bx	lr
 802941e:	b510      	push	{r4, lr}
 8029420:	f811 4b01 	ldrb.w	r4, [r1], #1
 8029424:	f803 4f01 	strb.w	r4, [r3, #1]!
 8029428:	4291      	cmp	r1, r2
 802942a:	d1f9      	bne.n	8029420 <memcpy+0xe>
 802942c:	bd10      	pop	{r4, pc}
	...

08029430 <__register_exitproc>:
 8029430:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029434:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80294e8 <__register_exitproc+0xb8>
 8029438:	4606      	mov	r6, r0
 802943a:	f8d8 0000 	ldr.w	r0, [r8]
 802943e:	461f      	mov	r7, r3
 8029440:	460d      	mov	r5, r1
 8029442:	4691      	mov	r9, r2
 8029444:	f7ff ffe3 	bl	802940e <__retarget_lock_acquire_recursive>
 8029448:	4b23      	ldr	r3, [pc, #140]	; (80294d8 <__register_exitproc+0xa8>)
 802944a:	681c      	ldr	r4, [r3, #0]
 802944c:	b934      	cbnz	r4, 802945c <__register_exitproc+0x2c>
 802944e:	4c23      	ldr	r4, [pc, #140]	; (80294dc <__register_exitproc+0xac>)
 8029450:	601c      	str	r4, [r3, #0]
 8029452:	4b23      	ldr	r3, [pc, #140]	; (80294e0 <__register_exitproc+0xb0>)
 8029454:	b113      	cbz	r3, 802945c <__register_exitproc+0x2c>
 8029456:	681b      	ldr	r3, [r3, #0]
 8029458:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802945c:	6863      	ldr	r3, [r4, #4]
 802945e:	2b1f      	cmp	r3, #31
 8029460:	dd07      	ble.n	8029472 <__register_exitproc+0x42>
 8029462:	f8d8 0000 	ldr.w	r0, [r8]
 8029466:	f7ff ffd3 	bl	8029410 <__retarget_lock_release_recursive>
 802946a:	f04f 30ff 	mov.w	r0, #4294967295
 802946e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029472:	b32e      	cbz	r6, 80294c0 <__register_exitproc+0x90>
 8029474:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8029478:	b968      	cbnz	r0, 8029496 <__register_exitproc+0x66>
 802947a:	4b1a      	ldr	r3, [pc, #104]	; (80294e4 <__register_exitproc+0xb4>)
 802947c:	2b00      	cmp	r3, #0
 802947e:	d0f0      	beq.n	8029462 <__register_exitproc+0x32>
 8029480:	f44f 7084 	mov.w	r0, #264	; 0x108
 8029484:	f7ff fd14 	bl	8028eb0 <malloc>
 8029488:	2800      	cmp	r0, #0
 802948a:	d0ea      	beq.n	8029462 <__register_exitproc+0x32>
 802948c:	2300      	movs	r3, #0
 802948e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8029492:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8029496:	6863      	ldr	r3, [r4, #4]
 8029498:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802949c:	2201      	movs	r2, #1
 802949e:	409a      	lsls	r2, r3
 80294a0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80294a4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80294a8:	4313      	orrs	r3, r2
 80294aa:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80294ae:	2e02      	cmp	r6, #2
 80294b0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80294b4:	bf02      	ittt	eq
 80294b6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80294ba:	4313      	orreq	r3, r2
 80294bc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80294c0:	6863      	ldr	r3, [r4, #4]
 80294c2:	f8d8 0000 	ldr.w	r0, [r8]
 80294c6:	1c5a      	adds	r2, r3, #1
 80294c8:	3302      	adds	r3, #2
 80294ca:	6062      	str	r2, [r4, #4]
 80294cc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80294d0:	f7ff ff9e 	bl	8029410 <__retarget_lock_release_recursive>
 80294d4:	2000      	movs	r0, #0
 80294d6:	e7ca      	b.n	802946e <__register_exitproc+0x3e>
 80294d8:	200264bc 	.word	0x200264bc
 80294dc:	20026430 	.word	0x20026430
 80294e0:	0802c664 	.word	0x0802c664
 80294e4:	08028eb1 	.word	0x08028eb1
 80294e8:	20000394 	.word	0x20000394

080294ec <_free_r>:
 80294ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80294ee:	2900      	cmp	r1, #0
 80294f0:	d044      	beq.n	802957c <_free_r+0x90>
 80294f2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80294f6:	9001      	str	r0, [sp, #4]
 80294f8:	2b00      	cmp	r3, #0
 80294fa:	f1a1 0404 	sub.w	r4, r1, #4
 80294fe:	bfb8      	it	lt
 8029500:	18e4      	addlt	r4, r4, r3
 8029502:	f7ff fd85 	bl	8029010 <__malloc_lock>
 8029506:	4a1e      	ldr	r2, [pc, #120]	; (8029580 <_free_r+0x94>)
 8029508:	9801      	ldr	r0, [sp, #4]
 802950a:	6813      	ldr	r3, [r2, #0]
 802950c:	b933      	cbnz	r3, 802951c <_free_r+0x30>
 802950e:	6063      	str	r3, [r4, #4]
 8029510:	6014      	str	r4, [r2, #0]
 8029512:	b003      	add	sp, #12
 8029514:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8029518:	f7ff bd80 	b.w	802901c <__malloc_unlock>
 802951c:	42a3      	cmp	r3, r4
 802951e:	d908      	bls.n	8029532 <_free_r+0x46>
 8029520:	6825      	ldr	r5, [r4, #0]
 8029522:	1961      	adds	r1, r4, r5
 8029524:	428b      	cmp	r3, r1
 8029526:	bf01      	itttt	eq
 8029528:	6819      	ldreq	r1, [r3, #0]
 802952a:	685b      	ldreq	r3, [r3, #4]
 802952c:	1949      	addeq	r1, r1, r5
 802952e:	6021      	streq	r1, [r4, #0]
 8029530:	e7ed      	b.n	802950e <_free_r+0x22>
 8029532:	461a      	mov	r2, r3
 8029534:	685b      	ldr	r3, [r3, #4]
 8029536:	b10b      	cbz	r3, 802953c <_free_r+0x50>
 8029538:	42a3      	cmp	r3, r4
 802953a:	d9fa      	bls.n	8029532 <_free_r+0x46>
 802953c:	6811      	ldr	r1, [r2, #0]
 802953e:	1855      	adds	r5, r2, r1
 8029540:	42a5      	cmp	r5, r4
 8029542:	d10b      	bne.n	802955c <_free_r+0x70>
 8029544:	6824      	ldr	r4, [r4, #0]
 8029546:	4421      	add	r1, r4
 8029548:	1854      	adds	r4, r2, r1
 802954a:	42a3      	cmp	r3, r4
 802954c:	6011      	str	r1, [r2, #0]
 802954e:	d1e0      	bne.n	8029512 <_free_r+0x26>
 8029550:	681c      	ldr	r4, [r3, #0]
 8029552:	685b      	ldr	r3, [r3, #4]
 8029554:	6053      	str	r3, [r2, #4]
 8029556:	440c      	add	r4, r1
 8029558:	6014      	str	r4, [r2, #0]
 802955a:	e7da      	b.n	8029512 <_free_r+0x26>
 802955c:	d902      	bls.n	8029564 <_free_r+0x78>
 802955e:	230c      	movs	r3, #12
 8029560:	6003      	str	r3, [r0, #0]
 8029562:	e7d6      	b.n	8029512 <_free_r+0x26>
 8029564:	6825      	ldr	r5, [r4, #0]
 8029566:	1961      	adds	r1, r4, r5
 8029568:	428b      	cmp	r3, r1
 802956a:	bf04      	itt	eq
 802956c:	6819      	ldreq	r1, [r3, #0]
 802956e:	685b      	ldreq	r3, [r3, #4]
 8029570:	6063      	str	r3, [r4, #4]
 8029572:	bf04      	itt	eq
 8029574:	1949      	addeq	r1, r1, r5
 8029576:	6021      	streq	r1, [r4, #0]
 8029578:	6054      	str	r4, [r2, #4]
 802957a:	e7ca      	b.n	8029512 <_free_r+0x26>
 802957c:	b003      	add	sp, #12
 802957e:	bd30      	pop	{r4, r5, pc}
 8029580:	200262e4 	.word	0x200262e4

08029584 <__sfputc_r>:
 8029584:	6893      	ldr	r3, [r2, #8]
 8029586:	3b01      	subs	r3, #1
 8029588:	2b00      	cmp	r3, #0
 802958a:	b410      	push	{r4}
 802958c:	6093      	str	r3, [r2, #8]
 802958e:	da08      	bge.n	80295a2 <__sfputc_r+0x1e>
 8029590:	6994      	ldr	r4, [r2, #24]
 8029592:	42a3      	cmp	r3, r4
 8029594:	db01      	blt.n	802959a <__sfputc_r+0x16>
 8029596:	290a      	cmp	r1, #10
 8029598:	d103      	bne.n	80295a2 <__sfputc_r+0x1e>
 802959a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802959e:	f000 bb73 	b.w	8029c88 <__swbuf_r>
 80295a2:	6813      	ldr	r3, [r2, #0]
 80295a4:	1c58      	adds	r0, r3, #1
 80295a6:	6010      	str	r0, [r2, #0]
 80295a8:	7019      	strb	r1, [r3, #0]
 80295aa:	4608      	mov	r0, r1
 80295ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80295b0:	4770      	bx	lr

080295b2 <__sfputs_r>:
 80295b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80295b4:	4606      	mov	r6, r0
 80295b6:	460f      	mov	r7, r1
 80295b8:	4614      	mov	r4, r2
 80295ba:	18d5      	adds	r5, r2, r3
 80295bc:	42ac      	cmp	r4, r5
 80295be:	d101      	bne.n	80295c4 <__sfputs_r+0x12>
 80295c0:	2000      	movs	r0, #0
 80295c2:	e007      	b.n	80295d4 <__sfputs_r+0x22>
 80295c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80295c8:	463a      	mov	r2, r7
 80295ca:	4630      	mov	r0, r6
 80295cc:	f7ff ffda 	bl	8029584 <__sfputc_r>
 80295d0:	1c43      	adds	r3, r0, #1
 80295d2:	d1f3      	bne.n	80295bc <__sfputs_r+0xa>
 80295d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080295d8 <_vfiprintf_r>:
 80295d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80295dc:	460d      	mov	r5, r1
 80295de:	b09d      	sub	sp, #116	; 0x74
 80295e0:	4614      	mov	r4, r2
 80295e2:	4698      	mov	r8, r3
 80295e4:	4606      	mov	r6, r0
 80295e6:	b118      	cbz	r0, 80295f0 <_vfiprintf_r+0x18>
 80295e8:	6a03      	ldr	r3, [r0, #32]
 80295ea:	b90b      	cbnz	r3, 80295f0 <_vfiprintf_r+0x18>
 80295ec:	f7ff fdb6 	bl	802915c <__sinit>
 80295f0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80295f2:	07d9      	lsls	r1, r3, #31
 80295f4:	d405      	bmi.n	8029602 <_vfiprintf_r+0x2a>
 80295f6:	89ab      	ldrh	r3, [r5, #12]
 80295f8:	059a      	lsls	r2, r3, #22
 80295fa:	d402      	bmi.n	8029602 <_vfiprintf_r+0x2a>
 80295fc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80295fe:	f7ff ff06 	bl	802940e <__retarget_lock_acquire_recursive>
 8029602:	89ab      	ldrh	r3, [r5, #12]
 8029604:	071b      	lsls	r3, r3, #28
 8029606:	d501      	bpl.n	802960c <_vfiprintf_r+0x34>
 8029608:	692b      	ldr	r3, [r5, #16]
 802960a:	b99b      	cbnz	r3, 8029634 <_vfiprintf_r+0x5c>
 802960c:	4629      	mov	r1, r5
 802960e:	4630      	mov	r0, r6
 8029610:	f000 fb78 	bl	8029d04 <__swsetup_r>
 8029614:	b170      	cbz	r0, 8029634 <_vfiprintf_r+0x5c>
 8029616:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8029618:	07dc      	lsls	r4, r3, #31
 802961a:	d504      	bpl.n	8029626 <_vfiprintf_r+0x4e>
 802961c:	f04f 30ff 	mov.w	r0, #4294967295
 8029620:	b01d      	add	sp, #116	; 0x74
 8029622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029626:	89ab      	ldrh	r3, [r5, #12]
 8029628:	0598      	lsls	r0, r3, #22
 802962a:	d4f7      	bmi.n	802961c <_vfiprintf_r+0x44>
 802962c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802962e:	f7ff feef 	bl	8029410 <__retarget_lock_release_recursive>
 8029632:	e7f3      	b.n	802961c <_vfiprintf_r+0x44>
 8029634:	2300      	movs	r3, #0
 8029636:	9309      	str	r3, [sp, #36]	; 0x24
 8029638:	2320      	movs	r3, #32
 802963a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802963e:	f8cd 800c 	str.w	r8, [sp, #12]
 8029642:	2330      	movs	r3, #48	; 0x30
 8029644:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 80297f8 <_vfiprintf_r+0x220>
 8029648:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802964c:	f04f 0901 	mov.w	r9, #1
 8029650:	4623      	mov	r3, r4
 8029652:	469a      	mov	sl, r3
 8029654:	f813 2b01 	ldrb.w	r2, [r3], #1
 8029658:	b10a      	cbz	r2, 802965e <_vfiprintf_r+0x86>
 802965a:	2a25      	cmp	r2, #37	; 0x25
 802965c:	d1f9      	bne.n	8029652 <_vfiprintf_r+0x7a>
 802965e:	ebba 0b04 	subs.w	fp, sl, r4
 8029662:	d00b      	beq.n	802967c <_vfiprintf_r+0xa4>
 8029664:	465b      	mov	r3, fp
 8029666:	4622      	mov	r2, r4
 8029668:	4629      	mov	r1, r5
 802966a:	4630      	mov	r0, r6
 802966c:	f7ff ffa1 	bl	80295b2 <__sfputs_r>
 8029670:	3001      	adds	r0, #1
 8029672:	f000 80a9 	beq.w	80297c8 <_vfiprintf_r+0x1f0>
 8029676:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029678:	445a      	add	r2, fp
 802967a:	9209      	str	r2, [sp, #36]	; 0x24
 802967c:	f89a 3000 	ldrb.w	r3, [sl]
 8029680:	2b00      	cmp	r3, #0
 8029682:	f000 80a1 	beq.w	80297c8 <_vfiprintf_r+0x1f0>
 8029686:	2300      	movs	r3, #0
 8029688:	f04f 32ff 	mov.w	r2, #4294967295
 802968c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8029690:	f10a 0a01 	add.w	sl, sl, #1
 8029694:	9304      	str	r3, [sp, #16]
 8029696:	9307      	str	r3, [sp, #28]
 8029698:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802969c:	931a      	str	r3, [sp, #104]	; 0x68
 802969e:	4654      	mov	r4, sl
 80296a0:	2205      	movs	r2, #5
 80296a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80296a6:	4854      	ldr	r0, [pc, #336]	; (80297f8 <_vfiprintf_r+0x220>)
 80296a8:	f7d6 fdaa 	bl	8000200 <memchr>
 80296ac:	9a04      	ldr	r2, [sp, #16]
 80296ae:	b9d8      	cbnz	r0, 80296e8 <_vfiprintf_r+0x110>
 80296b0:	06d1      	lsls	r1, r2, #27
 80296b2:	bf44      	itt	mi
 80296b4:	2320      	movmi	r3, #32
 80296b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80296ba:	0713      	lsls	r3, r2, #28
 80296bc:	bf44      	itt	mi
 80296be:	232b      	movmi	r3, #43	; 0x2b
 80296c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80296c4:	f89a 3000 	ldrb.w	r3, [sl]
 80296c8:	2b2a      	cmp	r3, #42	; 0x2a
 80296ca:	d015      	beq.n	80296f8 <_vfiprintf_r+0x120>
 80296cc:	9a07      	ldr	r2, [sp, #28]
 80296ce:	4654      	mov	r4, sl
 80296d0:	2000      	movs	r0, #0
 80296d2:	f04f 0c0a 	mov.w	ip, #10
 80296d6:	4621      	mov	r1, r4
 80296d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80296dc:	3b30      	subs	r3, #48	; 0x30
 80296de:	2b09      	cmp	r3, #9
 80296e0:	d94d      	bls.n	802977e <_vfiprintf_r+0x1a6>
 80296e2:	b1b0      	cbz	r0, 8029712 <_vfiprintf_r+0x13a>
 80296e4:	9207      	str	r2, [sp, #28]
 80296e6:	e014      	b.n	8029712 <_vfiprintf_r+0x13a>
 80296e8:	eba0 0308 	sub.w	r3, r0, r8
 80296ec:	fa09 f303 	lsl.w	r3, r9, r3
 80296f0:	4313      	orrs	r3, r2
 80296f2:	9304      	str	r3, [sp, #16]
 80296f4:	46a2      	mov	sl, r4
 80296f6:	e7d2      	b.n	802969e <_vfiprintf_r+0xc6>
 80296f8:	9b03      	ldr	r3, [sp, #12]
 80296fa:	1d19      	adds	r1, r3, #4
 80296fc:	681b      	ldr	r3, [r3, #0]
 80296fe:	9103      	str	r1, [sp, #12]
 8029700:	2b00      	cmp	r3, #0
 8029702:	bfbb      	ittet	lt
 8029704:	425b      	neglt	r3, r3
 8029706:	f042 0202 	orrlt.w	r2, r2, #2
 802970a:	9307      	strge	r3, [sp, #28]
 802970c:	9307      	strlt	r3, [sp, #28]
 802970e:	bfb8      	it	lt
 8029710:	9204      	strlt	r2, [sp, #16]
 8029712:	7823      	ldrb	r3, [r4, #0]
 8029714:	2b2e      	cmp	r3, #46	; 0x2e
 8029716:	d10c      	bne.n	8029732 <_vfiprintf_r+0x15a>
 8029718:	7863      	ldrb	r3, [r4, #1]
 802971a:	2b2a      	cmp	r3, #42	; 0x2a
 802971c:	d134      	bne.n	8029788 <_vfiprintf_r+0x1b0>
 802971e:	9b03      	ldr	r3, [sp, #12]
 8029720:	1d1a      	adds	r2, r3, #4
 8029722:	681b      	ldr	r3, [r3, #0]
 8029724:	9203      	str	r2, [sp, #12]
 8029726:	2b00      	cmp	r3, #0
 8029728:	bfb8      	it	lt
 802972a:	f04f 33ff 	movlt.w	r3, #4294967295
 802972e:	3402      	adds	r4, #2
 8029730:	9305      	str	r3, [sp, #20]
 8029732:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8029808 <_vfiprintf_r+0x230>
 8029736:	7821      	ldrb	r1, [r4, #0]
 8029738:	2203      	movs	r2, #3
 802973a:	4650      	mov	r0, sl
 802973c:	f7d6 fd60 	bl	8000200 <memchr>
 8029740:	b138      	cbz	r0, 8029752 <_vfiprintf_r+0x17a>
 8029742:	9b04      	ldr	r3, [sp, #16]
 8029744:	eba0 000a 	sub.w	r0, r0, sl
 8029748:	2240      	movs	r2, #64	; 0x40
 802974a:	4082      	lsls	r2, r0
 802974c:	4313      	orrs	r3, r2
 802974e:	3401      	adds	r4, #1
 8029750:	9304      	str	r3, [sp, #16]
 8029752:	f814 1b01 	ldrb.w	r1, [r4], #1
 8029756:	4829      	ldr	r0, [pc, #164]	; (80297fc <_vfiprintf_r+0x224>)
 8029758:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802975c:	2206      	movs	r2, #6
 802975e:	f7d6 fd4f 	bl	8000200 <memchr>
 8029762:	2800      	cmp	r0, #0
 8029764:	d03f      	beq.n	80297e6 <_vfiprintf_r+0x20e>
 8029766:	4b26      	ldr	r3, [pc, #152]	; (8029800 <_vfiprintf_r+0x228>)
 8029768:	bb1b      	cbnz	r3, 80297b2 <_vfiprintf_r+0x1da>
 802976a:	9b03      	ldr	r3, [sp, #12]
 802976c:	3307      	adds	r3, #7
 802976e:	f023 0307 	bic.w	r3, r3, #7
 8029772:	3308      	adds	r3, #8
 8029774:	9303      	str	r3, [sp, #12]
 8029776:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029778:	443b      	add	r3, r7
 802977a:	9309      	str	r3, [sp, #36]	; 0x24
 802977c:	e768      	b.n	8029650 <_vfiprintf_r+0x78>
 802977e:	fb0c 3202 	mla	r2, ip, r2, r3
 8029782:	460c      	mov	r4, r1
 8029784:	2001      	movs	r0, #1
 8029786:	e7a6      	b.n	80296d6 <_vfiprintf_r+0xfe>
 8029788:	2300      	movs	r3, #0
 802978a:	3401      	adds	r4, #1
 802978c:	9305      	str	r3, [sp, #20]
 802978e:	4619      	mov	r1, r3
 8029790:	f04f 0c0a 	mov.w	ip, #10
 8029794:	4620      	mov	r0, r4
 8029796:	f810 2b01 	ldrb.w	r2, [r0], #1
 802979a:	3a30      	subs	r2, #48	; 0x30
 802979c:	2a09      	cmp	r2, #9
 802979e:	d903      	bls.n	80297a8 <_vfiprintf_r+0x1d0>
 80297a0:	2b00      	cmp	r3, #0
 80297a2:	d0c6      	beq.n	8029732 <_vfiprintf_r+0x15a>
 80297a4:	9105      	str	r1, [sp, #20]
 80297a6:	e7c4      	b.n	8029732 <_vfiprintf_r+0x15a>
 80297a8:	fb0c 2101 	mla	r1, ip, r1, r2
 80297ac:	4604      	mov	r4, r0
 80297ae:	2301      	movs	r3, #1
 80297b0:	e7f0      	b.n	8029794 <_vfiprintf_r+0x1bc>
 80297b2:	ab03      	add	r3, sp, #12
 80297b4:	9300      	str	r3, [sp, #0]
 80297b6:	462a      	mov	r2, r5
 80297b8:	4b12      	ldr	r3, [pc, #72]	; (8029804 <_vfiprintf_r+0x22c>)
 80297ba:	a904      	add	r1, sp, #16
 80297bc:	4630      	mov	r0, r6
 80297be:	f3af 8000 	nop.w
 80297c2:	4607      	mov	r7, r0
 80297c4:	1c78      	adds	r0, r7, #1
 80297c6:	d1d6      	bne.n	8029776 <_vfiprintf_r+0x19e>
 80297c8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80297ca:	07d9      	lsls	r1, r3, #31
 80297cc:	d405      	bmi.n	80297da <_vfiprintf_r+0x202>
 80297ce:	89ab      	ldrh	r3, [r5, #12]
 80297d0:	059a      	lsls	r2, r3, #22
 80297d2:	d402      	bmi.n	80297da <_vfiprintf_r+0x202>
 80297d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80297d6:	f7ff fe1b 	bl	8029410 <__retarget_lock_release_recursive>
 80297da:	89ab      	ldrh	r3, [r5, #12]
 80297dc:	065b      	lsls	r3, r3, #25
 80297de:	f53f af1d 	bmi.w	802961c <_vfiprintf_r+0x44>
 80297e2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80297e4:	e71c      	b.n	8029620 <_vfiprintf_r+0x48>
 80297e6:	ab03      	add	r3, sp, #12
 80297e8:	9300      	str	r3, [sp, #0]
 80297ea:	462a      	mov	r2, r5
 80297ec:	4b05      	ldr	r3, [pc, #20]	; (8029804 <_vfiprintf_r+0x22c>)
 80297ee:	a904      	add	r1, sp, #16
 80297f0:	4630      	mov	r0, r6
 80297f2:	f000 f879 	bl	80298e8 <_printf_i>
 80297f6:	e7e4      	b.n	80297c2 <_vfiprintf_r+0x1ea>
 80297f8:	0802c668 	.word	0x0802c668
 80297fc:	0802c672 	.word	0x0802c672
 8029800:	00000000 	.word	0x00000000
 8029804:	080295b3 	.word	0x080295b3
 8029808:	0802c66e 	.word	0x0802c66e

0802980c <_printf_common>:
 802980c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8029810:	4616      	mov	r6, r2
 8029812:	4699      	mov	r9, r3
 8029814:	688a      	ldr	r2, [r1, #8]
 8029816:	690b      	ldr	r3, [r1, #16]
 8029818:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802981c:	4293      	cmp	r3, r2
 802981e:	bfb8      	it	lt
 8029820:	4613      	movlt	r3, r2
 8029822:	6033      	str	r3, [r6, #0]
 8029824:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8029828:	4607      	mov	r7, r0
 802982a:	460c      	mov	r4, r1
 802982c:	b10a      	cbz	r2, 8029832 <_printf_common+0x26>
 802982e:	3301      	adds	r3, #1
 8029830:	6033      	str	r3, [r6, #0]
 8029832:	6823      	ldr	r3, [r4, #0]
 8029834:	0699      	lsls	r1, r3, #26
 8029836:	bf42      	ittt	mi
 8029838:	6833      	ldrmi	r3, [r6, #0]
 802983a:	3302      	addmi	r3, #2
 802983c:	6033      	strmi	r3, [r6, #0]
 802983e:	6825      	ldr	r5, [r4, #0]
 8029840:	f015 0506 	ands.w	r5, r5, #6
 8029844:	d106      	bne.n	8029854 <_printf_common+0x48>
 8029846:	f104 0a19 	add.w	sl, r4, #25
 802984a:	68e3      	ldr	r3, [r4, #12]
 802984c:	6832      	ldr	r2, [r6, #0]
 802984e:	1a9b      	subs	r3, r3, r2
 8029850:	42ab      	cmp	r3, r5
 8029852:	dc26      	bgt.n	80298a2 <_printf_common+0x96>
 8029854:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8029858:	1e13      	subs	r3, r2, #0
 802985a:	6822      	ldr	r2, [r4, #0]
 802985c:	bf18      	it	ne
 802985e:	2301      	movne	r3, #1
 8029860:	0692      	lsls	r2, r2, #26
 8029862:	d42b      	bmi.n	80298bc <_printf_common+0xb0>
 8029864:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8029868:	4649      	mov	r1, r9
 802986a:	4638      	mov	r0, r7
 802986c:	47c0      	blx	r8
 802986e:	3001      	adds	r0, #1
 8029870:	d01e      	beq.n	80298b0 <_printf_common+0xa4>
 8029872:	6823      	ldr	r3, [r4, #0]
 8029874:	6922      	ldr	r2, [r4, #16]
 8029876:	f003 0306 	and.w	r3, r3, #6
 802987a:	2b04      	cmp	r3, #4
 802987c:	bf02      	ittt	eq
 802987e:	68e5      	ldreq	r5, [r4, #12]
 8029880:	6833      	ldreq	r3, [r6, #0]
 8029882:	1aed      	subeq	r5, r5, r3
 8029884:	68a3      	ldr	r3, [r4, #8]
 8029886:	bf0c      	ite	eq
 8029888:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802988c:	2500      	movne	r5, #0
 802988e:	4293      	cmp	r3, r2
 8029890:	bfc4      	itt	gt
 8029892:	1a9b      	subgt	r3, r3, r2
 8029894:	18ed      	addgt	r5, r5, r3
 8029896:	2600      	movs	r6, #0
 8029898:	341a      	adds	r4, #26
 802989a:	42b5      	cmp	r5, r6
 802989c:	d11a      	bne.n	80298d4 <_printf_common+0xc8>
 802989e:	2000      	movs	r0, #0
 80298a0:	e008      	b.n	80298b4 <_printf_common+0xa8>
 80298a2:	2301      	movs	r3, #1
 80298a4:	4652      	mov	r2, sl
 80298a6:	4649      	mov	r1, r9
 80298a8:	4638      	mov	r0, r7
 80298aa:	47c0      	blx	r8
 80298ac:	3001      	adds	r0, #1
 80298ae:	d103      	bne.n	80298b8 <_printf_common+0xac>
 80298b0:	f04f 30ff 	mov.w	r0, #4294967295
 80298b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80298b8:	3501      	adds	r5, #1
 80298ba:	e7c6      	b.n	802984a <_printf_common+0x3e>
 80298bc:	18e1      	adds	r1, r4, r3
 80298be:	1c5a      	adds	r2, r3, #1
 80298c0:	2030      	movs	r0, #48	; 0x30
 80298c2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80298c6:	4422      	add	r2, r4
 80298c8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80298cc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80298d0:	3302      	adds	r3, #2
 80298d2:	e7c7      	b.n	8029864 <_printf_common+0x58>
 80298d4:	2301      	movs	r3, #1
 80298d6:	4622      	mov	r2, r4
 80298d8:	4649      	mov	r1, r9
 80298da:	4638      	mov	r0, r7
 80298dc:	47c0      	blx	r8
 80298de:	3001      	adds	r0, #1
 80298e0:	d0e6      	beq.n	80298b0 <_printf_common+0xa4>
 80298e2:	3601      	adds	r6, #1
 80298e4:	e7d9      	b.n	802989a <_printf_common+0x8e>
	...

080298e8 <_printf_i>:
 80298e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80298ec:	7e0f      	ldrb	r7, [r1, #24]
 80298ee:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80298f0:	2f78      	cmp	r7, #120	; 0x78
 80298f2:	4691      	mov	r9, r2
 80298f4:	4680      	mov	r8, r0
 80298f6:	460c      	mov	r4, r1
 80298f8:	469a      	mov	sl, r3
 80298fa:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80298fe:	d807      	bhi.n	8029910 <_printf_i+0x28>
 8029900:	2f62      	cmp	r7, #98	; 0x62
 8029902:	d80a      	bhi.n	802991a <_printf_i+0x32>
 8029904:	2f00      	cmp	r7, #0
 8029906:	f000 80d4 	beq.w	8029ab2 <_printf_i+0x1ca>
 802990a:	2f58      	cmp	r7, #88	; 0x58
 802990c:	f000 80c0 	beq.w	8029a90 <_printf_i+0x1a8>
 8029910:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8029914:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8029918:	e03a      	b.n	8029990 <_printf_i+0xa8>
 802991a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802991e:	2b15      	cmp	r3, #21
 8029920:	d8f6      	bhi.n	8029910 <_printf_i+0x28>
 8029922:	a101      	add	r1, pc, #4	; (adr r1, 8029928 <_printf_i+0x40>)
 8029924:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8029928:	08029981 	.word	0x08029981
 802992c:	08029995 	.word	0x08029995
 8029930:	08029911 	.word	0x08029911
 8029934:	08029911 	.word	0x08029911
 8029938:	08029911 	.word	0x08029911
 802993c:	08029911 	.word	0x08029911
 8029940:	08029995 	.word	0x08029995
 8029944:	08029911 	.word	0x08029911
 8029948:	08029911 	.word	0x08029911
 802994c:	08029911 	.word	0x08029911
 8029950:	08029911 	.word	0x08029911
 8029954:	08029a99 	.word	0x08029a99
 8029958:	080299c1 	.word	0x080299c1
 802995c:	08029a53 	.word	0x08029a53
 8029960:	08029911 	.word	0x08029911
 8029964:	08029911 	.word	0x08029911
 8029968:	08029abb 	.word	0x08029abb
 802996c:	08029911 	.word	0x08029911
 8029970:	080299c1 	.word	0x080299c1
 8029974:	08029911 	.word	0x08029911
 8029978:	08029911 	.word	0x08029911
 802997c:	08029a5b 	.word	0x08029a5b
 8029980:	682b      	ldr	r3, [r5, #0]
 8029982:	1d1a      	adds	r2, r3, #4
 8029984:	681b      	ldr	r3, [r3, #0]
 8029986:	602a      	str	r2, [r5, #0]
 8029988:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802998c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8029990:	2301      	movs	r3, #1
 8029992:	e09f      	b.n	8029ad4 <_printf_i+0x1ec>
 8029994:	6820      	ldr	r0, [r4, #0]
 8029996:	682b      	ldr	r3, [r5, #0]
 8029998:	0607      	lsls	r7, r0, #24
 802999a:	f103 0104 	add.w	r1, r3, #4
 802999e:	6029      	str	r1, [r5, #0]
 80299a0:	d501      	bpl.n	80299a6 <_printf_i+0xbe>
 80299a2:	681e      	ldr	r6, [r3, #0]
 80299a4:	e003      	b.n	80299ae <_printf_i+0xc6>
 80299a6:	0646      	lsls	r6, r0, #25
 80299a8:	d5fb      	bpl.n	80299a2 <_printf_i+0xba>
 80299aa:	f9b3 6000 	ldrsh.w	r6, [r3]
 80299ae:	2e00      	cmp	r6, #0
 80299b0:	da03      	bge.n	80299ba <_printf_i+0xd2>
 80299b2:	232d      	movs	r3, #45	; 0x2d
 80299b4:	4276      	negs	r6, r6
 80299b6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80299ba:	485a      	ldr	r0, [pc, #360]	; (8029b24 <_printf_i+0x23c>)
 80299bc:	230a      	movs	r3, #10
 80299be:	e012      	b.n	80299e6 <_printf_i+0xfe>
 80299c0:	682b      	ldr	r3, [r5, #0]
 80299c2:	6820      	ldr	r0, [r4, #0]
 80299c4:	1d19      	adds	r1, r3, #4
 80299c6:	6029      	str	r1, [r5, #0]
 80299c8:	0605      	lsls	r5, r0, #24
 80299ca:	d501      	bpl.n	80299d0 <_printf_i+0xe8>
 80299cc:	681e      	ldr	r6, [r3, #0]
 80299ce:	e002      	b.n	80299d6 <_printf_i+0xee>
 80299d0:	0641      	lsls	r1, r0, #25
 80299d2:	d5fb      	bpl.n	80299cc <_printf_i+0xe4>
 80299d4:	881e      	ldrh	r6, [r3, #0]
 80299d6:	4853      	ldr	r0, [pc, #332]	; (8029b24 <_printf_i+0x23c>)
 80299d8:	2f6f      	cmp	r7, #111	; 0x6f
 80299da:	bf0c      	ite	eq
 80299dc:	2308      	moveq	r3, #8
 80299de:	230a      	movne	r3, #10
 80299e0:	2100      	movs	r1, #0
 80299e2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80299e6:	6865      	ldr	r5, [r4, #4]
 80299e8:	60a5      	str	r5, [r4, #8]
 80299ea:	2d00      	cmp	r5, #0
 80299ec:	bfa2      	ittt	ge
 80299ee:	6821      	ldrge	r1, [r4, #0]
 80299f0:	f021 0104 	bicge.w	r1, r1, #4
 80299f4:	6021      	strge	r1, [r4, #0]
 80299f6:	b90e      	cbnz	r6, 80299fc <_printf_i+0x114>
 80299f8:	2d00      	cmp	r5, #0
 80299fa:	d04b      	beq.n	8029a94 <_printf_i+0x1ac>
 80299fc:	4615      	mov	r5, r2
 80299fe:	fbb6 f1f3 	udiv	r1, r6, r3
 8029a02:	fb03 6711 	mls	r7, r3, r1, r6
 8029a06:	5dc7      	ldrb	r7, [r0, r7]
 8029a08:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8029a0c:	4637      	mov	r7, r6
 8029a0e:	42bb      	cmp	r3, r7
 8029a10:	460e      	mov	r6, r1
 8029a12:	d9f4      	bls.n	80299fe <_printf_i+0x116>
 8029a14:	2b08      	cmp	r3, #8
 8029a16:	d10b      	bne.n	8029a30 <_printf_i+0x148>
 8029a18:	6823      	ldr	r3, [r4, #0]
 8029a1a:	07de      	lsls	r6, r3, #31
 8029a1c:	d508      	bpl.n	8029a30 <_printf_i+0x148>
 8029a1e:	6923      	ldr	r3, [r4, #16]
 8029a20:	6861      	ldr	r1, [r4, #4]
 8029a22:	4299      	cmp	r1, r3
 8029a24:	bfde      	ittt	le
 8029a26:	2330      	movle	r3, #48	; 0x30
 8029a28:	f805 3c01 	strble.w	r3, [r5, #-1]
 8029a2c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8029a30:	1b52      	subs	r2, r2, r5
 8029a32:	6122      	str	r2, [r4, #16]
 8029a34:	f8cd a000 	str.w	sl, [sp]
 8029a38:	464b      	mov	r3, r9
 8029a3a:	aa03      	add	r2, sp, #12
 8029a3c:	4621      	mov	r1, r4
 8029a3e:	4640      	mov	r0, r8
 8029a40:	f7ff fee4 	bl	802980c <_printf_common>
 8029a44:	3001      	adds	r0, #1
 8029a46:	d14a      	bne.n	8029ade <_printf_i+0x1f6>
 8029a48:	f04f 30ff 	mov.w	r0, #4294967295
 8029a4c:	b004      	add	sp, #16
 8029a4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029a52:	6823      	ldr	r3, [r4, #0]
 8029a54:	f043 0320 	orr.w	r3, r3, #32
 8029a58:	6023      	str	r3, [r4, #0]
 8029a5a:	4833      	ldr	r0, [pc, #204]	; (8029b28 <_printf_i+0x240>)
 8029a5c:	2778      	movs	r7, #120	; 0x78
 8029a5e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8029a62:	6823      	ldr	r3, [r4, #0]
 8029a64:	6829      	ldr	r1, [r5, #0]
 8029a66:	061f      	lsls	r7, r3, #24
 8029a68:	f851 6b04 	ldr.w	r6, [r1], #4
 8029a6c:	d402      	bmi.n	8029a74 <_printf_i+0x18c>
 8029a6e:	065f      	lsls	r7, r3, #25
 8029a70:	bf48      	it	mi
 8029a72:	b2b6      	uxthmi	r6, r6
 8029a74:	07df      	lsls	r7, r3, #31
 8029a76:	bf48      	it	mi
 8029a78:	f043 0320 	orrmi.w	r3, r3, #32
 8029a7c:	6029      	str	r1, [r5, #0]
 8029a7e:	bf48      	it	mi
 8029a80:	6023      	strmi	r3, [r4, #0]
 8029a82:	b91e      	cbnz	r6, 8029a8c <_printf_i+0x1a4>
 8029a84:	6823      	ldr	r3, [r4, #0]
 8029a86:	f023 0320 	bic.w	r3, r3, #32
 8029a8a:	6023      	str	r3, [r4, #0]
 8029a8c:	2310      	movs	r3, #16
 8029a8e:	e7a7      	b.n	80299e0 <_printf_i+0xf8>
 8029a90:	4824      	ldr	r0, [pc, #144]	; (8029b24 <_printf_i+0x23c>)
 8029a92:	e7e4      	b.n	8029a5e <_printf_i+0x176>
 8029a94:	4615      	mov	r5, r2
 8029a96:	e7bd      	b.n	8029a14 <_printf_i+0x12c>
 8029a98:	682b      	ldr	r3, [r5, #0]
 8029a9a:	6826      	ldr	r6, [r4, #0]
 8029a9c:	6961      	ldr	r1, [r4, #20]
 8029a9e:	1d18      	adds	r0, r3, #4
 8029aa0:	6028      	str	r0, [r5, #0]
 8029aa2:	0635      	lsls	r5, r6, #24
 8029aa4:	681b      	ldr	r3, [r3, #0]
 8029aa6:	d501      	bpl.n	8029aac <_printf_i+0x1c4>
 8029aa8:	6019      	str	r1, [r3, #0]
 8029aaa:	e002      	b.n	8029ab2 <_printf_i+0x1ca>
 8029aac:	0670      	lsls	r0, r6, #25
 8029aae:	d5fb      	bpl.n	8029aa8 <_printf_i+0x1c0>
 8029ab0:	8019      	strh	r1, [r3, #0]
 8029ab2:	2300      	movs	r3, #0
 8029ab4:	6123      	str	r3, [r4, #16]
 8029ab6:	4615      	mov	r5, r2
 8029ab8:	e7bc      	b.n	8029a34 <_printf_i+0x14c>
 8029aba:	682b      	ldr	r3, [r5, #0]
 8029abc:	1d1a      	adds	r2, r3, #4
 8029abe:	602a      	str	r2, [r5, #0]
 8029ac0:	681d      	ldr	r5, [r3, #0]
 8029ac2:	6862      	ldr	r2, [r4, #4]
 8029ac4:	2100      	movs	r1, #0
 8029ac6:	4628      	mov	r0, r5
 8029ac8:	f7d6 fb9a 	bl	8000200 <memchr>
 8029acc:	b108      	cbz	r0, 8029ad2 <_printf_i+0x1ea>
 8029ace:	1b40      	subs	r0, r0, r5
 8029ad0:	6060      	str	r0, [r4, #4]
 8029ad2:	6863      	ldr	r3, [r4, #4]
 8029ad4:	6123      	str	r3, [r4, #16]
 8029ad6:	2300      	movs	r3, #0
 8029ad8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8029adc:	e7aa      	b.n	8029a34 <_printf_i+0x14c>
 8029ade:	6923      	ldr	r3, [r4, #16]
 8029ae0:	462a      	mov	r2, r5
 8029ae2:	4649      	mov	r1, r9
 8029ae4:	4640      	mov	r0, r8
 8029ae6:	47d0      	blx	sl
 8029ae8:	3001      	adds	r0, #1
 8029aea:	d0ad      	beq.n	8029a48 <_printf_i+0x160>
 8029aec:	6823      	ldr	r3, [r4, #0]
 8029aee:	079b      	lsls	r3, r3, #30
 8029af0:	d413      	bmi.n	8029b1a <_printf_i+0x232>
 8029af2:	68e0      	ldr	r0, [r4, #12]
 8029af4:	9b03      	ldr	r3, [sp, #12]
 8029af6:	4298      	cmp	r0, r3
 8029af8:	bfb8      	it	lt
 8029afa:	4618      	movlt	r0, r3
 8029afc:	e7a6      	b.n	8029a4c <_printf_i+0x164>
 8029afe:	2301      	movs	r3, #1
 8029b00:	4632      	mov	r2, r6
 8029b02:	4649      	mov	r1, r9
 8029b04:	4640      	mov	r0, r8
 8029b06:	47d0      	blx	sl
 8029b08:	3001      	adds	r0, #1
 8029b0a:	d09d      	beq.n	8029a48 <_printf_i+0x160>
 8029b0c:	3501      	adds	r5, #1
 8029b0e:	68e3      	ldr	r3, [r4, #12]
 8029b10:	9903      	ldr	r1, [sp, #12]
 8029b12:	1a5b      	subs	r3, r3, r1
 8029b14:	42ab      	cmp	r3, r5
 8029b16:	dcf2      	bgt.n	8029afe <_printf_i+0x216>
 8029b18:	e7eb      	b.n	8029af2 <_printf_i+0x20a>
 8029b1a:	2500      	movs	r5, #0
 8029b1c:	f104 0619 	add.w	r6, r4, #25
 8029b20:	e7f5      	b.n	8029b0e <_printf_i+0x226>
 8029b22:	bf00      	nop
 8029b24:	0802c679 	.word	0x0802c679
 8029b28:	0802c68a 	.word	0x0802c68a

08029b2c <__sflush_r>:
 8029b2c:	898a      	ldrh	r2, [r1, #12]
 8029b2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029b32:	4605      	mov	r5, r0
 8029b34:	0710      	lsls	r0, r2, #28
 8029b36:	460c      	mov	r4, r1
 8029b38:	d458      	bmi.n	8029bec <__sflush_r+0xc0>
 8029b3a:	684b      	ldr	r3, [r1, #4]
 8029b3c:	2b00      	cmp	r3, #0
 8029b3e:	dc05      	bgt.n	8029b4c <__sflush_r+0x20>
 8029b40:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8029b42:	2b00      	cmp	r3, #0
 8029b44:	dc02      	bgt.n	8029b4c <__sflush_r+0x20>
 8029b46:	2000      	movs	r0, #0
 8029b48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029b4c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8029b4e:	2e00      	cmp	r6, #0
 8029b50:	d0f9      	beq.n	8029b46 <__sflush_r+0x1a>
 8029b52:	2300      	movs	r3, #0
 8029b54:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8029b58:	682f      	ldr	r7, [r5, #0]
 8029b5a:	6a21      	ldr	r1, [r4, #32]
 8029b5c:	602b      	str	r3, [r5, #0]
 8029b5e:	d032      	beq.n	8029bc6 <__sflush_r+0x9a>
 8029b60:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8029b62:	89a3      	ldrh	r3, [r4, #12]
 8029b64:	075a      	lsls	r2, r3, #29
 8029b66:	d505      	bpl.n	8029b74 <__sflush_r+0x48>
 8029b68:	6863      	ldr	r3, [r4, #4]
 8029b6a:	1ac0      	subs	r0, r0, r3
 8029b6c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8029b6e:	b10b      	cbz	r3, 8029b74 <__sflush_r+0x48>
 8029b70:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8029b72:	1ac0      	subs	r0, r0, r3
 8029b74:	2300      	movs	r3, #0
 8029b76:	4602      	mov	r2, r0
 8029b78:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8029b7a:	6a21      	ldr	r1, [r4, #32]
 8029b7c:	4628      	mov	r0, r5
 8029b7e:	47b0      	blx	r6
 8029b80:	1c43      	adds	r3, r0, #1
 8029b82:	89a3      	ldrh	r3, [r4, #12]
 8029b84:	d106      	bne.n	8029b94 <__sflush_r+0x68>
 8029b86:	6829      	ldr	r1, [r5, #0]
 8029b88:	291d      	cmp	r1, #29
 8029b8a:	d82b      	bhi.n	8029be4 <__sflush_r+0xb8>
 8029b8c:	4a29      	ldr	r2, [pc, #164]	; (8029c34 <__sflush_r+0x108>)
 8029b8e:	410a      	asrs	r2, r1
 8029b90:	07d6      	lsls	r6, r2, #31
 8029b92:	d427      	bmi.n	8029be4 <__sflush_r+0xb8>
 8029b94:	2200      	movs	r2, #0
 8029b96:	6062      	str	r2, [r4, #4]
 8029b98:	04d9      	lsls	r1, r3, #19
 8029b9a:	6922      	ldr	r2, [r4, #16]
 8029b9c:	6022      	str	r2, [r4, #0]
 8029b9e:	d504      	bpl.n	8029baa <__sflush_r+0x7e>
 8029ba0:	1c42      	adds	r2, r0, #1
 8029ba2:	d101      	bne.n	8029ba8 <__sflush_r+0x7c>
 8029ba4:	682b      	ldr	r3, [r5, #0]
 8029ba6:	b903      	cbnz	r3, 8029baa <__sflush_r+0x7e>
 8029ba8:	6560      	str	r0, [r4, #84]	; 0x54
 8029baa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8029bac:	602f      	str	r7, [r5, #0]
 8029bae:	2900      	cmp	r1, #0
 8029bb0:	d0c9      	beq.n	8029b46 <__sflush_r+0x1a>
 8029bb2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8029bb6:	4299      	cmp	r1, r3
 8029bb8:	d002      	beq.n	8029bc0 <__sflush_r+0x94>
 8029bba:	4628      	mov	r0, r5
 8029bbc:	f7ff fc96 	bl	80294ec <_free_r>
 8029bc0:	2000      	movs	r0, #0
 8029bc2:	6360      	str	r0, [r4, #52]	; 0x34
 8029bc4:	e7c0      	b.n	8029b48 <__sflush_r+0x1c>
 8029bc6:	2301      	movs	r3, #1
 8029bc8:	4628      	mov	r0, r5
 8029bca:	47b0      	blx	r6
 8029bcc:	1c41      	adds	r1, r0, #1
 8029bce:	d1c8      	bne.n	8029b62 <__sflush_r+0x36>
 8029bd0:	682b      	ldr	r3, [r5, #0]
 8029bd2:	2b00      	cmp	r3, #0
 8029bd4:	d0c5      	beq.n	8029b62 <__sflush_r+0x36>
 8029bd6:	2b1d      	cmp	r3, #29
 8029bd8:	d001      	beq.n	8029bde <__sflush_r+0xb2>
 8029bda:	2b16      	cmp	r3, #22
 8029bdc:	d101      	bne.n	8029be2 <__sflush_r+0xb6>
 8029bde:	602f      	str	r7, [r5, #0]
 8029be0:	e7b1      	b.n	8029b46 <__sflush_r+0x1a>
 8029be2:	89a3      	ldrh	r3, [r4, #12]
 8029be4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8029be8:	81a3      	strh	r3, [r4, #12]
 8029bea:	e7ad      	b.n	8029b48 <__sflush_r+0x1c>
 8029bec:	690f      	ldr	r7, [r1, #16]
 8029bee:	2f00      	cmp	r7, #0
 8029bf0:	d0a9      	beq.n	8029b46 <__sflush_r+0x1a>
 8029bf2:	0793      	lsls	r3, r2, #30
 8029bf4:	680e      	ldr	r6, [r1, #0]
 8029bf6:	bf08      	it	eq
 8029bf8:	694b      	ldreq	r3, [r1, #20]
 8029bfa:	600f      	str	r7, [r1, #0]
 8029bfc:	bf18      	it	ne
 8029bfe:	2300      	movne	r3, #0
 8029c00:	eba6 0807 	sub.w	r8, r6, r7
 8029c04:	608b      	str	r3, [r1, #8]
 8029c06:	f1b8 0f00 	cmp.w	r8, #0
 8029c0a:	dd9c      	ble.n	8029b46 <__sflush_r+0x1a>
 8029c0c:	6a21      	ldr	r1, [r4, #32]
 8029c0e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8029c10:	4643      	mov	r3, r8
 8029c12:	463a      	mov	r2, r7
 8029c14:	4628      	mov	r0, r5
 8029c16:	47b0      	blx	r6
 8029c18:	2800      	cmp	r0, #0
 8029c1a:	dc06      	bgt.n	8029c2a <__sflush_r+0xfe>
 8029c1c:	89a3      	ldrh	r3, [r4, #12]
 8029c1e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8029c22:	81a3      	strh	r3, [r4, #12]
 8029c24:	f04f 30ff 	mov.w	r0, #4294967295
 8029c28:	e78e      	b.n	8029b48 <__sflush_r+0x1c>
 8029c2a:	4407      	add	r7, r0
 8029c2c:	eba8 0800 	sub.w	r8, r8, r0
 8029c30:	e7e9      	b.n	8029c06 <__sflush_r+0xda>
 8029c32:	bf00      	nop
 8029c34:	dfbffffe 	.word	0xdfbffffe

08029c38 <_fflush_r>:
 8029c38:	b538      	push	{r3, r4, r5, lr}
 8029c3a:	690b      	ldr	r3, [r1, #16]
 8029c3c:	4605      	mov	r5, r0
 8029c3e:	460c      	mov	r4, r1
 8029c40:	b913      	cbnz	r3, 8029c48 <_fflush_r+0x10>
 8029c42:	2500      	movs	r5, #0
 8029c44:	4628      	mov	r0, r5
 8029c46:	bd38      	pop	{r3, r4, r5, pc}
 8029c48:	b118      	cbz	r0, 8029c52 <_fflush_r+0x1a>
 8029c4a:	6a03      	ldr	r3, [r0, #32]
 8029c4c:	b90b      	cbnz	r3, 8029c52 <_fflush_r+0x1a>
 8029c4e:	f7ff fa85 	bl	802915c <__sinit>
 8029c52:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8029c56:	2b00      	cmp	r3, #0
 8029c58:	d0f3      	beq.n	8029c42 <_fflush_r+0xa>
 8029c5a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8029c5c:	07d0      	lsls	r0, r2, #31
 8029c5e:	d404      	bmi.n	8029c6a <_fflush_r+0x32>
 8029c60:	0599      	lsls	r1, r3, #22
 8029c62:	d402      	bmi.n	8029c6a <_fflush_r+0x32>
 8029c64:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8029c66:	f7ff fbd2 	bl	802940e <__retarget_lock_acquire_recursive>
 8029c6a:	4628      	mov	r0, r5
 8029c6c:	4621      	mov	r1, r4
 8029c6e:	f7ff ff5d 	bl	8029b2c <__sflush_r>
 8029c72:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8029c74:	07da      	lsls	r2, r3, #31
 8029c76:	4605      	mov	r5, r0
 8029c78:	d4e4      	bmi.n	8029c44 <_fflush_r+0xc>
 8029c7a:	89a3      	ldrh	r3, [r4, #12]
 8029c7c:	059b      	lsls	r3, r3, #22
 8029c7e:	d4e1      	bmi.n	8029c44 <_fflush_r+0xc>
 8029c80:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8029c82:	f7ff fbc5 	bl	8029410 <__retarget_lock_release_recursive>
 8029c86:	e7dd      	b.n	8029c44 <_fflush_r+0xc>

08029c88 <__swbuf_r>:
 8029c88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029c8a:	460e      	mov	r6, r1
 8029c8c:	4614      	mov	r4, r2
 8029c8e:	4605      	mov	r5, r0
 8029c90:	b118      	cbz	r0, 8029c9a <__swbuf_r+0x12>
 8029c92:	6a03      	ldr	r3, [r0, #32]
 8029c94:	b90b      	cbnz	r3, 8029c9a <__swbuf_r+0x12>
 8029c96:	f7ff fa61 	bl	802915c <__sinit>
 8029c9a:	69a3      	ldr	r3, [r4, #24]
 8029c9c:	60a3      	str	r3, [r4, #8]
 8029c9e:	89a3      	ldrh	r3, [r4, #12]
 8029ca0:	071a      	lsls	r2, r3, #28
 8029ca2:	d525      	bpl.n	8029cf0 <__swbuf_r+0x68>
 8029ca4:	6923      	ldr	r3, [r4, #16]
 8029ca6:	b31b      	cbz	r3, 8029cf0 <__swbuf_r+0x68>
 8029ca8:	6823      	ldr	r3, [r4, #0]
 8029caa:	6922      	ldr	r2, [r4, #16]
 8029cac:	1a98      	subs	r0, r3, r2
 8029cae:	6963      	ldr	r3, [r4, #20]
 8029cb0:	b2f6      	uxtb	r6, r6
 8029cb2:	4283      	cmp	r3, r0
 8029cb4:	4637      	mov	r7, r6
 8029cb6:	dc04      	bgt.n	8029cc2 <__swbuf_r+0x3a>
 8029cb8:	4621      	mov	r1, r4
 8029cba:	4628      	mov	r0, r5
 8029cbc:	f7ff ffbc 	bl	8029c38 <_fflush_r>
 8029cc0:	b9e0      	cbnz	r0, 8029cfc <__swbuf_r+0x74>
 8029cc2:	68a3      	ldr	r3, [r4, #8]
 8029cc4:	3b01      	subs	r3, #1
 8029cc6:	60a3      	str	r3, [r4, #8]
 8029cc8:	6823      	ldr	r3, [r4, #0]
 8029cca:	1c5a      	adds	r2, r3, #1
 8029ccc:	6022      	str	r2, [r4, #0]
 8029cce:	701e      	strb	r6, [r3, #0]
 8029cd0:	6962      	ldr	r2, [r4, #20]
 8029cd2:	1c43      	adds	r3, r0, #1
 8029cd4:	429a      	cmp	r2, r3
 8029cd6:	d004      	beq.n	8029ce2 <__swbuf_r+0x5a>
 8029cd8:	89a3      	ldrh	r3, [r4, #12]
 8029cda:	07db      	lsls	r3, r3, #31
 8029cdc:	d506      	bpl.n	8029cec <__swbuf_r+0x64>
 8029cde:	2e0a      	cmp	r6, #10
 8029ce0:	d104      	bne.n	8029cec <__swbuf_r+0x64>
 8029ce2:	4621      	mov	r1, r4
 8029ce4:	4628      	mov	r0, r5
 8029ce6:	f7ff ffa7 	bl	8029c38 <_fflush_r>
 8029cea:	b938      	cbnz	r0, 8029cfc <__swbuf_r+0x74>
 8029cec:	4638      	mov	r0, r7
 8029cee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029cf0:	4621      	mov	r1, r4
 8029cf2:	4628      	mov	r0, r5
 8029cf4:	f000 f806 	bl	8029d04 <__swsetup_r>
 8029cf8:	2800      	cmp	r0, #0
 8029cfa:	d0d5      	beq.n	8029ca8 <__swbuf_r+0x20>
 8029cfc:	f04f 37ff 	mov.w	r7, #4294967295
 8029d00:	e7f4      	b.n	8029cec <__swbuf_r+0x64>
	...

08029d04 <__swsetup_r>:
 8029d04:	b538      	push	{r3, r4, r5, lr}
 8029d06:	4b2a      	ldr	r3, [pc, #168]	; (8029db0 <__swsetup_r+0xac>)
 8029d08:	4605      	mov	r5, r0
 8029d0a:	6818      	ldr	r0, [r3, #0]
 8029d0c:	460c      	mov	r4, r1
 8029d0e:	b118      	cbz	r0, 8029d18 <__swsetup_r+0x14>
 8029d10:	6a03      	ldr	r3, [r0, #32]
 8029d12:	b90b      	cbnz	r3, 8029d18 <__swsetup_r+0x14>
 8029d14:	f7ff fa22 	bl	802915c <__sinit>
 8029d18:	89a3      	ldrh	r3, [r4, #12]
 8029d1a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029d1e:	0718      	lsls	r0, r3, #28
 8029d20:	d422      	bmi.n	8029d68 <__swsetup_r+0x64>
 8029d22:	06d9      	lsls	r1, r3, #27
 8029d24:	d407      	bmi.n	8029d36 <__swsetup_r+0x32>
 8029d26:	2309      	movs	r3, #9
 8029d28:	602b      	str	r3, [r5, #0]
 8029d2a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8029d2e:	81a3      	strh	r3, [r4, #12]
 8029d30:	f04f 30ff 	mov.w	r0, #4294967295
 8029d34:	e034      	b.n	8029da0 <__swsetup_r+0x9c>
 8029d36:	0758      	lsls	r0, r3, #29
 8029d38:	d512      	bpl.n	8029d60 <__swsetup_r+0x5c>
 8029d3a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8029d3c:	b141      	cbz	r1, 8029d50 <__swsetup_r+0x4c>
 8029d3e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8029d42:	4299      	cmp	r1, r3
 8029d44:	d002      	beq.n	8029d4c <__swsetup_r+0x48>
 8029d46:	4628      	mov	r0, r5
 8029d48:	f7ff fbd0 	bl	80294ec <_free_r>
 8029d4c:	2300      	movs	r3, #0
 8029d4e:	6363      	str	r3, [r4, #52]	; 0x34
 8029d50:	89a3      	ldrh	r3, [r4, #12]
 8029d52:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8029d56:	81a3      	strh	r3, [r4, #12]
 8029d58:	2300      	movs	r3, #0
 8029d5a:	6063      	str	r3, [r4, #4]
 8029d5c:	6923      	ldr	r3, [r4, #16]
 8029d5e:	6023      	str	r3, [r4, #0]
 8029d60:	89a3      	ldrh	r3, [r4, #12]
 8029d62:	f043 0308 	orr.w	r3, r3, #8
 8029d66:	81a3      	strh	r3, [r4, #12]
 8029d68:	6923      	ldr	r3, [r4, #16]
 8029d6a:	b94b      	cbnz	r3, 8029d80 <__swsetup_r+0x7c>
 8029d6c:	89a3      	ldrh	r3, [r4, #12]
 8029d6e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8029d72:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8029d76:	d003      	beq.n	8029d80 <__swsetup_r+0x7c>
 8029d78:	4621      	mov	r1, r4
 8029d7a:	4628      	mov	r0, r5
 8029d7c:	f000 f840 	bl	8029e00 <__smakebuf_r>
 8029d80:	89a0      	ldrh	r0, [r4, #12]
 8029d82:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029d86:	f010 0301 	ands.w	r3, r0, #1
 8029d8a:	d00a      	beq.n	8029da2 <__swsetup_r+0x9e>
 8029d8c:	2300      	movs	r3, #0
 8029d8e:	60a3      	str	r3, [r4, #8]
 8029d90:	6963      	ldr	r3, [r4, #20]
 8029d92:	425b      	negs	r3, r3
 8029d94:	61a3      	str	r3, [r4, #24]
 8029d96:	6923      	ldr	r3, [r4, #16]
 8029d98:	b943      	cbnz	r3, 8029dac <__swsetup_r+0xa8>
 8029d9a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8029d9e:	d1c4      	bne.n	8029d2a <__swsetup_r+0x26>
 8029da0:	bd38      	pop	{r3, r4, r5, pc}
 8029da2:	0781      	lsls	r1, r0, #30
 8029da4:	bf58      	it	pl
 8029da6:	6963      	ldrpl	r3, [r4, #20]
 8029da8:	60a3      	str	r3, [r4, #8]
 8029daa:	e7f4      	b.n	8029d96 <__swsetup_r+0x92>
 8029dac:	2000      	movs	r0, #0
 8029dae:	e7f7      	b.n	8029da0 <__swsetup_r+0x9c>
 8029db0:	20000390 	.word	0x20000390

08029db4 <__swhatbuf_r>:
 8029db4:	b570      	push	{r4, r5, r6, lr}
 8029db6:	460c      	mov	r4, r1
 8029db8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029dbc:	2900      	cmp	r1, #0
 8029dbe:	b096      	sub	sp, #88	; 0x58
 8029dc0:	4615      	mov	r5, r2
 8029dc2:	461e      	mov	r6, r3
 8029dc4:	da0d      	bge.n	8029de2 <__swhatbuf_r+0x2e>
 8029dc6:	89a3      	ldrh	r3, [r4, #12]
 8029dc8:	f013 0f80 	tst.w	r3, #128	; 0x80
 8029dcc:	f04f 0100 	mov.w	r1, #0
 8029dd0:	bf0c      	ite	eq
 8029dd2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8029dd6:	2340      	movne	r3, #64	; 0x40
 8029dd8:	2000      	movs	r0, #0
 8029dda:	6031      	str	r1, [r6, #0]
 8029ddc:	602b      	str	r3, [r5, #0]
 8029dde:	b016      	add	sp, #88	; 0x58
 8029de0:	bd70      	pop	{r4, r5, r6, pc}
 8029de2:	466a      	mov	r2, sp
 8029de4:	f000 f848 	bl	8029e78 <_fstat_r>
 8029de8:	2800      	cmp	r0, #0
 8029dea:	dbec      	blt.n	8029dc6 <__swhatbuf_r+0x12>
 8029dec:	9901      	ldr	r1, [sp, #4]
 8029dee:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8029df2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8029df6:	4259      	negs	r1, r3
 8029df8:	4159      	adcs	r1, r3
 8029dfa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8029dfe:	e7eb      	b.n	8029dd8 <__swhatbuf_r+0x24>

08029e00 <__smakebuf_r>:
 8029e00:	898b      	ldrh	r3, [r1, #12]
 8029e02:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029e04:	079d      	lsls	r5, r3, #30
 8029e06:	4606      	mov	r6, r0
 8029e08:	460c      	mov	r4, r1
 8029e0a:	d507      	bpl.n	8029e1c <__smakebuf_r+0x1c>
 8029e0c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8029e10:	6023      	str	r3, [r4, #0]
 8029e12:	6123      	str	r3, [r4, #16]
 8029e14:	2301      	movs	r3, #1
 8029e16:	6163      	str	r3, [r4, #20]
 8029e18:	b002      	add	sp, #8
 8029e1a:	bd70      	pop	{r4, r5, r6, pc}
 8029e1c:	ab01      	add	r3, sp, #4
 8029e1e:	466a      	mov	r2, sp
 8029e20:	f7ff ffc8 	bl	8029db4 <__swhatbuf_r>
 8029e24:	9900      	ldr	r1, [sp, #0]
 8029e26:	4605      	mov	r5, r0
 8029e28:	4630      	mov	r0, r6
 8029e2a:	f7ff f871 	bl	8028f10 <_malloc_r>
 8029e2e:	b948      	cbnz	r0, 8029e44 <__smakebuf_r+0x44>
 8029e30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8029e34:	059a      	lsls	r2, r3, #22
 8029e36:	d4ef      	bmi.n	8029e18 <__smakebuf_r+0x18>
 8029e38:	f023 0303 	bic.w	r3, r3, #3
 8029e3c:	f043 0302 	orr.w	r3, r3, #2
 8029e40:	81a3      	strh	r3, [r4, #12]
 8029e42:	e7e3      	b.n	8029e0c <__smakebuf_r+0xc>
 8029e44:	89a3      	ldrh	r3, [r4, #12]
 8029e46:	6020      	str	r0, [r4, #0]
 8029e48:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8029e4c:	81a3      	strh	r3, [r4, #12]
 8029e4e:	9b00      	ldr	r3, [sp, #0]
 8029e50:	6163      	str	r3, [r4, #20]
 8029e52:	9b01      	ldr	r3, [sp, #4]
 8029e54:	6120      	str	r0, [r4, #16]
 8029e56:	b15b      	cbz	r3, 8029e70 <__smakebuf_r+0x70>
 8029e58:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029e5c:	4630      	mov	r0, r6
 8029e5e:	f000 f81d 	bl	8029e9c <_isatty_r>
 8029e62:	b128      	cbz	r0, 8029e70 <__smakebuf_r+0x70>
 8029e64:	89a3      	ldrh	r3, [r4, #12]
 8029e66:	f023 0303 	bic.w	r3, r3, #3
 8029e6a:	f043 0301 	orr.w	r3, r3, #1
 8029e6e:	81a3      	strh	r3, [r4, #12]
 8029e70:	89a3      	ldrh	r3, [r4, #12]
 8029e72:	431d      	orrs	r5, r3
 8029e74:	81a5      	strh	r5, [r4, #12]
 8029e76:	e7cf      	b.n	8029e18 <__smakebuf_r+0x18>

08029e78 <_fstat_r>:
 8029e78:	b538      	push	{r3, r4, r5, lr}
 8029e7a:	4d07      	ldr	r5, [pc, #28]	; (8029e98 <_fstat_r+0x20>)
 8029e7c:	2300      	movs	r3, #0
 8029e7e:	4604      	mov	r4, r0
 8029e80:	4608      	mov	r0, r1
 8029e82:	4611      	mov	r1, r2
 8029e84:	602b      	str	r3, [r5, #0]
 8029e86:	f7db f938 	bl	80050fa <_fstat>
 8029e8a:	1c43      	adds	r3, r0, #1
 8029e8c:	d102      	bne.n	8029e94 <_fstat_r+0x1c>
 8029e8e:	682b      	ldr	r3, [r5, #0]
 8029e90:	b103      	cbz	r3, 8029e94 <_fstat_r+0x1c>
 8029e92:	6023      	str	r3, [r4, #0]
 8029e94:	bd38      	pop	{r3, r4, r5, pc}
 8029e96:	bf00      	nop
 8029e98:	20026428 	.word	0x20026428

08029e9c <_isatty_r>:
 8029e9c:	b538      	push	{r3, r4, r5, lr}
 8029e9e:	4d06      	ldr	r5, [pc, #24]	; (8029eb8 <_isatty_r+0x1c>)
 8029ea0:	2300      	movs	r3, #0
 8029ea2:	4604      	mov	r4, r0
 8029ea4:	4608      	mov	r0, r1
 8029ea6:	602b      	str	r3, [r5, #0]
 8029ea8:	f7db f937 	bl	800511a <_isatty>
 8029eac:	1c43      	adds	r3, r0, #1
 8029eae:	d102      	bne.n	8029eb6 <_isatty_r+0x1a>
 8029eb0:	682b      	ldr	r3, [r5, #0]
 8029eb2:	b103      	cbz	r3, 8029eb6 <_isatty_r+0x1a>
 8029eb4:	6023      	str	r3, [r4, #0]
 8029eb6:	bd38      	pop	{r3, r4, r5, pc}
 8029eb8:	20026428 	.word	0x20026428

08029ebc <_init>:
 8029ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029ebe:	bf00      	nop
 8029ec0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029ec2:	bc08      	pop	{r3}
 8029ec4:	469e      	mov	lr, r3
 8029ec6:	4770      	bx	lr

08029ec8 <_fini>:
 8029ec8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029eca:	bf00      	nop
 8029ecc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029ece:	bc08      	pop	{r3}
 8029ed0:	469e      	mov	lr, r3
 8029ed2:	4770      	bx	lr
